

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Wed Aug 08 16:34:16 2018

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text23,local,class=CODE,merge=1,delta=2
    30                           	psect	text33,local,class=CODE,merge=1,delta=2
    31                           	psect	swtext1,local,class=CONST,delta=2
    32                           	psect	text42,local,class=CODE,merge=1,delta=2
    33                           	psect	text50,local,class=CODE,merge=1,delta=2
    34                           	psect	text51,local,class=CODE,merge=1,delta=2
    35                           	psect	text56,local,class=CODE,merge=1,delta=2
    36                           	psect	text57,local,class=CODE,merge=1,delta=2
    37                           	psect	text58,local,class=CODE,merge=1,delta=2
    38                           	psect	text59,local,class=CODE,merge=1,delta=2
    39                           	psect	text63,local,class=CODE,merge=1,delta=2
    40                           	psect	text66,local,class=CODE,merge=1,delta=2
    41                           	psect	text71,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text92,local,class=CODE,merge=1,delta=2
    44                           	psect	swtext2,local,class=CONST,delta=2
    45                           	psect	text97,local,class=CODE,merge=1,delta=2
    46                           	psect	text98,local,class=CODE,merge=1,delta=2
    47                           	psect	text99,local,class=CODE,merge=1,delta=2
    48                           	psect	text100,local,class=CODE,merge=1,delta=2
    49                           	psect	text101,local,class=CODE,merge=1,delta=2
    50                           	psect	text102,local,class=CODE,merge=1,delta=2
    51                           	psect	swtext3,local,class=CONST,delta=2
    52                           	psect	swtext4,local,class=CONST,delta=2
    53                           	psect	swtext5,local,class=CONST,delta=2
    54                           	psect	swtext6,local,class=CONST,delta=2
    55                           	psect	text107,local,class=CODE,merge=1,delta=2
    56                           	psect	text108,local,class=CODE,merge=1,delta=2
    57                           	psect	text111,local,class=CODE,merge=1,delta=2
    58                           	psect	text112,local,class=CODE,merge=1,delta=2
    59                           	psect	text113,local,class=CODE,merge=1,delta=2
    60                           	psect	pa_nodes0,global,class=CODE,delta=2
    61                           	dabs	1,0x620,48
    62                           	dabs	1,0x5AE,66
    63                           	dabs	1,0x237E,0,_m_led_para
    64                           	dabs	1,0x7E,2
    65  0000                     
    66                           ; Version 1.45
    67                           ; Generated 16/11/2017 GMT
    68                           ; 
    69                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F18345 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0097                     	;# 
   143  009B                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  0111                     	;# 
   153  0112                     	;# 
   154  0113                     	;# 
   155  0114                     	;# 
   156  0115                     	;# 
   157  0116                     	;# 
   158  0117                     	;# 
   159  0118                     	;# 
   160  0119                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  018E                     	;# 
   164  0197                     	;# 
   165  0199                     	;# 
   166  0199                     	;# 
   167  0199                     	;# 
   168  019A                     	;# 
   169  019A                     	;# 
   170  019A                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019C                     	;# 
   177  019C                     	;# 
   178  019C                     	;# 
   179  019D                     	;# 
   180  019D                     	;# 
   181  019D                     	;# 
   182  019E                     	;# 
   183  019E                     	;# 
   184  019E                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  019F                     	;# 
   188  019F                     	;# 
   189  019F                     	;# 
   190  020C                     	;# 
   191  020D                     	;# 
   192  020E                     	;# 
   193  0211                     	;# 
   194  0211                     	;# 
   195  0212                     	;# 
   196  0212                     	;# 
   197  0213                     	;# 
   198  0213                     	;# 
   199  0214                     	;# 
   200  0214                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0215                     	;# 
   205  0216                     	;# 
   206  0216                     	;# 
   207  0217                     	;# 
   208  0217                     	;# 
   209  0219                     	;# 
   210  021A                     	;# 
   211  021B                     	;# 
   212  021C                     	;# 
   213  021D                     	;# 
   214  021D                     	;# 
   215  021E                     	;# 
   216  021F                     	;# 
   217  028C                     	;# 
   218  028D                     	;# 
   219  028E                     	;# 
   220  0291                     	;# 
   221  0291                     	;# 
   222  0292                     	;# 
   223  0293                     	;# 
   224  0294                     	;# 
   225  0295                     	;# 
   226  0295                     	;# 
   227  0296                     	;# 
   228  0297                     	;# 
   229  0298                     	;# 
   230  029F                     	;# 
   231  030C                     	;# 
   232  030D                     	;# 
   233  030E                     	;# 
   234  0311                     	;# 
   235  0311                     	;# 
   236  0312                     	;# 
   237  0313                     	;# 
   238  0314                     	;# 
   239  0315                     	;# 
   240  0315                     	;# 
   241  0316                     	;# 
   242  0317                     	;# 
   243  0318                     	;# 
   244  038C                     	;# 
   245  038D                     	;# 
   246  038E                     	;# 
   247  0391                     	;# 
   248  0392                     	;# 
   249  0393                     	;# 
   250  0394                     	;# 
   251  0395                     	;# 
   252  0396                     	;# 
   253  0397                     	;# 
   254  0398                     	;# 
   255  0399                     	;# 
   256  039A                     	;# 
   257  039C                     	;# 
   258  039D                     	;# 
   259  039E                     	;# 
   260  039F                     	;# 
   261  0411                     	;# 
   262  0411                     	;# 
   263  0412                     	;# 
   264  0413                     	;# 
   265  0414                     	;# 
   266  0415                     	;# 
   267  0416                     	;# 
   268  0417                     	;# 
   269  0418                     	;# 
   270  0418                     	;# 
   271  0419                     	;# 
   272  041A                     	;# 
   273  041B                     	;# 
   274  041C                     	;# 
   275  041D                     	;# 
   276  041E                     	;# 
   277  041F                     	;# 
   278  0498                     	;# 
   279  0498                     	;# 
   280  0499                     	;# 
   281  049A                     	;# 
   282  049B                     	;# 
   283  049B                     	;# 
   284  049C                     	;# 
   285  049D                     	;# 
   286  049E                     	;# 
   287  049F                     	;# 
   288  0617                     	;# 
   289  0618                     	;# 
   290  0619                     	;# 
   291  0619                     	;# 
   292  061A                     	;# 
   293  061B                     	;# 
   294  061C                     	;# 
   295  061C                     	;# 
   296  061F                     	;# 
   297  0691                     	;# 
   298  0692                     	;# 
   299  0693                     	;# 
   300  0694                     	;# 
   301  0695                     	;# 
   302  0696                     	;# 
   303  0697                     	;# 
   304  0698                     	;# 
   305  0699                     	;# 
   306  0711                     	;# 
   307  0712                     	;# 
   308  0713                     	;# 
   309  0714                     	;# 
   310  0715                     	;# 
   311  0716                     	;# 
   312  0717                     	;# 
   313  0718                     	;# 
   314  0719                     	;# 
   315  0891                     	;# 
   316  0891                     	;# 
   317  0891                     	;# 
   318  0891                     	;# 
   319  0891                     	;# 
   320  0891                     	;# 
   321  0892                     	;# 
   322  0892                     	;# 
   323  0892                     	;# 
   324  0893                     	;# 
   325  0893                     	;# 
   326  0893                     	;# 
   327  0893                     	;# 
   328  0893                     	;# 
   329  0893                     	;# 
   330  0894                     	;# 
   331  0894                     	;# 
   332  0894                     	;# 
   333  0895                     	;# 
   334  0895                     	;# 
   335  0895                     	;# 
   336  0896                     	;# 
   337  0896                     	;# 
   338  0896                     	;# 
   339  089B                     	;# 
   340  0911                     	;# 
   341  0912                     	;# 
   342  0913                     	;# 
   343  0914                     	;# 
   344  0915                     	;# 
   345  0916                     	;# 
   346  0918                     	;# 
   347  0919                     	;# 
   348  091A                     	;# 
   349  091B                     	;# 
   350  091C                     	;# 
   351  091D                     	;# 
   352  091E                     	;# 
   353  091F                     	;# 
   354  0E0F                     	;# 
   355  0E10                     	;# 
   356  0E11                     	;# 
   357  0E12                     	;# 
   358  0E13                     	;# 
   359  0E14                     	;# 
   360  0E15                     	;# 
   361  0E16                     	;# 
   362  0E17                     	;# 
   363  0E18                     	;# 
   364  0E19                     	;# 
   365  0E1A                     	;# 
   366  0E1B                     	;# 
   367  0E1C                     	;# 
   368  0E1D                     	;# 
   369  0E1E                     	;# 
   370  0E1F                     	;# 
   371  0E20                     	;# 
   372  0E21                     	;# 
   373  0E22                     	;# 
   374  0E24                     	;# 
   375  0E25                     	;# 
   376  0E28                     	;# 
   377  0E29                     	;# 
   378  0E2A                     	;# 
   379  0E2B                     	;# 
   380  0E2C                     	;# 
   381  0E2D                     	;# 
   382  0E2E                     	;# 
   383  0E2F                     	;# 
   384  0E90                     	;# 
   385  0E91                     	;# 
   386  0E92                     	;# 
   387  0E94                     	;# 
   388  0E95                     	;# 
   389  0E9C                     	;# 
   390  0E9D                     	;# 
   391  0E9E                     	;# 
   392  0E9F                     	;# 
   393  0EA0                     	;# 
   394  0EA1                     	;# 
   395  0EA2                     	;# 
   396  0EA3                     	;# 
   397  0EA4                     	;# 
   398  0EA5                     	;# 
   399  0EA6                     	;# 
   400  0EA7                     	;# 
   401  0F0F                     	;# 
   402  0F10                     	;# 
   403  0F11                     	;# 
   404  0F12                     	;# 
   405  0F13                     	;# 
   406  0F14                     	;# 
   407  0F15                     	;# 
   408  0F16                     	;# 
   409  0F17                     	;# 
   410  0F18                     	;# 
   411  0F19                     	;# 
   412  0F1A                     	;# 
   413  0F1B                     	;# 
   414  0F1C                     	;# 
   415  0F1D                     	;# 
   416  0F1E                     	;# 
   417  0F1F                     	;# 
   418  0F20                     	;# 
   419  0F21                     	;# 
   420  0F22                     	;# 
   421  0F23                     	;# 
   422  0F24                     	;# 
   423  0F25                     	;# 
   424  0F26                     	;# 
   425  0F27                     	;# 
   426  0F28                     	;# 
   427  0F29                     	;# 
   428  0F2A                     	;# 
   429  0F2B                     	;# 
   430  0F2C                     	;# 
   431  0F2D                     	;# 
   432  0F2E                     	;# 
   433  0F2F                     	;# 
   434  0F30                     	;# 
   435  0F31                     	;# 
   436  0F32                     	;# 
   437  0F33                     	;# 
   438  0F34                     	;# 
   439  0F35                     	;# 
   440  0F36                     	;# 
   441  0F37                     	;# 
   442  0FE4                     	;# 
   443  0FE5                     	;# 
   444  0FE6                     	;# 
   445  0FE7                     	;# 
   446  0FE8                     	;# 
   447  0FE9                     	;# 
   448  0FEA                     	;# 
   449  0FEB                     	;# 
   450  0FED                     	;# 
   451  0FEE                     	;# 
   452  0FEF                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0008                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  000E                     	;# 
   468  0010                     	;# 
   469  0011                     	;# 
   470  0012                     	;# 
   471  0013                     	;# 
   472  0014                     	;# 
   473  0015                     	;# 
   474  0015                     	;# 
   475  0016                     	;# 
   476  0016                     	;# 
   477  0017                     	;# 
   478  0018                     	;# 
   479  0019                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001C                     	;# 
   484  001D                     	;# 
   485  001E                     	;# 
   486  001F                     	;# 
   487  008C                     	;# 
   488  008D                     	;# 
   489  008E                     	;# 
   490  0090                     	;# 
   491  0091                     	;# 
   492  0092                     	;# 
   493  0093                     	;# 
   494  0094                     	;# 
   495  0097                     	;# 
   496  009B                     	;# 
   497  009B                     	;# 
   498  009C                     	;# 
   499  009D                     	;# 
   500  009E                     	;# 
   501  009F                     	;# 
   502  010C                     	;# 
   503  010D                     	;# 
   504  010E                     	;# 
   505  0111                     	;# 
   506  0112                     	;# 
   507  0113                     	;# 
   508  0114                     	;# 
   509  0115                     	;# 
   510  0116                     	;# 
   511  0117                     	;# 
   512  0118                     	;# 
   513  0119                     	;# 
   514  018C                     	;# 
   515  018D                     	;# 
   516  018E                     	;# 
   517  0197                     	;# 
   518  0199                     	;# 
   519  0199                     	;# 
   520  0199                     	;# 
   521  019A                     	;# 
   522  019A                     	;# 
   523  019A                     	;# 
   524  019B                     	;# 
   525  019B                     	;# 
   526  019B                     	;# 
   527  019B                     	;# 
   528  019B                     	;# 
   529  019C                     	;# 
   530  019C                     	;# 
   531  019C                     	;# 
   532  019D                     	;# 
   533  019D                     	;# 
   534  019D                     	;# 
   535  019E                     	;# 
   536  019E                     	;# 
   537  019E                     	;# 
   538  019F                     	;# 
   539  019F                     	;# 
   540  019F                     	;# 
   541  019F                     	;# 
   542  019F                     	;# 
   543  020C                     	;# 
   544  020D                     	;# 
   545  020E                     	;# 
   546  0211                     	;# 
   547  0211                     	;# 
   548  0212                     	;# 
   549  0212                     	;# 
   550  0213                     	;# 
   551  0213                     	;# 
   552  0214                     	;# 
   553  0214                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0215                     	;# 
   557  0215                     	;# 
   558  0216                     	;# 
   559  0216                     	;# 
   560  0217                     	;# 
   561  0217                     	;# 
   562  0219                     	;# 
   563  021A                     	;# 
   564  021B                     	;# 
   565  021C                     	;# 
   566  021D                     	;# 
   567  021D                     	;# 
   568  021E                     	;# 
   569  021F                     	;# 
   570  028C                     	;# 
   571  028D                     	;# 
   572  028E                     	;# 
   573  0291                     	;# 
   574  0291                     	;# 
   575  0292                     	;# 
   576  0293                     	;# 
   577  0294                     	;# 
   578  0295                     	;# 
   579  0295                     	;# 
   580  0296                     	;# 
   581  0297                     	;# 
   582  0298                     	;# 
   583  029F                     	;# 
   584  030C                     	;# 
   585  030D                     	;# 
   586  030E                     	;# 
   587  0311                     	;# 
   588  0311                     	;# 
   589  0312                     	;# 
   590  0313                     	;# 
   591  0314                     	;# 
   592  0315                     	;# 
   593  0315                     	;# 
   594  0316                     	;# 
   595  0317                     	;# 
   596  0318                     	;# 
   597  038C                     	;# 
   598  038D                     	;# 
   599  038E                     	;# 
   600  0391                     	;# 
   601  0392                     	;# 
   602  0393                     	;# 
   603  0394                     	;# 
   604  0395                     	;# 
   605  0396                     	;# 
   606  0397                     	;# 
   607  0398                     	;# 
   608  0399                     	;# 
   609  039A                     	;# 
   610  039C                     	;# 
   611  039D                     	;# 
   612  039E                     	;# 
   613  039F                     	;# 
   614  0411                     	;# 
   615  0411                     	;# 
   616  0412                     	;# 
   617  0413                     	;# 
   618  0414                     	;# 
   619  0415                     	;# 
   620  0416                     	;# 
   621  0417                     	;# 
   622  0418                     	;# 
   623  0418                     	;# 
   624  0419                     	;# 
   625  041A                     	;# 
   626  041B                     	;# 
   627  041C                     	;# 
   628  041D                     	;# 
   629  041E                     	;# 
   630  041F                     	;# 
   631  0498                     	;# 
   632  0498                     	;# 
   633  0499                     	;# 
   634  049A                     	;# 
   635  049B                     	;# 
   636  049B                     	;# 
   637  049C                     	;# 
   638  049D                     	;# 
   639  049E                     	;# 
   640  049F                     	;# 
   641  0617                     	;# 
   642  0618                     	;# 
   643  0619                     	;# 
   644  0619                     	;# 
   645  061A                     	;# 
   646  061B                     	;# 
   647  061C                     	;# 
   648  061C                     	;# 
   649  061F                     	;# 
   650  0691                     	;# 
   651  0692                     	;# 
   652  0693                     	;# 
   653  0694                     	;# 
   654  0695                     	;# 
   655  0696                     	;# 
   656  0697                     	;# 
   657  0698                     	;# 
   658  0699                     	;# 
   659  0711                     	;# 
   660  0712                     	;# 
   661  0713                     	;# 
   662  0714                     	;# 
   663  0715                     	;# 
   664  0716                     	;# 
   665  0717                     	;# 
   666  0718                     	;# 
   667  0719                     	;# 
   668  0891                     	;# 
   669  0891                     	;# 
   670  0891                     	;# 
   671  0891                     	;# 
   672  0891                     	;# 
   673  0891                     	;# 
   674  0892                     	;# 
   675  0892                     	;# 
   676  0892                     	;# 
   677  0893                     	;# 
   678  0893                     	;# 
   679  0893                     	;# 
   680  0893                     	;# 
   681  0893                     	;# 
   682  0893                     	;# 
   683  0894                     	;# 
   684  0894                     	;# 
   685  0894                     	;# 
   686  0895                     	;# 
   687  0895                     	;# 
   688  0895                     	;# 
   689  0896                     	;# 
   690  0896                     	;# 
   691  0896                     	;# 
   692  089B                     	;# 
   693  0911                     	;# 
   694  0912                     	;# 
   695  0913                     	;# 
   696  0914                     	;# 
   697  0915                     	;# 
   698  0916                     	;# 
   699  0918                     	;# 
   700  0919                     	;# 
   701  091A                     	;# 
   702  091B                     	;# 
   703  091C                     	;# 
   704  091D                     	;# 
   705  091E                     	;# 
   706  091F                     	;# 
   707  0E0F                     	;# 
   708  0E10                     	;# 
   709  0E11                     	;# 
   710  0E12                     	;# 
   711  0E13                     	;# 
   712  0E14                     	;# 
   713  0E15                     	;# 
   714  0E16                     	;# 
   715  0E17                     	;# 
   716  0E18                     	;# 
   717  0E19                     	;# 
   718  0E1A                     	;# 
   719  0E1B                     	;# 
   720  0E1C                     	;# 
   721  0E1D                     	;# 
   722  0E1E                     	;# 
   723  0E1F                     	;# 
   724  0E20                     	;# 
   725  0E21                     	;# 
   726  0E22                     	;# 
   727  0E24                     	;# 
   728  0E25                     	;# 
   729  0E28                     	;# 
   730  0E29                     	;# 
   731  0E2A                     	;# 
   732  0E2B                     	;# 
   733  0E2C                     	;# 
   734  0E2D                     	;# 
   735  0E2E                     	;# 
   736  0E2F                     	;# 
   737  0E90                     	;# 
   738  0E91                     	;# 
   739  0E92                     	;# 
   740  0E94                     	;# 
   741  0E95                     	;# 
   742  0E9C                     	;# 
   743  0E9D                     	;# 
   744  0E9E                     	;# 
   745  0E9F                     	;# 
   746  0EA0                     	;# 
   747  0EA1                     	;# 
   748  0EA2                     	;# 
   749  0EA3                     	;# 
   750  0EA4                     	;# 
   751  0EA5                     	;# 
   752  0EA6                     	;# 
   753  0EA7                     	;# 
   754  0F0F                     	;# 
   755  0F10                     	;# 
   756  0F11                     	;# 
   757  0F12                     	;# 
   758  0F13                     	;# 
   759  0F14                     	;# 
   760  0F15                     	;# 
   761  0F16                     	;# 
   762  0F17                     	;# 
   763  0F18                     	;# 
   764  0F19                     	;# 
   765  0F1A                     	;# 
   766  0F1B                     	;# 
   767  0F1C                     	;# 
   768  0F1D                     	;# 
   769  0F1E                     	;# 
   770  0F1F                     	;# 
   771  0F20                     	;# 
   772  0F21                     	;# 
   773  0F22                     	;# 
   774  0F23                     	;# 
   775  0F24                     	;# 
   776  0F25                     	;# 
   777  0F26                     	;# 
   778  0F27                     	;# 
   779  0F28                     	;# 
   780  0F29                     	;# 
   781  0F2A                     	;# 
   782  0F2B                     	;# 
   783  0F2C                     	;# 
   784  0F2D                     	;# 
   785  0F2E                     	;# 
   786  0F2F                     	;# 
   787  0F30                     	;# 
   788  0F31                     	;# 
   789  0F32                     	;# 
   790  0F33                     	;# 
   791  0F34                     	;# 
   792  0F35                     	;# 
   793  0F36                     	;# 
   794  0F37                     	;# 
   795  0FE4                     	;# 
   796  0FE5                     	;# 
   797  0FE6                     	;# 
   798  0FE7                     	;# 
   799  0FE8                     	;# 
   800  0FE9                     	;# 
   801  0FEA                     	;# 
   802  0FEB                     	;# 
   803  0FED                     	;# 
   804  0FEE                     	;# 
   805  0FEF                     	;# 
   806  0000                     	;# 
   807  0001                     	;# 
   808  0002                     	;# 
   809  0003                     	;# 
   810  0004                     	;# 
   811  0005                     	;# 
   812  0006                     	;# 
   813  0007                     	;# 
   814  0008                     	;# 
   815  0009                     	;# 
   816  000A                     	;# 
   817  000B                     	;# 
   818  000C                     	;# 
   819  000D                     	;# 
   820  000E                     	;# 
   821  0010                     	;# 
   822  0011                     	;# 
   823  0012                     	;# 
   824  0013                     	;# 
   825  0014                     	;# 
   826  0015                     	;# 
   827  0015                     	;# 
   828  0016                     	;# 
   829  0016                     	;# 
   830  0017                     	;# 
   831  0018                     	;# 
   832  0019                     	;# 
   833  0019                     	;# 
   834  001A                     	;# 
   835  001B                     	;# 
   836  001C                     	;# 
   837  001D                     	;# 
   838  001E                     	;# 
   839  001F                     	;# 
   840  008C                     	;# 
   841  008D                     	;# 
   842  008E                     	;# 
   843  0090                     	;# 
   844  0091                     	;# 
   845  0092                     	;# 
   846  0093                     	;# 
   847  0094                     	;# 
   848  0097                     	;# 
   849  009B                     	;# 
   850  009B                     	;# 
   851  009C                     	;# 
   852  009D                     	;# 
   853  009E                     	;# 
   854  009F                     	;# 
   855  010C                     	;# 
   856  010D                     	;# 
   857  010E                     	;# 
   858  0111                     	;# 
   859  0112                     	;# 
   860  0113                     	;# 
   861  0114                     	;# 
   862  0115                     	;# 
   863  0116                     	;# 
   864  0117                     	;# 
   865  0118                     	;# 
   866  0119                     	;# 
   867  018C                     	;# 
   868  018D                     	;# 
   869  018E                     	;# 
   870  0197                     	;# 
   871  0199                     	;# 
   872  0199                     	;# 
   873  0199                     	;# 
   874  019A                     	;# 
   875  019A                     	;# 
   876  019A                     	;# 
   877  019B                     	;# 
   878  019B                     	;# 
   879  019B                     	;# 
   880  019B                     	;# 
   881  019B                     	;# 
   882  019C                     	;# 
   883  019C                     	;# 
   884  019C                     	;# 
   885  019D                     	;# 
   886  019D                     	;# 
   887  019D                     	;# 
   888  019E                     	;# 
   889  019E                     	;# 
   890  019E                     	;# 
   891  019F                     	;# 
   892  019F                     	;# 
   893  019F                     	;# 
   894  019F                     	;# 
   895  019F                     	;# 
   896  020C                     	;# 
   897  020D                     	;# 
   898  020E                     	;# 
   899  0211                     	;# 
   900  0211                     	;# 
   901  0212                     	;# 
   902  0212                     	;# 
   903  0213                     	;# 
   904  0213                     	;# 
   905  0214                     	;# 
   906  0214                     	;# 
   907  0215                     	;# 
   908  0215                     	;# 
   909  0215                     	;# 
   910  0215                     	;# 
   911  0216                     	;# 
   912  0216                     	;# 
   913  0217                     	;# 
   914  0217                     	;# 
   915  0219                     	;# 
   916  021A                     	;# 
   917  021B                     	;# 
   918  021C                     	;# 
   919  021D                     	;# 
   920  021D                     	;# 
   921  021E                     	;# 
   922  021F                     	;# 
   923  028C                     	;# 
   924  028D                     	;# 
   925  028E                     	;# 
   926  0291                     	;# 
   927  0291                     	;# 
   928  0292                     	;# 
   929  0293                     	;# 
   930  0294                     	;# 
   931  0295                     	;# 
   932  0295                     	;# 
   933  0296                     	;# 
   934  0297                     	;# 
   935  0298                     	;# 
   936  029F                     	;# 
   937  030C                     	;# 
   938  030D                     	;# 
   939  030E                     	;# 
   940  0311                     	;# 
   941  0311                     	;# 
   942  0312                     	;# 
   943  0313                     	;# 
   944  0314                     	;# 
   945  0315                     	;# 
   946  0315                     	;# 
   947  0316                     	;# 
   948  0317                     	;# 
   949  0318                     	;# 
   950  038C                     	;# 
   951  038D                     	;# 
   952  038E                     	;# 
   953  0391                     	;# 
   954  0392                     	;# 
   955  0393                     	;# 
   956  0394                     	;# 
   957  0395                     	;# 
   958  0396                     	;# 
   959  0397                     	;# 
   960  0398                     	;# 
   961  0399                     	;# 
   962  039A                     	;# 
   963  039C                     	;# 
   964  039D                     	;# 
   965  039E                     	;# 
   966  039F                     	;# 
   967  0411                     	;# 
   968  0411                     	;# 
   969  0412                     	;# 
   970  0413                     	;# 
   971  0414                     	;# 
   972  0415                     	;# 
   973  0416                     	;# 
   974  0417                     	;# 
   975  0418                     	;# 
   976  0418                     	;# 
   977  0419                     	;# 
   978  041A                     	;# 
   979  041B                     	;# 
   980  041C                     	;# 
   981  041D                     	;# 
   982  041E                     	;# 
   983  041F                     	;# 
   984  0498                     	;# 
   985  0498                     	;# 
   986  0499                     	;# 
   987  049A                     	;# 
   988  049B                     	;# 
   989  049B                     	;# 
   990  049C                     	;# 
   991  049D                     	;# 
   992  049E                     	;# 
   993  049F                     	;# 
   994  0617                     	;# 
   995  0618                     	;# 
   996  0619                     	;# 
   997  0619                     	;# 
   998  061A                     	;# 
   999  061B                     	;# 
  1000  061C                     	;# 
  1001  061C                     	;# 
  1002  061F                     	;# 
  1003  0691                     	;# 
  1004  0692                     	;# 
  1005  0693                     	;# 
  1006  0694                     	;# 
  1007  0695                     	;# 
  1008  0696                     	;# 
  1009  0697                     	;# 
  1010  0698                     	;# 
  1011  0699                     	;# 
  1012  0711                     	;# 
  1013  0712                     	;# 
  1014  0713                     	;# 
  1015  0714                     	;# 
  1016  0715                     	;# 
  1017  0716                     	;# 
  1018  0717                     	;# 
  1019  0718                     	;# 
  1020  0719                     	;# 
  1021  0891                     	;# 
  1022  0891                     	;# 
  1023  0891                     	;# 
  1024  0891                     	;# 
  1025  0891                     	;# 
  1026  0891                     	;# 
  1027  0892                     	;# 
  1028  0892                     	;# 
  1029  0892                     	;# 
  1030  0893                     	;# 
  1031  0893                     	;# 
  1032  0893                     	;# 
  1033  0893                     	;# 
  1034  0893                     	;# 
  1035  0893                     	;# 
  1036  0894                     	;# 
  1037  0894                     	;# 
  1038  0894                     	;# 
  1039  0895                     	;# 
  1040  0895                     	;# 
  1041  0895                     	;# 
  1042  0896                     	;# 
  1043  0896                     	;# 
  1044  0896                     	;# 
  1045  089B                     	;# 
  1046  0911                     	;# 
  1047  0912                     	;# 
  1048  0913                     	;# 
  1049  0914                     	;# 
  1050  0915                     	;# 
  1051  0916                     	;# 
  1052  0918                     	;# 
  1053  0919                     	;# 
  1054  091A                     	;# 
  1055  091B                     	;# 
  1056  091C                     	;# 
  1057  091D                     	;# 
  1058  091E                     	;# 
  1059  091F                     	;# 
  1060  0E0F                     	;# 
  1061  0E10                     	;# 
  1062  0E11                     	;# 
  1063  0E12                     	;# 
  1064  0E13                     	;# 
  1065  0E14                     	;# 
  1066  0E15                     	;# 
  1067  0E16                     	;# 
  1068  0E17                     	;# 
  1069  0E18                     	;# 
  1070  0E19                     	;# 
  1071  0E1A                     	;# 
  1072  0E1B                     	;# 
  1073  0E1C                     	;# 
  1074  0E1D                     	;# 
  1075  0E1E                     	;# 
  1076  0E1F                     	;# 
  1077  0E20                     	;# 
  1078  0E21                     	;# 
  1079  0E22                     	;# 
  1080  0E24                     	;# 
  1081  0E25                     	;# 
  1082  0E28                     	;# 
  1083  0E29                     	;# 
  1084  0E2A                     	;# 
  1085  0E2B                     	;# 
  1086  0E2C                     	;# 
  1087  0E2D                     	;# 
  1088  0E2E                     	;# 
  1089  0E2F                     	;# 
  1090  0E90                     	;# 
  1091  0E91                     	;# 
  1092  0E92                     	;# 
  1093  0E94                     	;# 
  1094  0E95                     	;# 
  1095  0E9C                     	;# 
  1096  0E9D                     	;# 
  1097  0E9E                     	;# 
  1098  0E9F                     	;# 
  1099  0EA0                     	;# 
  1100  0EA1                     	;# 
  1101  0EA2                     	;# 
  1102  0EA3                     	;# 
  1103  0EA4                     	;# 
  1104  0EA5                     	;# 
  1105  0EA6                     	;# 
  1106  0EA7                     	;# 
  1107  0F0F                     	;# 
  1108  0F10                     	;# 
  1109  0F11                     	;# 
  1110  0F12                     	;# 
  1111  0F13                     	;# 
  1112  0F14                     	;# 
  1113  0F15                     	;# 
  1114  0F16                     	;# 
  1115  0F17                     	;# 
  1116  0F18                     	;# 
  1117  0F19                     	;# 
  1118  0F1A                     	;# 
  1119  0F1B                     	;# 
  1120  0F1C                     	;# 
  1121  0F1D                     	;# 
  1122  0F1E                     	;# 
  1123  0F1F                     	;# 
  1124  0F20                     	;# 
  1125  0F21                     	;# 
  1126  0F22                     	;# 
  1127  0F23                     	;# 
  1128  0F24                     	;# 
  1129  0F25                     	;# 
  1130  0F26                     	;# 
  1131  0F27                     	;# 
  1132  0F28                     	;# 
  1133  0F29                     	;# 
  1134  0F2A                     	;# 
  1135  0F2B                     	;# 
  1136  0F2C                     	;# 
  1137  0F2D                     	;# 
  1138  0F2E                     	;# 
  1139  0F2F                     	;# 
  1140  0F30                     	;# 
  1141  0F31                     	;# 
  1142  0F32                     	;# 
  1143  0F33                     	;# 
  1144  0F34                     	;# 
  1145  0F35                     	;# 
  1146  0F36                     	;# 
  1147  0F37                     	;# 
  1148  0FE4                     	;# 
  1149  0FE5                     	;# 
  1150  0FE6                     	;# 
  1151  0FE7                     	;# 
  1152  0FE8                     	;# 
  1153  0FE9                     	;# 
  1154  0FEA                     	;# 
  1155  0FEB                     	;# 
  1156  0FED                     	;# 
  1157  0FEE                     	;# 
  1158  0FEF                     	;# 
  1159  0000                     	;# 
  1160  0001                     	;# 
  1161  0002                     	;# 
  1162  0003                     	;# 
  1163  0004                     	;# 
  1164  0005                     	;# 
  1165  0006                     	;# 
  1166  0007                     	;# 
  1167  0008                     	;# 
  1168  0009                     	;# 
  1169  000A                     	;# 
  1170  000B                     	;# 
  1171  000C                     	;# 
  1172  000D                     	;# 
  1173  000E                     	;# 
  1174  0010                     	;# 
  1175  0011                     	;# 
  1176  0012                     	;# 
  1177  0013                     	;# 
  1178  0014                     	;# 
  1179  0015                     	;# 
  1180  0015                     	;# 
  1181  0016                     	;# 
  1182  0016                     	;# 
  1183  0017                     	;# 
  1184  0018                     	;# 
  1185  0019                     	;# 
  1186  0019                     	;# 
  1187  001A                     	;# 
  1188  001B                     	;# 
  1189  001C                     	;# 
  1190  001D                     	;# 
  1191  001E                     	;# 
  1192  001F                     	;# 
  1193  008C                     	;# 
  1194  008D                     	;# 
  1195  008E                     	;# 
  1196  0090                     	;# 
  1197  0091                     	;# 
  1198  0092                     	;# 
  1199  0093                     	;# 
  1200  0094                     	;# 
  1201  0097                     	;# 
  1202  009B                     	;# 
  1203  009B                     	;# 
  1204  009C                     	;# 
  1205  009D                     	;# 
  1206  009E                     	;# 
  1207  009F                     	;# 
  1208  010C                     	;# 
  1209  010D                     	;# 
  1210  010E                     	;# 
  1211  0111                     	;# 
  1212  0112                     	;# 
  1213  0113                     	;# 
  1214  0114                     	;# 
  1215  0115                     	;# 
  1216  0116                     	;# 
  1217  0117                     	;# 
  1218  0118                     	;# 
  1219  0119                     	;# 
  1220  018C                     	;# 
  1221  018D                     	;# 
  1222  018E                     	;# 
  1223  0197                     	;# 
  1224  0199                     	;# 
  1225  0199                     	;# 
  1226  0199                     	;# 
  1227  019A                     	;# 
  1228  019A                     	;# 
  1229  019A                     	;# 
  1230  019B                     	;# 
  1231  019B                     	;# 
  1232  019B                     	;# 
  1233  019B                     	;# 
  1234  019B                     	;# 
  1235  019C                     	;# 
  1236  019C                     	;# 
  1237  019C                     	;# 
  1238  019D                     	;# 
  1239  019D                     	;# 
  1240  019D                     	;# 
  1241  019E                     	;# 
  1242  019E                     	;# 
  1243  019E                     	;# 
  1244  019F                     	;# 
  1245  019F                     	;# 
  1246  019F                     	;# 
  1247  019F                     	;# 
  1248  019F                     	;# 
  1249  020C                     	;# 
  1250  020D                     	;# 
  1251  020E                     	;# 
  1252  0211                     	;# 
  1253  0211                     	;# 
  1254  0212                     	;# 
  1255  0212                     	;# 
  1256  0213                     	;# 
  1257  0213                     	;# 
  1258  0214                     	;# 
  1259  0214                     	;# 
  1260  0215                     	;# 
  1261  0215                     	;# 
  1262  0215                     	;# 
  1263  0215                     	;# 
  1264  0216                     	;# 
  1265  0216                     	;# 
  1266  0217                     	;# 
  1267  0217                     	;# 
  1268  0219                     	;# 
  1269  021A                     	;# 
  1270  021B                     	;# 
  1271  021C                     	;# 
  1272  021D                     	;# 
  1273  021D                     	;# 
  1274  021E                     	;# 
  1275  021F                     	;# 
  1276  028C                     	;# 
  1277  028D                     	;# 
  1278  028E                     	;# 
  1279  0291                     	;# 
  1280  0291                     	;# 
  1281  0292                     	;# 
  1282  0293                     	;# 
  1283  0294                     	;# 
  1284  0295                     	;# 
  1285  0295                     	;# 
  1286  0296                     	;# 
  1287  0297                     	;# 
  1288  0298                     	;# 
  1289  029F                     	;# 
  1290  030C                     	;# 
  1291  030D                     	;# 
  1292  030E                     	;# 
  1293  0311                     	;# 
  1294  0311                     	;# 
  1295  0312                     	;# 
  1296  0313                     	;# 
  1297  0314                     	;# 
  1298  0315                     	;# 
  1299  0315                     	;# 
  1300  0316                     	;# 
  1301  0317                     	;# 
  1302  0318                     	;# 
  1303  038C                     	;# 
  1304  038D                     	;# 
  1305  038E                     	;# 
  1306  0391                     	;# 
  1307  0392                     	;# 
  1308  0393                     	;# 
  1309  0394                     	;# 
  1310  0395                     	;# 
  1311  0396                     	;# 
  1312  0397                     	;# 
  1313  0398                     	;# 
  1314  0399                     	;# 
  1315  039A                     	;# 
  1316  039C                     	;# 
  1317  039D                     	;# 
  1318  039E                     	;# 
  1319  039F                     	;# 
  1320  0411                     	;# 
  1321  0411                     	;# 
  1322  0412                     	;# 
  1323  0413                     	;# 
  1324  0414                     	;# 
  1325  0415                     	;# 
  1326  0416                     	;# 
  1327  0417                     	;# 
  1328  0418                     	;# 
  1329  0418                     	;# 
  1330  0419                     	;# 
  1331  041A                     	;# 
  1332  041B                     	;# 
  1333  041C                     	;# 
  1334  041D                     	;# 
  1335  041E                     	;# 
  1336  041F                     	;# 
  1337  0498                     	;# 
  1338  0498                     	;# 
  1339  0499                     	;# 
  1340  049A                     	;# 
  1341  049B                     	;# 
  1342  049B                     	;# 
  1343  049C                     	;# 
  1344  049D                     	;# 
  1345  049E                     	;# 
  1346  049F                     	;# 
  1347  0617                     	;# 
  1348  0618                     	;# 
  1349  0619                     	;# 
  1350  0619                     	;# 
  1351  061A                     	;# 
  1352  061B                     	;# 
  1353  061C                     	;# 
  1354  061C                     	;# 
  1355  061F                     	;# 
  1356  0691                     	;# 
  1357  0692                     	;# 
  1358  0693                     	;# 
  1359  0694                     	;# 
  1360  0695                     	;# 
  1361  0696                     	;# 
  1362  0697                     	;# 
  1363  0698                     	;# 
  1364  0699                     	;# 
  1365  0711                     	;# 
  1366  0712                     	;# 
  1367  0713                     	;# 
  1368  0714                     	;# 
  1369  0715                     	;# 
  1370  0716                     	;# 
  1371  0717                     	;# 
  1372  0718                     	;# 
  1373  0719                     	;# 
  1374  0891                     	;# 
  1375  0891                     	;# 
  1376  0891                     	;# 
  1377  0891                     	;# 
  1378  0891                     	;# 
  1379  0891                     	;# 
  1380  0892                     	;# 
  1381  0892                     	;# 
  1382  0892                     	;# 
  1383  0893                     	;# 
  1384  0893                     	;# 
  1385  0893                     	;# 
  1386  0893                     	;# 
  1387  0893                     	;# 
  1388  0893                     	;# 
  1389  0894                     	;# 
  1390  0894                     	;# 
  1391  0894                     	;# 
  1392  0895                     	;# 
  1393  0895                     	;# 
  1394  0895                     	;# 
  1395  0896                     	;# 
  1396  0896                     	;# 
  1397  0896                     	;# 
  1398  089B                     	;# 
  1399  0911                     	;# 
  1400  0912                     	;# 
  1401  0913                     	;# 
  1402  0914                     	;# 
  1403  0915                     	;# 
  1404  0916                     	;# 
  1405  0918                     	;# 
  1406  0919                     	;# 
  1407  091A                     	;# 
  1408  091B                     	;# 
  1409  091C                     	;# 
  1410  091D                     	;# 
  1411  091E                     	;# 
  1412  091F                     	;# 
  1413  0E0F                     	;# 
  1414  0E10                     	;# 
  1415  0E11                     	;# 
  1416  0E12                     	;# 
  1417  0E13                     	;# 
  1418  0E14                     	;# 
  1419  0E15                     	;# 
  1420  0E16                     	;# 
  1421  0E17                     	;# 
  1422  0E18                     	;# 
  1423  0E19                     	;# 
  1424  0E1A                     	;# 
  1425  0E1B                     	;# 
  1426  0E1C                     	;# 
  1427  0E1D                     	;# 
  1428  0E1E                     	;# 
  1429  0E1F                     	;# 
  1430  0E20                     	;# 
  1431  0E21                     	;# 
  1432  0E22                     	;# 
  1433  0E24                     	;# 
  1434  0E25                     	;# 
  1435  0E28                     	;# 
  1436  0E29                     	;# 
  1437  0E2A                     	;# 
  1438  0E2B                     	;# 
  1439  0E2C                     	;# 
  1440  0E2D                     	;# 
  1441  0E2E                     	;# 
  1442  0E2F                     	;# 
  1443  0E90                     	;# 
  1444  0E91                     	;# 
  1445  0E92                     	;# 
  1446  0E94                     	;# 
  1447  0E95                     	;# 
  1448  0E9C                     	;# 
  1449  0E9D                     	;# 
  1450  0E9E                     	;# 
  1451  0E9F                     	;# 
  1452  0EA0                     	;# 
  1453  0EA1                     	;# 
  1454  0EA2                     	;# 
  1455  0EA3                     	;# 
  1456  0EA4                     	;# 
  1457  0EA5                     	;# 
  1458  0EA6                     	;# 
  1459  0EA7                     	;# 
  1460  0F0F                     	;# 
  1461  0F10                     	;# 
  1462  0F11                     	;# 
  1463  0F12                     	;# 
  1464  0F13                     	;# 
  1465  0F14                     	;# 
  1466  0F15                     	;# 
  1467  0F16                     	;# 
  1468  0F17                     	;# 
  1469  0F18                     	;# 
  1470  0F19                     	;# 
  1471  0F1A                     	;# 
  1472  0F1B                     	;# 
  1473  0F1C                     	;# 
  1474  0F1D                     	;# 
  1475  0F1E                     	;# 
  1476  0F1F                     	;# 
  1477  0F20                     	;# 
  1478  0F21                     	;# 
  1479  0F22                     	;# 
  1480  0F23                     	;# 
  1481  0F24                     	;# 
  1482  0F25                     	;# 
  1483  0F26                     	;# 
  1484  0F27                     	;# 
  1485  0F28                     	;# 
  1486  0F29                     	;# 
  1487  0F2A                     	;# 
  1488  0F2B                     	;# 
  1489  0F2C                     	;# 
  1490  0F2D                     	;# 
  1491  0F2E                     	;# 
  1492  0F2F                     	;# 
  1493  0F30                     	;# 
  1494  0F31                     	;# 
  1495  0F32                     	;# 
  1496  0F33                     	;# 
  1497  0F34                     	;# 
  1498  0F35                     	;# 
  1499  0F36                     	;# 
  1500  0F37                     	;# 
  1501  0FE4                     	;# 
  1502  0FE5                     	;# 
  1503  0FE6                     	;# 
  1504  0FE7                     	;# 
  1505  0FE8                     	;# 
  1506  0FE9                     	;# 
  1507  0FEA                     	;# 
  1508  0FEB                     	;# 
  1509  0FED                     	;# 
  1510  0FEE                     	;# 
  1511  0FEF                     	;# 
  1512  0000                     	;# 
  1513  0001                     	;# 
  1514  0002                     	;# 
  1515  0003                     	;# 
  1516  0004                     	;# 
  1517  0005                     	;# 
  1518  0006                     	;# 
  1519  0007                     	;# 
  1520  0008                     	;# 
  1521  0009                     	;# 
  1522  000A                     	;# 
  1523  000B                     	;# 
  1524  000C                     	;# 
  1525  000D                     	;# 
  1526  000E                     	;# 
  1527  0010                     	;# 
  1528  0011                     	;# 
  1529  0012                     	;# 
  1530  0013                     	;# 
  1531  0014                     	;# 
  1532  0015                     	;# 
  1533  0015                     	;# 
  1534  0016                     	;# 
  1535  0016                     	;# 
  1536  0017                     	;# 
  1537  0018                     	;# 
  1538  0019                     	;# 
  1539  0019                     	;# 
  1540  001A                     	;# 
  1541  001B                     	;# 
  1542  001C                     	;# 
  1543  001D                     	;# 
  1544  001E                     	;# 
  1545  001F                     	;# 
  1546  008C                     	;# 
  1547  008D                     	;# 
  1548  008E                     	;# 
  1549  0090                     	;# 
  1550  0091                     	;# 
  1551  0092                     	;# 
  1552  0093                     	;# 
  1553  0094                     	;# 
  1554  0097                     	;# 
  1555  009B                     	;# 
  1556  009B                     	;# 
  1557  009C                     	;# 
  1558  009D                     	;# 
  1559  009E                     	;# 
  1560  009F                     	;# 
  1561  010C                     	;# 
  1562  010D                     	;# 
  1563  010E                     	;# 
  1564  0111                     	;# 
  1565  0112                     	;# 
  1566  0113                     	;# 
  1567  0114                     	;# 
  1568  0115                     	;# 
  1569  0116                     	;# 
  1570  0117                     	;# 
  1571  0118                     	;# 
  1572  0119                     	;# 
  1573  018C                     	;# 
  1574  018D                     	;# 
  1575  018E                     	;# 
  1576  0197                     	;# 
  1577  0199                     	;# 
  1578  0199                     	;# 
  1579  0199                     	;# 
  1580  019A                     	;# 
  1581  019A                     	;# 
  1582  019A                     	;# 
  1583  019B                     	;# 
  1584  019B                     	;# 
  1585  019B                     	;# 
  1586  019B                     	;# 
  1587  019B                     	;# 
  1588  019C                     	;# 
  1589  019C                     	;# 
  1590  019C                     	;# 
  1591  019D                     	;# 
  1592  019D                     	;# 
  1593  019D                     	;# 
  1594  019E                     	;# 
  1595  019E                     	;# 
  1596  019E                     	;# 
  1597  019F                     	;# 
  1598  019F                     	;# 
  1599  019F                     	;# 
  1600  019F                     	;# 
  1601  019F                     	;# 
  1602  020C                     	;# 
  1603  020D                     	;# 
  1604  020E                     	;# 
  1605  0211                     	;# 
  1606  0211                     	;# 
  1607  0212                     	;# 
  1608  0212                     	;# 
  1609  0213                     	;# 
  1610  0213                     	;# 
  1611  0214                     	;# 
  1612  0214                     	;# 
  1613  0215                     	;# 
  1614  0215                     	;# 
  1615  0215                     	;# 
  1616  0215                     	;# 
  1617  0216                     	;# 
  1618  0216                     	;# 
  1619  0217                     	;# 
  1620  0217                     	;# 
  1621  0219                     	;# 
  1622  021A                     	;# 
  1623  021B                     	;# 
  1624  021C                     	;# 
  1625  021D                     	;# 
  1626  021D                     	;# 
  1627  021E                     	;# 
  1628  021F                     	;# 
  1629  028C                     	;# 
  1630  028D                     	;# 
  1631  028E                     	;# 
  1632  0291                     	;# 
  1633  0291                     	;# 
  1634  0292                     	;# 
  1635  0293                     	;# 
  1636  0294                     	;# 
  1637  0295                     	;# 
  1638  0295                     	;# 
  1639  0296                     	;# 
  1640  0297                     	;# 
  1641  0298                     	;# 
  1642  029F                     	;# 
  1643  030C                     	;# 
  1644  030D                     	;# 
  1645  030E                     	;# 
  1646  0311                     	;# 
  1647  0311                     	;# 
  1648  0312                     	;# 
  1649  0313                     	;# 
  1650  0314                     	;# 
  1651  0315                     	;# 
  1652  0315                     	;# 
  1653  0316                     	;# 
  1654  0317                     	;# 
  1655  0318                     	;# 
  1656  038C                     	;# 
  1657  038D                     	;# 
  1658  038E                     	;# 
  1659  0391                     	;# 
  1660  0392                     	;# 
  1661  0393                     	;# 
  1662  0394                     	;# 
  1663  0395                     	;# 
  1664  0396                     	;# 
  1665  0397                     	;# 
  1666  0398                     	;# 
  1667  0399                     	;# 
  1668  039A                     	;# 
  1669  039C                     	;# 
  1670  039D                     	;# 
  1671  039E                     	;# 
  1672  039F                     	;# 
  1673  0411                     	;# 
  1674  0411                     	;# 
  1675  0412                     	;# 
  1676  0413                     	;# 
  1677  0414                     	;# 
  1678  0415                     	;# 
  1679  0416                     	;# 
  1680  0417                     	;# 
  1681  0418                     	;# 
  1682  0418                     	;# 
  1683  0419                     	;# 
  1684  041A                     	;# 
  1685  041B                     	;# 
  1686  041C                     	;# 
  1687  041D                     	;# 
  1688  041E                     	;# 
  1689  041F                     	;# 
  1690  0498                     	;# 
  1691  0498                     	;# 
  1692  0499                     	;# 
  1693  049A                     	;# 
  1694  049B                     	;# 
  1695  049B                     	;# 
  1696  049C                     	;# 
  1697  049D                     	;# 
  1698  049E                     	;# 
  1699  049F                     	;# 
  1700  0617                     	;# 
  1701  0618                     	;# 
  1702  0619                     	;# 
  1703  0619                     	;# 
  1704  061A                     	;# 
  1705  061B                     	;# 
  1706  061C                     	;# 
  1707  061C                     	;# 
  1708  061F                     	;# 
  1709  0691                     	;# 
  1710  0692                     	;# 
  1711  0693                     	;# 
  1712  0694                     	;# 
  1713  0695                     	;# 
  1714  0696                     	;# 
  1715  0697                     	;# 
  1716  0698                     	;# 
  1717  0699                     	;# 
  1718  0711                     	;# 
  1719  0712                     	;# 
  1720  0713                     	;# 
  1721  0714                     	;# 
  1722  0715                     	;# 
  1723  0716                     	;# 
  1724  0717                     	;# 
  1725  0718                     	;# 
  1726  0719                     	;# 
  1727  0891                     	;# 
  1728  0891                     	;# 
  1729  0891                     	;# 
  1730  0891                     	;# 
  1731  0891                     	;# 
  1732  0891                     	;# 
  1733  0892                     	;# 
  1734  0892                     	;# 
  1735  0892                     	;# 
  1736  0893                     	;# 
  1737  0893                     	;# 
  1738  0893                     	;# 
  1739  0893                     	;# 
  1740  0893                     	;# 
  1741  0893                     	;# 
  1742  0894                     	;# 
  1743  0894                     	;# 
  1744  0894                     	;# 
  1745  0895                     	;# 
  1746  0895                     	;# 
  1747  0895                     	;# 
  1748  0896                     	;# 
  1749  0896                     	;# 
  1750  0896                     	;# 
  1751  089B                     	;# 
  1752  0911                     	;# 
  1753  0912                     	;# 
  1754  0913                     	;# 
  1755  0914                     	;# 
  1756  0915                     	;# 
  1757  0916                     	;# 
  1758  0918                     	;# 
  1759  0919                     	;# 
  1760  091A                     	;# 
  1761  091B                     	;# 
  1762  091C                     	;# 
  1763  091D                     	;# 
  1764  091E                     	;# 
  1765  091F                     	;# 
  1766  0E0F                     	;# 
  1767  0E10                     	;# 
  1768  0E11                     	;# 
  1769  0E12                     	;# 
  1770  0E13                     	;# 
  1771  0E14                     	;# 
  1772  0E15                     	;# 
  1773  0E16                     	;# 
  1774  0E17                     	;# 
  1775  0E18                     	;# 
  1776  0E19                     	;# 
  1777  0E1A                     	;# 
  1778  0E1B                     	;# 
  1779  0E1C                     	;# 
  1780  0E1D                     	;# 
  1781  0E1E                     	;# 
  1782  0E1F                     	;# 
  1783  0E20                     	;# 
  1784  0E21                     	;# 
  1785  0E22                     	;# 
  1786  0E24                     	;# 
  1787  0E25                     	;# 
  1788  0E28                     	;# 
  1789  0E29                     	;# 
  1790  0E2A                     	;# 
  1791  0E2B                     	;# 
  1792  0E2C                     	;# 
  1793  0E2D                     	;# 
  1794  0E2E                     	;# 
  1795  0E2F                     	;# 
  1796  0E90                     	;# 
  1797  0E91                     	;# 
  1798  0E92                     	;# 
  1799  0E94                     	;# 
  1800  0E95                     	;# 
  1801  0E9C                     	;# 
  1802  0E9D                     	;# 
  1803  0E9E                     	;# 
  1804  0E9F                     	;# 
  1805  0EA0                     	;# 
  1806  0EA1                     	;# 
  1807  0EA2                     	;# 
  1808  0EA3                     	;# 
  1809  0EA4                     	;# 
  1810  0EA5                     	;# 
  1811  0EA6                     	;# 
  1812  0EA7                     	;# 
  1813  0F0F                     	;# 
  1814  0F10                     	;# 
  1815  0F11                     	;# 
  1816  0F12                     	;# 
  1817  0F13                     	;# 
  1818  0F14                     	;# 
  1819  0F15                     	;# 
  1820  0F16                     	;# 
  1821  0F17                     	;# 
  1822  0F18                     	;# 
  1823  0F19                     	;# 
  1824  0F1A                     	;# 
  1825  0F1B                     	;# 
  1826  0F1C                     	;# 
  1827  0F1D                     	;# 
  1828  0F1E                     	;# 
  1829  0F1F                     	;# 
  1830  0F20                     	;# 
  1831  0F21                     	;# 
  1832  0F22                     	;# 
  1833  0F23                     	;# 
  1834  0F24                     	;# 
  1835  0F25                     	;# 
  1836  0F26                     	;# 
  1837  0F27                     	;# 
  1838  0F28                     	;# 
  1839  0F29                     	;# 
  1840  0F2A                     	;# 
  1841  0F2B                     	;# 
  1842  0F2C                     	;# 
  1843  0F2D                     	;# 
  1844  0F2E                     	;# 
  1845  0F2F                     	;# 
  1846  0F30                     	;# 
  1847  0F31                     	;# 
  1848  0F32                     	;# 
  1849  0F33                     	;# 
  1850  0F34                     	;# 
  1851  0F35                     	;# 
  1852  0F36                     	;# 
  1853  0F37                     	;# 
  1854  0FE4                     	;# 
  1855  0FE5                     	;# 
  1856  0FE6                     	;# 
  1857  0FE7                     	;# 
  1858  0FE8                     	;# 
  1859  0FE9                     	;# 
  1860  0FEA                     	;# 
  1861  0FEB                     	;# 
  1862  0FED                     	;# 
  1863  0FEE                     	;# 
  1864  0FEF                     	;# 
  1865  0000                     	;# 
  1866  0001                     	;# 
  1867  0002                     	;# 
  1868  0003                     	;# 
  1869  0004                     	;# 
  1870  0005                     	;# 
  1871  0006                     	;# 
  1872  0007                     	;# 
  1873  0008                     	;# 
  1874  0009                     	;# 
  1875  000A                     	;# 
  1876  000B                     	;# 
  1877  000C                     	;# 
  1878  000D                     	;# 
  1879  000E                     	;# 
  1880  0010                     	;# 
  1881  0011                     	;# 
  1882  0012                     	;# 
  1883  0013                     	;# 
  1884  0014                     	;# 
  1885  0015                     	;# 
  1886  0015                     	;# 
  1887  0016                     	;# 
  1888  0016                     	;# 
  1889  0017                     	;# 
  1890  0018                     	;# 
  1891  0019                     	;# 
  1892  0019                     	;# 
  1893  001A                     	;# 
  1894  001B                     	;# 
  1895  001C                     	;# 
  1896  001D                     	;# 
  1897  001E                     	;# 
  1898  001F                     	;# 
  1899  008C                     	;# 
  1900  008D                     	;# 
  1901  008E                     	;# 
  1902  0090                     	;# 
  1903  0091                     	;# 
  1904  0092                     	;# 
  1905  0093                     	;# 
  1906  0094                     	;# 
  1907  0097                     	;# 
  1908  009B                     	;# 
  1909  009B                     	;# 
  1910  009C                     	;# 
  1911  009D                     	;# 
  1912  009E                     	;# 
  1913  009F                     	;# 
  1914  010C                     	;# 
  1915  010D                     	;# 
  1916  010E                     	;# 
  1917  0111                     	;# 
  1918  0112                     	;# 
  1919  0113                     	;# 
  1920  0114                     	;# 
  1921  0115                     	;# 
  1922  0116                     	;# 
  1923  0117                     	;# 
  1924  0118                     	;# 
  1925  0119                     	;# 
  1926  018C                     	;# 
  1927  018D                     	;# 
  1928  018E                     	;# 
  1929  0197                     	;# 
  1930  0199                     	;# 
  1931  0199                     	;# 
  1932  0199                     	;# 
  1933  019A                     	;# 
  1934  019A                     	;# 
  1935  019A                     	;# 
  1936  019B                     	;# 
  1937  019B                     	;# 
  1938  019B                     	;# 
  1939  019B                     	;# 
  1940  019B                     	;# 
  1941  019C                     	;# 
  1942  019C                     	;# 
  1943  019C                     	;# 
  1944  019D                     	;# 
  1945  019D                     	;# 
  1946  019D                     	;# 
  1947  019E                     	;# 
  1948  019E                     	;# 
  1949  019E                     	;# 
  1950  019F                     	;# 
  1951  019F                     	;# 
  1952  019F                     	;# 
  1953  019F                     	;# 
  1954  019F                     	;# 
  1955  020C                     	;# 
  1956  020D                     	;# 
  1957  020E                     	;# 
  1958  0211                     	;# 
  1959  0211                     	;# 
  1960  0212                     	;# 
  1961  0212                     	;# 
  1962  0213                     	;# 
  1963  0213                     	;# 
  1964  0214                     	;# 
  1965  0214                     	;# 
  1966  0215                     	;# 
  1967  0215                     	;# 
  1968  0215                     	;# 
  1969  0215                     	;# 
  1970  0216                     	;# 
  1971  0216                     	;# 
  1972  0217                     	;# 
  1973  0217                     	;# 
  1974  0219                     	;# 
  1975  021A                     	;# 
  1976  021B                     	;# 
  1977  021C                     	;# 
  1978  021D                     	;# 
  1979  021D                     	;# 
  1980  021E                     	;# 
  1981  021F                     	;# 
  1982  028C                     	;# 
  1983  028D                     	;# 
  1984  028E                     	;# 
  1985  0291                     	;# 
  1986  0291                     	;# 
  1987  0292                     	;# 
  1988  0293                     	;# 
  1989  0294                     	;# 
  1990  0295                     	;# 
  1991  0295                     	;# 
  1992  0296                     	;# 
  1993  0297                     	;# 
  1994  0298                     	;# 
  1995  029F                     	;# 
  1996  030C                     	;# 
  1997  030D                     	;# 
  1998  030E                     	;# 
  1999  0311                     	;# 
  2000  0311                     	;# 
  2001  0312                     	;# 
  2002  0313                     	;# 
  2003  0314                     	;# 
  2004  0315                     	;# 
  2005  0315                     	;# 
  2006  0316                     	;# 
  2007  0317                     	;# 
  2008  0318                     	;# 
  2009  038C                     	;# 
  2010  038D                     	;# 
  2011  038E                     	;# 
  2012  0391                     	;# 
  2013  0392                     	;# 
  2014  0393                     	;# 
  2015  0394                     	;# 
  2016  0395                     	;# 
  2017  0396                     	;# 
  2018  0397                     	;# 
  2019  0398                     	;# 
  2020  0399                     	;# 
  2021  039A                     	;# 
  2022  039C                     	;# 
  2023  039D                     	;# 
  2024  039E                     	;# 
  2025  039F                     	;# 
  2026  0411                     	;# 
  2027  0411                     	;# 
  2028  0412                     	;# 
  2029  0413                     	;# 
  2030  0414                     	;# 
  2031  0415                     	;# 
  2032  0416                     	;# 
  2033  0417                     	;# 
  2034  0418                     	;# 
  2035  0418                     	;# 
  2036  0419                     	;# 
  2037  041A                     	;# 
  2038  041B                     	;# 
  2039  041C                     	;# 
  2040  041D                     	;# 
  2041  041E                     	;# 
  2042  041F                     	;# 
  2043  0498                     	;# 
  2044  0498                     	;# 
  2045  0499                     	;# 
  2046  049A                     	;# 
  2047  049B                     	;# 
  2048  049B                     	;# 
  2049  049C                     	;# 
  2050  049D                     	;# 
  2051  049E                     	;# 
  2052  049F                     	;# 
  2053  0617                     	;# 
  2054  0618                     	;# 
  2055  0619                     	;# 
  2056  0619                     	;# 
  2057  061A                     	;# 
  2058  061B                     	;# 
  2059  061C                     	;# 
  2060  061C                     	;# 
  2061  061F                     	;# 
  2062  0691                     	;# 
  2063  0692                     	;# 
  2064  0693                     	;# 
  2065  0694                     	;# 
  2066  0695                     	;# 
  2067  0696                     	;# 
  2068  0697                     	;# 
  2069  0698                     	;# 
  2070  0699                     	;# 
  2071  0711                     	;# 
  2072  0712                     	;# 
  2073  0713                     	;# 
  2074  0714                     	;# 
  2075  0715                     	;# 
  2076  0716                     	;# 
  2077  0717                     	;# 
  2078  0718                     	;# 
  2079  0719                     	;# 
  2080  0891                     	;# 
  2081  0891                     	;# 
  2082  0891                     	;# 
  2083  0891                     	;# 
  2084  0891                     	;# 
  2085  0891                     	;# 
  2086  0892                     	;# 
  2087  0892                     	;# 
  2088  0892                     	;# 
  2089  0893                     	;# 
  2090  0893                     	;# 
  2091  0893                     	;# 
  2092  0893                     	;# 
  2093  0893                     	;# 
  2094  0893                     	;# 
  2095  0894                     	;# 
  2096  0894                     	;# 
  2097  0894                     	;# 
  2098  0895                     	;# 
  2099  0895                     	;# 
  2100  0895                     	;# 
  2101  0896                     	;# 
  2102  0896                     	;# 
  2103  0896                     	;# 
  2104  089B                     	;# 
  2105  0911                     	;# 
  2106  0912                     	;# 
  2107  0913                     	;# 
  2108  0914                     	;# 
  2109  0915                     	;# 
  2110  0916                     	;# 
  2111  0918                     	;# 
  2112  0919                     	;# 
  2113  091A                     	;# 
  2114  091B                     	;# 
  2115  091C                     	;# 
  2116  091D                     	;# 
  2117  091E                     	;# 
  2118  091F                     	;# 
  2119  0E0F                     	;# 
  2120  0E10                     	;# 
  2121  0E11                     	;# 
  2122  0E12                     	;# 
  2123  0E13                     	;# 
  2124  0E14                     	;# 
  2125  0E15                     	;# 
  2126  0E16                     	;# 
  2127  0E17                     	;# 
  2128  0E18                     	;# 
  2129  0E19                     	;# 
  2130  0E1A                     	;# 
  2131  0E1B                     	;# 
  2132  0E1C                     	;# 
  2133  0E1D                     	;# 
  2134  0E1E                     	;# 
  2135  0E1F                     	;# 
  2136  0E20                     	;# 
  2137  0E21                     	;# 
  2138  0E22                     	;# 
  2139  0E24                     	;# 
  2140  0E25                     	;# 
  2141  0E28                     	;# 
  2142  0E29                     	;# 
  2143  0E2A                     	;# 
  2144  0E2B                     	;# 
  2145  0E2C                     	;# 
  2146  0E2D                     	;# 
  2147  0E2E                     	;# 
  2148  0E2F                     	;# 
  2149  0E90                     	;# 
  2150  0E91                     	;# 
  2151  0E92                     	;# 
  2152  0E94                     	;# 
  2153  0E95                     	;# 
  2154  0E9C                     	;# 
  2155  0E9D                     	;# 
  2156  0E9E                     	;# 
  2157  0E9F                     	;# 
  2158  0EA0                     	;# 
  2159  0EA1                     	;# 
  2160  0EA2                     	;# 
  2161  0EA3                     	;# 
  2162  0EA4                     	;# 
  2163  0EA5                     	;# 
  2164  0EA6                     	;# 
  2165  0EA7                     	;# 
  2166  0F0F                     	;# 
  2167  0F10                     	;# 
  2168  0F11                     	;# 
  2169  0F12                     	;# 
  2170  0F13                     	;# 
  2171  0F14                     	;# 
  2172  0F15                     	;# 
  2173  0F16                     	;# 
  2174  0F17                     	;# 
  2175  0F18                     	;# 
  2176  0F19                     	;# 
  2177  0F1A                     	;# 
  2178  0F1B                     	;# 
  2179  0F1C                     	;# 
  2180  0F1D                     	;# 
  2181  0F1E                     	;# 
  2182  0F1F                     	;# 
  2183  0F20                     	;# 
  2184  0F21                     	;# 
  2185  0F22                     	;# 
  2186  0F23                     	;# 
  2187  0F24                     	;# 
  2188  0F25                     	;# 
  2189  0F26                     	;# 
  2190  0F27                     	;# 
  2191  0F28                     	;# 
  2192  0F29                     	;# 
  2193  0F2A                     	;# 
  2194  0F2B                     	;# 
  2195  0F2C                     	;# 
  2196  0F2D                     	;# 
  2197  0F2E                     	;# 
  2198  0F2F                     	;# 
  2199  0F30                     	;# 
  2200  0F31                     	;# 
  2201  0F32                     	;# 
  2202  0F33                     	;# 
  2203  0F34                     	;# 
  2204  0F35                     	;# 
  2205  0F36                     	;# 
  2206  0F37                     	;# 
  2207  0FE4                     	;# 
  2208  0FE5                     	;# 
  2209  0FE6                     	;# 
  2210  0FE7                     	;# 
  2211  0FE8                     	;# 
  2212  0FE9                     	;# 
  2213  0FEA                     	;# 
  2214  0FEB                     	;# 
  2215  0FED                     	;# 
  2216  0FEE                     	;# 
  2217  0FEF                     	;# 
  2218  0000                     	;# 
  2219  0001                     	;# 
  2220  0002                     	;# 
  2221  0003                     	;# 
  2222  0004                     	;# 
  2223  0005                     	;# 
  2224  0006                     	;# 
  2225  0007                     	;# 
  2226  0008                     	;# 
  2227  0009                     	;# 
  2228  000A                     	;# 
  2229  000B                     	;# 
  2230  000C                     	;# 
  2231  000D                     	;# 
  2232  000E                     	;# 
  2233  0010                     	;# 
  2234  0011                     	;# 
  2235  0012                     	;# 
  2236  0013                     	;# 
  2237  0014                     	;# 
  2238  0015                     	;# 
  2239  0015                     	;# 
  2240  0016                     	;# 
  2241  0016                     	;# 
  2242  0017                     	;# 
  2243  0018                     	;# 
  2244  0019                     	;# 
  2245  0019                     	;# 
  2246  001A                     	;# 
  2247  001B                     	;# 
  2248  001C                     	;# 
  2249  001D                     	;# 
  2250  001E                     	;# 
  2251  001F                     	;# 
  2252  008C                     	;# 
  2253  008D                     	;# 
  2254  008E                     	;# 
  2255  0090                     	;# 
  2256  0091                     	;# 
  2257  0092                     	;# 
  2258  0093                     	;# 
  2259  0094                     	;# 
  2260  0097                     	;# 
  2261  009B                     	;# 
  2262  009B                     	;# 
  2263  009C                     	;# 
  2264  009D                     	;# 
  2265  009E                     	;# 
  2266  009F                     	;# 
  2267  010C                     	;# 
  2268  010D                     	;# 
  2269  010E                     	;# 
  2270  0111                     	;# 
  2271  0112                     	;# 
  2272  0113                     	;# 
  2273  0114                     	;# 
  2274  0115                     	;# 
  2275  0116                     	;# 
  2276  0117                     	;# 
  2277  0118                     	;# 
  2278  0119                     	;# 
  2279  018C                     	;# 
  2280  018D                     	;# 
  2281  018E                     	;# 
  2282  0197                     	;# 
  2283  0199                     	;# 
  2284  0199                     	;# 
  2285  0199                     	;# 
  2286  019A                     	;# 
  2287  019A                     	;# 
  2288  019A                     	;# 
  2289  019B                     	;# 
  2290  019B                     	;# 
  2291  019B                     	;# 
  2292  019B                     	;# 
  2293  019B                     	;# 
  2294  019C                     	;# 
  2295  019C                     	;# 
  2296  019C                     	;# 
  2297  019D                     	;# 
  2298  019D                     	;# 
  2299  019D                     	;# 
  2300  019E                     	;# 
  2301  019E                     	;# 
  2302  019E                     	;# 
  2303  019F                     	;# 
  2304  019F                     	;# 
  2305  019F                     	;# 
  2306  019F                     	;# 
  2307  019F                     	;# 
  2308  020C                     	;# 
  2309  020D                     	;# 
  2310  020E                     	;# 
  2311  0211                     	;# 
  2312  0211                     	;# 
  2313  0212                     	;# 
  2314  0212                     	;# 
  2315  0213                     	;# 
  2316  0213                     	;# 
  2317  0214                     	;# 
  2318  0214                     	;# 
  2319  0215                     	;# 
  2320  0215                     	;# 
  2321  0215                     	;# 
  2322  0215                     	;# 
  2323  0216                     	;# 
  2324  0216                     	;# 
  2325  0217                     	;# 
  2326  0217                     	;# 
  2327  0219                     	;# 
  2328  021A                     	;# 
  2329  021B                     	;# 
  2330  021C                     	;# 
  2331  021D                     	;# 
  2332  021D                     	;# 
  2333  021E                     	;# 
  2334  021F                     	;# 
  2335  028C                     	;# 
  2336  028D                     	;# 
  2337  028E                     	;# 
  2338  0291                     	;# 
  2339  0291                     	;# 
  2340  0292                     	;# 
  2341  0293                     	;# 
  2342  0294                     	;# 
  2343  0295                     	;# 
  2344  0295                     	;# 
  2345  0296                     	;# 
  2346  0297                     	;# 
  2347  0298                     	;# 
  2348  029F                     	;# 
  2349  030C                     	;# 
  2350  030D                     	;# 
  2351  030E                     	;# 
  2352  0311                     	;# 
  2353  0311                     	;# 
  2354  0312                     	;# 
  2355  0313                     	;# 
  2356  0314                     	;# 
  2357  0315                     	;# 
  2358  0315                     	;# 
  2359  0316                     	;# 
  2360  0317                     	;# 
  2361  0318                     	;# 
  2362  038C                     	;# 
  2363  038D                     	;# 
  2364  038E                     	;# 
  2365  0391                     	;# 
  2366  0392                     	;# 
  2367  0393                     	;# 
  2368  0394                     	;# 
  2369  0395                     	;# 
  2370  0396                     	;# 
  2371  0397                     	;# 
  2372  0398                     	;# 
  2373  0399                     	;# 
  2374  039A                     	;# 
  2375  039C                     	;# 
  2376  039D                     	;# 
  2377  039E                     	;# 
  2378  039F                     	;# 
  2379  0411                     	;# 
  2380  0411                     	;# 
  2381  0412                     	;# 
  2382  0413                     	;# 
  2383  0414                     	;# 
  2384  0415                     	;# 
  2385  0416                     	;# 
  2386  0417                     	;# 
  2387  0418                     	;# 
  2388  0418                     	;# 
  2389  0419                     	;# 
  2390  041A                     	;# 
  2391  041B                     	;# 
  2392  041C                     	;# 
  2393  041D                     	;# 
  2394  041E                     	;# 
  2395  041F                     	;# 
  2396  0498                     	;# 
  2397  0498                     	;# 
  2398  0499                     	;# 
  2399  049A                     	;# 
  2400  049B                     	;# 
  2401  049B                     	;# 
  2402  049C                     	;# 
  2403  049D                     	;# 
  2404  049E                     	;# 
  2405  049F                     	;# 
  2406  0617                     	;# 
  2407  0618                     	;# 
  2408  0619                     	;# 
  2409  0619                     	;# 
  2410  061A                     	;# 
  2411  061B                     	;# 
  2412  061C                     	;# 
  2413  061C                     	;# 
  2414  061F                     	;# 
  2415  0691                     	;# 
  2416  0692                     	;# 
  2417  0693                     	;# 
  2418  0694                     	;# 
  2419  0695                     	;# 
  2420  0696                     	;# 
  2421  0697                     	;# 
  2422  0698                     	;# 
  2423  0699                     	;# 
  2424  0711                     	;# 
  2425  0712                     	;# 
  2426  0713                     	;# 
  2427  0714                     	;# 
  2428  0715                     	;# 
  2429  0716                     	;# 
  2430  0717                     	;# 
  2431  0718                     	;# 
  2432  0719                     	;# 
  2433  0891                     	;# 
  2434  0891                     	;# 
  2435  0891                     	;# 
  2436  0891                     	;# 
  2437  0891                     	;# 
  2438  0891                     	;# 
  2439  0892                     	;# 
  2440  0892                     	;# 
  2441  0892                     	;# 
  2442  0893                     	;# 
  2443  0893                     	;# 
  2444  0893                     	;# 
  2445  0893                     	;# 
  2446  0893                     	;# 
  2447  0893                     	;# 
  2448  0894                     	;# 
  2449  0894                     	;# 
  2450  0894                     	;# 
  2451  0895                     	;# 
  2452  0895                     	;# 
  2453  0895                     	;# 
  2454  0896                     	;# 
  2455  0896                     	;# 
  2456  0896                     	;# 
  2457  089B                     	;# 
  2458  0911                     	;# 
  2459  0912                     	;# 
  2460  0913                     	;# 
  2461  0914                     	;# 
  2462  0915                     	;# 
  2463  0916                     	;# 
  2464  0918                     	;# 
  2465  0919                     	;# 
  2466  091A                     	;# 
  2467  091B                     	;# 
  2468  091C                     	;# 
  2469  091D                     	;# 
  2470  091E                     	;# 
  2471  091F                     	;# 
  2472  0E0F                     	;# 
  2473  0E10                     	;# 
  2474  0E11                     	;# 
  2475  0E12                     	;# 
  2476  0E13                     	;# 
  2477  0E14                     	;# 
  2478  0E15                     	;# 
  2479  0E16                     	;# 
  2480  0E17                     	;# 
  2481  0E18                     	;# 
  2482  0E19                     	;# 
  2483  0E1A                     	;# 
  2484  0E1B                     	;# 
  2485  0E1C                     	;# 
  2486  0E1D                     	;# 
  2487  0E1E                     	;# 
  2488  0E1F                     	;# 
  2489  0E20                     	;# 
  2490  0E21                     	;# 
  2491  0E22                     	;# 
  2492  0E24                     	;# 
  2493  0E25                     	;# 
  2494  0E28                     	;# 
  2495  0E29                     	;# 
  2496  0E2A                     	;# 
  2497  0E2B                     	;# 
  2498  0E2C                     	;# 
  2499  0E2D                     	;# 
  2500  0E2E                     	;# 
  2501  0E2F                     	;# 
  2502  0E90                     	;# 
  2503  0E91                     	;# 
  2504  0E92                     	;# 
  2505  0E94                     	;# 
  2506  0E95                     	;# 
  2507  0E9C                     	;# 
  2508  0E9D                     	;# 
  2509  0E9E                     	;# 
  2510  0E9F                     	;# 
  2511  0EA0                     	;# 
  2512  0EA1                     	;# 
  2513  0EA2                     	;# 
  2514  0EA3                     	;# 
  2515  0EA4                     	;# 
  2516  0EA5                     	;# 
  2517  0EA6                     	;# 
  2518  0EA7                     	;# 
  2519  0F0F                     	;# 
  2520  0F10                     	;# 
  2521  0F11                     	;# 
  2522  0F12                     	;# 
  2523  0F13                     	;# 
  2524  0F14                     	;# 
  2525  0F15                     	;# 
  2526  0F16                     	;# 
  2527  0F17                     	;# 
  2528  0F18                     	;# 
  2529  0F19                     	;# 
  2530  0F1A                     	;# 
  2531  0F1B                     	;# 
  2532  0F1C                     	;# 
  2533  0F1D                     	;# 
  2534  0F1E                     	;# 
  2535  0F1F                     	;# 
  2536  0F20                     	;# 
  2537  0F21                     	;# 
  2538  0F22                     	;# 
  2539  0F23                     	;# 
  2540  0F24                     	;# 
  2541  0F25                     	;# 
  2542  0F26                     	;# 
  2543  0F27                     	;# 
  2544  0F28                     	;# 
  2545  0F29                     	;# 
  2546  0F2A                     	;# 
  2547  0F2B                     	;# 
  2548  0F2C                     	;# 
  2549  0F2D                     	;# 
  2550  0F2E                     	;# 
  2551  0F2F                     	;# 
  2552  0F30                     	;# 
  2553  0F31                     	;# 
  2554  0F32                     	;# 
  2555  0F33                     	;# 
  2556  0F34                     	;# 
  2557  0F35                     	;# 
  2558  0F36                     	;# 
  2559  0F37                     	;# 
  2560  0FE4                     	;# 
  2561  0FE5                     	;# 
  2562  0FE6                     	;# 
  2563  0FE7                     	;# 
  2564  0FE8                     	;# 
  2565  0FE9                     	;# 
  2566  0FEA                     	;# 
  2567  0FEB                     	;# 
  2568  0FED                     	;# 
  2569  0FEE                     	;# 
  2570  0FEF                     	;# 
  2571  0000                     	;# 
  2572  0001                     	;# 
  2573  0002                     	;# 
  2574  0003                     	;# 
  2575  0004                     	;# 
  2576  0005                     	;# 
  2577  0006                     	;# 
  2578  0007                     	;# 
  2579  0008                     	;# 
  2580  0009                     	;# 
  2581  000A                     	;# 
  2582  000B                     	;# 
  2583  000C                     	;# 
  2584  000D                     	;# 
  2585  000E                     	;# 
  2586  0010                     	;# 
  2587  0011                     	;# 
  2588  0012                     	;# 
  2589  0013                     	;# 
  2590  0014                     	;# 
  2591  0015                     	;# 
  2592  0015                     	;# 
  2593  0016                     	;# 
  2594  0016                     	;# 
  2595  0017                     	;# 
  2596  0018                     	;# 
  2597  0019                     	;# 
  2598  0019                     	;# 
  2599  001A                     	;# 
  2600  001B                     	;# 
  2601  001C                     	;# 
  2602  001D                     	;# 
  2603  001E                     	;# 
  2604  001F                     	;# 
  2605  008C                     	;# 
  2606  008D                     	;# 
  2607  008E                     	;# 
  2608  0090                     	;# 
  2609  0091                     	;# 
  2610  0092                     	;# 
  2611  0093                     	;# 
  2612  0094                     	;# 
  2613  0097                     	;# 
  2614  009B                     	;# 
  2615  009B                     	;# 
  2616  009C                     	;# 
  2617  009D                     	;# 
  2618  009E                     	;# 
  2619  009F                     	;# 
  2620  010C                     	;# 
  2621  010D                     	;# 
  2622  010E                     	;# 
  2623  0111                     	;# 
  2624  0112                     	;# 
  2625  0113                     	;# 
  2626  0114                     	;# 
  2627  0115                     	;# 
  2628  0116                     	;# 
  2629  0117                     	;# 
  2630  0118                     	;# 
  2631  0119                     	;# 
  2632  018C                     	;# 
  2633  018D                     	;# 
  2634  018E                     	;# 
  2635  0197                     	;# 
  2636  0199                     	;# 
  2637  0199                     	;# 
  2638  0199                     	;# 
  2639  019A                     	;# 
  2640  019A                     	;# 
  2641  019A                     	;# 
  2642  019B                     	;# 
  2643  019B                     	;# 
  2644  019B                     	;# 
  2645  019B                     	;# 
  2646  019B                     	;# 
  2647  019C                     	;# 
  2648  019C                     	;# 
  2649  019C                     	;# 
  2650  019D                     	;# 
  2651  019D                     	;# 
  2652  019D                     	;# 
  2653  019E                     	;# 
  2654  019E                     	;# 
  2655  019E                     	;# 
  2656  019F                     	;# 
  2657  019F                     	;# 
  2658  019F                     	;# 
  2659  019F                     	;# 
  2660  019F                     	;# 
  2661  020C                     	;# 
  2662  020D                     	;# 
  2663  020E                     	;# 
  2664  0211                     	;# 
  2665  0211                     	;# 
  2666  0212                     	;# 
  2667  0212                     	;# 
  2668  0213                     	;# 
  2669  0213                     	;# 
  2670  0214                     	;# 
  2671  0214                     	;# 
  2672  0215                     	;# 
  2673  0215                     	;# 
  2674  0215                     	;# 
  2675  0215                     	;# 
  2676  0216                     	;# 
  2677  0216                     	;# 
  2678  0217                     	;# 
  2679  0217                     	;# 
  2680  0219                     	;# 
  2681  021A                     	;# 
  2682  021B                     	;# 
  2683  021C                     	;# 
  2684  021D                     	;# 
  2685  021D                     	;# 
  2686  021E                     	;# 
  2687  021F                     	;# 
  2688  028C                     	;# 
  2689  028D                     	;# 
  2690  028E                     	;# 
  2691  0291                     	;# 
  2692  0291                     	;# 
  2693  0292                     	;# 
  2694  0293                     	;# 
  2695  0294                     	;# 
  2696  0295                     	;# 
  2697  0295                     	;# 
  2698  0296                     	;# 
  2699  0297                     	;# 
  2700  0298                     	;# 
  2701  029F                     	;# 
  2702  030C                     	;# 
  2703  030D                     	;# 
  2704  030E                     	;# 
  2705  0311                     	;# 
  2706  0311                     	;# 
  2707  0312                     	;# 
  2708  0313                     	;# 
  2709  0314                     	;# 
  2710  0315                     	;# 
  2711  0315                     	;# 
  2712  0316                     	;# 
  2713  0317                     	;# 
  2714  0318                     	;# 
  2715  038C                     	;# 
  2716  038D                     	;# 
  2717  038E                     	;# 
  2718  0391                     	;# 
  2719  0392                     	;# 
  2720  0393                     	;# 
  2721  0394                     	;# 
  2722  0395                     	;# 
  2723  0396                     	;# 
  2724  0397                     	;# 
  2725  0398                     	;# 
  2726  0399                     	;# 
  2727  039A                     	;# 
  2728  039C                     	;# 
  2729  039D                     	;# 
  2730  039E                     	;# 
  2731  039F                     	;# 
  2732  0411                     	;# 
  2733  0411                     	;# 
  2734  0412                     	;# 
  2735  0413                     	;# 
  2736  0414                     	;# 
  2737  0415                     	;# 
  2738  0416                     	;# 
  2739  0417                     	;# 
  2740  0418                     	;# 
  2741  0418                     	;# 
  2742  0419                     	;# 
  2743  041A                     	;# 
  2744  041B                     	;# 
  2745  041C                     	;# 
  2746  041D                     	;# 
  2747  041E                     	;# 
  2748  041F                     	;# 
  2749  0498                     	;# 
  2750  0498                     	;# 
  2751  0499                     	;# 
  2752  049A                     	;# 
  2753  049B                     	;# 
  2754  049B                     	;# 
  2755  049C                     	;# 
  2756  049D                     	;# 
  2757  049E                     	;# 
  2758  049F                     	;# 
  2759  0617                     	;# 
  2760  0618                     	;# 
  2761  0619                     	;# 
  2762  0619                     	;# 
  2763  061A                     	;# 
  2764  061B                     	;# 
  2765  061C                     	;# 
  2766  061C                     	;# 
  2767  061F                     	;# 
  2768  0691                     	;# 
  2769  0692                     	;# 
  2770  0693                     	;# 
  2771  0694                     	;# 
  2772  0695                     	;# 
  2773  0696                     	;# 
  2774  0697                     	;# 
  2775  0698                     	;# 
  2776  0699                     	;# 
  2777  0711                     	;# 
  2778  0712                     	;# 
  2779  0713                     	;# 
  2780  0714                     	;# 
  2781  0715                     	;# 
  2782  0716                     	;# 
  2783  0717                     	;# 
  2784  0718                     	;# 
  2785  0719                     	;# 
  2786  0891                     	;# 
  2787  0891                     	;# 
  2788  0891                     	;# 
  2789  0891                     	;# 
  2790  0891                     	;# 
  2791  0891                     	;# 
  2792  0892                     	;# 
  2793  0892                     	;# 
  2794  0892                     	;# 
  2795  0893                     	;# 
  2796  0893                     	;# 
  2797  0893                     	;# 
  2798  0893                     	;# 
  2799  0893                     	;# 
  2800  0893                     	;# 
  2801  0894                     	;# 
  2802  0894                     	;# 
  2803  0894                     	;# 
  2804  0895                     	;# 
  2805  0895                     	;# 
  2806  0895                     	;# 
  2807  0896                     	;# 
  2808  0896                     	;# 
  2809  0896                     	;# 
  2810  089B                     	;# 
  2811  0911                     	;# 
  2812  0912                     	;# 
  2813  0913                     	;# 
  2814  0914                     	;# 
  2815  0915                     	;# 
  2816  0916                     	;# 
  2817  0918                     	;# 
  2818  0919                     	;# 
  2819  091A                     	;# 
  2820  091B                     	;# 
  2821  091C                     	;# 
  2822  091D                     	;# 
  2823  091E                     	;# 
  2824  091F                     	;# 
  2825  0E0F                     	;# 
  2826  0E10                     	;# 
  2827  0E11                     	;# 
  2828  0E12                     	;# 
  2829  0E13                     	;# 
  2830  0E14                     	;# 
  2831  0E15                     	;# 
  2832  0E16                     	;# 
  2833  0E17                     	;# 
  2834  0E18                     	;# 
  2835  0E19                     	;# 
  2836  0E1A                     	;# 
  2837  0E1B                     	;# 
  2838  0E1C                     	;# 
  2839  0E1D                     	;# 
  2840  0E1E                     	;# 
  2841  0E1F                     	;# 
  2842  0E20                     	;# 
  2843  0E21                     	;# 
  2844  0E22                     	;# 
  2845  0E24                     	;# 
  2846  0E25                     	;# 
  2847  0E28                     	;# 
  2848  0E29                     	;# 
  2849  0E2A                     	;# 
  2850  0E2B                     	;# 
  2851  0E2C                     	;# 
  2852  0E2D                     	;# 
  2853  0E2E                     	;# 
  2854  0E2F                     	;# 
  2855  0E90                     	;# 
  2856  0E91                     	;# 
  2857  0E92                     	;# 
  2858  0E94                     	;# 
  2859  0E95                     	;# 
  2860  0E9C                     	;# 
  2861  0E9D                     	;# 
  2862  0E9E                     	;# 
  2863  0E9F                     	;# 
  2864  0EA0                     	;# 
  2865  0EA1                     	;# 
  2866  0EA2                     	;# 
  2867  0EA3                     	;# 
  2868  0EA4                     	;# 
  2869  0EA5                     	;# 
  2870  0EA6                     	;# 
  2871  0EA7                     	;# 
  2872  0F0F                     	;# 
  2873  0F10                     	;# 
  2874  0F11                     	;# 
  2875  0F12                     	;# 
  2876  0F13                     	;# 
  2877  0F14                     	;# 
  2878  0F15                     	;# 
  2879  0F16                     	;# 
  2880  0F17                     	;# 
  2881  0F18                     	;# 
  2882  0F19                     	;# 
  2883  0F1A                     	;# 
  2884  0F1B                     	;# 
  2885  0F1C                     	;# 
  2886  0F1D                     	;# 
  2887  0F1E                     	;# 
  2888  0F1F                     	;# 
  2889  0F20                     	;# 
  2890  0F21                     	;# 
  2891  0F22                     	;# 
  2892  0F23                     	;# 
  2893  0F24                     	;# 
  2894  0F25                     	;# 
  2895  0F26                     	;# 
  2896  0F27                     	;# 
  2897  0F28                     	;# 
  2898  0F29                     	;# 
  2899  0F2A                     	;# 
  2900  0F2B                     	;# 
  2901  0F2C                     	;# 
  2902  0F2D                     	;# 
  2903  0F2E                     	;# 
  2904  0F2F                     	;# 
  2905  0F30                     	;# 
  2906  0F31                     	;# 
  2907  0F32                     	;# 
  2908  0F33                     	;# 
  2909  0F34                     	;# 
  2910  0F35                     	;# 
  2911  0F36                     	;# 
  2912  0F37                     	;# 
  2913  0FE4                     	;# 
  2914  0FE5                     	;# 
  2915  0FE6                     	;# 
  2916  0FE7                     	;# 
  2917  0FE8                     	;# 
  2918  0FE9                     	;# 
  2919  0FEA                     	;# 
  2920  0FEB                     	;# 
  2921  0FED                     	;# 
  2922  0FEE                     	;# 
  2923  0FEF                     	;# 
  2924  0000                     	;# 
  2925  0001                     	;# 
  2926  0002                     	;# 
  2927  0003                     	;# 
  2928  0004                     	;# 
  2929  0005                     	;# 
  2930  0006                     	;# 
  2931  0007                     	;# 
  2932  0008                     	;# 
  2933  0009                     	;# 
  2934  000A                     	;# 
  2935  000B                     	;# 
  2936  000C                     	;# 
  2937  000D                     	;# 
  2938  000E                     	;# 
  2939  0010                     	;# 
  2940  0011                     	;# 
  2941  0012                     	;# 
  2942  0013                     	;# 
  2943  0014                     	;# 
  2944  0015                     	;# 
  2945  0015                     	;# 
  2946  0016                     	;# 
  2947  0016                     	;# 
  2948  0017                     	;# 
  2949  0018                     	;# 
  2950  0019                     	;# 
  2951  0019                     	;# 
  2952  001A                     	;# 
  2953  001B                     	;# 
  2954  001C                     	;# 
  2955  001D                     	;# 
  2956  001E                     	;# 
  2957  001F                     	;# 
  2958  008C                     	;# 
  2959  008D                     	;# 
  2960  008E                     	;# 
  2961  0090                     	;# 
  2962  0091                     	;# 
  2963  0092                     	;# 
  2964  0093                     	;# 
  2965  0094                     	;# 
  2966  0097                     	;# 
  2967  009B                     	;# 
  2968  009B                     	;# 
  2969  009C                     	;# 
  2970  009D                     	;# 
  2971  009E                     	;# 
  2972  009F                     	;# 
  2973  010C                     	;# 
  2974  010D                     	;# 
  2975  010E                     	;# 
  2976  0111                     	;# 
  2977  0112                     	;# 
  2978  0113                     	;# 
  2979  0114                     	;# 
  2980  0115                     	;# 
  2981  0116                     	;# 
  2982  0117                     	;# 
  2983  0118                     	;# 
  2984  0119                     	;# 
  2985  018C                     	;# 
  2986  018D                     	;# 
  2987  018E                     	;# 
  2988  0197                     	;# 
  2989  0199                     	;# 
  2990  0199                     	;# 
  2991  0199                     	;# 
  2992  019A                     	;# 
  2993  019A                     	;# 
  2994  019A                     	;# 
  2995  019B                     	;# 
  2996  019B                     	;# 
  2997  019B                     	;# 
  2998  019B                     	;# 
  2999  019B                     	;# 
  3000  019C                     	;# 
  3001  019C                     	;# 
  3002  019C                     	;# 
  3003  019D                     	;# 
  3004  019D                     	;# 
  3005  019D                     	;# 
  3006  019E                     	;# 
  3007  019E                     	;# 
  3008  019E                     	;# 
  3009  019F                     	;# 
  3010  019F                     	;# 
  3011  019F                     	;# 
  3012  019F                     	;# 
  3013  019F                     	;# 
  3014  020C                     	;# 
  3015  020D                     	;# 
  3016  020E                     	;# 
  3017  0211                     	;# 
  3018  0211                     	;# 
  3019  0212                     	;# 
  3020  0212                     	;# 
  3021  0213                     	;# 
  3022  0213                     	;# 
  3023  0214                     	;# 
  3024  0214                     	;# 
  3025  0215                     	;# 
  3026  0215                     	;# 
  3027  0215                     	;# 
  3028  0215                     	;# 
  3029  0216                     	;# 
  3030  0216                     	;# 
  3031  0217                     	;# 
  3032  0217                     	;# 
  3033  0219                     	;# 
  3034  021A                     	;# 
  3035  021B                     	;# 
  3036  021C                     	;# 
  3037  021D                     	;# 
  3038  021D                     	;# 
  3039  021E                     	;# 
  3040  021F                     	;# 
  3041  028C                     	;# 
  3042  028D                     	;# 
  3043  028E                     	;# 
  3044  0291                     	;# 
  3045  0291                     	;# 
  3046  0292                     	;# 
  3047  0293                     	;# 
  3048  0294                     	;# 
  3049  0295                     	;# 
  3050  0295                     	;# 
  3051  0296                     	;# 
  3052  0297                     	;# 
  3053  0298                     	;# 
  3054  029F                     	;# 
  3055  030C                     	;# 
  3056  030D                     	;# 
  3057  030E                     	;# 
  3058  0311                     	;# 
  3059  0311                     	;# 
  3060  0312                     	;# 
  3061  0313                     	;# 
  3062  0314                     	;# 
  3063  0315                     	;# 
  3064  0315                     	;# 
  3065  0316                     	;# 
  3066  0317                     	;# 
  3067  0318                     	;# 
  3068  038C                     	;# 
  3069  038D                     	;# 
  3070  038E                     	;# 
  3071  0391                     	;# 
  3072  0392                     	;# 
  3073  0393                     	;# 
  3074  0394                     	;# 
  3075  0395                     	;# 
  3076  0396                     	;# 
  3077  0397                     	;# 
  3078  0398                     	;# 
  3079  0399                     	;# 
  3080  039A                     	;# 
  3081  039C                     	;# 
  3082  039D                     	;# 
  3083  039E                     	;# 
  3084  039F                     	;# 
  3085  0411                     	;# 
  3086  0411                     	;# 
  3087  0412                     	;# 
  3088  0413                     	;# 
  3089  0414                     	;# 
  3090  0415                     	;# 
  3091  0416                     	;# 
  3092  0417                     	;# 
  3093  0418                     	;# 
  3094  0418                     	;# 
  3095  0419                     	;# 
  3096  041A                     	;# 
  3097  041B                     	;# 
  3098  041C                     	;# 
  3099  041D                     	;# 
  3100  041E                     	;# 
  3101  041F                     	;# 
  3102  0498                     	;# 
  3103  0498                     	;# 
  3104  0499                     	;# 
  3105  049A                     	;# 
  3106  049B                     	;# 
  3107  049B                     	;# 
  3108  049C                     	;# 
  3109  049D                     	;# 
  3110  049E                     	;# 
  3111  049F                     	;# 
  3112  0617                     	;# 
  3113  0618                     	;# 
  3114  0619                     	;# 
  3115  0619                     	;# 
  3116  061A                     	;# 
  3117  061B                     	;# 
  3118  061C                     	;# 
  3119  061C                     	;# 
  3120  061F                     	;# 
  3121  0691                     	;# 
  3122  0692                     	;# 
  3123  0693                     	;# 
  3124  0694                     	;# 
  3125  0695                     	;# 
  3126  0696                     	;# 
  3127  0697                     	;# 
  3128  0698                     	;# 
  3129  0699                     	;# 
  3130  0711                     	;# 
  3131  0712                     	;# 
  3132  0713                     	;# 
  3133  0714                     	;# 
  3134  0715                     	;# 
  3135  0716                     	;# 
  3136  0717                     	;# 
  3137  0718                     	;# 
  3138  0719                     	;# 
  3139  0891                     	;# 
  3140  0891                     	;# 
  3141  0891                     	;# 
  3142  0891                     	;# 
  3143  0891                     	;# 
  3144  0891                     	;# 
  3145  0892                     	;# 
  3146  0892                     	;# 
  3147  0892                     	;# 
  3148  0893                     	;# 
  3149  0893                     	;# 
  3150  0893                     	;# 
  3151  0893                     	;# 
  3152  0893                     	;# 
  3153  0893                     	;# 
  3154  0894                     	;# 
  3155  0894                     	;# 
  3156  0894                     	;# 
  3157  0895                     	;# 
  3158  0895                     	;# 
  3159  0895                     	;# 
  3160  0896                     	;# 
  3161  0896                     	;# 
  3162  0896                     	;# 
  3163  089B                     	;# 
  3164  0911                     	;# 
  3165  0912                     	;# 
  3166  0913                     	;# 
  3167  0914                     	;# 
  3168  0915                     	;# 
  3169  0916                     	;# 
  3170  0918                     	;# 
  3171  0919                     	;# 
  3172  091A                     	;# 
  3173  091B                     	;# 
  3174  091C                     	;# 
  3175  091D                     	;# 
  3176  091E                     	;# 
  3177  091F                     	;# 
  3178  0E0F                     	;# 
  3179  0E10                     	;# 
  3180  0E11                     	;# 
  3181  0E12                     	;# 
  3182  0E13                     	;# 
  3183  0E14                     	;# 
  3184  0E15                     	;# 
  3185  0E16                     	;# 
  3186  0E17                     	;# 
  3187  0E18                     	;# 
  3188  0E19                     	;# 
  3189  0E1A                     	;# 
  3190  0E1B                     	;# 
  3191  0E1C                     	;# 
  3192  0E1D                     	;# 
  3193  0E1E                     	;# 
  3194  0E1F                     	;# 
  3195  0E20                     	;# 
  3196  0E21                     	;# 
  3197  0E22                     	;# 
  3198  0E24                     	;# 
  3199  0E25                     	;# 
  3200  0E28                     	;# 
  3201  0E29                     	;# 
  3202  0E2A                     	;# 
  3203  0E2B                     	;# 
  3204  0E2C                     	;# 
  3205  0E2D                     	;# 
  3206  0E2E                     	;# 
  3207  0E2F                     	;# 
  3208  0E90                     	;# 
  3209  0E91                     	;# 
  3210  0E92                     	;# 
  3211  0E94                     	;# 
  3212  0E95                     	;# 
  3213  0E9C                     	;# 
  3214  0E9D                     	;# 
  3215  0E9E                     	;# 
  3216  0E9F                     	;# 
  3217  0EA0                     	;# 
  3218  0EA1                     	;# 
  3219  0EA2                     	;# 
  3220  0EA3                     	;# 
  3221  0EA4                     	;# 
  3222  0EA5                     	;# 
  3223  0EA6                     	;# 
  3224  0EA7                     	;# 
  3225  0F0F                     	;# 
  3226  0F10                     	;# 
  3227  0F11                     	;# 
  3228  0F12                     	;# 
  3229  0F13                     	;# 
  3230  0F14                     	;# 
  3231  0F15                     	;# 
  3232  0F16                     	;# 
  3233  0F17                     	;# 
  3234  0F18                     	;# 
  3235  0F19                     	;# 
  3236  0F1A                     	;# 
  3237  0F1B                     	;# 
  3238  0F1C                     	;# 
  3239  0F1D                     	;# 
  3240  0F1E                     	;# 
  3241  0F1F                     	;# 
  3242  0F20                     	;# 
  3243  0F21                     	;# 
  3244  0F22                     	;# 
  3245  0F23                     	;# 
  3246  0F24                     	;# 
  3247  0F25                     	;# 
  3248  0F26                     	;# 
  3249  0F27                     	;# 
  3250  0F28                     	;# 
  3251  0F29                     	;# 
  3252  0F2A                     	;# 
  3253  0F2B                     	;# 
  3254  0F2C                     	;# 
  3255  0F2D                     	;# 
  3256  0F2E                     	;# 
  3257  0F2F                     	;# 
  3258  0F30                     	;# 
  3259  0F31                     	;# 
  3260  0F32                     	;# 
  3261  0F33                     	;# 
  3262  0F34                     	;# 
  3263  0F35                     	;# 
  3264  0F36                     	;# 
  3265  0F37                     	;# 
  3266  0FE4                     	;# 
  3267  0FE5                     	;# 
  3268  0FE6                     	;# 
  3269  0FE7                     	;# 
  3270  0FE8                     	;# 
  3271  0FE9                     	;# 
  3272  0FEA                     	;# 
  3273  0FEB                     	;# 
  3274  0FED                     	;# 
  3275  0FEE                     	;# 
  3276  0FEF                     	;# 
  3277  0000                     	;# 
  3278  0001                     	;# 
  3279  0002                     	;# 
  3280  0003                     	;# 
  3281  0004                     	;# 
  3282  0005                     	;# 
  3283  0006                     	;# 
  3284  0007                     	;# 
  3285  0008                     	;# 
  3286  0009                     	;# 
  3287  000A                     	;# 
  3288  000B                     	;# 
  3289  000C                     	;# 
  3290  000D                     	;# 
  3291  000E                     	;# 
  3292  0010                     	;# 
  3293  0011                     	;# 
  3294  0012                     	;# 
  3295  0013                     	;# 
  3296  0014                     	;# 
  3297  0015                     	;# 
  3298  0015                     	;# 
  3299  0016                     	;# 
  3300  0016                     	;# 
  3301  0017                     	;# 
  3302  0018                     	;# 
  3303  0019                     	;# 
  3304  0019                     	;# 
  3305  001A                     	;# 
  3306  001B                     	;# 
  3307  001C                     	;# 
  3308  001D                     	;# 
  3309  001E                     	;# 
  3310  001F                     	;# 
  3311  008C                     	;# 
  3312  008D                     	;# 
  3313  008E                     	;# 
  3314  0090                     	;# 
  3315  0091                     	;# 
  3316  0092                     	;# 
  3317  0093                     	;# 
  3318  0094                     	;# 
  3319  0097                     	;# 
  3320  009B                     	;# 
  3321  009B                     	;# 
  3322  009C                     	;# 
  3323  009D                     	;# 
  3324  009E                     	;# 
  3325  009F                     	;# 
  3326  010C                     	;# 
  3327  010D                     	;# 
  3328  010E                     	;# 
  3329  0111                     	;# 
  3330  0112                     	;# 
  3331  0113                     	;# 
  3332  0114                     	;# 
  3333  0115                     	;# 
  3334  0116                     	;# 
  3335  0117                     	;# 
  3336  0118                     	;# 
  3337  0119                     	;# 
  3338  018C                     	;# 
  3339  018D                     	;# 
  3340  018E                     	;# 
  3341  0197                     	;# 
  3342  0199                     	;# 
  3343  0199                     	;# 
  3344  0199                     	;# 
  3345  019A                     	;# 
  3346  019A                     	;# 
  3347  019A                     	;# 
  3348  019B                     	;# 
  3349  019B                     	;# 
  3350  019B                     	;# 
  3351  019B                     	;# 
  3352  019B                     	;# 
  3353  019C                     	;# 
  3354  019C                     	;# 
  3355  019C                     	;# 
  3356  019D                     	;# 
  3357  019D                     	;# 
  3358  019D                     	;# 
  3359  019E                     	;# 
  3360  019E                     	;# 
  3361  019E                     	;# 
  3362  019F                     	;# 
  3363  019F                     	;# 
  3364  019F                     	;# 
  3365  019F                     	;# 
  3366  019F                     	;# 
  3367  020C                     	;# 
  3368  020D                     	;# 
  3369  020E                     	;# 
  3370  0211                     	;# 
  3371  0211                     	;# 
  3372  0212                     	;# 
  3373  0212                     	;# 
  3374  0213                     	;# 
  3375  0213                     	;# 
  3376  0214                     	;# 
  3377  0214                     	;# 
  3378  0215                     	;# 
  3379  0215                     	;# 
  3380  0215                     	;# 
  3381  0215                     	;# 
  3382  0216                     	;# 
  3383  0216                     	;# 
  3384  0217                     	;# 
  3385  0217                     	;# 
  3386  0219                     	;# 
  3387  021A                     	;# 
  3388  021B                     	;# 
  3389  021C                     	;# 
  3390  021D                     	;# 
  3391  021D                     	;# 
  3392  021E                     	;# 
  3393  021F                     	;# 
  3394  028C                     	;# 
  3395  028D                     	;# 
  3396  028E                     	;# 
  3397  0291                     	;# 
  3398  0291                     	;# 
  3399  0292                     	;# 
  3400  0293                     	;# 
  3401  0294                     	;# 
  3402  0295                     	;# 
  3403  0295                     	;# 
  3404  0296                     	;# 
  3405  0297                     	;# 
  3406  0298                     	;# 
  3407  029F                     	;# 
  3408  030C                     	;# 
  3409  030D                     	;# 
  3410  030E                     	;# 
  3411  0311                     	;# 
  3412  0311                     	;# 
  3413  0312                     	;# 
  3414  0313                     	;# 
  3415  0314                     	;# 
  3416  0315                     	;# 
  3417  0315                     	;# 
  3418  0316                     	;# 
  3419  0317                     	;# 
  3420  0318                     	;# 
  3421  038C                     	;# 
  3422  038D                     	;# 
  3423  038E                     	;# 
  3424  0391                     	;# 
  3425  0392                     	;# 
  3426  0393                     	;# 
  3427  0394                     	;# 
  3428  0395                     	;# 
  3429  0396                     	;# 
  3430  0397                     	;# 
  3431  0398                     	;# 
  3432  0399                     	;# 
  3433  039A                     	;# 
  3434  039C                     	;# 
  3435  039D                     	;# 
  3436  039E                     	;# 
  3437  039F                     	;# 
  3438  0411                     	;# 
  3439  0411                     	;# 
  3440  0412                     	;# 
  3441  0413                     	;# 
  3442  0414                     	;# 
  3443  0415                     	;# 
  3444  0416                     	;# 
  3445  0417                     	;# 
  3446  0418                     	;# 
  3447  0418                     	;# 
  3448  0419                     	;# 
  3449  041A                     	;# 
  3450  041B                     	;# 
  3451  041C                     	;# 
  3452  041D                     	;# 
  3453  041E                     	;# 
  3454  041F                     	;# 
  3455  0498                     	;# 
  3456  0498                     	;# 
  3457  0499                     	;# 
  3458  049A                     	;# 
  3459  049B                     	;# 
  3460  049B                     	;# 
  3461  049C                     	;# 
  3462  049D                     	;# 
  3463  049E                     	;# 
  3464  049F                     	;# 
  3465  0617                     	;# 
  3466  0618                     	;# 
  3467  0619                     	;# 
  3468  0619                     	;# 
  3469  061A                     	;# 
  3470  061B                     	;# 
  3471  061C                     	;# 
  3472  061C                     	;# 
  3473  061F                     	;# 
  3474  0691                     	;# 
  3475  0692                     	;# 
  3476  0693                     	;# 
  3477  0694                     	;# 
  3478  0695                     	;# 
  3479  0696                     	;# 
  3480  0697                     	;# 
  3481  0698                     	;# 
  3482  0699                     	;# 
  3483  0711                     	;# 
  3484  0712                     	;# 
  3485  0713                     	;# 
  3486  0714                     	;# 
  3487  0715                     	;# 
  3488  0716                     	;# 
  3489  0717                     	;# 
  3490  0718                     	;# 
  3491  0719                     	;# 
  3492  0891                     	;# 
  3493  0891                     	;# 
  3494  0891                     	;# 
  3495  0891                     	;# 
  3496  0891                     	;# 
  3497  0891                     	;# 
  3498  0892                     	;# 
  3499  0892                     	;# 
  3500  0892                     	;# 
  3501  0893                     	;# 
  3502  0893                     	;# 
  3503  0893                     	;# 
  3504  0893                     	;# 
  3505  0893                     	;# 
  3506  0893                     	;# 
  3507  0894                     	;# 
  3508  0894                     	;# 
  3509  0894                     	;# 
  3510  0895                     	;# 
  3511  0895                     	;# 
  3512  0895                     	;# 
  3513  0896                     	;# 
  3514  0896                     	;# 
  3515  0896                     	;# 
  3516  089B                     	;# 
  3517  0911                     	;# 
  3518  0912                     	;# 
  3519  0913                     	;# 
  3520  0914                     	;# 
  3521  0915                     	;# 
  3522  0916                     	;# 
  3523  0918                     	;# 
  3524  0919                     	;# 
  3525  091A                     	;# 
  3526  091B                     	;# 
  3527  091C                     	;# 
  3528  091D                     	;# 
  3529  091E                     	;# 
  3530  091F                     	;# 
  3531  0E0F                     	;# 
  3532  0E10                     	;# 
  3533  0E11                     	;# 
  3534  0E12                     	;# 
  3535  0E13                     	;# 
  3536  0E14                     	;# 
  3537  0E15                     	;# 
  3538  0E16                     	;# 
  3539  0E17                     	;# 
  3540  0E18                     	;# 
  3541  0E19                     	;# 
  3542  0E1A                     	;# 
  3543  0E1B                     	;# 
  3544  0E1C                     	;# 
  3545  0E1D                     	;# 
  3546  0E1E                     	;# 
  3547  0E1F                     	;# 
  3548  0E20                     	;# 
  3549  0E21                     	;# 
  3550  0E22                     	;# 
  3551  0E24                     	;# 
  3552  0E25                     	;# 
  3553  0E28                     	;# 
  3554  0E29                     	;# 
  3555  0E2A                     	;# 
  3556  0E2B                     	;# 
  3557  0E2C                     	;# 
  3558  0E2D                     	;# 
  3559  0E2E                     	;# 
  3560  0E2F                     	;# 
  3561  0E90                     	;# 
  3562  0E91                     	;# 
  3563  0E92                     	;# 
  3564  0E94                     	;# 
  3565  0E95                     	;# 
  3566  0E9C                     	;# 
  3567  0E9D                     	;# 
  3568  0E9E                     	;# 
  3569  0E9F                     	;# 
  3570  0EA0                     	;# 
  3571  0EA1                     	;# 
  3572  0EA2                     	;# 
  3573  0EA3                     	;# 
  3574  0EA4                     	;# 
  3575  0EA5                     	;# 
  3576  0EA6                     	;# 
  3577  0EA7                     	;# 
  3578  0F0F                     	;# 
  3579  0F10                     	;# 
  3580  0F11                     	;# 
  3581  0F12                     	;# 
  3582  0F13                     	;# 
  3583  0F14                     	;# 
  3584  0F15                     	;# 
  3585  0F16                     	;# 
  3586  0F17                     	;# 
  3587  0F18                     	;# 
  3588  0F19                     	;# 
  3589  0F1A                     	;# 
  3590  0F1B                     	;# 
  3591  0F1C                     	;# 
  3592  0F1D                     	;# 
  3593  0F1E                     	;# 
  3594  0F1F                     	;# 
  3595  0F20                     	;# 
  3596  0F21                     	;# 
  3597  0F22                     	;# 
  3598  0F23                     	;# 
  3599  0F24                     	;# 
  3600  0F25                     	;# 
  3601  0F26                     	;# 
  3602  0F27                     	;# 
  3603  0F28                     	;# 
  3604  0F29                     	;# 
  3605  0F2A                     	;# 
  3606  0F2B                     	;# 
  3607  0F2C                     	;# 
  3608  0F2D                     	;# 
  3609  0F2E                     	;# 
  3610  0F2F                     	;# 
  3611  0F30                     	;# 
  3612  0F31                     	;# 
  3613  0F32                     	;# 
  3614  0F33                     	;# 
  3615  0F34                     	;# 
  3616  0F35                     	;# 
  3617  0F36                     	;# 
  3618  0F37                     	;# 
  3619  0FE4                     	;# 
  3620  0FE5                     	;# 
  3621  0FE6                     	;# 
  3622  0FE7                     	;# 
  3623  0FE8                     	;# 
  3624  0FE9                     	;# 
  3625  0FEA                     	;# 
  3626  0FEB                     	;# 
  3627  0FED                     	;# 
  3628  0FEE                     	;# 
  3629  0FEF                     	;_m_led_para
  3630                           
  3631                           	psect	idataBANK2
  3632  1B7B                     __pidataBANK2:	
  3633                           
  3634                           ;initializer for ble_check_devid@F8326
  3635  1B7B  3433               	retlw	51
  3636  1B7C  3430               	retlw	48
  3637  1B7D  3433               	retlw	51
  3638  1B7E  3431               	retlw	49
  3639  1B7F  3433               	retlw	51
  3640  1B80  3434               	retlw	52
  3641  1B81  3433               	retlw	51
  3642  1B82  3431               	retlw	49
  3643  1B83  3433               	retlw	51
  3644  1B84  3430               	retlw	48
  3645  1B85  3433               	retlw	51
  3646  1B86  3431               	retlw	49
  3647  1B87  3433               	retlw	51
  3648  1B88  3430               	retlw	48
  3649  1B89  3433               	retlw	51
  3650  1B8A  3433               	retlw	51
  3651  1B8B  3400               	retlw	0
  3652                           
  3653                           ;initializer for _MONTH_DAY
  3654  1B8C  341F               	retlw	31
  3655  1B8D  341C               	retlw	28
  3656  1B8E  341F               	retlw	31
  3657  1B8F  341E               	retlw	30
  3658  1B90  341F               	retlw	31
  3659  1B91  341E               	retlw	30
  3660  1B92  341F               	retlw	31
  3661  1B93  341F               	retlw	31
  3662  1B94  341E               	retlw	30
  3663  1B95  341F               	retlw	31
  3664  1B96  341E               	retlw	30
  3665  1B97  341F               	retlw	31
  3666                           
  3667                           ;initializer for _led_load_duty
  3668  1B98  34E5               	retlw	low _pwm1_load_duty
  3669  1B99  3419               	retlw	high _pwm1_load_duty
  3670  1B9A  34DF               	retlw	low _pwm2_load_duty
  3671  1B9B  3419               	retlw	high _pwm2_load_duty
  3672  1B9C  34D9               	retlw	low _pwm3_load_duty
  3673  1B9D  3419               	retlw	high _pwm3_load_duty
  3674  1B9E  34EB               	retlw	low _pwm4_load_duty
  3675  1B9F  3419               	retlw	high _pwm4_load_duty
  3676                           
  3677                           ;initializer for ble_send_cmd@F8318
  3678  1BA0  3441               	retlw	65
  3679  1BA1  3454               	retlw	84
  3680  1BA2  342B               	retlw	43
  3681  1BA3  344F               	retlw	79
  3682  1BA4  344B               	retlw	75
  3683  1BA5  340D               	retlw	13
  3684  1BA6  340A               	retlw	10
  3685  1BA7  3400               	retlw	0
  3686                           
  3687                           	psect	idataBANK3
  3688  1AFE                     __pidataBANK3:	
  3689                           
  3690                           ;initializer for _dynamic_func_init
  3691  1AFE  34D2               	retlw	low _led_thunder1_init
  3692  1AFF  3419               	retlw	high _led_thunder1_init
  3693  1B00  3400               	retlw	low _led_thunder2_init
  3694  1B01  3408               	retlw	high _led_thunder2_init
  3695  1B02  34CA               	retlw	low _led_thunder3_init
  3696  1B03  3419               	retlw	high _led_thunder3_init
  3697  1B04  34A8               	retlw	low _led_allcolor_init
  3698  1B05  341B               	retlw	high _led_allcolor_init
  3699  1B06  34BA               	retlw	low _led_cloud1_init
  3700  1B07  341B               	retlw	high _led_cloud1_init
  3701  1B08  3413               	retlw	low _led_cloud2_init
  3702  1B09  3408               	retlw	high _led_cloud2_init
  3703  1B0A  34AE               	retlw	low _led_cloud3_init
  3704  1B0B  341B               	retlw	high _led_cloud3_init
  3705  1B0C  34D7               	retlw	low _led_cloud4_init
  3706  1B0D  341B               	retlw	high _led_cloud4_init
  3707  1B0E  3476               	retlw	low _led_moon1_init
  3708  1B0F  3419               	retlw	high _led_moon1_init
  3709  1B10  3409               	retlw	low _led_moon2_init
  3710  1B11  3408               	retlw	high _led_moon2_init
  3711  1B12  34CB               	retlw	low _led_moon3_init
  3712  1B13  341B               	retlw	high _led_moon3_init
  3713                           
  3714                           	psect	nvBANK1
  3715  00D0                     __pnvBANK1:	
  3716  00D0                     _tmr0_isr_cb:	
  3717  00D0                     	ds	2
  3718                           
  3719                           	psect	nvBANK2
  3720  015C                     __pnvBANK2:	
  3721  015C                     _eusart_rcv_cb:	
  3722  015C                     	ds	2
  3723  015E                     _tmr2_isr_cb:	
  3724  015E                     	ds	2
  3725  0160                     _tx_remain:	
  3726  0160                     	ds	1
  3727  001F                     _T2CONbits	set	31
  3728  0017                     _T0CON0bits	set	23
  3729  000C                     _PORTAbits	set	12
  3730  000B                     _INTCONbits	set	11
  3731  0011                     _PIR1bits	set	17
  3732  001D                     _TMR2	set	29
  3733  001E                     _PR2	set	30
  3734  001F                     _T2CON	set	31
  3735  0010                     _PIR0bits	set	16
  3736  0015                     _TMR0L	set	21
  3737  0016                     _TMR0H	set	22
  3738  0018                     _T0CON1	set	24
  3739  0017                     _T0CON0	set	23
  3740  008E                     _TRISC	set	142
  3741  008D                     _TRISB	set	141
  3742  008C                     _TRISA	set	140
  3743  0091                     _PIE1bits	set	145
  3744  0090                     _PIE0bits	set	144
  3745  010E                     _LATC	set	270
  3746  010D                     _LATB	set	269
  3747  010C                     _LATA	set	268
  3748  010D                     _LATBbits	set	269
  3749  010E                     _LATCbits	set	270
  3750  018C                     _ANSELA	set	396
  3751  018D                     _ANSELB	set	397
  3752  018E                     _ANSELC	set	398
  3753  019E                     _TXSTAbits	set	414
  3754  019D                     _RCSTAbits	set	413
  3755  0199                     _RCREG	set	409
  3756  019D                     _RC1STAbits	set	413
  3757  019A                     _TXREG	set	410
  3758  019C                     _SP1BRGH	set	412
  3759  019B                     _SP1BRGL	set	411
  3760  019E                     _TX1STA	set	414
  3761  019D                     _RC1STA	set	413
  3762  019F                     _BAUD1CON	set	415
  3763  020E                     _WPUC	set	526
  3764  020C                     _WPUA	set	524
  3765  020D                     _WPUB	set	525
  3766  028E                     _ODCONC	set	654
  3767  028D                     _ODCONB	set	653
  3768  028C                     _ODCONA	set	652
  3769  0295                     _CCPR2L	set	661
  3770  0296                     _CCPR2H	set	662
  3771  0297                     _CCP2CON	set	663
  3772  029F                     _CCPTMRSbits	set	671
  3773  0291                     _CCPR1L	set	657
  3774  0292                     _CCPR1H	set	658
  3775  0293                     _CCP1CON	set	659
  3776  0315                     _CCPR4L	set	789
  3777  0316                     _CCPR4H	set	790
  3778  0317                     _CCP4CON	set	791
  3779  0311                     _CCPR3L	set	785
  3780  0312                     _CCPR3H	set	786
  3781  0313                     _CCP3CON	set	787
  3782  0619                     _PWM5CON	set	1561
  3783  061F                     _PWMTMRSbits	set	1567
  3784  0617                     _PWM5DCL	set	1559
  3785  0618                     _PWM5DCH	set	1560
  3786  0891                     _NVMADR	set	2193
  3787  0895                     _NVMCON1	set	2197
  3788  0896                     _NVMCON2	set	2198
  3789  0895                     _NVMCON1bits	set	2197
  3790  0893                     _NVMDATL	set	2195
  3791  0891                     _NVMADRL	set	2193
  3792  0892                     _NVMADRH	set	2194
  3793  091E                     _OSCTUNE	set	2334
  3794  091F                     _OSCFRQ	set	2335
  3795  091D                     _OSCEN	set	2333
  3796  091B                     _OSCCON3	set	2331
  3797  0919                     _OSCCON1	set	2329
  3798  0E24                     _RXPPSbits	set	3620
  3799  0E0F                     _PPSLOCKbits	set	3599
  3800  0E0F                     _PPSLOCK	set	3599
  3801  0EA7                     _RC7PPSbits	set	3751
  3802  0EA6                     _RC6PPSbits	set	3750
  3803  0EA3                     _RC3PPSbits	set	3747
  3804  0EA4                     _RC4PPSbits	set	3748
  3805  0EA5                     _RC5PPSbits	set	3749
  3806  0E9C                     _RB4PPSbits	set	3740
  3807                           
  3808                           	psect	stringtext1
  3809  18BA                     __pstringtext1:	
  3810  18BA                     STR_2:	
  3811  18BA  3441               	retlw	65	;'A'
  3812  18BB  3454               	retlw	84	;'T'
  3813  18BC  342B               	retlw	43	;'+'
  3814  18BD  3441               	retlw	65	;'A'
  3815  18BE  3444               	retlw	68	;'D'
  3816  18BF  3456               	retlw	86	;'V'
  3817  18C0  345F               	retlw	95	;'_'
  3818  18C1  344D               	retlw	77	;'M'
  3819  18C2  3446               	retlw	70	;'F'
  3820  18C3  3452               	retlw	82	;'R'
  3821  18C4  345F               	retlw	95	;'_'
  3822  18C5  3453               	retlw	83	;'S'
  3823  18C6  3450               	retlw	80	;'P'
  3824  18C7  3443               	retlw	67	;'C'
  3825  18C8  343D               	retlw	61	;'='
  3826  18C9  3433               	retlw	51	;'3'
  3827  18CA  3430               	retlw	48	;'0'
  3828  18CB  3433               	retlw	51	;'3'
  3829  18CC  3431               	retlw	49	;'1'
  3830  18CD  3433               	retlw	51	;'3'
  3831  18CE  3434               	retlw	52	;'4'
  3832  18CF  3433               	retlw	51	;'3'
  3833  18D0  3431               	retlw	49	;'1'
  3834  18D1  3433               	retlw	51	;'3'
  3835  18D2  3430               	retlw	48	;'0'
  3836  18D3  3433               	retlw	51	;'3'
  3837  18D4  3431               	retlw	49	;'1'
  3838  18D5  3433               	retlw	51	;'3'
  3839  18D6  3430               	retlw	48	;'0'
  3840  18D7  3433               	retlw	51	;'3'
  3841  18D8  3433               	retlw	51	;'3'
  3842  18D9  340D               	retlw	13
  3843  18DA  340A               	retlw	10
  3844  18DB  3400               	retlw	0
  3845                           
  3846                           	psect	stringtext2
  3847  1942                     __pstringtext2:	
  3848  1942                     STR_1:	
  3849  1942  3441               	retlw	65	;'A'
  3850  1943  3454               	retlw	84	;'T'
  3851  1944  342B               	retlw	43	;'+'
  3852  1945  3441               	retlw	65	;'A'
  3853  1946  3444               	retlw	68	;'D'
  3854  1947  3456               	retlw	86	;'V'
  3855  1948  345F               	retlw	95	;'_'
  3856  1949  344D               	retlw	77	;'M'
  3857  194A  3446               	retlw	70	;'F'
  3858  194B  3452               	retlw	82	;'R'
  3859  194C  345F               	retlw	95	;'_'
  3860  194D  3453               	retlw	83	;'S'
  3861  194E  3450               	retlw	80	;'P'
  3862  194F  3443               	retlw	67	;'C'
  3863  1950  343D               	retlw	61	;'='
  3864  1951  343F               	retlw	63	;'?'
  3865  1952  340D               	retlw	13
  3866  1953  340A               	retlw	10
  3867  1954  3400               	retlw	0
  3868                           
  3869                           	psect	stringtext3
  3870  1967                     __pstringtext3:	
  3871  1967                     STR_4:	
  3872  1967  3441               	retlw	65	;'A'
  3873  1968  3454               	retlw	84	;'T'
  3874  1969  342B               	retlw	43	;'+'
  3875  196A  344D               	retlw	77	;'M'
  3876  196B  344F               	retlw	79	;'O'
  3877  196C  3444               	retlw	68	;'D'
  3878  196D  3445               	retlw	69	;'E'
  3879  196E  343D               	retlw	61	;'='
  3880  196F  3444               	retlw	68	;'D'
  3881  1970  3441               	retlw	65	;'A'
  3882  1971  3454               	retlw	84	;'T'
  3883  1972  3441               	retlw	65	;'A'
  3884  1973  340D               	retlw	13
  3885  1974  340A               	retlw	10
  3886  1975  3400               	retlw	0
  3887                           
  3888                           	psect	stringtext4
  3889  19B5                     __pstringtext4:	
  3890  19B5                     STR_3:	
  3891  19B5  3441               	retlw	65	;'A'
  3892  19B6  3454               	retlw	84	;'T'
  3893  19B7  342B               	retlw	43	;'+'
  3894  19B8  3453               	retlw	83	;'S'
  3895  19B9  3445               	retlw	69	;'E'
  3896  19BA  3454               	retlw	84	;'T'
  3897  19BB  343D               	retlw	61	;'='
  3898  19BC  3431               	retlw	49	;'1'
  3899  19BD  340D               	retlw	13
  3900  19BE  340A               	retlw	10
  3901  19BF  3400               	retlw	0
  3902                           
  3903                           	psect	stringtext5
  3904  0000                     __pstringtext5:	
  3905                           
  3906                           	psect	bssCOMMON
  3907  007C                     __pbssCOMMON:	
  3908  007C                     _dynamic_run_mode:	
  3909  007C                     	ds	1
  3910  007D                     _index:	
  3911  007D                     	ds	1
  3912                           
  3913                           	psect	bssBANK0
  3914  0048                     __pbssBANK0:	
  3915  0048                     _current_bright:	
  3916  0048                     	ds	8
  3917  0050                     _dynamic_run_pause:	
  3918  0050                     	ds	1
  3919  0051                     _dynamic_state:	
  3920  0051                     	ds	1
  3921  0052                     _dynamic_chn:	
  3922  0052                     	ds	1
  3923  0053                     _tx_tail:	
  3924  0053                     	ds	1
  3925  0054                     _dynamic_max:	
  3926  0054                     	ds	4
  3927  0058                     _dynamic_min:	
  3928  0058                     	ds	4
  3929                           
  3930                           	psect	bssBANK1
  3931  00C2                     __pbssBANK1:	
  3932  00C2                     _led_run_para:	
  3933  00C2                     	ds	4
  3934  00C6                     _dynamic_count:	
  3935  00C6                     	ds	2
  3936  00C8                     _dynamic_period:	
  3937  00C8                     	ds	2
  3938  00CA                     tmr2_isr_callback@cnt:	
  3939  00CA                     	ds	1
  3940  00CB                     led_find_device@toggle:	
  3941  00CB                     	ds	1
  3942  00CC                     _dynamic_rise:	
  3943  00CC                     	ds	1
  3944  00CD                     _checksum:	
  3945  00CD                     	ds	1
  3946  00CE                     _rtc_status:	
  3947  00CE                     	ds	1
  3948  00CF                     _tx_head:	
  3949  00CF                     	ds	1
  3950                           
  3951                           	psect	bssBANK2
  3952  014D                     __pbssBANK2:	
  3953  014D                     _target_bright:	
  3954  014D                     	ds	8
  3955  0155                     _m_current_time:	
  3956  0155                     	ds	7
  3957                           
  3958                           	psect	dataBANK2
  3959  0120                     __pdataBANK2:	
  3960  0120                     ble_check_devid@F8326:	
  3961  0120                     	ds	17
  3962  0131                     _MONTH_DAY:	
  3963  0131                     	ds	12
  3964  013D                     _led_load_duty:	
  3965  013D                     	ds	8
  3966  0145                     ble_send_cmd@F8318:	
  3967  0145                     	ds	8
  3968                           
  3969                           	psect	dataBANK3
  3970  01D4                     __pdataBANK3:	
  3971  01D4                     _dynamic_func_init:	
  3972  01D4                     	ds	22
  3973                           
  3974                           	psect	bssBANK4
  3975  0220                     __pbssBANK4:	
  3976  0220                     _rx_buf:	
  3977  0220                     	ds	80
  3978                           
  3979                           	psect	bssBANK5
  3980  02A0                     __pbssBANK5:	
  3981  02A0                     _tx_buf:	
  3982  02A0                     	ds	64
  3983                           
  3984                           	psect	inittext
  3985  1985                     init_ram:	
  3986  1985  00FE               	movwf	126
  3987  1986                     initloop:	
  3988  1986  0012               	moviw fsr0++
  3989  1987  001E               	movwi fsr1++
  3990  1988  3001               	movlw	1
  3991  1989  02FE               	subwf	126,f
  3992  198A  3000               	movlw	0
  3993  198B  3BFF               	subwfb	127,f
  3994  198C  087F               	movf	127,w
  3995  198D  047E               	iorwf	126,w
  3996  198E  1903               	btfsc	3,2
  3997  198F  3400               	retlw	0
  3998  1990  2986               	goto	initloop
  3999                           
  4000                           	psect	clrtext
  4001  1991                     clear_ram0:	
  4002                           ;	Called with FSR0 containing the base address, and
  4003                           ;	btemp/btemp+1 has the size to clear
  4004                           
  4005  1991  0064               	clrwdt	;clear the watchdog before getting into this loop
  4006  1992                     clrloop0:	
  4007  1992  3001               	movlw	1
  4008  1993  0180               	clrf	0	;clear RAM location pointed to by FSR
  4009  1994  3101               	addfsr 0,1
  4010  1995  02FE               	subwf	126,f
  4011  1996  3000               	movlw	0
  4012  1997  3BFF               	subwfb	127,f
  4013  1998  087F               	movf	127,w
  4014  1999  047E               	iorwf	126,w
  4015  199A  1903               	btfsc	3,2
  4016  199B  3400               	retlw	0	;all done for this memory range, return
  4017  199C  2992               	goto	clrloop0	;have we reached the end yet?
  4018                           
  4019                           	psect	cstackBANK3
  4020  01A0                     __pcstackBANK3:	
  4021  01A0                     led_pro_process@index:	
  4022  01A0                     led_auto_process@val:	
  4023                           ; 10 bytes @ 0x0
  4024                           
  4025                           
  4026                           ; 24 bytes @ 0x0
  4027  01A0                     	ds	10
  4028  01AA                     led_pro_process@tmp:	
  4029                           
  4030                           ; 1 bytes @ 0xA
  4031  01AA                     	ds	1
  4032  01AB                     led_pro_process@t1:	
  4033                           
  4034                           ; 2 bytes @ 0xB
  4035  01AB                     	ds	2
  4036  01AD                     led_pro_process@t2:	
  4037                           
  4038                           ; 2 bytes @ 0xD
  4039  01AD                     	ds	2
  4040  01AF                     led_pro_process@dt:	
  4041                           
  4042                           ; 4 bytes @ 0xF
  4043  01AF                     	ds	4
  4044  01B3                     led_pro_process@flag:	
  4045                           
  4046                           ; 1 bytes @ 0x13
  4047  01B3                     	ds	1
  4048  01B4                     led_pro_process@duration:	
  4049                           
  4050                           ; 2 bytes @ 0x14
  4051  01B4                     	ds	2
  4052  01B6                     led_pro_process@p1:	
  4053                           
  4054                           ; 2 bytes @ 0x16
  4055  01B6                     	ds	2
  4056  01B8                     led_pro_process@p2:	
  4057  01B8                     led_auto_process@tr:	
  4058                           ; 2 bytes @ 0x18
  4059                           
  4060                           
  4061                           ; 12 bytes @ 0x18
  4062  01B8                     	ds	2
  4063  01BA                     led_pro_process@start:	
  4064                           
  4065                           ; 2 bytes @ 0x1A
  4066  01BA                     	ds	2
  4067  01BC                     led_pro_process@end:	
  4068                           
  4069                           ; 2 bytes @ 0x1C
  4070  01BC                     	ds	2
  4071  01BE                     led_pro_process@point_count:	
  4072                           
  4073                           ; 1 bytes @ 0x1E
  4074  01BE                     	ds	1
  4075  01BF                     led_pro_process@et:	
  4076                           
  4077                           ; 2 bytes @ 0x1F
  4078  01BF                     	ds	2
  4079  01C1                     led_pro_process@sp:	
  4080                           
  4081                           ; 2 bytes @ 0x21
  4082  01C1                     	ds	2
  4083  01C3                     led_pro_process@ep:	
  4084                           
  4085                           ; 2 bytes @ 0x23
  4086  01C3                     	ds	1
  4087  01C4                     led_auto_process@duration:	
  4088                           
  4089                           ; 2 bytes @ 0x24
  4090  01C4                     	ds	1
  4091  01C5                     led_pro_process@j:	
  4092                           
  4093                           ; 1 bytes @ 0x25
  4094  01C5                     	ds	1
  4095  01C6                     led_auto_process@j:	
  4096  01C6                     led_pro_process@st:	
  4097                           ; 1 bytes @ 0x26
  4098                           
  4099                           
  4100                           ; 2 bytes @ 0x26
  4101  01C6                     	ds	1
  4102  01C7                     led_auto_process@dt:	
  4103                           
  4104                           ; 4 bytes @ 0x27
  4105  01C7                     	ds	1
  4106  01C8                     led_pro_process@i:	
  4107                           
  4108                           ; 1 bytes @ 0x28
  4109  01C8                     	ds	3
  4110  01CB                     led_auto_process@count:	
  4111                           
  4112                           ; 1 bytes @ 0x2B
  4113  01CB                     	ds	1
  4114  01CC                     led_auto_process@et:	
  4115                           
  4116                           ; 2 bytes @ 0x2C
  4117  01CC                     	ds	2
  4118  01CE                     led_auto_process@k:	
  4119                           
  4120                           ; 1 bytes @ 0x2E
  4121  01CE                     	ds	1
  4122  01CF                     led_auto_process@st:	
  4123                           
  4124                           ; 2 bytes @ 0x2F
  4125  01CF                     	ds	2
  4126  01D1                     led_auto_process@p:	
  4127                           
  4128                           ; 2 bytes @ 0x31
  4129  01D1                     	ds	2
  4130  01D3                     led_auto_process@i:	
  4131                           
  4132                           ; 1 bytes @ 0x33
  4133  01D3                     	ds	1
  4134                           
  4135                           	psect	cstackBANK1
  4136  00A0                     __pcstackBANK1:	
  4137  00A0                     ??_led_set_custom:	
  4138  00A0                     ??_ble_check_devid:	
  4139                           ; 1 bytes @ 0x0
  4140                           
  4141  00A0                     led_para_default@i:	
  4142                           ; 1 bytes @ 0x0
  4143                           
  4144  00A0                     ___lldiv@quotient:	
  4145                           ; 1 bytes @ 0x0
  4146                           
  4147                           
  4148                           ; 4 bytes @ 0x0
  4149  00A0                     	ds	1
  4150  00A1                     led_para_default@j:	
  4151  00A1                     ble_check_devid@dev:	
  4152                           ; 1 bytes @ 0x1
  4153                           
  4154                           
  4155                           ; 17 bytes @ 0x1
  4156  00A1                     	ds	1
  4157  00A2                     led_para_default@i_1256:	
  4158                           
  4159                           ; 1 bytes @ 0x2
  4160  00A2                     	ds	1
  4161  00A3                     led_para_default@i_1263:	
  4162                           
  4163                           ; 1 bytes @ 0x3
  4164  00A3                     	ds	1
  4165  00A4                     ??_led_para_init:	
  4166  00A4                     ___lldiv@counter:	
  4167                           ; 1 bytes @ 0x4
  4168                           
  4169                           
  4170                           ; 1 bytes @ 0x4
  4171  00A4                     	ds	1
  4172  00A5                     ?_led_calc_bright:	
  4173  00A5                     led_calc_bright@ebrt:	
  4174                           ; 2 bytes @ 0x5
  4175                           
  4176                           
  4177                           ; 1 bytes @ 0x5
  4178  00A5                     	ds	1
  4179  00A6                     led_calc_bright@duration:	
  4180                           
  4181                           ; 2 bytes @ 0x6
  4182  00A6                     	ds	2
  4183  00A8                     led_calc_bright@dt:	
  4184                           
  4185                           ; 4 bytes @ 0x8
  4186  00A8                     	ds	4
  4187  00AC                     led_calc_bright@result:	
  4188                           
  4189                           ; 2 bytes @ 0xC
  4190  00AC                     	ds	2
  4191  00AE                     led_calc_bright@vs:	
  4192                           
  4193                           ; 2 bytes @ 0xE
  4194  00AE                     	ds	2
  4195  00B0                     led_calc_bright@period:	
  4196                           
  4197                           ; 2 bytes @ 0x10
  4198  00B0                     	ds	2
  4199  00B2                     ble_check_devid@len:	
  4200  00B2                     led_calc_bright@dbrt:	
  4201                           ; 1 bytes @ 0x12
  4202                           
  4203                           
  4204                           ; 1 bytes @ 0x12
  4205  00B2                     	ds	1
  4206  00B3                     ble_check_devid@rev:	
  4207  00B3                     led_calc_bright@sbrt:	
  4208                           ; 1 bytes @ 0x13
  4209                           
  4210                           
  4211                           ; 1 bytes @ 0x13
  4212  00B3                     	ds	1
  4213  00B4                     ?_led_auto_process:	
  4214  00B4                     ?_led_pro_process:	
  4215                           ; 1 bytes @ 0x14
  4216                           
  4217  00B4                     ble_check_devid@cnt:	
  4218                           ; 1 bytes @ 0x14
  4219                           
  4220  00B4                     led_auto_process@ct:	
  4221                           ; 2 bytes @ 0x14
  4222                           
  4223  00B4                     led_pro_process@ct:	
  4224                           ; 2 bytes @ 0x14
  4225                           
  4226                           
  4227                           ; 2 bytes @ 0x14
  4228  00B4                     	ds	2
  4229  00B6                     ble_check_devid@idx:	
  4230  00B6                     led_auto_process@sec:	
  4231                           ; 1 bytes @ 0x16
  4232                           
  4233  00B6                     led_pro_process@sec:	
  4234                           ; 1 bytes @ 0x16
  4235                           
  4236                           
  4237                           ; 1 bytes @ 0x16
  4238  00B6                     	ds	1
  4239  00B7                     ??_ble_init:	
  4240  00B7                     ??_led_auto_process:	
  4241                           ; 1 bytes @ 0x17
  4242                           
  4243  00B7                     ??_led_pro_process:	
  4244                           ; 1 bytes @ 0x17
  4245                           
  4246                           
  4247                           ; 1 bytes @ 0x17
  4248  00B7                     	ds	8
  4249  00BF                     led_second_cb@sec:	
  4250                           
  4251                           ; 1 bytes @ 0x1F
  4252  00BF                     	ds	1
  4253  00C0                     led_second_cb@ct:	
  4254                           
  4255                           ; 2 bytes @ 0x20
  4256  00C0                     	ds	2
  4257                           
  4258                           	psect	cstackCOMMON
  4259  0070                     __pcstackCOMMON:	
  4260  0070                     ?_ble_decode:	
  4261  0070                     ?_led_set_mode:	
  4262                           ; 1 bytes @ 0x0
  4263                           
  4264  0070                     ?_led_set_power:	
  4265                           ; 1 bytes @ 0x0
  4266                           
  4267  0070                     ?_led_set_bright:	
  4268                           ; 1 bytes @ 0x0
  4269                           
  4270  0070                     ?_led_set_custom:	
  4271                           ; 1 bytes @ 0x0
  4272                           
  4273  0070                     ?_led_set_cycle:	
  4274                           ; 1 bytes @ 0x0
  4275                           
  4276  0070                     ?_led_set_preview:	
  4277                           ; 1 bytes @ 0x0
  4278                           
  4279  0070                     ?_led_start_preview:	
  4280                           ; 1 bytes @ 0x0
  4281                           
  4282  0070                     ?_led_stop_preview:	
  4283                           ; 1 bytes @ 0x0
  4284                           
  4285  0070                     ?_led_set_time:	
  4286                           ; 1 bytes @ 0x0
  4287                           
  4288  0070                     ?_led_start_flash:	
  4289                           ; 1 bytes @ 0x0
  4290                           
  4291  0070                     ?_led_set_pro:	
  4292                           ; 1 bytes @ 0x0
  4293                           
  4294  0070                     ?_led_set_dynamic:	
  4295                           ; 1 bytes @ 0x0
  4296                           
  4297  0070                     ?_led_set_period_dynamic:	
  4298                           ; 1 bytes @ 0x0
  4299                           
  4300  0070                     ?_led_thunder1_init:	
  4301                           ; 1 bytes @ 0x0
  4302                           
  4303  0070                     ?_led_thunder2_init:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306  0070                     ?_led_thunder3_init:	
  4307                           ; 1 bytes @ 0x0
  4308                           
  4309  0070                     ?_led_allcolor_init:	
  4310                           ; 1 bytes @ 0x0
  4311                           
  4312  0070                     ?_led_cloud1_init:	
  4313                           ; 1 bytes @ 0x0
  4314                           
  4315  0070                     ?_led_cloud2_init:	
  4316                           ; 1 bytes @ 0x0
  4317                           
  4318  0070                     ?_led_cloud3_init:	
  4319                           ; 1 bytes @ 0x0
  4320                           
  4321  0070                     ?_led_cloud4_init:	
  4322                           ; 1 bytes @ 0x0
  4323                           
  4324  0070                     ?_led_moon1_init:	
  4325                           ; 1 bytes @ 0x0
  4326                           
  4327  0070                     ?_led_moon2_init:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330  0070                     ?_led_moon3_init:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333  0070                     ?_led_dynamic_init:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336  0070                     ?_led_turnon_ramp:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339  0070                     ?_led_turnoff_ramp:	
  4340                           ; 1 bytes @ 0x0
  4341                           
  4342  0070                     ?_led_dynamic_process:	
  4343                           ; 1 bytes @ 0x0
  4344                           
  4345  0070                     ?_led_prepare_to_save:	
  4346                           ; 1 bytes @ 0x0
  4347                           
  4348  0070                     ?_tmr0_isr:	
  4349                           ; 1 bytes @ 0x0
  4350                           
  4351  0070                     ?_tmr2_isr:	
  4352                           ; 1 bytes @ 0x0
  4353                           
  4354  0070                     ?_pwm1_init:	
  4355                           ; 1 bytes @ 0x0
  4356                           
  4357  0070                     ?_pwm1_load_duty:	
  4358                           ; 1 bytes @ 0x0
  4359                           
  4360  0070                     ?_pwm2_init:	
  4361                           ; 1 bytes @ 0x0
  4362                           
  4363  0070                     ?_pwm2_load_duty:	
  4364                           ; 1 bytes @ 0x0
  4365                           
  4366  0070                     ?_pwm3_init:	
  4367                           ; 1 bytes @ 0x0
  4368                           
  4369  0070                     ?_pwm3_load_duty:	
  4370                           ; 1 bytes @ 0x0
  4371                           
  4372  0070                     ?_pwm4_init:	
  4373                           ; 1 bytes @ 0x0
  4374                           
  4375  0070                     ?_pwm4_load_duty:	
  4376                           ; 1 bytes @ 0x0
  4377                           
  4378  0070                     ?_pwm5_init:	
  4379                           ; 1 bytes @ 0x0
  4380                           
  4381  0070                     ?_eeprom_read:	
  4382                           ; 1 bytes @ 0x0
  4383                           
  4384  0070                     ?_eusart_write:	
  4385                           ; 1 bytes @ 0x0
  4386                           
  4387  0070                     ?_eusart_transmit_isr:	
  4388                           ; 1 bytes @ 0x0
  4389                           
  4390  0070                     ??_eusart_transmit_isr:	
  4391                           ; 1 bytes @ 0x0
  4392                           
  4393  0070                     ?_eusart_receive_isr:	
  4394                           ; 1 bytes @ 0x0
  4395                           
  4396  0070                     ?_rtc_init:	
  4397                           ; 1 bytes @ 0x0
  4398                           
  4399  0070                     ?_rtc_process:	
  4400                           ; 1 bytes @ 0x0
  4401                           
  4402  0070                     ?_rtc_second_ready:	
  4403                           ; 1 bytes @ 0x0
  4404                           
  4405  0070                     ?_rtc_set:	
  4406                           ; 1 bytes @ 0x0
  4407                           
  4408  0070                     ?_rtc_get_week:	
  4409                           ; 1 bytes @ 0x0
  4410                           
  4411  0070                     ?_rtc_get_hour:	
  4412                           ; 1 bytes @ 0x0
  4413                           
  4414  0070                     ?_rtc_get_minute:	
  4415                           ; 1 bytes @ 0x0
  4416                           
  4417  0070                     ?_rtc_get_second:	
  4418                           ; 1 bytes @ 0x0
  4419                           
  4420  0070                     ?_ble_check_devid:	
  4421                           ; 1 bytes @ 0x0
  4422                           
  4423  0070                     ?_ble_transmit_start:	
  4424                           ; 1 bytes @ 0x0
  4425                           
  4426  0070                     ?_ble_transmit_stop:	
  4427                           ; 1 bytes @ 0x0
  4428                           
  4429  0070                     ?_ble_ready_to_receive:	
  4430                           ; 1 bytes @ 0x0
  4431                           
  4432  0070                     ?_ble_receive_start:	
  4433                           ; 1 bytes @ 0x0
  4434                           
  4435  0070                     ?_ble_receive_complete:	
  4436                           ; 1 bytes @ 0x0
  4437                           
  4438  0070                     ?_ble_receive_stop:	
  4439                           ; 1 bytes @ 0x0
  4440                           
  4441  0070                     ?_ble_process:	
  4442                           ; 1 bytes @ 0x0
  4443                           
  4444  0070                     ?_ble_init:	
  4445                           ; 1 bytes @ 0x0
  4446                           
  4447  0070                     ?_ble_send_data:	
  4448                           ; 1 bytes @ 0x0
  4449                           
  4450  0070                     ?_ble_ota_ack:	
  4451                           ; 1 bytes @ 0x0
  4452                           
  4453  0070                     ?_ble_receive:	
  4454                           ; 1 bytes @ 0x0
  4455                           
  4456  0070                     ?_led_para_default:	
  4457                           ; 1 bytes @ 0x0
  4458                           
  4459  0070                     ?_led_para_init:	
  4460                           ; 1 bytes @ 0x0
  4461                           
  4462  0070                     ?_led_init:	
  4463                           ; 1 bytes @ 0x0
  4464                           
  4465  0070                     ?_led_ramp:	
  4466                           ; 1 bytes @ 0x0
  4467                           
  4468  0070                     ?_led_process:	
  4469                           ; 1 bytes @ 0x0
  4470                           
  4471  0070                     ?_led_turnon_max:	
  4472                           ; 1 bytes @ 0x0
  4473                           
  4474  0070                     ?_led_turnoff:	
  4475                           ; 1 bytes @ 0x0
  4476                           
  4477  0070                     ?_led_sunrs_init:	
  4478                           ; 1 bytes @ 0x0
  4479                           
  4480  0070                     ?_led_thunder1_process:	
  4481                           ; 1 bytes @ 0x0
  4482                           
  4483  0070                     ??_led_thunder1_process:	
  4484                           ; 1 bytes @ 0x0
  4485                           
  4486  0070                     ?_led_thunder2_process:	
  4487                           ; 1 bytes @ 0x0
  4488                           
  4489  0070                     ??_led_thunder2_process:	
  4490                           ; 1 bytes @ 0x0
  4491                           
  4492  0070                     ?_led_thunder3_process:	
  4493                           ; 1 bytes @ 0x0
  4494                           
  4495  0070                     ??_led_thunder3_process:	
  4496                           ; 1 bytes @ 0x0
  4497                           
  4498  0070                     ?_led_allcolor_process:	
  4499                           ; 1 bytes @ 0x0
  4500                           
  4501  0070                     ??_led_allcolor_process:	
  4502                           ; 1 bytes @ 0x0
  4503                           
  4504  0070                     ?_led_find_device:	
  4505                           ; 1 bytes @ 0x0
  4506                           
  4507  0070                     ?_led_preview:	
  4508                           ; 1 bytes @ 0x0
  4509                           
  4510  0070                     ?_led_save_para:	
  4511                           ; 1 bytes @ 0x0
  4512                           
  4513  0070                     ?_led_second_cb:	
  4514                           ; 1 bytes @ 0x0
  4515                           
  4516  0070                     ?_osc_init:	
  4517                           ; 1 bytes @ 0x0
  4518                           
  4519  0070                     ?_gpio_init:	
  4520                           ; 1 bytes @ 0x0
  4521                           
  4522  0070                     ?_tmr2_isr_callback:	
  4523                           ; 1 bytes @ 0x0
  4524                           
  4525  0070                     ?_app_init:	
  4526                           ; 1 bytes @ 0x0
  4527                           
  4528  0070                     ?_app_isr:	
  4529                           ; 1 bytes @ 0x0
  4530                           
  4531  0070                     ?_main:	
  4532                           ; 1 bytes @ 0x0
  4533                           
  4534  0070                     ?___lwmod:	
  4535                           ; 1 bytes @ 0x0
  4536                           
  4537  0070                     ?i1___lmul:	
  4538                           ; 2 bytes @ 0x0
  4539                           
  4540  0070                     ble_receive@rcv:	
  4541                           ; 4 bytes @ 0x0
  4542                           
  4543  0070                     pwm1_load_duty@value:	
  4544                           ; 1 bytes @ 0x0
  4545                           
  4546  0070                     pwm2_load_duty@value:	
  4547                           ; 2 bytes @ 0x0
  4548                           
  4549  0070                     pwm3_load_duty@value:	
  4550                           ; 2 bytes @ 0x0
  4551                           
  4552  0070                     pwm4_load_duty@value:	
  4553                           ; 2 bytes @ 0x0
  4554                           
  4555  0070                     ___lwmod@divisor:	
  4556                           ; 2 bytes @ 0x0
  4557                           
  4558  0070                     i1___lmul@multiplier:	
  4559                           ; 2 bytes @ 0x0
  4560                           
  4561                           
  4562                           ; 4 bytes @ 0x0
  4563  0070                     	ds	1
  4564  0071                     ??_eusart_receive_isr:	
  4565  0071                     ??_ble_receive:	
  4566                           ; 1 bytes @ 0x1
  4567                           
  4568  0071                     eusart_receive_isr@rcv:	
  4569                           ; 1 bytes @ 0x1
  4570                           
  4571                           
  4572                           ; 1 bytes @ 0x1
  4573  0071                     	ds	1
  4574  0072                     ??_pwm1_load_duty:	
  4575  0072                     ??_pwm2_load_duty:	
  4576                           ; 1 bytes @ 0x2
  4577                           
  4578  0072                     ??_pwm3_load_duty:	
  4579                           ; 1 bytes @ 0x2
  4580                           
  4581  0072                     ??_pwm4_load_duty:	
  4582                           ; 1 bytes @ 0x2
  4583                           
  4584  0072                     ??_led_ramp:	
  4585                           ; 1 bytes @ 0x2
  4586                           
  4587  0072                     ___lwmod@dividend:	
  4588                           ; 1 bytes @ 0x2
  4589                           
  4590                           
  4591                           ; 2 bytes @ 0x2
  4592  0072                     	ds	2
  4593  0074                     ??___lwmod:	
  4594  0074                     ___lwmod@counter:	
  4595                           ; 1 bytes @ 0x4
  4596                           
  4597  0074                     i1___lmul@multiplicand:	
  4598                           ; 1 bytes @ 0x4
  4599                           
  4600                           
  4601                           ; 4 bytes @ 0x4
  4602  0074                     	ds	1
  4603  0075                     ?_rtc_is_leap_year:	
  4604  0075                     rtc_is_leap_year@year:	
  4605                           ; 1 bytes @ 0x5
  4606                           
  4607                           
  4608                           ; 2 bytes @ 0x5
  4609  0075                     	ds	2
  4610  0077                     ??_tmr0_isr:	
  4611  0077                     ??_rtc_is_leap_year:	
  4612                           ; 1 bytes @ 0x7
  4613                           
  4614  0077                     ??_rtc_process:	
  4615                           ; 1 bytes @ 0x7
  4616                           
  4617                           
  4618                           ; 1 bytes @ 0x7
  4619  0077                     	ds	1
  4620  0078                     ??i1___lmul:	
  4621  0078                     led_ramp@i:	
  4622                           ; 1 bytes @ 0x8
  4623                           
  4624  0078                     i1___lmul@product:	
  4625                           ; 1 bytes @ 0x8
  4626                           
  4627                           
  4628                           ; 4 bytes @ 0x8
  4629  0078                     	ds	4
  4630  007C                     ??_tmr2_isr:	
  4631  007C                     ??_led_process:	
  4632                           ; 1 bytes @ 0xC
  4633                           
  4634  007C                     ??_tmr2_isr_callback:	
  4635                           ; 1 bytes @ 0xC
  4636                           
  4637  007C                     ??_app_isr:	
  4638                           ; 1 bytes @ 0xC
  4639                           
  4640  007C                     ??i1___lldiv:	
  4641                           ; 1 bytes @ 0xC
  4642                           
  4643                           
  4644                           	psect	cstackBANK0
  4645  0020                     __pcstackBANK0:	
  4646                           ; 1 bytes @ 0xC
  4647                           
  4648  0020                     ?i1___lldiv:	
  4649  0020                     i1___lldiv@divisor:	
  4650                           ; 4 bytes @ 0x0
  4651                           
  4652                           
  4653                           ; 4 bytes @ 0x0
  4654  0020                     	ds	4
  4655  0024                     i1___lldiv@dividend:	
  4656                           
  4657                           ; 4 bytes @ 0x4
  4658  0024                     	ds	4
  4659  0028                     i1___lldiv@quotient:	
  4660                           
  4661                           ; 4 bytes @ 0x8
  4662  0028                     	ds	4
  4663  002C                     i1___lldiv@counter:	
  4664                           
  4665                           ; 1 bytes @ 0xC
  4666  002C                     	ds	1
  4667  002D                     ??_led_dynamic_process:	
  4668                           
  4669                           ; 1 bytes @ 0xD
  4670  002D                     	ds	4
  4671  0031                     led_dynamic_process@temp:	
  4672                           
  4673                           ; 2 bytes @ 0x11
  4674  0031                     	ds	2
  4675  0033                     led_dynamic_process@i:	
  4676                           
  4677                           ; 1 bytes @ 0x13
  4678  0033                     	ds	1
  4679  0034                     ??_led_set_bright:	
  4680  0034                     ??_led_set_cycle:	
  4681                           ; 1 bytes @ 0x14
  4682                           
  4683  0034                     ??_led_set_preview:	
  4684                           ; 1 bytes @ 0x14
  4685                           
  4686  0034                     ??_led_start_preview:	
  4687                           ; 1 bytes @ 0x14
  4688                           
  4689  0034                     ??_led_stop_preview:	
  4690                           ; 1 bytes @ 0x14
  4691                           
  4692  0034                     ??_led_start_flash:	
  4693                           ; 1 bytes @ 0x14
  4694                           
  4695  0034                     ??_led_set_period_dynamic:	
  4696                           ; 1 bytes @ 0x14
  4697                           
  4698  0034                     ??_led_thunder1_init:	
  4699                           ; 1 bytes @ 0x14
  4700                           
  4701  0034                     ??_led_thunder2_init:	
  4702                           ; 1 bytes @ 0x14
  4703                           
  4704  0034                     ??_led_thunder3_init:	
  4705                           ; 1 bytes @ 0x14
  4706                           
  4707  0034                     ??_led_allcolor_init:	
  4708                           ; 1 bytes @ 0x14
  4709                           
  4710  0034                     ??_led_cloud1_init:	
  4711                           ; 1 bytes @ 0x14
  4712                           
  4713  0034                     ??_led_cloud2_init:	
  4714                           ; 1 bytes @ 0x14
  4715                           
  4716  0034                     ??_led_cloud3_init:	
  4717                           ; 1 bytes @ 0x14
  4718                           
  4719  0034                     ??_led_cloud4_init:	
  4720                           ; 1 bytes @ 0x14
  4721                           
  4722  0034                     ??_led_moon1_init:	
  4723                           ; 1 bytes @ 0x14
  4724                           
  4725  0034                     ??_led_moon2_init:	
  4726                           ; 1 bytes @ 0x14
  4727                           
  4728  0034                     ??_led_moon3_init:	
  4729                           ; 1 bytes @ 0x14
  4730                           
  4731  0034                     ??_led_dynamic_init:	
  4732                           ; 1 bytes @ 0x14
  4733                           
  4734  0034                     ??_led_turnon_ramp:	
  4735                           ; 1 bytes @ 0x14
  4736                           
  4737  0034                     ??_led_turnoff_ramp:	
  4738                           ; 1 bytes @ 0x14
  4739                           
  4740  0034                     ??_led_prepare_to_save:	
  4741                           ; 1 bytes @ 0x14
  4742                           
  4743  0034                     ?_tmr0_init:	
  4744                           ; 1 bytes @ 0x14
  4745                           
  4746  0034                     ?_tmr2_init:	
  4747                           ; 1 bytes @ 0x14
  4748                           
  4749  0034                     ??_pwm1_init:	
  4750                           ; 1 bytes @ 0x14
  4751                           
  4752  0034                     ??_pwm2_init:	
  4753                           ; 1 bytes @ 0x14
  4754                           
  4755  0034                     ??_pwm3_init:	
  4756                           ; 1 bytes @ 0x14
  4757                           
  4758  0034                     ??_pwm4_init:	
  4759                           ; 1 bytes @ 0x14
  4760                           
  4761  0034                     ??_pwm5_init:	
  4762                           ; 1 bytes @ 0x14
  4763                           
  4764  0034                     ?_eeprom_write:	
  4765                           ; 1 bytes @ 0x14
  4766                           
  4767  0034                     ??_eeprom_read:	
  4768                           ; 1 bytes @ 0x14
  4769                           
  4770  0034                     ?_eusart_init:	
  4771                           ; 1 bytes @ 0x14
  4772                           
  4773  0034                     ??_eusart_write:	
  4774                           ; 1 bytes @ 0x14
  4775                           
  4776  0034                     ??_rtc_init:	
  4777                           ; 1 bytes @ 0x14
  4778                           
  4779  0034                     ??_rtc_second_ready:	
  4780                           ; 1 bytes @ 0x14
  4781                           
  4782  0034                     ??_rtc_set:	
  4783                           ; 1 bytes @ 0x14
  4784                           
  4785  0034                     ??_rtc_get_week:	
  4786                           ; 1 bytes @ 0x14
  4787                           
  4788  0034                     ??_rtc_get_hour:	
  4789                           ; 1 bytes @ 0x14
  4790                           
  4791  0034                     ??_rtc_get_minute:	
  4792                           ; 1 bytes @ 0x14
  4793                           
  4794  0034                     ??_rtc_get_second:	
  4795                           ; 1 bytes @ 0x14
  4796                           
  4797  0034                     ?_increase:	
  4798                           ; 1 bytes @ 0x14
  4799                           
  4800  0034                     ?_decrease:	
  4801                           ; 1 bytes @ 0x14
  4802                           
  4803  0034                     ??_ble_transmit_start:	
  4804                           ; 1 bytes @ 0x14
  4805                           
  4806  0034                     ??_ble_transmit_stop:	
  4807                           ; 1 bytes @ 0x14
  4808                           
  4809  0034                     ??_ble_ready_to_receive:	
  4810                           ; 1 bytes @ 0x14
  4811                           
  4812  0034                     ??_ble_receive_start:	
  4813                           ; 1 bytes @ 0x14
  4814                           
  4815  0034                     ??_ble_receive_complete:	
  4816                           ; 1 bytes @ 0x14
  4817                           
  4818  0034                     ??_ble_receive_stop:	
  4819                           ; 1 bytes @ 0x14
  4820                           
  4821  0034                     ??_led_turnon_max:	
  4822                           ; 1 bytes @ 0x14
  4823                           
  4824  0034                     ??_led_turnoff:	
  4825                           ; 1 bytes @ 0x14
  4826                           
  4827  0034                     ??_led_sunrs_init:	
  4828                           ; 1 bytes @ 0x14
  4829                           
  4830  0034                     ??_led_preview:	
  4831                           ; 1 bytes @ 0x14
  4832                           
  4833  0034                     ??_osc_init:	
  4834                           ; 1 bytes @ 0x14
  4835                           
  4836  0034                     ??_gpio_init:	
  4837                           ; 1 bytes @ 0x14
  4838                           
  4839  0034                     ?___bmul:	
  4840                           ; 1 bytes @ 0x14
  4841                           
  4842  0034                     ?_strlen:	
  4843                           ; 1 bytes @ 0x14
  4844                           
  4845  0034                     ?_memset:	
  4846                           ; 2 bytes @ 0x14
  4847                           
  4848  0034                     ?___wmul:	
  4849                           ; 2 bytes @ 0x14
  4850                           
  4851  0034                     ?___awmod:	
  4852                           ; 2 bytes @ 0x14
  4853                           
  4854  0034                     ?___lwdiv:	
  4855                           ; 2 bytes @ 0x14
  4856                           
  4857  0034                     ?___lmul:	
  4858                           ; 2 bytes @ 0x14
  4859                           
  4860  0034                     eeprom_write@byte:	
  4861                           ; 4 bytes @ 0x14
  4862                           
  4863  0034                     eeprom_read@addr:	
  4864                           ; 1 bytes @ 0x14
  4865                           
  4866  0034                     eusart_write@byte:	
  4867                           ; 1 bytes @ 0x14
  4868                           
  4869  0034                     rtc_set@ptime:	
  4870                           ; 1 bytes @ 0x14
  4871                           
  4872  0034                     led_turnoff_ramp@i:	
  4873                           ; 1 bytes @ 0x14
  4874                           
  4875  0034                     led_turnon_max@i:	
  4876                           ; 1 bytes @ 0x14
  4877                           
  4878  0034                     led_turnoff@i:	
  4879                           ; 1 bytes @ 0x14
  4880                           
  4881  0034                     led_dynamic_init@dyn:	
  4882                           ; 1 bytes @ 0x14
  4883                           
  4884  0034                     ___bmul@multiplicand:	
  4885                           ; 1 bytes @ 0x14
  4886                           
  4887  0034                     tmr0_init@cb:	
  4888                           ; 1 bytes @ 0x14
  4889                           
  4890  0034                     tmr2_init@cb:	
  4891                           ; 2 bytes @ 0x14
  4892                           
  4893  0034                     eusart_init@cb:	
  4894                           ; 2 bytes @ 0x14
  4895                           
  4896  0034                     increase@psrc:	
  4897                           ; 2 bytes @ 0x14
  4898                           
  4899  0034                     decrease@psrc:	
  4900                           ; 2 bytes @ 0x14
  4901                           
  4902  0034                     ___wmul@multiplier:	
  4903                           ; 2 bytes @ 0x14
  4904                           
  4905  0034                     ___awmod@divisor:	
  4906                           ; 2 bytes @ 0x14
  4907                           
  4908  0034                     ___lwdiv@divisor:	
  4909                           ; 2 bytes @ 0x14
  4910                           
  4911  0034                     memset@p1:	
  4912                           ; 2 bytes @ 0x14
  4913                           
  4914  0034                     ___lmul@multiplier:	
  4915                           ; 2 bytes @ 0x14
  4916                           
  4917                           
  4918                           ; 4 bytes @ 0x14
  4919  0034                     	ds	1
  4920  0035                     ??_eeprom_write:	
  4921  0035                     ?_eeprom_read_buffer:	
  4922                           ; 1 bytes @ 0x15
  4923                           
  4924  0035                     ??_ble_ota_ack:	
  4925                           ; 1 bytes @ 0x15
  4926                           
  4927  0035                     ??_led_find_device:	
  4928                           ; 1 bytes @ 0x15
  4929                           
  4930  0035                     ??___bmul:	
  4931                           ; 1 bytes @ 0x15
  4932                           
  4933  0035                     eeprom_write@addr:	
  4934                           ; 1 bytes @ 0x15
  4935                           
  4936  0035                     rtc_set@i:	
  4937                           ; 1 bytes @ 0x15
  4938                           
  4939  0035                     ___bmul@product:	
  4940                           ; 1 bytes @ 0x15
  4941                           
  4942  0035                     eeprom_read_buffer@pbuf:	
  4943                           ; 1 bytes @ 0x15
  4944                           
  4945                           
  4946                           ; 2 bytes @ 0x15
  4947  0035                     	ds	1
  4948  0036                     ??_led_set_time:	
  4949  0036                     ??_tmr0_init:	
  4950                           ; 1 bytes @ 0x16
  4951                           
  4952  0036                     ??_tmr2_init:	
  4953                           ; 1 bytes @ 0x16
  4954                           
  4955  0036                     ??_eusart_init:	
  4956                           ; 1 bytes @ 0x16
  4957                           
  4958  0036                     ??_app_init:	
  4959                           ; 1 bytes @ 0x16
  4960                           
  4961  0036                     eeprom_write@state:	
  4962                           ; 1 bytes @ 0x16
  4963                           
  4964  0036                     increase@delt:	
  4965                           ; 1 bytes @ 0x16
  4966                           
  4967  0036                     decrease@delt:	
  4968                           ; 1 bytes @ 0x16
  4969                           
  4970  0036                     led_set_preview@pbuf:	
  4971                           ; 1 bytes @ 0x16
  4972                           
  4973  0036                     led_set_time@ptime:	
  4974                           ; 1 bytes @ 0x16
  4975                           
  4976  0036                     ___bmul@multiplier:	
  4977                           ; 1 bytes @ 0x16
  4978                           
  4979  0036                     ___wmul@multiplicand:	
  4980                           ; 1 bytes @ 0x16
  4981                           
  4982  0036                     ___awmod@dividend:	
  4983                           ; 2 bytes @ 0x16
  4984                           
  4985  0036                     ___lwdiv@dividend:	
  4986                           ; 2 bytes @ 0x16
  4987                           
  4988  0036                     memset@c:	
  4989                           ; 2 bytes @ 0x16
  4990                           
  4991                           
  4992                           ; 2 bytes @ 0x16
  4993  0036                     	ds	1
  4994  0037                     ??_strlen:	
  4995  0037                     ??_led_set_pro:	
  4996                           ; 1 bytes @ 0x17
  4997                           
  4998  0037                     ?_eeprom_write_buffer:	
  4999                           ; 1 bytes @ 0x17
  5000                           
  5001  0037                     ??_ble_send_data:	
  5002                           ; 1 bytes @ 0x17
  5003                           
  5004  0037                     eeprom_read_buffer@len:	
  5005                           ; 1 bytes @ 0x17
  5006                           
  5007  0037                     strlen@cp:	
  5008                           ; 1 bytes @ 0x17
  5009                           
  5010  0037                     eeprom_write_buffer@pbuf:	
  5011                           ; 1 bytes @ 0x17
  5012                           
  5013  0037                     increase@max:	
  5014                           ; 2 bytes @ 0x17
  5015                           
  5016  0037                     decrease@min:	
  5017                           ; 2 bytes @ 0x17
  5018                           
  5019  0037                     led_set_preview@val:	
  5020                           ; 2 bytes @ 0x17
  5021                           
  5022                           
  5023                           ; 2 bytes @ 0x17
  5024  0037                     	ds	1
  5025  0038                     ??_eeprom_read_buffer:	
  5026  0038                     ??___wmul:	
  5027                           ; 1 bytes @ 0x18
  5028                           
  5029  0038                     ??___awmod:	
  5030                           ; 1 bytes @ 0x18
  5031                           
  5032  0038                     ??___lwdiv:	
  5033                           ; 1 bytes @ 0x18
  5034                           
  5035  0038                     led_turnon_ramp@i:	
  5036                           ; 1 bytes @ 0x18
  5037                           
  5038  0038                     led_sunrs_init@flag:	
  5039                           ; 1 bytes @ 0x18
  5040                           
  5041  0038                     led_set_bright@pbuf:	
  5042                           ; 1 bytes @ 0x18
  5043                           
  5044  0038                     ___awmod@counter:	
  5045                           ; 1 bytes @ 0x18
  5046                           
  5047  0038                     strlen@s:	
  5048                           ; 1 bytes @ 0x18
  5049                           
  5050  0038                     ___wmul@product:	
  5051                           ; 1 bytes @ 0x18
  5052                           
  5053  0038                     ___lwdiv@quotient:	
  5054                           ; 2 bytes @ 0x18
  5055                           
  5056  0038                     memset@n:	
  5057                           ; 2 bytes @ 0x18
  5058                           
  5059  0038                     ___lmul@multiplicand:	
  5060                           ; 2 bytes @ 0x18
  5061                           
  5062                           
  5063                           ; 4 bytes @ 0x18
  5064  0038                     	ds	1
  5065  0039                     ??_led_set_mode:	
  5066  0039                     ??_led_set_power:	
  5067                           ; 1 bytes @ 0x19
  5068                           
  5069  0039                     ??_increase:	
  5070                           ; 1 bytes @ 0x19
  5071                           
  5072  0039                     ??_decrease:	
  5073                           ; 1 bytes @ 0x19
  5074                           
  5075  0039                     ?_ble_send_cmd:	
  5076                           ; 1 bytes @ 0x19
  5077                           
  5078  0039                     eeprom_write_buffer@len:	
  5079                           ; 1 bytes @ 0x19
  5080                           
  5081  0039                     eeprom_read_buffer@addr:	
  5082                           ; 1 bytes @ 0x19
  5083                           
  5084  0039                     led_sunrs_init@i:	
  5085                           ; 1 bytes @ 0x19
  5086                           
  5087  0039                     led_set_mode@m:	
  5088                           ; 1 bytes @ 0x19
  5089                           
  5090  0039                     led_set_power@on:	
  5091                           ; 1 bytes @ 0x19
  5092                           
  5093  0039                     led_set_preview@i:	
  5094                           ; 1 bytes @ 0x19
  5095                           
  5096  0039                     ___awmod@sign:	
  5097                           ; 1 bytes @ 0x19
  5098                           
  5099  0039                     ble_send_cmd@cmd:	
  5100                           ; 1 bytes @ 0x19
  5101                           
  5102  0039                     led_set_bright@val:	
  5103                           ; 2 bytes @ 0x19
  5104                           
  5105                           
  5106                           ; 2 bytes @ 0x19
  5107  0039                     	ds	1
  5108  003A                     ??_memset:	
  5109  003A                     ??_eeprom_write_buffer:	
  5110                           ; 1 bytes @ 0x1A
  5111                           
  5112  003A                     ?_led_period_dynamic_process:	
  5113                           ; 1 bytes @ 0x1A
  5114                           
  5115  003A                     eeprom_write_buffer@addr:	
  5116                           ; 1 bytes @ 0x1A
  5117                           
  5118  003A                     eeprom_read_buffer@i:	
  5119                           ; 1 bytes @ 0x1A
  5120                           
  5121  003A                     led_sunrs_init@i_1377:	
  5122                           ; 1 bytes @ 0x1A
  5123                           
  5124  003A                     ___lwdiv@counter:	
  5125                           ; 1 bytes @ 0x1A
  5126                           
  5127  003A                     led_period_dynamic_process@ct:	
  5128                           ; 1 bytes @ 0x1A
  5129                           
  5130  003A                     memset@p:	
  5131                           ; 2 bytes @ 0x1A
  5132                           
  5133                           
  5134                           ; 2 bytes @ 0x1A
  5135  003A                     	ds	1
  5136  003B                     ??_ble_send_cmd:	
  5137  003B                     eeprom_write_buffer@i:	
  5138                           ; 1 bytes @ 0x1B
  5139                           
  5140  003B                     ble_send_data@xor:	
  5141                           ; 1 bytes @ 0x1B
  5142                           
  5143  003B                     led_sunrs_init@i_1378:	
  5144                           ; 1 bytes @ 0x1B
  5145                           
  5146  003B                     led_set_bright@i:	
  5147                           ; 1 bytes @ 0x1B
  5148                           
  5149  003B                     led_set_custom@idx:	
  5150                           ; 1 bytes @ 0x1B
  5151                           
  5152                           
  5153                           ; 1 bytes @ 0x1B
  5154  003B                     	ds	1
  5155  003C                     ??_led_set_dynamic:	
  5156  003C                     ??_led_para_default:	
  5157                           ; 1 bytes @ 0x1C
  5158                           
  5159  003C                     ??_led_period_dynamic_process:	
  5160                           ; 1 bytes @ 0x1C
  5161                           
  5162  003C                     ??_led_save_para:	
  5163                           ; 1 bytes @ 0x1C
  5164                           
  5165  003C                     ??___lmul:	
  5166                           ; 1 bytes @ 0x1C
  5167                           
  5168  003C                     ble_send_data@len:	
  5169                           ; 1 bytes @ 0x1C
  5170                           
  5171  003C                     led_set_dynamic@dyn:	
  5172                           ; 1 bytes @ 0x1C
  5173                           
  5174  003C                     led_set_period_dynamic@len:	
  5175                           ; 1 bytes @ 0x1C
  5176                           
  5177  003C                     led_set_custom@i:	
  5178                           ; 1 bytes @ 0x1C
  5179                           
  5180  003C                     led_set_cycle@len:	
  5181                           ; 1 bytes @ 0x1C
  5182                           
  5183  003C                     ___lmul@product:	
  5184                           ; 1 bytes @ 0x1C
  5185                           
  5186  003C                     ble_send_cmd@ack:	
  5187                           ; 4 bytes @ 0x1C
  5188                           
  5189                           
  5190                           ; 8 bytes @ 0x1C
  5191  003C                     	ds	1
  5192  003D                     ?_led_increase:	
  5193  003D                     ?_led_decrease:	
  5194                           ; 1 bytes @ 0x1D
  5195                           
  5196  003D                     led_period_dynamic_process@week:	
  5197                           ; 1 bytes @ 0x1D
  5198                           
  5199  003D                     led_set_period_dynamic@pbuf:	
  5200                           ; 1 bytes @ 0x1D
  5201                           
  5202  003D                     led_set_cycle@pbuf:	
  5203                           ; 1 bytes @ 0x1D
  5204                           
  5205  003D                     led_increase@delt:	
  5206                           ; 1 bytes @ 0x1D
  5207                           
  5208  003D                     led_decrease@delt:	
  5209                           ; 1 bytes @ 0x1D
  5210                           
  5211  003D                     ble_send_data@p:	
  5212                           ; 1 bytes @ 0x1D
  5213                           
  5214                           
  5215                           ; 2 bytes @ 0x1D
  5216  003D                     	ds	1
  5217  003E                     ??_led_increase:	
  5218  003E                     ??_led_decrease:	
  5219                           ; 1 bytes @ 0x1E
  5220                           
  5221  003E                     led_period_dynamic_process@flag:	
  5222                           ; 1 bytes @ 0x1E
  5223                           
  5224  003E                     led_set_period_dynamic@i:	
  5225                           ; 1 bytes @ 0x1E
  5226                           
  5227  003E                     led_set_cycle@i:	
  5228                           ; 1 bytes @ 0x1E
  5229                           
  5230                           
  5231                           ; 1 bytes @ 0x1E
  5232  003E                     	ds	1
  5233  003F                     ble_send_data@i:	
  5234  003F                     led_period_dynamic_process@mode:	
  5235                           ; 1 bytes @ 0x1F
  5236                           
  5237  003F                     led_set_pro@len:	
  5238                           ; 1 bytes @ 0x1F
  5239                           
  5240                           
  5241                           ; 1 bytes @ 0x1F
  5242  003F                     	ds	1
  5243  0040                     ?___lldiv:	
  5244  0040                     led_set_pro@pbuf:	
  5245                           ; 4 bytes @ 0x20
  5246                           
  5247  0040                     led_period_dynamic_process@start:	
  5248                           ; 1 bytes @ 0x20
  5249                           
  5250  0040                     ___lldiv@divisor:	
  5251                           ; 2 bytes @ 0x20
  5252                           
  5253                           
  5254                           ; 4 bytes @ 0x20
  5255  0040                     	ds	1
  5256  0041                     led_set_pro@i:	
  5257                           
  5258                           ; 1 bytes @ 0x21
  5259  0041                     	ds	1
  5260  0042                     led_increase@chn:	
  5261  0042                     led_decrease@chn:	
  5262                           ; 1 bytes @ 0x22
  5263                           
  5264  0042                     led_period_dynamic_process@end:	
  5265                           ; 1 bytes @ 0x22
  5266                           
  5267                           
  5268                           ; 2 bytes @ 0x22
  5269  0042                     	ds	1
  5270  0043                     ??_ble_decode:	
  5271                           
  5272                           ; 1 bytes @ 0x23
  5273  0043                     	ds	1
  5274  0044                     ble_send_cmd@len:	
  5275  0044                     ___lldiv@dividend:	
  5276                           ; 1 bytes @ 0x24
  5277                           
  5278                           
  5279                           ; 4 bytes @ 0x24
  5280  0044                     	ds	1
  5281  0045                     ??_ble_process:	
  5282  0045                     ble_send_cmd@cnt:	
  5283                           ; 1 bytes @ 0x25
  5284                           
  5285                           
  5286                           ; 1 bytes @ 0x25
  5287  0045                     	ds	1
  5288  0046                     ble_send_cmd@rev:	
  5289  0046                     led_para_init@j:	
  5290                           ; 1 bytes @ 0x26
  5291                           
  5292                           
  5293                           ; 1 bytes @ 0x26
  5294  0046                     	ds	1
  5295  0047                     ble_send_cmd@idx:	
  5296  0047                     led_para_init@i:	
  5297                           ; 1 bytes @ 0x27
  5298                           
  5299                           
  5300                           ; 1 bytes @ 0x27
  5301  0047                     	ds	1
  5302  0048                     ??_led_init:	
  5303  0048                     ??_led_calc_bright:	
  5304                           ; 1 bytes @ 0x28
  5305                           
  5306  0048                     ??_led_second_cb:	
  5307                           ; 1 bytes @ 0x28
  5308                           
  5309  0048                     ??_main:	
  5310                           ; 1 bytes @ 0x28
  5311                           
  5312  0048                     ??___lldiv:	
  5313                           ; 1 bytes @ 0x28
  5314                           
  5315                           
  5316                           	psect	text12
  5317  1CD0                     __ptext12:	
  5318 ;; *************** function _led_period_dynamic_process *****************
  5319 ;; Defined at:
  5320 ;;		line 1765 in file "src/app_led.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  ct              2   26[BANK0 ] unsigned int 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  end             2   34[BANK0 ] unsigned int 
  5325 ;;  start           2   32[BANK0 ] unsigned int 
  5326 ;;  mode            1   31[BANK0 ] unsigned char 
  5327 ;;  flag            1   30[BANK0 ] unsigned char 
  5328 ;;  week            1   29[BANK0 ] unsigned char 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      unsigned char 
  5331 ;; Registers used:
  5332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5333 ;; Tracked objects:
  5334 ;;		On entry : 1F/0
  5335 ;;		On exit  : 1F/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5338 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5340 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5341 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5342 ;;Total ram usage:       10 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    8
  5345 ;; This function calls:
  5346 ;;		___wmul
  5347 ;;		_led_dynamic_init
  5348 ;;		_rtc_get_week
  5349 ;; This function is called by:
  5350 ;;		_led_second_cb
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           
  5355                           ;psect for function _led_period_dynamic_process
  5356  1CD0                     _led_period_dynamic_process:	
  5357  1CD0  30EA               	movlw	234
  5358                           
  5359                           ;app_led.c: 1767: bool flag = 0;
  5360                           
  5361                           ;incstack = 0
  5362                           ; Regs used in _led_period_dynamic_process: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5363  1CD1  01BE               	clrf	led_period_dynamic_process@flag
  5364                           
  5365                           ;app_led.c: 1768: uint8_t week = m_led_para.ble_para.dynamic_para.array[0];
  5366  1CD2  0086               	movwf	6
  5367  1CD3  3023               	movlw	35
  5368  1CD4  0087               	movwf	7
  5369  1CD5  0801               	movf	1,w
  5370  1CD6  00BD               	movwf	led_period_dynamic_process@week
  5371                           
  5372                           ;app_led.c: 1769: uint8_t mode = m_led_para.ble_para.dynamic_para.dynamic_mode;
  5373  1CD7  30EF               	movlw	239
  5374  1CD8  0086               	movwf	6
  5375  1CD9  0801               	movf	1,w
  5376  1CDA  00BF               	movwf	led_period_dynamic_process@mode
  5377                           
  5378                           ;app_led.c: 1770: if(week > 0x80 && mode > 0 && mode < 12)
  5379  1CDB  3081               	movlw	129
  5380  1CDC  023D               	subwf	led_period_dynamic_process@week,w
  5381  1CDD  1C03               	skipc
  5382  1CDE  2D3E               	goto	l8138
  5383  1CDF  083F               	movf	led_period_dynamic_process@mode,w
  5384  1CE0  1903               	btfsc	3,2
  5385  1CE1  2D3E               	goto	l8138
  5386  1CE2  300C               	movlw	12
  5387  1CE3  023F               	subwf	led_period_dynamic_process@mode,w
  5388  1CE4  1803               	skipnc
  5389  1CE5  2D3E               	goto	l8138
  5390                           
  5391                           ;app_led.c: 1771: {
  5392                           ;app_led.c: 1772: if((week & (1 << rtc_get_week())) != 0x00)
  5393  1CE6  3001               	movlw	1
  5394  1CE7  00BC               	movwf	??_led_period_dynamic_process
  5395  1CE8  2720  319C         	fcall	_rtc_get_week
  5396  1CEA  0A89               	incf	9,f
  5397  1CEB  0020               	movlb	0	; select bank0
  5398  1CEC  2CEE               	goto	u7434
  5399  1CED                     u7435:	
  5400  1CED  35BC               	lslf	??_led_period_dynamic_process,f
  5401  1CEE                     u7434:	
  5402  1CEE  0B89               	decfsz	9,f
  5403  1CEF  2CED               	goto	u7435
  5404  1CF0  083C               	movf	??_led_period_dynamic_process,w
  5405  1CF1  053D               	andwf	led_period_dynamic_process@week,w
  5406  1CF2  1903               	btfsc	3,2
  5407  1CF3  2D3E               	goto	l8138
  5408                           
  5409                           ;app_led.c: 1773: {
  5410                           ;app_led.c: 1774: uint16_t start = m_led_para.ble_para.dynamic_para.start_hour * 60u + m
      +                          _led_para.ble_para.dynamic_para.start_minute;
  5411  1CF4  30EB               	movlw	235
  5412  1CF5  0086               	movwf	6
  5413  1CF6  3023               	movlw	35
  5414  1CF7  0087               	movwf	7
  5415  1CF8  0801               	movf	1,w
  5416  1CF9  2764  319C         	fcall	PL26	;call to abstracted procedure
  5417  1CFB  270B  319C         	fcall	___wmul
  5418  1CFD  0835               	movf	?___wmul+1,w
  5419  1CFE  00C1               	movwf	led_period_dynamic_process@start+1
  5420  1CFF  0834               	movf	?___wmul,w
  5421  1D00  00C0               	movwf	led_period_dynamic_process@start
  5422  1D01  30EC               	movlw	236
  5423  1D02  0086               	movwf	6
  5424  1D03  3023               	movlw	35
  5425  1D04  0087               	movwf	7
  5426  1D05  0801               	movf	1,w
  5427  1D06  07C0               	addwf	led_period_dynamic_process@start,f
  5428  1D07  1803               	skipnc
  5429  1D08  0AC1               	incf	led_period_dynamic_process@start+1,f
  5430                           
  5431                           ;app_led.c: 1775: uint16_t end = m_led_para.ble_para.dynamic_para.end_hour * 60u + m_led
      +                          _para.ble_para.dynamic_para.end_minute;
  5432  1D09  30ED               	movlw	237
  5433  1D0A  0086               	movwf	6
  5434  1D0B  0801               	movf	1,w
  5435  1D0C  2764  319C         	fcall	PL26	;call to abstracted procedure
  5436  1D0E  270B  319C         	fcall	___wmul
  5437  1D10  0835               	movf	?___wmul+1,w
  5438  1D11  00C3               	movwf	led_period_dynamic_process@end+1
  5439  1D12  0834               	movf	?___wmul,w
  5440  1D13  00C2               	movwf	led_period_dynamic_process@end
  5441  1D14  30EE               	movlw	238
  5442  1D15  0086               	movwf	6
  5443  1D16  3023               	movlw	35
  5444  1D17  0087               	movwf	7
  5445  1D18  0801               	movf	1,w
  5446  1D19  07C2               	addwf	led_period_dynamic_process@end,f
  5447  1D1A  1803               	skipnc
  5448  1D1B  0AC3               	incf	led_period_dynamic_process@end+1,f
  5449                           
  5450                           ;app_led.c: 1776: if(end >= start)
  5451  1D1C  0841               	movf	led_period_dynamic_process@start+1,w
  5452  1D1D  0243               	subwf	led_period_dynamic_process@end+1,w
  5453  1D1E  1D03               	skipz
  5454  1D1F  2D22               	goto	u7455
  5455  1D20  0840               	movf	led_period_dynamic_process@start,w
  5456  1D21  0242               	subwf	led_period_dynamic_process@end,w
  5457  1D22                     u7455:	
  5458                           
  5459                           ;app_led.c: 1777: {
  5460                           ;app_led.c: 1778: if(ct >= start && ct < end)
  5461  1D22  0841               	movf	led_period_dynamic_process@start+1,w
  5462  1D23  1C03               	skipc
  5463  1D24  2D2D               	goto	L6
  5464  1D25  023B               	subwf	led_period_dynamic_process@ct+1,w
  5465  1D26  1D03               	skipz
  5466  1D27  2D2A               	goto	u7465
  5467  1D28  0840               	movf	led_period_dynamic_process@start,w
  5468  1D29  023A               	subwf	led_period_dynamic_process@ct,w
  5469  1D2A                     u7465:	
  5470  1D2A  1C03               	skipc
  5471  1D2B  2D3E               	goto	l8138
  5472  1D2C  2D34               	goto	L5
  5473  1D2D                     L6:	
  5474                           ;app_led.c: 1783: else
  5475                           ;app_led.c: 1784: {
  5476                           ;app_led.c: 1785: if(ct >= start || ct < end)
  5477                           
  5478  1D2D  023B               	subwf	led_period_dynamic_process@ct+1,w
  5479  1D2E  1D03               	skipz
  5480  1D2F  2D32               	goto	u7485
  5481  1D30  0840               	movf	led_period_dynamic_process@start,w
  5482  1D31  023A               	subwf	led_period_dynamic_process@ct,w
  5483  1D32                     u7485:	
  5484  1D32  1803               	skipnc
  5485  1D33  2D3C               	goto	l8132
  5486  1D34                     L5:	
  5487  1D34  0843               	movf	led_period_dynamic_process@end+1,w
  5488  1D35  023B               	subwf	led_period_dynamic_process@ct+1,w
  5489  1D36  1D03               	skipz
  5490  1D37  2D3A               	goto	u7495
  5491  1D38  0842               	movf	led_period_dynamic_process@end,w
  5492  1D39  023A               	subwf	led_period_dynamic_process@ct,w
  5493  1D3A                     u7495:	
  5494  1D3A  1803               	skipnc
  5495  1D3B  2D3E               	goto	l8138
  5496  1D3C                     l8132:	
  5497                           
  5498                           ;app_led.c: 1779: {
  5499                           ;app_led.c: 1780: flag = 1;
  5500  1D3C  01BE               	clrf	led_period_dynamic_process@flag
  5501  1D3D  0ABE               	incf	led_period_dynamic_process@flag,f
  5502  1D3E                     l8138:	
  5503                           
  5504                           ;app_led.c: 1788: }
  5505                           ;app_led.c: 1789: }
  5506                           ;app_led.c: 1790: }
  5507                           ;app_led.c: 1791: }
  5508                           ;app_led.c: 1792: if(flag == 0)
  5509  1D3E  083E               	movf	led_period_dynamic_process@flag,w
  5510  1D3F  1D03               	btfss	3,2
  5511  1D40  2D43               	goto	l8142
  5512                           
  5513                           ;app_led.c: 1793: {
  5514                           ;app_led.c: 1794: dynamic_run_mode = 0;
  5515  1D41  01FC               	clrf	_dynamic_run_mode	;volatile
  5516                           
  5517                           ;app_led.c: 1795: }
  5518  1D42  2D4E               	goto	l8146
  5519  1D43                     l8142:	
  5520                           
  5521                           ;app_led.c: 1796: else if(dynamic_run_mode != m_led_para.ble_para.dynamic_para.dynamic_m
      +                          ode)
  5522  1D43  30EF               	movlw	239
  5523  1D44  0086               	movwf	6
  5524  1D45  3023               	movlw	35
  5525  1D46  0087               	movwf	7
  5526  1D47  0801               	movf	1,w
  5527  1D48  067C               	xorwf	_dynamic_run_mode,w	;volatile
  5528  1D49  1903               	skipnz
  5529  1D4A  2D4E               	goto	l8146
  5530                           
  5531                           ;app_led.c: 1797: {
  5532                           ;app_led.c: 1798: led_dynamic_init(mode);
  5533  1D4B  083F               	movf	led_period_dynamic_process@mode,w
  5534  1D4C  318D  25CD         	fcall	_led_dynamic_init
  5535  1D4E                     l8146:	
  5536                           
  5537                           ;app_led.c: 1799: }
  5538                           ;app_led.c: 1800: return flag;
  5539  1D4E  0020               	movlb	0	; select bank0
  5540  1D4F  083E               	movf	led_period_dynamic_process@flag,w
  5541  1D50  0008               	return
  5542  1D51                     __end_of_led_period_dynamic_process:	
  5543  1D51                     __ptext10:	
  5544 ;; *************** function _led_pro_process *****************
  5545 ;; Defined at:
  5546 ;;		line 594 in file "src/app_led.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;  ct              2   20[BANK1 ] unsigned int 
  5549 ;;  sec             1   22[BANK1 ] unsigned char 
  5550 ;; Auto vars:     Size  Location     Type
  5551 ;;  tmp             1   10[BANK3 ] unsigned char 
  5552 ;;  p2              2   24[BANK3 ] PTR struct .
  5553 ;;		 -> m_led_para.ble_para.pro_para.points(60), m_led_para.ble_para.pro_para(61), 
  5554 ;;  p1              2   22[BANK3 ] PTR struct .
  5555 ;;		 -> m_led_para.ble_para.pro_para.points(60), m_led_para.ble_para.pro_para(61), 
  5556 ;;  t2              2   13[BANK3 ] unsigned int 
  5557 ;;  t1              2   11[BANK3 ] unsigned int 
  5558 ;;  index          10    0[BANK3 ] unsigned char [10]
  5559 ;;  dt              4   15[BANK3 ] unsigned long 
  5560 ;;  st              2   38[BANK3 ] unsigned int 
  5561 ;;  ep              2   35[BANK3 ] PTR struct .
  5562 ;;		 -> m_led_para.ble_para.pro_para.points(60), m_led_para.ble_para.pro_para(61), 
  5563 ;;  sp              2   33[BANK3 ] PTR struct .
  5564 ;;		 -> m_led_para.ble_para.pro_para.points(60), m_led_para.ble_para.pro_para(61), 
  5565 ;;  et              2   31[BANK3 ] unsigned int 
  5566 ;;  end             2   28[BANK3 ] unsigned int 
  5567 ;;  start           2   26[BANK3 ] unsigned int 
  5568 ;;  duration        2   20[BANK3 ] unsigned int 
  5569 ;;  i               1   40[BANK3 ] unsigned char 
  5570 ;;  j               1   37[BANK3 ] unsigned char 
  5571 ;;  point_count     1   30[BANK3 ] unsigned char 
  5572 ;;  flag            1   19[BANK3 ] unsigned char 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      void 
  5575 ;; Registers used:
  5576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 1F/1
  5579 ;;		On exit  : 1F/3
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5582 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5583 ;;      Locals:         0       0       0       0      41       0       0       0       0       0       0       0       
      +0       0
  5584 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;      Totals:         0       0      11       0      41       0       0       0       0       0       0       0       
      +0       0
  5586 ;;Total ram usage:       52 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; Hardware stack levels required when called:    8
  5589 ;; This function calls:
  5590 ;;		___wmul
  5591 ;;		_led_calc_bright
  5592 ;; This function is called by:
  5593 ;;		_led_second_cb
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           
  5598                           ;psect for function _led_pro_process
  5599  1D51                     _led_pro_process:	
  5600                           
  5601                           ;app_led.c: 596: if(m_led_para.ble_para.pro_para.point_count < 4)
  5602                           
  5603                           ;incstack = 0
  5604                           ; Regs used in _led_pro_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5605  1D51  3187  275C  319C   	fcall	PL152	;call to abstracted procedure
  5606                           
  5607                           ;app_led.c: 597: {
  5608                           ;app_led.c: 598: m_led_para.ble_para.pro_para.point_count = 4;
  5609  1D54  1803               	skipnc
  5610  1D55  2D58               	goto	L3
  5611  1D56  3004               	movlw	4
  5612  1D57  2D5F               	goto	L1
  5613  1D58                     L3:	
  5614                           ;app_led.c: 600: else if(m_led_para.ble_para.pro_para.point_count > 10)
  5615                           
  5616                           ;app_led.c: 599: }
  5617                           
  5618  1D58  300B               	movlw	11
  5619  1D59  0201               	subwf	1,w
  5620                           
  5621                           ;app_led.c: 601: {
  5622                           ;app_led.c: 602: m_led_para.ble_para.pro_para.point_count = 10;
  5623  1D5A  27DB  319C         	fcall	PL190	;call to abstracted procedure
  5624  1D5C  1C03               	skipc
  5625  1D5D  2D62               	goto	L4
  5626  1D5E  300A               	movlw	10
  5627  1D5F                     L1:	
  5628  1D5F  0081               	movwf	1
  5629                           
  5630                           ;app_led.c: 603: }
  5631                           ;app_led.c: 604: uint8_t point_count = m_led_para.ble_para.pro_para.point_count;
  5632  1D60  27DB  319C         	fcall	PL190	;call to abstracted procedure
  5633  1D62                     L4:	
  5634  1D62  0801               	movf	1,w
  5635  1D63  0023               	movlb	3	; select bank3
  5636  1D64  00BE               	movwf	led_pro_process@point_count^(0+384)
  5637                           
  5638                           ;app_led.c: 605: uint8_t i, j;
  5639                           ;app_led.c: 606: uint8_t index[10];
  5640                           ;app_led.c: 607: for(i = 0; i < 10; i++)
  5641  1D65  01C8               	clrf	led_pro_process@i^(0+384)
  5642  1D66                     l7980:	
  5643                           
  5644                           ;app_led.c: 608: {
  5645                           ;app_led.c: 609: index[i] = i;
  5646  1D66  0848               	movf	led_pro_process@i^(0+384),w
  5647  1D67  3EA0               	addlw	(low (led_pro_process@index| (0+256)))& (0+255)
  5648  1D68  0086               	movwf	6
  5649  1D69  3001               	movlw	1	; select bank3/4
  5650  1D6A  0087               	movwf	7
  5651  1D6B  0848               	movf	led_pro_process@i^(0+384),w
  5652  1D6C  0081               	movwf	1
  5653  1D6D  300A               	movlw	10
  5654  1D6E  0AC8               	incf	led_pro_process@i^(0+384),f
  5655  1D6F  0248               	subwf	led_pro_process@i^(0+384),w
  5656  1D70  1C03               	skipc
  5657  1D71  2D66               	goto	l7980
  5658                           
  5659                           ;app_led.c: 610: }
  5660                           ;app_led.c: 611: for(i = point_count - 1; i > 0; i--)
  5661  1D72  083E               	movf	led_pro_process@point_count^(0+384),w
  5662  1D73  3EFF               	addlw	255
  5663  1D74  00C8               	movwf	led_pro_process@i^(0+384)
  5664  1D75  0848               	movf	led_pro_process@i^(0+384),w
  5665  1D76  1903               	btfsc	3,2
  5666  1D77  2DF5               	goto	l8018
  5667  1D78                     l7990:	
  5668                           
  5669                           ;app_led.c: 612: {
  5670                           ;app_led.c: 613: for(j = 0; j < i; j++)
  5671  1D78  01C5               	clrf	led_pro_process@j^(0+384)
  5672  1D79                     l8012:	
  5673  1D79  0848               	movf	led_pro_process@i^(0+384),w
  5674  1D7A  0245               	subwf	led_pro_process@j^(0+384),w
  5675  1D7B  1803               	btfsc	3,0
  5676  1D7C  2DF3               	goto	l8014
  5677                           
  5678                           ;app_led.c: 614: {
  5679                           ;app_led.c: 615: timer_bright_point_t *p1 = &m_led_para.ble_para.pro_para.points[index[j
      +                          ]];
  5680  1D7D  30AD               	movlw	173
  5681  1D7E  00B6               	movwf	led_pro_process@p1^(0+384)
  5682  1D7F  3023               	movlw	35
  5683  1D80  00B7               	movwf	(led_pro_process@p1^(0+384)+1)
  5684  1D81  0845               	movf	led_pro_process@j^(0+384),w
  5685  1D82  3EA0               	addlw	(low (led_pro_process@index| (0+256)))& (0+255)
  5686  1D83  27BC  319C         	fcall	PL98	;call to abstracted procedure
  5687  1D85  2799  319C         	fcall	PL58	;call to abstracted procedure
  5688  1D87  270B  319C         	fcall	___wmul
  5689  1D89  2723  319C         	fcall	PL6	;call to abstracted procedure
  5690  1D8B  07B6               	addwf	led_pro_process@p1^(0+384),f
  5691  1D8C  0021               	movlb	1	; select bank1
  5692  1D8D  0838               	movf	(??_led_pro_process+1)^(0+128),w
  5693  1D8E  0023               	movlb	3	; select bank3
  5694  1D8F  3DB7               	addwfc	(led_pro_process@p1+1)^(0+384),f
  5695                           
  5696                           ;app_led.c: 616: timer_bright_point_t *p2 = &m_led_para.ble_para.pro_para.points[index[j
      +                          +1]];
  5697  1D90  30AD               	movlw	173
  5698  1D91  00B8               	movwf	led_pro_process@p2^(0+384)
  5699  1D92  3023               	movlw	35
  5700  1D93  00B9               	movwf	(led_pro_process@p2^(0+384)+1)
  5701  1D94  0845               	movf	led_pro_process@j^(0+384),w
  5702  1D95  3E01               	addlw	1
  5703  1D96  3EA0               	addlw	(low (led_pro_process@index| (0+256)))& (0+255)
  5704  1D97  27BC  319C         	fcall	PL98	;call to abstracted procedure
  5705  1D99  2799  319C         	fcall	PL58	;call to abstracted procedure
  5706  1D9B  270B  319C         	fcall	___wmul
  5707  1D9D  2723  319C         	fcall	PL6	;call to abstracted procedure
  5708  1D9F  07B8               	addwf	led_pro_process@p2^(0+384),f
  5709  1DA0  0021               	movlb	1	; select bank1
  5710  1DA1  0838               	movf	(??_led_pro_process+1)^(0+128),w
  5711  1DA2  0023               	movlb	3	; select bank3
  5712  1DA3  3DB9               	addwfc	(led_pro_process@p2+1)^(0+384),f
  5713                           
  5714                           ;app_led.c: 617: uint16_t t1 = p1->hour*60u + p1->minuite;
  5715  1DA4  0836               	movf	led_pro_process@p1^(0+384),w
  5716  1DA5  0086               	movwf	6
  5717  1DA6  0837               	movf	(led_pro_process@p1+1)^(0+384),w
  5718  1DA7  0087               	movwf	7
  5719  1DA8  272F  319C         	fcall	PL8	;call to abstracted procedure
  5720  1DAA  270B  319C         	fcall	___wmul
  5721  1DAC  0835               	movf	?___wmul+1,w
  5722  1DAD  0023               	movlb	3	; select bank3
  5723  1DAE  00AC               	movwf	(led_pro_process@t1+1)^(0+384)
  5724  1DAF  0020               	movlb	0	; select bank0
  5725  1DB0  0834               	movf	?___wmul,w
  5726  1DB1  0023               	movlb	3	; select bank3
  5727  1DB2  00AB               	movwf	led_pro_process@t1^(0+384)
  5728  1DB3  0836               	movf	led_pro_process@p1^(0+384),w
  5729  1DB4  0086               	movwf	6
  5730  1DB5  0837               	movf	(led_pro_process@p1+1)^(0+384),w
  5731  1DB6  0087               	movwf	7
  5732  1DB7  3141               	addfsr 1,1
  5733  1DB8  0801               	movf	1,w
  5734  1DB9  07AB               	addwf	led_pro_process@t1^(0+384),f
  5735  1DBA  1803               	skipnc
  5736  1DBB  0AAC               	incf	(led_pro_process@t1+1)^(0+384),f
  5737                           
  5738                           ;app_led.c: 618: uint16_t t2 = p2->hour*60u + p2->minuite;
  5739  1DBC  0838               	movf	led_pro_process@p2^(0+384),w
  5740  1DBD  0086               	movwf	6
  5741  1DBE  0839               	movf	(led_pro_process@p2+1)^(0+384),w
  5742  1DBF  0087               	movwf	7
  5743  1DC0  272F  319C         	fcall	PL8	;call to abstracted procedure
  5744  1DC2  270B  319C         	fcall	___wmul
  5745  1DC4  0835               	movf	?___wmul+1,w
  5746  1DC5  0023               	movlb	3	; select bank3
  5747  1DC6  00AE               	movwf	(led_pro_process@t2+1)^(0+384)
  5748  1DC7  0020               	movlb	0	; select bank0
  5749  1DC8  0834               	movf	?___wmul,w
  5750  1DC9  0023               	movlb	3	; select bank3
  5751  1DCA  00AD               	movwf	led_pro_process@t2^(0+384)
  5752  1DCB  0838               	movf	led_pro_process@p2^(0+384),w
  5753  1DCC  0086               	movwf	6
  5754  1DCD  0839               	movf	(led_pro_process@p2+1)^(0+384),w
  5755  1DCE  0087               	movwf	7
  5756  1DCF  3141               	addfsr 1,1
  5757  1DD0  0801               	movf	1,w
  5758  1DD1  07AD               	addwf	led_pro_process@t2^(0+384),f
  5759  1DD2  1803               	skipnc
  5760  1DD3  0AAE               	incf	(led_pro_process@t2+1)^(0+384),f
  5761                           
  5762                           ;app_led.c: 619: if(t1 > t2)
  5763  1DD4  082C               	movf	(led_pro_process@t1+1)^(0+384),w
  5764  1DD5  022E               	subwf	(led_pro_process@t2+1)^(0+384),w
  5765  1DD6  1D03               	skipz
  5766  1DD7  2DDA               	goto	u7305
  5767  1DD8  082B               	movf	led_pro_process@t1^(0+384),w
  5768  1DD9  022D               	subwf	led_pro_process@t2^(0+384),w
  5769  1DDA                     u7305:	
  5770  1DDA  1803               	skipnc
  5771  1DDB  2DF1               	goto	l8010
  5772                           
  5773                           ;app_led.c: 620: {
  5774                           ;app_led.c: 621: uint8_t tmp = index[j];
  5775  1DDC  0845               	movf	led_pro_process@j^(0+384),w
  5776  1DDD  27C2  319C         	fcall	PL104	;call to abstracted procedure
  5777  1DDF  00AA               	movwf	led_pro_process@tmp^(0+384)
  5778                           
  5779                           ;app_led.c: 622: index[j] = index[j+1];
  5780  1DE0  0845               	movf	led_pro_process@j^(0+384),w
  5781  1DE1  3EA0               	addlw	(low (led_pro_process@index| (0+256)))& (0+255)
  5782  1DE2  0086               	movwf	6
  5783  1DE3  0845               	movf	led_pro_process@j^(0+384),w
  5784  1DE4  3E01               	addlw	1
  5785  1DE5  3EA0               	addlw	(low (led_pro_process@index| (0+256)))& (0+255)
  5786  1DE6  0084               	movwf	4
  5787  1DE7  3001               	movlw	1	; select bank3/4
  5788  1DE8  0085               	movwf	5
  5789  1DE9  0800               	movf	0,w
  5790  1DEA  0081               	movwf	1
  5791                           
  5792                           ;app_led.c: 623: index[j+1] = tmp;
  5793  1DEB  0845               	movf	led_pro_process@j^(0+384),w
  5794  1DEC  3E01               	addlw	1
  5795  1DED  3EA0               	addlw	(low (led_pro_process@index| (0+256)))& (0+255)
  5796  1DEE  0086               	movwf	6
  5797  1DEF  082A               	movf	led_pro_process@tmp^(0+384),w
  5798  1DF0  0081               	movwf	1
  5799  1DF1                     l8010:	
  5800  1DF1  0AC5               	incf	led_pro_process@j^(0+384),f
  5801  1DF2  2D79               	goto	l8012
  5802  1DF3                     l8014:	
  5803  1DF3  0BC8               	decfsz	led_pro_process@i^(0+384),f
  5804  1DF4  2D78               	goto	l7990
  5805  1DF5                     l8018:	
  5806                           
  5807                           ;app_led.c: 624: }
  5808                           ;app_led.c: 625: }
  5809                           ;app_led.c: 626: }
  5810                           ;app_led.c: 627: uint16_t start = index[point_count-1];
  5811  1DF5  083E               	movf	led_pro_process@point_count^(0+384),w
  5812  1DF6  3EFF               	addlw	255
  5813  1DF7  27C2  319C         	fcall	PL104	;call to abstracted procedure
  5814  1DF9  00BA               	movwf	led_pro_process@start^(0+384)
  5815  1DFA  01BB               	clrf	(led_pro_process@start+1)^(0+384)
  5816                           
  5817                           ;app_led.c: 628: uint16_t end = index[0];
  5818  1DFB  0820               	movf	led_pro_process@index^(0+384),w
  5819                           
  5820                           ;app_led.c: 629: timer_bright_point_t *sp = &m_led_para.ble_para.pro_para.points[start];
  5821  1DFC  2788  319C         	fcall	PL56	;call to abstracted procedure
  5822  1DFE  270B  319C         	fcall	___wmul
  5823  1E00  2723  319C         	fcall	PL6	;call to abstracted procedure
  5824                           
  5825                           ;app_led.c: 630: timer_bright_point_t *ep = &m_led_para.ble_para.pro_para.points[end];
  5826  1E02  276A  319C         	fcall	PL36	;call to abstracted procedure
  5827  1E04  270B  319C         	fcall	___wmul
  5828  1E06  2723  319C         	fcall	PL6	;call to abstracted procedure
  5829                           
  5830                           ;app_led.c: 631: uint16_t st = sp->hour * 60u + sp->minuite;
  5831  1E08  277E  319C         	fcall	PL52	;call to abstracted procedure
  5832  1E0A  272F  319C         	fcall	PL8	;call to abstracted procedure
  5833  1E0C  270B  319C         	fcall	___wmul
  5834                           
  5835                           ;app_led.c: 632: uint16_t et = ep->hour * 60u + ep->minuite;
  5836  1E0E  2737  319C         	fcall	PL18	;call to abstracted procedure
  5837  1E10  272F  319C         	fcall	PL8	;call to abstracted procedure
  5838  1E12  270B  319C         	fcall	___wmul
  5839  1E14  279F  319C         	fcall	PL66	;call to abstracted procedure
  5840  1E16  1803               	skipnc
  5841  1E17  0AC0               	incf	(led_pro_process@et+1)^(0+384),f
  5842                           
  5843                           ;app_led.c: 633: uint16_t duration = 1440u - st + et;
  5844  1E18  27C8  319C         	fcall	PL128	;call to abstracted procedure
  5845  1E1A  30A0               	movlw	160
  5846  1E1B  07B4               	addwf	led_pro_process@duration^(0+384),f
  5847  1E1C  3005               	movlw	5
  5848  1E1D  3DB5               	addwfc	(led_pro_process@duration+1)^(0+384),f
  5849                           
  5850                           ;app_led.c: 634: uint32_t dt;
  5851                           ;app_led.c: 635: bool flag = 0;
  5852  1E1E  01B3               	clrf	led_pro_process@flag^(0+384)
  5853                           
  5854                           ;app_led.c: 636: if(ct >= st)
  5855  1E1F  0847               	movf	(led_pro_process@st+1)^(0+384),w
  5856  1E20  0021               	movlb	1	; select bank1
  5857  1E21  0235               	subwf	(led_pro_process@ct+1)^(0+128),w
  5858  1E22  1D03               	skipz
  5859  1E23  2E26               	goto	u7335
  5860  1E24  27D6  319C         	fcall	PL188	;call to abstracted procedure
  5861  1E26                     u7335:	
  5862  1E26  1C03               	skipc
  5863  1E27  2E41               	goto	l8052
  5864  1E28                     l8048:	
  5865                           
  5866                           ;app_led.c: 637: {
  5867                           ;app_led.c: 638: dt = (ct-st)*60u + sec;
  5868  1E28  0021               	movlb	1	; select bank1
  5869  1E29  27AE  319C         	fcall	PL76	;call to abstracted procedure
  5870  1E2B  270B  319C         	fcall	___wmul
  5871  1E2D  274C  319C         	fcall	PL24	;call to abstracted procedure
  5872  1E2F  270B  319C         	fcall	___wmul
  5873  1E31  0834               	movf	?___wmul,w
  5874  1E32  0021               	movlb	1	; select bank1
  5875  1E33  0739               	addwf	(??_led_pro_process+2)^(0+128),w
  5876  1E34  0023               	movlb	3	; select bank3
  5877  1E35  00AF               	movwf	led_pro_process@dt^(0+384)
  5878  1E36  0020               	movlb	0	; select bank0
  5879  1E37  0835               	movf	?___wmul+1,w
  5880  1E38  0021               	movlb	1	; select bank1
  5881  1E39  3D3A               	addwfc	(??_led_pro_process+3)^(0+128),w
  5882  1E3A                     L2:	
  5883  1E3A  0023               	movlb	3	; select bank3
  5884  1E3B  00B0               	movwf	(led_pro_process@dt+1)^(0+384)
  5885  1E3C  01B1               	clrf	(led_pro_process@dt+2)^(0+384)
  5886  1E3D  01B2               	clrf	(led_pro_process@dt+3)^(0+384)
  5887                           
  5888                           ;app_led.c: 639: flag = 1;
  5889  1E3E  01B3               	clrf	led_pro_process@flag^(0+384)
  5890  1E3F  0AB3               	incf	led_pro_process@flag^(0+384),f
  5891                           
  5892                           ;app_led.c: 640: }
  5893  1E40  2EB9               	goto	l8092
  5894  1E41                     l8052:	
  5895                           
  5896                           ;app_led.c: 641: else if(ct < et)
  5897  1E41  0023               	movlb	3	; select bank3
  5898  1E42  0840               	movf	(led_pro_process@et+1)^(0+384),w
  5899  1E43  0021               	movlb	1	; select bank1
  5900  1E44  0235               	subwf	(led_pro_process@ct+1)^(0+128),w
  5901  1E45  1D03               	skipz
  5902  1E46  2E49               	goto	u7345
  5903  1E47  27D1  319C         	fcall	PL186	;call to abstracted procedure
  5904  1E49                     u7345:	
  5905  1E49  1803               	skipnc
  5906  1E4A  2E64               	goto	l8058
  5907                           
  5908                           ;app_led.c: 642: {
  5909                           ;app_led.c: 643: dt = (1440u-st+ct)*60u + sec;
  5910  1E4B  27AE  319C         	fcall	PL76	;call to abstracted procedure
  5911  1E4D  270B  319C         	fcall	___wmul
  5912  1E4F  274C  319C         	fcall	PL24	;call to abstracted procedure
  5913  1E51  270B  319C         	fcall	___wmul
  5914  1E53  0834               	movf	?___wmul,w
  5915  1E54  0021               	movlb	1	; select bank1
  5916  1E55  0739               	addwf	(??_led_pro_process+2)^(0+128),w
  5917  1E56  00BB               	movwf	(??_led_pro_process+4)^(0+128)
  5918  1E57  0020               	movlb	0	; select bank0
  5919  1E58  0835               	movf	?___wmul+1,w
  5920  1E59  0021               	movlb	1	; select bank1
  5921  1E5A  3D3A               	addwfc	(??_led_pro_process+3)^(0+128),w
  5922  1E5B  00BC               	movwf	(??_led_pro_process+5)^(0+128)
  5923  1E5C  083B               	movf	(??_led_pro_process+4)^(0+128),w
  5924  1E5D  3E80               	addlw	128
  5925  1E5E  0023               	movlb	3	; select bank3
  5926  1E5F  00AF               	movwf	led_pro_process@dt^(0+384)
  5927  1E60  3051               	movlw	81
  5928  1E61  0021               	movlb	1	; select bank1
  5929  1E62  3D3C               	addwfc	(??_led_pro_process+5)^(0+128),w
  5930  1E63  2E3A               	goto	L2
  5931  1E64                     l8058:	
  5932                           
  5933                           ;app_led.c: 646: else
  5934                           ;app_led.c: 647: {
  5935                           ;app_led.c: 648: for(i = 0; i < point_count-1; i++)
  5936  1E64  0023               	movlb	3	; select bank3
  5937  1E65  01C8               	clrf	led_pro_process@i^(0+384)
  5938  1E66                     l8090:	
  5939  1E66  083E               	movf	led_pro_process@point_count^(0+384),w
  5940  1E67  3EFF               	addlw	255
  5941  1E68  0021               	movlb	1	; select bank1
  5942  1E69  00B7               	movwf	??_led_pro_process^(0+128)
  5943  1E6A  30FF               	movlw	255
  5944  1E6B  1803               	skipnc
  5945  1E6C  3000               	movlw	0
  5946  1E6D  00B8               	movwf	(??_led_pro_process^(0+128)+1)
  5947  1E6E  0838               	movf	(??_led_pro_process+1)^(0+128),w
  5948  1E6F  3A80               	xorlw	128
  5949  1E70  3C80               	sublw	128
  5950  1E71  1D03               	skipz
  5951  1E72  2E76               	goto	u7375
  5952  1E73  0837               	movf	??_led_pro_process^(0+128),w
  5953  1E74  0023               	movlb	3	; select bank3
  5954  1E75  0248               	subwf	led_pro_process@i^(0+384),w
  5955  1E76                     u7375:	
  5956  1E76  1803               	btfsc	3,0
  5957  1E77  2EB9               	goto	l8092
  5958                           
  5959                           ;app_led.c: 649: {
  5960                           ;app_led.c: 650: start = index[i];
  5961  1E78  0023               	movlb	3	; select bank3
  5962  1E79  0848               	movf	led_pro_process@i^(0+384),w
  5963  1E7A  27C2  319C         	fcall	PL104	;call to abstracted procedure
  5964  1E7C  00BA               	movwf	led_pro_process@start^(0+384)
  5965  1E7D  01BB               	clrf	(led_pro_process@start+1)^(0+384)
  5966                           
  5967                           ;app_led.c: 651: end = index[i+1];
  5968  1E7E  0848               	movf	led_pro_process@i^(0+384),w
  5969  1E7F  3E01               	addlw	1
  5970  1E80  3EA0               	addlw	(low (led_pro_process@index| (0+256)))& (0+255)
  5971  1E81  0086               	movwf	6
  5972  1E82  0801               	movf	1,w
  5973                           
  5974                           ;app_led.c: 652: sp = &m_led_para.ble_para.pro_para.points[start];
  5975  1E83  2788  319C         	fcall	PL56	;call to abstracted procedure
  5976  1E85  270B  319C         	fcall	___wmul
  5977  1E87  2723  319C         	fcall	PL6	;call to abstracted procedure
  5978                           
  5979                           ;app_led.c: 653: ep = &m_led_para.ble_para.pro_para.points[end];
  5980  1E89  276A  319C         	fcall	PL36	;call to abstracted procedure
  5981  1E8B  270B  319C         	fcall	___wmul
  5982  1E8D  2723  319C         	fcall	PL6	;call to abstracted procedure
  5983                           
  5984                           ;app_led.c: 654: st = sp->hour*60u + sp->minuite;
  5985  1E8F  277E  319C         	fcall	PL52	;call to abstracted procedure
  5986  1E91  272F  319C         	fcall	PL8	;call to abstracted procedure
  5987  1E93  270B  319C         	fcall	___wmul
  5988                           
  5989                           ;app_led.c: 655: et = ep->hour*60u + ep->minuite;
  5990  1E95  2737  319C         	fcall	PL18	;call to abstracted procedure
  5991  1E97  272F  319C         	fcall	PL8	;call to abstracted procedure
  5992  1E99  270B  319C         	fcall	___wmul
  5993  1E9B  279F  319C         	fcall	PL66	;call to abstracted procedure
  5994  1E9D  1803               	skipnc
  5995  1E9E  0AC0               	incf	(led_pro_process@et+1)^(0+384),f
  5996                           
  5997                           ;app_led.c: 656: if(ct >= st && ct < et)
  5998  1E9F  0847               	movf	(led_pro_process@st+1)^(0+384),w
  5999  1EA0  0021               	movlb	1	; select bank1
  6000  1EA1  0235               	subwf	(led_pro_process@ct+1)^(0+128),w
  6001  1EA2  1D03               	skipz
  6002  1EA3  2EA6               	goto	u7355
  6003  1EA4  27D6  319C         	fcall	PL188	;call to abstracted procedure
  6004  1EA6                     u7355:	
  6005  1EA6  1C03               	skipc
  6006  1EA7  2EB6               	goto	l8088
  6007  1EA8  0023               	movlb	3	; select bank3
  6008  1EA9  0840               	movf	(led_pro_process@et+1)^(0+384),w
  6009  1EAA  0021               	movlb	1	; select bank1
  6010  1EAB  0235               	subwf	(led_pro_process@ct+1)^(0+128),w
  6011  1EAC  1D03               	skipz
  6012  1EAD  2EB0               	goto	u7365
  6013  1EAE  27D1  319C         	fcall	PL186	;call to abstracted procedure
  6014  1EB0                     u7365:	
  6015  1EB0  1803               	skipnc
  6016  1EB1  2EB6               	goto	l8088
  6017                           
  6018                           ;app_led.c: 657: {
  6019                           ;app_led.c: 658: duration = et - st;
  6020  1EB2  0023               	movlb	3	; select bank3
  6021  1EB3  27C8  319C         	fcall	PL128	;call to abstracted procedure
  6022  1EB5  2E28               	goto	l8048
  6023  1EB6                     l8088:	
  6024  1EB6  0023               	movlb	3	; select bank3
  6025  1EB7  0AC8               	incf	led_pro_process@i^(0+384),f
  6026  1EB8  2E66               	goto	l8090
  6027  1EB9                     l8092:	
  6028                           
  6029                           ;app_led.c: 662: }
  6030                           ;app_led.c: 663: }
  6031                           ;app_led.c: 664: }
  6032                           ;app_led.c: 665: if(flag)
  6033  1EB9  0023               	movlb	3	; select bank3
  6034  1EBA  0833               	movf	led_pro_process@flag^(0+384),w
  6035  1EBB  1903               	btfsc	3,2
  6036  1EBC  0008               	return
  6037                           
  6038                           ;app_led.c: 666: {
  6039                           ;app_led.c: 667: for(i = 0; i < 4; i++)
  6040  1EBD  01C8               	clrf	led_pro_process@i^(0+384)
  6041  1EBE                     l8100:	
  6042                           
  6043                           ;app_led.c: 668: {
  6044                           ;app_led.c: 669: target_bright[i] = led_calc_bright(sp->bright[i], ep->bright[i], durati
      +                          on, dt);
  6045  1EBE  0848               	movf	led_pro_process@i^(0+384),w
  6046  1EBF  0021               	movlb	1	; select bank1
  6047  1EC0  00B7               	movwf	??_led_pro_process^(0+128)
  6048  1EC1  01B8               	clrf	(??_led_pro_process^(0+128)+1)
  6049  1EC2  0023               	movlb	3	; select bank3
  6050  1EC3  0743               	addwf	led_pro_process@ep^(0+384),w
  6051  1EC4  0021               	movlb	1	; select bank1
  6052  1EC5  00B9               	movwf	(??_led_pro_process+2)^(0+128)
  6053  1EC6  0838               	movf	(??_led_pro_process+1)^(0+128),w
  6054  1EC7  0023               	movlb	3	; select bank3
  6055  1EC8  3D44               	addwfc	(led_pro_process@ep+1)^(0+384),w
  6056  1EC9  0021               	movlb	1	; select bank1
  6057  1ECA  00BA               	movwf	(??_led_pro_process+3)^(0+128)
  6058  1ECB  0839               	movf	(??_led_pro_process+2)^(0+128),w
  6059  1ECC  0086               	movwf	6
  6060  1ECD  083A               	movf	(??_led_pro_process+3)^(0+128),w
  6061  1ECE  0087               	movwf	7
  6062  1ECF  3142               	addfsr 1,2
  6063  1ED0  0801               	movf	1,w
  6064  1ED1  00A5               	movwf	led_calc_bright@ebrt^(0+128)
  6065  1ED2  0023               	movlb	3	; select bank3
  6066  1ED3  0835               	movf	(led_pro_process@duration+1)^(0+384),w
  6067  1ED4  0021               	movlb	1	; select bank1
  6068  1ED5  00A7               	movwf	(led_calc_bright@duration+1)^(0+128)
  6069  1ED6  0023               	movlb	3	; select bank3
  6070  1ED7  0834               	movf	led_pro_process@duration^(0+384),w
  6071  1ED8  0021               	movlb	1	; select bank1
  6072  1ED9  00A6               	movwf	led_calc_bright@duration^(0+128)
  6073  1EDA  0023               	movlb	3	; select bank3
  6074  1EDB  0832               	movf	(led_pro_process@dt+3)^(0+384),w
  6075  1EDC  0021               	movlb	1	; select bank1
  6076  1EDD  00AB               	movwf	(led_calc_bright@dt+3)^(0+128)
  6077  1EDE  0023               	movlb	3	; select bank3
  6078  1EDF  0831               	movf	(led_pro_process@dt+2)^(0+384),w
  6079  1EE0  0021               	movlb	1	; select bank1
  6080  1EE1  00AA               	movwf	(led_calc_bright@dt+2)^(0+128)
  6081  1EE2  0023               	movlb	3	; select bank3
  6082  1EE3  0830               	movf	(led_pro_process@dt+1)^(0+384),w
  6083  1EE4  0021               	movlb	1	; select bank1
  6084  1EE5  00A9               	movwf	(led_calc_bright@dt+1)^(0+128)
  6085  1EE6  0023               	movlb	3	; select bank3
  6086  1EE7  082F               	movf	led_pro_process@dt^(0+384),w
  6087  1EE8  0021               	movlb	1	; select bank1
  6088  1EE9  00A8               	movwf	led_calc_bright@dt^(0+128)
  6089  1EEA  0023               	movlb	3	; select bank3
  6090  1EEB  0848               	movf	led_pro_process@i^(0+384),w
  6091  1EEC  0021               	movlb	1	; select bank1
  6092  1EED  00BB               	movwf	(??_led_pro_process+4)^(0+128)
  6093  1EEE  01BC               	clrf	((??_led_pro_process+4)^(0+128)+1)
  6094  1EEF  0023               	movlb	3	; select bank3
  6095  1EF0  0741               	addwf	led_pro_process@sp^(0+384),w
  6096  1EF1  0021               	movlb	1	; select bank1
  6097  1EF2  00BD               	movwf	(??_led_pro_process+6)^(0+128)
  6098  1EF3  083C               	movf	(??_led_pro_process+5)^(0+128),w
  6099  1EF4  0023               	movlb	3	; select bank3
  6100  1EF5  3D42               	addwfc	(led_pro_process@sp+1)^(0+384),w
  6101  1EF6  0021               	movlb	1	; select bank1
  6102  1EF7  00BE               	movwf	(??_led_pro_process+7)^(0+128)
  6103  1EF8  083D               	movf	(??_led_pro_process+6)^(0+128),w
  6104  1EF9  0086               	movwf	6
  6105  1EFA  083E               	movf	(??_led_pro_process+7)^(0+128),w
  6106  1EFB  0087               	movwf	7
  6107  1EFC  3142               	addfsr 1,2
  6108  1EFD  0801               	movf	1,w
  6109  1EFE  3193  230E  319C   	fcall	_led_calc_bright
  6110  1F01  0023               	movlb	3	; select bank3
  6111  1F02  3548               	lslf	led_pro_process@i^(0+384),w
  6112  1F03  3193  23FA  319C   	fcall	PL84	;call to abstracted procedure
  6113  1F06  0AC8               	incf	led_pro_process@i^(0+384),f
  6114  1F07  0248               	subwf	led_pro_process@i^(0+384),w
  6115  1F08  1803               	btfsc	3,0
  6116  1F09  0008               	return
  6117  1F0A  2EBE               	goto	l8100
  6118  1F0B                     __end_of_led_pro_process:	
  6119  1F0B                     __ptext74:	
  6120 ;; *************** function ___wmul *****************
  6121 ;; Defined at:
  6122 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul16.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  multiplier      2   20[BANK0 ] unsigned int 
  6125 ;;  multiplicand    2   22[BANK0 ] unsigned int 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  product         2   24[BANK0 ] unsigned int 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  2   20[BANK0 ] unsigned int 
  6130 ;; Registers used:
  6131 ;;		wreg, status,2, status,0
  6132 ;; Tracked objects:
  6133 ;;		On entry : 1F/0
  6134 ;;		On exit  : 1F/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6137 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;Total ram usage:        6 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    6
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_ble_decode
  6148 ;;		_led_para_init
  6149 ;;		_led_calc_bright
  6150 ;;		_led_auto_process
  6151 ;;		_led_pro_process
  6152 ;;		_led_period_dynamic_process
  6153 ;;		_led_second_cb
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           
  6158                           ;psect for function ___wmul
  6159  1F0B                     ___wmul:	
  6160                           
  6161                           ;incstack = 0
  6162                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6163  1F0B  01B8               	clrf	___wmul@product
  6164  1F0C  01B9               	clrf	___wmul@product+1
  6165  1F0D                     l7372:	
  6166  1F0D  1C34               	btfss	___wmul@multiplier,0
  6167  1F0E  2F13               	goto	l7376
  6168  1F0F  0836               	movf	___wmul@multiplicand,w
  6169  1F10  07B8               	addwf	___wmul@product,f
  6170  1F11  0837               	movf	___wmul@multiplicand+1,w
  6171  1F12  3DB9               	addwfc	___wmul@product+1,f
  6172  1F13                     l7376:	
  6173  1F13  35B6               	lslf	___wmul@multiplicand,f
  6174  1F14  0DB7               	rlf	___wmul@multiplicand+1,f
  6175  1F15  36B5               	lsrf	___wmul@multiplier+1,f
  6176  1F16  0CB4               	rrf	___wmul@multiplier,f
  6177  1F17  0834               	movf	___wmul@multiplier,w
  6178  1F18  0435               	iorwf	___wmul@multiplier+1,w
  6179  1F19  1D03               	btfss	3,2
  6180  1F1A  2F0D               	goto	l7372
  6181  1F1B  0839               	movf	___wmul@product+1,w
  6182  1F1C  00B5               	movwf	?___wmul+1
  6183  1F1D  0838               	movf	___wmul@product,w
  6184  1F1E  00B4               	movwf	?___wmul
  6185  1F1F  0008               	return
  6186  1F20                     __end_of___wmul:	
  6187  1F20                     __ptext13:	
  6188 ;; *************** function _rtc_get_week *****************
  6189 ;; Defined at:
  6190 ;;		line 135 in file "src/app_rtc.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      unsigned char 
  6197 ;; Registers used:
  6198 ;;		wreg
  6199 ;; Tracked objects:
  6200 ;;		On entry : 1F/0
  6201 ;;		On exit  : 1F/2
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6208 ;;Total ram usage:        0 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    6
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_led_period_dynamic_process
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           
  6219                           ;psect for function _rtc_get_week
  6220  1F20                     _rtc_get_week:	
  6221                           
  6222                           ;app_rtc.c: 137: return m_current_time.week;
  6223                           
  6224                           ;incstack = 0
  6225                           ; Regs used in _rtc_get_week: [wreg]
  6226  1F20  0022               	movlb	2	; select bank2
  6227  1F21  0858               	movf	(_m_current_time^(0+256)+3),w
  6228  1F22  0008               	return
  6229  1F23                     __end_of_rtc_get_week:	
  6230  1F23                     PL6:	
  6231  1F23  0834               	movf	?___wmul,w
  6232  1F24  3E01               	addlw	1
  6233  1F25  0021               	movlb	1	; select bank1
  6234  1F26  00B7               	movwf	??_led_pro_process^(0+128)
  6235  1F27  3000               	movlw	0
  6236  1F28  0020               	movlb	0	; select bank0
  6237  1F29  3D35               	addwfc	?___wmul+1,w
  6238  1F2A  0021               	movlb	1	; select bank1
  6239  1F2B  00B8               	movwf	(??_led_pro_process+1)^(0+128)
  6240  1F2C  0837               	movf	??_led_pro_process^(0+128),w
  6241  1F2D  0023               	movlb	3	; select bank3
  6242  1F2E  0008               	return
  6243  1F2F                     __end_ofPL6:	
  6244  1F2F                     PL8:	
  6245  1F2F  0801               	movf	1,w
  6246  1F30  0020               	movlb	0	; select bank0
  6247  1F31  00B4               	movwf	___wmul@multiplier
  6248  1F32  303C               	movlw	60
  6249  1F33  01B5               	clrf	___wmul@multiplier+1
  6250  1F34  00B6               	movwf	___wmul@multiplicand
  6251  1F35  01B7               	clrf	___wmul@multiplicand+1
  6252  1F36  0008               	return
  6253  1F37                     __end_ofPL8:	
  6254  1F37                     PL18:	
  6255  1F37  0835               	movf	?___wmul+1,w
  6256  1F38  0023               	movlb	3	; select bank3
  6257  1F39  00C7               	movwf	(led_pro_process@st+1)^(0+384)
  6258  1F3A  0020               	movlb	0	; select bank0
  6259  1F3B  0834               	movf	?___wmul,w
  6260  1F3C  0023               	movlb	3	; select bank3
  6261  1F3D  00C6               	movwf	led_pro_process@st^(0+384)
  6262  1F3E  0841               	movf	led_pro_process@sp^(0+384),w
  6263  1F3F  0086               	movwf	6
  6264  1F40  0842               	movf	(led_pro_process@sp+1)^(0+384),w
  6265  1F41  0087               	movwf	7
  6266  1F42  3141               	addfsr 1,1
  6267  1F43  0801               	movf	1,w
  6268  1F44  07C6               	addwf	led_pro_process@st^(0+384),f
  6269  1F45  1803               	skipnc
  6270  1F46  0AC7               	incf	(led_pro_process@st+1)^(0+384),f
  6271  1F47  0843               	movf	led_pro_process@ep^(0+384),w
  6272  1F48  0086               	movwf	6
  6273  1F49  0844               	movf	(led_pro_process@ep+1)^(0+384),w
  6274  1F4A  0087               	movwf	7
  6275  1F4B  0008               	return
  6276  1F4C                     __end_ofPL18:	
  6277  1F4C                     PL24:	
  6278  1F4C  0021               	movlb	1	; select bank1
  6279  1F4D  0837               	movf	??_led_pro_process^(0+128),w
  6280  1F4E  0020               	movlb	0	; select bank0
  6281  1F4F  0734               	addwf	?___wmul,w
  6282  1F50  0021               	movlb	1	; select bank1
  6283  1F51  00B9               	movwf	(??_led_pro_process+2)^(0+128)
  6284  1F52  0838               	movf	(??_led_pro_process+1)^(0+128),w
  6285  1F53  0020               	movlb	0	; select bank0
  6286  1F54  3D35               	addwfc	?___wmul+1,w
  6287  1F55  0021               	movlb	1	; select bank1
  6288  1F56  00BA               	movwf	(??_led_pro_process+3)^(0+128)
  6289  1F57  0023               	movlb	3	; select bank3
  6290  1F58  0847               	movf	(led_pro_process@st+1)^(0+384),w
  6291  1F59  0020               	movlb	0	; select bank0
  6292  1F5A  00B5               	movwf	___wmul@multiplier+1
  6293  1F5B  0023               	movlb	3	; select bank3
  6294  1F5C  0846               	movf	led_pro_process@st^(0+384),w
  6295  1F5D  0020               	movlb	0	; select bank0
  6296  1F5E  00B4               	movwf	___wmul@multiplier
  6297  1F5F  30C4               	movlw	196
  6298  1F60  00B6               	movwf	___wmul@multiplicand
  6299  1F61  30FF               	movlw	255
  6300  1F62  00B7               	movwf	___wmul@multiplicand+1
  6301  1F63  0008               	return
  6302  1F64                     __end_ofPL24:	
  6303  1F64                     PL26:	
  6304  1F64  00B4               	movwf	___wmul@multiplier
  6305  1F65  303C               	movlw	60
  6306  1F66  01B5               	clrf	___wmul@multiplier+1
  6307  1F67  00B6               	movwf	___wmul@multiplicand
  6308  1F68  01B7               	clrf	___wmul@multiplicand+1
  6309  1F69  0008               	return
  6310  1F6A                     __end_ofPL26:	
  6311  1F6A                     PL36:	
  6312  1F6A  07C1               	addwf	led_pro_process@sp^(0+384),f
  6313  1F6B  0021               	movlb	1	; select bank1
  6314  1F6C  0838               	movf	(??_led_pro_process+1)^(0+128),w
  6315  1F6D  0023               	movlb	3	; select bank3
  6316  1F6E  3DC2               	addwfc	(led_pro_process@sp+1)^(0+384),f
  6317  1F6F  30AD               	movlw	173
  6318  1F70  00C3               	movwf	led_pro_process@ep^(0+384)
  6319  1F71  3023               	movlw	35
  6320  1F72  00C4               	movwf	(led_pro_process@ep^(0+384)+1)
  6321  1F73  083D               	movf	(led_pro_process@end+1)^(0+384),w
  6322  1F74  0020               	movlb	0	; select bank0
  6323  1F75  00B5               	movwf	___wmul@multiplier+1
  6324  1F76  0023               	movlb	3	; select bank3
  6325  1F77  083C               	movf	led_pro_process@end^(0+384),w
  6326  1F78  0020               	movlb	0	; select bank0
  6327  1F79  00B4               	movwf	___wmul@multiplier
  6328  1F7A  3006               	movlw	6
  6329  1F7B  00B6               	movwf	___wmul@multiplicand
  6330  1F7C  01B7               	clrf	___wmul@multiplicand+1
  6331  1F7D  0008               	return
  6332  1F7E                     __end_ofPL36:	
  6333  1F7E                     PL52:	
  6334  1F7E  07C3               	addwf	led_pro_process@ep^(0+384),f
  6335  1F7F  0021               	movlb	1	; select bank1
  6336  1F80  0838               	movf	(??_led_pro_process+1)^(0+128),w
  6337  1F81  0023               	movlb	3	; select bank3
  6338  1F82  3DC4               	addwfc	(led_pro_process@ep+1)^(0+384),f
  6339  1F83  0841               	movf	led_pro_process@sp^(0+384),w
  6340  1F84  0086               	movwf	6
  6341  1F85  0842               	movf	(led_pro_process@sp+1)^(0+384),w
  6342  1F86  0087               	movwf	7
  6343  1F87  0008               	return
  6344  1F88                     __end_ofPL52:	
  6345  1F88                     PL56:	
  6346  1F88  00BC               	movwf	led_pro_process@end^(0+384)
  6347  1F89  30AD               	movlw	173
  6348  1F8A  01BD               	clrf	(led_pro_process@end+1)^(0+384)
  6349  1F8B  00C1               	movwf	led_pro_process@sp^(0+384)
  6350  1F8C  3023               	movlw	35
  6351  1F8D  00C2               	movwf	(led_pro_process@sp^(0+384)+1)
  6352  1F8E  083B               	movf	(led_pro_process@start+1)^(0+384),w
  6353  1F8F  0020               	movlb	0	; select bank0
  6354  1F90  00B5               	movwf	___wmul@multiplier+1
  6355  1F91  0023               	movlb	3	; select bank3
  6356  1F92  083A               	movf	led_pro_process@start^(0+384),w
  6357  1F93  0020               	movlb	0	; select bank0
  6358  1F94  00B4               	movwf	___wmul@multiplier
  6359  1F95  3006               	movlw	6
  6360  1F96  00B6               	movwf	___wmul@multiplicand
  6361  1F97  01B7               	clrf	___wmul@multiplicand+1
  6362  1F98  0008               	return
  6363  1F99                     __end_ofPL56:	
  6364  1F99                     PL58:	
  6365  1F99  00B4               	movwf	___wmul@multiplier
  6366  1F9A  3006               	movlw	6
  6367  1F9B  01B5               	clrf	___wmul@multiplier+1
  6368  1F9C  00B6               	movwf	___wmul@multiplicand
  6369  1F9D  01B7               	clrf	___wmul@multiplicand+1
  6370  1F9E  0008               	return
  6371  1F9F                     __end_ofPL58:	
  6372  1F9F                     PL66:	
  6373  1F9F  0835               	movf	?___wmul+1,w
  6374  1FA0  0023               	movlb	3	; select bank3
  6375  1FA1  00C0               	movwf	(led_pro_process@et+1)^(0+384)
  6376  1FA2  0020               	movlb	0	; select bank0
  6377  1FA3  0834               	movf	?___wmul,w
  6378  1FA4  0023               	movlb	3	; select bank3
  6379  1FA5  00BF               	movwf	led_pro_process@et^(0+384)
  6380  1FA6  0843               	movf	led_pro_process@ep^(0+384),w
  6381  1FA7  0086               	movwf	6
  6382  1FA8  0844               	movf	(led_pro_process@ep+1)^(0+384),w
  6383  1FA9  0087               	movwf	7
  6384  1FAA  3141               	addfsr 1,1
  6385  1FAB  0801               	movf	1,w
  6386  1FAC  07BF               	addwf	led_pro_process@et^(0+384),f
  6387  1FAD  0008               	return
  6388  1FAE                     __end_ofPL66:	
  6389  1FAE                     PL76:	
  6390  1FAE  0836               	movf	led_pro_process@sec^(0+128),w
  6391  1FAF  00B7               	movwf	??_led_pro_process^(0+128)
  6392  1FB0  01B8               	clrf	(??_led_pro_process^(0+128)+1)
  6393  1FB1  0835               	movf	(led_pro_process@ct+1)^(0+128),w
  6394  1FB2  0020               	movlb	0	; select bank0
  6395  1FB3  00B5               	movwf	___wmul@multiplier+1
  6396  1FB4  0021               	movlb	1	; select bank1
  6397  1FB5  0834               	movf	led_pro_process@ct^(0+128),w
  6398  1FB6  0020               	movlb	0	; select bank0
  6399  1FB7  00B4               	movwf	___wmul@multiplier
  6400  1FB8  303C               	movlw	60
  6401  1FB9  00B6               	movwf	___wmul@multiplicand
  6402  1FBA  01B7               	clrf	___wmul@multiplicand+1
  6403  1FBB  0008               	return
  6404  1FBC                     __end_ofPL76:	
  6405  1FBC                     PL98:	
  6406  1FBC  0086               	movwf	6
  6407  1FBD  3001               	movlw	1	; select bank3/4
  6408  1FBE  0087               	movwf	7
  6409  1FBF  0801               	movf	1,w
  6410  1FC0  0020               	movlb	0	; select bank0
  6411  1FC1  0008               	return
  6412  1FC2                     __end_ofPL98:	
  6413  1FC2                     PL104:	
  6414  1FC2  3EA0               	addlw	(low (led_pro_process@index| (0+256)))& (0+255)
  6415  1FC3  0086               	movwf	6
  6416  1FC4  3001               	movlw	1	; select bank3/4
  6417  1FC5  0087               	movwf	7
  6418  1FC6  0801               	movf	1,w
  6419  1FC7  0008               	return
  6420  1FC8                     __end_ofPL104:	
  6421  1FC8                     PL128:	
  6422  1FC8  0840               	movf	(led_pro_process@et+1)^(0+384),w
  6423  1FC9  00B5               	movwf	(led_pro_process@duration+1)^(0+384)
  6424  1FCA  083F               	movf	led_pro_process@et^(0+384),w
  6425  1FCB  00B4               	movwf	led_pro_process@duration^(0+384)
  6426  1FCC  0846               	movf	led_pro_process@st^(0+384),w
  6427  1FCD  02B4               	subwf	led_pro_process@duration^(0+384),f
  6428  1FCE  0847               	movf	(led_pro_process@st+1)^(0+384),w
  6429  1FCF  3BB5               	subwfb	(led_pro_process@duration+1)^(0+384),f
  6430  1FD0  0008               	return
  6431  1FD1                     __end_ofPL128:	
  6432  1FD1                     PL186:	
  6433  1FD1  0023               	movlb	3	; select bank3
  6434  1FD2  083F               	movf	led_pro_process@et^(0+384),w
  6435  1FD3  0021               	movlb	1	; select bank1
  6436  1FD4  0234               	subwf	led_pro_process@ct^(0+128),w
  6437  1FD5  0008               	return
  6438  1FD6                     __end_ofPL186:	
  6439  1FD6                     PL188:	
  6440  1FD6  0023               	movlb	3	; select bank3
  6441  1FD7  0846               	movf	led_pro_process@st^(0+384),w
  6442  1FD8  0021               	movlb	1	; select bank1
  6443  1FD9  0234               	subwf	led_pro_process@ct^(0+128),w
  6444  1FDA  0008               	return
  6445  1FDB                     __end_ofPL188:	
  6446  1FDB                     PL190:	
  6447  1FDB  30AD               	movlw	173
  6448  1FDC  0086               	movwf	6
  6449  1FDD  3023               	movlw	35
  6450  1FDE  0087               	movwf	7
  6451  1FDF  0008               	return
  6452  1FE0                     __end_ofPL190:	
  6453                           
  6454                           	psect	text17
  6455  1116                     __ptext17:	
  6456 ;; *************** function _led_auto_process *****************
  6457 ;; Defined at:
  6458 ;;		line 513 in file "src/app_led.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  ct              2   20[BANK1 ] unsigned int 
  6461 ;;  sec             1   22[BANK1 ] unsigned char 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  val            24    0[BANK3 ] unsigned char [4][6]
  6464 ;;  tr             12   24[BANK3 ] unsigned int [6]
  6465 ;;  dt              4   39[BANK3 ] unsigned long 
  6466 ;;  p               2   49[BANK3 ] PTR struct .
  6467 ;;		 -> m_led_para.ble_para.auto_para(19), m_led_para.ble_para(113), 
  6468 ;;  st              2   47[BANK3 ] unsigned int 
  6469 ;;  et              2   44[BANK3 ] unsigned int 
  6470 ;;  duration        2   36[BANK3 ] unsigned int 
  6471 ;;  i               1   51[BANK3 ] unsigned char 
  6472 ;;  k               1   46[BANK3 ] unsigned char 
  6473 ;;  count           1   43[BANK3 ] unsigned char 
  6474 ;;  j               1   38[BANK3 ] unsigned char 
  6475 ;; Return value:  Size  Location     Type
  6476 ;;                  1    wreg      void 
  6477 ;; Registers used:
  6478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6479 ;; Tracked objects:
  6480 ;;		On entry : 1F/1
  6481 ;;		On exit  : 1F/3
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6484 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6485 ;;      Locals:         0       0       0       0      52       0       0       0       0       0       0       0       
      +0       0
  6486 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;      Totals:         0       0       9       0      52       0       0       0       0       0       0       0       
      +0       0
  6488 ;;Total ram usage:       61 bytes
  6489 ;; Hardware stack levels used:    1
  6490 ;; Hardware stack levels required when called:    8
  6491 ;; This function calls:
  6492 ;;		___awmod
  6493 ;;		___lmul
  6494 ;;		___wmul
  6495 ;;		_led_calc_bright
  6496 ;; This function is called by:
  6497 ;;		_led_second_cb
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           
  6502                           ;psect for function _led_auto_process
  6503  1116                     _led_auto_process:	
  6504                           
  6505                           ;app_led.c: 515: uint8_t i, j, k;
  6506                           ;app_led.c: 516: uint16_t st;
  6507                           ;app_led.c: 517: uint16_t et;
  6508                           ;app_led.c: 518: uint16_t duration;
  6509                           ;app_led.c: 519: uint32_t dt;
  6510                           ;app_led.c: 520: uint8_t count = 4;
  6511                           
  6512                           ;incstack = 0
  6513                           ; Regs used in _led_auto_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6514  1116  3004               	movlw	4
  6515  1117  0023               	movlb	3	; select bank3
  6516  1118  00CB               	movwf	led_auto_process@count^(0+384)
  6517                           
  6518                           ;app_led.c: 521: auto_para_t *p = &m_led_para.ble_para.auto_para;
  6519  1119  307F               	movlw	127
  6520  111A  00D1               	movwf	led_auto_process@p^(0+384)
  6521  111B  3023               	movlw	35
  6522  111C  00D2               	movwf	(led_auto_process@p^(0+384)+1)
  6523  111D  301B               	movlw	27
  6524  111E  07D1               	addwf	led_auto_process@p^(0+384),f
  6525  111F  1803               	skipnc
  6526  1120  0AD2               	incf	(led_auto_process@p+1)^(0+384),f
  6527                           
  6528                           ;app_led.c: 522: uint16_t tr[6];
  6529                           ;app_led.c: 523: tr[0] = p->sunrise_start_hour * 60u + p->sunrise_start_minute;
  6530  1121  0851               	movf	led_auto_process@p^(0+384),w
  6531  1122  0086               	movwf	6
  6532  1123  0852               	movf	(led_auto_process@p+1)^(0+384),w
  6533  1124  0087               	movwf	7
  6534  1125  319F  272F  3191   	fcall	PL8	;call to abstracted procedure
  6535  1128  319F  270B  3191   	fcall	___wmul
  6536  112B  0835               	movf	?___wmul+1,w
  6537  112C  0023               	movlb	3	; select bank3
  6538  112D  00B9               	movwf	(led_auto_process@tr+1)^(0+384)
  6539  112E  0020               	movlb	0	; select bank0
  6540  112F  0834               	movf	?___wmul,w
  6541  1130  0023               	movlb	3	; select bank3
  6542  1131  00B8               	movwf	led_auto_process@tr^(0+384)
  6543  1132  0851               	movf	led_auto_process@p^(0+384),w
  6544  1133  0086               	movwf	6
  6545  1134  0852               	movf	(led_auto_process@p+1)^(0+384),w
  6546  1135  0087               	movwf	7
  6547  1136  3141               	addfsr 1,1
  6548  1137  0801               	movf	1,w
  6549  1138  07B8               	addwf	led_auto_process@tr^(0+384),f
  6550  1139  1803               	skipnc
  6551  113A  0AB9               	incf	(led_auto_process@tr+1)^(0+384),f
  6552                           
  6553                           ;app_led.c: 524: tr[1] = p->sunrise_end_hour * 60u + p->sunrise_end_minute;
  6554  113B  0851               	movf	led_auto_process@p^(0+384),w
  6555  113C  0086               	movwf	6
  6556  113D  0852               	movf	(led_auto_process@p+1)^(0+384),w
  6557  113E  0087               	movwf	7
  6558  113F  3143               	addfsr 1,3
  6559  1140  23F0               	fcall	PL32	;call to abstracted procedure
  6560  1141  3142               	addfsr 1,2
  6561  1142  319F  272F  3191   	fcall	PL8	;call to abstracted procedure
  6562  1145  319F  270B  3191   	fcall	___wmul
  6563  1148  241E  3191         	fcall	PL126	;call to abstracted procedure
  6564  114A  00BA               	movwf	(led_auto_process@tr^(0+384)+2)
  6565  114B  2418  3191         	fcall	PL120	;call to abstracted procedure
  6566  114D  00BB               	movwf	((led_auto_process@tr+1)^(0+384)+2)
  6567                           
  6568                           ;app_led.c: 525: tr[2] = p->sunset_start_hour * 60u + p->sunset_start_minute;
  6569  114E  0851               	movf	led_auto_process@p^(0+384),w
  6570  114F  0086               	movwf	6
  6571  1150  0852               	movf	(led_auto_process@p+1)^(0+384),w
  6572  1151  0087               	movwf	7
  6573  1152  3149               	addfsr 1,9
  6574  1153  23F0               	fcall	PL32	;call to abstracted procedure
  6575  1154  3148               	addfsr 1,8
  6576  1155  319F  272F  3191   	fcall	PL8	;call to abstracted procedure
  6577  1158  319F  270B  3191   	fcall	___wmul
  6578  115B  241E  3191         	fcall	PL126	;call to abstracted procedure
  6579  115D  00BC               	movwf	(led_auto_process@tr^(0+384)+4)
  6580  115E  2418  3191         	fcall	PL120	;call to abstracted procedure
  6581  1160  00BD               	movwf	((led_auto_process@tr+1)^(0+384)+4)
  6582                           
  6583                           ;app_led.c: 526: tr[3] = p->sunset_end_hour * 60u + p->sunset_end_minute;
  6584  1161  0851               	movf	led_auto_process@p^(0+384),w
  6585  1162  0086               	movwf	6
  6586  1163  0852               	movf	(led_auto_process@p+1)^(0+384),w
  6587  1164  0087               	movwf	7
  6588  1165  314B               	addfsr 1,11
  6589  1166  23F0               	fcall	PL32	;call to abstracted procedure
  6590  1167  314A               	addfsr 1,10
  6591  1168  319F  272F  3191   	fcall	PL8	;call to abstracted procedure
  6592  116B  319F  270B  3191   	fcall	___wmul
  6593  116E  241E  3191         	fcall	PL126	;call to abstracted procedure
  6594  1170  00BE               	movwf	(led_auto_process@tr^(0+384)+6)
  6595  1171  2418  3191         	fcall	PL120	;call to abstracted procedure
  6596  1173  00BF               	movwf	((led_auto_process@tr+1)^(0+384)+6)
  6597                           
  6598                           ;app_led.c: 527: tr[4] = p->turnoff_hour * 60u + p->turnoff_minute;
  6599  1174  0851               	movf	led_auto_process@p^(0+384),w
  6600  1175  0086               	movwf	6
  6601  1176  0852               	movf	(led_auto_process@p+1)^(0+384),w
  6602  1177  0087               	movwf	7
  6603  1178  3152               	addfsr 1,18
  6604  1179  23F0               	fcall	PL32	;call to abstracted procedure
  6605  117A  3151               	addfsr 1,17
  6606  117B  319F  272F  3191   	fcall	PL8	;call to abstracted procedure
  6607  117E  319F  270B  3191   	fcall	___wmul
  6608  1181  241E  3191         	fcall	PL126	;call to abstracted procedure
  6609  1183  00C0               	movwf	(led_auto_process@tr^(0+384)+8)
  6610  1184  2418  3191         	fcall	PL120	;call to abstracted procedure
  6611  1186  00C1               	movwf	((led_auto_process@tr+1)^(0+384)+8)
  6612                           
  6613                           ;app_led.c: 528: tr[5] = tr[4];
  6614  1187  00C3               	movwf	((led_auto_process@tr+1)^(0+384)+10)
  6615  1188  0840               	movf	(led_auto_process@tr^(0+384)+8),w
  6616  1189  00C2               	movwf	(led_auto_process@tr^(0+384)+10)
  6617                           
  6618                           ;app_led.c: 529: uint8_t val[6][4];
  6619                           ;app_led.c: 530: for(i = 0; i < 4; i++)
  6620  118A  01D3               	clrf	led_auto_process@i^(0+384)
  6621                           
  6622                           ;app_led.c: 531: {
  6623                           ;app_led.c: 532: if(p->turnoff_enabled)
  6624  118B  2424  3191         	fcall	PL150	;call to abstracted procedure
  6625  118D                     L9:	
  6626  118D  1903               	btfsc	3,2
  6627  118E  2996               	goto	l7902
  6628                           
  6629                           ;app_led.c: 533: {
  6630                           ;app_led.c: 534: val[0][i] = 0;
  6631  118F  0853               	movf	led_auto_process@i^(0+384),w
  6632  1190  3EA0               	addlw	(low (led_auto_process@val| (0+256)))& (0+255)
  6633  1191  0086               	movwf	6
  6634  1192  3001               	movlw	1	; select bank3/4
  6635  1193  0087               	movwf	7
  6636  1194  0181               	clrf	1
  6637                           
  6638                           ;app_led.c: 535: }
  6639  1195  299C               	goto	l702
  6640  1196                     l7902:	
  6641                           
  6642                           ;app_led.c: 536: else
  6643                           ;app_led.c: 537: {
  6644                           ;app_led.c: 538: val[0][i] = p->night_bright[i];
  6645  1196  0853               	movf	led_auto_process@i^(0+384),w
  6646  1197  23B9  3191         	fcall	PL2	;call to abstracted procedure
  6647  1199  310C               	addfsr 0,12
  6648  119A  0800               	movf	0,w
  6649  119B  0081               	movwf	1
  6650  119C                     l702:	
  6651                           
  6652                           ;app_led.c: 539: }
  6653                           ;app_led.c: 540: val[1][i] = p->day_bright[i];
  6654  119C  0023               	movlb	3	; select bank3
  6655  119D  0853               	movf	led_auto_process@i^(0+384),w
  6656  119E  3E04               	addlw	4
  6657  119F  23B9  3191         	fcall	PL2	;call to abstracted procedure
  6658                           
  6659                           ;app_led.c: 541: val[2][i] = p->day_bright[i];
  6660  11A1  242B  3191         	fcall	PL158	;call to abstracted procedure
  6661  11A3  3E08               	addlw	8
  6662  11A4  23B9  3191         	fcall	PL2	;call to abstracted procedure
  6663                           
  6664                           ;app_led.c: 542: val[3][i] = p->night_bright[i];
  6665  11A6  242B  3191         	fcall	PL158	;call to abstracted procedure
  6666  11A8  3E0C               	addlw	12
  6667  11A9  23B9  3191         	fcall	PL2	;call to abstracted procedure
  6668                           
  6669                           ;app_led.c: 543: val[4][i] = p->night_bright[i];
  6670  11AB  2431  3191         	fcall	PL174	;call to abstracted procedure
  6671  11AD  3E10               	addlw	16
  6672  11AE  23B9  3191         	fcall	PL2	;call to abstracted procedure
  6673                           
  6674                           ;app_led.c: 544: val[5][i] = 0;
  6675  11B0  2431  3191         	fcall	PL174	;call to abstracted procedure
  6676  11B2  3E14               	addlw	20
  6677  11B3  3EA0               	addlw	(low (led_auto_process@val| (0+256)))& (0+255)
  6678  11B4  0086               	movwf	6
  6679  11B5  3001               	movlw	1	; select bank3/4
  6680  11B6  0087               	movwf	7
  6681  11B7  3004               	movlw	4
  6682  11B8  0181               	clrf	1
  6683  11B9  0AD3               	incf	led_auto_process@i^(0+384),f
  6684  11BA  0253               	subwf	led_auto_process@i^(0+384),w
  6685                           
  6686                           ;app_led.c: 545: }
  6687                           ;app_led.c: 546: if(p->turnoff_enabled)
  6688  11BB  2424  3191         	fcall	PL150	;call to abstracted procedure
  6689  11BD  1C03               	skipc
  6690  11BE  298D               	goto	L9
  6691  11BF  1903               	btfsc	3,2
  6692  11C0  29C3               	goto	l7914
  6693                           
  6694                           ;app_led.c: 547: {
  6695                           ;app_led.c: 548: count = 6;
  6696  11C1  3006               	movlw	6
  6697  11C2  00CB               	movwf	led_auto_process@count^(0+384)
  6698  11C3                     l7914:	
  6699                           
  6700                           ;app_led.c: 549: }
  6701                           ;app_led.c: 550: for(i = 0; i < count; i++)
  6702  11C3  01D3               	clrf	led_auto_process@i^(0+384)
  6703  11C4                     l7962:	
  6704  11C4  084B               	movf	led_auto_process@count^(0+384),w
  6705  11C5  0253               	subwf	led_auto_process@i^(0+384),w
  6706  11C6  1803               	btfsc	3,0
  6707  11C7  0008               	return
  6708                           
  6709                           ;app_led.c: 551: {
  6710                           ;app_led.c: 552: j = (i + 1) % count;
  6711  11C8  0853               	movf	led_auto_process@i^(0+384),w
  6712  11C9  0020               	movlb	0	; select bank0
  6713  11CA  00B6               	movwf	___awmod@dividend
  6714  11CB  01B7               	clrf	___awmod@dividend+1
  6715  11CC  0AB6               	incf	___awmod@dividend,f
  6716  11CD  1903               	skipnz
  6717  11CE  0AB7               	incf	___awmod@dividend+1,f
  6718  11CF  0023               	movlb	3	; select bank3
  6719  11D0  084B               	movf	led_auto_process@count^(0+384),w
  6720  11D1  0020               	movlb	0	; select bank0
  6721  11D2  00B4               	movwf	___awmod@divisor
  6722  11D3  01B5               	clrf	___awmod@divisor+1
  6723  11D4  22B0  3191         	fcall	___awmod
  6724  11D6  0834               	movf	?___awmod,w
  6725  11D7  0023               	movlb	3	; select bank3
  6726  11D8  00C6               	movwf	led_auto_process@j^(0+384)
  6727                           
  6728                           ;app_led.c: 553: st = tr[i];
  6729  11D9  3553               	lslf	led_auto_process@i^(0+384),w
  6730  11DA  3EB8               	addlw	(low (led_auto_process@tr| (0+256)))& (0+255)
  6731  11DB  0086               	movwf	6
  6732  11DC  3001               	movlw	1	; select bank3/4
  6733  11DD  0087               	movwf	7
  6734  11DE  3F40               	moviw [0]fsr1
  6735  11DF  00CF               	movwf	led_auto_process@st^(0+384)
  6736  11E0  3F41               	moviw [1]fsr1
  6737  11E1  00D0               	movwf	(led_auto_process@st+1)^(0+384)
  6738                           
  6739                           ;app_led.c: 554: et = tr[j];
  6740  11E2  3546               	lslf	led_auto_process@j^(0+384),w
  6741  11E3  3EB8               	addlw	(low (led_auto_process@tr| (0+256)))& (0+255)
  6742  11E4  0086               	movwf	6
  6743  11E5  3F40               	moviw [0]fsr1
  6744  11E6  00CC               	movwf	led_auto_process@et^(0+384)
  6745  11E7  3F41               	moviw [1]fsr1
  6746  11E8  00CD               	movwf	(led_auto_process@et+1)^(0+384)
  6747                           
  6748                           ;app_led.c: 555: if(et >= st)
  6749  11E9  0850               	movf	(led_auto_process@st+1)^(0+384),w
  6750  11EA  024D               	subwf	(led_auto_process@et+1)^(0+384),w
  6751  11EB  1D03               	skipz
  6752  11EC  29EF               	goto	u7185
  6753  11ED  084F               	movf	led_auto_process@st^(0+384),w
  6754  11EE  024C               	subwf	led_auto_process@et^(0+384),w
  6755  11EF                     u7185:	
  6756                           
  6757                           ;app_led.c: 556: {
  6758                           ;app_led.c: 557: if(ct >= st && ct < et)
  6759  11EF  0850               	movf	(led_auto_process@st+1)^(0+384),w
  6760  11F0  1C03               	skipc
  6761  11F1  2A11               	goto	L10
  6762  11F2  0021               	movlb	1	; select bank1
  6763  11F3  0235               	subwf	(led_auto_process@ct+1)^(0+128),w
  6764  11F4  1D03               	skipz
  6765  11F5  29F8               	goto	u7195
  6766  11F6  2437  3191         	fcall	PL178	;call to abstracted procedure
  6767  11F8                     u7195:	
  6768  11F8  1C03               	skipc
  6769  11F9  2AAD               	goto	l7960
  6770  11FA  0023               	movlb	3	; select bank3
  6771  11FB  084D               	movf	(led_auto_process@et+1)^(0+384),w
  6772  11FC  0021               	movlb	1	; select bank1
  6773  11FD  0235               	subwf	(led_auto_process@ct+1)^(0+128),w
  6774  11FE  1D03               	skipz
  6775  11FF  2A02               	goto	u7205
  6776  1200  243C  3191         	fcall	PL184	;call to abstracted procedure
  6777  1202                     u7205:	
  6778  1202  1803               	skipnc
  6779  1203  2AAD               	goto	l7960
  6780                           
  6781                           ;app_led.c: 558: {
  6782                           ;app_led.c: 559: duration = et - st;
  6783  1204  2405  3191         	fcall	PL112	;call to abstracted procedure
  6784  1206                     l7930:	
  6785                           
  6786                           ;app_led.c: 560: dt = (ct - st) * 60ul + sec;
  6787  1206  0023               	movlb	3	; select bank3
  6788  1207  084F               	movf	led_auto_process@st^(0+384),w
  6789  1208  0021               	movlb	1	; select bank1
  6790  1209  0234               	subwf	led_auto_process@ct^(0+128),w
  6791  120A  0020               	movlb	0	; select bank0
  6792  120B  00B4               	movwf	___lmul@multiplier
  6793  120C  0023               	movlb	3	; select bank3
  6794  120D  0850               	movf	(led_auto_process@st+1)^(0+384),w
  6795  120E  0021               	movlb	1	; select bank1
  6796  120F  3B35               	subwfb	(led_auto_process@ct+1)^(0+128),w
  6797  1210  2A43               	goto	L8
  6798  1211                     L10:	
  6799                           ;app_led.c: 567: else
  6800                           ;app_led.c: 568: {
  6801                           ;app_led.c: 569: if(ct >= st || ct < et)
  6802                           
  6803                           ;app_led.c: 561: }
  6804                           
  6805  1211  0021               	movlb	1	; select bank1
  6806  1212  0235               	subwf	(led_auto_process@ct+1)^(0+128),w
  6807  1213  1D03               	skipz
  6808  1214  2A17               	goto	u7215
  6809  1215  2437  3191         	fcall	PL178	;call to abstracted procedure
  6810  1217                     u7215:	
  6811  1217  1803               	skipnc
  6812  1218  2A23               	goto	l7938
  6813  1219  0023               	movlb	3	; select bank3
  6814  121A  084D               	movf	(led_auto_process@et+1)^(0+384),w
  6815  121B  0021               	movlb	1	; select bank1
  6816  121C  0235               	subwf	(led_auto_process@ct+1)^(0+128),w
  6817  121D  1D03               	skipz
  6818  121E  2A21               	goto	u7225
  6819  121F  243C  3191         	fcall	PL184	;call to abstracted procedure
  6820  1221                     u7225:	
  6821  1221  1803               	skipnc
  6822  1222  2AAD               	goto	l7960
  6823  1223                     l7938:	
  6824                           
  6825                           ;app_led.c: 570: {
  6826                           ;app_led.c: 571: duration = 1440u - st + et;
  6827  1223  2405  3191         	fcall	PL112	;call to abstracted procedure
  6828  1225  30A0               	movlw	160
  6829  1226  07C4               	addwf	led_auto_process@duration^(0+384),f
  6830  1227  3005               	movlw	5
  6831  1228  3DC5               	addwfc	(led_auto_process@duration+1)^(0+384),f
  6832                           
  6833                           ;app_led.c: 572: if(ct >= st)
  6834  1229  0850               	movf	(led_auto_process@st+1)^(0+384),w
  6835  122A  0021               	movlb	1	; select bank1
  6836  122B  0235               	subwf	(led_auto_process@ct+1)^(0+128),w
  6837  122C  1D03               	skipz
  6838  122D  2A30               	goto	u7235
  6839  122E  2437  3191         	fcall	PL178	;call to abstracted procedure
  6840  1230                     u7235:	
  6841  1230  1803               	btfsc	3,0
  6842  1231  2A06               	goto	l7930
  6843                           
  6844                           ;app_led.c: 576: else
  6845                           ;app_led.c: 577: {
  6846                           ;app_led.c: 578: dt = (1440u - st + ct) * 60ul + sec;
  6847  1232  0023               	movlb	3	; select bank3
  6848  1233  084F               	movf	led_auto_process@st^(0+384),w
  6849  1234  0021               	movlb	1	; select bank1
  6850  1235  0234               	subwf	led_auto_process@ct^(0+128),w
  6851  1236  00B7               	movwf	??_led_auto_process^(0+128)
  6852  1237  0023               	movlb	3	; select bank3
  6853  1238  0850               	movf	(led_auto_process@st+1)^(0+384),w
  6854  1239  0021               	movlb	1	; select bank1
  6855  123A  3B35               	subwfb	(led_auto_process@ct+1)^(0+128),w
  6856  123B  00B8               	movwf	(??_led_auto_process+1)^(0+128)
  6857  123C  0837               	movf	??_led_auto_process^(0+128),w
  6858  123D  3EA0               	addlw	160
  6859  123E  0020               	movlb	0	; select bank0
  6860  123F  00B4               	movwf	___lmul@multiplier
  6861  1240  3005               	movlw	5
  6862  1241  0021               	movlb	1	; select bank1
  6863  1242  3D38               	addwfc	(??_led_auto_process+1)^(0+128),w
  6864  1243                     L8:	
  6865  1243  0020               	movlb	0	; select bank0
  6866  1244  00B5               	movwf	___lmul@multiplier+1
  6867  1245  303C               	movlw	60
  6868  1246  01B6               	clrf	___lmul@multiplier+2
  6869  1247  01B7               	clrf	___lmul@multiplier+3
  6870  1248  00B8               	movwf	___lmul@multiplicand
  6871  1249  01B9               	clrf	___lmul@multiplicand+1
  6872  124A  01BA               	clrf	___lmul@multiplicand+2
  6873  124B  01BB               	clrf	___lmul@multiplicand+3
  6874  124C  22E9  3191         	fcall	___lmul
  6875  124E  0837               	movf	?___lmul+3,w
  6876  124F  0023               	movlb	3	; select bank3
  6877  1250  00CA               	movwf	(led_auto_process@dt+3)^(0+384)
  6878  1251  0020               	movlb	0	; select bank0
  6879  1252  0836               	movf	?___lmul+2,w
  6880  1253  0023               	movlb	3	; select bank3
  6881  1254  00C9               	movwf	(led_auto_process@dt+2)^(0+384)
  6882  1255  0020               	movlb	0	; select bank0
  6883  1256  0835               	movf	?___lmul+1,w
  6884  1257  0023               	movlb	3	; select bank3
  6885  1258  00C8               	movwf	(led_auto_process@dt+1)^(0+384)
  6886  1259  0020               	movlb	0	; select bank0
  6887  125A  0834               	movf	?___lmul,w
  6888  125B  0023               	movlb	3	; select bank3
  6889  125C  00C7               	movwf	led_auto_process@dt^(0+384)
  6890  125D  0021               	movlb	1	; select bank1
  6891  125E  0836               	movf	led_auto_process@sec^(0+128),w
  6892  125F  0023               	movlb	3	; select bank3
  6893  1260  07C7               	addwf	led_auto_process@dt^(0+384),f
  6894  1261  3001               	movlw	1
  6895  1262  1803               	skipnc
  6896  1263  07C8               	addwf	(led_auto_process@dt+1)^(0+384),f
  6897  1264  1803               	skipnc
  6898  1265  07C9               	addwf	(led_auto_process@dt+2)^(0+384),f
  6899  1266  1803               	skipnc
  6900  1267  07CA               	addwf	(led_auto_process@dt+3)^(0+384),f
  6901                           
  6902                           ;app_led.c: 584: }
  6903                           ;app_led.c: 585: }
  6904                           ;app_led.c: 586: for(k = 0; k < 4; k++)
  6905  1268  01CE               	clrf	led_auto_process@k^(0+384)
  6906  1269                     l7954:	
  6907                           
  6908                           ;app_led.c: 587: {
  6909                           ;app_led.c: 588: target_bright[k] = led_calc_bright(val[i][k], val[j][k], duration, dt )
      +                          ;
  6910  1269  0846               	movf	led_auto_process@j^(0+384),w
  6911  126A  0021               	movlb	1	; select bank1
  6912  126B  00B7               	movwf	??_led_auto_process^(0+128)
  6913  126C  30A0               	movlw	(low (led_auto_process@val| (0+256)))& (0+255)
  6914  126D  35B7               	lslf	??_led_auto_process^(0+128),f
  6915  126E  35B7               	lslf	??_led_auto_process^(0+128),f
  6916  126F  0737               	addwf	??_led_auto_process^(0+128),w
  6917  1270  00B8               	movwf	(??_led_auto_process+1)^(0+128)
  6918  1271  0023               	movlb	3	; select bank3
  6919  1272  084E               	movf	led_auto_process@k^(0+384),w
  6920  1273  0021               	movlb	1	; select bank1
  6921  1274  0738               	addwf	(??_led_auto_process+1)^(0+128),w
  6922  1275  00B9               	movwf	(??_led_auto_process+2)^(0+128)
  6923  1276  0086               	movwf	6
  6924  1277  3001               	movlw	1	; select bank3/4
  6925  1278  0087               	movwf	7
  6926  1279  0801               	movf	1,w
  6927  127A  00A5               	movwf	led_calc_bright@ebrt^(0+128)
  6928  127B  0023               	movlb	3	; select bank3
  6929  127C  0845               	movf	(led_auto_process@duration+1)^(0+384),w
  6930  127D  0021               	movlb	1	; select bank1
  6931  127E  00A7               	movwf	(led_calc_bright@duration+1)^(0+128)
  6932  127F  0023               	movlb	3	; select bank3
  6933  1280  0844               	movf	led_auto_process@duration^(0+384),w
  6934  1281  0021               	movlb	1	; select bank1
  6935  1282  00A6               	movwf	led_calc_bright@duration^(0+128)
  6936  1283  0023               	movlb	3	; select bank3
  6937  1284  084A               	movf	(led_auto_process@dt+3)^(0+384),w
  6938  1285  0021               	movlb	1	; select bank1
  6939  1286  00AB               	movwf	(led_calc_bright@dt+3)^(0+128)
  6940  1287  0023               	movlb	3	; select bank3
  6941  1288  0849               	movf	(led_auto_process@dt+2)^(0+384),w
  6942  1289  0021               	movlb	1	; select bank1
  6943  128A  00AA               	movwf	(led_calc_bright@dt+2)^(0+128)
  6944  128B  0023               	movlb	3	; select bank3
  6945  128C  0848               	movf	(led_auto_process@dt+1)^(0+384),w
  6946  128D  0021               	movlb	1	; select bank1
  6947  128E  00A9               	movwf	(led_calc_bright@dt+1)^(0+128)
  6948  128F  0023               	movlb	3	; select bank3
  6949  1290  0847               	movf	led_auto_process@dt^(0+384),w
  6950  1291  0021               	movlb	1	; select bank1
  6951  1292  00A8               	movwf	led_calc_bright@dt^(0+128)
  6952  1293  0023               	movlb	3	; select bank3
  6953  1294  0853               	movf	led_auto_process@i^(0+384),w
  6954  1295  0021               	movlb	1	; select bank1
  6955  1296  00BA               	movwf	(??_led_auto_process+3)^(0+128)
  6956  1297  30A0               	movlw	(low (led_auto_process@val| (0+256)))& (0+255)
  6957  1298  35BA               	lslf	(??_led_auto_process+3)^(0+128),f
  6958  1299  35BA               	lslf	(??_led_auto_process+3)^(0+128),f
  6959  129A  073A               	addwf	(??_led_auto_process+3)^(0+128),w
  6960  129B  00BB               	movwf	(??_led_auto_process+4)^(0+128)
  6961  129C  0023               	movlb	3	; select bank3
  6962  129D  084E               	movf	led_auto_process@k^(0+384),w
  6963  129E  0021               	movlb	1	; select bank1
  6964  129F  073B               	addwf	(??_led_auto_process+4)^(0+128),w
  6965  12A0  00BC               	movwf	(??_led_auto_process+5)^(0+128)
  6966  12A1  0086               	movwf	6
  6967  12A2  0801               	movf	1,w
  6968  12A3  230E  3191         	fcall	_led_calc_bright
  6969  12A5  0023               	movlb	3	; select bank3
  6970  12A6  354E               	lslf	led_auto_process@k^(0+384),w
  6971  12A7  23FA  3191         	fcall	PL84	;call to abstracted procedure
  6972  12A9  0ACE               	incf	led_auto_process@k^(0+384),f
  6973  12AA  024E               	subwf	led_auto_process@k^(0+384),w
  6974  12AB  1C03               	skipc
  6975  12AC  2A69               	goto	l7954
  6976  12AD                     l7960:	
  6977  12AD  0023               	movlb	3	; select bank3
  6978  12AE  0AD3               	incf	led_auto_process@i^(0+384),f
  6979  12AF  29C4               	goto	l7962
  6980  12B0                     __end_of_led_auto_process:	
  6981  12B0                     __ptext21:	
  6982 ;; *************** function ___awmod *****************
  6983 ;; Defined at:
  6984 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\awmod.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  divisor         2   20[BANK0 ] int 
  6987 ;;  dividend        2   22[BANK0 ] int 
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;  sign            1   25[BANK0 ] unsigned char 
  6990 ;;  counter         1   24[BANK0 ] unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  2   20[BANK0 ] int 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0
  6995 ;; Tracked objects:
  6996 ;;		On entry : 1F/0
  6997 ;;		On exit  : 1F/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7003 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7004 ;;Total ram usage:        6 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; Hardware stack levels required when called:    6
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_led_auto_process
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           
  7015                           ;psect for function ___awmod
  7016  12B0                     ___awmod:	
  7017                           
  7018                           ;incstack = 0
  7019                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7020  12B0  01B9               	clrf	___awmod@sign
  7021  12B1  1FB7               	btfss	___awmod@dividend+1,7
  7022  12B2  2ABA               	goto	l7546
  7023  12B3  09B6               	comf	___awmod@dividend,f
  7024  12B4  09B7               	comf	___awmod@dividend+1,f
  7025  12B5  0AB6               	incf	___awmod@dividend,f
  7026  12B6  1903               	skipnz
  7027  12B7  0AB7               	incf	___awmod@dividend+1,f
  7028  12B8  01B9               	clrf	___awmod@sign
  7029  12B9  0AB9               	incf	___awmod@sign,f
  7030  12BA                     l7546:	
  7031  12BA  1FB5               	btfss	___awmod@divisor+1,7
  7032  12BB  2AC1               	goto	l7550
  7033  12BC  09B4               	comf	___awmod@divisor,f
  7034  12BD  09B5               	comf	___awmod@divisor+1,f
  7035  12BE  0AB4               	incf	___awmod@divisor,f
  7036  12BF  1903               	skipnz
  7037  12C0  0AB5               	incf	___awmod@divisor+1,f
  7038  12C1                     l7550:	
  7039  12C1  0834               	movf	___awmod@divisor,w
  7040  12C2  0435               	iorwf	___awmod@divisor+1,w
  7041  12C3  1903               	btfsc	3,2
  7042  12C4  2ADC               	goto	l7566
  7043  12C5  01B8               	clrf	___awmod@counter
  7044  12C6                     L12:	
  7045  12C6  0AB8               	incf	___awmod@counter,f
  7046  12C7  1BB5               	btfsc	___awmod@divisor+1,7
  7047  12C8  2ACC               	goto	l7558
  7048  12C9  35B4               	lslf	___awmod@divisor,f
  7049  12CA  0DB5               	rlf	___awmod@divisor+1,f
  7050  12CB  2AC6               	goto	L12
  7051  12CC                     l7558:	
  7052  12CC  0835               	movf	___awmod@divisor+1,w
  7053  12CD  0237               	subwf	___awmod@dividend+1,w
  7054  12CE  1D03               	skipz
  7055  12CF  2AD2               	goto	u6425
  7056  12D0  0834               	movf	___awmod@divisor,w
  7057  12D1  0236               	subwf	___awmod@dividend,w
  7058  12D2                     u6425:	
  7059  12D2  1C03               	skipc
  7060  12D3  2AD8               	goto	l7562
  7061  12D4  0834               	movf	___awmod@divisor,w
  7062  12D5  02B6               	subwf	___awmod@dividend,f
  7063  12D6  0835               	movf	___awmod@divisor+1,w
  7064  12D7  3BB7               	subwfb	___awmod@dividend+1,f
  7065  12D8                     l7562:	
  7066  12D8  36B5               	lsrf	___awmod@divisor+1,f
  7067  12D9  0CB4               	rrf	___awmod@divisor,f
  7068  12DA  0BB8               	decfsz	___awmod@counter,f
  7069  12DB  2ACC               	goto	l7558
  7070  12DC                     l7566:	
  7071  12DC  0839               	movf	___awmod@sign,w
  7072  12DD  1903               	btfsc	3,2
  7073  12DE  2AE4               	goto	l7570
  7074  12DF  09B6               	comf	___awmod@dividend,f
  7075  12E0  09B7               	comf	___awmod@dividend+1,f
  7076  12E1  0AB6               	incf	___awmod@dividend,f
  7077  12E2  1903               	skipnz
  7078  12E3  0AB7               	incf	___awmod@dividend+1,f
  7079  12E4                     l7570:	
  7080  12E4  0837               	movf	___awmod@dividend+1,w
  7081  12E5  00B5               	movwf	?___awmod+1
  7082  12E6  0836               	movf	___awmod@dividend,w
  7083  12E7  00B4               	movwf	?___awmod
  7084  12E8  0008               	return
  7085  12E9                     __end_of___awmod:	
  7086  12E9                     __ptext19:	
  7087 ;; *************** function ___lmul *****************
  7088 ;; Defined at:
  7089 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul32.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;  multiplier      4   20[BANK0 ] unsigned long 
  7092 ;;  multiplicand    4   24[BANK0 ] unsigned long 
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;  product         4   28[BANK0 ] unsigned long 
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  4   20[BANK0 ] unsigned long 
  7097 ;; Registers used:
  7098 ;;		wreg, status,2, status,0
  7099 ;; Tracked objects:
  7100 ;;		On entry : 1F/0
  7101 ;;		On exit  : 1F/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7104 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7107 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;Total ram usage:       12 bytes
  7109 ;; Hardware stack levels used:    1
  7110 ;; Hardware stack levels required when called:    6
  7111 ;; This function calls:
  7112 ;;		Nothing
  7113 ;; This function is called by:
  7114 ;;		_led_calc_bright
  7115 ;;		_led_auto_process
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           
  7120                           ;psect for function ___lmul
  7121  12E9                     ___lmul:	
  7122                           
  7123                           ;incstack = 0
  7124                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7125  12E9  01BC               	clrf	___lmul@product
  7126  12EA  01BD               	clrf	___lmul@product+1
  7127  12EB  01BE               	clrf	___lmul@product+2
  7128  12EC  01BF               	clrf	___lmul@product+3
  7129  12ED                     l1373:	
  7130  12ED  1C34               	btfss	___lmul@multiplier,0
  7131  12EE  2AF7               	goto	l7390
  7132  12EF  0838               	movf	___lmul@multiplicand,w
  7133  12F0  07BC               	addwf	___lmul@product,f
  7134  12F1  0839               	movf	___lmul@multiplicand+1,w
  7135  12F2  3DBD               	addwfc	___lmul@product+1,f
  7136  12F3  083A               	movf	___lmul@multiplicand+2,w
  7137  12F4  3DBE               	addwfc	___lmul@product+2,f
  7138  12F5  083B               	movf	___lmul@multiplicand+3,w
  7139  12F6  3DBF               	addwfc	___lmul@product+3,f
  7140  12F7                     l7390:	
  7141  12F7  35B8               	lslf	___lmul@multiplicand,f
  7142  12F8  0DB9               	rlf	___lmul@multiplicand+1,f
  7143  12F9  0DBA               	rlf	___lmul@multiplicand+2,f
  7144  12FA  0DBB               	rlf	___lmul@multiplicand+3,f
  7145  12FB  36B7               	lsrf	___lmul@multiplier+3,f
  7146  12FC  0CB6               	rrf	___lmul@multiplier+2,f
  7147  12FD  0CB5               	rrf	___lmul@multiplier+1,f
  7148  12FE  0CB4               	rrf	___lmul@multiplier,f
  7149  12FF  0837               	movf	___lmul@multiplier+3,w
  7150  1300  0436               	iorwf	___lmul@multiplier+2,w
  7151  1301  0435               	iorwf	___lmul@multiplier+1,w
  7152  1302  0434               	iorwf	___lmul@multiplier,w
  7153  1303  1D03               	skipz
  7154  1304  2AED               	goto	l1373
  7155  1305  083F               	movf	___lmul@product+3,w
  7156  1306  00B7               	movwf	?___lmul+3
  7157  1307  083E               	movf	___lmul@product+2,w
  7158  1308  00B6               	movwf	?___lmul+2
  7159  1309  083D               	movf	___lmul@product+1,w
  7160  130A  00B5               	movwf	?___lmul+1
  7161  130B  083C               	movf	___lmul@product,w
  7162  130C  00B4               	movwf	?___lmul
  7163  130D  0008               	return
  7164  130E                     __end_of___lmul:	
  7165  130E                     __ptext18:	
  7166 ;; *************** function _led_calc_bright *****************
  7167 ;; Defined at:
  7168 ;;		line 458 in file "src/app_led.c"
  7169 ;; Parameters:    Size  Location     Type
  7170 ;;  sbrt            1    wreg     unsigned char 
  7171 ;;  ebrt            1    5[BANK1 ] unsigned char 
  7172 ;;  duration        2    6[BANK1 ] unsigned int 
  7173 ;;  dt              4    8[BANK1 ] unsigned long 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;  sbrt            1   19[BANK1 ] unsigned char 
  7176 ;;  period          2   16[BANK1 ] unsigned int 
  7177 ;;  vs              2   14[BANK1 ] unsigned int 
  7178 ;;  result          2   12[BANK1 ] unsigned int 
  7179 ;;  dbrt            1   18[BANK1 ] unsigned char 
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  2    5[BANK1 ] unsigned int 
  7182 ;; Registers used:
  7183 ;;		wreg, status,2, status,0, pclath, cstack
  7184 ;; Tracked objects:
  7185 ;;		On entry : 1F/1
  7186 ;;		On exit  : 1F/1
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7189 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  7190 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7192 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  7193 ;;Total ram usage:       15 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:    7
  7196 ;; This function calls:
  7197 ;;		___lldiv
  7198 ;;		___lmul
  7199 ;;		___wmul
  7200 ;; This function is called by:
  7201 ;;		_led_auto_process
  7202 ;;		_led_pro_process
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           
  7207                           ;psect for function _led_calc_bright
  7208  130E                     _led_calc_bright:	
  7209                           
  7210                           ;incstack = 0
  7211                           ; Regs used in _led_calc_bright: [wreg+status,2+status,0+pclath+cstack]
  7212                           ;led_calc_bright@sbrt stored from wreg
  7213  130E  00B3               	movwf	led_calc_bright@sbrt^(0+128)
  7214                           
  7215                           ;app_led.c: 460: uint8_t dbrt;
  7216                           ;app_led.c: 461: uint16_t result;
  7217                           ;app_led.c: 462: uint16_t vs = sbrt*10u;
  7218  130F  0020               	movlb	0	; select bank0
  7219  1310  00B4               	movwf	___wmul@multiplier
  7220  1311  300A               	movlw	10
  7221  1312  01B5               	clrf	___wmul@multiplier+1
  7222  1313  00B6               	movwf	___wmul@multiplicand
  7223  1314  01B7               	clrf	___wmul@multiplicand+1
  7224  1315  319F  270B  3191   	fcall	___wmul
  7225  1318  0835               	movf	?___wmul+1,w
  7226  1319  0021               	movlb	1	; select bank1
  7227  131A  00AF               	movwf	(led_calc_bright@vs+1)^(0+128)
  7228  131B  0020               	movlb	0	; select bank0
  7229  131C  0834               	movf	?___wmul,w
  7230  131D  0021               	movlb	1	; select bank1
  7231  131E  00AE               	movwf	led_calc_bright@vs^(0+128)
  7232                           
  7233                           ;app_led.c: 463: uint16_t period = duration*6u;
  7234  131F  0827               	movf	(led_calc_bright@duration+1)^(0+128),w
  7235  1320  0020               	movlb	0	; select bank0
  7236  1321  00B5               	movwf	___wmul@multiplier+1
  7237  1322  0021               	movlb	1	; select bank1
  7238  1323  0826               	movf	led_calc_bright@duration^(0+128),w
  7239  1324  0020               	movlb	0	; select bank0
  7240  1325  00B4               	movwf	___wmul@multiplier
  7241  1326  3006               	movlw	6
  7242  1327  00B6               	movwf	___wmul@multiplicand
  7243  1328  01B7               	clrf	___wmul@multiplicand+1
  7244  1329  319F  270B  3191   	fcall	___wmul
  7245  132C  0835               	movf	?___wmul+1,w
  7246  132D  0021               	movlb	1	; select bank1
  7247  132E  00B1               	movwf	(led_calc_bright@period+1)^(0+128)
  7248  132F  0020               	movlb	0	; select bank0
  7249  1330  0834               	movf	?___wmul,w
  7250  1331  0021               	movlb	1	; select bank1
  7251  1332  00B0               	movwf	led_calc_bright@period^(0+128)
  7252                           
  7253                           ;app_led.c: 464: if(sbrt <= ebrt)
  7254  1333  0833               	movf	led_calc_bright@sbrt^(0+128),w
  7255  1334  0225               	subwf	led_calc_bright@ebrt^(0+128),w
  7256  1335  1C03               	skipc
  7257  1336  2B4E               	goto	l7528
  7258                           
  7259                           ;app_led.c: 465: {
  7260                           ;app_led.c: 466: dbrt = ebrt - sbrt;
  7261  1337  0833               	movf	led_calc_bright@sbrt^(0+128),w
  7262  1338  0225               	subwf	led_calc_bright@ebrt^(0+128),w
  7263  1339  00B2               	movwf	led_calc_bright@dbrt^(0+128)
  7264                           
  7265                           ;app_led.c: 467: result = vs + dbrt*dt/period;
  7266  133A  23CF  3191         	fcall	PL12	;call to abstracted procedure
  7267  133C  22E9  3191         	fcall	___lmul
  7268  133E  240F  3191         	fcall	PL118	;call to abstracted procedure
  7269  1340  2368  3191         	fcall	___lldiv
  7270  1342  0841               	movf	?___lldiv+1,w
  7271  1343  0021               	movlb	1	; select bank1
  7272  1344  00AD               	movwf	(led_calc_bright@result+1)^(0+128)
  7273  1345  0020               	movlb	0	; select bank0
  7274  1346  0840               	movf	?___lldiv,w
  7275  1347  0021               	movlb	1	; select bank1
  7276  1348  00AC               	movwf	led_calc_bright@result^(0+128)
  7277  1349  082E               	movf	led_calc_bright@vs^(0+128),w
  7278  134A  07AC               	addwf	led_calc_bright@result^(0+128),f
  7279  134B  082F               	movf	(led_calc_bright@vs+1)^(0+128),w
  7280  134C  3DAD               	addwfc	(led_calc_bright@result+1)^(0+128),f
  7281                           
  7282                           ;app_led.c: 468: }
  7283  134D  2B63               	goto	l7534
  7284  134E                     l7528:	
  7285                           
  7286                           ;app_led.c: 469: else
  7287                           ;app_led.c: 470: {
  7288                           ;app_led.c: 471: dbrt = sbrt - ebrt;
  7289  134E  0825               	movf	led_calc_bright@ebrt^(0+128),w
  7290  134F  0233               	subwf	led_calc_bright@sbrt^(0+128),w
  7291  1350  00B2               	movwf	led_calc_bright@dbrt^(0+128)
  7292                           
  7293                           ;app_led.c: 472: result = vs - dbrt*dt/period;
  7294  1351  082F               	movf	(led_calc_bright@vs+1)^(0+128),w
  7295  1352  00AD               	movwf	(led_calc_bright@result+1)^(0+128)
  7296  1353  082E               	movf	led_calc_bright@vs^(0+128),w
  7297  1354  00AC               	movwf	led_calc_bright@result^(0+128)
  7298  1355  23CF  3191         	fcall	PL12	;call to abstracted procedure
  7299  1357  22E9  3191         	fcall	___lmul
  7300  1359  240F  3191         	fcall	PL118	;call to abstracted procedure
  7301  135B  2368               	fcall	___lldiv
  7302  135C  0840               	movf	?___lldiv,w
  7303  135D  0021               	movlb	1	; select bank1
  7304  135E  02AC               	subwf	led_calc_bright@result^(0+128),f
  7305  135F  0020               	movlb	0	; select bank0
  7306  1360  0841               	movf	?___lldiv+1,w
  7307  1361  0021               	movlb	1	; select bank1
  7308  1362  3BAD               	subwfb	(led_calc_bright@result+1)^(0+128),f
  7309  1363                     l7534:	
  7310                           
  7311                           ;app_led.c: 473: }
  7312                           ;app_led.c: 474: return result;
  7313  1363  082D               	movf	(led_calc_bright@result+1)^(0+128),w
  7314  1364  00A6               	movwf	(?_led_calc_bright+1)^(0+128)
  7315  1365  082C               	movf	led_calc_bright@result^(0+128),w
  7316  1366  00A5               	movwf	?_led_calc_bright^(0+128)
  7317  1367  0008               	return
  7318  1368                     __end_of_led_calc_bright:	
  7319  1368                     __ptext20:	
  7320 ;; *************** function ___lldiv *****************
  7321 ;; Defined at:
  7322 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lldiv.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  divisor         4   32[BANK0 ] unsigned long 
  7325 ;;  dividend        4   36[BANK0 ] unsigned long 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  quotient        4    0[BANK1 ] unsigned long 
  7328 ;;  counter         1    4[BANK1 ] unsigned char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  4   32[BANK0 ] unsigned long 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0
  7333 ;; Tracked objects:
  7334 ;;		On entry : 1F/0
  7335 ;;		On exit  : 1F/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7338 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7341 ;;      Totals:         0       8       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;Total ram usage:       13 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    6
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_led_calc_bright
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           
  7353                           ;psect for function ___lldiv
  7354  1368                     ___lldiv:	
  7355                           
  7356                           ;incstack = 0
  7357                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7358  1368  0021               	movlb	1	; select bank1
  7359  1369  01A0               	clrf	___lldiv@quotient^(0+128)
  7360  136A  01A1               	clrf	(___lldiv@quotient+1)^(0+128)
  7361  136B  01A2               	clrf	(___lldiv@quotient+2)^(0+128)
  7362  136C  01A3               	clrf	(___lldiv@quotient+3)^(0+128)
  7363  136D  0020               	movlb	0	; select bank0
  7364  136E  0843               	movf	___lldiv@divisor+3,w
  7365  136F  0442               	iorwf	___lldiv@divisor+2,w
  7366  1370  0441               	iorwf	___lldiv@divisor+1,w
  7367  1371  0440               	iorwf	___lldiv@divisor,w
  7368  1372  1903               	skipnz
  7369  1373  2BA8               	goto	l7420
  7370  1374  0021               	movlb	1	; select bank1
  7371  1375  01A4               	clrf	___lldiv@counter^(0+128)
  7372  1376                     L11:	
  7373  1376  0AA4               	incf	___lldiv@counter^(0+128),f
  7374  1377  0020               	movlb	0	; select bank0
  7375  1378  1BC3               	btfsc	___lldiv@divisor+3,7
  7376  1379  2B80               	goto	l7408
  7377  137A  35C0               	lslf	___lldiv@divisor,f
  7378  137B  0DC1               	rlf	___lldiv@divisor+1,f
  7379  137C  0DC2               	rlf	___lldiv@divisor+2,f
  7380  137D  0DC3               	rlf	___lldiv@divisor+3,f
  7381  137E  0021               	movlb	1	; select bank1
  7382  137F  2B76               	goto	L11
  7383  1380                     l7408:	
  7384  1380  0021               	movlb	1	; select bank1
  7385  1381  35A0               	lslf	___lldiv@quotient^(0+128),f
  7386  1382  0DA1               	rlf	(___lldiv@quotient+1)^(0+128),f
  7387  1383  0DA2               	rlf	(___lldiv@quotient+2)^(0+128),f
  7388  1384  0DA3               	rlf	(___lldiv@quotient+3)^(0+128),f
  7389  1385  0020               	movlb	0	; select bank0
  7390  1386  0843               	movf	___lldiv@divisor+3,w
  7391  1387  0247               	subwf	___lldiv@dividend+3,w
  7392  1388  1D03               	skipz
  7393  1389  2B94               	goto	u6265
  7394  138A  0842               	movf	___lldiv@divisor+2,w
  7395  138B  0246               	subwf	___lldiv@dividend+2,w
  7396  138C  1D03               	skipz
  7397  138D  2B94               	goto	u6265
  7398  138E  0841               	movf	___lldiv@divisor+1,w
  7399  138F  0245               	subwf	___lldiv@dividend+1,w
  7400  1390  1D03               	skipz
  7401  1391  2B94               	goto	u6265
  7402  1392  0840               	movf	___lldiv@divisor,w
  7403  1393  0244               	subwf	___lldiv@dividend,w
  7404  1394                     u6265:	
  7405  1394  1C03               	skipc
  7406  1395  2BA0               	goto	l7416
  7407  1396  0840               	movf	___lldiv@divisor,w
  7408  1397  02C4               	subwf	___lldiv@dividend,f
  7409  1398  0841               	movf	___lldiv@divisor+1,w
  7410  1399  3BC5               	subwfb	___lldiv@dividend+1,f
  7411  139A  0842               	movf	___lldiv@divisor+2,w
  7412  139B  3BC6               	subwfb	___lldiv@dividend+2,f
  7413  139C  0843               	movf	___lldiv@divisor+3,w
  7414  139D  3BC7               	subwfb	___lldiv@dividend+3,f
  7415  139E  0021               	movlb	1	; select bank1
  7416  139F  1420               	bsf	___lldiv@quotient^(0+128),0
  7417  13A0                     l7416:	
  7418  13A0  0020               	movlb	0	; select bank0
  7419  13A1  36C3               	lsrf	___lldiv@divisor+3,f
  7420  13A2  0CC2               	rrf	___lldiv@divisor+2,f
  7421  13A3  0CC1               	rrf	___lldiv@divisor+1,f
  7422  13A4  0CC0               	rrf	___lldiv@divisor,f
  7423  13A5  0021               	movlb	1	; select bank1
  7424  13A6  0BA4               	decfsz	___lldiv@counter^(0+128),f
  7425  13A7  2B80               	goto	l7408
  7426  13A8                     l7420:	
  7427  13A8  0021               	movlb	1	; select bank1
  7428  13A9  0823               	movf	(___lldiv@quotient+3)^(0+128),w
  7429  13AA  0020               	movlb	0	; select bank0
  7430  13AB  00C3               	movwf	?___lldiv+3
  7431  13AC  0021               	movlb	1	; select bank1
  7432  13AD  0822               	movf	(___lldiv@quotient+2)^(0+128),w
  7433  13AE  0020               	movlb	0	; select bank0
  7434  13AF  00C2               	movwf	?___lldiv+2
  7435  13B0  0021               	movlb	1	; select bank1
  7436  13B1  0821               	movf	(___lldiv@quotient+1)^(0+128),w
  7437  13B2  0020               	movlb	0	; select bank0
  7438  13B3  00C1               	movwf	?___lldiv+1
  7439  13B4  0021               	movlb	1	; select bank1
  7440  13B5  0820               	movf	___lldiv@quotient^(0+128),w
  7441  13B6  0020               	movlb	0	; select bank0
  7442  13B7  00C0               	movwf	?___lldiv
  7443  13B8  0008               	return
  7444  13B9                     __end_of___lldiv:	
  7445  13B9                     PL2:	
  7446  13B9  3EA0               	addlw	(low (led_auto_process@val| (0+256)))& (0+255)
  7447  13BA  0086               	movwf	6
  7448  13BB  3001               	movlw	1	; select bank3/4
  7449  13BC  0087               	movwf	7
  7450  13BD  0853               	movf	led_auto_process@i^(0+384),w
  7451  13BE  0021               	movlb	1	; select bank1
  7452  13BF  00B7               	movwf	??_led_auto_process^(0+128)
  7453  13C0  01B8               	clrf	(??_led_auto_process^(0+128)+1)
  7454  13C1  0023               	movlb	3	; select bank3
  7455  13C2  0751               	addwf	led_auto_process@p^(0+384),w
  7456  13C3  0021               	movlb	1	; select bank1
  7457  13C4  00B9               	movwf	(??_led_auto_process+2)^(0+128)
  7458  13C5  0838               	movf	(??_led_auto_process+1)^(0+128),w
  7459  13C6  0023               	movlb	3	; select bank3
  7460  13C7  3D52               	addwfc	(led_auto_process@p+1)^(0+384),w
  7461  13C8  0021               	movlb	1	; select bank1
  7462  13C9  00BA               	movwf	(??_led_auto_process+3)^(0+128)
  7463  13CA  0839               	movf	(??_led_auto_process+2)^(0+128),w
  7464  13CB  0084               	movwf	4
  7465  13CC  083A               	movf	(??_led_auto_process+3)^(0+128),w
  7466  13CD  0085               	movwf	5
  7467  13CE  0008               	return
  7468  13CF                     __end_ofPL2:	
  7469  13CF                     PL12:	
  7470  13CF  0830               	movf	led_calc_bright@period^(0+128),w
  7471  13D0  0020               	movlb	0	; select bank0
  7472  13D1  00C0               	movwf	___lldiv@divisor
  7473  13D2  0021               	movlb	1	; select bank1
  7474  13D3  0831               	movf	(led_calc_bright@period+1)^(0+128),w
  7475  13D4  0020               	movlb	0	; select bank0
  7476  13D5  00C1               	movwf	___lldiv@divisor+1
  7477  13D6  01C2               	clrf	___lldiv@divisor+2
  7478  13D7  01C3               	clrf	___lldiv@divisor+3
  7479  13D8  0021               	movlb	1	; select bank1
  7480  13D9  0832               	movf	led_calc_bright@dbrt^(0+128),w
  7481  13DA  0020               	movlb	0	; select bank0
  7482  13DB  00B4               	movwf	___lmul@multiplier
  7483  13DC  01B5               	clrf	___lmul@multiplier+1
  7484  13DD  01B6               	clrf	___lmul@multiplier+2
  7485  13DE  01B7               	clrf	___lmul@multiplier+3
  7486  13DF  0021               	movlb	1	; select bank1
  7487  13E0  082B               	movf	(led_calc_bright@dt+3)^(0+128),w
  7488  13E1  0020               	movlb	0	; select bank0
  7489  13E2  00BB               	movwf	___lmul@multiplicand+3
  7490  13E3  0021               	movlb	1	; select bank1
  7491  13E4  082A               	movf	(led_calc_bright@dt+2)^(0+128),w
  7492  13E5  0020               	movlb	0	; select bank0
  7493  13E6  00BA               	movwf	___lmul@multiplicand+2
  7494  13E7  0021               	movlb	1	; select bank1
  7495  13E8  0829               	movf	(led_calc_bright@dt+1)^(0+128),w
  7496  13E9  0020               	movlb	0	; select bank0
  7497  13EA  00B9               	movwf	___lmul@multiplicand+1
  7498  13EB  0021               	movlb	1	; select bank1
  7499  13EC  0828               	movf	led_calc_bright@dt^(0+128),w
  7500  13ED  0020               	movlb	0	; select bank0
  7501  13EE  00B8               	movwf	___lmul@multiplicand
  7502  13EF  0008               	return
  7503  13F0                     __end_ofPL12:	
  7504  13F0                     PL32:	
  7505  13F0  0801               	movf	1,w
  7506  13F1  0021               	movlb	1	; select bank1
  7507  13F2  00B7               	movwf	??_led_auto_process^(0+128)
  7508  13F3  01B8               	clrf	(??_led_auto_process^(0+128)+1)
  7509  13F4  0023               	movlb	3	; select bank3
  7510  13F5  0851               	movf	led_auto_process@p^(0+384),w
  7511  13F6  0086               	movwf	6
  7512  13F7  0852               	movf	(led_auto_process@p+1)^(0+384),w
  7513  13F8  0087               	movwf	7
  7514  13F9  0008               	return
  7515  13FA                     __end_ofPL32:	
  7516  13FA                     PL84:	
  7517  13FA  3E4D               	addlw	(low (_target_bright| (0+256)))& (0+255)
  7518  13FB  0086               	movwf	6
  7519  13FC  3001               	movlw	1	; select bank2/3
  7520  13FD  0087               	movwf	7
  7521  13FE  0021               	movlb	1	; select bank1
  7522  13FF  0825               	movf	?_led_calc_bright^(0+128),w
  7523  1400  3FC0               	movwi [0]fsr1
  7524  1401  0826               	movf	(?_led_calc_bright+1)^(0+128),w
  7525  1402  3FC1               	movwi [1]fsr1
  7526  1403  0023               	movlb	3	; select bank3
  7527  1404  3404               	retlw	4
  7528  1405                     __end_ofPL84:	
  7529  1405                     PL112:	
  7530  1405  0023               	movlb	3	; select bank3
  7531  1406  084D               	movf	(led_auto_process@et+1)^(0+384),w
  7532  1407  00C5               	movwf	(led_auto_process@duration+1)^(0+384)
  7533  1408  084C               	movf	led_auto_process@et^(0+384),w
  7534  1409  00C4               	movwf	led_auto_process@duration^(0+384)
  7535  140A  084F               	movf	led_auto_process@st^(0+384),w
  7536  140B  02C4               	subwf	led_auto_process@duration^(0+384),f
  7537  140C  0850               	movf	(led_auto_process@st+1)^(0+384),w
  7538  140D  3BC5               	subwfb	(led_auto_process@duration+1)^(0+384),f
  7539  140E  0008               	return
  7540  140F                     __end_ofPL112:	
  7541  140F                     PL118:	
  7542  140F  0837               	movf	?___lmul+3,w
  7543  1410  00C7               	movwf	___lldiv@dividend+3
  7544  1411  0836               	movf	?___lmul+2,w
  7545  1412  00C6               	movwf	___lldiv@dividend+2
  7546  1413  0835               	movf	?___lmul+1,w
  7547  1414  00C5               	movwf	___lldiv@dividend+1
  7548  1415  0834               	movf	?___lmul,w
  7549  1416  00C4               	movwf	___lldiv@dividend
  7550  1417  0008               	return
  7551  1418                     __end_ofPL118:	
  7552  1418                     PL120:	
  7553  1418  0021               	movlb	1	; select bank1
  7554  1419  0838               	movf	(??_led_auto_process+1)^(0+128),w
  7555  141A  0020               	movlb	0	; select bank0
  7556  141B  3D35               	addwfc	?___wmul+1,w
  7557  141C  0023               	movlb	3	; select bank3
  7558  141D  0008               	return
  7559  141E                     __end_ofPL120:	
  7560  141E                     PL126:	
  7561  141E  0021               	movlb	1	; select bank1
  7562  141F  0837               	movf	??_led_auto_process^(0+128),w
  7563  1420  0020               	movlb	0	; select bank0
  7564  1421  0734               	addwf	?___wmul,w
  7565  1422  0023               	movlb	3	; select bank3
  7566  1423  0008               	return
  7567  1424                     __end_ofPL126:	
  7568  1424                     PL150:	
  7569  1424  0851               	movf	led_auto_process@p^(0+384),w
  7570  1425  0086               	movwf	6
  7571  1426  0852               	movf	(led_auto_process@p+1)^(0+384),w
  7572  1427  0087               	movwf	7
  7573  1428  3150               	addfsr 1,16
  7574  1429  0801               	movf	1,w
  7575  142A  0008               	return
  7576  142B                     __end_ofPL150:	
  7577  142B                     PL158:	
  7578  142B  3104               	addfsr 0,4
  7579  142C  0800               	movf	0,w
  7580  142D  0081               	movwf	1
  7581  142E  0023               	movlb	3	; select bank3
  7582  142F  0853               	movf	led_auto_process@i^(0+384),w
  7583  1430  0008               	return
  7584  1431                     __end_ofPL158:	
  7585  1431                     PL174:	
  7586  1431  310C               	addfsr 0,12
  7587  1432  0800               	movf	0,w
  7588  1433  0081               	movwf	1
  7589  1434  0023               	movlb	3	; select bank3
  7590  1435  0853               	movf	led_auto_process@i^(0+384),w
  7591  1436  0008               	return
  7592  1437                     __end_ofPL174:	
  7593  1437                     PL178:	
  7594  1437  0023               	movlb	3	; select bank3
  7595  1438  084F               	movf	led_auto_process@st^(0+384),w
  7596  1439  0021               	movlb	1	; select bank1
  7597  143A  0234               	subwf	led_auto_process@ct^(0+128),w
  7598  143B  0008               	return
  7599  143C                     __end_ofPL178:	
  7600  143C                     PL184:	
  7601  143C  0023               	movlb	3	; select bank3
  7602  143D  084C               	movf	led_auto_process@et^(0+384),w
  7603  143E  0021               	movlb	1	; select bank1
  7604  143F  0234               	subwf	led_auto_process@ct^(0+128),w
  7605  1440  0008               	return
  7606  1441                     __end_ofPL184:	
  7607                           
  7608                           	psect	text23
  7609  0430                     __ptext23:	
  7610 ;; *************** function _led_para_init *****************
  7611 ;; Defined at:
  7612 ;;		line 236 in file "src/app_led.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;		None
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;  i               1   39[BANK0 ] unsigned char 
  7617 ;;  j               1   38[BANK0 ] unsigned char 
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  1    wreg      void 
  7620 ;; Registers used:
  7621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7622 ;; Tracked objects:
  7623 ;;		On entry : 1F/2
  7624 ;;		On exit  : 1E/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7628 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7629 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  7630 ;;      Totals:         0       2      10       0       0       0       0       0       0       0       0       0       
      +0       0
  7631 ;;Total ram usage:       12 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; Hardware stack levels required when called:    8
  7634 ;; This function calls:
  7635 ;;		___wmul
  7636 ;;		_eeprom_read_buffer
  7637 ;;		_led_dynamic_init
  7638 ;;		_led_para_default
  7639 ;;		_led_turnoff_ramp
  7640 ;;		_led_turnon_ramp
  7641 ;; This function is called by:
  7642 ;;		_led_init
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           
  7647                           ;psect for function _led_para_init
  7648  0430                     _led_para_init:	
  7649  0430                     l7724:	
  7650                           ;incstack = 0
  7651                           ; Regs used in _led_para_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7652                           
  7653                           
  7654                           ;app_led.c: 238: uint8_t i, j;
  7655                           ;app_led.c: 239: eeprom_read_buffer(0x10, (uint8_t *) & m_led_para, sizeof(m_led_para));
  7656  0430  307E               	movlw	126
  7657  0431  0020               	movlb	0	; select bank0
  7658  0432  00B5               	movwf	eeprom_read_buffer@pbuf
  7659  0433  3023               	movlw	35
  7660  0434  00B6               	movwf	eeprom_read_buffer@pbuf+1
  7661  0435  3072               	movlw	114
  7662  0436  00B7               	movwf	eeprom_read_buffer@len
  7663  0437  3010               	movlw	16
  7664  0438  25C1  3184         	fcall	_eeprom_read_buffer
  7665                           
  7666                           ;app_led.c: 240: if(m_led_para.save_flag != 0x55)
  7667  043A  2763  3184         	fcall	PL164	;call to abstracted procedure
  7668  043C  0601               	xorwf	1,w
  7669  043D  1903               	btfsc	3,2
  7670  043E  2C40               	goto	l7730
  7671                           
  7672                           ;app_led.c: 241: {
  7673                           ;app_led.c: 242: led_para_default();
  7674  043F  25E7               	fcall	_led_para_default
  7675  0440                     l7730:	
  7676                           
  7677                           ;app_led.c: 243: }
  7678                           ;app_led.c: 269: if(m_led_para.ble_para.mMode > 2)
  7679  0440  318E  26DF  3184   	fcall	PL4	;call to abstracted procedure
  7680  0443  3A03               	xorlw	3
  7681  0444  1D03               	skipz
  7682  0445  2C4D               	goto	l7734
  7683                           
  7684                           ;app_led.c: 270: {
  7685                           ;app_led.c: 271: m_led_para.ble_para.mMode = 0;
  7686  0446  307E               	movlw	126
  7687  0447  0086               	movwf	6
  7688  0448  3023               	movlw	35
  7689  0449  0087               	movwf	7
  7690  044A  30FC               	movlw	-4
  7691  044B  3141               	addfsr 1,1
  7692  044C  0581               	andwf	1,f
  7693  044D                     l7734:	
  7694                           
  7695                           ;app_led.c: 272: }
  7696                           ;app_led.c: 275: for(i = 0; i < 4; i++)
  7697  044D  0020               	movlb	0	; select bank0
  7698  044E  01C7               	clrf	led_para_init@i
  7699  044F                     l7740:	
  7700                           
  7701                           ;app_led.c: 276: {
  7702                           ;app_led.c: 277: if(m_led_para.ble_para.manual_para.mBright[i] > 1000)
  7703  044F  2718  3184         	fcall	PL54	;call to abstracted procedure
  7704  0451  26F4  3184         	fcall	PL34	;call to abstracted procedure
  7705  0453  3F40               	moviw [0]fsr1
  7706  0454  00A8               	movwf	(??_led_para_init+4)^(0+128)
  7707  0455  3F41               	moviw [1]fsr1
  7708  0456  00A9               	movwf	((??_led_para_init+4)^(0+128)+1)
  7709  0457  3003               	movlw	3
  7710  0458  0229               	subwf	(??_led_para_init+5)^(0+128),w
  7711  0459  30E9               	movlw	233
  7712  045A  1903               	skipnz
  7713  045B  0228               	subwf	(??_led_para_init+4)^(0+128),w
  7714  045C  1C03               	skipc
  7715  045D  2C67               	goto	l7744
  7716                           
  7717                           ;app_led.c: 278: {
  7718                           ;app_led.c: 279: m_led_para.ble_para.manual_para.mBright[i] = 1000;
  7719  045E  0020               	movlb	0	; select bank0
  7720  045F  2718  3184         	fcall	PL54	;call to abstracted procedure
  7721  0461  26F4  3184         	fcall	PL34	;call to abstracted procedure
  7722  0463  30E8               	movlw	232
  7723  0464  3FC0               	movwi [0]fsr1
  7724  0465  3003               	movlw	3
  7725  0466  3FC1               	movwi [1]fsr1
  7726  0467                     l7744:	
  7727                           
  7728                           ;app_led.c: 280: }
  7729                           ;app_led.c: 281: for(j = 0; j < 4; j++)
  7730  0467  0020               	movlb	0	; select bank0
  7731  0468  01C6               	clrf	led_para_init@j
  7732  0469                     l7750:	
  7733                           
  7734                           ;app_led.c: 282: {
  7735                           ;app_led.c: 283: if(m_led_para.ble_para.manual_para.mCustomBright[j][i] > 100)
  7736  0469  0847               	movf	led_para_init@i,w
  7737  046A  0021               	movlb	1	; select bank1
  7738  046B  00A4               	movwf	??_led_para_init^(0+128)
  7739  046C  26DD  3184         	fcall	PL28	;call to abstracted procedure
  7740  046E  0086               	movwf	6
  7741  046F  0825               	movf	(??_led_para_init+1)^(0+128),w
  7742  0470  3D2B               	addwfc	(??_led_para_init+7)^(0+128),w
  7743  0471  0087               	movwf	7
  7744  0472  3065               	movlw	101
  7745  0473  0201               	subwf	1,w
  7746  0474  1C03               	skipc
  7747  0475  2C86               	goto	l7754
  7748                           
  7749                           ;app_led.c: 284: {
  7750                           ;app_led.c: 285: m_led_para.ble_para.manual_para.mCustomBright[j][i] = 100;
  7751  0476  0020               	movlb	0	; select bank0
  7752  0477  0847               	movf	led_para_init@i,w
  7753  0478  0021               	movlb	1	; select bank1
  7754  0479  00A4               	movwf	??_led_para_init^(0+128)
  7755  047A  26DD  3184         	fcall	PL28	;call to abstracted procedure
  7756  047C  00AC               	movwf	(??_led_para_init+8)^(0+128)
  7757  047D  0825               	movf	(??_led_para_init+1)^(0+128),w
  7758  047E  3D2B               	addwfc	(??_led_para_init+7)^(0+128),w
  7759  047F  00AD               	movwf	(??_led_para_init+9)^(0+128)
  7760  0480  082C               	movf	(??_led_para_init+8)^(0+128),w
  7761  0481  0086               	movwf	6
  7762  0482  082D               	movf	(??_led_para_init+9)^(0+128),w
  7763  0483  0087               	movwf	7
  7764  0484  3064               	movlw	100
  7765  0485  0081               	movwf	1
  7766  0486                     l7754:	
  7767  0486  276D  3184         	fcall	PL192	;call to abstracted procedure
  7768  0488  1C03               	skipc
  7769  0489  2C69               	goto	l7750
  7770  048A  3004               	movlw	4
  7771  048B  0AC7               	incf	led_para_init@i,f
  7772  048C  0247               	subwf	led_para_init@i,w
  7773  048D  1C03               	skipc
  7774  048E  2C4F               	goto	l7740
  7775                           
  7776                           ;app_led.c: 286: }
  7777                           ;app_led.c: 287: }
  7778                           ;app_led.c: 288: }
  7779                           ;app_led.c: 291: if(m_led_para.ble_para.auto_para.sunrise_start_hour > 23)
  7780  048F  307E               	movlw	126
  7781  0490  0086               	movwf	6
  7782  0491  3023               	movlw	35
  7783  0492  0087               	movwf	7
  7784  0493  3018               	movlw	24
  7785  0494  315C               	addfsr 1,28
  7786                           
  7787                           ;app_led.c: 292: {
  7788                           ;app_led.c: 293: m_led_para.ble_para.auto_para.sunrise_start_hour = 0;
  7789  0495  2756  3184         	fcall	PL138	;call to abstracted procedure
  7790  0497  1C03               	skipc
  7791  0498  2C9D               	goto	L13
  7792  0499  307E               	movlw	126
  7793  049A  315C               	addfsr 1,28
  7794                           
  7795                           ;app_led.c: 294: }
  7796                           ;app_led.c: 295: if(m_led_para.ble_para.auto_para.sunrise_start_minute > 59)
  7797  049B  2768  3184         	fcall	PL180	;call to abstracted procedure
  7798  049D                     L13:	
  7799  049D  303C               	movlw	60
  7800  049E  315D               	addfsr 1,29
  7801                           
  7802                           ;app_led.c: 296: {
  7803                           ;app_led.c: 297: m_led_para.ble_para.auto_para.sunrise_start_minute = 0;
  7804  049F  2756  3184         	fcall	PL138	;call to abstracted procedure
  7805  04A1  1C03               	skipc
  7806  04A2  2CA7               	goto	L14
  7807  04A3  307E               	movlw	126
  7808  04A4  315D               	addfsr 1,29
  7809                           
  7810                           ;app_led.c: 298: }
  7811                           ;app_led.c: 299: if(m_led_para.ble_para.auto_para.sunrise_end_hour > 23)
  7812  04A5  2768  3184         	fcall	PL180	;call to abstracted procedure
  7813  04A7                     L14:	
  7814  04A7  3018               	movlw	24
  7815  04A8  315E               	addfsr 1,30
  7816                           
  7817                           ;app_led.c: 300: {
  7818                           ;app_led.c: 301: m_led_para.ble_para.auto_para.sunrise_end_hour = 0;
  7819  04A9  2756  3184         	fcall	PL138	;call to abstracted procedure
  7820  04AB  1C03               	skipc
  7821  04AC  2CB1               	goto	L15
  7822  04AD  307E               	movlw	126
  7823  04AE  315E               	addfsr 1,30
  7824                           
  7825                           ;app_led.c: 302: }
  7826                           ;app_led.c: 303: if(m_led_para.ble_para.auto_para.sunrise_end_minute > 59)
  7827  04AF  2768  3184         	fcall	PL180	;call to abstracted procedure
  7828  04B1                     L15:	
  7829  04B1  303C               	movlw	60
  7830  04B2  315F               	addfsr 1,31
  7831  04B3  0201               	subwf	1,w
  7832  04B4  1C03               	skipc
  7833  04B5  2CBC               	goto	l7778
  7834                           
  7835                           ;app_led.c: 304: {
  7836                           ;app_led.c: 305: m_led_para.ble_para.auto_para.sunrise_end_minute = 0;
  7837  04B6  307E               	movlw	126
  7838  04B7  0086               	movwf	6
  7839  04B8  3023               	movlw	35
  7840  04B9  0087               	movwf	7
  7841  04BA  315F               	addfsr 1,31
  7842  04BB  0181               	clrf	1
  7843  04BC                     l7778:	
  7844                           
  7845                           ;app_led.c: 306: }
  7846                           ;app_led.c: 307: if(m_led_para.ble_para.auto_para.sunset_start_hour > 23)
  7847  04BC  30A2               	movlw	162
  7848  04BD  274A  3184         	fcall	PL108	;call to abstracted procedure
  7849  04BF  1C03               	skipc
  7850  04C0  2CC4               	goto	l643
  7851                           
  7852                           ;app_led.c: 308: {
  7853                           ;app_led.c: 309: m_led_para.ble_para.auto_para.sunset_start_hour = 0;
  7854  04C1  30A2               	movlw	162
  7855  04C2  0086               	movwf	6
  7856  04C3  0181               	clrf	1
  7857  04C4                     l643:	
  7858                           
  7859                           ;app_led.c: 310: }
  7860                           ;app_led.c: 311: if(m_led_para.ble_para.auto_para.sunset_start_minute > 59)
  7861  04C4  30A3               	movlw	163
  7862  04C5  2744  3184         	fcall	PL102	;call to abstracted procedure
  7863  04C7  1C03               	skipc
  7864  04C8  2CCC               	goto	l644
  7865                           
  7866                           ;app_led.c: 312: {
  7867                           ;app_led.c: 313: m_led_para.ble_para.auto_para.sunset_start_minute = 0;
  7868  04C9  30A3               	movlw	163
  7869  04CA  0086               	movwf	6
  7870  04CB  0181               	clrf	1
  7871  04CC                     l644:	
  7872                           
  7873                           ;app_led.c: 314: }
  7874                           ;app_led.c: 315: if(m_led_para.ble_para.auto_para.sunset_end_hour > 23)
  7875  04CC  30A4               	movlw	164
  7876  04CD  274A  3184         	fcall	PL108	;call to abstracted procedure
  7877  04CF  1C03               	skipc
  7878  04D0  2CD4               	goto	l645
  7879                           
  7880                           ;app_led.c: 316: {
  7881                           ;app_led.c: 317: m_led_para.ble_para.auto_para.sunset_end_hour = 0;
  7882  04D1  30A4               	movlw	164
  7883  04D2  0086               	movwf	6
  7884  04D3  0181               	clrf	1
  7885  04D4                     l645:	
  7886                           
  7887                           ;app_led.c: 318: }
  7888                           ;app_led.c: 319: if(m_led_para.ble_para.auto_para.sunset_end_minute > 59)
  7889  04D4  30A5               	movlw	165
  7890  04D5  2744  3184         	fcall	PL102	;call to abstracted procedure
  7891  04D7  1C03               	skipc
  7892  04D8  2CDC               	goto	l646
  7893                           
  7894                           ;app_led.c: 320: {
  7895                           ;app_led.c: 321: m_led_para.ble_para.auto_para.sunset_end_minute = 0;
  7896  04D9  30A5               	movlw	165
  7897  04DA  0086               	movwf	6
  7898  04DB  0181               	clrf	1
  7899  04DC                     l646:	
  7900                           
  7901                           ;app_led.c: 322: }
  7902                           ;app_led.c: 323: if(m_led_para.ble_para.auto_para.turnoff_hour > 23)
  7903  04DC  30AB               	movlw	171
  7904  04DD  274A  3184         	fcall	PL108	;call to abstracted procedure
  7905  04DF  1C03               	skipc
  7906  04E0  2CE4               	goto	l647
  7907                           
  7908                           ;app_led.c: 324: {
  7909                           ;app_led.c: 325: m_led_para.ble_para.auto_para.turnoff_hour = 0;
  7910  04E1  30AB               	movlw	171
  7911  04E2  0086               	movwf	6
  7912  04E3  0181               	clrf	1
  7913  04E4                     l647:	
  7914                           
  7915                           ;app_led.c: 326: }
  7916                           ;app_led.c: 327: if(m_led_para.ble_para.auto_para.turnoff_minute > 59)
  7917  04E4  30AC               	movlw	172
  7918  04E5  2744  3184         	fcall	PL102	;call to abstracted procedure
  7919  04E7  1C03               	skipc
  7920  04E8  2CEC               	goto	l7792
  7921                           
  7922                           ;app_led.c: 328: {
  7923                           ;app_led.c: 329: m_led_para.ble_para.auto_para.turnoff_minute = 0;
  7924  04E9  30AC               	movlw	172
  7925  04EA  0086               	movwf	6
  7926  04EB  0181               	clrf	1
  7927  04EC                     l7792:	
  7928                           
  7929                           ;app_led.c: 330: }
  7930                           ;app_led.c: 331: for(i = 0; i < 4; i++)
  7931  04EC  01C7               	clrf	led_para_init@i
  7932  04ED                     l7798:	
  7933                           
  7934                           ;app_led.c: 332: {
  7935                           ;app_led.c: 333: if(m_led_para.ble_para.auto_para.day_bright[i] > 100)
  7936  04ED  273E  3184         	fcall	PL100	;call to abstracted procedure
  7937  04EF  26F4  3184         	fcall	PL34	;call to abstracted procedure
  7938  04F1  3065               	movlw	101
  7939  04F2  0201               	subwf	1,w
  7940  04F3  1C03               	skipc
  7941  04F4  2CFB               	goto	l651
  7942                           
  7943                           ;app_led.c: 334: {
  7944                           ;app_led.c: 335: m_led_para.ble_para.auto_para.day_bright[i] = 100;
  7945  04F5  0020               	movlb	0	; select bank0
  7946  04F6  273E  3184         	fcall	PL100	;call to abstracted procedure
  7947  04F8  00A6               	movwf	(??_led_para_init+2)^(0+128)
  7948  04F9  2728  3184         	fcall	PL70	;call to abstracted procedure
  7949  04FB                     l651:	
  7950                           
  7951                           ;app_led.c: 336: }
  7952                           ;app_led.c: 337: if(m_led_para.ble_para.auto_para.night_bright[i] > 100)
  7953  04FB  2737  3184         	fcall	PL86	;call to abstracted procedure
  7954  04FD  26F4  3184         	fcall	PL34	;call to abstracted procedure
  7955  04FF  3065               	movlw	101
  7956  0500  0201               	subwf	1,w
  7957  0501  1C03               	skipc
  7958  0502  2D08               	goto	l7804
  7959                           
  7960                           ;app_led.c: 338: {
  7961                           ;app_led.c: 339: m_led_para.ble_para.auto_para.night_bright[i] = 100;
  7962  0503  2737  3184         	fcall	PL86	;call to abstracted procedure
  7963  0505  00A6               	movwf	(??_led_para_init+2)^(0+128)
  7964  0506  2728  3184         	fcall	PL70	;call to abstracted procedure
  7965  0508                     l7804:	
  7966  0508  0020               	movlb	0	; select bank0
  7967  0509  3004               	movlw	4
  7968  050A  0AC7               	incf	led_para_init@i,f
  7969  050B  0247               	subwf	led_para_init@i,w
  7970  050C  1C03               	skipc
  7971  050D  2CED               	goto	l7798
  7972                           
  7973                           ;app_led.c: 340: }
  7974                           ;app_led.c: 341: }
  7975                           ;app_led.c: 344: if(m_led_para.ble_para.pro_para.point_count < 4 || m_led_para.ble_para.
      +                          pro_para.point_count > 10)
  7976  050E  275C  3184         	fcall	PL152	;call to abstracted procedure
  7977  0510  30AD               	movlw	173
  7978  0511  0086               	movwf	6
  7979  0512  1C03               	skipc
  7980  0513  2D1A               	goto	L16
  7981  0514  300B               	movlw	11
  7982  0515  0201               	subwf	1,w
  7983  0516  1C03               	skipc
  7984  0517  2D1C               	goto	l7814
  7985                           
  7986                           ;app_led.c: 345: {
  7987                           ;app_led.c: 346: m_led_para.ble_para.pro_para.point_count = 6;
  7988  0518  30AD               	movlw	173
  7989  0519  0086               	movwf	6
  7990  051A                     L16:	
  7991  051A  3006               	movlw	6
  7992  051B  0081               	movwf	1
  7993  051C                     l7814:	
  7994                           
  7995                           ;app_led.c: 347: }
  7996                           ;app_led.c: 348: for(i = 0; i < 10; i++)
  7997  051C  01C7               	clrf	led_para_init@i
  7998  051D                     l7820:	
  7999                           
  8000                           ;app_led.c: 349: {
  8001                           ;app_led.c: 350: if(m_led_para.ble_para.pro_para.points[i].hour > 23)
  8002  051D  0847               	movf	led_para_init@i,w
  8003  051E  319F  2799  3184   	fcall	PL58	;call to abstracted procedure
  8004  0521  319F  270B  3184   	fcall	___wmul
  8005  0524  30AE               	movlw	174
  8006  0525  26BC  3184         	fcall	PL10	;call to abstracted procedure
  8007  0527  3018               	movlw	24
  8008  0528  0201               	subwf	1,w
  8009  0529  1C03               	skipc
  8010  052A  2D33               	goto	l658
  8011                           
  8012                           ;app_led.c: 351: {
  8013                           ;app_led.c: 352: m_led_para.ble_para.pro_para.points[i].hour = 0;
  8014  052B  26FE               	fcall	PL42	;call to abstracted procedure
  8015  052C  319F  270B  3184   	fcall	___wmul
  8016  052F  30AE               	movlw	174
  8017  0530  26BC  3184         	fcall	PL10	;call to abstracted procedure
  8018  0532  0181               	clrf	1
  8019  0533                     l658:	
  8020                           
  8021                           ;app_led.c: 353: }
  8022                           ;app_led.c: 354: if(m_led_para.ble_para.pro_para.points[i].minuite > 59)
  8023  0533  26FE               	fcall	PL42	;call to abstracted procedure
  8024  0534  319F  270B  3184   	fcall	___wmul
  8025  0537  30AF               	movlw	175
  8026  0538  26BC  3184         	fcall	PL10	;call to abstracted procedure
  8027  053A  303C               	movlw	60
  8028  053B  0201               	subwf	1,w
  8029  053C  1C03               	skipc
  8030  053D  2D46               	goto	l7826
  8031                           
  8032                           ;app_led.c: 355: {
  8033                           ;app_led.c: 356: m_led_para.ble_para.pro_para.points[i].hour = 0;
  8034  053E  26FE               	fcall	PL42	;call to abstracted procedure
  8035  053F  319F  270B  3184   	fcall	___wmul
  8036  0542  30AE               	movlw	174
  8037  0543  26BC  3184         	fcall	PL10	;call to abstracted procedure
  8038  0545  0181               	clrf	1
  8039  0546                     l7826:	
  8040                           
  8041                           ;app_led.c: 357: }
  8042                           ;app_led.c: 358: for(j = 0; j < 4; j++)
  8043  0546  0020               	movlb	0	; select bank0
  8044  0547  01C6               	clrf	led_para_init@j
  8045  0548                     l7832:	
  8046                           
  8047                           ;app_led.c: 359: {
  8048                           ;app_led.c: 360: if(m_led_para.ble_para.pro_para.points[i].bright[j] > 100)
  8049  0548  0846               	movf	led_para_init@j,w
  8050  0549  0021               	movlb	1	; select bank1
  8051  054A  00A4               	movwf	??_led_para_init^(0+128)
  8052  054B  01A5               	clrf	(??_led_para_init^(0+128)+1)
  8053  054C  26FE               	fcall	PL42	;call to abstracted procedure
  8054  054D  319F  270B  3184   	fcall	___wmul
  8055  0550  2706  3184         	fcall	PL46	;call to abstracted procedure
  8056  0552  0086               	movwf	6
  8057  0553  0825               	movf	(??_led_para_init+1)^(0+128),w
  8058  0554  3D29               	addwfc	(??_led_para_init+5)^(0+128),w
  8059  0555  0087               	movwf	7
  8060  0556  3065               	movlw	101
  8061  0557  0201               	subwf	1,w
  8062  0558  1C03               	skipc
  8063  0559  2D6F               	goto	l7836
  8064                           
  8065                           ;app_led.c: 361: {
  8066                           ;app_led.c: 362: m_led_para.ble_para.pro_para.points[i].bright[j] = 100;
  8067  055A  0020               	movlb	0	; select bank0
  8068  055B  0846               	movf	led_para_init@j,w
  8069  055C  0021               	movlb	1	; select bank1
  8070  055D  00A4               	movwf	??_led_para_init^(0+128)
  8071  055E  01A5               	clrf	(??_led_para_init^(0+128)+1)
  8072  055F  26FE               	fcall	PL42	;call to abstracted procedure
  8073  0560  319F  270B  3184   	fcall	___wmul
  8074  0563  2706  3184         	fcall	PL46	;call to abstracted procedure
  8075  0565  00AA               	movwf	(??_led_para_init+6)^(0+128)
  8076  0566  0825               	movf	(??_led_para_init+1)^(0+128),w
  8077  0567  3D29               	addwfc	(??_led_para_init+5)^(0+128),w
  8078  0568  00AB               	movwf	(??_led_para_init+7)^(0+128)
  8079  0569  082A               	movf	(??_led_para_init+6)^(0+128),w
  8080  056A  0086               	movwf	6
  8081  056B  082B               	movf	(??_led_para_init+7)^(0+128),w
  8082  056C  0087               	movwf	7
  8083  056D  3064               	movlw	100
  8084  056E  0081               	movwf	1
  8085  056F                     l7836:	
  8086  056F  276D  3184         	fcall	PL192	;call to abstracted procedure
  8087  0571  1C03               	skipc
  8088  0572  2D48               	goto	l7832
  8089  0573  300A               	movlw	10
  8090  0574  0AC7               	incf	led_para_init@i,f
  8091  0575  0247               	subwf	led_para_init@i,w
  8092  0576  1C03               	skipc
  8093  0577  2D1D               	goto	l7820
  8094                           
  8095                           ;app_led.c: 363: }
  8096                           ;app_led.c: 364: }
  8097                           ;app_led.c: 365: }
  8098                           ;app_led.c: 369: if(m_led_para.ble_para.manual_para.mDyn >= 12)
  8099  0578  2720  3184         	fcall	PL64	;call to abstracted procedure
  8100  057A  1C03               	skipc
  8101  057B  2D7F               	goto	l7848
  8102                           
  8103                           ;app_led.c: 370: {
  8104                           ;app_led.c: 371: m_led_para.ble_para.manual_para.mDyn = 0;
  8105  057C  307E               	movlw	126
  8106  057D  2750  3184         	fcall	PL134	;call to abstracted procedure
  8107  057F                     l7848:	
  8108                           
  8109                           ;app_led.c: 372: }
  8110                           ;app_led.c: 373: if(m_led_para.ble_para.dynamic_para.dynamic_mode >= 12)
  8111  057F  30EF               	movlw	239
  8112  0580  0086               	movwf	6
  8113  0581  3023               	movlw	35
  8114  0582  0087               	movwf	7
  8115  0583  300C               	movlw	12
  8116  0584  0201               	subwf	1,w
  8117  0585  1C03               	skipc
  8118  0586  2D8A               	goto	l664
  8119                           
  8120                           ;app_led.c: 374: {
  8121                           ;app_led.c: 375: m_led_para.ble_para.dynamic_para.dynamic_mode = 0;
  8122  0587  30EF               	movlw	239
  8123  0588  0086               	movwf	6
  8124  0589  0181               	clrf	1
  8125  058A                     l664:	
  8126                           
  8127                           ;app_led.c: 376: }
  8128                           ;app_led.c: 377: if(m_led_para.ble_para.dynamic_para.start_hour > 23)
  8129  058A  30EB               	movlw	235
  8130  058B  274A  3184         	fcall	PL108	;call to abstracted procedure
  8131  058D  1C03               	skipc
  8132  058E  2D92               	goto	l665
  8133                           
  8134                           ;app_led.c: 378: {
  8135                           ;app_led.c: 379: m_led_para.ble_para.dynamic_para.start_hour = 0;
  8136  058F  30EB               	movlw	235
  8137  0590  0086               	movwf	6
  8138  0591  0181               	clrf	1
  8139  0592                     l665:	
  8140                           
  8141                           ;app_led.c: 380: }
  8142                           ;app_led.c: 381: if(m_led_para.ble_para.dynamic_para.start_minute > 59)
  8143  0592  30EC               	movlw	236
  8144  0593  2744  3184         	fcall	PL102	;call to abstracted procedure
  8145  0595  1C03               	skipc
  8146  0596  2D9A               	goto	l666
  8147                           
  8148                           ;app_led.c: 382: {
  8149                           ;app_led.c: 383: m_led_para.ble_para.dynamic_para.start_minute = 0;
  8150  0597  30EC               	movlw	236
  8151  0598  0086               	movwf	6
  8152  0599  0181               	clrf	1
  8153  059A                     l666:	
  8154                           
  8155                           ;app_led.c: 384: }
  8156                           ;app_led.c: 385: if(m_led_para.ble_para.dynamic_para.end_hour > 23)
  8157  059A  30ED               	movlw	237
  8158  059B  274A  3184         	fcall	PL108	;call to abstracted procedure
  8159  059D  1C03               	skipc
  8160  059E  2DA2               	goto	l667
  8161                           
  8162                           ;app_led.c: 386: {
  8163                           ;app_led.c: 387: m_led_para.ble_para.dynamic_para.end_hour = 0;
  8164  059F  30ED               	movlw	237
  8165  05A0  0086               	movwf	6
  8166  05A1  0181               	clrf	1
  8167  05A2                     l667:	
  8168                           
  8169                           ;app_led.c: 388: }
  8170                           ;app_led.c: 389: if(m_led_para.ble_para.dynamic_para.end_minute > 59)
  8171  05A2  30EE               	movlw	238
  8172  05A3  2744  3184         	fcall	PL102	;call to abstracted procedure
  8173  05A5  1C03               	skipc
  8174  05A6  2DAA               	goto	l668
  8175                           
  8176                           ;app_led.c: 390: {
  8177                           ;app_led.c: 391: m_led_para.ble_para.dynamic_para.end_minute = 0;
  8178  05A7  30EE               	movlw	238
  8179  05A8  0086               	movwf	6
  8180  05A9  0181               	clrf	1
  8181  05AA                     l668:	
  8182                           
  8183                           ;app_led.c: 392: }
  8184                           ;app_led.c: 428: if(m_led_para.ble_para.mMode == 0)
  8185  05AA  318E  26DF  3184   	fcall	PL4	;call to abstracted procedure
  8186  05AD  1D03               	skipz
  8187  05AE  0008               	return
  8188                           
  8189                           ;app_led.c: 429: {
  8190                           ;app_led.c: 430: if(m_led_para.ble_para.manual_para.mOn)
  8191  05AF  318F  2760  3184   	fcall	PL40	;call to abstracted procedure
  8192  05B2  1C01               	btfss	1,0
  8193  05B3  2DC0               	goto	l7870
  8194                           
  8195                           ;app_led.c: 431: {
  8196                           ;app_led.c: 433: if(m_led_para.ble_para.manual_para.mDyn > 0 && m_led_para.ble_para.manu
      +                          al_para.mDyn < 12 )
  8197  05B4  27F4  3184         	fcall	PL50	;call to abstracted procedure
  8198  05B6  1903               	btfsc	3,2
  8199  05B7  2DBF               	goto	l7868
  8200  05B8  2720  3184         	fcall	PL64	;call to abstracted procedure
  8201  05BA  1803               	skipnc
  8202  05BB  2DBF               	goto	l7868
  8203                           
  8204                           ;app_led.c: 434: {
  8205                           ;app_led.c: 435: led_dynamic_init(m_led_para.ble_para.manual_para.mDyn);
  8206  05BC  27F4               	fcall	PL50	;call to abstracted procedure
  8207  05BD  318D  2DCD         	ljmp	_led_dynamic_init
  8208  05BF                     l7868:	
  8209                           ;app_led.c: 436: }
  8210                           
  8211                           
  8212                           ;app_led.c: 437: else
  8213                           ;app_led.c: 438: {
  8214                           ;app_led.c: 440: led_turnon_ramp();
  8215  05BF  2FDA               	ljmp	l5256
  8216  05C0                     l7870:	
  8217                           
  8218                           ;app_led.c: 445: else
  8219                           ;app_led.c: 446: {
  8220                           ;app_led.c: 447: led_turnoff_ramp();
  8221  05C0  2FCF               	ljmp	l5268
  8222  05C1                     __end_of_led_para_init:	
  8223  05C1                     __ptext26:	
  8224 ;; *************** function _eeprom_read_buffer *****************
  8225 ;; Defined at:
  8226 ;;		line 43 in file "src/drv_eeprom.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;  addr            1    wreg     unsigned char 
  8229 ;;  pbuf            2   21[BANK0 ] PTR unsigned char 
  8230 ;;		 -> m_led_para(114), 
  8231 ;;  len             1   23[BANK0 ] unsigned char 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;  addr            1   25[BANK0 ] unsigned char 
  8234 ;;  i               1   26[BANK0 ] unsigned char 
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  1    wreg      void 
  8237 ;; Registers used:
  8238 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8239 ;; Tracked objects:
  8240 ;;		On entry : 1F/0
  8241 ;;		On exit  : 1F/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8244 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8247 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8248 ;;Total ram usage:        6 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; Hardware stack levels required when called:    7
  8251 ;; This function calls:
  8252 ;;		_eeprom_read
  8253 ;; This function is called by:
  8254 ;;		_led_para_init
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258                           
  8259                           ;psect for function _eeprom_read_buffer
  8260  05C1                     _eeprom_read_buffer:	
  8261                           
  8262                           ;incstack = 0
  8263                           ; Regs used in _eeprom_read_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8264                           ;eeprom_read_buffer@addr stored from wreg
  8265  05C1  00B9               	movwf	eeprom_read_buffer@addr
  8266                           
  8267                           ;drv_eeprom.c: 45: for(uint8_t i = len; i > 0; i--)
  8268  05C2  0837               	movf	eeprom_read_buffer@len,w
  8269  05C3  00BA               	movwf	eeprom_read_buffer@i
  8270  05C4                     l5582:	
  8271  05C4  083A               	movf	eeprom_read_buffer@i,w
  8272  05C5  1903               	btfsc	3,2
  8273  05C6  0008               	return
  8274                           
  8275                           ;drv_eeprom.c: 46: {
  8276                           ;drv_eeprom.c: 47: *pbuf++ = eeprom_read(addr++);
  8277  05C7  0839               	movf	eeprom_read_buffer@addr,w
  8278  05C8  25D8  3184         	fcall	_eeprom_read
  8279  05CA  0020               	movlb	0	; select bank0
  8280  05CB  00B8               	movwf	??_eeprom_read_buffer
  8281  05CC  0835               	movf	eeprom_read_buffer@pbuf,w
  8282  05CD  0086               	movwf	6
  8283  05CE  0836               	movf	eeprom_read_buffer@pbuf+1,w
  8284  05CF  0087               	movwf	7
  8285  05D0  0838               	movf	??_eeprom_read_buffer,w
  8286  05D1  0081               	movwf	1
  8287  05D2  0AB9               	incf	eeprom_read_buffer@addr,f
  8288  05D3  0AB5               	incf	eeprom_read_buffer@pbuf,f
  8289  05D4  1903               	skipnz
  8290  05D5  0AB6               	incf	eeprom_read_buffer@pbuf+1,f
  8291  05D6  03BA               	decf	eeprom_read_buffer@i,f
  8292  05D7  2DC4               	goto	l5582
  8293  05D8                     __end_of_eeprom_read_buffer:	
  8294  05D8                     __ptext27:	
  8295 ;; *************** function _eeprom_read *****************
  8296 ;; Defined at:
  8297 ;;		line 24 in file "src/drv_eeprom.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;  addr            1    wreg     unsigned char 
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;  addr            1   20[BANK0 ] unsigned char 
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  1    wreg      unsigned char 
  8304 ;; Registers used:
  8305 ;;		wreg
  8306 ;; Tracked objects:
  8307 ;;		On entry : 1F/0
  8308 ;;		On exit  : 1F/11
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8312 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8314 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8315 ;;Total ram usage:        1 bytes
  8316 ;; Hardware stack levels used:    1
  8317 ;; Hardware stack levels required when called:    6
  8318 ;; This function calls:
  8319 ;;		Nothing
  8320 ;; This function is called by:
  8321 ;;		_eeprom_read_buffer
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           
  8326                           ;psect for function _eeprom_read
  8327  05D8                     _eeprom_read:	
  8328                           
  8329                           ;incstack = 0
  8330                           ; Regs used in _eeprom_read: [wreg]
  8331                           ;eeprom_read@addr stored from wreg
  8332  05D8  00B4               	movwf	eeprom_read@addr
  8333                           
  8334                           ;drv_eeprom.c: 26: NVMADRH = 0x70;
  8335  05D9  3070               	movlw	112
  8336  05DA  0031               	movlb	17	; select bank17
  8337  05DB  0092               	movwf	18	;volatile
  8338                           
  8339                           ;drv_eeprom.c: 27: NVMADRL = addr;
  8340  05DC  0020               	movlb	0	; select bank0
  8341  05DD  0834               	movf	eeprom_read@addr,w
  8342  05DE  0031               	movlb	17	; select bank17
  8343  05DF  0091               	movwf	17	;volatile
  8344                           
  8345                           ;drv_eeprom.c: 28: NVMCON1bits.NVMREGS = 1;
  8346  05E0  1715               	bsf	21,6	;volsfr
  8347                           
  8348                           ;drv_eeprom.c: 29: NVMCON1bits.RD = 1;
  8349  05E1  1415               	bsf	21,0	;volsfr
  8350                           
  8351                           ;drv_eeprom.c: 30: __nop();
  8352  05E2  0000               	nop
  8353                           
  8354                           ;drv_eeprom.c: 31: __nop();
  8355  05E3  0000               	nop
  8356                           
  8357                           ;drv_eeprom.c: 32: return (NVMDATL);
  8358  05E4  0031               	movlb	17	; select bank17
  8359  05E5  0813               	movf	19,w	;volatile
  8360  05E6  0008               	return
  8361  05E7                     __end_of_eeprom_read:	
  8362  05E7                     __ptext24:	
  8363 ;; *************** function _led_para_default *****************
  8364 ;; Defined at:
  8365 ;;		line 170 in file "src/app_led.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  j               1    1[BANK1 ] unsigned char 
  8370 ;;  i               1    3[BANK1 ] unsigned char 
  8371 ;;  i               1    2[BANK1 ] unsigned char 
  8372 ;;  i               1    0[BANK1 ] unsigned char 
  8373 ;; Return value:  Size  Location     Type
  8374 ;;                  1    wreg      void 
  8375 ;; Registers used:
  8376 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8377 ;; Tracked objects:
  8378 ;;		On entry : 1F/0
  8379 ;;		On exit  : 1F/1
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8383 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;Total ram usage:       14 bytes
  8387 ;; Hardware stack levels used:    1
  8388 ;; Hardware stack levels required when called:    7
  8389 ;; This function calls:
  8390 ;;		_memset
  8391 ;; This function is called by:
  8392 ;;		_led_para_init
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396                           
  8397                           ;psect for function _led_para_default
  8398  05E7                     _led_para_default:	
  8399                           
  8400                           ;app_led.c: 172: memset(&m_led_para, 0, sizeof(m_led_para));
  8401                           
  8402                           ;incstack = 0
  8403                           ; Regs used in _led_para_default: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8404  05E7  307E               	movlw	126
  8405  05E8  00B4               	movwf	memset@p1
  8406  05E9  3023               	movlw	35
  8407  05EA  00B5               	movwf	memset@p1+1
  8408  05EB  3072               	movlw	114
  8409  05EC  01B6               	clrf	memset@c
  8410  05ED  01B7               	clrf	memset@c+1
  8411  05EE  00B8               	movwf	memset@n
  8412  05EF  01B9               	clrf	memset@n+1
  8413  05F0  26A5  3184         	fcall	_memset
  8414                           
  8415                           ;app_led.c: 183: m_led_para.ble_para.auto_para.sunrise_start_hour = 7;
  8416  05F2  309A               	movlw	154
  8417  05F3  0086               	movwf	6
  8418  05F4  3023               	movlw	35
  8419  05F5  0087               	movwf	7
  8420  05F6  3007               	movlw	7
  8421  05F7  0081               	movwf	1
  8422                           
  8423                           ;app_led.c: 185: m_led_para.ble_para.auto_para.sunrise_end_hour = 8;
  8424  05F8  309C               	movlw	156
  8425  05F9  0086               	movwf	6
  8426  05FA  3008               	movlw	8
  8427  05FB  0081               	movwf	1
  8428                           
  8429                           ;app_led.c: 187: for(uint8_t i = 0; i < 4; i++)
  8430  05FC  0021               	movlb	1	; select bank1
  8431  05FD  01A0               	clrf	led_para_default@i^(0+128)
  8432  05FE                     l7470:	
  8433                           
  8434                           ;app_led.c: 188: {
  8435                           ;app_led.c: 189: m_led_para.ble_para.auto_para.day_bright[i] = 100;
  8436  05FE  0820               	movf	led_para_default@i^(0+128),w
  8437  05FF  0020               	movlb	0	; select bank0
  8438  0600  00BC               	movwf	??_led_para_default
  8439  0601  309E               	movlw	158
  8440  0602  26CB  3184         	fcall	PL14	;call to abstracted procedure
  8441  0604  3004               	movlw	4
  8442  0605  0AA0               	incf	led_para_default@i^(0+128),f
  8443  0606  0220               	subwf	led_para_default@i^(0+128),w
  8444  0607  1C03               	skipc
  8445  0608  2DFE               	goto	l7470
  8446                           
  8447                           ;app_led.c: 190: }
  8448                           ;app_led.c: 191: m_led_para.ble_para.auto_para.sunset_start_hour = 17;
  8449  0609  30A2               	movlw	162
  8450  060A  0086               	movwf	6
  8451  060B  3023               	movlw	35
  8452  060C  0087               	movwf	7
  8453  060D  3011               	movlw	17
  8454  060E  0081               	movwf	1
  8455                           
  8456                           ;app_led.c: 193: m_led_para.ble_para.auto_para.sunset_end_hour = 18;
  8457  060F  30A4               	movlw	164
  8458  0610  0086               	movwf	6
  8459  0611  3012               	movlw	18
  8460  0612  0081               	movwf	1
  8461                           
  8462                           ;app_led.c: 195: m_led_para.ble_para.auto_para.night_bright[2] = 5;
  8463  0613  30A8               	movlw	168
  8464  0614  0086               	movwf	6
  8465  0615  3005               	movlw	5
  8466  0616  0081               	movwf	1
  8467                           
  8468                           ;app_led.c: 196: m_led_para.ble_para.auto_para.turnoff_enabled = 1;
  8469  0617  30AA               	movlw	170
  8470  0618  0086               	movwf	6
  8471  0619  3001               	movlw	1
  8472  061A  0081               	movwf	1
  8473                           
  8474                           ;app_led.c: 197: m_led_para.ble_para.auto_para.turnoff_hour = 22;
  8475  061B  30AB               	movlw	171
  8476  061C  0086               	movwf	6
  8477  061D  3016               	movlw	22
  8478  061E  0081               	movwf	1
  8479                           
  8480                           ;app_led.c: 200: m_led_para.ble_para.manual_para.mOn = 1;
  8481  061F  307E               	movlw	126
  8482  0620  0086               	movwf	6
  8483  0621  3142               	addfsr 1,2
  8484  0622  1401               	bsf	1,0
  8485                           
  8486                           ;app_led.c: 201: for(uint8_t i = 0; i < 4; i++)
  8487  0623  01A2               	clrf	led_para_default@i_1256^(0+128)
  8488  0624                     l7484:	
  8489                           
  8490                           ;app_led.c: 202: {
  8491                           ;app_led.c: 203: m_led_para.ble_para.manual_para.mBright[i] = 1000;
  8492  0624  0822               	movf	led_para_default@i_1256^(0+128),w
  8493  0625  0020               	movlb	0	; select bank0
  8494  0626  00BC               	movwf	??_led_para_default
  8495  0627  3082               	movlw	130
  8496  0628  01BD               	clrf	??_led_para_default+1
  8497  0629  35BC               	lslf	??_led_para_default,f
  8498  062A  0DBD               	rlf	??_led_para_default+1,f
  8499  062B  00BE               	movwf	??_led_para_default+2
  8500  062C  3023               	movlw	35
  8501  062D  00BF               	movwf	??_led_para_default+3
  8502  062E  083C               	movf	??_led_para_default,w
  8503  062F  073E               	addwf	??_led_para_default+2,w
  8504  0630  0086               	movwf	6
  8505  0631  083D               	movf	??_led_para_default+1,w
  8506  0632  3D3F               	addwfc	??_led_para_default+3,w
  8507  0633  318F  276E  3184   	fcall	PL106	;call to abstracted procedure
  8508                           
  8509                           ;app_led.c: 204: for(uint8_t j = 0; j < 4; j++)
  8510  0636  0021               	movlb	1	; select bank1
  8511  0637  01A1               	clrf	led_para_default@j^(0+128)
  8512  0638                     l7492:	
  8513                           
  8514                           ;app_led.c: 205: {
  8515                           ;app_led.c: 206: m_led_para.ble_para.manual_para.mCustomBright[j][i] = 100;
  8516  0638  0822               	movf	led_para_default@i_1256^(0+128),w
  8517  0639  0020               	movlb	0	; select bank0
  8518  063A  00BC               	movwf	??_led_para_default
  8519  063B  01BD               	clrf	??_led_para_default+1
  8520  063C  0021               	movlb	1	; select bank1
  8521  063D  0821               	movf	led_para_default@j^(0+128),w
  8522  063E  0020               	movlb	0	; select bank0
  8523  063F  00BE               	movwf	??_led_para_default+2
  8524  0640  308A               	movlw	138
  8525  0641  01BF               	clrf	??_led_para_default+3
  8526  0642  35BE               	lslf	??_led_para_default+2,f
  8527  0643  0DBF               	rlf	??_led_para_default+3,f
  8528  0644  35BE               	lslf	??_led_para_default+2,f
  8529  0645  0DBF               	rlf	??_led_para_default+3,f
  8530  0646  00C0               	movwf	??_led_para_default+4
  8531  0647  3023               	movlw	35
  8532  0648  00C1               	movwf	??_led_para_default+5
  8533  0649  083E               	movf	??_led_para_default+2,w
  8534  064A  0740               	addwf	??_led_para_default+4,w
  8535  064B  00C2               	movwf	??_led_para_default+6
  8536  064C  083F               	movf	??_led_para_default+3,w
  8537  064D  3D41               	addwfc	??_led_para_default+5,w
  8538  064E  00C3               	movwf	??_led_para_default+7
  8539  064F  083C               	movf	??_led_para_default,w
  8540  0650  0742               	addwf	??_led_para_default+6,w
  8541  0651  00C4               	movwf	??_led_para_default+8
  8542  0652  083D               	movf	??_led_para_default+1,w
  8543  0653  3D43               	addwfc	??_led_para_default+7,w
  8544  0654  00C5               	movwf	??_led_para_default+9
  8545  0655  0844               	movf	??_led_para_default+8,w
  8546  0656  0086               	movwf	6
  8547  0657  0845               	movf	??_led_para_default+9,w
  8548  0658  0087               	movwf	7
  8549  0659  3064               	movlw	100
  8550  065A  0081               	movwf	1
  8551  065B  0021               	movlb	1	; select bank1
  8552  065C  3004               	movlw	4
  8553  065D  0AA1               	incf	led_para_default@j^(0+128),f
  8554  065E  0221               	subwf	led_para_default@j^(0+128),w
  8555  065F  1C03               	skipc
  8556  0660  2E38               	goto	l7492
  8557  0661  3004               	movlw	4
  8558  0662  0AA2               	incf	led_para_default@i_1256^(0+128),f
  8559  0663  0222               	subwf	led_para_default@i_1256^(0+128),w
  8560  0664  1C03               	skipc
  8561  0665  2E24               	goto	l7484
  8562                           
  8563                           ;app_led.c: 207: }
  8564                           ;app_led.c: 208: }
  8565                           ;app_led.c: 210: m_led_para.ble_para.pro_para.point_count = 6;
  8566  0666  30AD               	movlw	173
  8567  0667  0086               	movwf	6
  8568  0668  3023               	movlw	35
  8569  0669  0087               	movwf	7
  8570  066A  3006               	movlw	6
  8571  066B  0081               	movwf	1
  8572                           
  8573                           ;app_led.c: 211: m_led_para.ble_para.pro_para.points[0].hour = 7;
  8574  066C  30AE               	movlw	174
  8575  066D  0086               	movwf	6
  8576  066E  3007               	movlw	7
  8577  066F  0081               	movwf	1
  8578                           
  8579                           ;app_led.c: 213: m_led_para.ble_para.pro_para.points[1].hour = 8;
  8580  0670  30B4               	movlw	180
  8581  0671  0086               	movwf	6
  8582  0672  3008               	movlw	8
  8583  0673  0081               	movwf	1
  8584                           
  8585                           ;app_led.c: 215: m_led_para.ble_para.pro_para.points[2].hour = 17;
  8586  0674  30BA               	movlw	186
  8587  0675  0086               	movwf	6
  8588  0676  3011               	movlw	17
  8589  0677  0081               	movwf	1
  8590                           
  8591                           ;app_led.c: 217: m_led_para.ble_para.pro_para.points[3].hour = 18;
  8592  0678  30C0               	movlw	192
  8593  0679  0086               	movwf	6
  8594  067A  3012               	movlw	18
  8595  067B  0081               	movwf	1
  8596                           
  8597                           ;app_led.c: 219: m_led_para.ble_para.pro_para.points[4].hour = 22;
  8598  067C  30C6               	movlw	198
  8599  067D  0086               	movwf	6
  8600  067E  3016               	movlw	22
  8601  067F  0081               	movwf	1
  8602                           
  8603                           ;app_led.c: 221: m_led_para.ble_para.pro_para.points[5].hour = 22;
  8604  0680  30CC               	movlw	204
  8605  0681  0086               	movwf	6
  8606  0682  3016               	movlw	22
  8607  0683  0081               	movwf	1
  8608                           
  8609                           ;app_led.c: 222: m_led_para.ble_para.pro_para.points[5].minuite = 30;
  8610  0684  30CD               	movlw	205
  8611  0685  0086               	movwf	6
  8612  0686  301E               	movlw	30
  8613  0687  0081               	movwf	1
  8614                           
  8615                           ;app_led.c: 223: for(uint8_t i = 0; i < 4; i++)
  8616  0688  01A3               	clrf	led_para_default@i_1263^(0+128)
  8617  0689                     l7510:	
  8618                           
  8619                           ;app_led.c: 224: {
  8620                           ;app_led.c: 226: m_led_para.ble_para.pro_para.points[1].bright[i] = 100;
  8621  0689  0823               	movf	led_para_default@i_1263^(0+128),w
  8622  068A  0020               	movlb	0	; select bank0
  8623  068B  00BC               	movwf	??_led_para_default
  8624  068C  30B6               	movlw	182
  8625                           
  8626                           ;app_led.c: 227: m_led_para.ble_para.pro_para.points[2].bright[i] = 100;
  8627  068D  26CB  3184         	fcall	PL14	;call to abstracted procedure
  8628  068F  0823               	movf	led_para_default@i_1263^(0+128),w
  8629  0690  0020               	movlb	0	; select bank0
  8630  0691  00BC               	movwf	??_led_para_default
  8631  0692  30BC               	movlw	188
  8632  0693  26CB  3184         	fcall	PL14	;call to abstracted procedure
  8633  0695  3004               	movlw	4
  8634  0696  0AA3               	incf	led_para_default@i_1263^(0+128),f
  8635  0697  0223               	subwf	led_para_default@i_1263^(0+128),w
  8636  0698  1C03               	skipc
  8637  0699  2E89               	goto	l7510
  8638                           
  8639                           ;app_led.c: 231: }
  8640                           ;app_led.c: 232: m_led_para.ble_para.pro_para.points[3].bright[2] = 5;
  8641  069A  30C4               	movlw	196
  8642  069B  0086               	movwf	6
  8643  069C  3023               	movlw	35
  8644  069D  0087               	movwf	7
  8645  069E  3005               	movlw	5
  8646  069F  0081               	movwf	1
  8647                           
  8648                           ;app_led.c: 233: m_led_para.ble_para.pro_para.points[4].bright[2] = 5;
  8649  06A0  30CA               	movlw	202
  8650  06A1  0086               	movwf	6
  8651  06A2  3005               	movlw	5
  8652  06A3  0081               	movwf	1
  8653  06A4  0008               	return
  8654  06A5                     __end_of_led_para_default:	
  8655  06A5                     __ptext25:	
  8656 ;; *************** function _memset *****************
  8657 ;; Defined at:
  8658 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\memset.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;  p1              2   20[BANK0 ] PTR void 
  8661 ;;		 -> m_led_para(114), 
  8662 ;;  c               2   22[BANK0 ] int 
  8663 ;;  n               2   24[BANK0 ] unsigned int 
  8664 ;; Auto vars:     Size  Location     Type
  8665 ;;  p               2   26[BANK0 ] PTR unsigned char 
  8666 ;;		 -> m_led_para(114), 
  8667 ;; Return value:  Size  Location     Type
  8668 ;;                  2   20[BANK0 ] PTR void 
  8669 ;; Registers used:
  8670 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8671 ;; Tracked objects:
  8672 ;;		On entry : 1F/0
  8673 ;;		On exit  : 1F/0
  8674 ;;		Unchanged: 0/0
  8675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8676 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8677 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8679 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8680 ;;Total ram usage:        8 bytes
  8681 ;; Hardware stack levels used:    1
  8682 ;; Hardware stack levels required when called:    6
  8683 ;; This function calls:
  8684 ;;		Nothing
  8685 ;; This function is called by:
  8686 ;;		_led_para_default
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           
  8691                           ;psect for function _memset
  8692  06A5                     _memset:	
  8693                           
  8694                           ;incstack = 0
  8695                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8696  06A5  0835               	movf	memset@p1+1,w
  8697  06A6  00BB               	movwf	memset@p+1
  8698  06A7  0834               	movf	memset@p1,w
  8699  06A8  00BA               	movwf	memset@p
  8700  06A9                     l7368:	
  8701  06A9  3001               	movlw	1
  8702  06AA  02B8               	subwf	memset@n,f
  8703  06AB  3000               	movlw	0
  8704  06AC  3BB9               	subwfb	memset@n+1,f
  8705  06AD  0F38               	incfsz	memset@n,w
  8706  06AE  2EB2               	goto	l7364
  8707  06AF  0A39               	incf	memset@n+1,w
  8708  06B0  1903               	btfsc	3,2
  8709  06B1  0008               	return
  8710  06B2                     l7364:	
  8711  06B2  083A               	movf	memset@p,w
  8712  06B3  0086               	movwf	6
  8713  06B4  083B               	movf	memset@p+1,w
  8714  06B5  0087               	movwf	7
  8715  06B6  0836               	movf	memset@c,w
  8716  06B7  0081               	movwf	1
  8717  06B8  0ABA               	incf	memset@p,f
  8718  06B9  1903               	skipnz
  8719  06BA  0ABB               	incf	memset@p+1,f
  8720  06BB  2EA9               	goto	l7368
  8721  06BC                     __end_of_memset:	
  8722  06BC                     PL10:	
  8723  06BC  0021               	movlb	1	; select bank1
  8724  06BD  00A4               	movwf	??_led_para_init^(0+128)
  8725  06BE  3023               	movlw	35
  8726  06BF  00A5               	movwf	(??_led_para_init^(0+128)+1)
  8727  06C0  0020               	movlb	0	; select bank0
  8728  06C1  0834               	movf	?___wmul,w
  8729  06C2  0021               	movlb	1	; select bank1
  8730  06C3  0724               	addwf	??_led_para_init^(0+128),w
  8731  06C4  0086               	movwf	6
  8732  06C5  0020               	movlb	0	; select bank0
  8733  06C6  0835               	movf	?___wmul+1,w
  8734  06C7  0021               	movlb	1	; select bank1
  8735  06C8  3D25               	addwfc	(??_led_para_init+1)^(0+128),w
  8736  06C9  0087               	movwf	7
  8737  06CA  0008               	return
  8738  06CB                     __end_ofPL10:	
  8739  06CB                     PL14:	
  8740  06CB  01BD               	clrf	??_led_para_default+1
  8741  06CC  00BE               	movwf	??_led_para_default+2
  8742  06CD  3023               	movlw	35
  8743  06CE  00BF               	movwf	??_led_para_default+3
  8744  06CF  083C               	movf	??_led_para_default,w
  8745  06D0  073E               	addwf	??_led_para_default+2,w
  8746  06D1  00C0               	movwf	??_led_para_default+4
  8747  06D2  083D               	movf	??_led_para_default+1,w
  8748  06D3  3D3F               	addwfc	??_led_para_default+3,w
  8749  06D4  00C1               	movwf	??_led_para_default+5
  8750  06D5  0840               	movf	??_led_para_default+4,w
  8751  06D6  0086               	movwf	6
  8752  06D7  0841               	movf	??_led_para_default+5,w
  8753  06D8  0087               	movwf	7
  8754  06D9  3064               	movlw	100
  8755  06DA  0081               	movwf	1
  8756  06DB  0021               	movlb	1	; select bank1
  8757  06DC  0008               	return
  8758  06DD                     __end_ofPL14:	
  8759  06DD                     PL28:	
  8760  06DD  01A5               	clrf	(??_led_para_init^(0+128)+1)
  8761  06DE  0020               	movlb	0	; select bank0
  8762  06DF  0846               	movf	led_para_init@j,w
  8763  06E0  0021               	movlb	1	; select bank1
  8764  06E1  00A6               	movwf	(??_led_para_init+2)^(0+128)
  8765  06E2  308A               	movlw	138
  8766  06E3  01A7               	clrf	((??_led_para_init+2)^(0+128)+1)
  8767  06E4  35A6               	lslf	(??_led_para_init+2)^(0+128),f
  8768  06E5  0DA7               	rlf	((??_led_para_init+2)^(0+128)+1),f
  8769  06E6  35A6               	lslf	(??_led_para_init+2)^(0+128),f
  8770  06E7  0DA7               	rlf	((??_led_para_init+2)^(0+128)+1),f
  8771  06E8  00A8               	movwf	(??_led_para_init+4)^(0+128)
  8772  06E9  3023               	movlw	35
  8773  06EA  00A9               	movwf	((??_led_para_init+4)^(0+128)+1)
  8774  06EB  0826               	movf	(??_led_para_init+2)^(0+128),w
  8775  06EC  0728               	addwf	(??_led_para_init+4)^(0+128),w
  8776  06ED  00AA               	movwf	(??_led_para_init+6)^(0+128)
  8777  06EE  0827               	movf	(??_led_para_init+3)^(0+128),w
  8778  06EF  3D29               	addwfc	(??_led_para_init+5)^(0+128),w
  8779  06F0  00AB               	movwf	(??_led_para_init+7)^(0+128)
  8780  06F1  0824               	movf	??_led_para_init^(0+128),w
  8781  06F2  072A               	addwf	(??_led_para_init+6)^(0+128),w
  8782  06F3  0008               	return
  8783  06F4                     __end_ofPL28:	
  8784  06F4                     PL34:	
  8785  06F4  00A6               	movwf	(??_led_para_init+2)^(0+128)
  8786  06F5  3023               	movlw	35
  8787  06F6  00A7               	movwf	((??_led_para_init+2)^(0+128)+1)
  8788  06F7  0824               	movf	??_led_para_init^(0+128),w
  8789  06F8  0726               	addwf	(??_led_para_init+2)^(0+128),w
  8790  06F9  0086               	movwf	6
  8791  06FA  0825               	movf	(??_led_para_init+1)^(0+128),w
  8792  06FB  3D27               	addwfc	(??_led_para_init+3)^(0+128),w
  8793  06FC  0087               	movwf	7
  8794  06FD  0008               	return
  8795  06FE                     __end_ofPL34:	
  8796  06FE                     PL42:	
  8797  06FE  0020               	movlb	0	; select bank0
  8798  06FF  0847               	movf	led_para_init@i,w
  8799  0700  00B4               	movwf	___wmul@multiplier
  8800  0701  3006               	movlw	6
  8801  0702  01B5               	clrf	___wmul@multiplier+1
  8802  0703  00B6               	movwf	___wmul@multiplicand
  8803  0704  01B7               	clrf	___wmul@multiplicand+1
  8804  0705  0008               	return
  8805  0706                     __end_ofPL42:	
  8806  0706                     PL46:	
  8807  0706  30B0               	movlw	176
  8808  0707  0021               	movlb	1	; select bank1
  8809  0708  00A6               	movwf	(??_led_para_init+2)^(0+128)
  8810  0709  3023               	movlw	35
  8811  070A  00A7               	movwf	((??_led_para_init+2)^(0+128)+1)
  8812  070B  0020               	movlb	0	; select bank0
  8813  070C  0834               	movf	?___wmul,w
  8814  070D  0021               	movlb	1	; select bank1
  8815  070E  0726               	addwf	(??_led_para_init+2)^(0+128),w
  8816  070F  00A8               	movwf	(??_led_para_init+4)^(0+128)
  8817  0710  0020               	movlb	0	; select bank0
  8818  0711  0835               	movf	?___wmul+1,w
  8819  0712  0021               	movlb	1	; select bank1
  8820  0713  3D27               	addwfc	(??_led_para_init+3)^(0+128),w
  8821  0714  00A9               	movwf	(??_led_para_init+5)^(0+128)
  8822  0715  0824               	movf	??_led_para_init^(0+128),w
  8823  0716  0728               	addwf	(??_led_para_init+4)^(0+128),w
  8824  0717  0008               	return
  8825  0718                     __end_ofPL46:	
  8826  0718                     PL54:	
  8827  0718  0847               	movf	led_para_init@i,w
  8828  0719  0021               	movlb	1	; select bank1
  8829  071A  00A4               	movwf	??_led_para_init^(0+128)
  8830  071B  3082               	movlw	130
  8831  071C  01A5               	clrf	(??_led_para_init^(0+128)+1)
  8832  071D  35A4               	lslf	??_led_para_init^(0+128),f
  8833  071E  0DA5               	rlf	(??_led_para_init^(0+128)+1),f
  8834  071F  0008               	return
  8835  0720                     __end_ofPL54:	
  8836  0720                     PL64:	
  8837  0720  307E               	movlw	126
  8838  0721  0086               	movwf	6
  8839  0722  3023               	movlw	35
  8840  0723  0087               	movwf	7
  8841  0724  300C               	movlw	12
  8842  0725  3143               	addfsr 1,3
  8843  0726  0201               	subwf	1,w
  8844  0727  0008               	return
  8845  0728                     __end_ofPL64:	
  8846  0728                     PL70:	
  8847  0728  3023               	movlw	35
  8848  0729  00A7               	movwf	((??_led_para_init+2)^(0+128)+1)
  8849  072A  0824               	movf	??_led_para_init^(0+128),w
  8850  072B  0726               	addwf	(??_led_para_init+2)^(0+128),w
  8851  072C  00A8               	movwf	(??_led_para_init+4)^(0+128)
  8852  072D  0825               	movf	(??_led_para_init+1)^(0+128),w
  8853  072E  3D27               	addwfc	(??_led_para_init+3)^(0+128),w
  8854  072F  00A9               	movwf	(??_led_para_init+5)^(0+128)
  8855  0730  0828               	movf	(??_led_para_init+4)^(0+128),w
  8856  0731  0086               	movwf	6
  8857  0732  0829               	movf	(??_led_para_init+5)^(0+128),w
  8858  0733  0087               	movwf	7
  8859  0734  3064               	movlw	100
  8860  0735  0081               	movwf	1
  8861  0736  0008               	return
  8862  0737                     __end_ofPL70:	
  8863  0737                     PL86:	
  8864  0737  0020               	movlb	0	; select bank0
  8865  0738  0847               	movf	led_para_init@i,w
  8866  0739  0021               	movlb	1	; select bank1
  8867  073A  00A4               	movwf	??_led_para_init^(0+128)
  8868  073B  30A6               	movlw	166
  8869  073C  01A5               	clrf	(??_led_para_init^(0+128)+1)
  8870  073D  0008               	return
  8871  073E                     __end_ofPL86:	
  8872  073E                     PL100:	
  8873  073E  0847               	movf	led_para_init@i,w
  8874  073F  0021               	movlb	1	; select bank1
  8875  0740  00A4               	movwf	??_led_para_init^(0+128)
  8876  0741  309E               	movlw	158
  8877  0742  01A5               	clrf	(??_led_para_init^(0+128)+1)
  8878  0743  0008               	return
  8879  0744                     __end_ofPL100:	
  8880  0744                     PL102:	
  8881  0744  0086               	movwf	6
  8882  0745  3023               	movlw	35
  8883  0746  0087               	movwf	7
  8884  0747  303C               	movlw	60
  8885  0748  0201               	subwf	1,w
  8886  0749  0008               	return
  8887  074A                     __end_ofPL102:	
  8888  074A                     PL108:	
  8889  074A  0086               	movwf	6
  8890  074B  3023               	movlw	35
  8891  074C  0087               	movwf	7
  8892  074D  3018               	movlw	24
  8893  074E  0201               	subwf	1,w
  8894  074F  0008               	return
  8895  0750                     __end_ofPL108:	
  8896  0750                     PL134:	
  8897  0750  0086               	movwf	6
  8898  0751  3023               	movlw	35
  8899  0752  0087               	movwf	7
  8900  0753  3143               	addfsr 1,3
  8901  0754  0181               	clrf	1
  8902  0755  0008               	return
  8903  0756                     __end_ofPL134:	
  8904  0756                     PL138:	
  8905  0756  0201               	subwf	1,w
  8906  0757  307E               	movlw	126
  8907  0758  0086               	movwf	6
  8908  0759  3023               	movlw	35
  8909  075A  0087               	movwf	7
  8910  075B  0008               	return
  8911  075C                     __end_ofPL138:	
  8912  075C                     PL152:	
  8913  075C  30AD               	movlw	173
  8914  075D  0086               	movwf	6
  8915  075E  3023               	movlw	35
  8916  075F  0087               	movwf	7
  8917  0760  3004               	movlw	4
  8918  0761  0201               	subwf	1,w
  8919  0762  0008               	return
  8920  0763                     __end_ofPL152:	
  8921  0763                     PL164:	
  8922  0763  307E               	movlw	126
  8923  0764  0086               	movwf	6
  8924  0765  3023               	movlw	35
  8925  0766  0087               	movwf	7
  8926  0767  3455               	retlw	85
  8927  0768                     __end_ofPL164:	
  8928  0768                     PL180:	
  8929  0768  0181               	clrf	1
  8930  0769  0086               	movwf	6
  8931  076A  3023               	movlw	35
  8932  076B  0087               	movwf	7
  8933  076C  0008               	return
  8934  076D                     __end_ofPL180:	
  8935  076D                     PL192:	
  8936  076D  0020               	movlb	0	; select bank0
  8937  076E  3004               	movlw	4
  8938  076F  0AC6               	incf	led_para_init@j,f
  8939  0770  0246               	subwf	led_para_init@j,w
  8940  0771  0008               	return
  8941  0772                     __end_ofPL192:	
  8942  0772                     __ptext41:	
  8943 ;; *************** function _led_set_power *****************
  8944 ;; Defined at:
  8945 ;;		line 2036 in file "src/app_led.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;  on              1    wreg     unsigned char 
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;  on              1   25[BANK0 ] unsigned char 
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  1    wreg      unsigned char 
  8952 ;; Registers used:
  8953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8954 ;; Tracked objects:
  8955 ;;		On entry : 1F/4
  8956 ;;		On exit  : 1F/1
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8962 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8963 ;;Total ram usage:        1 bytes
  8964 ;; Hardware stack levels used:    1
  8965 ;; Hardware stack levels required when called:    8
  8966 ;; This function calls:
  8967 ;;		_led_dynamic_init
  8968 ;;		_led_prepare_to_save
  8969 ;;		_led_turnoff_ramp
  8970 ;;		_led_turnon_ramp
  8971 ;; This function is called by:
  8972 ;;		_ble_decode
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           
  8977                           ;psect for function _led_set_power
  8978  0772                     _led_set_power:	
  8979                           
  8980                           ;incstack = 0
  8981                           ; Regs used in _led_set_power: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8982                           ;led_set_power@on stored from wreg
  8983  0772  0020               	movlb	0	; select bank0
  8984  0773  00B9               	movwf	led_set_power@on
  8985                           
  8986                           ;app_led.c: 2038: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0)
  8987  0774  0021               	movlb	1	; select bank1
  8988  0775  1C42               	btfss	_led_run_para^(0+128),0
  8989  0776  18C2               	btfsc	_led_run_para^(0+128),1
  8990  0777  3400               	retlw	0
  8991  0778  318E  26DF  3184   	fcall	PL4	;call to abstracted procedure
  8992  077B  1D03               	btfss	3,2
  8993                           
  8994                           ;app_led.c: 2039: {
  8995                           ;app_led.c: 2040: return 0;
  8996  077C  3400               	retlw	0
  8997                           
  8998                           ;app_led.c: 2041: }
  8999                           ;app_led.c: 2043: dynamic_run_mode = 0;
  9000  077D  01FC               	clrf	_dynamic_run_mode	;volatile
  9001                           
  9002                           ;app_led.c: 2044: dynamic_run_pause = 0;
  9003  077E  0020               	movlb	0	; select bank0
  9004  077F  01D0               	clrf	_dynamic_run_pause	;volatile
  9005                           
  9006                           ;app_led.c: 2046: m_led_para.ble_para.manual_para.mOn = on;
  9007  0780  318F  2760  3184   	fcall	PL40	;call to abstracted procedure
  9008  0783  0839               	movf	led_set_power@on,w
  9009  0784  3901               	andlw	1
  9010  0785  1001               	bcf	1,0
  9011  0786  1D03               	skipz
  9012  0787  1401               	bsf	1,0
  9013                           
  9014                           ;app_led.c: 2047: if(on)
  9015  0788  0839               	movf	led_set_power@on,w
  9016  0789  1903               	btfsc	3,2
  9017  078A  2F9B               	goto	l5810
  9018                           
  9019                           ;app_led.c: 2048: {
  9020                           ;app_led.c: 2050: if(m_led_para.ble_para.manual_para.mDyn > 0 && m_led_para.ble_para.man
      +                          ual_para.mDyn < 12)
  9021  078B  27F4  3184         	fcall	PL50	;call to abstracted procedure
  9022  078D  1903               	btfsc	3,2
  9023  078E  2F98               	goto	l5808
  9024  078F  2720  3184         	fcall	PL64	;call to abstracted procedure
  9025  0791  1803               	skipnc
  9026  0792  2F98               	goto	l5808
  9027                           
  9028                           ;app_led.c: 2051: {
  9029                           ;app_led.c: 2052: led_dynamic_init(m_led_para.ble_para.manual_para.mDyn);
  9030  0793  27F4               	fcall	PL50	;call to abstracted procedure
  9031  0794  318D  25CD  3184   	fcall	_led_dynamic_init
  9032                           
  9033                           ;app_led.c: 2053: }
  9034  0797  2F9C               	goto	l5812
  9035  0798                     l5808:	
  9036                           
  9037                           ;app_led.c: 2054: else
  9038                           ;app_led.c: 2055: {
  9039                           ;app_led.c: 2057: led_turnon_ramp();
  9040  0798  27DA  3184         	fcall	_led_turnon_ramp
  9041  079A  2F9C               	goto	l5812
  9042  079B                     l5810:	
  9043                           
  9044                           ;app_led.c: 2062: else
  9045                           ;app_led.c: 2063: {
  9046                           ;app_led.c: 2064: led_turnoff_ramp();
  9047  079B  27CF               	fcall	_led_turnoff_ramp
  9048  079C                     l5812:	
  9049                           
  9050                           ;app_led.c: 2065: }
  9051                           ;app_led.c: 2066: led_prepare_to_save();
  9052  079C  318D  2581         	fcall	_led_prepare_to_save
  9053                           
  9054                           ;app_led.c: 2067: return 1;
  9055  079E  3401               	retlw	1
  9056  079F                     __end_of_led_set_power:	
  9057  079F                     __ptext43:	
  9058 ;; *************** function _led_set_mode *****************
  9059 ;; Defined at:
  9060 ;;		line 1993 in file "src/app_led.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;  m               1    wreg     unsigned char 
  9063 ;; Auto vars:     Size  Location     Type
  9064 ;;  m               1   25[BANK0 ] unsigned char 
  9065 ;; Return value:  Size  Location     Type
  9066 ;;                  1    wreg      unsigned char 
  9067 ;; Registers used:
  9068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9069 ;; Tracked objects:
  9070 ;;		On entry : 1F/4
  9071 ;;		On exit  : 1F/1
  9072 ;;		Unchanged: 0/0
  9073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;Total ram usage:        1 bytes
  9079 ;; Hardware stack levels used:    1
  9080 ;; Hardware stack levels required when called:    8
  9081 ;; This function calls:
  9082 ;;		_led_dynamic_init
  9083 ;;		_led_prepare_to_save
  9084 ;;		_led_turnoff_ramp
  9085 ;;		_led_turnon_ramp
  9086 ;; This function is called by:
  9087 ;;		_ble_decode
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           
  9092                           ;psect for function _led_set_mode
  9093  079F                     _led_set_mode:	
  9094                           
  9095                           ;incstack = 0
  9096                           ; Regs used in _led_set_mode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9097                           ;led_set_mode@m stored from wreg
  9098  079F  0020               	movlb	0	; select bank0
  9099  07A0  00B9               	movwf	led_set_mode@m
  9100                           
  9101                           ;app_led.c: 1995: if(led_run_para.mFind || led_run_para.mPrev)
  9102  07A1  0021               	movlb	1	; select bank1
  9103  07A2  1842               	btfsc	_led_run_para^(0+128),0
  9104  07A3  3400               	retlw	0
  9105  07A4  18C2               	btfsc	_led_run_para^(0+128),1
  9106                           
  9107                           ;app_led.c: 1996: {
  9108                           ;app_led.c: 1997: return 0;
  9109  07A5  3400               	retlw	0
  9110                           
  9111                           ;app_led.c: 1998: }
  9112                           ;app_led.c: 2000: dynamic_run_mode = 0;
  9113                           
  9114                           ;app_led.c: 2001: dynamic_run_pause = 0;
  9115                           
  9116                           ;app_led.c: 2003: m_led_para.ble_para.mMode = m;
  9117  07A6  319C  2438  3184   	fcall	PL94	;call to abstracted procedure
  9118  07A9  3141               	addfsr 1,1
  9119  07AA  0801               	movf	1,w
  9120  07AB  0639               	xorwf	led_set_mode@m,w
  9121  07AC  39FC               	andlw	-4
  9122  07AD  0639               	xorwf	led_set_mode@m,w
  9123  07AE  0081               	movwf	1
  9124                           
  9125                           ;app_led.c: 2004: if(m != 1 && m != 2)
  9126  07AF  0339               	decf	led_set_mode@m,w
  9127  07B0  1903               	btfsc	3,2
  9128  07B1  2FCC               	goto	l5780
  9129  07B2  3002               	movlw	2
  9130  07B3  0639               	xorwf	led_set_mode@m,w
  9131  07B4  1903               	btfsc	3,2
  9132  07B5  2FCC               	goto	l5780
  9133                           
  9134                           ;app_led.c: 2005: {
  9135                           ;app_led.c: 2006: if(m_led_para.ble_para.manual_para.mOn)
  9136  07B6  318F  2760  3184   	fcall	PL40	;call to abstracted procedure
  9137  07B9  1C01               	btfss	1,0
  9138  07BA  2FCB               	goto	l5778
  9139                           
  9140                           ;app_led.c: 2007: {
  9141                           ;app_led.c: 2009: if(m_led_para.ble_para.manual_para.mDyn > 0 && m_led_para.ble_para.man
      +                          ual_para.mDyn < 12)
  9142  07BB  27F4  3184         	fcall	PL50	;call to abstracted procedure
  9143  07BD  1903               	btfsc	3,2
  9144  07BE  2FC8               	goto	l5776
  9145  07BF  2720  3184         	fcall	PL64	;call to abstracted procedure
  9146  07C1  1803               	skipnc
  9147  07C2  2FC8               	goto	l5776
  9148                           
  9149                           ;app_led.c: 2010: {
  9150                           ;app_led.c: 2011: led_dynamic_init(m_led_para.ble_para.manual_para.mDyn);
  9151  07C3  27F4               	fcall	PL50	;call to abstracted procedure
  9152  07C4  318D  25CD  3184   	fcall	_led_dynamic_init
  9153                           
  9154                           ;app_led.c: 2012: }
  9155  07C7  2FCC               	goto	l5780
  9156  07C8                     l5776:	
  9157                           
  9158                           ;app_led.c: 2013: else
  9159                           ;app_led.c: 2014: {
  9160                           ;app_led.c: 2016: led_turnon_ramp();
  9161  07C8  27DA  3184         	fcall	_led_turnon_ramp
  9162  07CA  2FCC               	goto	l5780
  9163  07CB                     l5778:	
  9164                           
  9165                           ;app_led.c: 2021: else
  9166                           ;app_led.c: 2022: {
  9167                           ;app_led.c: 2023: led_turnoff_ramp();
  9168  07CB  27CF               	fcall	_led_turnoff_ramp
  9169  07CC                     l5780:	
  9170                           
  9171                           ;app_led.c: 2024: }
  9172                           ;app_led.c: 2025: }
  9173                           ;app_led.c: 2032: led_prepare_to_save();
  9174  07CC  318D  2581         	fcall	_led_prepare_to_save
  9175                           
  9176                           ;app_led.c: 2033: return 1;
  9177  07CE  3401               	retlw	1
  9178  07CF                     __end_of_led_set_mode:	
  9179  07CF                     __ptext45:	
  9180 ;; *************** function _led_turnoff_ramp *****************
  9181 ;; Defined at:
  9182 ;;		line 683 in file "src/app_led.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;		None
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  i               1   20[BANK0 ] unsigned char 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      void 
  9189 ;; Registers used:
  9190 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9191 ;; Tracked objects:
  9192 ;;		On entry : 1F/0
  9193 ;;		On exit  : 1F/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9197 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;Total ram usage:        1 bytes
  9201 ;; Hardware stack levels used:    1
  9202 ;; Hardware stack levels required when called:    6
  9203 ;; This function calls:
  9204 ;;		Nothing
  9205 ;; This function is called by:
  9206 ;;		_led_para_init
  9207 ;;		_led_set_mode
  9208 ;;		_led_set_power
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           
  9212                           
  9213                           ;psect for function _led_turnoff_ramp
  9214  07CF                     _led_turnoff_ramp:	
  9215  07CF                     l5268:	
  9216                           ;incstack = 0
  9217                           ; Regs used in _led_turnoff_ramp: [wreg+fsr1l+fsr1h+status,2+status,0]
  9218                           
  9219                           
  9220                           ;app_led.c: 685: for(uint8_t i = 0; i < 4; i++)
  9221  07CF  01B4               	clrf	led_turnoff_ramp@i
  9222  07D0                     l5274:	
  9223                           
  9224                           ;app_led.c: 686: {
  9225                           ;app_led.c: 687: target_bright[i] = 0;
  9226  07D0  3534               	lslf	led_turnoff_ramp@i,w
  9227  07D1  318F  2766  3184   	fcall	PL92	;call to abstracted procedure
  9228  07D4  3004               	movlw	4
  9229  07D5  0AB4               	incf	led_turnoff_ramp@i,f
  9230  07D6  0234               	subwf	led_turnoff_ramp@i,w
  9231  07D7  1803               	btfsc	3,0
  9232  07D8  0008               	return
  9233  07D9  2FD0               	goto	l5274
  9234  07DA                     __end_of_led_turnoff_ramp:	
  9235  07DA                     __ptext44:	
  9236 ;; *************** function _led_turnon_ramp *****************
  9237 ;; Defined at:
  9238 ;;		line 675 in file "src/app_led.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;		None
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;  i               1   24[BANK0 ] unsigned char 
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      void 
  9245 ;; Registers used:
  9246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9247 ;; Tracked objects:
  9248 ;;		On entry : 1F/0
  9249 ;;		On exit  : 1F/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9253 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9254 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9255 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9256 ;;Total ram usage:        5 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; Hardware stack levels required when called:    6
  9259 ;; This function calls:
  9260 ;;		Nothing
  9261 ;; This function is called by:
  9262 ;;		_led_para_init
  9263 ;;		_led_set_mode
  9264 ;;		_led_set_power
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           
  9269                           ;psect for function _led_turnon_ramp
  9270  07DA                     _led_turnon_ramp:	
  9271  07DA                     l5256:	
  9272                           ;incstack = 0
  9273                           ; Regs used in _led_turnon_ramp: [wreg-fsr1h+status,2+status,0]
  9274                           
  9275                           
  9276                           ;app_led.c: 677: for(uint8_t i = 0; i < 4; i++)
  9277  07DA  01B8               	clrf	led_turnon_ramp@i
  9278  07DB                     l5262:	
  9279                           
  9280                           ;app_led.c: 678: {
  9281                           ;app_led.c: 679: target_bright[i] = m_led_para.ble_para.manual_para.mBright[i];
  9282  07DB  0838               	movf	led_turnon_ramp@i,w
  9283  07DC  00B4               	movwf	??_led_turnon_ramp
  9284  07DD  3082               	movlw	130
  9285  07DE  01B5               	clrf	??_led_turnon_ramp+1
  9286  07DF  35B4               	lslf	??_led_turnon_ramp,f
  9287  07E0  0DB5               	rlf	??_led_turnon_ramp+1,f
  9288  07E1  00B6               	movwf	??_led_turnon_ramp+2
  9289  07E2  3023               	movlw	35
  9290  07E3  00B7               	movwf	??_led_turnon_ramp+3
  9291  07E4  0834               	movf	??_led_turnon_ramp,w
  9292  07E5  0736               	addwf	??_led_turnon_ramp+2,w
  9293  07E6  0086               	movwf	6
  9294  07E7  0835               	movf	??_led_turnon_ramp+1,w
  9295  07E8  3D37               	addwfc	??_led_turnon_ramp+3,w
  9296  07E9  0087               	movwf	7
  9297  07EA  3538               	lslf	led_turnon_ramp@i,w
  9298  07EB  3191  210D  3184   	fcall	PL80	;call to abstracted procedure
  9299  07EE  3004               	movlw	4
  9300  07EF  0AB8               	incf	led_turnon_ramp@i,f
  9301  07F0  0238               	subwf	led_turnon_ramp@i,w
  9302  07F1  1803               	btfsc	3,0
  9303  07F2  0008               	return
  9304  07F3  2FDB               	goto	l5262
  9305  07F4                     __end_of_led_turnon_ramp:	
  9306  07F4                     PL50:	
  9307  07F4  307E               	movlw	126
  9308  07F5  0086               	movwf	6
  9309  07F6  3023               	movlw	35
  9310  07F7  0087               	movwf	7
  9311  07F8  3143               	addfsr 1,3
  9312  07F9  0801               	movf	1,w
  9313  07FA  0008               	return
  9314  07FB                     __end_ofPL50:	
  9315                           
  9316                           	psect	text33
  9317  0C04                     __ptext33:	
  9318 ;; *************** function _ble_decode *****************
  9319 ;; Defined at:
  9320 ;;		line 284 in file "src/app_ble.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;		None
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;		None
  9325 ;; Return value:  Size  Location     Type
  9326 ;;                  1    wreg      void 
  9327 ;; Registers used:
  9328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9329 ;; Tracked objects:
  9330 ;;		On entry : 1F/2
  9331 ;;		On exit  : 0/0
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9338 ;;Total ram usage:        2 bytes
  9339 ;; Hardware stack levels used:    1
  9340 ;; Hardware stack levels required when called:    9
  9341 ;; This function calls:
  9342 ;;		___wmul
  9343 ;;		_ble_ota_ack
  9344 ;;		_ble_send_data
  9345 ;;		_led_decrease
  9346 ;;		_led_increase
  9347 ;;		_led_set_bright
  9348 ;;		_led_set_custom
  9349 ;;		_led_set_cycle
  9350 ;;		_led_set_dynamic
  9351 ;;		_led_set_mode
  9352 ;;		_led_set_period_dynamic
  9353 ;;		_led_set_power
  9354 ;;		_led_set_preview
  9355 ;;		_led_set_pro
  9356 ;;		_led_set_time
  9357 ;;		_led_start_flash
  9358 ;;		_led_start_preview
  9359 ;;		_led_stop_preview
  9360 ;; This function is called by:
  9361 ;;		_ble_process
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           
  9366                           ;psect for function _ble_decode
  9367  0C04                     _ble_decode:	
  9368  0C04                     l7614:	
  9369                           ;incstack = 0
  9370                           ; Regs used in _ble_decode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9371                           
  9372                           
  9373                           ;app_ble.c: 286: if(rx_buf[0] != 0x68 || checksum != 0)
  9374  0C04  3068               	movlw	104
  9375  0C05  0024               	movlb	4	; select bank4
  9376  0C06  0620               	xorwf	_rx_buf^(0+512),w
  9377  0C07  1D03               	btfss	3,2
  9378  0C08  0008               	return
  9379  0C09  0021               	movlb	1	; select bank1
  9380  0C0A  084D               	movf	_checksum^(0+128),w
  9381  0C0B  1D03               	btfss	3,2
  9382  0C0C  0008               	return
  9383  0C0D  2CCD               	goto	l7716
  9384  0C0E                     l7618:	
  9385                           
  9386                           ;app_ble.c: 295: if(index == 4)
  9387  0C0E  3004               	movlw	4
  9388  0C0F  067D               	xorwf	_index,w
  9389  0C10  1D03               	btfss	3,2
  9390  0C11  0008               	return
  9391                           
  9392                           ;app_ble.c: 296: {
  9393                           ;app_ble.c: 297: if(led_set_mode(rx_buf[2]))
  9394  0C12  0822               	movf	(_rx_buf^(0+512)+2),w
  9395  0C13  3187  279F  318C   	fcall	_led_set_mode
  9396  0C16                     L17:	
  9397  0C16  3A00               	xorlw	0
  9398  0C17  1903               	skipnz
  9399  0C18  0008               	return
  9400  0C19                     l7622:	
  9401                           
  9402                           ;app_ble.c: 298: {
  9403                           ;app_ble.c: 299: ble_send_data();
  9404  0C19  3196  2E4A         	ljmp	l5656
  9405  0C1B                     l7624:	
  9406                           
  9407                           ;app_ble.c: 304: if(index == 4)
  9408  0C1B  3004               	movlw	4
  9409  0C1C  067D               	xorwf	_index,w
  9410  0C1D  1D03               	btfss	3,2
  9411  0C1E  0008               	return
  9412                           
  9413                           ;app_ble.c: 305: {
  9414                           ;app_ble.c: 306: if(led_set_power(rx_buf[2]))
  9415  0C1F  0822               	movf	(_rx_buf^(0+512)+2),w
  9416  0C20  3187  2772  318C   	fcall	_led_set_power
  9417  0C23  2C16               	goto	L17
  9418  0C24                     l7630:	
  9419                           
  9420                           ;app_ble.c: 313: if(index == 3 + 2 * 4)
  9421  0C24  300B               	movlw	11
  9422  0C25  067D               	xorwf	_index,w
  9423  0C26  1D03               	btfss	3,2
  9424  0C27  0008               	return
  9425                           
  9426                           ;app_ble.c: 314: {
  9427                           ;app_ble.c: 315: led_set_bright(&rx_buf[2]);
  9428  0C28  3022               	movlw	(low ((_rx_buf| (0+512)+2)))& (0+255)
  9429  0C29  319B  2BEE         	ljmp	_led_set_bright
  9430  0C2B                     l7634:	
  9431                           
  9432                           ;app_ble.c: 319: if(index == 3)
  9433  0C2B  3003               	movlw	3
  9434  0C2C  067D               	xorwf	_index,w
  9435  0C2D  1D03               	btfss	3,2
  9436  0C2E  0008               	return
  9437  0C2F  2C19               	goto	l7622
  9438  0C30                     l7638:	
  9439                           
  9440                           ;app_ble.c: 325: if(index == 4)
  9441  0C30  3004               	movlw	4
  9442  0C31  067D               	xorwf	_index,w
  9443  0C32  1D03               	btfss	3,2
  9444  0C33  0008               	return
  9445                           
  9446                           ;app_ble.c: 326: {
  9447                           ;app_ble.c: 327: if(led_set_custom(rx_buf[2]))
  9448  0C34  0822               	movf	(_rx_buf^(0+512)+2),w
  9449  0C35  24D9  318C         	fcall	_led_set_custom
  9450  0C37  2C16               	goto	L17
  9451  0C38                     l7644:	
  9452                           
  9453                           ;app_ble.c: 334: if(index == 2 * 4 + 14)
  9454  0C38  3016               	movlw	22
  9455  0C39  067D               	xorwf	_index,w
  9456  0C3A  1D03               	btfss	3,2
  9457  0C3B  0008               	return
  9458                           
  9459                           ;app_ble.c: 335: {
  9460                           ;app_ble.c: 336: if(led_set_cycle(&rx_buf[2]))
  9461  0C3C  3022               	movlw	(low ((_rx_buf| (0+512)+2)))& (0+255)
  9462  0C3D  2559  318C         	fcall	_led_set_cycle
  9463  0C3F  2C16               	goto	L17
  9464  0C40                     l7650:	
  9465                           
  9466                           ;app_ble.c: 343: if(index == 5)
  9467  0C40  3005               	movlw	5
  9468  0C41  067D               	xorwf	_index,w
  9469  0C42  1D03               	btfss	3,2
  9470  0C43  0008               	return
  9471                           
  9472                           ;app_ble.c: 344: {
  9473                           ;app_ble.c: 345: led_increase(rx_buf[2], rx_buf[3]);
  9474  0C44  0823               	movf	(_rx_buf^(0+512)+3),w
  9475  0C45  0020               	movlb	0	; select bank0
  9476  0C46  00BD               	movwf	led_increase@delt
  9477  0C47  0024               	movlb	4	; select bank4
  9478  0C48  0822               	movf	(_rx_buf^(0+512)+2),w
  9479  0C49  3190  28A7         	ljmp	_led_increase
  9480  0C4B                     l7654:	
  9481                           
  9482                           ;app_ble.c: 349: if(index == 5)
  9483  0C4B  3005               	movlw	5
  9484  0C4C  067D               	xorwf	_index,w
  9485  0C4D  1D03               	btfss	3,2
  9486  0C4E  0008               	return
  9487                           
  9488                           ;app_ble.c: 350: {
  9489                           ;app_ble.c: 351: led_decrease(rx_buf[2], rx_buf[3]);
  9490  0C4F  0823               	movf	(_rx_buf^(0+512)+3),w
  9491  0C50  0020               	movlb	0	; select bank0
  9492  0C51  00BD               	movwf	led_decrease@delt
  9493  0C52  0024               	movlb	4	; select bank4
  9494  0C53  0822               	movf	(_rx_buf^(0+512)+2),w
  9495  0C54  3190  2842         	ljmp	_led_decrease
  9496  0C56                     l7658:	
  9497                           
  9498                           ;app_ble.c: 355: if(index == 3 + 2 * 4)
  9499  0C56  300B               	movlw	11
  9500  0C57  067D               	xorwf	_index,w
  9501  0C58  1D03               	btfss	3,2
  9502  0C59  0008               	return
  9503                           
  9504                           ;app_ble.c: 356: {
  9505                           ;app_ble.c: 357: if(led_set_preview(&rx_buf[2]))
  9506  0C5A  3022               	movlw	(low ((_rx_buf| (0+512)+2)))& (0+255)
  9507  0C5B  2774  318C         	fcall	_led_set_preview
  9508  0C5D  3A00               	xorlw	0
  9509  0C5E  1903               	skipnz
  9510  0C5F  0008               	return
  9511                           
  9512                           ;app_ble.c: 358: {
  9513                           ;app_ble.c: 359: led_start_preview();
  9514  0C60  2FF7               	ljmp	l5972
  9515  0C61                     l7664:	
  9516                           
  9517                           ;app_ble.c: 364: if(index == 3)
  9518  0C61  3003               	movlw	3
  9519  0C62  067D               	xorwf	_index,w
  9520  0C63  1D03               	btfss	3,2
  9521  0C64  0008               	return
  9522                           
  9523                           ;app_ble.c: 365: {
  9524                           ;app_ble.c: 366: led_stop_preview();
  9525  0C65  2FFC               	ljmp	l5976
  9526  0C66                     l7668:	
  9527                           
  9528                           ;app_ble.c: 370: if(index == 10)
  9529  0C66  300A               	movlw	10
  9530  0C67  067D               	xorwf	_index,w
  9531  0C68  1D03               	btfss	3,2
  9532  0C69  0008               	return
  9533                           
  9534                           ;app_ble.c: 371: {
  9535                           ;app_ble.c: 372: led_set_time(&rx_buf[2]);
  9536  0C6A  3022               	movlw	(low ((_rx_buf| (0+512)+2)))& (0+255)
  9537  0C6B  25DF  318C         	fcall	_led_set_time
  9538  0C6D  2C19               	goto	l7622
  9539  0C6E                     l7674:	
  9540                           
  9541                           ;app_ble.c: 377: if(index == 3)
  9542  0C6E  3003               	movlw	3
  9543  0C6F  067D               	xorwf	_index,w
  9544  0C70  1D03               	btfss	3,2
  9545  0C71  0008               	return
  9546                           
  9547                           ;app_ble.c: 378: {
  9548                           ;app_ble.c: 379: led_start_flash();
  9549  0C72  2DE2               	ljmp	l5982
  9550  0C73                     l7678:	
  9551                           
  9552                           ;app_ble.c: 383: if(rx_buf[2] >= 4 && rx_buf[2] <= 10 && index == rx_buf[2]*(2+4)+4)
  9553  0C73  3004               	movlw	4
  9554  0C74  0222               	subwf	(_rx_buf^(0+512)+2),w
  9555  0C75  1C03               	skipc
  9556  0C76  0008               	return
  9557  0C77  300B               	movlw	11
  9558  0C78  0222               	subwf	(_rx_buf^(0+512)+2),w
  9559  0C79  1803               	skipnc
  9560  0C7A  0008               	return
  9561  0C7B  0822               	movf	(_rx_buf^(0+512)+2),w
  9562  0C7C  0020               	movlb	0	; select bank0
  9563  0C7D  319F  2799  318C   	fcall	PL58	;call to abstracted procedure
  9564  0C80  319F  270B  318C   	fcall	___wmul
  9565  0C83  0834               	movf	?___wmul,w
  9566  0C84  3E04               	addlw	4
  9567  0C85  00C3               	movwf	??_ble_decode
  9568  0C86  3000               	movlw	0
  9569  0C87  3D35               	addwfc	?___wmul+1,w
  9570  0C88  00C4               	movwf	??_ble_decode+1
  9571  0C89  087D               	movf	_index,w
  9572  0C8A  0643               	xorwf	??_ble_decode,w
  9573  0C8B  0444               	iorwf	??_ble_decode+1,w
  9574  0C8C  1D03               	skipz
  9575  0C8D  0008               	return
  9576                           
  9577                           ;app_ble.c: 384: {
  9578                           ;app_ble.c: 385: if(led_set_pro(&rx_buf[2]))
  9579  0C8E  3022               	movlw	(low ((_rx_buf| (0+512)+2)))& (0+255)
  9580  0C8F  27B0  318C         	fcall	_led_set_pro
  9581  0C91  2C16               	goto	L17
  9582  0C92                     l7688:	
  9583                           
  9584                           ;app_ble.c: 393: if(index == 4)
  9585  0C92  3004               	movlw	4
  9586  0C93  067D               	xorwf	_index,w
  9587  0C94  1D03               	btfss	3,2
  9588  0C95  0008               	return
  9589                           
  9590                           ;app_ble.c: 394: {
  9591                           ;app_ble.c: 395: if(led_set_dynamic(rx_buf[2]))
  9592  0C96  0822               	movf	(_rx_buf^(0+512)+2),w
  9593  0C97  2586  318C         	fcall	_led_set_dynamic
  9594  0C99  2C16               	goto	L17
  9595  0C9A                     l7694:	
  9596                           
  9597                           ;app_ble.c: 402: if(index == 9)
  9598  0C9A  3009               	movlw	9
  9599  0C9B  067D               	xorwf	_index,w
  9600  0C9C  1D03               	btfss	3,2
  9601  0C9D  0008               	return
  9602                           
  9603                           ;app_ble.c: 403: {
  9604                           ;app_ble.c: 404: led_set_period_dynamic(&rx_buf[2]);
  9605  0C9E  3022               	movlw	(low ((_rx_buf| (0+512)+2)))& (0+255)
  9606  0C9F  319B  2353         	fcall	_led_set_period_dynamic
  9607                           
  9608                           ;app_ble.c: 405: ble_send_data();
  9609  0CA1  3196  2E4A         	ljmp	l5656
  9610  0CA3                     l7698:	
  9611                           
  9612                           ;app_ble.c: 410: if(index == 5)
  9613  0CA3  3005               	movlw	5
  9614  0CA4  067D               	xorwf	_index,w
  9615  0CA5  1D03               	btfss	3,2
  9616  0CA6  0008               	return
  9617                           
  9618                           ;app_ble.c: 411: {
  9619                           ;app_ble.c: 412: INTCONbits.GIE = 0;
  9620  0CA7  138B               	bcf	11,7	;volatile
  9621                           
  9622                           ;app_ble.c: 413: NVMADR = 8192 - 1;
  9623  0CA8  301F               	movlw	31
  9624  0CA9  0031               	movlb	17	; select bank17
  9625  0CAA  0092               	movwf	18	;volatile
  9626  0CAB  30FF               	movlw	255
  9627  0CAC  0091               	movwf	17	;volatile
  9628                           
  9629                           ;app_ble.c: 414: NVMCON1 = 0x94;
  9630  0CAD  3094               	movlw	148
  9631  0CAE  0095               	movwf	21	;volsfr
  9632                           
  9633                           ;app_ble.c: 415: NVMCON2 = 0x55;
  9634  0CAF  3055               	movlw	85
  9635  0CB0  0096               	movwf	22	;volsfr
  9636                           
  9637                           ;app_ble.c: 416: NVMCON2 = 0xAA;
  9638  0CB1  30AA               	movlw	170
  9639  0CB2  0096               	movwf	22	;volsfr
  9640                           
  9641                           ;app_ble.c: 417: NVMCON1bits.WR = 1;
  9642  0CB3  1495               	bsf	21,1	;volsfr
  9643                           
  9644                           ;app_ble.c: 418: __nop();
  9645  0CB4  0000               	nop
  9646                           
  9647                           ;app_ble.c: 419: __nop();
  9648  0CB5  0000               	nop
  9649  0CB6                     l522:	
  9650                           ;app_ble.c: 420: while(NVMCON1bits.WR);
  9651                           
  9652  0CB6  0031               	movlb	17	; select bank17
  9653  0CB7  1895               	btfsc	21,1	;volsfr
  9654  0CB8  2CB6               	goto	l522
  9655                           
  9656                           ;app_ble.c: 421: NVMCON1bits.WREN = 0;
  9657  0CB9  1115               	bcf	21,2	;volsfr
  9658                           
  9659                           ;app_ble.c: 422: INTCONbits.GIE = 1;
  9660  0CBA  178B               	bsf	11,7	;volatile
  9661                           
  9662                           ;app_ble.c: 423: ble_ota_ack();
  9663  0CBB  3194  2441  318C   	fcall	_ble_ota_ack
  9664                           
  9665                           ;app_ble.c: 424: _delay((unsigned long)((96)*(16000000/4000.0)));
  9666  0CBE  3002               	movlw	2
  9667  0CBF  0020               	movlb	0	; select bank0
  9668  0CC0  00C4               	movwf	??_ble_decode+1
  9669  0CC1  30F3               	movlw	243
  9670  0CC2  00C3               	movwf	??_ble_decode
  9671  0CC3  30B0               	movlw	176
  9672  0CC4                     u7667:	
  9673  0CC4  0B89               	decfsz	9,f
  9674  0CC5  2CC4               	goto	u7667
  9675  0CC6  0BC3               	decfsz	??_ble_decode,f
  9676  0CC7  2CC4               	goto	u7667
  9677  0CC8  0BC4               	decfsz	??_ble_decode+1,f
  9678  0CC9  2CC4               	goto	u7667
  9679  0CCA  0000               	nop
  9680  0CCB  0001               	reset	;# 
  9681  0CCC  0008               	return
  9682  0CCD                     l7716:	
  9683  0CCD  0024               	movlb	4	; select bank4
  9684  0CCE  0821               	movf	(_rx_buf^(0+512)+1),w
  9685                           
  9686                           ; Switch size 1, requested type "space"
  9687                           ; Number of cases is 16, Range of values is 0 to 17
  9688                           ; switch strategies available:
  9689                           ; Name         Instructions Cycles
  9690                           ; direct_byte           42     6 (fixed)
  9691                           ; simple_byte           49    25 (average)
  9692                           ; jumptable            260     6 (fixed)
  9693                           ;	Chosen strategy is direct_byte
  9694  0CCF  0084               	movwf	4
  9695  0CD0  3012               	movlw	18
  9696  0CD1  0204               	subwf	4,w
  9697  0CD2  1803               	skipnc
  9698  0CD3  0008               	return
  9699  0CD4  3198               	movlp	high S8362
  9700  0CD5  3504               	lslf	4,w
  9701  0CD6  3E96               	addlw	low S8362
  9702  0CD7  0082               	movwf	2
  9703  0CD8                     l480:	
  9704  0CD8  0008               	return
  9705  0CD9                     __end_of_ble_decode:	
  9706  0CD9                     __ptext61:	
  9707 ;; *************** function _led_set_custom *****************
  9708 ;; Defined at:
  9709 ;;		line 2094 in file "src/app_led.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;  idx             1    wreg     unsigned char 
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;  idx             1   27[BANK0 ] unsigned char 
  9714 ;;  i               1   28[BANK0 ] unsigned char 
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  1    wreg      unsigned char 
  9717 ;; Registers used:
  9718 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9719 ;; Tracked objects:
  9720 ;;		On entry : 1F/4
  9721 ;;		On exit  : 1E/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9726 ;;      Temps:          0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  9727 ;;      Totals:         0       2      15       0       0       0       0       0       0       0       0       0       
      +0       0
  9728 ;;Total ram usage:       17 bytes
  9729 ;; Hardware stack levels used:    1
  9730 ;; Hardware stack levels required when called:    7
  9731 ;; This function calls:
  9732 ;;		___lwdiv
  9733 ;;		_led_prepare_to_save
  9734 ;; This function is called by:
  9735 ;;		_ble_decode
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           
  9740                           ;psect for function _led_set_custom
  9741  0CD9                     _led_set_custom:	
  9742                           
  9743                           ;incstack = 0
  9744                           ; Regs used in _led_set_custom: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9745                           ;led_set_custom@idx stored from wreg
  9746  0CD9  0020               	movlb	0	; select bank0
  9747  0CDA  00BB               	movwf	led_set_custom@idx
  9748                           
  9749                           ;app_led.c: 2101: if(dynamic_run_mode > 0 && dynamic_run_mode < 13)
  9750  0CDB  087C               	movf	_dynamic_run_mode,w	;volatile
  9751  0CDC  1903               	btfsc	3,2
  9752  0CDD  2CE2               	goto	l7432
  9753  0CDE  300D               	movlw	13
  9754  0CDF  027C               	subwf	_dynamic_run_mode,w	;volatile
  9755  0CE0  1C03               	btfss	3,0
  9756                           
  9757                           ;app_led.c: 2102: {
  9758                           ;app_led.c: 2103: return 0;
  9759  0CE1  3400               	retlw	0
  9760  0CE2                     l7432:	
  9761                           
  9762                           ;app_led.c: 2104: }
  9763                           ;app_led.c: 2106: if(m_led_para.ble_para.manual_para.mOn && idx < 4)
  9764  0CE2  2760  318C         	fcall	PL40	;call to abstracted procedure
  9765  0CE4  1C01               	btfss	1,0
  9766  0CE5  3400               	retlw	0
  9767  0CE6  3004               	movlw	4
  9768  0CE7  023B               	subwf	led_set_custom@idx,w
  9769  0CE8  1803               	skipnc
  9770  0CE9  3400               	retlw	0
  9771                           
  9772                           ;app_led.c: 2107: {
  9773                           ;app_led.c: 2108: for(uint8_t i = 0; i < 4; i++)
  9774  0CEA  01BC               	clrf	led_set_custom@i
  9775  0CEB                     l7442:	
  9776                           
  9777                           ;app_led.c: 2109: {
  9778                           ;app_led.c: 2110: m_led_para.ble_para.manual_para.mCustomBright[idx][i] = m_led_para.ble
      +                          _para.manual_para.mBright[i]/10;
  9779  0CEB  300A               	movlw	10
  9780  0CEC  00B4               	movwf	___lwdiv@divisor
  9781  0CED  01B5               	clrf	___lwdiv@divisor+1
  9782  0CEE  083C               	movf	led_set_custom@i,w
  9783  0CEF  0021               	movlb	1	; select bank1
  9784  0CF0  00A0               	movwf	??_led_set_custom^(0+128)
  9785  0CF1  3082               	movlw	130
  9786  0CF2  01A1               	clrf	(??_led_set_custom^(0+128)+1)
  9787  0CF3  35A0               	lslf	??_led_set_custom^(0+128),f
  9788  0CF4  0DA1               	rlf	(??_led_set_custom^(0+128)+1),f
  9789  0CF5  00A2               	movwf	(??_led_set_custom+2)^(0+128)
  9790  0CF6  3023               	movlw	35
  9791  0CF7  00A3               	movwf	((??_led_set_custom+2)^(0+128)+1)
  9792  0CF8  0820               	movf	??_led_set_custom^(0+128),w
  9793  0CF9  0722               	addwf	(??_led_set_custom+2)^(0+128),w
  9794  0CFA  0086               	movwf	6
  9795  0CFB  0821               	movf	(??_led_set_custom+1)^(0+128),w
  9796  0CFC  3D23               	addwfc	(??_led_set_custom+3)^(0+128),w
  9797  0CFD  0087               	movwf	7
  9798  0CFE  3F40               	moviw [0]fsr1
  9799  0CFF  0020               	movlb	0	; select bank0
  9800  0D00  00B6               	movwf	___lwdiv@dividend
  9801  0D01  3F41               	moviw [1]fsr1
  9802  0D02  00B7               	movwf	___lwdiv@dividend+1
  9803  0D03  2534  318C         	fcall	___lwdiv
  9804  0D05  0834               	movf	?___lwdiv,w
  9805  0D06  0021               	movlb	1	; select bank1
  9806  0D07  00A4               	movwf	(??_led_set_custom+4)^(0+128)
  9807  0D08  0020               	movlb	0	; select bank0
  9808  0D09  083C               	movf	led_set_custom@i,w
  9809  0D0A  0021               	movlb	1	; select bank1
  9810  0D0B  00A5               	movwf	(??_led_set_custom+5)^(0+128)
  9811  0D0C  01A6               	clrf	((??_led_set_custom+5)^(0+128)+1)
  9812  0D0D  0020               	movlb	0	; select bank0
  9813  0D0E  083B               	movf	led_set_custom@idx,w
  9814  0D0F  0021               	movlb	1	; select bank1
  9815  0D10  00A7               	movwf	(??_led_set_custom+7)^(0+128)
  9816  0D11  308A               	movlw	138
  9817  0D12  01A8               	clrf	((??_led_set_custom+7)^(0+128)+1)
  9818  0D13  35A7               	lslf	(??_led_set_custom+7)^(0+128),f
  9819  0D14  0DA8               	rlf	((??_led_set_custom+7)^(0+128)+1),f
  9820  0D15  35A7               	lslf	(??_led_set_custom+7)^(0+128),f
  9821  0D16  0DA8               	rlf	((??_led_set_custom+7)^(0+128)+1),f
  9822  0D17  00A9               	movwf	(??_led_set_custom+9)^(0+128)
  9823  0D18  3023               	movlw	35
  9824  0D19  00AA               	movwf	((??_led_set_custom+9)^(0+128)+1)
  9825  0D1A  0827               	movf	(??_led_set_custom+7)^(0+128),w
  9826  0D1B  0729               	addwf	(??_led_set_custom+9)^(0+128),w
  9827  0D1C  00AB               	movwf	(??_led_set_custom+11)^(0+128)
  9828  0D1D  0828               	movf	(??_led_set_custom+8)^(0+128),w
  9829  0D1E  3D2A               	addwfc	(??_led_set_custom+10)^(0+128),w
  9830  0D1F  00AC               	movwf	(??_led_set_custom+12)^(0+128)
  9831  0D20  0825               	movf	(??_led_set_custom+5)^(0+128),w
  9832  0D21  072B               	addwf	(??_led_set_custom+11)^(0+128),w
  9833  0D22  00AD               	movwf	(??_led_set_custom+13)^(0+128)
  9834  0D23  0826               	movf	(??_led_set_custom+6)^(0+128),w
  9835  0D24  3D2C               	addwfc	(??_led_set_custom+12)^(0+128),w
  9836  0D25  00AE               	movwf	(??_led_set_custom+14)^(0+128)
  9837  0D26  082D               	movf	(??_led_set_custom+13)^(0+128),w
  9838  0D27  0086               	movwf	6
  9839  0D28  082E               	movf	(??_led_set_custom+14)^(0+128),w
  9840  0D29  0087               	movwf	7
  9841  0D2A  0824               	movf	(??_led_set_custom+4)^(0+128),w
  9842  0D2B  0081               	movwf	1
  9843  0D2C  0020               	movlb	0	; select bank0
  9844  0D2D  3004               	movlw	4
  9845  0D2E  0ABC               	incf	led_set_custom@i,f
  9846  0D2F  023C               	subwf	led_set_custom@i,w
  9847  0D30  1C03               	skipc
  9848  0D31  2CEB               	goto	l7442
  9849                           
  9850                           ;app_led.c: 2111: }
  9851                           ;app_led.c: 2112: led_prepare_to_save();
  9852  0D32  2581               	fcall	_led_prepare_to_save
  9853                           
  9854                           ;app_led.c: 2113: return 1;
  9855  0D33  3401               	retlw	1
  9856  0D34                     __end_of_led_set_custom:	
  9857  0D34                     __ptext62:	
  9858 ;; *************** function ___lwdiv *****************
  9859 ;; Defined at:
  9860 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  9861 ;; Parameters:    Size  Location     Type
  9862 ;;  divisor         2   20[BANK0 ] unsigned int 
  9863 ;;  dividend        2   22[BANK0 ] unsigned int 
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;  quotient        2   24[BANK0 ] unsigned int 
  9866 ;;  counter         1   26[BANK0 ] unsigned char 
  9867 ;; Return value:  Size  Location     Type
  9868 ;;                  2   20[BANK0 ] unsigned int 
  9869 ;; Registers used:
  9870 ;;		wreg, status,2, status,0
  9871 ;; Tracked objects:
  9872 ;;		On entry : 1F/0
  9873 ;;		On exit  : 1F/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9876 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9877 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9879 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9880 ;;Total ram usage:        7 bytes
  9881 ;; Hardware stack levels used:    1
  9882 ;; Hardware stack levels required when called:    6
  9883 ;; This function calls:
  9884 ;;		Nothing
  9885 ;; This function is called by:
  9886 ;;		_led_set_custom
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           
  9891                           ;psect for function ___lwdiv
  9892  0D34                     ___lwdiv:	
  9893                           
  9894                           ;incstack = 0
  9895                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9896  0D34  01B8               	clrf	___lwdiv@quotient
  9897  0D35  01B9               	clrf	___lwdiv@quotient+1
  9898  0D36  0834               	movf	___lwdiv@divisor,w
  9899  0D37  0435               	iorwf	___lwdiv@divisor+1,w
  9900  0D38  1903               	btfsc	3,2
  9901  0D39  2D54               	goto	l5540
  9902  0D3A  01BA               	clrf	___lwdiv@counter
  9903  0D3B                     L19:	
  9904  0D3B  0ABA               	incf	___lwdiv@counter,f
  9905  0D3C  1BB5               	btfsc	___lwdiv@divisor+1,7
  9906  0D3D  2D41               	goto	l5528
  9907  0D3E  35B4               	lslf	___lwdiv@divisor,f
  9908  0D3F  0DB5               	rlf	___lwdiv@divisor+1,f
  9909  0D40  2D3B               	goto	L19
  9910  0D41                     l5528:	
  9911  0D41  35B8               	lslf	___lwdiv@quotient,f
  9912  0D42  0DB9               	rlf	___lwdiv@quotient+1,f
  9913  0D43  0835               	movf	___lwdiv@divisor+1,w
  9914  0D44  0237               	subwf	___lwdiv@dividend+1,w
  9915  0D45  1D03               	skipz
  9916  0D46  2D49               	goto	u3625
  9917  0D47  0834               	movf	___lwdiv@divisor,w
  9918  0D48  0236               	subwf	___lwdiv@dividend,w
  9919  0D49                     u3625:	
  9920  0D49  1C03               	skipc
  9921  0D4A  2D50               	goto	l5536
  9922  0D4B  0834               	movf	___lwdiv@divisor,w
  9923  0D4C  02B6               	subwf	___lwdiv@dividend,f
  9924  0D4D  0835               	movf	___lwdiv@divisor+1,w
  9925  0D4E  3BB7               	subwfb	___lwdiv@dividend+1,f
  9926  0D4F  1438               	bsf	___lwdiv@quotient,0
  9927  0D50                     l5536:	
  9928  0D50  36B5               	lsrf	___lwdiv@divisor+1,f
  9929  0D51  0CB4               	rrf	___lwdiv@divisor,f
  9930  0D52  0BBA               	decfsz	___lwdiv@counter,f
  9931  0D53  2D41               	goto	l5528
  9932  0D54                     l5540:	
  9933  0D54  0839               	movf	___lwdiv@quotient+1,w
  9934  0D55  00B5               	movwf	?___lwdiv+1
  9935  0D56  0838               	movf	___lwdiv@quotient,w
  9936  0D57  00B4               	movwf	?___lwdiv
  9937  0D58  0008               	return
  9938  0D59                     __end_of___lwdiv:	
  9939  0D59                     __ptext60:	
  9940 ;; *************** function _led_set_cycle *****************
  9941 ;; Defined at:
  9942 ;;		line 2118 in file "src/app_led.c"
  9943 ;; Parameters:    Size  Location     Type
  9944 ;;  pbuf            1    wreg     const PTR const unsigned
  9945 ;;		 -> rx_buf(80), 
  9946 ;; Auto vars:     Size  Location     Type
  9947 ;;  pbuf            1   29[BANK0 ] const PTR const unsigned
  9948 ;;		 -> rx_buf(80), 
  9949 ;;  i               1   30[BANK0 ] unsigned char 
  9950 ;;  len             1   28[BANK0 ] unsigned char 
  9951 ;; Return value:  Size  Location     Type
  9952 ;;                  1    wreg      unsigned char 
  9953 ;; Registers used:
  9954 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9955 ;; Tracked objects:
  9956 ;;		On entry : 19/4
  9957 ;;		On exit  : 1F/1
  9958 ;;		Unchanged: 0/0
  9959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9961 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9962 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9963 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9964 ;;Total ram usage:       11 bytes
  9965 ;; Hardware stack levels used:    1
  9966 ;; Hardware stack levels required when called:    7
  9967 ;; This function calls:
  9968 ;;		_led_prepare_to_save
  9969 ;; This function is called by:
  9970 ;;		_ble_decode
  9971 ;; This function uses a non-reentrant model
  9972 ;;
  9973                           
  9974                           
  9975                           ;psect for function _led_set_cycle
  9976  0D59                     _led_set_cycle:	
  9977                           
  9978                           ;incstack = 0
  9979                           ; Regs used in _led_set_cycle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9980                           ;led_set_cycle@pbuf stored from wreg
  9981  0D59  0020               	movlb	0	; select bank0
  9982  0D5A  00BD               	movwf	led_set_cycle@pbuf
  9983                           
  9984                           ;app_led.c: 2124: uint8_t len = sizeof(m_led_para.ble_para.auto_para.array);
  9985  0D5B  3013               	movlw	19
  9986  0D5C  00BC               	movwf	led_set_cycle@len
  9987                           
  9988                           ;app_led.c: 2125: for(uint8_t i = 0; i < len; i++)
  9989  0D5D  01BE               	clrf	led_set_cycle@i
  9990  0D5E                     l5892:	
  9991  0D5E  083C               	movf	led_set_cycle@len,w
  9992  0D5F  023E               	subwf	led_set_cycle@i,w
  9993  0D60  1803               	btfsc	3,0
  9994  0D61  2D7F               	goto	l5894
  9995                           
  9996                           ;app_led.c: 2126: {
  9997                           ;app_led.c: 2127: m_led_para.ble_para.auto_para.array[i] = *(pbuf+i);
  9998  0D62  083E               	movf	led_set_cycle@i,w
  9999  0D63  073D               	addwf	led_set_cycle@pbuf,w
 10000  0D64  00B4               	movwf	??_led_set_cycle
 10001  0D65  0086               	movwf	6
 10002  0D66  3002               	movlw	2	; select bank4/5
 10003  0D67  0087               	movwf	7
 10004  0D68  0801               	movf	1,w
 10005  0D69  00B5               	movwf	??_led_set_cycle+1
 10006  0D6A  083E               	movf	led_set_cycle@i,w
 10007  0D6B  00B6               	movwf	??_led_set_cycle+2
 10008  0D6C  309A               	movlw	154
 10009  0D6D  01B7               	clrf	??_led_set_cycle+3
 10010  0D6E  00B8               	movwf	??_led_set_cycle+4
 10011  0D6F  3023               	movlw	35
 10012  0D70  00B9               	movwf	??_led_set_cycle+5
 10013  0D71  0836               	movf	??_led_set_cycle+2,w
 10014  0D72  0738               	addwf	??_led_set_cycle+4,w
 10015  0D73  00BA               	movwf	??_led_set_cycle+6
 10016  0D74  0837               	movf	??_led_set_cycle+3,w
 10017  0D75  3D39               	addwfc	??_led_set_cycle+5,w
 10018  0D76  00BB               	movwf	??_led_set_cycle+7
 10019  0D77  083A               	movf	??_led_set_cycle+6,w
 10020  0D78  0086               	movwf	6
 10021  0D79  083B               	movf	??_led_set_cycle+7,w
 10022  0D7A  0087               	movwf	7
 10023  0D7B  0835               	movf	??_led_set_cycle+1,w
 10024  0D7C  0081               	movwf	1
 10025  0D7D  0ABE               	incf	led_set_cycle@i,f
 10026  0D7E  2D5E               	goto	l5892
 10027  0D7F                     l5894:	
 10028                           
 10029                           ;app_led.c: 2128: }
 10030                           ;app_led.c: 2129: led_prepare_to_save();
 10031  0D7F  2581               	fcall	_led_prepare_to_save
 10032                           
 10033                           ;app_led.c: 2130: return 1;
 10034  0D80  3401               	retlw	1
 10035  0D81                     __end_of_led_set_cycle:	
 10036  0D81                     __ptext67:	
 10037 ;; *************** function _led_prepare_to_save *****************
 10038 ;; Defined at:
 10039 ;;		line 1919 in file "src/app_led.c"
 10040 ;; Parameters:    Size  Location     Type
 10041 ;;		None
 10042 ;; Auto vars:     Size  Location     Type
 10043 ;;		None
 10044 ;; Return value:  Size  Location     Type
 10045 ;;                  1    wreg      void 
 10046 ;; Registers used:
 10047 ;;		wreg
 10048 ;; Tracked objects:
 10049 ;;		On entry : 1E/0
 10050 ;;		On exit  : 1F/1
 10051 ;;		Unchanged: 0/0
 10052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10057 ;;Total ram usage:        0 bytes
 10058 ;; Hardware stack levels used:    1
 10059 ;; Hardware stack levels required when called:    6
 10060 ;; This function calls:
 10061 ;;		Nothing
 10062 ;; This function is called by:
 10063 ;;		_led_set_dynamic
 10064 ;;		_led_set_period_dynamic
 10065 ;;		_led_set_mode
 10066 ;;		_led_set_power
 10067 ;;		_led_set_bright
 10068 ;;		_led_set_custom
 10069 ;;		_led_set_cycle
 10070 ;;		_led_set_pro
 10071 ;;		_led_increase
 10072 ;;		_led_decrease
 10073 ;; This function uses a non-reentrant model
 10074 ;;
 10075                           
 10076                           
 10077                           ;psect for function _led_prepare_to_save
 10078  0D81                     _led_prepare_to_save:	
 10079  0D81                     l5446:	
 10080                           ;incstack = 0
 10081                           ; Regs used in _led_prepare_to_save: [wreg]
 10082                           
 10083                           
 10084                           ;app_led.c: 1921: led_run_para.mSave = 1;
 10085  0D81  0021               	movlb	1	; select bank1
 10086  0D82  3003               	movlw	3
 10087  0D83  1542               	bsf	_led_run_para^(0+128),2
 10088                           
 10089                           ;app_led.c: 1922: led_run_para.save_delay_count = 3;
 10090  0D84  00C5               	movwf	(_led_run_para^(0+128)+3)
 10091  0D85  0008               	return
 10092  0D86                     __end_of_led_prepare_to_save:	
 10093  0D86                     __ptext46:	
 10094 ;; *************** function _led_set_dynamic *****************
 10095 ;; Defined at:
 10096 ;;		line 1814 in file "src/app_led.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;  dyn             1    wreg     unsigned char 
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;  dyn             1   28[BANK0 ] unsigned char 
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  1    wreg      unsigned char 
 10103 ;; Registers used:
 10104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10105 ;; Tracked objects:
 10106 ;;		On entry : 1F/4
 10107 ;;		On exit  : 1E/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10111 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10113 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10114 ;;Total ram usage:        1 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:    8
 10117 ;; This function calls:
 10118 ;;		_led_dynamic_init
 10119 ;;		_led_prepare_to_save
 10120 ;;		_led_sunrs_init
 10121 ;; This function is called by:
 10122 ;;		_ble_decode
 10123 ;; This function uses a non-reentrant model
 10124 ;;
 10125                           
 10126                           
 10127                           ;psect for function _led_set_dynamic
 10128  0D86                     _led_set_dynamic:	
 10129                           
 10130                           ;incstack = 0
 10131                           ; Regs used in _led_set_dynamic: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10132                           ;led_set_dynamic@dyn stored from wreg
 10133  0D86  0020               	movlb	0	; select bank0
 10134  0D87  00BC               	movwf	led_set_dynamic@dyn
 10135                           
 10136                           ;app_led.c: 1816: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0)
 10137  0D88  0021               	movlb	1	; select bank1
 10138  0D89  1C42               	btfss	_led_run_para^(0+128),0
 10139  0D8A  18C2               	btfsc	_led_run_para^(0+128),1
 10140  0D8B  3400               	retlw	0
 10141  0D8C  26DF  318C         	fcall	PL4	;call to abstracted procedure
 10142  0D8E  1D03               	btfss	3,2
 10143                           
 10144                           ;app_led.c: 1817: {
 10145                           ;app_led.c: 1818: return 0;
 10146  0D8F  3400               	retlw	0
 10147                           
 10148                           ;app_led.c: 1819: }
 10149                           ;app_led.c: 1820: if(dyn == 0 || dyn > 13)
 10150  0D90  0020               	movlb	0	; select bank0
 10151  0D91  083C               	movf	led_set_dynamic@dyn,w
 10152  0D92  1903               	btfsc	3,2
 10153  0D93  3400               	retlw	0
 10154  0D94  300E               	movlw	14
 10155  0D95  023C               	subwf	led_set_dynamic@dyn,w
 10156  0D96  1803               	btfsc	3,0
 10157  0D97  3400               	retlw	0
 10158                           
 10159                           ;app_led.c: 1823: }
 10160                           ;app_led.c: 1824: if(dyn == 12)
 10161  0D98  300C               	movlw	12
 10162  0D99  063C               	xorwf	led_set_dynamic@dyn,w
 10163  0D9A  1D03               	btfss	3,2
 10164  0D9B  2DA3               	goto	l6032
 10165                           
 10166                           ;app_led.c: 1825: {
 10167                           ;app_led.c: 1826: led_sunrs_init();
 10168  0D9C  26E7               	fcall	_led_sunrs_init
 10169                           
 10170                           ;app_led.c: 1827: m_led_para.ble_para.manual_para.mDyn = 0;
 10171  0D9D  307E               	movlw	126
 10172  0D9E  3187  2750  318C   	fcall	PL134	;call to abstracted procedure
 10173                           
 10174                           ;app_led.c: 1828: led_prepare_to_save();
 10175  0DA1  2581               	fcall	_led_prepare_to_save
 10176                           
 10177                           ;app_led.c: 1829: return 1;
 10178  0DA2  3401               	retlw	1
 10179  0DA3                     l6032:	
 10180                           
 10181                           ;app_led.c: 1830: }
 10182                           ;app_led.c: 1831: if(m_led_para.ble_para.manual_para.mOn)
 10183  0DA3  2760  318C         	fcall	PL40	;call to abstracted procedure
 10184  0DA5  1C01               	btfss	1,0
 10185  0DA6  3400               	retlw	0
 10186                           
 10187                           ;app_led.c: 1832: {
 10188                           ;app_led.c: 1833: if(dyn > 0 && dyn < 12)
 10189  0DA7  083C               	movf	led_set_dynamic@dyn,w
 10190  0DA8  1903               	btfsc	3,2
 10191  0DA9  2DBA               	goto	l6048
 10192  0DAA  300C               	movlw	12
 10193  0DAB  023C               	subwf	led_set_dynamic@dyn,w
 10194  0DAC  1803               	skipnc
 10195  0DAD  2DBA               	goto	l6048
 10196                           
 10197                           ;app_led.c: 1834: {
 10198                           ;app_led.c: 1835: led_dynamic_init(dyn);
 10199  0DAE  083C               	movf	led_set_dynamic@dyn,w
 10200  0DAF  25CD  318C         	fcall	_led_dynamic_init
 10201                           
 10202                           ;app_led.c: 1836: m_led_para.ble_para.manual_para.mDyn = dyn;
 10203  0DB1  3081               	movlw	129
 10204  0DB2  0086               	movwf	6
 10205  0DB3  3023               	movlw	35
 10206  0DB4  0087               	movwf	7
 10207  0DB5  0020               	movlb	0	; select bank0
 10208  0DB6  083C               	movf	led_set_dynamic@dyn,w
 10209  0DB7  0081               	movwf	1
 10210                           
 10211                           ;app_led.c: 1837: led_prepare_to_save();
 10212  0DB8  2581               	fcall	_led_prepare_to_save
 10213                           
 10214                           ;app_led.c: 1838: return 1;
 10215  0DB9  3401               	retlw	1
 10216  0DBA                     l6048:	
 10217                           
 10218                           ;app_led.c: 1840: else if(dyn == 13 && dynamic_run_mode > 0 && dynamic_run_mode < 12)
 10219  0DBA  300D               	movlw	13
 10220  0DBB  063C               	xorwf	led_set_dynamic@dyn,w
 10221  0DBC  1D03               	btfss	3,2
 10222  0DBD  3400               	retlw	0
 10223  0DBE  087C               	movf	_dynamic_run_mode,w	;volatile
 10224  0DBF  1903               	btfsc	3,2
 10225  0DC0  3400               	retlw	0
 10226  0DC1  300C               	movlw	12
 10227  0DC2  027C               	subwf	_dynamic_run_mode,w	;volatile
 10228  0DC3  1803               	skipnc
 10229  0DC4  3400               	retlw	0
 10230                           
 10231                           ;app_led.c: 1841: {
 10232                           ;app_led.c: 1842: dynamic_run_pause = !dynamic_run_pause;
 10233  0DC5  0850               	movf	_dynamic_run_pause,w	;volatile
 10234  0DC6  1D03               	btfss	3,2
 10235  0DC7  2DCA               	goto	u4430
 10236  0DC8  3001               	movlw	1
 10237  0DC9  2DCB               	goto	u4440
 10238  0DCA                     u4430:	
 10239  0DCA  3000               	movlw	0
 10240  0DCB                     u4440:	
 10241  0DCB  00D0               	movwf	_dynamic_run_pause	;volatile
 10242  0DCC  3401               	retlw	1
 10243  0DCD                     __end_of_led_set_dynamic:	
 10244  0DCD                     __ptext48:	
 10245 ;; *************** function _led_dynamic_init *****************
 10246 ;; Defined at:
 10247 ;;		line 1803 in file "src/app_led.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;  dyn             1    wreg     unsigned char 
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;  dyn             1   20[BANK0 ] unsigned char 
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  1    wreg      void 
 10254 ;; Registers used:
 10255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10256 ;; Tracked objects:
 10257 ;;		On entry : 1F/0
 10258 ;;		On exit  : 1F/1
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;Total ram usage:        1 bytes
 10266 ;; Hardware stack levels used:    1
 10267 ;; Hardware stack levels required when called:    7
 10268 ;; This function calls:
 10269 ;;		_led_allcolor_init
 10270 ;;		_led_cloud1_init
 10271 ;;		_led_cloud2_init
 10272 ;;		_led_cloud3_init
 10273 ;;		_led_cloud4_init
 10274 ;;		_led_moon1_init
 10275 ;;		_led_moon2_init
 10276 ;;		_led_moon3_init
 10277 ;;		_led_thunder1_init
 10278 ;;		_led_thunder2_init
 10279 ;;		_led_thunder3_init
 10280 ;; This function is called by:
 10281 ;;		_led_para_init
 10282 ;;		_led_period_dynamic_process
 10283 ;;		_led_set_dynamic
 10284 ;;		_led_set_mode
 10285 ;;		_led_set_power
 10286 ;; This function uses a non-reentrant model
 10287 ;;
 10288                           
 10289                           
 10290                           ;psect for function _led_dynamic_init
 10291  0DCD                     _led_dynamic_init:	
 10292                           
 10293                           ;incstack = 0
 10294                           ; Regs used in _led_dynamic_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10295                           ;led_dynamic_init@dyn stored from wreg
 10296  0DCD  00B4               	movwf	led_dynamic_init@dyn
 10297                           
 10298                           ;app_led.c: 1805: (INTCONbits.GIE = 0);
 10299                           
 10300                           ;app_led.c: 1806: dynamic_count = 0;
 10301                           
 10302                           ;app_led.c: 1807: dynamic_state = 0;
 10303  0DCE  25E7               	fcall	PL156	;call to abstracted procedure
 10304  0DCF  01D1               	clrf	_dynamic_state	;volatile
 10305                           
 10306                           ;app_led.c: 1808: dynamic_run_pause = 0;
 10307  0DD0  01D0               	clrf	_dynamic_run_pause	;volatile
 10308                           
 10309                           ;app_led.c: 1809: dynamic_run_mode = dyn;
 10310  0DD1  0834               	movf	led_dynamic_init@dyn,w
 10311  0DD2  00FC               	movwf	_dynamic_run_mode	;volatile
 10312                           
 10313                           ;app_led.c: 1810: dynamic_func_init[dyn-1]();
 10314  0DD3  3534               	lslf	led_dynamic_init@dyn,w
 10315  0DD4  3ED2               	addlw	(low ((_dynamic_func_init| (0+256)+254)))& (0+255)
 10316  0DD5  0086               	movwf	6
 10317  0DD6  3001               	movlw	1	; select bank3/4
 10318  0DD7  0087               	movwf	7
 10319  0DD8  3F41               	moviw [1]fsr1
 10320  0DD9  008A               	movwf	10
 10321  0DDA  3F40               	moviw [0]fsr1
 10322  0DDB  000A               	callw
 10323  0DDC  318C               	pagesel	$
 10324                           
 10325                           ;app_led.c: 1811: (INTCONbits.GIE = 1);
 10326  0DDD  178B               	bsf	11,7	;volatile
 10327  0DDE  0008               	return
 10328  0DDF                     __end_of_led_dynamic_init:	
 10329  0DDF                     __ptext37:	
 10330 ;; *************** function _led_set_time *****************
 10331 ;; Defined at:
 10332 ;;		line 2206 in file "src/app_led.c"
 10333 ;; Parameters:    Size  Location     Type
 10334 ;;  ptime           1    wreg     PTR const unsigned char 
 10335 ;;		 -> rx_buf(80), 
 10336 ;; Auto vars:     Size  Location     Type
 10337 ;;  ptime           1   22[BANK0 ] PTR const unsigned char 
 10338 ;;		 -> rx_buf(80), 
 10339 ;; Return value:  Size  Location     Type
 10340 ;;                  1    wreg      void 
 10341 ;; Registers used:
 10342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10343 ;; Tracked objects:
 10344 ;;		On entry : 19/4
 10345 ;;		On exit  : 1F/0
 10346 ;;		Unchanged: 0/0
 10347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10349 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10351 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10352 ;;Total ram usage:        1 bytes
 10353 ;; Hardware stack levels used:    1
 10354 ;; Hardware stack levels required when called:    7
 10355 ;; This function calls:
 10356 ;;		_rtc_set
 10357 ;; This function is called by:
 10358 ;;		_ble_decode
 10359 ;; This function uses a non-reentrant model
 10360 ;;
 10361                           
 10362                           
 10363                           ;psect for function _led_set_time
 10364  0DDF                     _led_set_time:	
 10365                           
 10366                           ;incstack = 0
 10367                           ; Regs used in _led_set_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10368                           ;led_set_time@ptime stored from wreg
 10369  0DDF  0020               	movlb	0	; select bank0
 10370  0DE0  00B6               	movwf	led_set_time@ptime
 10371                           
 10372                           ;app_led.c: 2208: rtc_set(ptime);
 10373  0DE1  2FE1               	ljmp	_rtc_set
 10374  0DE2                     __end_of_led_set_time:	
 10375  0DE2                     __ptext36:	
 10376 ;; *************** function _led_start_flash *****************
 10377 ;; Defined at:
 10378 ;;		line 1862 in file "src/app_led.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;		None
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;		None
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  1    wreg      void 
 10385 ;; Registers used:
 10386 ;;		wreg
 10387 ;; Tracked objects:
 10388 ;;		On entry : 19/4
 10389 ;;		On exit  : 1F/1
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;Total ram usage:        0 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; Hardware stack levels required when called:    6
 10399 ;; This function calls:
 10400 ;;		Nothing
 10401 ;; This function is called by:
 10402 ;;		_ble_decode
 10403 ;; This function uses a non-reentrant model
 10404 ;;
 10405                           
 10406                           
 10407                           ;psect for function _led_start_flash
 10408  0DE2                     _led_start_flash:	
 10409  0DE2                     l5982:	
 10410                           ;incstack = 0
 10411                           ; Regs used in _led_start_flash: [wreg]
 10412                           
 10413                           
 10414                           ;app_led.c: 1864: led_run_para.mFind = 1;
 10415  0DE2  0021               	movlb	1	; select bank1
 10416  0DE3  3003               	movlw	3
 10417  0DE4  1442               	bsf	_led_run_para^(0+128),0
 10418                           
 10419                           ;app_led.c: 1865: led_run_para.flash_count = 3;
 10420  0DE5  00C3               	movwf	(_led_run_para^(0+128)+1)
 10421  0DE6  0008               	return
 10422  0DE7                     __end_of_led_start_flash:	
 10423  0DE7                     PL156:	
 10424  0DE7  138B               	bcf	11,7	;volatile
 10425  0DE8  0021               	movlb	1	; select bank1
 10426  0DE9  01C6               	clrf	_dynamic_count^(0+128)	;volatile
 10427  0DEA  01C7               	clrf	(_dynamic_count+1)^(0+128)	;volatile
 10428  0DEB  0020               	movlb	0	; select bank0
 10429  0DEC  0008               	return
 10430  0DED                     __end_ofPL156:	
 10431  0DED                     __ptext3:	
 10432 ;; *************** function _led_second_cb *****************
 10433 ;; Defined at:
 10434 ;;		line 1939 in file "src/app_led.c"
 10435 ;; Parameters:    Size  Location     Type
 10436 ;;		None
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;  ct              2   32[BANK1 ] unsigned int 
 10439 ;;  sec             1   31[BANK1 ] unsigned char 
 10440 ;; Return value:  Size  Location     Type
 10441 ;;                  1    wreg      void 
 10442 ;; Registers used:
 10443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10444 ;; Tracked objects:
 10445 ;;		On entry : 1F/1
 10446 ;;		On exit  : 1F/1
 10447 ;;		Unchanged: 0/0
 10448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10450 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10452 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10453 ;;Total ram usage:        3 bytes
 10454 ;; Hardware stack levels used:    1
 10455 ;; Hardware stack levels required when called:    9
 10456 ;; This function calls:
 10457 ;;		___wmul
 10458 ;;		_led_auto_process
 10459 ;;		_led_find_device
 10460 ;;		_led_period_dynamic_process
 10461 ;;		_led_preview
 10462 ;;		_led_pro_process
 10463 ;;		_led_save_para
 10464 ;;		_rtc_get_hour
 10465 ;;		_rtc_get_minute
 10466 ;;		_rtc_get_second
 10467 ;; This function is called by:
 10468 ;;		_main
 10469 ;; This function uses a non-reentrant model
 10470 ;;
 10471                           
 10472                           
 10473                           ;psect for function _led_second_cb
 10474  0DED                     _led_second_cb:	
 10475                           
 10476                           ;app_led.c: 1941: uint16_t ct = rtc_get_hour()*60u + rtc_get_minute();
 10477                           
 10478                           ;incstack = 0
 10479                           ; Regs used in _led_second_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10480  0DED  2661               	fcall	_rtc_get_hour
 10481  0DEE  0020               	movlb	0	; select bank0
 10482  0DEF  319F  2764  318C   	fcall	PL26	;call to abstracted procedure
 10483  0DF2  319F  270B  318C   	fcall	___wmul
 10484  0DF5  0835               	movf	?___wmul+1,w
 10485  0DF6  0021               	movlb	1	; select bank1
 10486  0DF7  00C1               	movwf	(led_second_cb@ct+1)^(0+128)
 10487  0DF8  0020               	movlb	0	; select bank0
 10488  0DF9  0834               	movf	?___wmul,w
 10489  0DFA  0021               	movlb	1	; select bank1
 10490  0DFB  00C0               	movwf	led_second_cb@ct^(0+128)
 10491  0DFC  2664  318C         	fcall	_rtc_get_minute
 10492  0DFE  0021               	movlb	1	; select bank1
 10493  0DFF  07C0               	addwf	led_second_cb@ct^(0+128),f
 10494  0E00  1803               	skipnc
 10495  0E01  0AC1               	incf	(led_second_cb@ct+1)^(0+128),f
 10496                           
 10497                           ;app_led.c: 1942: uint8_t sec = rtc_get_second();
 10498  0E02  2667  318C         	fcall	_rtc_get_second
 10499  0E04  0021               	movlb	1	; select bank1
 10500  0E05  00BF               	movwf	led_second_cb@sec^(0+128)
 10501                           
 10502                           ;app_led.c: 1943: if(led_run_para.mFind)
 10503  0E06  1C42               	btfss	_led_run_para^(0+128),0
 10504  0E07  2E0B               	goto	l1043
 10505                           
 10506                           ;app_led.c: 1944: {
 10507                           ;app_led.c: 1945: led_find_device();
 10508  0E08  264A  318C         	fcall	_led_find_device
 10509                           
 10510                           ;app_led.c: 1946: }
 10511  0E0A  2E46               	goto	l8208
 10512  0E0B                     l1043:	
 10513                           
 10514                           ;app_led.c: 1947: else
 10515                           ;app_led.c: 1948: {
 10516                           ;app_led.c: 1953: if(led_run_para.mPrev)
 10517  0E0B  1CC2               	btfss	_led_run_para^(0+128),1
 10518  0E0C  2E10               	goto	l8194
 10519                           
 10520                           ;app_led.c: 1954: {
 10521                           ;app_led.c: 1955: led_preview();
 10522  0E0D  265A  318C         	fcall	_led_preview
 10523                           
 10524                           ;app_led.c: 1956: }
 10525  0E0F  2E46               	goto	l8208
 10526  0E10                     l8194:	
 10527                           
 10528                           ;app_led.c: 1958: else if(m_led_para.ble_para.mMode == 1 || m_led_para.ble_para.mMode ==
      +                           2)
 10529  0E10  26DF  318C         	fcall	PL4	;call to abstracted procedure
 10530  0E12  3A01               	xorlw	1
 10531  0E13  1903               	skipnz
 10532  0E14  2E1A               	goto	l8198
 10533  0E15  26DF  318C         	fcall	PL4	;call to abstracted procedure
 10534  0E17  3A02               	xorlw	2
 10535  0E18  1D03               	skipz
 10536  0E19  2E46               	goto	l8208
 10537  0E1A                     l8198:	
 10538                           
 10539                           ;app_led.c: 1959: {
 10540                           ;app_led.c: 1960: if(led_period_dynamic_process(ct) == 0)
 10541  0E1A  0841               	movf	(led_second_cb@ct+1)^(0+128),w
 10542  0E1B  0020               	movlb	0	; select bank0
 10543  0E1C  00BB               	movwf	led_period_dynamic_process@ct+1
 10544  0E1D  0021               	movlb	1	; select bank1
 10545  0E1E  0840               	movf	led_second_cb@ct^(0+128),w
 10546  0E1F  0020               	movlb	0	; select bank0
 10547  0E20  00BA               	movwf	led_period_dynamic_process@ct
 10548  0E21  319C  24D0  318C   	fcall	_led_period_dynamic_process
 10549  0E24  3A00               	xorlw	0
 10550  0E25  1D03               	skipz
 10551  0E26  2E46               	goto	l8208
 10552                           
 10553                           ;app_led.c: 1961: {
 10554                           ;app_led.c: 1962: if(m_led_para.ble_para.mMode == 1)
 10555  0E27  26DF  318C         	fcall	PL4	;call to abstracted procedure
 10556  0E29  3A01               	xorlw	1
 10557  0E2A  1D03               	skipz
 10558  0E2B  2E37               	goto	l8204
 10559                           
 10560                           ;app_led.c: 1963: {
 10561                           ;app_led.c: 1964: led_auto_process(ct, sec);
 10562  0E2C  0021               	movlb	1	; select bank1
 10563  0E2D  0841               	movf	(led_second_cb@ct+1)^(0+128),w
 10564  0E2E  00B5               	movwf	(led_auto_process@ct+1)^(0+128)
 10565  0E2F  0840               	movf	led_second_cb@ct^(0+128),w
 10566  0E30  00B4               	movwf	led_auto_process@ct^(0+128)
 10567  0E31  083F               	movf	led_second_cb@sec^(0+128),w
 10568  0E32  00B6               	movwf	led_auto_process@sec^(0+128)
 10569  0E33  3191  2116  318C   	fcall	_led_auto_process
 10570                           
 10571                           ;app_led.c: 1965: }
 10572  0E36  2E46               	goto	l8208
 10573  0E37                     l8204:	
 10574                           
 10575                           ;app_led.c: 1966: else if(m_led_para.ble_para.mMode == 2)
 10576  0E37  26DF  318C         	fcall	PL4	;call to abstracted procedure
 10577  0E39  3A02               	xorlw	2
 10578  0E3A  1D03               	skipz
 10579  0E3B  2E46               	goto	l8208
 10580                           
 10581                           ;app_led.c: 1967: {
 10582                           ;app_led.c: 1968: led_pro_process(ct, sec);
 10583  0E3C  0021               	movlb	1	; select bank1
 10584  0E3D  0841               	movf	(led_second_cb@ct+1)^(0+128),w
 10585  0E3E  00B5               	movwf	(led_pro_process@ct+1)^(0+128)
 10586  0E3F  0840               	movf	led_second_cb@ct^(0+128),w
 10587  0E40  00B4               	movwf	led_pro_process@ct^(0+128)
 10588  0E41  083F               	movf	led_second_cb@sec^(0+128),w
 10589  0E42  00B6               	movwf	led_pro_process@sec^(0+128)
 10590  0E43  319D  2551  318C   	fcall	_led_pro_process
 10591  0E46                     l8208:	
 10592                           
 10593                           ;app_led.c: 1969: }
 10594                           ;app_led.c: 1970: }
 10595                           ;app_led.c: 1971: }
 10596                           ;app_led.c: 1985: }
 10597                           ;app_led.c: 1987: if(led_run_para.mSave)
 10598  0E46  0021               	movlb	1	; select bank1
 10599  0E47  1D42               	btfss	_led_run_para^(0+128),2
 10600  0E48  0008               	return
 10601                           
 10602                           ;app_led.c: 1988: {
 10603                           ;app_led.c: 1989: led_save_para();
 10604  0E49  2E92               	ljmp	l6996
 10605  0E4A                     __end_of_led_second_cb:	
 10606  0E4A                     __ptext14:	
 10607 ;; *************** function _led_find_device *****************
 10608 ;; Defined at:
 10609 ;;		line 1868 in file "src/app_led.c"
 10610 ;; Parameters:    Size  Location     Type
 10611 ;;		None
 10612 ;; Auto vars:     Size  Location     Type
 10613 ;;		None
 10614 ;; Return value:  Size  Location     Type
 10615 ;;                  1    wreg      void 
 10616 ;; Registers used:
 10617 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10618 ;; Tracked objects:
 10619 ;;		On entry : 1F/1
 10620 ;;		On exit  : 1E/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10627 ;;Total ram usage:        0 bytes
 10628 ;; Hardware stack levels used:    1
 10629 ;; Hardware stack levels required when called:    7
 10630 ;; This function calls:
 10631 ;;		_led_turnoff
 10632 ;;		_led_turnon_max
 10633 ;; This function is called by:
 10634 ;;		_led_second_cb
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           
 10639                           ;psect for function _led_find_device
 10640  0E4A                     _led_find_device:	
 10641                           
 10642                           ;app_led.c: 1870: static bool toggle = 0;
 10643                           ;app_led.c: 1871: if(toggle)
 10644                           
 10645                           ;incstack = 0
 10646                           ; Regs used in _led_find_device: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10647  0E4A  084B               	movf	led_find_device@toggle^(0+128),w
 10648  0E4B  1903               	btfsc	3,2
 10649  0E4C  2E57               	goto	l1017
 10650                           
 10651                           ;app_led.c: 1872: {
 10652                           ;app_led.c: 1873: toggle = 0;
 10653  0E4D  01CB               	clrf	led_find_device@toggle^(0+128)
 10654                           
 10655                           ;app_led.c: 1874: led_turnoff();
 10656  0E4E  266A               	fcall	_led_turnoff
 10657                           
 10658                           ;app_led.c: 1875: if(led_run_para.flash_count > 0)
 10659  0E4F  0021               	movlb	1	; select bank1
 10660  0E50  0843               	movf	(_led_run_para^(0+128)+1),w
 10661  0E51  1D03               	btfss	3,2
 10662                           
 10663                           ;app_led.c: 1876: {
 10664                           ;app_led.c: 1877: led_run_para.flash_count--;
 10665  0E52  03C3               	decf	(_led_run_para^(0+128)+1),f
 10666                           
 10667                           ;app_led.c: 1878: }
 10668                           ;app_led.c: 1879: if(led_run_para.flash_count == 0)
 10669  0E53  0843               	movf	(_led_run_para^(0+128)+1),w
 10670  0E54  1903               	btfsc	3,2
 10671                           
 10672                           ;app_led.c: 1880: {
 10673                           ;app_led.c: 1881: led_run_para.mFind = 0;
 10674  0E55  1042               	bcf	_led_run_para^(0+128),0
 10675  0E56  0008               	return
 10676  0E57                     l1017:	
 10677                           
 10678                           ;app_led.c: 1884: else
 10679                           ;app_led.c: 1885: {
 10680                           ;app_led.c: 1886: toggle = 1;
 10681  0E57  01CB               	clrf	led_find_device@toggle^(0+128)
 10682  0E58  0ACB               	incf	led_find_device@toggle^(0+128),f
 10683                           
 10684                           ;app_led.c: 1887: led_turnon_max();
 10685  0E59  2E7C               	ljmp	l6164
 10686  0E5A                     __end_of_led_find_device:	
 10687  0E5A                     __ptext11:	
 10688 ;; *************** function _led_preview *****************
 10689 ;; Defined at:
 10690 ;;		line 1905 in file "src/app_led.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;		None
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;		None
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  1    wreg      void 
 10697 ;; Registers used:
 10698 ;;		wreg, status,2, status,0
 10699 ;; Tracked objects:
 10700 ;;		On entry : 1F/1
 10701 ;;		On exit  : 1F/1
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;Total ram usage:        0 bytes
 10709 ;; Hardware stack levels used:    1
 10710 ;; Hardware stack levels required when called:    6
 10711 ;; This function calls:
 10712 ;;		Nothing
 10713 ;; This function is called by:
 10714 ;;		_led_second_cb
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718                           
 10719                           ;psect for function _led_preview
 10720  0E5A                     _led_preview:	
 10721                           
 10722                           ;app_led.c: 1907: if(led_run_para.prev_count > 0)
 10723                           
 10724                           ;incstack = 0
 10725                           ; Regs used in _led_preview: [wreg+status,2+status,0]
 10726  0E5A  0844               	movf	(_led_run_para^(0+128)+2),w
 10727  0E5B  1D03               	btfss	3,2
 10728                           
 10729                           ;app_led.c: 1908: {
 10730                           ;app_led.c: 1909: led_run_para.prev_count--;
 10731  0E5C  03C4               	decf	(_led_run_para^(0+128)+2),f
 10732                           
 10733                           ;app_led.c: 1910: }
 10734                           ;app_led.c: 1911: if(led_run_para.prev_count == 0)
 10735  0E5D  0844               	movf	(_led_run_para^(0+128)+2),w
 10736  0E5E  1903               	btfsc	3,2
 10737                           
 10738                           ;app_led.c: 1912: {
 10739                           ;app_led.c: 1913: led_run_para.mPrev = 0;
 10740  0E5F  10C2               	bcf	_led_run_para^(0+128),1
 10741  0E60  0008               	return
 10742  0E61                     __end_of_led_preview:	
 10743  0E61                     __ptext6:	
 10744 ;; *************** function _rtc_get_hour *****************
 10745 ;; Defined at:
 10746 ;;		line 140 in file "src/app_rtc.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;		None
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;		None
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  1    wreg      unsigned char 
 10753 ;; Registers used:
 10754 ;;		wreg
 10755 ;; Tracked objects:
 10756 ;;		On entry : 1F/1
 10757 ;;		On exit  : 1F/2
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;Total ram usage:        0 bytes
 10765 ;; Hardware stack levels used:    1
 10766 ;; Hardware stack levels required when called:    6
 10767 ;; This function calls:
 10768 ;;		Nothing
 10769 ;; This function is called by:
 10770 ;;		_led_second_cb
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           
 10775                           ;psect for function _rtc_get_hour
 10776  0E61                     _rtc_get_hour:	
 10777                           
 10778                           ;app_rtc.c: 142: return m_current_time.hour;
 10779                           
 10780                           ;incstack = 0
 10781                           ; Regs used in _rtc_get_hour: [wreg]
 10782  0E61  0022               	movlb	2	; select bank2
 10783  0E62  0859               	movf	(_m_current_time^(0+256)+4),w
 10784  0E63  0008               	return
 10785  0E64                     __end_of_rtc_get_hour:	
 10786  0E64                     __ptext5:	
 10787 ;; *************** function _rtc_get_minute *****************
 10788 ;; Defined at:
 10789 ;;		line 145 in file "src/app_rtc.c"
 10790 ;; Parameters:    Size  Location     Type
 10791 ;;		None
 10792 ;; Auto vars:     Size  Location     Type
 10793 ;;		None
 10794 ;; Return value:  Size  Location     Type
 10795 ;;                  1    wreg      unsigned char 
 10796 ;; Registers used:
 10797 ;;		wreg
 10798 ;; Tracked objects:
 10799 ;;		On entry : 1F/1
 10800 ;;		On exit  : 1F/2
 10801 ;;		Unchanged: 0/0
 10802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;Total ram usage:        0 bytes
 10808 ;; Hardware stack levels used:    1
 10809 ;; Hardware stack levels required when called:    6
 10810 ;; This function calls:
 10811 ;;		Nothing
 10812 ;; This function is called by:
 10813 ;;		_led_second_cb
 10814 ;; This function uses a non-reentrant model
 10815 ;;
 10816                           
 10817                           
 10818                           ;psect for function _rtc_get_minute
 10819  0E64                     _rtc_get_minute:	
 10820                           
 10821                           ;app_rtc.c: 147: return m_current_time.minute;
 10822                           
 10823                           ;incstack = 0
 10824                           ; Regs used in _rtc_get_minute: [wreg]
 10825  0E64  0022               	movlb	2	; select bank2
 10826  0E65  085A               	movf	(_m_current_time^(0+256)+5),w
 10827  0E66  0008               	return
 10828  0E67                     __end_of_rtc_get_minute:	
 10829  0E67                     __ptext4:	
 10830 ;; *************** function _rtc_get_second *****************
 10831 ;; Defined at:
 10832 ;;		line 150 in file "src/app_rtc.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;		None
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;		None
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  1    wreg      unsigned char 
 10839 ;; Registers used:
 10840 ;;		wreg
 10841 ;; Tracked objects:
 10842 ;;		On entry : 1F/1
 10843 ;;		On exit  : 1F/2
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10850 ;;Total ram usage:        0 bytes
 10851 ;; Hardware stack levels used:    1
 10852 ;; Hardware stack levels required when called:    6
 10853 ;; This function calls:
 10854 ;;		Nothing
 10855 ;; This function is called by:
 10856 ;;		_led_second_cb
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           
 10860                           
 10861                           ;psect for function _rtc_get_second
 10862  0E67                     _rtc_get_second:	
 10863                           
 10864                           ;app_rtc.c: 152: return m_current_time.second;
 10865                           
 10866                           ;incstack = 0
 10867                           ; Regs used in _rtc_get_second: [wreg]
 10868  0E67  0022               	movlb	2	; select bank2
 10869  0E68  085B               	movf	(_m_current_time^(0+256)+6),w
 10870  0E69  0008               	return
 10871  0E6A                     __end_of_rtc_get_second:	
 10872  0E6A                     __ptext16:	
 10873 ;; *************** function _led_turnoff *****************
 10874 ;; Defined at:
 10875 ;;		line 700 in file "src/app_led.c"
 10876 ;; Parameters:    Size  Location     Type
 10877 ;;		None
 10878 ;; Auto vars:     Size  Location     Type
 10879 ;;  i               1   20[BANK0 ] unsigned char 
 10880 ;; Return value:  Size  Location     Type
 10881 ;;                  1    wreg      void 
 10882 ;; Registers used:
 10883 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10884 ;; Tracked objects:
 10885 ;;		On entry : 1F/1
 10886 ;;		On exit  : 1F/0
 10887 ;;		Unchanged: 0/0
 10888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10890 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10892 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10893 ;;Total ram usage:        1 bytes
 10894 ;; Hardware stack levels used:    1
 10895 ;; Hardware stack levels required when called:    6
 10896 ;; This function calls:
 10897 ;;		Nothing
 10898 ;; This function is called by:
 10899 ;;		_led_find_device
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           
 10904                           ;psect for function _led_turnoff
 10905  0E6A                     _led_turnoff:	
 10906                           
 10907                           ;app_led.c: 702: for(uint8_t i = 0; i < 4; i++)
 10908                           
 10909                           ;incstack = 0
 10910                           ; Regs used in _led_turnoff: [wreg+fsr1l+fsr1h+status,2+status,0]
 10911  0E6A  0020               	movlb	0	; select bank0
 10912  0E6B  01B4               	clrf	led_turnoff@i
 10913  0E6C                     l6182:	
 10914                           
 10915                           ;app_led.c: 703: {
 10916                           ;app_led.c: 704: target_bright[i] = 0;
 10917  0E6C  3534               	lslf	led_turnoff@i,w
 10918  0E6D  2766  318C         	fcall	PL92	;call to abstracted procedure
 10919                           
 10920                           ;app_led.c: 705: current_bright[i] = 0;
 10921  0E6F  3534               	lslf	led_turnoff@i,w
 10922  0E70  3E48               	addlw	(low (_current_bright| 0))& (0+255)
 10923  0E71  0086               	movwf	6
 10924  0E72  3000               	movlw	0
 10925  0E73  0187               	clrf	7
 10926  0E74  3FC0               	movwi [0]fsr1
 10927  0E75  3FC1               	movwi [1]fsr1
 10928  0E76  3004               	movlw	4
 10929  0E77  0AB4               	incf	led_turnoff@i,f
 10930  0E78  0234               	subwf	led_turnoff@i,w
 10931  0E79  1803               	btfsc	3,0
 10932  0E7A  0008               	return
 10933  0E7B  2E6C               	goto	l6182
 10934  0E7C                     __end_of_led_turnoff:	
 10935  0E7C                     __ptext15:	
 10936 ;; *************** function _led_turnon_max *****************
 10937 ;; Defined at:
 10938 ;;		line 691 in file "src/app_led.c"
 10939 ;; Parameters:    Size  Location     Type
 10940 ;;		None
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;  i               1   20[BANK0 ] unsigned char 
 10943 ;; Return value:  Size  Location     Type
 10944 ;;                  1    wreg      void 
 10945 ;; Registers used:
 10946 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10947 ;; Tracked objects:
 10948 ;;		On entry : 1F/1
 10949 ;;		On exit  : 1F/0
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;Total ram usage:        1 bytes
 10957 ;; Hardware stack levels used:    1
 10958 ;; Hardware stack levels required when called:    6
 10959 ;; This function calls:
 10960 ;;		Nothing
 10961 ;; This function is called by:
 10962 ;;		_led_find_device
 10963 ;; This function uses a non-reentrant model
 10964 ;;
 10965                           
 10966                           
 10967                           ;psect for function _led_turnon_max
 10968  0E7C                     _led_turnon_max:	
 10969  0E7C                     l6164:	
 10970                           ;incstack = 0
 10971                           ; Regs used in _led_turnon_max: [wreg+fsr1l+fsr1h+status,2+status,0]
 10972                           
 10973                           
 10974                           ;app_led.c: 693: for(uint8_t i = 0; i < 4; i++)
 10975  0E7C  0020               	movlb	0	; select bank0
 10976  0E7D  01B4               	clrf	led_turnon_max@i
 10977  0E7E                     l6170:	
 10978                           
 10979                           ;app_led.c: 694: {
 10980                           ;app_led.c: 695: target_bright[i] = 1000;
 10981  0E7E  3534               	lslf	led_turnon_max@i,w
 10982  0E7F  3E4D               	addlw	(low (_target_bright| (0+256)))& (0+255)
 10983  0E80  0086               	movwf	6
 10984  0E81  3001               	movlw	1	; select bank2/3
 10985  0E82  276E  318C         	fcall	PL106	;call to abstracted procedure
 10986                           
 10987                           ;app_led.c: 696: current_bright[i] = 1000;
 10988  0E84  3534               	lslf	led_turnon_max@i,w
 10989  0E85  3E48               	addlw	(low (_current_bright| 0))& (0+255)
 10990  0E86  0086               	movwf	6
 10991  0E87  30E8               	movlw	232
 10992  0E88  0187               	clrf	7
 10993  0E89  3FC0               	movwi [0]fsr1
 10994  0E8A  3003               	movlw	3
 10995  0E8B  3FC1               	movwi [1]fsr1
 10996  0E8C  3004               	movlw	4
 10997  0E8D  0AB4               	incf	led_turnon_max@i,f
 10998  0E8E  0234               	subwf	led_turnon_max@i,w
 10999  0E8F  1803               	btfsc	3,0
 11000  0E90  0008               	return
 11001  0E91  2E7E               	goto	l6170
 11002  0E92                     __end_of_led_turnon_max:	
 11003  0E92                     __ptext7:	
 11004 ;; *************** function _led_save_para *****************
 11005 ;; Defined at:
 11006 ;;		line 1925 in file "src/app_led.c"
 11007 ;; Parameters:    Size  Location     Type
 11008 ;;		None
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;		None
 11011 ;; Return value:  Size  Location     Type
 11012 ;;                  1    wreg      void 
 11013 ;; Registers used:
 11014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11015 ;; Tracked objects:
 11016 ;;		On entry : 1F/1
 11017 ;;		On exit  : 1F/1
 11018 ;;		Unchanged: 0/0
 11019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11024 ;;Total ram usage:        0 bytes
 11025 ;; Hardware stack levels used:    1
 11026 ;; Hardware stack levels required when called:    8
 11027 ;; This function calls:
 11028 ;;		_eeprom_write_buffer
 11029 ;; This function is called by:
 11030 ;;		_led_second_cb
 11031 ;; This function uses a non-reentrant model
 11032 ;;
 11033                           
 11034                           
 11035                           ;psect for function _led_save_para
 11036  0E92                     _led_save_para:	
 11037  0E92                     l6996:	
 11038                           ;incstack = 0
 11039                           ; Regs used in _led_save_para: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11040                           
 11041                           
 11042                           ;app_led.c: 1927: if(led_run_para.save_delay_count > 0)
 11043  0E92  0845               	movf	(_led_run_para^(0+128)+3),w
 11044  0E93  1D03               	btfss	3,2
 11045                           
 11046                           ;app_led.c: 1928: {
 11047                           ;app_led.c: 1929: led_run_para.save_delay_count--;
 11048  0E94  03C5               	decf	(_led_run_para^(0+128)+3),f
 11049                           
 11050                           ;app_led.c: 1930: }
 11051                           ;app_led.c: 1931: if(led_run_para.save_delay_count == 0)
 11052  0E95  0845               	movf	(_led_run_para^(0+128)+3),w
 11053  0E96  1D03               	btfss	3,2
 11054  0E97  0008               	return
 11055                           
 11056                           ;app_led.c: 1932: {
 11057                           ;app_led.c: 1933: m_led_para.save_flag = 0x55;
 11058  0E98  3187  2763  318C   	fcall	PL164	;call to abstracted procedure
 11059  0E9B  3FC0               	movwi [0]fsr1
 11060                           
 11061                           ;app_led.c: 1934: eeprom_write_buffer(0x10, (uint8_t *) &m_led_para, sizeof(m_led_para))
      +                          ;
 11062  0E9C  307E               	movlw	126
 11063  0E9D  0020               	movlb	0	; select bank0
 11064  0E9E  00B7               	movwf	eeprom_write_buffer@pbuf
 11065  0E9F  3023               	movlw	35
 11066  0EA0  00B8               	movwf	eeprom_write_buffer@pbuf+1
 11067  0EA1  3072               	movlw	114
 11068  0EA2  00B9               	movwf	eeprom_write_buffer@len
 11069  0EA3  3010               	movlw	16
 11070  0EA4  26A8               	fcall	_eeprom_write_buffer
 11071                           
 11072                           ;app_led.c: 1935: led_run_para.mSave = 0;
 11073  0EA5  0021               	movlb	1	; select bank1
 11074  0EA6  1142               	bcf	_led_run_para^(0+128),2
 11075  0EA7  0008               	return
 11076  0EA8                     __end_of_led_save_para:	
 11077  0EA8                     __ptext8:	
 11078 ;; *************** function _eeprom_write_buffer *****************
 11079 ;; Defined at:
 11080 ;;		line 35 in file "src/drv_eeprom.c"
 11081 ;; Parameters:    Size  Location     Type
 11082 ;;  addr            1    wreg     unsigned char 
 11083 ;;  pbuf            2   23[BANK0 ] PTR unsigned char 
 11084 ;;		 -> m_led_para(114), 
 11085 ;;  len             1   25[BANK0 ] unsigned char 
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;  addr            1   26[BANK0 ] unsigned char 
 11088 ;;  i               1   27[BANK0 ] unsigned char 
 11089 ;; Return value:  Size  Location     Type
 11090 ;;                  1    wreg      void 
 11091 ;; Registers used:
 11092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11093 ;; Tracked objects:
 11094 ;;		On entry : 1F/0
 11095 ;;		On exit  : 1F/0
 11096 ;;		Unchanged: 0/0
 11097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11098 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11099 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11101 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11102 ;;Total ram usage:        5 bytes
 11103 ;; Hardware stack levels used:    1
 11104 ;; Hardware stack levels required when called:    7
 11105 ;; This function calls:
 11106 ;;		_eeprom_write
 11107 ;; This function is called by:
 11108 ;;		_led_save_para
 11109 ;; This function uses a non-reentrant model
 11110 ;;
 11111                           
 11112                           
 11113                           ;psect for function _eeprom_write_buffer
 11114  0EA8                     _eeprom_write_buffer:	
 11115                           
 11116                           ;incstack = 0
 11117                           ; Regs used in _eeprom_write_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11118                           ;eeprom_write_buffer@addr stored from wreg
 11119  0EA8  00BA               	movwf	eeprom_write_buffer@addr
 11120                           
 11121                           ;drv_eeprom.c: 37: for(uint8_t i = len; i > 0; i--)
 11122  0EA9  0839               	movf	eeprom_write_buffer@len,w
 11123  0EAA  00BB               	movwf	eeprom_write_buffer@i
 11124  0EAB                     l5566:	
 11125  0EAB  083B               	movf	eeprom_write_buffer@i,w
 11126  0EAC  1903               	btfsc	3,2
 11127  0EAD  0008               	return
 11128                           
 11129                           ;drv_eeprom.c: 38: {
 11130                           ;drv_eeprom.c: 39: eeprom_write(addr++, *pbuf++);
 11131  0EAE  0837               	movf	eeprom_write_buffer@pbuf,w
 11132  0EAF  0086               	movwf	6
 11133  0EB0  0838               	movf	eeprom_write_buffer@pbuf+1,w
 11134  0EB1  0087               	movwf	7
 11135  0EB2  0801               	movf	1,w
 11136  0EB3  00B4               	movwf	eeprom_write@byte
 11137  0EB4  083A               	movf	eeprom_write_buffer@addr,w
 11138  0EB5  26BD  318C         	fcall	_eeprom_write
 11139  0EB7  0AB7               	incf	eeprom_write_buffer@pbuf,f
 11140  0EB8  1903               	skipnz
 11141  0EB9  0AB8               	incf	eeprom_write_buffer@pbuf+1,f
 11142  0EBA  0ABA               	incf	eeprom_write_buffer@addr,f
 11143  0EBB  03BB               	decf	eeprom_write_buffer@i,f
 11144  0EBC  2EAB               	goto	l5566
 11145  0EBD                     __end_of_eeprom_write_buffer:	
 11146  0EBD                     __ptext9:	
 11147 ;; *************** function _eeprom_write *****************
 11148 ;; Defined at:
 11149 ;;		line 5 in file "src/drv_eeprom.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;  addr            1    wreg     unsigned char 
 11152 ;;  byte            1   20[BANK0 ] unsigned char 
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;  addr            1   21[BANK0 ] unsigned char 
 11155 ;;  state           1   22[BANK0 ] unsigned char 
 11156 ;; Return value:  Size  Location     Type
 11157 ;;                  1    wreg      void 
 11158 ;; Registers used:
 11159 ;;		wreg, status,2, status,0
 11160 ;; Tracked objects:
 11161 ;;		On entry : 1F/0
 11162 ;;		On exit  : 1F/0
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11165 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11166 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11168 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11169 ;;Total ram usage:        3 bytes
 11170 ;; Hardware stack levels used:    1
 11171 ;; Hardware stack levels required when called:    6
 11172 ;; This function calls:
 11173 ;;		Nothing
 11174 ;; This function is called by:
 11175 ;;		_eeprom_write_buffer
 11176 ;; This function uses a non-reentrant model
 11177 ;;
 11178                           
 11179                           
 11180                           ;psect for function _eeprom_write
 11181  0EBD                     _eeprom_write:	
 11182                           
 11183                           ;incstack = 0
 11184                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
 11185                           ;eeprom_write@addr stored from wreg
 11186  0EBD  00B5               	movwf	eeprom_write@addr
 11187                           
 11188                           ;drv_eeprom.c: 7: bool state = INTCONbits.GIE;
 11189  0EBE  3000               	movlw	0
 11190  0EBF  1B8B               	btfsc	11,7	;volatile
 11191  0EC0  3001               	movlw	1
 11192  0EC1  00B6               	movwf	eeprom_write@state
 11193                           
 11194                           ;drv_eeprom.c: 9: NVMADRH = 0x70;
 11195  0EC2  3070               	movlw	112
 11196  0EC3  0031               	movlb	17	; select bank17
 11197  0EC4  0092               	movwf	18	;volatile
 11198                           
 11199                           ;drv_eeprom.c: 10: NVMADRL = addr;
 11200  0EC5  0020               	movlb	0	; select bank0
 11201  0EC6  0835               	movf	eeprom_write@addr,w
 11202  0EC7  0031               	movlb	17	; select bank17
 11203  0EC8  0091               	movwf	17	;volatile
 11204                           
 11205                           ;drv_eeprom.c: 11: NVMDATL = byte;
 11206  0EC9  0020               	movlb	0	; select bank0
 11207  0ECA  0834               	movf	eeprom_write@byte,w
 11208  0ECB  0031               	movlb	17	; select bank17
 11209  0ECC  0093               	movwf	19	;volatile
 11210                           
 11211                           ;drv_eeprom.c: 12: NVMCON1bits.NVMREGS = 1;
 11212  0ECD  1715               	bsf	21,6	;volsfr
 11213                           
 11214                           ;drv_eeprom.c: 13: NVMCON1bits.WREN = 1;
 11215  0ECE  1515               	bsf	21,2	;volsfr
 11216                           
 11217                           ;drv_eeprom.c: 14: INTCONbits.GIE = 0;
 11218  0ECF  138B               	bcf	11,7	;volatile
 11219                           
 11220                           ;drv_eeprom.c: 15: NVMCON2 = 0x55;
 11221  0ED0  3055               	movlw	85
 11222  0ED1  0096               	movwf	22	;volsfr
 11223                           
 11224                           ;drv_eeprom.c: 16: NVMCON2 = 0xAA;
 11225  0ED2  30AA               	movlw	170
 11226  0ED3  0096               	movwf	22	;volsfr
 11227                           
 11228                           ;drv_eeprom.c: 17: NVMCON1bits.WR = 1;
 11229  0ED4  1495               	bsf	21,1	;volsfr
 11230  0ED5                     l133:	
 11231                           ;drv_eeprom.c: 18: while(NVMCON1bits.WR);
 11232                           
 11233  0ED5  1895               	btfsc	21,1	;volsfr
 11234  0ED6  2ED5               	goto	l133
 11235                           
 11236                           ;drv_eeprom.c: 19: NVMCON1bits.WREN = 0;
 11237  0ED7  1115               	bcf	21,2	;volsfr
 11238                           
 11239                           ;drv_eeprom.c: 21: INTCONbits.GIE = state;
 11240  0ED8  0020               	movlb	0	; select bank0
 11241  0ED9  0C36               	rrf	eeprom_write@state,w
 11242  0EDA  1C03               	skipc
 11243  0EDB  138B               	bcf	11,7	;volatile
 11244  0EDC  1803               	skipnc
 11245  0EDD  178B               	bsf	11,7	;volatile
 11246  0EDE  0008               	return
 11247  0EDF                     __end_of_eeprom_write:	
 11248  0EDF                     PL4:	
 11249  0EDF  307E               	movlw	126
 11250  0EE0  0086               	movwf	6
 11251  0EE1  3023               	movlw	35
 11252  0EE2  0087               	movwf	7
 11253  0EE3  3141               	addfsr 1,1
 11254  0EE4  0801               	movf	1,w
 11255  0EE5  3903               	andlw	3
 11256  0EE6  0008               	return
 11257  0EE7                     __end_ofPL4:	
 11258  0EE7                     __ptext47:	
 11259 ;; *************** function _led_sunrs_init *****************
 11260 ;; Defined at:
 11261 ;;		line 1095 in file "src/app_led.c"
 11262 ;; Parameters:    Size  Location     Type
 11263 ;;		None
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;  i               1   27[BANK0 ] unsigned char 
 11266 ;;  i               1   26[BANK0 ] unsigned char 
 11267 ;;  i               1   25[BANK0 ] unsigned char 
 11268 ;;  flag            1   24[BANK0 ] unsigned char 
 11269 ;; Return value:  Size  Location     Type
 11270 ;;                  1    wreg      void 
 11271 ;; Registers used:
 11272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11273 ;; Tracked objects:
 11274 ;;		On entry : 1F/0
 11275 ;;		On exit  : 1F/1
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11279 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11280 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11281 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11282 ;;Total ram usage:        8 bytes
 11283 ;; Hardware stack levels used:    1
 11284 ;; Hardware stack levels required when called:    6
 11285 ;; This function calls:
 11286 ;;		Nothing
 11287 ;; This function is called by:
 11288 ;;		_led_set_dynamic
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292                           
 11293                           ;psect for function _led_sunrs_init
 11294  0EE7                     _led_sunrs_init:	
 11295                           
 11296                           ;app_led.c: 1097: (INTCONbits.GIE = 0);
 11297                           
 11298                           ;incstack = 0
 11299                           ; Regs used in _led_sunrs_init: [wreg-fsr1h+status,2+status,0]
 11300                           
 11301                           ;app_led.c: 1098: dynamic_count = 0;
 11302                           
 11303                           ;app_led.c: 1099: dynamic_run_pause = 0;
 11304  0EE7  25E7  318C         	fcall	PL156	;call to abstracted procedure
 11305  0EE9  01D0               	clrf	_dynamic_run_pause	;volatile
 11306                           
 11307                           ;app_led.c: 1100: dynamic_run_mode = 12;
 11308  0EEA  300C               	movlw	12
 11309  0EEB  00FC               	movwf	_dynamic_run_mode	;volatile
 11310                           
 11311                           ;app_led.c: 1101: bool flag = 0;
 11312  0EEC  01B8               	clrf	led_sunrs_init@flag
 11313                           
 11314                           ;app_led.c: 1102: for(uint8_t i = 0; i < 4; i++)
 11315  0EED  01B9               	clrf	led_sunrs_init@i
 11316  0EEE                     l5398:	
 11317                           
 11318                           ;app_led.c: 1103: {
 11319                           ;app_led.c: 1104: if(current_bright[i] > 0)
 11320  0EEE  3539               	lslf	led_sunrs_init@i,w
 11321  0EEF  3E48               	addlw	(low (_current_bright| 0))& (0+255)
 11322  0EF0  0086               	movwf	6
 11323  0EF1  0187               	clrf	7
 11324  0EF2  0016               	moviw fsr1++
 11325  0EF3  0401               	iorwf	1,w
 11326  0EF4  1903               	btfsc	3,2
 11327  0EF5  2EF9               	goto	l5402
 11328                           
 11329                           ;app_led.c: 1105: {
 11330                           ;app_led.c: 1106: flag = 1;
 11331  0EF6  01B8               	clrf	led_sunrs_init@flag
 11332  0EF7  0AB8               	incf	led_sunrs_init@flag,f
 11333                           
 11334                           ;app_led.c: 1107: break;
 11335  0EF8  2EFE               	goto	l5406
 11336  0EF9                     l5402:	
 11337  0EF9  3004               	movlw	4
 11338  0EFA  0AB9               	incf	led_sunrs_init@i,f
 11339  0EFB  0239               	subwf	led_sunrs_init@i,w
 11340  0EFC  1C03               	skipc
 11341  0EFD  2EEE               	goto	l5398
 11342  0EFE                     l5406:	
 11343                           
 11344                           ;app_led.c: 1108: }
 11345                           ;app_led.c: 1109: }
 11346                           ;app_led.c: 1110: if(m_led_para.ble_para.manual_para.mOn && flag)
 11347  0EFE  2760  318C         	fcall	PL40	;call to abstracted procedure
 11348  0F00  1C01               	btfss	1,0
 11349  0F01  2F2A               	goto	l5428
 11350  0F02  0838               	movf	led_sunrs_init@flag,w
 11351                           
 11352                           ;app_led.c: 1111: {
 11353                           ;app_led.c: 1112: m_led_para.ble_para.manual_para.mOn = 0;
 11354  0F03  2760  318C         	fcall	PL40	;call to abstracted procedure
 11355  0F05  1903               	btfsc	3,2
 11356  0F06  2F2C               	goto	L18
 11357  0F07  1001               	bcf	1,0
 11358                           
 11359                           ;app_led.c: 1113: for(uint8_t i = 0; i < 4; i++)
 11360  0F08  01BA               	clrf	led_sunrs_init@i_1377
 11361  0F09                     l5418:	
 11362                           
 11363                           ;app_led.c: 1114: {
 11364                           ;app_led.c: 1115: target_bright[i] = 0;
 11365  0F09  353A               	lslf	led_sunrs_init@i_1377,w
 11366  0F0A  2766  318C         	fcall	PL92	;call to abstracted procedure
 11367                           
 11368                           ;app_led.c: 1116: dynamic_min[i] = 0;
 11369  0F0C  083A               	movf	led_sunrs_init@i_1377,w
 11370  0F0D  3E58               	addlw	(low (_dynamic_min| 0))& (0+255)
 11371  0F0E  0086               	movwf	6
 11372  0F0F  0187               	clrf	7
 11373  0F10  0181               	clrf	1
 11374                           
 11375                           ;app_led.c: 1117: dynamic_max[i] = current_bright[i]>>2;
 11376  0F11  083A               	movf	led_sunrs_init@i_1377,w
 11377  0F12  3E54               	addlw	(low (_dynamic_max| 0))& (0+255)
 11378  0F13  0086               	movwf	6
 11379  0F14  353A               	lslf	led_sunrs_init@i_1377,w
 11380  0F15  3E48               	addlw	(low (_current_bright| 0))& (0+255)
 11381  0F16  0084               	movwf	4
 11382  0F17  0185               	clrf	5
 11383  0F18  3F00               	moviw [0]fsr0
 11384  0F19  00B4               	movwf	??_led_sunrs_init
 11385  0F1A  3F01               	moviw [1]fsr0
 11386  0F1B  00B5               	movwf	??_led_sunrs_init+1
 11387  0F1C  36B5               	lsrf	??_led_sunrs_init+1,f
 11388  0F1D  0CB4               	rrf	??_led_sunrs_init,f
 11389  0F1E  36B5               	lsrf	??_led_sunrs_init+1,f
 11390  0F1F  0CB4               	rrf	??_led_sunrs_init,f
 11391  0F20  0834               	movf	??_led_sunrs_init,w
 11392  0F21  0081               	movwf	1
 11393  0F22  3004               	movlw	4
 11394  0F23  0ABA               	incf	led_sunrs_init@i_1377,f
 11395  0F24  023A               	subwf	led_sunrs_init@i_1377,w
 11396  0F25  1C03               	skipc
 11397  0F26  2F09               	goto	l5418
 11398                           
 11399                           ;app_led.c: 1118: }
 11400                           ;app_led.c: 1119: dynamic_rise = 0x00;
 11401  0F27  0021               	movlb	1	; select bank1
 11402  0F28  01CC               	clrf	_dynamic_rise^(0+128)	;volatile
 11403                           
 11404                           ;app_led.c: 1120: }
 11405  0F29  2F56               	goto	l795
 11406  0F2A                     l5428:	
 11407                           
 11408                           ;app_led.c: 1121: else
 11409                           ;app_led.c: 1122: {
 11410                           ;app_led.c: 1123: m_led_para.ble_para.manual_para.mOn = 1;
 11411  0F2A  2760  318C         	fcall	PL40	;call to abstracted procedure
 11412  0F2C                     L18:	
 11413  0F2C  1401               	bsf	1,0
 11414                           
 11415                           ;app_led.c: 1124: for(uint8_t i = 0; i < 4; i++)
 11416  0F2D  01BB               	clrf	led_sunrs_init@i_1378
 11417  0F2E                     l5436:	
 11418                           
 11419                           ;app_led.c: 1125: {
 11420                           ;app_led.c: 1126: m_led_para.ble_para.manual_para.mBright[i] = 1000;
 11421  0F2E  083B               	movf	led_sunrs_init@i_1378,w
 11422  0F2F  00B4               	movwf	??_led_sunrs_init
 11423  0F30  3082               	movlw	130
 11424  0F31  01B5               	clrf	??_led_sunrs_init+1
 11425  0F32  35B4               	lslf	??_led_sunrs_init,f
 11426  0F33  0DB5               	rlf	??_led_sunrs_init+1,f
 11427  0F34  00B6               	movwf	??_led_sunrs_init+2
 11428  0F35  3023               	movlw	35
 11429  0F36  00B7               	movwf	??_led_sunrs_init+3
 11430  0F37  0834               	movf	??_led_sunrs_init,w
 11431  0F38  0736               	addwf	??_led_sunrs_init+2,w
 11432  0F39  0086               	movwf	6
 11433  0F3A  0835               	movf	??_led_sunrs_init+1,w
 11434  0F3B  3D37               	addwfc	??_led_sunrs_init+3,w
 11435  0F3C  276E  318C         	fcall	PL106	;call to abstracted procedure
 11436                           
 11437                           ;app_led.c: 1127: target_bright[i] = 1000;
 11438  0F3E  353B               	lslf	led_sunrs_init@i_1378,w
 11439  0F3F  3E4D               	addlw	(low (_target_bright| (0+256)))& (0+255)
 11440  0F40  0086               	movwf	6
 11441  0F41  3001               	movlw	1	; select bank2/3
 11442  0F42  276E  318C         	fcall	PL106	;call to abstracted procedure
 11443                           
 11444                           ;app_led.c: 1128: dynamic_min[i] = 0;
 11445  0F44  083B               	movf	led_sunrs_init@i_1378,w
 11446  0F45  3E58               	addlw	(low (_dynamic_min| 0))& (0+255)
 11447  0F46  0086               	movwf	6
 11448  0F47  0187               	clrf	7
 11449  0F48  0181               	clrf	1
 11450                           
 11451                           ;app_led.c: 1129: dynamic_max[i] = 250;
 11452  0F49  083B               	movf	led_sunrs_init@i_1378,w
 11453  0F4A  3E54               	addlw	(low (_dynamic_max| 0))& (0+255)
 11454  0F4B  0086               	movwf	6
 11455  0F4C  30FA               	movlw	250
 11456  0F4D  0081               	movwf	1
 11457  0F4E  3004               	movlw	4
 11458  0F4F  0ABB               	incf	led_sunrs_init@i_1378,f
 11459  0F50  023B               	subwf	led_sunrs_init@i_1378,w
 11460  0F51  1C03               	skipc
 11461  0F52  2F2E               	goto	l5436
 11462                           
 11463                           ;app_led.c: 1130: }
 11464                           ;app_led.c: 1131: dynamic_rise = 0x0F;
 11465  0F53  300F               	movlw	15
 11466  0F54  0021               	movlb	1	; select bank1
 11467  0F55  00CC               	movwf	_dynamic_rise^(0+128)	;volatile
 11468  0F56                     l795:	
 11469                           
 11470                           ;app_led.c: 1132: }
 11471                           ;app_led.c: 1133: dynamic_chn = 0x0F;
 11472  0F56  300F               	movlw	15
 11473  0F57  0020               	movlb	0	; select bank0
 11474  0F58  00D2               	movwf	_dynamic_chn	;volatile
 11475                           
 11476                           ;app_led.c: 1134: dynamic_period = 31250;
 11477  0F59  3012               	movlw	18
 11478  0F5A  0021               	movlb	1	; select bank1
 11479  0F5B  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 11480  0F5C  307A               	movlw	122
 11481  0F5D  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 11482                           
 11483                           ;app_led.c: 1135: (INTCONbits.GIE = 1);
 11484  0F5E  178B               	bsf	11,7	;volatile
 11485  0F5F  0008               	return
 11486  0F60                     __end_of_led_sunrs_init:	
 11487  0F60                     PL40:	
 11488  0F60  307E               	movlw	126
 11489  0F61  0086               	movwf	6
 11490  0F62  3023               	movlw	35
 11491  0F63  0087               	movwf	7
 11492  0F64  3142               	addfsr 1,2
 11493  0F65  0008               	return
 11494  0F66                     __end_ofPL40:	
 11495  0F66                     PL92:	
 11496  0F66  3E4D               	addlw	(low (_target_bright| (0+256)))& (0+255)
 11497  0F67  0086               	movwf	6
 11498  0F68  3001               	movlw	1	; select bank2/3
 11499  0F69  0087               	movwf	7
 11500  0F6A  3000               	movlw	0
 11501  0F6B  3FC0               	movwi [0]fsr1
 11502  0F6C  3FC1               	movwi [1]fsr1
 11503  0F6D  0008               	return
 11504  0F6E                     __end_ofPL92:	
 11505  0F6E                     PL106:	
 11506  0F6E  0087               	movwf	7
 11507  0F6F  30E8               	movlw	232
 11508  0F70  3FC0               	movwi [0]fsr1
 11509  0F71  3003               	movlw	3
 11510  0F72  3FC1               	movwi [1]fsr1
 11511  0F73  0008               	return
 11512  0F74                     __end_ofPL106:	
 11513  0F74                     __ptext40:	
 11514 ;; *************** function _led_set_preview *****************
 11515 ;; Defined at:
 11516 ;;		line 2184 in file "src/app_led.c"
 11517 ;; Parameters:    Size  Location     Type
 11518 ;;  pbuf            1    wreg     const PTR const unsigned
 11519 ;;		 -> rx_buf(80), 
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;  pbuf            1   22[BANK0 ] const PTR const unsigned
 11522 ;;		 -> rx_buf(80), 
 11523 ;;  val             2   23[BANK0 ] unsigned int 
 11524 ;;  i               1   25[BANK0 ] unsigned char 
 11525 ;; Return value:  Size  Location     Type
 11526 ;;                  1    wreg      unsigned char 
 11527 ;; Registers used:
 11528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11529 ;; Tracked objects:
 11530 ;;		On entry : 19/4
 11531 ;;		On exit  : 1E/0
 11532 ;;		Unchanged: 0/0
 11533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11535 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11536 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11537 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11538 ;;Total ram usage:        6 bytes
 11539 ;; Hardware stack levels used:    1
 11540 ;; Hardware stack levels required when called:    6
 11541 ;; This function calls:
 11542 ;;		Nothing
 11543 ;; This function is called by:
 11544 ;;		_ble_decode
 11545 ;; This function uses a non-reentrant model
 11546 ;;
 11547                           
 11548                           
 11549                           ;psect for function _led_set_preview
 11550  0F74                     _led_set_preview:	
 11551                           
 11552                           ;incstack = 0
 11553                           ; Regs used in _led_set_preview: [wreg-fsr1h+status,2+status,0]
 11554                           ;led_set_preview@pbuf stored from wreg
 11555  0F74  0020               	movlb	0	; select bank0
 11556  0F75  00B6               	movwf	led_set_preview@pbuf
 11557                           
 11558                           ;app_led.c: 2186: if(led_run_para.mFind || m_led_para.ble_para.mMode == 0)
 11559  0F76  0021               	movlb	1	; select bank1
 11560  0F77  1842               	btfsc	_led_run_para^(0+128),0
 11561  0F78  3400               	retlw	0
 11562  0F79  26DF  318C         	fcall	PL4	;call to abstracted procedure
 11563  0F7B  1903               	btfsc	3,2
 11564                           
 11565                           ;app_led.c: 2187: {
 11566                           ;app_led.c: 2188: return 0;
 11567  0F7C  3400               	retlw	0
 11568                           
 11569                           ;app_led.c: 2189: }
 11570                           ;app_led.c: 2191: dynamic_run_mode = 0;
 11571  0F7D  01FC               	clrf	_dynamic_run_mode	;volatile
 11572                           
 11573                           ;app_led.c: 2192: dynamic_run_pause = 0;
 11574  0F7E  0020               	movlb	0	; select bank0
 11575  0F7F  01D0               	clrf	_dynamic_run_pause	;volatile
 11576                           
 11577                           ;app_led.c: 2194: for(uint8_t i = 0; i < 4; i++)
 11578  0F80  01B9               	clrf	led_set_preview@i
 11579  0F81                     l5958:	
 11580                           
 11581                           ;app_led.c: 2195: {
 11582                           ;app_led.c: 2196: uint16_t val = (*(pbuf + 2 * i)) << 8 | (*(pbuf + 2 * i + 1));
 11583  0F81  3539               	lslf	led_set_preview@i,w
 11584  0F82  0736               	addwf	led_set_preview@pbuf,w
 11585  0F83  00B4               	movwf	??_led_set_preview
 11586  0F84  0A34               	incf	??_led_set_preview,w
 11587  0F85  0086               	movwf	6
 11588  0F86  3002               	movlw	2	; select bank4/5
 11589  0F87  0087               	movwf	7
 11590  0F88  3539               	lslf	led_set_preview@i,w
 11591  0F89  0736               	addwf	led_set_preview@pbuf,w
 11592  0F8A  00B5               	movwf	??_led_set_preview+1
 11593  0F8B  0084               	movwf	4
 11594  0F8C  3002               	movlw	2	; select bank4/5
 11595  0F8D  0085               	movwf	5
 11596  0F8E  0800               	movf	0,w
 11597  0F8F  00B8               	movwf	led_set_preview@val+1
 11598  0F90  0801               	movf	1,w
 11599  0F91  00B7               	movwf	led_set_preview@val
 11600                           
 11601                           ;app_led.c: 2197: if(val <= 1000)
 11602  0F92  3003               	movlw	3
 11603  0F93  0238               	subwf	led_set_preview@val+1,w
 11604  0F94  30E9               	movlw	233
 11605  0F95  1903               	skipnz
 11606  0F96  0237               	subwf	led_set_preview@val,w
 11607  0F97  1803               	skipnc
 11608  0F98  2FAA               	goto	l5964
 11609                           
 11610                           ;app_led.c: 2198: {
 11611                           ;app_led.c: 2199: target_bright[i] = val;
 11612  0F99  3539               	lslf	led_set_preview@i,w
 11613  0F9A  3E4D               	addlw	(low (_target_bright| (0+256)))& (0+255)
 11614  0F9B  0086               	movwf	6
 11615  0F9C  3001               	movlw	1	; select bank2/3
 11616  0F9D  0087               	movwf	7
 11617  0F9E  0837               	movf	led_set_preview@val,w
 11618  0F9F  3FC0               	movwi [0]fsr1
 11619  0FA0  0838               	movf	led_set_preview@val+1,w
 11620  0FA1  3FC1               	movwi [1]fsr1
 11621                           
 11622                           ;app_led.c: 2200: current_bright[i] = val;
 11623  0FA2  3539               	lslf	led_set_preview@i,w
 11624  0FA3  3E48               	addlw	(low (_current_bright| 0))& (0+255)
 11625  0FA4  0086               	movwf	6
 11626  0FA5  0187               	clrf	7
 11627  0FA6  0837               	movf	led_set_preview@val,w
 11628  0FA7  3FC0               	movwi [0]fsr1
 11629  0FA8  0838               	movf	led_set_preview@val+1,w
 11630  0FA9  3FC1               	movwi [1]fsr1
 11631  0FAA                     l5964:	
 11632  0FAA  3004               	movlw	4
 11633  0FAB  0AB9               	incf	led_set_preview@i,f
 11634  0FAC  0239               	subwf	led_set_preview@i,w
 11635  0FAD  1803               	btfsc	3,0
 11636                           
 11637                           ;app_led.c: 2201: }
 11638                           ;app_led.c: 2202: }
 11639                           ;app_led.c: 2203: return 1;
 11640  0FAE  3401               	retlw	1
 11641  0FAF  2F81               	goto	l5958
 11642  0FB0                     __end_of_led_set_preview:	
 11643  0FB0                     __ptext39:	
 11644 ;; *************** function _led_set_pro *****************
 11645 ;; Defined at:
 11646 ;;		line 2133 in file "src/app_led.c"
 11647 ;; Parameters:    Size  Location     Type
 11648 ;;  pbuf            1    wreg     const PTR const unsigned
 11649 ;;		 -> rx_buf(80), 
 11650 ;; Auto vars:     Size  Location     Type
 11651 ;;  pbuf            1   32[BANK0 ] const PTR const unsigned
 11652 ;;		 -> rx_buf(80), 
 11653 ;;  i               1   33[BANK0 ] unsigned char 
 11654 ;;  len             1   31[BANK0 ] unsigned char 
 11655 ;; Return value:  Size  Location     Type
 11656 ;;                  1    wreg      unsigned char 
 11657 ;; Registers used:
 11658 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11659 ;; Tracked objects:
 11660 ;;		On entry : 1F/0
 11661 ;;		On exit  : 1F/1
 11662 ;;		Unchanged: 0/0
 11663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11667 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11668 ;;Total ram usage:       11 bytes
 11669 ;; Hardware stack levels used:    1
 11670 ;; Hardware stack levels required when called:    7
 11671 ;; This function calls:
 11672 ;;		___bmul
 11673 ;;		_led_prepare_to_save
 11674 ;; This function is called by:
 11675 ;;		_ble_decode
 11676 ;; This function uses a non-reentrant model
 11677 ;;
 11678                           
 11679                           
 11680                           ;psect for function _led_set_pro
 11681  0FB0                     _led_set_pro:	
 11682                           
 11683                           ;incstack = 0
 11684                           ; Regs used in _led_set_pro: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11685                           ;led_set_pro@pbuf stored from wreg
 11686  0FB0  00C0               	movwf	led_set_pro@pbuf
 11687                           
 11688                           ;app_led.c: 2139: uint8_t len = (*pbuf)*(2+4)+1;
 11689  0FB1  3006               	movlw	6
 11690  0FB2  00B4               	movwf	___bmul@multiplicand
 11691  0FB3  0840               	movf	led_set_pro@pbuf,w
 11692  0FB4  0086               	movwf	6
 11693  0FB5  3002               	movlw	2	; select bank4/5
 11694  0FB6  0087               	movwf	7
 11695  0FB7  0801               	movf	1,w
 11696  0FB8  3197  2767  318C   	fcall	___bmul
 11697  0FBB  3E01               	addlw	1
 11698  0FBC  00BF               	movwf	led_set_pro@len
 11699                           
 11700                           ;app_led.c: 2140: for(uint8_t i = 0; i < len; i++)
 11701  0FBD  01C1               	clrf	led_set_pro@i
 11702  0FBE                     l5994:	
 11703  0FBE  083F               	movf	led_set_pro@len,w
 11704  0FBF  0241               	subwf	led_set_pro@i,w
 11705  0FC0  1803               	btfsc	3,0
 11706  0FC1  2FDF               	goto	l5996
 11707                           
 11708                           ;app_led.c: 2141: {
 11709                           ;app_led.c: 2142: m_led_para.ble_para.pro_para.array[i] = *(pbuf+i);
 11710  0FC2  0841               	movf	led_set_pro@i,w
 11711  0FC3  0740               	addwf	led_set_pro@pbuf,w
 11712  0FC4  00B7               	movwf	??_led_set_pro
 11713  0FC5  0086               	movwf	6
 11714  0FC6  3002               	movlw	2	; select bank4/5
 11715  0FC7  0087               	movwf	7
 11716  0FC8  0801               	movf	1,w
 11717  0FC9  00B8               	movwf	??_led_set_pro+1
 11718  0FCA  0841               	movf	led_set_pro@i,w
 11719  0FCB  00B9               	movwf	??_led_set_pro+2
 11720  0FCC  30AD               	movlw	173
 11721  0FCD  01BA               	clrf	??_led_set_pro+3
 11722  0FCE  00BB               	movwf	??_led_set_pro+4
 11723  0FCF  3023               	movlw	35
 11724  0FD0  00BC               	movwf	??_led_set_pro+5
 11725  0FD1  0839               	movf	??_led_set_pro+2,w
 11726  0FD2  073B               	addwf	??_led_set_pro+4,w
 11727  0FD3  00BD               	movwf	??_led_set_pro+6
 11728  0FD4  083A               	movf	??_led_set_pro+3,w
 11729  0FD5  3D3C               	addwfc	??_led_set_pro+5,w
 11730  0FD6  00BE               	movwf	??_led_set_pro+7
 11731  0FD7  083D               	movf	??_led_set_pro+6,w
 11732  0FD8  0086               	movwf	6
 11733  0FD9  083E               	movf	??_led_set_pro+7,w
 11734  0FDA  0087               	movwf	7
 11735  0FDB  0838               	movf	??_led_set_pro+1,w
 11736  0FDC  0081               	movwf	1
 11737  0FDD  0AC1               	incf	led_set_pro@i,f
 11738  0FDE  2FBE               	goto	l5994
 11739  0FDF                     l5996:	
 11740                           
 11741                           ;app_led.c: 2143: }
 11742                           ;app_led.c: 2144: led_prepare_to_save();
 11743  0FDF  2581               	fcall	_led_prepare_to_save
 11744                           
 11745                           ;app_led.c: 2145: return 1;
 11746  0FE0  3401               	retlw	1
 11747  0FE1                     __end_of_led_set_pro:	
 11748  0FE1                     __ptext38:	
 11749 ;; *************** function _rtc_set *****************
 11750 ;; Defined at:
 11751 ;;		line 110 in file "src/app_rtc.c"
 11752 ;; Parameters:    Size  Location     Type
 11753 ;;  ptime           1    wreg     PTR const unsigned char 
 11754 ;;		 -> rx_buf(80), 
 11755 ;; Auto vars:     Size  Location     Type
 11756 ;;  ptime           1   20[BANK0 ] PTR const unsigned char 
 11757 ;;		 -> rx_buf(80), 
 11758 ;;  i               1   21[BANK0 ] unsigned char 
 11759 ;; Return value:  Size  Location     Type
 11760 ;;                  1    wreg      void 
 11761 ;; Registers used:
 11762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11763 ;; Tracked objects:
 11764 ;;		On entry : 1F/0
 11765 ;;		On exit  : 1F/0
 11766 ;;		Unchanged: 0/0
 11767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11769 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11771 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11772 ;;Total ram usage:        2 bytes
 11773 ;; Hardware stack levels used:    1
 11774 ;; Hardware stack levels required when called:    6
 11775 ;; This function calls:
 11776 ;;		Nothing
 11777 ;; This function is called by:
 11778 ;;		_led_set_time
 11779 ;; This function uses a non-reentrant model
 11780 ;;
 11781                           
 11782                           
 11783                           ;psect for function _rtc_set
 11784  0FE1                     _rtc_set:	
 11785                           
 11786                           ;incstack = 0
 11787                           ; Regs used in _rtc_set: [wreg-fsr1h+status,2+status,0]
 11788                           ;rtc_set@ptime stored from wreg
 11789  0FE1  00B4               	movwf	rtc_set@ptime
 11790                           
 11791                           ;app_rtc.c: 112: (INTCONbits.GIE = 0);
 11792  0FE2  138B               	bcf	11,7	;volatile
 11793                           
 11794                           ;app_rtc.c: 113: for(uint8_t i = 0; i < 7; i++)
 11795  0FE3  01B5               	clrf	rtc_set@i
 11796  0FE4                     l5198:	
 11797                           
 11798                           ;app_rtc.c: 114: {
 11799                           ;app_rtc.c: 115: m_current_time.array[i] = *ptime++;
 11800  0FE4  0835               	movf	rtc_set@i,w
 11801  0FE5  3E55               	addlw	(low (_m_current_time| (0+256)))& (0+255)
 11802  0FE6  0086               	movwf	6
 11803  0FE7  3001               	movlw	1	; select bank2/3
 11804  0FE8  0087               	movwf	7
 11805  0FE9  0834               	movf	rtc_set@ptime,w
 11806  0FEA  0084               	movwf	4
 11807  0FEB  3002               	movlw	2	; select bank4/5
 11808  0FEC  0085               	movwf	5
 11809  0FED  0800               	movf	0,w
 11810  0FEE  0081               	movwf	1
 11811  0FEF  3007               	movlw	7
 11812  0FF0  0AB4               	incf	rtc_set@ptime,f
 11813  0FF1  0AB5               	incf	rtc_set@i,f
 11814  0FF2  0235               	subwf	rtc_set@i,w
 11815  0FF3  1C03               	skipc
 11816  0FF4  2FE4               	goto	l5198
 11817                           
 11818                           ;app_rtc.c: 116: }
 11819                           ;app_rtc.c: 117: (INTCONbits.GIE = 1);
 11820  0FF5  178B               	bsf	11,7	;volatile
 11821  0FF6  0008               	return
 11822  0FF7                     __end_of_rtc_set:	
 11823  0FF7                     __ptext35:	
 11824 ;; *************** function _led_start_preview *****************
 11825 ;; Defined at:
 11826 ;;		line 1893 in file "src/app_led.c"
 11827 ;; Parameters:    Size  Location     Type
 11828 ;;		None
 11829 ;; Auto vars:     Size  Location     Type
 11830 ;;		None
 11831 ;; Return value:  Size  Location     Type
 11832 ;;                  1    wreg      void 
 11833 ;; Registers used:
 11834 ;;		wreg
 11835 ;; Tracked objects:
 11836 ;;		On entry : 1E/0
 11837 ;;		On exit  : 1F/1
 11838 ;;		Unchanged: 0/0
 11839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11844 ;;Total ram usage:        0 bytes
 11845 ;; Hardware stack levels used:    1
 11846 ;; Hardware stack levels required when called:    6
 11847 ;; This function calls:
 11848 ;;		Nothing
 11849 ;; This function is called by:
 11850 ;;		_ble_decode
 11851 ;; This function uses a non-reentrant model
 11852 ;;
 11853                           
 11854                           
 11855                           ;psect for function _led_start_preview
 11856  0FF7                     _led_start_preview:	
 11857  0FF7                     l5972:	
 11858                           ;incstack = 0
 11859                           ; Regs used in _led_start_preview: [wreg]
 11860                           
 11861                           
 11862                           ;app_led.c: 1895: led_run_para.mPrev = 1;
 11863  0FF7  0021               	movlb	1	; select bank1
 11864  0FF8  3003               	movlw	3
 11865  0FF9  14C2               	bsf	_led_run_para^(0+128),1
 11866                           
 11867                           ;app_led.c: 1896: led_run_para.prev_count = 3;
 11868  0FFA  00C4               	movwf	(_led_run_para^(0+128)+2)
 11869  0FFB  0008               	return
 11870  0FFC                     __end_of_led_start_preview:	
 11871  0FFC                     __ptext34:	
 11872 ;; *************** function _led_stop_preview *****************
 11873 ;; Defined at:
 11874 ;;		line 1899 in file "src/app_led.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;		None
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;		None
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1    wreg      void 
 11881 ;; Registers used:
 11882 ;;		status,2
 11883 ;; Tracked objects:
 11884 ;;		On entry : 19/4
 11885 ;;		On exit  : 1F/1
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;Total ram usage:        0 bytes
 11893 ;; Hardware stack levels used:    1
 11894 ;; Hardware stack levels required when called:    6
 11895 ;; This function calls:
 11896 ;;		Nothing
 11897 ;; This function is called by:
 11898 ;;		_ble_decode
 11899 ;; This function uses a non-reentrant model
 11900 ;;
 11901                           
 11902                           
 11903                           ;psect for function _led_stop_preview
 11904  0FFC                     _led_stop_preview:	
 11905  0FFC                     l5976:	
 11906                           ;incstack = 0
 11907                           ; Regs used in _led_stop_preview: [status,2]
 11908                           
 11909                           
 11910                           ;app_led.c: 1901: led_run_para.mPrev = 0;
 11911  0FFC  0021               	movlb	1	; select bank1
 11912  0FFD  10C2               	bcf	_led_run_para^(0+128),1
 11913                           
 11914                           ;app_led.c: 1902: led_run_para.prev_count = 0;
 11915  0FFE  01C4               	clrf	(_led_run_para^(0+128)+2)
 11916  0FFF  0008               	return
 11917  1000                     __end_of_led_stop_preview:	
 11918                           
 11919                           	psect	swtext1
 11920  1896                     __pswtext1:	
 11921  1896                     S8362:	
 11922  1896  318C  2CA3         	ljmp	l7698
 11923  1898  318C  2CD8         	ljmp	l480
 11924  189A  318C  2C0E         	ljmp	l7618
 11925  189C  318C  2C1B         	ljmp	l7624
 11926  189E  318C  2C24         	ljmp	l7630
 11927  18A0  318C  2C2B         	ljmp	l7634
 11928  18A2  318C  2C30         	ljmp	l7638
 11929  18A4  318C  2C38         	ljmp	l7644
 11930  18A6  318C  2C40         	ljmp	l7650
 11931  18A8  318C  2C4B         	ljmp	l7654
 11932  18AA  318C  2C92         	ljmp	l7688
 11933  18AC  318C  2C56         	ljmp	l7658
 11934  18AE  318C  2C61         	ljmp	l7664
 11935  18B0  318C  2CD8         	ljmp	l480
 11936  18B2  318C  2C66         	ljmp	l7668
 11937  18B4  318C  2C6E         	ljmp	l7674
 11938  18B6  318C  2C73         	ljmp	l7678
 11939  18B8  318C  2C9A         	ljmp	l7694
 11940                           
 11941                           	psect	text42
 11942  1B53                     __ptext42:	
 11943 ;; *************** function _led_set_period_dynamic *****************
 11944 ;; Defined at:
 11945 ;;		line 1849 in file "src/app_led.c"
 11946 ;; Parameters:    Size  Location     Type
 11947 ;;  pbuf            1    wreg     const PTR const unsigned
 11948 ;;		 -> rx_buf(80), 
 11949 ;; Auto vars:     Size  Location     Type
 11950 ;;  pbuf            1   29[BANK0 ] const PTR const unsigned
 11951 ;;		 -> rx_buf(80), 
 11952 ;;  i               1   30[BANK0 ] unsigned char 
 11953 ;;  len             1   28[BANK0 ] unsigned char 
 11954 ;; Return value:  Size  Location     Type
 11955 ;;                  1    wreg      void 
 11956 ;; Registers used:
 11957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11958 ;; Tracked objects:
 11959 ;;		On entry : 19/4
 11960 ;;		On exit  : 1F/1
 11961 ;;		Unchanged: 0/0
 11962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11964 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11965 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11966 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11967 ;;Total ram usage:       11 bytes
 11968 ;; Hardware stack levels used:    1
 11969 ;; Hardware stack levels required when called:    7
 11970 ;; This function calls:
 11971 ;;		_led_prepare_to_save
 11972 ;; This function is called by:
 11973 ;;		_ble_decode
 11974 ;; This function uses a non-reentrant model
 11975 ;;
 11976                           
 11977                           
 11978                           ;psect for function _led_set_period_dynamic
 11979  1B53                     _led_set_period_dynamic:	
 11980                           
 11981                           ;incstack = 0
 11982                           ; Regs used in _led_set_period_dynamic: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 11983                           ;led_set_period_dynamic@pbuf stored from wreg
 11984  1B53  0020               	movlb	0	; select bank0
 11985  1B54  00BD               	movwf	led_set_period_dynamic@pbuf
 11986                           
 11987                           ;app_led.c: 1851: uint8_t len = sizeof(m_led_para.ble_para.dynamic_para.array);
 11988  1B55  3006               	movlw	6
 11989  1B56  00BC               	movwf	led_set_period_dynamic@len
 11990                           
 11991                           ;app_led.c: 1852: for(uint8_t i = 0; i < len; i++)
 11992  1B57  01BE               	clrf	led_set_period_dynamic@i
 11993  1B58                     l6072:	
 11994  1B58  083C               	movf	led_set_period_dynamic@len,w
 11995  1B59  023E               	subwf	led_set_period_dynamic@i,w
 11996  1B5A  1803               	btfsc	3,0
 11997  1B5B  2B79               	goto	l6074
 11998                           
 11999                           ;app_led.c: 1853: {
 12000                           ;app_led.c: 1854: m_led_para.ble_para.dynamic_para.array[i] = *(pbuf + i);
 12001  1B5C  083E               	movf	led_set_period_dynamic@i,w
 12002  1B5D  073D               	addwf	led_set_period_dynamic@pbuf,w
 12003  1B5E  00B4               	movwf	??_led_set_period_dynamic
 12004  1B5F  0086               	movwf	6
 12005  1B60  3002               	movlw	2	; select bank4/5
 12006  1B61  0087               	movwf	7
 12007  1B62  0801               	movf	1,w
 12008  1B63  00B5               	movwf	??_led_set_period_dynamic+1
 12009  1B64  083E               	movf	led_set_period_dynamic@i,w
 12010  1B65  00B6               	movwf	??_led_set_period_dynamic+2
 12011  1B66  30EA               	movlw	234
 12012  1B67  01B7               	clrf	??_led_set_period_dynamic+3
 12013  1B68  00B8               	movwf	??_led_set_period_dynamic+4
 12014  1B69  3023               	movlw	35
 12015  1B6A  00B9               	movwf	??_led_set_period_dynamic+5
 12016  1B6B  0836               	movf	??_led_set_period_dynamic+2,w
 12017  1B6C  0738               	addwf	??_led_set_period_dynamic+4,w
 12018  1B6D  00BA               	movwf	??_led_set_period_dynamic+6
 12019  1B6E  0837               	movf	??_led_set_period_dynamic+3,w
 12020  1B6F  3D39               	addwfc	??_led_set_period_dynamic+5,w
 12021  1B70  00BB               	movwf	??_led_set_period_dynamic+7
 12022  1B71  083A               	movf	??_led_set_period_dynamic+6,w
 12023  1B72  0086               	movwf	6
 12024  1B73  083B               	movf	??_led_set_period_dynamic+7,w
 12025  1B74  0087               	movwf	7
 12026  1B75  0835               	movf	??_led_set_period_dynamic+1,w
 12027  1B76  0081               	movwf	1
 12028  1B77  0ABE               	incf	led_set_period_dynamic@i,f
 12029  1B78  2B58               	goto	l6072
 12030  1B79                     l6074:	
 12031                           
 12032                           ;app_led.c: 1855: }
 12033                           ;app_led.c: 1856: led_prepare_to_save();
 12034  1B79  318D  2D81         	ljmp	l5446
 12035  1B7B                     __end_of_led_set_period_dynamic:	
 12036                           
 12037                           	psect	text50
 12038  0809                     __ptext50:	
 12039 ;; *************** function _led_moon2_init *****************
 12040 ;; Defined at:
 12041 ;;		line 1071 in file "src/app_led.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;		None
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;		None
 12046 ;; Return value:  Size  Location     Type
 12047 ;;                  1    wreg      void 
 12048 ;; Registers used:
 12049 ;;		wreg, status,2
 12050 ;; Tracked objects:
 12051 ;;		On entry : 1F/0
 12052 ;;		On exit  : 1F/1
 12053 ;;		Unchanged: 0/0
 12054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12059 ;;Total ram usage:        0 bytes
 12060 ;; Hardware stack levels used:    1
 12061 ;; Hardware stack levels required when called:    6
 12062 ;; This function calls:
 12063 ;;		Nothing
 12064 ;; This function is called by:
 12065 ;;		_led_dynamic_init
 12066 ;; This function uses a non-reentrant model
 12067 ;;
 12068                           
 12069                           
 12070                           ;psect for function _led_moon2_init
 12071  0809                     _led_moon2_init:	
 12072                           
 12073                           ;app_led.c: 1073: dynamic_chn = 0x04;
 12074                           
 12075                           ;incstack = 0
 12076                           ; Regs used in _led_moon2_init: [wreg+status,2]
 12077  0809  3004               	movlw	4
 12078                           
 12079                           ;app_led.c: 1074: dynamic_rise = 0x00;
 12080                           
 12081                           ;app_led.c: 1075: dynamic_min[2] = 25;
 12082  080A  23BC  3188         	fcall	PL116	;call to abstracted procedure
 12083                           
 12084                           ;app_led.c: 1076: dynamic_max[2] = 100;
 12085  080C  3064               	movlw	100
 12086  080D  00D6               	movwf	_dynamic_max+2
 12087  080E  30D0               	movlw	208
 12088                           
 12089                           ;app_led.c: 1077: current_bright[0] = 0;
 12090                           
 12091                           ;app_led.c: 1078: current_bright[1] = 0;
 12092                           
 12093                           ;app_led.c: 1080: dynamic_period = 2000;
 12094  080F  2351               	fcall	PL30	;call to abstracted procedure
 12095  0810  3007               	movlw	7
 12096  0811  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 12097  0812  0008               	return
 12098  0813                     __end_of_led_moon2_init:	
 12099  0813                     __ptext54:	
 12100 ;; *************** function _led_cloud2_init *****************
 12101 ;; Defined at:
 12102 ;;		line 1018 in file "src/app_led.c"
 12103 ;; Parameters:    Size  Location     Type
 12104 ;;		None
 12105 ;; Auto vars:     Size  Location     Type
 12106 ;;		None
 12107 ;; Return value:  Size  Location     Type
 12108 ;;                  1    wreg      void 
 12109 ;; Registers used:
 12110 ;;		wreg, status,2
 12111 ;; Tracked objects:
 12112 ;;		On entry : 1F/0
 12113 ;;		On exit  : 1F/1
 12114 ;;		Unchanged: 0/0
 12115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12120 ;;Total ram usage:        0 bytes
 12121 ;; Hardware stack levels used:    1
 12122 ;; Hardware stack levels required when called:    6
 12123 ;; This function calls:
 12124 ;;		Nothing
 12125 ;; This function is called by:
 12126 ;;		_led_dynamic_init
 12127 ;; This function uses a non-reentrant model
 12128 ;;
 12129                           
 12130                           
 12131                           ;psect for function _led_cloud2_init
 12132  0813                     _led_cloud2_init:	
 12133                           
 12134                           ;app_led.c: 1020: dynamic_chn = 0x0E;
 12135                           
 12136                           ;incstack = 0
 12137                           ; Regs used in _led_cloud2_init: [wreg+status,2]
 12138  0813  300E               	movlw	14
 12139  0814  00D2               	movwf	_dynamic_chn	;volatile
 12140                           
 12141                           ;app_led.c: 1021: dynamic_rise = 0x08;
 12142                           
 12143                           ;app_led.c: 1022: dynamic_min[1] = 0;
 12144  0815  23FF  3188         	fcall	PL172	;call to abstracted procedure
 12145                           
 12146                           ;app_led.c: 1023: dynamic_max[1] = 125;
 12147                           
 12148                           ;app_led.c: 1024: dynamic_min[2] = 0;
 12149                           
 12150                           ;app_led.c: 1025: dynamic_max[2] = 250;
 12151  0817  23A4  3188         	fcall	PL88	;call to abstracted procedure
 12152                           
 12153                           ;app_led.c: 1026: dynamic_min[3] = 125;
 12154                           
 12155                           ;app_led.c: 1027: dynamic_max[3] = 250;
 12156  0819  201E               	fcall	PL168	;call to abstracted procedure
 12157                           
 12158                           ;app_led.c: 1028: current_bright[0] = 0;
 12159  081A  01C8               	clrf	_current_bright
 12160  081B  01C9               	clrf	_current_bright+1
 12161                           
 12162                           ;app_led.c: 1029: dynamic_period = 2000;
 12163  081C  319B  2BE4         	ljmp	PL62	;call to abstracted procedure
 12164  081E                     __end_of_led_cloud2_init:	
 12165  081E                     PL168:	
 12166  081E  307D               	movlw	125
 12167  081F  00DB               	movwf	_dynamic_min+3
 12168  0820  30FA               	movlw	250
 12169  0821  00D7               	movwf	_dynamic_max+3
 12170  0822  34D0               	retlw	208
 12171  0823                     __end_ofPL168:	
 12172  0823                     __ptext95:	
 12173 ;; *************** function _led_ramp *****************
 12174 ;; Defined at:
 12175 ;;		line 477 in file "src/app_led.c"
 12176 ;; Parameters:    Size  Location     Type
 12177 ;;		None
 12178 ;; Auto vars:     Size  Location     Type
 12179 ;;  i               1    8[COMMON] unsigned char 
 12180 ;; Return value:  Size  Location     Type
 12181 ;;                  1    wreg      void 
 12182 ;; Registers used:
 12183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12184 ;; Tracked objects:
 12185 ;;		On entry : 1F/1
 12186 ;;		On exit  : 1C/4
 12187 ;;		Unchanged: 0/0
 12188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12191 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12192 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12193 ;;Total ram usage:        7 bytes
 12194 ;; Hardware stack levels used:    1
 12195 ;; Hardware stack levels required when called:    1
 12196 ;; This function calls:
 12197 ;;		_pwm1_load_duty
 12198 ;;		_pwm2_load_duty
 12199 ;;		_pwm3_load_duty
 12200 ;;		_pwm4_load_duty
 12201 ;; This function is called by:
 12202 ;;		_led_process
 12203 ;; This function uses a non-reentrant model
 12204 ;;
 12205                           
 12206                           
 12207                           ;psect for function _led_ramp
 12208  0823                     _led_ramp:	
 12209  0823                     i1l5280:	
 12210                           ;incstack = 0
 12211                           ; Regs used in _led_ramp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12212                           
 12213                           
 12214                           ;app_led.c: 479: for(uint8_t i = 0; i < 4; i++)
 12215  0823  01F8               	clrf	led_ramp@i
 12216  0824                     i1l5286:	
 12217                           
 12218                           ;app_led.c: 480: {
 12219                           ;app_led.c: 481: if(current_bright[i] + 4 < target_bright[i])
 12220  0824  2071  3188         	fcall	PL136	;call to abstracted procedure
 12221  0826  207C  3188         	fcall	PL162	;call to abstracted procedure
 12222  0828  2077  3188         	fcall	PL144	;call to abstracted procedure
 12223  082A  2060  3188         	fcall	PL48	;call to abstracted procedure
 12224  082C  1803               	skipnc
 12225  082D  2835               	goto	i1l5290
 12226                           
 12227                           ;app_led.c: 482: {
 12228                           ;app_led.c: 483: current_bright[i] += 4;
 12229  082E  2081  3188         	fcall	PL166	;call to abstracted procedure
 12230  0830  0781               	addwf	1,f
 12231  0831  3141               	addfsr 1,1
 12232  0832  1803               	skipnc
 12233  0833  0A81               	incf	1,f
 12234                           
 12235                           ;app_led.c: 484: }
 12236  0834  2851               	goto	i1l5296
 12237  0835                     i1l5290:	
 12238                           
 12239                           ;app_led.c: 485: else if(current_bright[i] > target_bright[i] + 4)
 12240  0835  2077  3188         	fcall	PL144	;call to abstracted procedure
 12241  0837  207C  3188         	fcall	PL162	;call to abstracted procedure
 12242  0839  2071  3188         	fcall	PL136	;call to abstracted procedure
 12243  083B  2060  3188         	fcall	PL48	;call to abstracted procedure
 12244  083D  1803               	skipnc
 12245  083E  2847               	goto	i1l5294
 12246                           
 12247                           ;app_led.c: 486: {
 12248                           ;app_led.c: 487: current_bright[i] -= 4;
 12249  083F  2081  3188         	fcall	PL166	;call to abstracted procedure
 12250  0841  0281               	subwf	1,f
 12251  0842  3000               	movlw	0
 12252  0843  3141               	addfsr 1,1
 12253  0844  3B81               	subwfb	1,f
 12254  0845  317F               	addfsr 1,-1
 12255                           
 12256                           ;app_led.c: 488: }
 12257  0846  2851               	goto	i1l5296
 12258  0847                     i1l5294:	
 12259                           
 12260                           ;app_led.c: 489: else
 12261                           ;app_led.c: 490: {
 12262                           ;app_led.c: 491: current_bright[i] = target_bright[i];
 12263  0847  2071  3188         	fcall	PL136	;call to abstracted procedure
 12264  0849  3578               	lslf	led_ramp@i,w
 12265  084A  3E48               	addlw	(low (_current_bright| 0))& (0+255)
 12266  084B  0084               	movwf	4
 12267  084C  0185               	clrf	5
 12268  084D  3F40               	moviw [0]fsr1
 12269  084E  3F80               	movwi [0]fsr0
 12270  084F  3F41               	moviw [1]fsr1
 12271  0850  3F81               	movwi [1]fsr0
 12272  0851                     i1l5296:	
 12273                           
 12274                           ;app_led.c: 492: }
 12275                           ;app_led.c: 493: led_load_duty[i](current_bright[i]);
 12276  0851  3578               	lslf	led_ramp@i,w
 12277  0852  23D5  3188         	fcall	PL130	;call to abstracted procedure
 12278  0854  3578               	lslf	led_ramp@i,w
 12279  0855  23F9               	fcall	PL160	;call to abstracted procedure
 12280  0856  008A               	movwf	10
 12281  0857  3F40               	moviw [0]fsr1
 12282  0858  000A               	callw
 12283  0859  3004               	movlw	4
 12284  085A  3188               	pagesel	$
 12285  085B  0AF8               	incf	led_ramp@i,f
 12286  085C  0278               	subwf	led_ramp@i,w
 12287  085D  1803               	btfsc	3,0
 12288  085E  0008               	return
 12289  085F  2824               	goto	i1l5286
 12290  0860                     __end_of_led_ramp:	
 12291  0860                     PL48:	
 12292  0860  3F40               	moviw [0]fsr1
 12293  0861  00F4               	movwf	??_led_ramp+2
 12294  0862  3F41               	moviw [1]fsr1
 12295  0863  00F5               	movwf	??_led_ramp+3
 12296  0864  0874               	movf	??_led_ramp+2,w
 12297  0865  3E04               	addlw	4
 12298  0866  00F6               	movwf	??_led_ramp+4
 12299  0867  3000               	movlw	0
 12300  0868  3D75               	addwfc	??_led_ramp+3,w
 12301  0869  00F7               	movwf	??_led_ramp+5
 12302  086A  0873               	movf	??_led_ramp+1,w
 12303  086B  0277               	subwf	??_led_ramp+5,w
 12304  086C  1D03               	skipz
 12305  086D  0008               	return
 12306  086E  0872               	movf	??_led_ramp,w
 12307  086F  0276               	subwf	??_led_ramp+4,w
 12308  0870  0008               	return
 12309  0871                     __end_ofPL48:	
 12310  0871                     PL136:	
 12311  0871  3578               	lslf	led_ramp@i,w
 12312  0872  3E4D               	addlw	(low (_target_bright| (0+256)))& (0+255)
 12313  0873  0086               	movwf	6
 12314  0874  3001               	movlw	1	; select bank2/3
 12315  0875  0087               	movwf	7
 12316  0876  0008               	return
 12317  0877                     __end_ofPL136:	
 12318  0877                     PL144:	
 12319  0877  3578               	lslf	led_ramp@i,w
 12320  0878  3E48               	addlw	(low (_current_bright| 0))& (0+255)
 12321  0879  0086               	movwf	6
 12322  087A  0187               	clrf	7
 12323  087B  0008               	return
 12324  087C                     __end_ofPL144:	
 12325  087C                     PL162:	
 12326  087C  3F40               	moviw [0]fsr1
 12327  087D  00F2               	movwf	??_led_ramp
 12328  087E  3F41               	moviw [1]fsr1
 12329  087F  00F3               	movwf	??_led_ramp+1
 12330  0880  0008               	return
 12331  0881                     __end_ofPL162:	
 12332  0881                     PL166:	
 12333  0881  3578               	lslf	led_ramp@i,w
 12334  0882  3E48               	addlw	(low (_current_bright| 0))& (0+255)
 12335  0883  0086               	movwf	6
 12336  0884  3004               	movlw	4
 12337  0885  0187               	clrf	7
 12338  0886  0008               	return
 12339  0887                     __end_ofPL166:	
 12340  0887                     __ptext93:	
 12341 ;; *************** function _tmr2_isr_callback *****************
 12342 ;; Defined at:
 12343 ;;		line 92 in file "src/app_main.c"
 12344 ;; Parameters:    Size  Location     Type
 12345 ;;		None
 12346 ;; Auto vars:     Size  Location     Type
 12347 ;;		None
 12348 ;; Return value:  Size  Location     Type
 12349 ;;                  1    wreg      void 
 12350 ;; Registers used:
 12351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12352 ;; Tracked objects:
 12353 ;;		On entry : 1F/2
 12354 ;;		On exit  : 18/0
 12355 ;;		Unchanged: 0/0
 12356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12361 ;;Total ram usage:        0 bytes
 12362 ;; Hardware stack levels used:    1
 12363 ;; Hardware stack levels required when called:    3
 12364 ;; This function calls:
 12365 ;;		_led_process
 12366 ;; This function is called by:
 12367 ;;		_app_init
 12368 ;;		_tmr2_isr
 12369 ;; This function uses a non-reentrant model
 12370 ;;
 12371                           
 12372                           
 12373                           ;psect for function _tmr2_isr_callback
 12374  0887                     _tmr2_isr_callback:	
 12375                           
 12376                           ;app_main.c: 94: static uint8_t cnt = 0;
 12377                           ;app_main.c: 96: cnt++;
 12378                           
 12379                           ;incstack = 0
 12380                           ; Regs used in _tmr2_isr_callback: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12381  0887  0021               	movlb	1	; select bank1
 12382  0888  0ACA               	incf	tmr2_isr_callback@cnt^(0+128),f
 12383                           
 12384                           ;app_main.c: 97: if((cnt&0x03) == 0)
 12385  0889  084A               	movf	tmr2_isr_callback@cnt^(0+128),w
 12386  088A  3903               	andlw	3
 12387  088B  1D03               	btfss	3,2
 12388  088C  0008               	return
 12389                           
 12390                           ;app_main.c: 98: {
 12391                           ;app_main.c: 105: led_process();
 12392  088D  288E               	ljmp	i1l6156
 12393  088E                     __end_of_tmr2_isr_callback:	
 12394  088E                     __ptext94:	
 12395 ;; *************** function _led_process *****************
 12396 ;; Defined at:
 12397 ;;		line 497 in file "src/app_led.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;		None
 12400 ;; Auto vars:     Size  Location     Type
 12401 ;;		None
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  1    wreg      void 
 12404 ;; Registers used:
 12405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12406 ;; Tracked objects:
 12407 ;;		On entry : 1F/1
 12408 ;;		On exit  : 18/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12415 ;;Total ram usage:        0 bytes
 12416 ;; Hardware stack levels used:    1
 12417 ;; Hardware stack levels required when called:    2
 12418 ;; This function calls:
 12419 ;;		_led_dynamic_process
 12420 ;;		_led_ramp
 12421 ;; This function is called by:
 12422 ;;		_tmr2_isr_callback
 12423 ;; This function uses a non-reentrant model
 12424 ;;
 12425                           
 12426                           
 12427                           ;psect for function _led_process
 12428  088E                     _led_process:	
 12429  088E                     i1l6156:	
 12430                           ;incstack = 0
 12431                           ; Regs used in _led_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12432                           
 12433                           
 12434                           ;app_led.c: 500: if(dynamic_run_mode > 0 && dynamic_run_mode < 13)
 12435  088E  087C               	movf	_dynamic_run_mode,w	;volatile
 12436  088F  1903               	btfsc	3,2
 12437  0890  2896               	goto	i1l6162
 12438  0891  300D               	movlw	13
 12439  0892  027C               	subwf	_dynamic_run_mode,w	;volatile
 12440  0893  1803               	skipnc
 12441  0894  2896               	goto	i1l6162
 12442                           
 12443                           ;app_led.c: 501: {
 12444                           ;app_led.c: 502: led_dynamic_process();
 12445  0895  2897               	ljmp	i1l5302
 12446  0896                     i1l6162:	
 12447                           ;app_led.c: 503: }
 12448                           
 12449                           
 12450                           ;app_led.c: 504: else
 12451                           ;app_led.c: 505: {
 12452                           ;app_led.c: 507: led_ramp();
 12453  0896  2823               	ljmp	i1l5280
 12454  0897                     __end_of_led_process:	
 12455  0897                     __ptext96:	
 12456 ;; *************** function _led_dynamic_process *****************
 12457 ;; Defined at:
 12458 ;;		line 1681 in file "src/app_led.c"
 12459 ;; Parameters:    Size  Location     Type
 12460 ;;		None
 12461 ;; Auto vars:     Size  Location     Type
 12462 ;;  i               1   19[BANK0 ] unsigned char 
 12463 ;;  temp            2   17[BANK0 ] unsigned int 
 12464 ;; Return value:  Size  Location     Type
 12465 ;;                  1    wreg      void 
 12466 ;; Registers used:
 12467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12468 ;; Tracked objects:
 12469 ;;		On entry : 1F/1
 12470 ;;		On exit  : 1E/0
 12471 ;;		Unchanged: 0/0
 12472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12475 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12476 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12477 ;;Total ram usage:        7 bytes
 12478 ;; Hardware stack levels used:    1
 12479 ;; Hardware stack levels required when called:    1
 12480 ;; This function calls:
 12481 ;;		_led_allcolor_process
 12482 ;;		_led_thunder1_process
 12483 ;;		_led_thunder2_process
 12484 ;;		_led_thunder3_process
 12485 ;;		_pwm1_load_duty
 12486 ;;		_pwm2_load_duty
 12487 ;;		_pwm3_load_duty
 12488 ;;		_pwm4_load_duty
 12489 ;;		i1___lldiv
 12490 ;;		i1___lmul
 12491 ;; This function is called by:
 12492 ;;		_led_process
 12493 ;; This function uses a non-reentrant model
 12494 ;;
 12495                           
 12496                           
 12497                           ;psect for function _led_dynamic_process
 12498  0897                     _led_dynamic_process:	
 12499  0897                     i1l5302:	
 12500                           ;incstack = 0
 12501                           ; Regs used in _led_dynamic_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12502                           
 12503                           
 12504                           ;app_led.c: 1683: if(dynamic_run_pause)
 12505  0897  0020               	movlb	0	; select bank0
 12506  0898  0850               	movf	_dynamic_run_pause,w	;volatile
 12507  0899  1D03               	btfss	3,2
 12508  089A  0008               	return
 12509                           
 12510                           ;app_led.c: 1686: }
 12511                           ;app_led.c: 1687: if(dynamic_count < dynamic_period)
 12512  089B  0021               	movlb	1	; select bank1
 12513  089C  0849               	movf	(_dynamic_period+1)^(0+128),w	;volatile
 12514  089D  0247               	subwf	(_dynamic_count+1)^(0+128),w	;volatile
 12515  089E  1D03               	skipz
 12516  089F  28A2               	goto	u332_25
 12517  08A0  0848               	movf	_dynamic_period^(0+128),w	;volatile
 12518  08A1  0246               	subwf	_dynamic_count^(0+128),w	;volatile
 12519  08A2                     u332_25:	
 12520  08A2  1803               	skipnc
 12521  08A3  28A8               	goto	i1l5310
 12522                           
 12523                           ;app_led.c: 1688: {
 12524                           ;app_led.c: 1689: dynamic_count++;
 12525  08A4  0AC6               	incf	_dynamic_count^(0+128),f	;volatile
 12526  08A5  1903               	skipnz
 12527  08A6  0AC7               	incf	(_dynamic_count+1)^(0+128),f	;volatile
 12528                           
 12529                           ;app_led.c: 1690: }
 12530  08A7  28E8               	goto	i1l5356
 12531  08A8                     i1l5310:	
 12532                           
 12533                           ;app_led.c: 1691: else
 12534                           ;app_led.c: 1692: {
 12535                           ;app_led.c: 1693: dynamic_count = 0;
 12536  08A8  01C6               	clrf	_dynamic_count^(0+128)	;volatile
 12537  08A9  01C7               	clrf	(_dynamic_count+1)^(0+128)	;volatile
 12538                           
 12539                           ;app_led.c: 1694: if(dynamic_run_mode == 12)
 12540  08AA  300C               	movlw	12
 12541  08AB  067C               	xorwf	_dynamic_run_mode,w	;volatile
 12542  08AC  1D03               	btfss	3,2
 12543  08AD  28DB               	goto	i1l5354
 12544                           
 12545                           ;app_led.c: 1695: {
 12546                           ;app_led.c: 1696: dynamic_run_mode = 0;
 12547  08AE  01FC               	clrf	_dynamic_run_mode	;volatile
 12548  08AF  0008               	return
 12549  08B0                     i1l5318:	
 12550                           
 12551                           ;app_led.c: 1702: dynamic_state++;
 12552  08B0  0020               	movlb	0	; select bank0
 12553  08B1  0AD1               	incf	_dynamic_state,f	;volatile
 12554                           
 12555                           ;app_led.c: 1703: if(dynamic_state > 10)
 12556  08B2  300B               	movlw	11
 12557  08B3  0251               	subwf	_dynamic_state,w	;volatile
 12558  08B4  1C03               	skipc
 12559  08B5  28B8               	goto	i1l5324
 12560                           
 12561                           ;app_led.c: 1704: {
 12562                           ;app_led.c: 1705: dynamic_state = 1;
 12563  08B6  3001               	movlw	1
 12564  08B7  00D1               	movwf	_dynamic_state	;volatile
 12565  08B8                     i1l5324:	
 12566                           
 12567                           ;app_led.c: 1706: }
 12568                           ;app_led.c: 1707: led_thunder1_process();
 12569  08B8  21AB  3188         	fcall	_led_thunder1_process
 12570                           
 12571                           ;app_led.c: 1708: break;
 12572  08BA  28E8               	goto	i1l5356
 12573  08BB                     i1l5326:	
 12574                           
 12575                           ;app_led.c: 1710: dynamic_state++;
 12576  08BB  0020               	movlb	0	; select bank0
 12577  08BC  0AD1               	incf	_dynamic_state,f	;volatile
 12578                           
 12579                           ;app_led.c: 1711: if(dynamic_state > 74)
 12580  08BD  304B               	movlw	75
 12581  08BE  0251               	subwf	_dynamic_state,w	;volatile
 12582  08BF  1803               	btfsc	3,0
 12583                           
 12584                           ;app_led.c: 1712: {
 12585                           ;app_led.c: 1713: dynamic_state = 0;
 12586  08C0  01D1               	clrf	_dynamic_state	;volatile
 12587                           
 12588                           ;app_led.c: 1714: }
 12589                           ;app_led.c: 1715: led_thunder2_process();
 12590  08C1  22AA  3188         	fcall	_led_thunder2_process
 12591                           
 12592                           ;app_led.c: 1716: break;
 12593  08C3  28E8               	goto	i1l5356
 12594  08C4                     i1l5334:	
 12595                           
 12596                           ;app_led.c: 1718: dynamic_state++;
 12597  08C4  0020               	movlb	0	; select bank0
 12598  08C5  0AD1               	incf	_dynamic_state,f	;volatile
 12599                           
 12600                           ;app_led.c: 1719: if(dynamic_state > 16)
 12601  08C6  3011               	movlw	17
 12602  08C7  0251               	subwf	_dynamic_state,w	;volatile
 12603  08C8  1803               	btfsc	3,0
 12604                           
 12605                           ;app_led.c: 1720: {
 12606                           ;app_led.c: 1721: dynamic_state = 0;
 12607  08C9  01D1               	clrf	_dynamic_state	;volatile
 12608                           
 12609                           ;app_led.c: 1722: }
 12610                           ;app_led.c: 1723: led_thunder3_process();
 12611  08CA  21F7  3188         	fcall	_led_thunder3_process
 12612                           
 12613                           ;app_led.c: 1724: break;
 12614  08CC  28E8               	goto	i1l5356
 12615  08CD                     i1l5342:	
 12616                           
 12617                           ;app_led.c: 1726: dynamic_state++;
 12618  08CD  0020               	movlb	0	; select bank0
 12619  08CE  0AD1               	incf	_dynamic_state,f	;volatile
 12620                           
 12621                           ;app_led.c: 1727: if(dynamic_state > 4)
 12622  08CF  3005               	movlw	5
 12623  08D0  0251               	subwf	_dynamic_state,w	;volatile
 12624  08D1  1803               	btfsc	3,0
 12625                           
 12626                           ;app_led.c: 1728: {
 12627                           ;app_led.c: 1729: dynamic_state = 0;
 12628  08D2  01D1               	clrf	_dynamic_state	;volatile
 12629                           
 12630                           ;app_led.c: 1730: }
 12631                           ;app_led.c: 1731: led_allcolor_process();
 12632  08D3  2164  3188         	fcall	_led_allcolor_process
 12633                           
 12634                           ;app_led.c: 1732: break;
 12635  08D5  28E8               	goto	i1l5356
 12636  08D6                     i1l963:	
 12637  08D6                     i1l5350:	
 12638                           
 12639                           ;app_led.c: 1734: case 6:
 12640                           ;app_led.c: 1735: case 7:
 12641                           ;app_led.c: 1736: case 8:
 12642                           ;app_led.c: 1737: case 9:
 12643                           ;app_led.c: 1738: case 10:
 12644                           ;app_led.c: 1739: case 11:
 12645                           ;app_led.c: 1740: dynamic_rise ^= dynamic_chn;
 12646  08D6  0020               	movlb	0	; select bank0
 12647  08D7  0852               	movf	_dynamic_chn,w	;volatile
 12648  08D8  0021               	movlb	1	; select bank1
 12649  08D9  06CC               	xorwf	_dynamic_rise^(0+128),f	;volatile
 12650                           
 12651                           ;app_led.c: 1741: break;
 12652  08DA  28E8               	goto	i1l5356
 12653  08DB                     i1l5354:	
 12654  08DB  087C               	movf	_dynamic_run_mode,w	;volatile
 12655                           
 12656                           ; Switch size 1, requested type "space"
 12657                           ; Number of cases is 11, Range of values is 1 to 11
 12658                           ; switch strategies available:
 12659                           ; Name         Instructions Cycles
 12660                           ; direct_byte           31     9 (fixed)
 12661                           ; simple_byte           34    18 (average)
 12662                           ; jumptable            263     9 (fixed)
 12663                           ;	Chosen strategy is direct_byte
 12664  08DC  3EFF               	addlw	-1
 12665  08DD  1C03               	skipc
 12666  08DE  28E8               	goto	i1l5356
 12667  08DF  0084               	movwf	4
 12668  08E0  300B               	movlw	11
 12669  08E1  0204               	subwf	4,w
 12670  08E2  1803               	skipnc
 12671  08E3  28E8               	goto	i1l5356
 12672  08E4  3199               	movlp	high i1S8364
 12673  08E5  3504               	lslf	4,w
 12674  08E6  3E00               	addlw	low i1S8364
 12675  08E7  0082               	movwf	2
 12676  08E8                     i1l5356:	
 12677                           
 12678                           ;app_led.c: 1745: }
 12679                           ;app_led.c: 1746: uint16_t temp;
 12680                           ;app_led.c: 1747: for(uint8_t i = 0; i < 4; i++)
 12681  08E8  0020               	movlb	0	; select bank0
 12682  08E9  01B3               	clrf	led_dynamic_process@i
 12683  08EA                     i1l5362:	
 12684                           
 12685                           ;app_led.c: 1748: {
 12686                           ;app_led.c: 1749: if(dynamic_chn&(1<<i))
 12687  08EA  3001               	movlw	1
 12688  08EB  00AD               	movwf	??_led_dynamic_process
 12689  08EC  0A33               	incf	led_dynamic_process@i,w
 12690  08ED  28EF               	goto	u338_24
 12691  08EE                     u338_25:	
 12692  08EE  35AD               	lslf	??_led_dynamic_process,f
 12693  08EF                     u338_24:	
 12694  08EF  0B89               	decfsz	9,f
 12695  08F0  28EE               	goto	u338_25
 12696  08F1  082D               	movf	??_led_dynamic_process,w
 12697  08F2  0552               	andwf	_dynamic_chn,w	;volatile
 12698  08F3  1903               	btfsc	3,2
 12699  08F4  2954               	goto	i1l5372
 12700                           
 12701                           ;app_led.c: 1750: {
 12702                           ;app_led.c: 1751: temp = 4ul*(dynamic_max[i] - dynamic_min[i])*dynamic_count/dynamic_per
      +                          iod;
 12703  08F5  0021               	movlb	1	; select bank1
 12704  08F6  0848               	movf	_dynamic_period^(0+128),w	;volatile
 12705  08F7  0020               	movlb	0	; select bank0
 12706  08F8  00A0               	movwf	i1___lldiv@divisor
 12707  08F9  0021               	movlb	1	; select bank1
 12708  08FA  0849               	movf	(_dynamic_period+1)^(0+128),w	;volatile
 12709  08FB  0020               	movlb	0	; select bank0
 12710  08FC  00A1               	movwf	i1___lldiv@divisor+1
 12711  08FD  01A2               	clrf	i1___lldiv@divisor+2
 12712  08FE  01A3               	clrf	i1___lldiv@divisor+3
 12713  08FF  0833               	movf	led_dynamic_process@i,w
 12714  0900  3E54               	addlw	(low (_dynamic_max| 0))& (0+255)
 12715  0901  0086               	movwf	6
 12716  0902  0187               	clrf	7
 12717  0903  0833               	movf	led_dynamic_process@i,w
 12718  0904  3E58               	addlw	(low (_dynamic_min| 0))& (0+255)
 12719  0905  0084               	movwf	4
 12720  0906  0185               	clrf	5
 12721  0907  0800               	movf	0,w
 12722  0908  0201               	subwf	1,w
 12723  0909  00F0               	movwf	i1___lmul@multiplier
 12724  090A  01F1               	clrf	i1___lmul@multiplier+1
 12725  090B  1C03               	skipc
 12726  090C  03F1               	decf	i1___lmul@multiplier+1,f
 12727  090D  01F2               	clrf	i1___lmul@multiplier+2
 12728  090E  1BF1               	btfsc	i1___lmul@multiplier+1,7
 12729  090F  03F2               	decf	i1___lmul@multiplier+2,f
 12730  0910  0872               	movf	i1___lmul@multiplier+2,w
 12731  0911  00F3               	movwf	i1___lmul@multiplier+3
 12732  0912  3002               	movlw	2
 12733  0913                     u340_25:	
 12734  0913  35F0               	lslf	i1___lmul@multiplier,f
 12735  0914  0DF1               	rlf	i1___lmul@multiplier+1,f
 12736  0915  0DF2               	rlf	i1___lmul@multiplier+2,f
 12737  0916  0DF3               	rlf	i1___lmul@multiplier+3,f
 12738  0917  0B89               	decfsz	9,f
 12739  0918  2913               	goto	u340_25
 12740  0919  0021               	movlb	1	; select bank1
 12741  091A  0846               	movf	_dynamic_count^(0+128),w	;volatile
 12742  091B  00F4               	movwf	i1___lmul@multiplicand
 12743  091C  0847               	movf	(_dynamic_count+1)^(0+128),w	;volatile
 12744  091D  00F5               	movwf	i1___lmul@multiplicand+1
 12745  091E  01F6               	clrf	i1___lmul@multiplicand+2
 12746  091F  01F7               	clrf	i1___lmul@multiplicand+3
 12747  0920  319B  232E  3188   	fcall	i1___lmul
 12748  0923  0873               	movf	?i1___lmul+3,w
 12749  0924  0020               	movlb	0	; select bank0
 12750  0925  00A7               	movwf	i1___lldiv@dividend+3
 12751  0926  0872               	movf	?i1___lmul+2,w
 12752  0927  00A6               	movwf	i1___lldiv@dividend+2
 12753  0928  0871               	movf	?i1___lmul+1,w
 12754  0929  00A5               	movwf	i1___lldiv@dividend+1
 12755  092A  0870               	movf	?i1___lmul,w
 12756  092B  00A4               	movwf	i1___lldiv@dividend
 12757  092C  3190  2003  3188   	fcall	i1___lldiv
 12758  092F  0821               	movf	?i1___lldiv+1,w
 12759  0930  00B2               	movwf	led_dynamic_process@temp+1
 12760  0931  0820               	movf	?i1___lldiv,w
 12761  0932  00B1               	movwf	led_dynamic_process@temp
 12762                           
 12763                           ;app_led.c: 1752: if(dynamic_rise&(1<<i))
 12764  0933  3001               	movlw	1
 12765  0934  00AD               	movwf	??_led_dynamic_process
 12766  0935  0A33               	incf	led_dynamic_process@i,w
 12767  0936  2938               	goto	u341_24
 12768  0937                     u341_25:	
 12769  0937  35AD               	lslf	??_led_dynamic_process,f
 12770  0938                     u341_24:	
 12771  0938  0B89               	decfsz	9,f
 12772  0939  2937               	goto	u341_25
 12773  093A  082D               	movf	??_led_dynamic_process,w
 12774  093B  0021               	movlb	1	; select bank1
 12775  093C  054C               	andwf	_dynamic_rise^(0+128),w	;volatile
 12776  093D  1903               	btfsc	3,2
 12777  093E  2949               	goto	i1l5370
 12778                           
 12779                           ;app_led.c: 1753: {
 12780                           ;app_led.c: 1754: current_bright[i] = 4u*dynamic_min[i] + temp;
 12781  093F  0020               	movlb	0	; select bank0
 12782  0940  0833               	movf	led_dynamic_process@i,w
 12783  0941  3E58               	addlw	(low (_dynamic_min| 0))& (0+255)
 12784  0942  23B1  3188         	fcall	PL96	;call to abstracted procedure
 12785  0944  072D               	addwf	??_led_dynamic_process,w
 12786  0945  00AF               	movwf	??_led_dynamic_process+2
 12787  0946  0832               	movf	led_dynamic_process@temp+1,w
 12788  0947  3D2E               	addwfc	??_led_dynamic_process+1,w
 12789  0948  2952               	goto	L34
 12790  0949                     i1l5370:	
 12791                           ;app_led.c: 1755: }
 12792                           
 12793                           
 12794                           ;app_led.c: 1756: else
 12795                           ;app_led.c: 1757: {
 12796                           ;app_led.c: 1758: current_bright[i] = 4u*dynamic_max[i] - temp;
 12797  0949  0020               	movlb	0	; select bank0
 12798  094A  0833               	movf	led_dynamic_process@i,w
 12799  094B  3E54               	addlw	(low (_dynamic_max| 0))& (0+255)
 12800  094C  23B1  3188         	fcall	PL96	;call to abstracted procedure
 12801  094E  022D               	subwf	??_led_dynamic_process,w
 12802  094F  00AF               	movwf	??_led_dynamic_process+2
 12803  0950  0832               	movf	led_dynamic_process@temp+1,w
 12804  0951  3B2E               	subwfb	??_led_dynamic_process+1,w
 12805  0952                     L34:	
 12806  0952  23C3  3188         	fcall	PL122	;call to abstracted procedure
 12807  0954                     i1l5372:	
 12808                           
 12809                           ;app_led.c: 1759: }
 12810                           ;app_led.c: 1760: }
 12811                           ;app_led.c: 1761: led_load_duty[i](current_bright[i]);
 12812  0954  3533               	lslf	led_dynamic_process@i,w
 12813  0955  23D5  3188         	fcall	PL130	;call to abstracted procedure
 12814  0957  3533               	lslf	led_dynamic_process@i,w
 12815  0958  23F9               	fcall	PL160	;call to abstracted procedure
 12816  0959  008A               	movwf	10
 12817  095A  3F40               	moviw [0]fsr1
 12818  095B  000A               	callw
 12819  095C  3188               	pagesel	$
 12820  095D  0020               	movlb	0	; select bank0
 12821  095E  3004               	movlw	4
 12822  095F  0AB3               	incf	led_dynamic_process@i,f
 12823  0960  0233               	subwf	led_dynamic_process@i,w
 12824  0961  1803               	btfsc	3,0
 12825  0962  0008               	return
 12826  0963  28EA               	goto	i1l5362
 12827  0964                     __end_of_led_dynamic_process:	
 12828  0964                     __ptext106:	
 12829 ;; *************** function _led_allcolor_process *****************
 12830 ;; Defined at:
 12831 ;;		line 1621 in file "src/app_led.c"
 12832 ;; Parameters:    Size  Location     Type
 12833 ;;		None
 12834 ;; Auto vars:     Size  Location     Type
 12835 ;;		None
 12836 ;; Return value:  Size  Location     Type
 12837 ;;                  1    wreg      void 
 12838 ;; Registers used:
 12839 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12840 ;; Tracked objects:
 12841 ;;		On entry : 1F/0
 12842 ;;		On exit  : 1F/0
 12843 ;;		Unchanged: 0/0
 12844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12849 ;;Total ram usage:        0 bytes
 12850 ;; Hardware stack levels used:    1
 12851 ;; This function calls:
 12852 ;;		Nothing
 12853 ;; This function is called by:
 12854 ;;		_led_dynamic_process
 12855 ;; This function uses a non-reentrant model
 12856 ;;
 12857                           
 12858                           
 12859                           ;psect for function _led_allcolor_process
 12860  0964                     _led_allcolor_process:	
 12861                           
 12862                           ;app_led.c: 1623: dynamic_period = 2000;
 12863                           
 12864                           ;incstack = 0
 12865                           ; Regs used in _led_allcolor_process: [wreg-fsr0h+status,2+status,0]
 12866  0964  30D0               	movlw	208
 12867  0965  0021               	movlb	1	; select bank1
 12868  0966  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 12869  0967  3007               	movlw	7
 12870  0968  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 12871                           
 12872                           ;app_led.c: 1624: switch(dynamic_state)
 12873  0969  299F               	goto	i1l5090
 12874  096A                     i1l5038:	
 12875                           
 12876                           ;app_led.c: 1627: dynamic_chn = 0x01;
 12877                           
 12878                           ;app_led.c: 1628: dynamic_rise = 0x00;
 12879                           
 12880                           ;app_led.c: 1629: dynamic_min[0] = 75;
 12881                           
 12882                           ;app_led.c: 1630: dynamic_max[0] = 175;
 12883                           
 12884                           ;app_led.c: 1631: current_bright[1] = 0;
 12885                           
 12886                           ;app_led.c: 1632: current_bright[2] = 1000;
 12887                           
 12888                           ;app_led.c: 1633: current_bright[3] = 100;
 12889  096A  235F               	fcall	PL44	;call to abstracted procedure
 12890  096B  01CF               	clrf	_current_bright+7
 12891                           
 12892                           ;app_led.c: 1634: break;
 12893  096C  0008               	return
 12894  096D                     i1l5048:	
 12895                           
 12896                           ;app_led.c: 1636: dynamic_chn = 0x03;
 12897  096D  3003               	movlw	3
 12898                           
 12899                           ;app_led.c: 1637: dynamic_rise = 0x03;
 12900                           
 12901                           ;app_led.c: 1638: dynamic_min[0] = 75;
 12902  096E  23EB               	fcall	PL148	;call to abstracted procedure
 12903                           
 12904                           ;app_led.c: 1639: dynamic_max[0] = 175;
 12905  096F  30AF               	movlw	175
 12906  0970  00D4               	movwf	_dynamic_max
 12907                           
 12908                           ;app_led.c: 1640: dynamic_min[1] = 0;
 12909  0971  01D9               	clrf	_dynamic_min+1
 12910                           
 12911                           ;app_led.c: 1641: dynamic_max[1] = 175;
 12912  0972  00D5               	movwf	_dynamic_max+1
 12913  0973                     i1l5054:	
 12914                           
 12915                           ;app_led.c: 1642: current_bright[2] = 1000;
 12916  0973  30E8               	movlw	232
 12917  0974  00CC               	movwf	_current_bright+4
 12918  0975  3003               	movlw	3
 12919  0976  00CD               	movwf	_current_bright+5
 12920                           
 12921                           ;app_led.c: 1643: current_bright[3] = 100;
 12922  0977  3064               	movlw	100
 12923  0978  00CE               	movwf	_current_bright+6
 12924  0979  01CF               	clrf	_current_bright+7
 12925                           
 12926                           ;app_led.c: 1644: break;
 12927  097A  0008               	return
 12928  097B                     i1l5058:	
 12929                           
 12930                           ;app_led.c: 1646: dynamic_chn = 0x0F;
 12931  097B  300F               	movlw	15
 12932  097C  00D2               	movwf	_dynamic_chn	;volatile
 12933                           
 12934                           ;app_led.c: 1647: dynamic_rise = 0x08;
 12935  097D  3008               	movlw	8
 12936                           
 12937                           ;app_led.c: 1648: dynamic_min[0] = 0;
 12938                           
 12939                           ;app_led.c: 1649: dynamic_max[0] = 175;
 12940  097E  23E4  3188         	fcall	PL146	;call to abstracted procedure
 12941                           
 12942                           ;app_led.c: 1650: dynamic_min[1] = 0;
 12943                           
 12944                           ;app_led.c: 1651: dynamic_max[1] = 175;
 12945                           
 12946                           ;app_led.c: 1652: dynamic_min[2] = 0;
 12947                           
 12948                           ;app_led.c: 1653: dynamic_max[2] = 250;
 12949  0980  23A4               	fcall	PL88	;call to abstracted procedure
 12950                           
 12951                           ;app_led.c: 1654: dynamic_min[3] = 25;
 12952  0981  3019               	movlw	25
 12953  0982  00DB               	movwf	_dynamic_min+3
 12954                           
 12955                           ;app_led.c: 1655: dynamic_max[3] = 56;
 12956  0983  3038               	movlw	56
 12957  0984  00D7               	movwf	_dynamic_max+3
 12958                           
 12959                           ;app_led.c: 1656: break;
 12960  0985  0008               	return
 12961  0986                     i1l5068:	
 12962                           
 12963                           ;app_led.c: 1658: dynamic_chn = 0x0C;
 12964  0986  300C               	movlw	12
 12965  0987  00D2               	movwf	_dynamic_chn	;volatile
 12966                           
 12967                           ;app_led.c: 1659: dynamic_rise = 0x04;
 12968  0988  3004               	movlw	4
 12969  0989  0021               	movlb	1	; select bank1
 12970  098A  00CC               	movwf	_dynamic_rise^(0+128)	;volatile
 12971                           
 12972                           ;app_led.c: 1660: dynamic_min[2] = 0;
 12973  098B  0020               	movlb	0	; select bank0
 12974  098C  30FA               	movlw	250
 12975  098D  01DA               	clrf	_dynamic_min+2
 12976                           
 12977                           ;app_led.c: 1661: dynamic_max[2] = 250;
 12978  098E  00D6               	movwf	_dynamic_max+2
 12979                           
 12980                           ;app_led.c: 1662: dynamic_min[3] = 25;
 12981  098F  3019               	movlw	25
 12982  0990  00DB               	movwf	_dynamic_min+3
 12983                           
 12984                           ;app_led.c: 1663: dynamic_max[3] = 56;
 12985  0991  3038               	movlw	56
 12986  0992  00D7               	movwf	_dynamic_max+3
 12987                           
 12988                           ;app_led.c: 1664: current_bright[0] = 0;
 12989  0993  01C8               	clrf	_current_bright
 12990  0994  01C9               	clrf	_current_bright+1
 12991                           
 12992                           ;app_led.c: 1665: current_bright[1] = 0;
 12993  0995  01CA               	clrf	_current_bright+2
 12994  0996  01CB               	clrf	_current_bright+3
 12995                           
 12996                           ;app_led.c: 1666: break;
 12997  0997  0008               	return
 12998  0998                     i1l5078:	
 12999                           
 13000                           ;app_led.c: 1668: dynamic_chn = 0x01;
 13001  0998  3001               	movlw	1
 13002  0999  00D2               	movwf	_dynamic_chn	;volatile
 13003                           
 13004                           ;app_led.c: 1669: dynamic_rise = 0x01;
 13005                           
 13006                           ;app_led.c: 1670: dynamic_min[0] = 0;
 13007                           
 13008                           ;app_led.c: 1671: dynamic_max[0] = 175;
 13009  099A  23E4  3188         	fcall	PL146	;call to abstracted procedure
 13010                           
 13011                           ;app_led.c: 1672: current_bright[1] = 0;
 13012  099C  01CA               	clrf	_current_bright+2
 13013  099D  01CB               	clrf	_current_bright+3
 13014  099E  2973               	goto	i1l5054
 13015  099F                     i1l5090:	
 13016  099F  0020               	movlb	0	; select bank0
 13017  09A0  0851               	movf	_dynamic_state,w	;volatile
 13018                           
 13019                           ; Switch size 1, requested type "space"
 13020                           ; Number of cases is 5, Range of values is 0 to 4
 13021                           ; switch strategies available:
 13022                           ; Name         Instructions Cycles
 13023                           ; direct_byte           16     6 (fixed)
 13024                           ; simple_byte           16     9 (average)
 13025                           ; jumptable            260     6 (fixed)
 13026                           ;	Chosen strategy is direct_byte
 13027  09A1  0084               	movwf	4
 13028  09A2  3005               	movlw	5
 13029  09A3  0204               	subwf	4,w
 13030  09A4  1803               	skipnc
 13031  09A5  0008               	return
 13032  09A6  3199               	movlp	high i1S8372
 13033  09A7  3504               	lslf	4,w
 13034  09A8  3EC0               	addlw	low i1S8372
 13035  09A9  0082               	movwf	2
 13036  09AA  0008               	return
 13037  09AB                     __end_of_led_allcolor_process:	
 13038  09AB                     __ptext105:	
 13039 ;; *************** function _led_thunder1_process *****************
 13040 ;; Defined at:
 13041 ;;		line 1148 in file "src/app_led.c"
 13042 ;; Parameters:    Size  Location     Type
 13043 ;;		None
 13044 ;; Auto vars:     Size  Location     Type
 13045 ;;		None
 13046 ;; Return value:  Size  Location     Type
 13047 ;;                  1    wreg      void 
 13048 ;; Registers used:
 13049 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13050 ;; Tracked objects:
 13051 ;;		On entry : 1F/0
 13052 ;;		On exit  : 1E/0
 13053 ;;		Unchanged: 0/0
 13054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13059 ;;Total ram usage:        0 bytes
 13060 ;; Hardware stack levels used:    1
 13061 ;; This function calls:
 13062 ;;		Nothing
 13063 ;; This function is called by:
 13064 ;;		_led_dynamic_process
 13065 ;; This function uses a non-reentrant model
 13066 ;;
 13067                           
 13068                           
 13069                           ;psect for function _led_thunder1_process
 13070  09AB                     _led_thunder1_process:	
 13071                           
 13072                           ;app_led.c: 1150: dynamic_chn = 0x00;
 13073                           
 13074                           ;incstack = 0
 13075                           ; Regs used in _led_thunder1_process: [wreg-fsr0h+status,2+status,0]
 13076  09AB  01D2               	clrf	_dynamic_chn	;volatile
 13077                           
 13078                           ;app_led.c: 1151: current_bright[2] = 250;
 13079  09AC  30FA               	movlw	250
 13080  09AD  00CC               	movwf	_current_bright+4
 13081  09AE  01CD               	clrf	_current_bright+5
 13082                           
 13083                           ;app_led.c: 1152: switch(dynamic_state)
 13084  09AF  29EC               	goto	i1l4734
 13085  09B0                     i1l4678:	
 13086  09B0  30C8               	movlw	200
 13087                           
 13088                           ;app_led.c: 1155: current_bright[0] = 0;
 13089                           
 13090                           ;app_led.c: 1156: current_bright[1] = 0;
 13091                           
 13092                           ;app_led.c: 1157: current_bright[3] = 200;
 13093  09B1  2392  3188         	fcall	PL78	;call to abstracted procedure
 13094                           
 13095                           ;app_led.c: 1158: dynamic_period = 500;
 13096                           
 13097                           ;app_led.c: 1159: break;
 13098  09B3  2BDD               	ljmp	PL132	;call to abstracted procedure
 13099  09B4                     i1l4684:	
 13100  09B4  30C8               	movlw	200
 13101                           
 13102                           ;app_led.c: 1161: current_bright[0] = 0;
 13103                           
 13104                           ;app_led.c: 1162: current_bright[1] = 0;
 13105                           
 13106                           ;app_led.c: 1163: current_bright[3] = 200;
 13107  09B5  2392  3188         	fcall	PL78	;call to abstracted procedure
 13108  09B7  01CF               	clrf	_current_bright+7
 13109  09B8                     i1l4688:	
 13110                           
 13111                           ;app_led.c: 1164: dynamic_period = 35;
 13112  09B8  3023               	movlw	35
 13113                           
 13114                           ;app_led.c: 1165: break;
 13115  09B9  2B8E               	ljmp	PL74	;call to abstracted procedure
 13116  09BA                     i1l4690:	
 13117  09BA  302C               	movlw	44
 13118                           
 13119                           ;app_led.c: 1167: current_bright[0] = 0;
 13120                           
 13121                           ;app_led.c: 1168: current_bright[1] = 0;
 13122                           
 13123                           ;app_led.c: 1169: current_bright[3] = 300;
 13124  09BB  2392  3188         	fcall	PL78	;call to abstracted procedure
 13125  09BD  3001               	movlw	1
 13126  09BE  00CF               	movwf	_current_bright+7
 13127  09BF                     i1l4694:	
 13128                           
 13129                           ;app_led.c: 1170: dynamic_period = 30;
 13130  09BF  301E               	movlw	30
 13131                           
 13132                           ;app_led.c: 1171: break;
 13133  09C0  2B8E               	ljmp	PL74	;call to abstracted procedure
 13134  09C1                     i1l4696:	
 13135                           
 13136                           ;app_led.c: 1173: current_bright[0] = 450;
 13137                           
 13138                           ;app_led.c: 1174: current_bright[1] = 450;
 13139  09C1  23CC  3188         	fcall	PL124	;call to abstracted procedure
 13140                           
 13141                           ;app_led.c: 1175: current_bright[3] = 500;
 13142  09C3  30F4               	movlw	244
 13143  09C4  00CE               	movwf	_current_bright+6
 13144  09C5  3001               	movlw	1
 13145  09C6  00CF               	movwf	_current_bright+7
 13146                           
 13147                           ;app_led.c: 1176: dynamic_period = 30;
 13148  09C7  301E               	movlw	30
 13149                           
 13150                           ;app_led.c: 1177: break;
 13151  09C8  2B8E               	ljmp	PL74	;call to abstracted procedure
 13152  09C9                     i1l4698:	
 13153  09C9  30FA               	movlw	250
 13154                           
 13155                           ;app_led.c: 1179: current_bright[0] = 0;
 13156                           
 13157                           ;app_led.c: 1180: current_bright[1] = 0;
 13158                           
 13159                           ;app_led.c: 1181: current_bright[3] = 250;
 13160  09CA  2392  3188         	fcall	PL78	;call to abstracted procedure
 13161  09CC  01CF               	clrf	_current_bright+7
 13162  09CD  29BF               	goto	i1l4694
 13163  09CE                     i1l4704:	
 13164  09CE  30FA               	movlw	250
 13165                           
 13166                           ;app_led.c: 1185: current_bright[0] = 0;
 13167                           
 13168                           ;app_led.c: 1186: current_bright[1] = 0;
 13169                           
 13170                           ;app_led.c: 1187: current_bright[3] = 0;
 13171                           
 13172                           ;app_led.c: 1188: dynamic_period = 250;
 13173  09CF  2351               	fcall	PL30	;call to abstracted procedure
 13174  09D0  01C9               	clrf	(_dynamic_period+1)^(0+128)	;volatile
 13175                           
 13176                           ;app_led.c: 1189: break;
 13177  09D1  0008               	return
 13178  09D2                     i1l4708:	
 13179  09D2  302C               	movlw	44
 13180                           
 13181                           ;app_led.c: 1191: current_bright[0] = 0;
 13182                           
 13183                           ;app_led.c: 1192: current_bright[1] = 0;
 13184                           
 13185                           ;app_led.c: 1193: current_bright[3] = 300;
 13186  09D3  2392  3188         	fcall	PL78	;call to abstracted procedure
 13187  09D5  3001               	movlw	1
 13188  09D6  00CF               	movwf	_current_bright+7
 13189  09D7  29B8               	goto	i1l4688
 13190  09D8                     i1l4714:	
 13191                           
 13192                           ;app_led.c: 1197: current_bright[0] = 450;
 13193                           
 13194                           ;app_led.c: 1198: current_bright[1] = 450;
 13195  09D8  23CC  3188         	fcall	PL124	;call to abstracted procedure
 13196                           
 13197                           ;app_led.c: 1199: current_bright[3] = 400;
 13198  09DA  3090               	movlw	144
 13199  09DB  00CE               	movwf	_current_bright+6
 13200  09DC  3001               	movlw	1
 13201  09DD  00CF               	movwf	_current_bright+7
 13202                           
 13203                           ;app_led.c: 1200: dynamic_period = 20;
 13204  09DE  3014               	movlw	20
 13205                           
 13206                           ;app_led.c: 1201: break;
 13207  09DF  2B8E               	ljmp	PL74	;call to abstracted procedure
 13208  09E0                     i1l4716:	
 13209  09E0  30FA               	movlw	250
 13210  09E1                     L31:	
 13211                           
 13212                           ;app_led.c: 1203: current_bright[0] = 0;
 13213                           
 13214                           ;app_led.c: 1204: current_bright[1] = 0;
 13215                           
 13216                           ;app_led.c: 1205: current_bright[3] = 250;
 13217  09E1  2392  3188         	fcall	PL78	;call to abstracted procedure
 13218  09E3  3014               	movlw	20
 13219                           
 13220                           ;app_led.c: 1206: dynamic_period = 20;
 13221                           
 13222                           ;app_led.c: 1207: break;
 13223  09E4  2B5A               	ljmp	PL38	;call to abstracted procedure
 13224  09E5                     i1l4722:	
 13225  09E5  30C8               	movlw	200
 13226  09E6  29E1               	goto	L31
 13227  09E7                     i1l4728:	
 13228                           ;app_led.c: 1211: current_bright[3] = 200;
 13229                           
 13230                           ;app_led.c: 1210: current_bright[1] = 0;
 13231                           
 13232                           ;app_led.c: 1209: current_bright[0] = 0;
 13233                           
 13234  09E7  30C4               	movlw	196
 13235                           
 13236                           ;app_led.c: 1215: current_bright[0] = 0;
 13237                           
 13238                           ;app_led.c: 1216: current_bright[1] = 0;
 13239                           
 13240                           ;app_led.c: 1217: current_bright[3] = 0;
 13241                           
 13242                           ;app_led.c: 1218: dynamic_period = 2500;
 13243  09E8  2351               	fcall	PL30	;call to abstracted procedure
 13244  09E9  3009               	movlw	9
 13245  09EA  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 13246                           
 13247                           ;app_led.c: 1219: break;
 13248  09EB  0008               	return
 13249  09EC                     i1l4734:	
 13250  09EC  0851               	movf	_dynamic_state,w	;volatile
 13251                           
 13252                           ; Switch size 1, requested type "space"
 13253                           ; Number of cases is 11, Range of values is 0 to 10
 13254                           ; switch strategies available:
 13255                           ; Name         Instructions Cycles
 13256                           ; direct_byte           28     6 (fixed)
 13257                           ; simple_byte           34    18 (average)
 13258                           ; jumptable            260     6 (fixed)
 13259                           ;	Chosen strategy is direct_byte
 13260  09ED  0084               	movwf	4
 13261  09EE  300B               	movlw	11
 13262  09EF  0204               	subwf	4,w
 13263  09F0  1803               	skipnc
 13264  09F1  0008               	return
 13265  09F2  3199               	movlp	high i1S8370
 13266  09F3  3504               	lslf	4,w
 13267  09F4  3E16               	addlw	low i1S8370
 13268  09F5  0082               	movwf	2
 13269  09F6  0008               	return
 13270  09F7                     __end_of_led_thunder1_process:	
 13271  09F7                     __ptext103:	
 13272 ;; *************** function _led_thunder3_process *****************
 13273 ;; Defined at:
 13274 ;;		line 1437 in file "src/app_led.c"
 13275 ;; Parameters:    Size  Location     Type
 13276 ;;		None
 13277 ;; Auto vars:     Size  Location     Type
 13278 ;;		None
 13279 ;; Return value:  Size  Location     Type
 13280 ;;                  1    wreg      void 
 13281 ;; Registers used:
 13282 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13283 ;; Tracked objects:
 13284 ;;		On entry : 1F/0
 13285 ;;		On exit  : 1E/0
 13286 ;;		Unchanged: 0/0
 13287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13292 ;;Total ram usage:        0 bytes
 13293 ;; Hardware stack levels used:    1
 13294 ;; This function calls:
 13295 ;;		Nothing
 13296 ;; This function is called by:
 13297 ;;		_led_dynamic_process
 13298 ;; This function uses a non-reentrant model
 13299 ;;
 13300                           
 13301                           
 13302                           ;psect for function _led_thunder3_process
 13303  09F7                     _led_thunder3_process:	
 13304                           
 13305                           ;app_led.c: 1439: switch(dynamic_state)
 13306                           
 13307                           ;incstack = 0
 13308                           ; Regs used in _led_thunder3_process: [wreg-fsr0h+status,2+status,0]
 13309  09F7  2A9F               	goto	i1l5020
 13310  09F8                     i1l4874:	
 13311                           
 13312                           ;app_led.c: 1442: case 2:
 13313                           ;app_led.c: 1443: dynamic_chn = 0x0F;
 13314  09F8  300F               	movlw	15
 13315  09F9  00D2               	movwf	_dynamic_chn	;volatile
 13316                           
 13317                           ;app_led.c: 1444: dynamic_rise = 0x06;
 13318  09FA  3006               	movlw	6
 13319  09FB                     L25:	
 13320                           
 13321                           ;app_led.c: 1445: dynamic_min[0] = 0;
 13322                           
 13323                           ;app_led.c: 1446: dynamic_max[0] = 250;
 13324                           
 13325                           ;app_led.c: 1447: dynamic_min[1] = 0;
 13326                           
 13327                           ;app_led.c: 1448: dynamic_max[1] = 125;
 13328                           
 13329                           ;app_led.c: 1449: dynamic_min[2] = 0;
 13330                           
 13331                           ;app_led.c: 1450: dynamic_max[2] = 250;
 13332  09FB  233E  3188         	fcall	PL16	;call to abstracted procedure
 13333                           
 13334                           ;app_led.c: 1451: dynamic_min[3] = 175;
 13335  09FD  30AF               	movlw	175
 13336                           
 13337                           ;app_led.c: 1452: dynamic_max[3] = 250;
 13338                           
 13339                           ;app_led.c: 1453: dynamic_period = 1000;
 13340                           
 13341                           ;app_led.c: 1454: break;
 13342  09FE  2B71               	ljmp	PL60	;call to abstracted procedure
 13343  09FF                     i1l4884:	
 13344                           
 13345                           ;app_led.c: 1456: case 3:
 13346                           ;app_led.c: 1457: dynamic_chn = 0x0F;
 13347  09FF  300F               	movlw	15
 13348  0A00  00D2               	movwf	_dynamic_chn	;volatile
 13349                           
 13350                           ;app_led.c: 1458: dynamic_rise = 0x09;
 13351  0A01  3009               	movlw	9
 13352  0A02  29FB               	goto	L25
 13353  0A03                     i1l4894:	
 13354                           
 13355                           ;app_led.c: 1470: dynamic_chn = 0x0F;
 13356  0A03  300F               	movlw	15
 13357  0A04  00D2               	movwf	_dynamic_chn	;volatile
 13358                           
 13359                           ;app_led.c: 1471: dynamic_rise = 0x06;
 13360  0A05  3006               	movlw	6
 13361                           
 13362                           ;app_led.c: 1472: dynamic_min[0] = 0;
 13363                           
 13364                           ;app_led.c: 1473: dynamic_max[0] = 250;
 13365                           
 13366                           ;app_led.c: 1474: dynamic_min[1] = 0;
 13367                           
 13368                           ;app_led.c: 1475: dynamic_max[1] = 125;
 13369                           
 13370                           ;app_led.c: 1476: dynamic_min[2] = 0;
 13371                           
 13372                           ;app_led.c: 1477: dynamic_max[2] = 250;
 13373  0A06  233E  3188         	fcall	PL16	;call to abstracted procedure
 13374                           
 13375                           ;app_led.c: 1478: dynamic_min[3] = 125;
 13376  0A08  307D               	movlw	125
 13377                           
 13378                           ;app_led.c: 1479: dynamic_max[3] = 250;
 13379                           
 13380                           ;app_led.c: 1480: dynamic_period = 1000;
 13381                           
 13382                           ;app_led.c: 1481: break;
 13383  0A09  2B71               	ljmp	PL60	;call to abstracted procedure
 13384  0A0A                     i1l4904:	
 13385                           
 13386                           ;app_led.c: 1483: dynamic_chn = 0x0A;
 13387  0A0A  300A               	movlw	10
 13388  0A0B  00D2               	movwf	_dynamic_chn	;volatile
 13389                           
 13390                           ;app_led.c: 1484: dynamic_rise = 0x00;
 13391  0A0C  0021               	movlb	1	; select bank1
 13392  0A0D  01CC               	clrf	_dynamic_rise^(0+128)	;volatile
 13393                           
 13394                           ;app_led.c: 1485: dynamic_min[1] = 0;
 13395  0A0E  0020               	movlb	0	; select bank0
 13396  0A0F  307D               	movlw	125
 13397  0A10  01D9               	clrf	_dynamic_min+1
 13398                           
 13399                           ;app_led.c: 1486: dynamic_max[1] = 125;
 13400  0A11  00D5               	movwf	_dynamic_max+1
 13401                           
 13402                           ;app_led.c: 1487: dynamic_min[3] = 0;
 13403  0A12  01DB               	clrf	_dynamic_min+3
 13404                           
 13405                           ;app_led.c: 1488: dynamic_max[3] = 125;
 13406  0A13  00D7               	movwf	_dynamic_max+3
 13407  0A14  30E8               	movlw	232
 13408                           
 13409                           ;app_led.c: 1489: current_bright[0] = 0;
 13410  0A15  01C8               	clrf	_current_bright
 13411  0A16  01C9               	clrf	_current_bright+1
 13412                           
 13413                           ;app_led.c: 1490: current_bright[2] = 1000;
 13414  0A17  00CC               	movwf	_current_bright+4
 13415  0A18  3003               	movlw	3
 13416  0A19  00CD               	movwf	_current_bright+5
 13417                           
 13418                           ;app_led.c: 1491: dynamic_period = 1000;
 13419                           
 13420                           ;app_led.c: 1492: break;
 13421  0A1A  2B88               	ljmp	PL72	;call to abstracted procedure
 13422  0A1B                     i1l4918:	
 13423                           
 13424                           ;app_led.c: 1494: dynamic_chn = 0x04;
 13425  0A1B  3004               	movlw	4
 13426  0A1C  00D2               	movwf	_dynamic_chn	;volatile
 13427                           
 13428                           ;app_led.c: 1495: dynamic_rise = 0x00;
 13429  0A1D  0021               	movlb	1	; select bank1
 13430  0A1E  01CC               	clrf	_dynamic_rise^(0+128)	;volatile
 13431                           
 13432                           ;app_led.c: 1496: dynamic_min[2] = 63;
 13433  0A1F  303F               	movlw	63
 13434  0A20  0020               	movlb	0	; select bank0
 13435  0A21  00DA               	movwf	_dynamic_min+2
 13436                           
 13437                           ;app_led.c: 1497: dynamic_max[2] = 250;
 13438  0A22  30FA               	movlw	250
 13439  0A23  00D6               	movwf	_dynamic_max+2
 13440  0A24  30E8               	movlw	232
 13441                           
 13442                           ;app_led.c: 1498: current_bright[0] = 0;
 13443                           
 13444                           ;app_led.c: 1499: current_bright[1] = 0;
 13445                           
 13446                           ;app_led.c: 1501: dynamic_period = 1000;
 13447  0A25  2351               	fcall	PL30	;call to abstracted procedure
 13448  0A26  3003               	movlw	3
 13449  0A27  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 13450                           
 13451                           ;app_led.c: 1502: break;
 13452  0A28  0008               	return
 13453  0A29                     i1l4932:	
 13454                           
 13455                           ;app_led.c: 1504: dynamic_chn = 0x08;
 13456  0A29  3008               	movlw	8
 13457  0A2A  00D2               	movwf	_dynamic_chn	;volatile
 13458                           
 13459                           ;app_led.c: 1505: dynamic_rise = 0x08;
 13460  0A2B  0021               	movlb	1	; select bank1
 13461  0A2C  00CC               	movwf	_dynamic_rise^(0+128)	;volatile
 13462                           
 13463                           ;app_led.c: 1506: dynamic_min[3] = 0;
 13464  0A2D  0020               	movlb	0	; select bank0
 13465  0A2E  3071               	movlw	113
 13466  0A2F  01DB               	clrf	_dynamic_min+3
 13467                           
 13468                           ;app_led.c: 1507: dynamic_max[3] = 113;
 13469  0A30  00D7               	movwf	_dynamic_max+3
 13470                           
 13471                           ;app_led.c: 1508: current_bright[0] = 0;
 13472                           
 13473                           ;app_led.c: 1509: current_bright[1] = 0;
 13474                           
 13475                           ;app_led.c: 1510: current_bright[2] = 250;
 13476  0A31  23AA  3188         	fcall	PL90	;call to abstracted procedure
 13477  0A33  3096               	movlw	150
 13478  0A34  01CD               	clrf	_current_bright+5
 13479                           
 13480                           ;app_led.c: 1511: dynamic_period = 150;
 13481                           
 13482                           ;app_led.c: 1512: break;
 13483  0A35  2B8E               	ljmp	PL74	;call to abstracted procedure
 13484  0A36                     i1l4942:	
 13485                           
 13486                           ;app_led.c: 1514: dynamic_chn = 0x07;
 13487  0A36  3007               	movlw	7
 13488  0A37  00D2               	movwf	_dynamic_chn	;volatile
 13489                           
 13490                           ;app_led.c: 1515: dynamic_rise = 0x07;
 13491  0A38  0021               	movlb	1	; select bank1
 13492  0A39  00CC               	movwf	_dynamic_rise^(0+128)	;volatile
 13493                           
 13494                           ;app_led.c: 1516: dynamic_min[0] = 110;
 13495  0A3A  306E               	movlw	110
 13496  0A3B  0020               	movlb	0	; select bank0
 13497                           
 13498                           ;app_led.c: 1517: dynamic_max[0] = 125;
 13499                           
 13500                           ;app_led.c: 1518: dynamic_min[1] = 110;
 13501                           
 13502                           ;app_led.c: 1519: dynamic_max[1] = 125;
 13503                           
 13504                           ;app_led.c: 1520: dynamic_min[2] = 110;
 13505                           
 13506                           ;app_led.c: 1521: dynamic_max[2] = 125;
 13507                           
 13508                           ;app_led.c: 1522: current_bright[3] = 250;
 13509  0A3C  2398  3188         	fcall	PL82	;call to abstracted procedure
 13510  0A3E  00CE               	movwf	_current_bright+6
 13511  0A3F  300F               	movlw	15
 13512                           
 13513                           ;app_led.c: 1523: dynamic_period = 15;
 13514                           
 13515                           ;app_led.c: 1524: break;
 13516  0A40  2B5A               	ljmp	PL38	;call to abstracted procedure
 13517  0A41                     i1l4944:	
 13518                           
 13519                           ;app_led.c: 1526: dynamic_chn = 0x07;
 13520  0A41  3007               	movlw	7
 13521  0A42  00D2               	movwf	_dynamic_chn	;volatile
 13522                           
 13523                           ;app_led.c: 1527: dynamic_rise = 0x00;
 13524  0A43  0021               	movlb	1	; select bank1
 13525  0A44  01CC               	clrf	_dynamic_rise^(0+128)	;volatile
 13526                           
 13527                           ;app_led.c: 1528: dynamic_min[0] = 110;
 13528  0A45  306E               	movlw	110
 13529  0A46  0020               	movlb	0	; select bank0
 13530                           
 13531                           ;app_led.c: 1529: dynamic_max[0] = 125;
 13532                           
 13533                           ;app_led.c: 1530: dynamic_min[1] = 110;
 13534                           
 13535                           ;app_led.c: 1531: dynamic_max[1] = 125;
 13536                           
 13537                           ;app_led.c: 1532: dynamic_min[2] = 110;
 13538                           
 13539                           ;app_led.c: 1533: dynamic_max[2] = 125;
 13540                           
 13541                           ;app_led.c: 1534: current_bright[3] = 250;
 13542  0A47  2398  3188         	fcall	PL82	;call to abstracted procedure
 13543  0A49                     L26:	
 13544  0A49  00CE               	movwf	_current_bright+6
 13545  0A4A  300F               	movlw	15
 13546                           
 13547                           ;app_led.c: 1535: dynamic_period = 15;
 13548                           
 13549                           ;app_led.c: 1536: break;
 13550  0A4B  2B5A               	ljmp	PL38	;call to abstracted procedure
 13551  0A4C                     i1l4964:	
 13552                           
 13553                           ;app_led.c: 1538: dynamic_chn = 0x00;
 13554  0A4C  01D2               	clrf	_dynamic_chn	;volatile
 13555                           
 13556                           ;app_led.c: 1539: current_bright[0] = 0;
 13557                           
 13558                           ;app_led.c: 1540: current_bright[1] = 0;
 13559                           
 13560                           ;app_led.c: 1541: current_bright[2] = 0;
 13561  0A4D  23F2  3188         	fcall	PL154	;call to abstracted procedure
 13562                           
 13563                           ;app_led.c: 1542: current_bright[3] = 0;
 13564  0A4F  01CE               	clrf	_current_bright+6
 13565  0A50  01CF               	clrf	_current_bright+7
 13566  0A51                     i1l4966:	
 13567                           
 13568                           ;app_led.c: 1543: dynamic_period = 30;
 13569  0A51  301E               	movlw	30
 13570                           
 13571                           ;app_led.c: 1544: break;
 13572  0A52  2B8E               	ljmp	PL74	;call to abstracted procedure
 13573  0A53                     i1l4968:	
 13574                           
 13575                           ;app_led.c: 1546: dynamic_chn = 0x00;
 13576  0A53  01D2               	clrf	_dynamic_chn	;volatile
 13577  0A54  302C               	movlw	44
 13578                           
 13579                           ;app_led.c: 1547: current_bright[0] = 0;
 13580                           
 13581                           ;app_led.c: 1548: current_bright[1] = 0;
 13582                           
 13583                           ;app_led.c: 1549: current_bright[2] = 0;
 13584  0A55  23F2  3188         	fcall	PL154	;call to abstracted procedure
 13585                           
 13586                           ;app_led.c: 1550: current_bright[3] = 300;
 13587  0A57  00CE               	movwf	_current_bright+6
 13588  0A58  3001               	movlw	1
 13589  0A59  00CF               	movwf	_current_bright+7
 13590  0A5A  2A51               	goto	i1l4966
 13591  0A5B                     i1l4974:	
 13592                           
 13593                           ;app_led.c: 1554: dynamic_chn = 0x07;
 13594  0A5B  3007               	movlw	7
 13595                           
 13596                           ;app_led.c: 1555: dynamic_rise = 0x07;
 13597                           
 13598                           ;app_led.c: 1556: dynamic_min[0] = 75;
 13599  0A5C  23EB  3188         	fcall	PL148	;call to abstracted procedure
 13600                           
 13601                           ;app_led.c: 1557: dynamic_max[0] = 90;
 13602  0A5E  305A               	movlw	90
 13603  0A5F  00D4               	movwf	_dynamic_max
 13604                           
 13605                           ;app_led.c: 1558: dynamic_min[1] = 75;
 13606  0A60  304B               	movlw	75
 13607  0A61  00D9               	movwf	_dynamic_min+1
 13608                           
 13609                           ;app_led.c: 1559: dynamic_max[1] = 90;
 13610  0A62  305A               	movlw	90
 13611  0A63  00D5               	movwf	_dynamic_max+1
 13612                           
 13613                           ;app_led.c: 1560: dynamic_min[2] = 75;
 13614  0A64  304B               	movlw	75
 13615  0A65  00DA               	movwf	_dynamic_min+2
 13616                           
 13617                           ;app_led.c: 1561: dynamic_max[2] = 90;
 13618  0A66  305A               	movlw	90
 13619  0A67  00D6               	movwf	_dynamic_max+2
 13620                           
 13621                           ;app_led.c: 1562: current_bright[3] = 250;
 13622  0A68  30FA               	movlw	250
 13623  0A69  00CE               	movwf	_current_bright+6
 13624  0A6A  301E               	movlw	30
 13625                           
 13626                           ;app_led.c: 1563: dynamic_period = 30;
 13627                           
 13628                           ;app_led.c: 1564: break;
 13629  0A6B  2B5A               	ljmp	PL38	;call to abstracted procedure
 13630  0A6C                     i1l4976:	
 13631                           
 13632                           ;app_led.c: 1566: dynamic_chn = 0x00;
 13633  0A6C  01D2               	clrf	_dynamic_chn	;volatile
 13634                           
 13635                           ;app_led.c: 1567: current_bright[0] = 0;
 13636                           
 13637                           ;app_led.c: 1568: current_bright[1] = 0;
 13638                           
 13639                           ;app_led.c: 1569: current_bright[2] = 250;
 13640  0A6D  23AA  3188         	fcall	PL90	;call to abstracted procedure
 13641  0A6F  3064               	movlw	100
 13642  0A70  01CD               	clrf	_current_bright+5
 13643                           
 13644                           ;app_led.c: 1570: current_bright[3] = 100;
 13645  0A71  2A49               	goto	L26
 13646  0A72                     i1l4984:	
 13647                           
 13648                           ;app_led.c: 1574: dynamic_chn = 0x00;
 13649  0A72  01D2               	clrf	_dynamic_chn	;volatile
 13650                           
 13651                           ;app_led.c: 1575: current_bright[0] = 0;
 13652                           
 13653                           ;app_led.c: 1576: current_bright[1] = 0;
 13654                           
 13655                           ;app_led.c: 1577: current_bright[2] = 250;
 13656  0A73  23AA               	fcall	PL90	;call to abstracted procedure
 13657  0A74  30B8               	movlw	184
 13658  0A75  01CD               	clrf	_current_bright+5
 13659  0A76  01CE               	clrf	_current_bright+6
 13660  0A77  01CF               	clrf	_current_bright+7
 13661                           
 13662                           ;app_led.c: 1579: dynamic_period = 3000;
 13663  0A78  0021               	movlb	1	; select bank1
 13664  0A79  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 13665  0A7A  300B               	movlw	11
 13666  0A7B  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 13667                           
 13668                           ;app_led.c: 1580: break;
 13669  0A7C  0008               	return
 13670  0A7D                     i1l4990:	
 13671                           
 13672                           ;app_led.c: 1582: dynamic_chn = 0x0D;
 13673  0A7D  300D               	movlw	13
 13674  0A7E  00D2               	movwf	_dynamic_chn	;volatile
 13675                           
 13676                           ;app_led.c: 1583: dynamic_rise = 0x0D;
 13677  0A7F  0021               	movlb	1	; select bank1
 13678                           
 13679                           ;app_led.c: 1584: dynamic_min[0] = 0;
 13680                           
 13681                           ;app_led.c: 1585: dynamic_max[0] = 250;
 13682  0A80  234B               	fcall	PL20	;call to abstracted procedure
 13683                           
 13684                           ;app_led.c: 1586: dynamic_min[2] = 63;
 13685  0A81  303F               	movlw	63
 13686  0A82  00DA               	movwf	_dynamic_min+2
 13687                           
 13688                           ;app_led.c: 1587: dynamic_max[2] = 125;
 13689  0A83  307D               	movlw	125
 13690  0A84  00D6               	movwf	_dynamic_max+2
 13691  0A85  303F               	movlw	63
 13692                           
 13693                           ;app_led.c: 1588: dynamic_min[3] = 0;
 13694  0A86  01DB               	clrf	_dynamic_min+3
 13695                           
 13696                           ;app_led.c: 1589: dynamic_max[3] = 63;
 13697  0A87  00D7               	movwf	_dynamic_max+3
 13698  0A88                     i1l5002:	
 13699  0A88  30E8               	movlw	232
 13700                           
 13701                           ;app_led.c: 1590: current_bright[1] = 0;
 13702  0A89  01CA               	clrf	_current_bright+2
 13703  0A8A  01CB               	clrf	_current_bright+3
 13704                           
 13705                           ;app_led.c: 1591: dynamic_period = 1000;
 13706  0A8B  0021               	movlb	1	; select bank1
 13707  0A8C  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 13708  0A8D  3003               	movlw	3
 13709  0A8E  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 13710                           
 13711                           ;app_led.c: 1592: break;
 13712  0A8F  0008               	return
 13713  0A90                     i1l5004:	
 13714                           
 13715                           ;app_led.c: 1594: dynamic_chn = 0x0C;
 13716  0A90  300C               	movlw	12
 13717  0A91  00D2               	movwf	_dynamic_chn	;volatile
 13718                           
 13719                           ;app_led.c: 1595: dynamic_rise = 0x08;
 13720                           
 13721                           ;app_led.c: 1596: dynamic_min[2] = 0;
 13722  0A92  23FF  3188         	fcall	PL172	;call to abstracted procedure
 13723  0A94  01DA               	clrf	_dynamic_min+2
 13724                           
 13725                           ;app_led.c: 1597: dynamic_max[2] = 125;
 13726  0A95  00D6               	movwf	_dynamic_max+2
 13727                           
 13728                           ;app_led.c: 1598: dynamic_min[3] = 63;
 13729  0A96  303F               	movlw	63
 13730  0A97  00DB               	movwf	_dynamic_min+3
 13731                           
 13732                           ;app_led.c: 1599: dynamic_max[3] = 250;
 13733  0A98  30FA               	movlw	250
 13734  0A99  00D7               	movwf	_dynamic_max+3
 13735                           
 13736                           ;app_led.c: 1600: current_bright[0] = 1000;
 13737  0A9A  30E8               	movlw	232
 13738  0A9B  00C8               	movwf	_current_bright
 13739  0A9C  3003               	movlw	3
 13740  0A9D  00C9               	movwf	_current_bright+1
 13741  0A9E  2A88               	goto	i1l5002
 13742  0A9F                     i1l5020:	
 13743  0A9F  0851               	movf	_dynamic_state,w	;volatile
 13744                           
 13745                           ; Switch size 1, requested type "space"
 13746                           ; Number of cases is 17, Range of values is 0 to 16
 13747                           ; switch strategies available:
 13748                           ; Name         Instructions Cycles
 13749                           ; direct_byte           40     6 (fixed)
 13750                           ; simple_byte           52    27 (average)
 13751                           ; jumptable            260     6 (fixed)
 13752                           ;	Chosen strategy is direct_byte
 13753  0AA0  0084               	movwf	4
 13754  0AA1  3011               	movlw	17
 13755  0AA2  0204               	subwf	4,w
 13756  0AA3  1803               	skipnc
 13757  0AA4  0008               	return
 13758  0AA5  3198               	movlp	high i1S8366
 13759  0AA6  3504               	lslf	4,w
 13760  0AA7  3EDC               	addlw	low i1S8366
 13761  0AA8  0082               	movwf	2
 13762  0AA9  0008               	return
 13763  0AAA                     __end_of_led_thunder3_process:	
 13764  0AAA                     __ptext104:	
 13765 ;; *************** function _led_thunder2_process *****************
 13766 ;; Defined at:
 13767 ;;		line 1238 in file "src/app_led.c"
 13768 ;; Parameters:    Size  Location     Type
 13769 ;;		None
 13770 ;; Auto vars:     Size  Location     Type
 13771 ;;		None
 13772 ;; Return value:  Size  Location     Type
 13773 ;;                  1    wreg      void 
 13774 ;; Registers used:
 13775 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13776 ;; Tracked objects:
 13777 ;;		On entry : 1F/0
 13778 ;;		On exit  : 1E/0
 13779 ;;		Unchanged: 0/0
 13780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13785 ;;Total ram usage:        0 bytes
 13786 ;; Hardware stack levels used:    1
 13787 ;; This function calls:
 13788 ;;		Nothing
 13789 ;; This function is called by:
 13790 ;;		_led_dynamic_process
 13791 ;; This function uses a non-reentrant model
 13792 ;;
 13793                           
 13794                           
 13795                           ;psect for function _led_thunder2_process
 13796  0AAA                     _led_thunder2_process:	
 13797                           
 13798                           ;app_led.c: 1240: current_bright[0] = 0;
 13799                           
 13800                           ;incstack = 0
 13801                           ; Regs used in _led_thunder2_process: [wreg-fsr0h+status,2+status,0]
 13802  0AAA  01C8               	clrf	_current_bright
 13803  0AAB  01C9               	clrf	_current_bright+1
 13804                           
 13805                           ;app_led.c: 1241: current_bright[1] = 0;
 13806  0AAC  01CA               	clrf	_current_bright+2
 13807  0AAD  01CB               	clrf	_current_bright+3
 13808                           
 13809                           ;app_led.c: 1242: switch(dynamic_state)
 13810  0AAE  0851               	movf	_dynamic_state,w	;volatile
 13811                           
 13812                           ; Switch size 1, requested type "space"
 13813                           ; Number of cases is 75, Range of values is 0 to 74
 13814                           ; switch strategies available:
 13815                           ; Name         Instructions Cycles
 13816                           ; direct_byte          156     6 (fixed)
 13817                           ; simple_byte          226   114 (average)
 13818                           ; jumptable            260     6 (fixed)
 13819                           ;	Chosen strategy is direct_byte
 13820  0AAF  0084               	movwf	4
 13821  0AB0  304B               	movlw	75
 13822  0AB1  0204               	subwf	4,w
 13823  0AB2  1803               	skipnc
 13824  0AB3  0008               	return
 13825  0AB4  3198               	movlp	high i1S8368
 13826  0AB5  3504               	lslf	4,w
 13827  0AB6  3E00               	addlw	low i1S8368
 13828  0AB7  0082               	movwf	2
 13829  0AB8  0008               	return
 13830  0AB9                     i1l828:	
 13831  0AB9                     i1l4748:	
 13832                           
 13833                           ;app_led.c: 1245: case 15:
 13834                           ;app_led.c: 1246: case 30:
 13835                           ;app_led.c: 1247: case 45:
 13836                           ;app_led.c: 1248: case 60:
 13837                           ;app_led.c: 1249: dynamic_chn = 0x0C;
 13838  0AB9  300C               	movlw	12
 13839                           
 13840                           ;app_led.c: 1250: dynamic_rise = 0x04;
 13841                           
 13842                           ;app_led.c: 1251: dynamic_min[2] = 25;
 13843                           
 13844                           ;app_led.c: 1252: dynamic_max[2] = 53;
 13845                           
 13846                           ;app_led.c: 1253: dynamic_min[3] = 3;
 13847                           
 13848                           ;app_led.c: 1254: dynamic_max[3] = 25;
 13849                           
 13850                           ;app_led.c: 1255: dynamic_period = 80;
 13851  0ABA  237A  3188         	fcall	PL68	;call to abstracted procedure
 13852                           
 13853                           ;app_led.c: 1256: break;
 13854  0ABC  2B8E               	ljmp	PL74	;call to abstracted procedure
 13855  0ABD                     i1l834:	
 13856  0ABD                     i1l4750:	
 13857                           
 13858                           ;app_led.c: 1258: case 16:
 13859                           ;app_led.c: 1259: case 31:
 13860                           ;app_led.c: 1260: case 46:
 13861                           ;app_led.c: 1261: case 61:
 13862                           ;app_led.c: 1262: dynamic_chn = 0x04;
 13863  0ABD  3004               	movlw	4
 13864  0ABE  00D2               	movwf	_dynamic_chn	;volatile
 13865                           
 13866                           ;app_led.c: 1263: dynamic_rise = 0x04;
 13867  0ABF  0021               	movlb	1	; select bank1
 13868  0AC0  00CC               	movwf	_dynamic_rise^(0+128)	;volatile
 13869                           
 13870                           ;app_led.c: 1264: dynamic_min[2] = 53;
 13871  0AC1  3035               	movlw	53
 13872  0AC2  0020               	movlb	0	; select bank0
 13873  0AC3  00DA               	movwf	_dynamic_min+2
 13874                           
 13875                           ;app_led.c: 1265: dynamic_max[2] = 60;
 13876  0AC4  303C               	movlw	60
 13877  0AC5  00D6               	movwf	_dynamic_max+2
 13878                           
 13879                           ;app_led.c: 1266: current_bright[3] = 0;
 13880  0AC6  01CE               	clrf	_current_bright+6
 13881  0AC7                     L28:	
 13882  0AC7  3014               	movlw	20
 13883                           
 13884                           ;app_led.c: 1267: dynamic_period = 20;
 13885                           
 13886                           ;app_led.c: 1268: break;
 13887  0AC8  2B5A               	ljmp	PL38	;call to abstracted procedure
 13888  0AC9                     i1l839:	
 13889  0AC9                     i1l4756:	
 13890                           
 13891                           ;app_led.c: 1270: case 17:
 13892                           ;app_led.c: 1271: case 32:
 13893                           ;app_led.c: 1272: case 47:
 13894                           ;app_led.c: 1273: case 62:
 13895                           ;app_led.c: 1274: dynamic_chn = 0x04;
 13896  0AC9  3004               	movlw	4
 13897  0ACA  00D2               	movwf	_dynamic_chn	;volatile
 13898                           
 13899                           ;app_led.c: 1275: dynamic_rise = 0x04;
 13900  0ACB  0021               	movlb	1	; select bank1
 13901  0ACC  00CC               	movwf	_dynamic_rise^(0+128)	;volatile
 13902                           
 13903                           ;app_led.c: 1276: dynamic_min[2] = 60;
 13904  0ACD  303C               	movlw	60
 13905  0ACE  0020               	movlb	0	; select bank0
 13906  0ACF  00DA               	movwf	_dynamic_min+2
 13907                           
 13908                           ;app_led.c: 1277: dynamic_max[2] = 74;
 13909  0AD0  304A               	movlw	74
 13910  0AD1  00D6               	movwf	_dynamic_max+2
 13911                           
 13912                           ;app_led.c: 1278: current_bright[3] = 16;
 13913  0AD2  3010               	movlw	16
 13914  0AD3  00CE               	movwf	_current_bright+6
 13915  0AD4  3028               	movlw	40
 13916                           
 13917                           ;app_led.c: 1279: dynamic_period = 40;
 13918                           
 13919                           ;app_led.c: 1280: break;
 13920  0AD5  2B5A               	ljmp	PL38	;call to abstracted procedure
 13921  0AD6                     i1l844:	
 13922  0AD6                     i1l4758:	
 13923                           
 13924                           ;app_led.c: 1282: case 18:
 13925                           ;app_led.c: 1283: case 33:
 13926                           ;app_led.c: 1284: case 48:
 13927                           ;app_led.c: 1285: case 63:
 13928                           ;app_led.c: 1286: dynamic_chn = 0x04;
 13929  0AD6  3004               	movlw	4
 13930  0AD7  00D2               	movwf	_dynamic_chn	;volatile
 13931                           
 13932                           ;app_led.c: 1287: dynamic_rise = 0x04;
 13933  0AD8  0021               	movlb	1	; select bank1
 13934  0AD9  00CC               	movwf	_dynamic_rise^(0+128)	;volatile
 13935                           
 13936                           ;app_led.c: 1288: dynamic_min[2] = 74;
 13937  0ADA  304A               	movlw	74
 13938  0ADB  0020               	movlb	0	; select bank0
 13939  0ADC  00DA               	movwf	_dynamic_min+2
 13940                           
 13941                           ;app_led.c: 1289: dynamic_max[2] = 123;
 13942  0ADD  307B               	movlw	123
 13943  0ADE  00D6               	movwf	_dynamic_max+2
 13944  0ADF  308C               	movlw	140
 13945                           
 13946                           ;app_led.c: 1290: current_bright[3] = 0;
 13947  0AE0  01CE               	clrf	_current_bright+6
 13948                           
 13949                           ;app_led.c: 1291: dynamic_period = 140;
 13950                           
 13951                           ;app_led.c: 1292: break;
 13952  0AE1  2B5A               	ljmp	PL38	;call to abstracted procedure
 13953  0AE2                     i1l849:	
 13954  0AE2                     i1l4764:	
 13955                           
 13956                           ;app_led.c: 1294: case 19:
 13957                           ;app_led.c: 1295: case 34:
 13958                           ;app_led.c: 1296: case 49:
 13959                           ;app_led.c: 1297: case 64:
 13960                           ;app_led.c: 1298: dynamic_chn = 0x00;
 13961  0AE2  01D2               	clrf	_dynamic_chn	;volatile
 13962                           
 13963                           ;app_led.c: 1299: current_bright[2] = 492;
 13964  0AE3  30EC               	movlw	236
 13965  0AE4  00CC               	movwf	_current_bright+4
 13966  0AE5  3001               	movlw	1
 13967  0AE6  00CD               	movwf	_current_bright+5
 13968                           
 13969                           ;app_led.c: 1300: current_bright[3] = 250;
 13970  0AE7  30FA               	movlw	250
 13971  0AE8                     L27:	
 13972  0AE8  00CE               	movwf	_current_bright+6
 13973  0AE9                     L29:	
 13974  0AE9  300A               	movlw	10
 13975                           
 13976                           ;app_led.c: 1301: dynamic_period = 10;
 13977                           
 13978                           ;app_led.c: 1302: break;
 13979  0AEA  2B5A               	ljmp	PL38	;call to abstracted procedure
 13980  0AEB                     i1l854:	
 13981  0AEB                     i1l4772:	
 13982                           
 13983                           ;app_led.c: 1304: case 20:
 13984                           ;app_led.c: 1305: case 35:
 13985                           ;app_led.c: 1306: case 50:
 13986                           ;app_led.c: 1307: case 65:
 13987                           ;app_led.c: 1308: dynamic_chn = 0x00;
 13988  0AEB  01D2               	clrf	_dynamic_chn	;volatile
 13989                           
 13990                           ;app_led.c: 1309: current_bright[2] = 200;
 13991  0AEC  30C8               	movlw	200
 13992  0AED  00CC               	movwf	_current_bright+4
 13993  0AEE  3064               	movlw	100
 13994  0AEF  01CD               	clrf	_current_bright+5
 13995                           
 13996                           ;app_led.c: 1310: current_bright[3] = 100;
 13997  0AF0  2AE8               	goto	L27
 13998  0AF1                     i1l859:	
 13999  0AF1                     i1l4780:	
 14000                           
 14001                           ;app_led.c: 1314: case 21:
 14002                           ;app_led.c: 1315: case 36:
 14003                           ;app_led.c: 1316: case 51:
 14004                           ;app_led.c: 1317: case 66:
 14005                           ;app_led.c: 1318: dynamic_chn = 0x00;
 14006  0AF1  01D2               	clrf	_dynamic_chn	;volatile
 14007                           
 14008                           ;app_led.c: 1319: current_bright[2] = 100;
 14009  0AF2  3064               	movlw	100
 14010  0AF3  00CC               	movwf	_current_bright+4
 14011  0AF4  300A               	movlw	10
 14012  0AF5  01CD               	clrf	_current_bright+5
 14013  0AF6  01CE               	clrf	_current_bright+6
 14014                           
 14015                           ;app_led.c: 1321: dynamic_period = 10;
 14016                           
 14017                           ;app_led.c: 1322: break;
 14018  0AF7  2B5A               	ljmp	PL38	;call to abstracted procedure
 14019  0AF8                     i1l864:	
 14020  0AF8                     i1l4786:	
 14021                           
 14022                           ;app_led.c: 1324: case 22:
 14023                           ;app_led.c: 1325: case 37:
 14024                           ;app_led.c: 1326: case 52:
 14025                           ;app_led.c: 1327: case 67:
 14026                           ;app_led.c: 1328: dynamic_chn = 0x00;
 14027  0AF8  01D2               	clrf	_dynamic_chn	;volatile
 14028                           
 14029                           ;app_led.c: 1329: current_bright[2] = 50;
 14030  0AF9  3032               	movlw	50
 14031  0AFA  00CC               	movwf	_current_bright+4
 14032  0AFB  304C               	movlw	76
 14033  0AFC  01CD               	clrf	_current_bright+5
 14034                           
 14035                           ;app_led.c: 1330: current_bright[3] = 76;
 14036  0AFD  00CE               	movwf	_current_bright+6
 14037  0AFE  2AC7               	goto	L28
 14038  0AFF                     i1l869:	
 14039  0AFF                     i1l4794:	
 14040                           
 14041                           ;app_led.c: 1334: case 23:
 14042                           ;app_led.c: 1335: case 38:
 14043                           ;app_led.c: 1336: case 53:
 14044                           ;app_led.c: 1337: case 68:
 14045                           ;app_led.c: 1338: dynamic_chn = 0x00;
 14046  0AFF  01D2               	clrf	_dynamic_chn	;volatile
 14047                           
 14048                           ;app_led.c: 1339: current_bright[2] = 0;
 14049  0B00  01CC               	clrf	_current_bright+4
 14050  0B01  01CD               	clrf	_current_bright+5
 14051                           
 14052                           ;app_led.c: 1340: current_bright[3] = 0;
 14053  0B02  01CE               	clrf	_current_bright+6
 14054  0B03  2AE9               	goto	L29
 14055  0B04                     i1l874:	
 14056  0B04                     i1l4798:	
 14057                           
 14058                           ;app_led.c: 1344: case 24:
 14059                           ;app_led.c: 1345: case 39:
 14060                           ;app_led.c: 1346: case 54:
 14061                           ;app_led.c: 1347: case 69:
 14062                           ;app_led.c: 1348: dynamic_chn = 0x0C;
 14063  0B04  300C               	movlw	12
 14064                           
 14065                           ;app_led.c: 1349: dynamic_rise = 0x00;
 14066                           
 14067                           ;app_led.c: 1350: dynamic_min[2] = 25;
 14068  0B05  23BC  3188         	fcall	PL116	;call to abstracted procedure
 14069                           
 14070                           ;app_led.c: 1351: dynamic_max[2] = 75;
 14071  0B07  304B               	movlw	75
 14072  0B08  00D6               	movwf	_dynamic_max+2
 14073  0B09  3019               	movlw	25
 14074                           
 14075                           ;app_led.c: 1352: dynamic_min[3] = 0;
 14076  0B0A  01DB               	clrf	_dynamic_min+3
 14077                           
 14078                           ;app_led.c: 1353: dynamic_max[3] = 25;
 14079  0B0B  00D7               	movwf	_dynamic_max+3
 14080                           
 14081                           ;app_led.c: 1354: dynamic_period = 80;
 14082  0B0C  3050               	movlw	80
 14083                           
 14084                           ;app_led.c: 1355: break;
 14085  0B0D  2B8E               	ljmp	PL74	;call to abstracted procedure
 14086  0B0E                     i1l4808:	
 14087                           
 14088                           ;app_led.c: 1357: case 25:
 14089                           ;app_led.c: 1358: dynamic_chn = 0x00;
 14090  0B0E  01D2               	clrf	_dynamic_chn	;volatile
 14091                           
 14092                           ;app_led.c: 1359: dynamic_period = 500;
 14093  0B0F  30F4               	movlw	244
 14094  0B10  0021               	movlb	1	; select bank1
 14095  0B11  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 14096  0B12  3001               	movlw	1
 14097  0B13  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 14098                           
 14099                           ;app_led.c: 1360: break;
 14100  0B14  0008               	return
 14101  0B15                     i1l4812:	
 14102                           
 14103                           ;app_led.c: 1362: case 70:
 14104                           ;app_led.c: 1363: dynamic_chn = 0x00;
 14105  0B15  01D2               	clrf	_dynamic_chn	;volatile
 14106                           
 14107                           ;app_led.c: 1364: dynamic_period = 1500;
 14108  0B16  30DC               	movlw	220
 14109  0B17  0021               	movlb	1	; select bank1
 14110  0B18  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 14111  0B19  3005               	movlw	5
 14112  0B1A  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 14113                           
 14114                           ;app_led.c: 1365: break;
 14115  0B1B  0008               	return
 14116  0B1C                     i1l4816:	
 14117                           
 14118                           ;app_led.c: 1367: dynamic_chn = 0x00;
 14119  0B1C  01D2               	clrf	_dynamic_chn	;volatile
 14120                           
 14121                           ;app_led.c: 1368: dynamic_period = 2750;
 14122  0B1D  30BE               	movlw	190
 14123  0B1E  0021               	movlb	1	; select bank1
 14124  0B1F  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 14125  0B20  300A               	movlw	10
 14126  0B21  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 14127                           
 14128                           ;app_led.c: 1369: break;
 14129  0B22  0008               	return
 14130  0B23                     i1l884:	
 14131  0B23                     i1l4820:	
 14132                           
 14133                           ;app_led.c: 1371: case 26:
 14134                           ;app_led.c: 1372: case 41:
 14135                           ;app_led.c: 1373: case 56:
 14136                           ;app_led.c: 1374: case 71:
 14137                           ;app_led.c: 1375: dynamic_chn = 0x00;
 14138  0B23  01D2               	clrf	_dynamic_chn	;volatile
 14139                           
 14140                           ;app_led.c: 1376: current_bright[2] = 180;
 14141  0B24  30B4               	movlw	180
 14142  0B25  00CC               	movwf	_current_bright+4
 14143  0B26  3096               	movlw	150
 14144  0B27  01CD               	clrf	_current_bright+5
 14145                           
 14146                           ;app_led.c: 1377: current_bright[3] = 150;
 14147  0B28  00CE               	movwf	_current_bright+6
 14148  0B29  301E               	movlw	30
 14149                           
 14150                           ;app_led.c: 1378: dynamic_period = 30;
 14151                           
 14152                           ;app_led.c: 1379: break;
 14153  0B2A  2B5A               	ljmp	PL38	;call to abstracted procedure
 14154  0B2B                     i1l894:	
 14155  0B2B                     i1l4832:	
 14156                           
 14157                           ;app_led.c: 1391: case 28:
 14158                           ;app_led.c: 1392: case 43:
 14159                           ;app_led.c: 1393: case 58:
 14160                           ;app_led.c: 1394: case 73:
 14161                           ;app_led.c: 1395: dynamic_chn = 0x0C;
 14162  0B2B  300C               	movlw	12
 14163                           
 14164                           ;app_led.c: 1396: dynamic_rise = 0x00;
 14165                           
 14166                           ;app_led.c: 1397: dynamic_min[2] = 25;
 14167  0B2C  23BC  3188         	fcall	PL116	;call to abstracted procedure
 14168                           
 14169                           ;app_led.c: 1398: dynamic_max[2] = 45;
 14170  0B2E  302D               	movlw	45
 14171  0B2F  00D6               	movwf	_dynamic_max+2
 14172  0B30  302B               	movlw	43
 14173                           
 14174                           ;app_led.c: 1399: dynamic_min[3] = 0;
 14175  0B31  01DB               	clrf	_dynamic_min+3
 14176                           
 14177                           ;app_led.c: 1400: dynamic_max[3] = 43;
 14178  0B32  00D7               	movwf	_dynamic_max+3
 14179                           
 14180                           ;app_led.c: 1401: dynamic_period = 100;
 14181  0B33  3064               	movlw	100
 14182                           
 14183                           ;app_led.c: 1402: break;
 14184  0B34  2B8E               	ljmp	PL74	;call to abstracted procedure
 14185  0B35                     i1l4842:	
 14186                           
 14187                           ;app_led.c: 1404: case 44:
 14188                           ;app_led.c: 1405: case 59:
 14189                           ;app_led.c: 1406: dynamic_chn = 0x00;
 14190  0B35  01D2               	clrf	_dynamic_chn	;volatile
 14191                           
 14192                           ;app_led.c: 1407: dynamic_period = 600;
 14193  0B36  3058               	movlw	88
 14194  0B37  0021               	movlb	1	; select bank1
 14195  0B38  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 14196  0B39  3002               	movlw	2
 14197  0B3A  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 14198                           
 14199                           ;app_led.c: 1408: break;
 14200  0B3B  0008               	return
 14201  0B3C                     i1l4846:	
 14202                           
 14203                           ;app_led.c: 1410: dynamic_chn = 0x00;
 14204  0B3C  01D2               	clrf	_dynamic_chn	;volatile
 14205                           
 14206                           ;app_led.c: 1411: dynamic_period = 1000;
 14207                           
 14208                           ;app_led.c: 1412: break;
 14209  0B3D  2B88               	ljmp	PL72	;call to abstracted procedure
 14210  0B3E                     __end_of_led_thunder2_process:	
 14211  0B3E                     PL16:	
 14212  0B3E  0021               	movlb	1	; select bank1
 14213  0B3F  00CC               	movwf	_dynamic_rise^(0+128)	;volatile
 14214  0B40  0020               	movlb	0	; select bank0
 14215  0B41  30FA               	movlw	250
 14216  0B42  01D8               	clrf	_dynamic_min
 14217  0B43  00D4               	movwf	_dynamic_max
 14218  0B44  307D               	movlw	125
 14219  0B45  01D9               	clrf	_dynamic_min+1
 14220  0B46  00D5               	movwf	_dynamic_max+1
 14221  0B47  30FA               	movlw	250
 14222  0B48  01DA               	clrf	_dynamic_min+2
 14223  0B49  00D6               	movwf	_dynamic_max+2
 14224  0B4A  0008               	return
 14225  0B4B                     __end_ofPL16:	
 14226  0B4B                     PL20:	
 14227  0B4B  00CC               	movwf	_dynamic_rise^(0+128)	;volatile
 14228  0B4C  0020               	movlb	0	; select bank0
 14229  0B4D  30FA               	movlw	250
 14230  0B4E  01D8               	clrf	_dynamic_min
 14231  0B4F  00D4               	movwf	_dynamic_max
 14232  0B50  0008               	return
 14233  0B51                     __end_ofPL20:	
 14234  0B51                     PL30:	
 14235  0B51  01C8               	clrf	_current_bright
 14236  0B52  01C9               	clrf	_current_bright+1
 14237  0B53  01CA               	clrf	_current_bright+2
 14238  0B54  01CB               	clrf	_current_bright+3
 14239  0B55  01CE               	clrf	_current_bright+6
 14240  0B56  01CF               	clrf	_current_bright+7
 14241  0B57  0021               	movlb	1	; select bank1
 14242  0B58  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 14243  0B59  0008               	return
 14244  0B5A                     __end_ofPL30:	
 14245  0B5A                     PL38:	
 14246  0B5A  01CF               	clrf	_current_bright+7
 14247  0B5B  0021               	movlb	1	; select bank1
 14248  0B5C  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 14249  0B5D  01C9               	clrf	(_dynamic_period+1)^(0+128)	;volatile
 14250  0B5E  0008               	return
 14251  0B5F                     __end_ofPL38:	
 14252  0B5F                     PL44:	
 14253  0B5F  3001               	movlw	1
 14254  0B60  00D2               	movwf	_dynamic_chn	;volatile
 14255  0B61  0021               	movlb	1	; select bank1
 14256  0B62  01CC               	clrf	_dynamic_rise^(0+128)	;volatile
 14257  0B63  304B               	movlw	75
 14258  0B64  0020               	movlb	0	; select bank0
 14259  0B65  00D8               	movwf	_dynamic_min
 14260  0B66  30AF               	movlw	175
 14261  0B67  00D4               	movwf	_dynamic_max
 14262  0B68  30E8               	movlw	232
 14263  0B69  01CA               	clrf	_current_bright+2
 14264  0B6A  01CB               	clrf	_current_bright+3
 14265  0B6B  00CC               	movwf	_current_bright+4
 14266  0B6C  3003               	movlw	3
 14267  0B6D  00CD               	movwf	_current_bright+5
 14268  0B6E  3064               	movlw	100
 14269  0B6F  00CE               	movwf	_current_bright+6
 14270  0B70  0008               	return
 14271  0B71                     __end_ofPL44:	
 14272  0B71                     PL60:	
 14273  0B71  00DB               	movwf	_dynamic_min+3
 14274  0B72  30FA               	movlw	250
 14275  0B73  00D7               	movwf	_dynamic_max+3
 14276  0B74  30E8               	movlw	232
 14277  0B75  0021               	movlb	1	; select bank1
 14278  0B76  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 14279  0B77  3003               	movlw	3
 14280  0B78  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 14281  0B79  0008               	return
 14282  0B7A                     __end_ofPL60:	
 14283  0B7A                     PL68:	
 14284  0B7A  00D2               	movwf	_dynamic_chn	;volatile
 14285  0B7B  3004               	movlw	4
 14286  0B7C  0021               	movlb	1	; select bank1
 14287  0B7D  00CC               	movwf	_dynamic_rise^(0+128)	;volatile
 14288  0B7E  3019               	movlw	25
 14289  0B7F  0020               	movlb	0	; select bank0
 14290  0B80  00DA               	movwf	_dynamic_min+2
 14291  0B81  3035               	movlw	53
 14292  0B82  00D6               	movwf	_dynamic_max+2
 14293  0B83  3003               	movlw	3
 14294  0B84  00DB               	movwf	_dynamic_min+3
 14295  0B85  3019               	movlw	25
 14296  0B86  00D7               	movwf	_dynamic_max+3
 14297  0B87  3450               	retlw	80
 14298  0B88                     __end_ofPL68:	
 14299  0B88                     PL72:	
 14300  0B88  30E8               	movlw	232
 14301  0B89  0021               	movlb	1	; select bank1
 14302  0B8A  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 14303  0B8B  3003               	movlw	3
 14304  0B8C  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 14305  0B8D  0008               	return
 14306  0B8E                     __end_ofPL72:	
 14307  0B8E                     PL74:	
 14308  0B8E  0021               	movlb	1	; select bank1
 14309  0B8F  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 14310  0B90  01C9               	clrf	(_dynamic_period+1)^(0+128)	;volatile
 14311  0B91  0008               	return
 14312  0B92                     __end_ofPL74:	
 14313  0B92                     PL78:	
 14314  0B92  01C8               	clrf	_current_bright
 14315  0B93  01C9               	clrf	_current_bright+1
 14316  0B94  01CA               	clrf	_current_bright+2
 14317  0B95  01CB               	clrf	_current_bright+3
 14318  0B96  00CE               	movwf	_current_bright+6
 14319  0B97  0008               	return
 14320  0B98                     __end_ofPL78:	
 14321  0B98                     PL82:	
 14322  0B98  00D8               	movwf	_dynamic_min
 14323  0B99  307D               	movlw	125
 14324  0B9A  00D4               	movwf	_dynamic_max
 14325  0B9B  306E               	movlw	110
 14326  0B9C  00D9               	movwf	_dynamic_min+1
 14327  0B9D  307D               	movlw	125
 14328  0B9E  00D5               	movwf	_dynamic_max+1
 14329  0B9F  306E               	movlw	110
 14330  0BA0  00DA               	movwf	_dynamic_min+2
 14331  0BA1  307D               	movlw	125
 14332  0BA2  00D6               	movwf	_dynamic_max+2
 14333  0BA3  34FA               	retlw	250
 14334  0BA4                     __end_ofPL82:	
 14335  0BA4                     PL88:	
 14336  0BA4  01D9               	clrf	_dynamic_min+1
 14337  0BA5  00D5               	movwf	_dynamic_max+1
 14338  0BA6  30FA               	movlw	250
 14339  0BA7  01DA               	clrf	_dynamic_min+2
 14340  0BA8  00D6               	movwf	_dynamic_max+2
 14341  0BA9  0008               	return
 14342  0BAA                     __end_ofPL88:	
 14343  0BAA                     PL90:	
 14344  0BAA  30FA               	movlw	250
 14345  0BAB  01C8               	clrf	_current_bright
 14346  0BAC  01C9               	clrf	_current_bright+1
 14347  0BAD  01CA               	clrf	_current_bright+2
 14348  0BAE  01CB               	clrf	_current_bright+3
 14349  0BAF  00CC               	movwf	_current_bright+4
 14350  0BB0  0008               	return
 14351  0BB1                     __end_ofPL90:	
 14352  0BB1                     PL96:	
 14353  0BB1  0086               	movwf	6
 14354  0BB2  0187               	clrf	7
 14355  0BB3  0801               	movf	1,w
 14356  0BB4  00AD               	movwf	??_led_dynamic_process
 14357  0BB5  01AE               	clrf	??_led_dynamic_process+1
 14358  0BB6  35AD               	lslf	??_led_dynamic_process,f
 14359  0BB7  0DAE               	rlf	??_led_dynamic_process+1,f
 14360  0BB8  35AD               	lslf	??_led_dynamic_process,f
 14361  0BB9  0DAE               	rlf	??_led_dynamic_process+1,f
 14362  0BBA  0831               	movf	led_dynamic_process@temp,w
 14363  0BBB  0008               	return
 14364  0BBC                     __end_ofPL96:	
 14365  0BBC                     PL116:	
 14366  0BBC  00D2               	movwf	_dynamic_chn	;volatile
 14367  0BBD  0021               	movlb	1	; select bank1
 14368  0BBE  01CC               	clrf	_dynamic_rise^(0+128)	;volatile
 14369  0BBF  3019               	movlw	25
 14370  0BC0  0020               	movlb	0	; select bank0
 14371  0BC1  00DA               	movwf	_dynamic_min+2
 14372  0BC2  0008               	return
 14373  0BC3                     __end_ofPL116:	
 14374  0BC3                     PL122:	
 14375  0BC3  00B0               	movwf	??_led_dynamic_process+3
 14376  0BC4  3533               	lslf	led_dynamic_process@i,w
 14377  0BC5  3E48               	addlw	(low (_current_bright| 0))& (0+255)
 14378  0BC6  0086               	movwf	6
 14379  0BC7  082F               	movf	??_led_dynamic_process+2,w
 14380  0BC8  3FC0               	movwi [0]fsr1
 14381  0BC9  0830               	movf	??_led_dynamic_process+3,w
 14382  0BCA  3FC1               	movwi [1]fsr1
 14383  0BCB  0008               	return
 14384  0BCC                     __end_ofPL122:	
 14385  0BCC                     PL124:	
 14386  0BCC  30C2               	movlw	194
 14387  0BCD  00C8               	movwf	_current_bright
 14388  0BCE  3001               	movlw	1
 14389  0BCF  00C9               	movwf	_current_bright+1
 14390  0BD0  30C2               	movlw	194
 14391  0BD1  00CA               	movwf	_current_bright+2
 14392  0BD2  3001               	movlw	1
 14393  0BD3  00CB               	movwf	_current_bright+3
 14394  0BD4  0008               	return
 14395  0BD5                     __end_ofPL124:	
 14396  0BD5                     PL130:	
 14397  0BD5  3E48               	addlw	(low (_current_bright| 0))& (0+255)
 14398  0BD6  0086               	movwf	6
 14399  0BD7  0187               	clrf	7
 14400  0BD8  3F40               	moviw [0]fsr1
 14401  0BD9  00F0               	movwf	pwm4_load_duty@value
 14402  0BDA  3F41               	moviw [1]fsr1
 14403  0BDB  00F1               	movwf	pwm4_load_duty@value+1
 14404  0BDC  0008               	return
 14405  0BDD                     __end_ofPL130:	
 14406  0BDD                     PL132:	
 14407  0BDD  30F4               	movlw	244
 14408  0BDE  01CF               	clrf	_current_bright+7
 14409  0BDF  0021               	movlb	1	; select bank1
 14410  0BE0  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 14411  0BE1  3001               	movlw	1
 14412  0BE2  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 14413  0BE3  0008               	return
 14414  0BE4                     __end_ofPL132:	
 14415  0BE4                     PL146:	
 14416  0BE4  0021               	movlb	1	; select bank1
 14417  0BE5  00CC               	movwf	_dynamic_rise^(0+128)	;volatile
 14418  0BE6  0020               	movlb	0	; select bank0
 14419  0BE7  30AF               	movlw	175
 14420  0BE8  01D8               	clrf	_dynamic_min
 14421  0BE9  00D4               	movwf	_dynamic_max
 14422  0BEA  0008               	return
 14423  0BEB                     __end_ofPL146:	
 14424  0BEB                     PL148:	
 14425  0BEB  00D2               	movwf	_dynamic_chn	;volatile
 14426  0BEC  0021               	movlb	1	; select bank1
 14427  0BED  00CC               	movwf	_dynamic_rise^(0+128)	;volatile
 14428  0BEE  304B               	movlw	75
 14429  0BEF  0020               	movlb	0	; select bank0
 14430  0BF0  00D8               	movwf	_dynamic_min
 14431  0BF1  0008               	return
 14432  0BF2                     __end_ofPL148:	
 14433  0BF2                     PL154:	
 14434  0BF2  01C8               	clrf	_current_bright
 14435  0BF3  01C9               	clrf	_current_bright+1
 14436  0BF4  01CA               	clrf	_current_bright+2
 14437  0BF5  01CB               	clrf	_current_bright+3
 14438  0BF6  01CC               	clrf	_current_bright+4
 14439  0BF7  01CD               	clrf	_current_bright+5
 14440  0BF8  0008               	return
 14441  0BF9                     __end_ofPL154:	
 14442  0BF9                     PL160:	
 14443  0BF9  3E3D               	addlw	(low (_led_load_duty| (0+256)))& (0+255)
 14444  0BFA  0086               	movwf	6
 14445  0BFB  3001               	movlw	1	; select bank2/3
 14446  0BFC  0087               	movwf	7
 14447  0BFD  3F41               	moviw [1]fsr1
 14448  0BFE  0008               	return
 14449  0BFF                     __end_ofPL160:	
 14450  0BFF                     PL172:	
 14451  0BFF  3008               	movlw	8
 14452  0C00  0021               	movlb	1	; select bank1
 14453  0C01  00CC               	movwf	_dynamic_rise^(0+128)	;volatile
 14454  0C02  0020               	movlb	0	; select bank0
 14455  0C03  347D               	retlw	125
 14456  0C04                     __end_ofPL172:	
 14457                           
 14458                           	psect	text51
 14459  1976                     __ptext51:	
 14460 ;; *************** function _led_moon1_init *****************
 14461 ;; Defined at:
 14462 ;;		line 1059 in file "src/app_led.c"
 14463 ;; Parameters:    Size  Location     Type
 14464 ;;		None
 14465 ;; Auto vars:     Size  Location     Type
 14466 ;;		None
 14467 ;; Return value:  Size  Location     Type
 14468 ;;                  1    wreg      void 
 14469 ;; Registers used:
 14470 ;;		wreg, status,2
 14471 ;; Tracked objects:
 14472 ;;		On entry : 1F/0
 14473 ;;		On exit  : 1F/1
 14474 ;;		Unchanged: 0/0
 14475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14480 ;;Total ram usage:        0 bytes
 14481 ;; Hardware stack levels used:    1
 14482 ;; Hardware stack levels required when called:    6
 14483 ;; This function calls:
 14484 ;;		Nothing
 14485 ;; This function is called by:
 14486 ;;		_led_dynamic_init
 14487 ;; This function uses a non-reentrant model
 14488 ;;
 14489                           
 14490                           
 14491                           ;psect for function _led_moon1_init
 14492  1976                     _led_moon1_init:	
 14493                           
 14494                           ;app_led.c: 1061: dynamic_chn = 0x04;
 14495                           
 14496                           ;incstack = 0
 14497                           ; Regs used in _led_moon1_init: [wreg+status,2]
 14498  1976  3004               	movlw	4
 14499  1977  00D2               	movwf	_dynamic_chn	;volatile
 14500                           
 14501                           ;app_led.c: 1062: dynamic_rise = 0x00;
 14502  1978  0021               	movlb	1	; select bank1
 14503  1979  01CC               	clrf	_dynamic_rise^(0+128)	;volatile
 14504                           
 14505                           ;app_led.c: 1063: dynamic_min[2] = 75;
 14506  197A  304B               	movlw	75
 14507  197B  0020               	movlb	0	; select bank0
 14508  197C  00DA               	movwf	_dynamic_min+2
 14509                           
 14510                           ;app_led.c: 1064: dynamic_max[2] = 250;
 14511  197D  30FA               	movlw	250
 14512  197E  00D6               	movwf	_dynamic_max+2
 14513  197F  30D0               	movlw	208
 14514                           
 14515                           ;app_led.c: 1065: current_bright[0] = 0;
 14516                           
 14517                           ;app_led.c: 1066: current_bright[1] = 0;
 14518                           
 14519                           ;app_led.c: 1068: dynamic_period = 2000;
 14520  1980  318B  2351         	fcall	PL30	;call to abstracted procedure
 14521  1982  3007               	movlw	7
 14522  1983  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 14523  1984  0008               	return
 14524  1985                     __end_of_led_moon1_init:	
 14525                           
 14526                           	psect	text56
 14527  1BA8                     __ptext56:	
 14528 ;; *************** function _led_allcolor_init *****************
 14529 ;; Defined at:
 14530 ;;		line 1609 in file "src/app_led.c"
 14531 ;; Parameters:    Size  Location     Type
 14532 ;;		None
 14533 ;; Auto vars:     Size  Location     Type
 14534 ;;		None
 14535 ;; Return value:  Size  Location     Type
 14536 ;;                  1    wreg      void 
 14537 ;; Registers used:
 14538 ;;		wreg, status,2
 14539 ;; Tracked objects:
 14540 ;;		On entry : 1F/0
 14541 ;;		On exit  : 1F/1
 14542 ;;		Unchanged: 0/0
 14543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14548 ;;Total ram usage:        0 bytes
 14549 ;; Hardware stack levels used:    1
 14550 ;; Hardware stack levels required when called:    6
 14551 ;; This function calls:
 14552 ;;		Nothing
 14553 ;; This function is called by:
 14554 ;;		_led_dynamic_init
 14555 ;; This function uses a non-reentrant model
 14556 ;;
 14557                           
 14558                           
 14559                           ;psect for function _led_allcolor_init
 14560  1BA8                     _led_allcolor_init:	
 14561                           
 14562                           ;app_led.c: 1611: dynamic_chn = 0x01;
 14563                           
 14564                           ;incstack = 0
 14565                           ; Regs used in _led_allcolor_init: [wreg+status,2]
 14566                           
 14567                           ;app_led.c: 1612: dynamic_rise = 0x00;
 14568                           
 14569                           ;app_led.c: 1613: dynamic_min[0] = 75;
 14570                           
 14571                           ;app_led.c: 1614: dynamic_max[0] = 175;
 14572                           
 14573                           ;app_led.c: 1615: current_bright[1] = 0;
 14574                           
 14575                           ;app_led.c: 1616: current_bright[2] = 1000;
 14576                           
 14577                           ;app_led.c: 1617: current_bright[3] = 100;
 14578  1BA8  318B  235F  319B   	fcall	PL44	;call to abstracted procedure
 14579  1BAB  30D0               	movlw	208
 14580  1BAC  01CF               	clrf	_current_bright+7
 14581                           
 14582                           ;app_led.c: 1618: dynamic_period = 2000;
 14583  1BAD  2BE4               	ljmp	PL62	;call to abstracted procedure
 14584  1BAE                     __end_of_led_allcolor_init:	
 14585  1BAE                     __ptext53:	
 14586 ;; *************** function _led_cloud3_init *****************
 14587 ;; Defined at:
 14588 ;;		line 1032 in file "src/app_led.c"
 14589 ;; Parameters:    Size  Location     Type
 14590 ;;		None
 14591 ;; Auto vars:     Size  Location     Type
 14592 ;;		None
 14593 ;; Return value:  Size  Location     Type
 14594 ;;                  1    wreg      void 
 14595 ;; Registers used:
 14596 ;;		wreg, status,2
 14597 ;; Tracked objects:
 14598 ;;		On entry : 1F/0
 14599 ;;		On exit  : 1F/1
 14600 ;;		Unchanged: 0/0
 14601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14606 ;;Total ram usage:        0 bytes
 14607 ;; Hardware stack levels used:    1
 14608 ;; Hardware stack levels required when called:    6
 14609 ;; This function calls:
 14610 ;;		Nothing
 14611 ;; This function is called by:
 14612 ;;		_led_dynamic_init
 14613 ;; This function uses a non-reentrant model
 14614 ;;
 14615                           
 14616                           
 14617                           ;psect for function _led_cloud3_init
 14618  1BAE                     _led_cloud3_init:	
 14619                           
 14620                           ;app_led.c: 1034: dynamic_chn = 0x07;
 14621                           
 14622                           ;incstack = 0
 14623                           ; Regs used in _led_cloud3_init: [wreg+status,2]
 14624  1BAE  3007               	movlw	7
 14625  1BAF  00D2               	movwf	_dynamic_chn	;volatile
 14626                           
 14627                           ;app_led.c: 1035: dynamic_rise = 0x01;
 14628  1BB0  3001               	movlw	1
 14629                           
 14630                           ;app_led.c: 1036: dynamic_min[0] = 0;
 14631                           
 14632                           ;app_led.c: 1037: dynamic_max[0] = 250;
 14633                           
 14634                           ;app_led.c: 1038: dynamic_min[1] = 0;
 14635                           
 14636                           ;app_led.c: 1039: dynamic_max[1] = 125;
 14637                           
 14638                           ;app_led.c: 1040: dynamic_min[2] = 0;
 14639                           
 14640                           ;app_led.c: 1041: dynamic_max[2] = 250;
 14641  1BB1  318B  233E  319B   	fcall	PL16	;call to abstracted procedure
 14642                           
 14643                           ;app_led.c: 1042: current_bright[3] = 1000;
 14644  1BB4  30E8               	movlw	232
 14645  1BB5  00CE               	movwf	_current_bright+6
 14646  1BB6  3003               	movlw	3
 14647  1BB7  00CF               	movwf	_current_bright+7
 14648                           
 14649                           ;app_led.c: 1043: dynamic_period = 2000;
 14650  1BB8  30D0               	movlw	208
 14651  1BB9  2BE4               	ljmp	PL62	;call to abstracted procedure
 14652  1BBA                     __end_of_led_cloud3_init:	
 14653  1BBA                     __ptext55:	
 14654 ;; *************** function _led_cloud1_init *****************
 14655 ;; Defined at:
 14656 ;;		line 1004 in file "src/app_led.c"
 14657 ;; Parameters:    Size  Location     Type
 14658 ;;		None
 14659 ;; Auto vars:     Size  Location     Type
 14660 ;;		None
 14661 ;; Return value:  Size  Location     Type
 14662 ;;                  1    wreg      void 
 14663 ;; Registers used:
 14664 ;;		wreg, status,2
 14665 ;; Tracked objects:
 14666 ;;		On entry : 1F/0
 14667 ;;		On exit  : 1F/1
 14668 ;;		Unchanged: 0/0
 14669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14674 ;;Total ram usage:        0 bytes
 14675 ;; Hardware stack levels used:    1
 14676 ;; Hardware stack levels required when called:    6
 14677 ;; This function calls:
 14678 ;;		Nothing
 14679 ;; This function is called by:
 14680 ;;		_led_dynamic_init
 14681 ;; This function uses a non-reentrant model
 14682 ;;
 14683                           
 14684                           
 14685                           ;psect for function _led_cloud1_init
 14686  1BBA                     _led_cloud1_init:	
 14687                           
 14688                           ;app_led.c: 1006: dynamic_chn = 0x0D;
 14689                           
 14690                           ;incstack = 0
 14691                           ; Regs used in _led_cloud1_init: [wreg+status,2]
 14692  1BBA  300D               	movlw	13
 14693  1BBB  00D2               	movwf	_dynamic_chn	;volatile
 14694                           
 14695                           ;app_led.c: 1007: dynamic_rise = 0x09;
 14696  1BBC  3009               	movlw	9
 14697  1BBD  0021               	movlb	1	; select bank1
 14698                           
 14699                           ;app_led.c: 1008: dynamic_min[0] = 0;
 14700                           
 14701                           ;app_led.c: 1009: dynamic_max[0] = 250;
 14702  1BBE  318B  234B  319B   	fcall	PL20	;call to abstracted procedure
 14703                           
 14704                           ;app_led.c: 1010: dynamic_min[2] = 0;
 14705  1BC1  01DA               	clrf	_dynamic_min+2
 14706                           
 14707                           ;app_led.c: 1011: dynamic_max[2] = 250;
 14708  1BC2  00D6               	movwf	_dynamic_max+2
 14709                           
 14710                           ;app_led.c: 1012: dynamic_min[3] = 125;
 14711  1BC3  307D               	movlw	125
 14712  1BC4  00DB               	movwf	_dynamic_min+3
 14713                           
 14714                           ;app_led.c: 1013: dynamic_max[3] = 250;
 14715  1BC5  30FA               	movlw	250
 14716  1BC6  00D7               	movwf	_dynamic_max+3
 14717                           
 14718                           ;app_led.c: 1014: current_bright[1] = 250;
 14719  1BC7  00CA               	movwf	_current_bright+2
 14720  1BC8  30D0               	movlw	208
 14721  1BC9  01CB               	clrf	_current_bright+3
 14722                           
 14723                           ;app_led.c: 1015: dynamic_period = 2000;
 14724  1BCA  2BE4               	ljmp	PL62	;call to abstracted procedure
 14725  1BCB                     __end_of_led_cloud1_init:	
 14726  1BCB                     __ptext49:	
 14727 ;; *************** function _led_moon3_init *****************
 14728 ;; Defined at:
 14729 ;;		line 1083 in file "src/app_led.c"
 14730 ;; Parameters:    Size  Location     Type
 14731 ;;		None
 14732 ;; Auto vars:     Size  Location     Type
 14733 ;;		None
 14734 ;; Return value:  Size  Location     Type
 14735 ;;                  1    wreg      void 
 14736 ;; Registers used:
 14737 ;;		wreg, status,2
 14738 ;; Tracked objects:
 14739 ;;		On entry : 1F/0
 14740 ;;		On exit  : 1F/1
 14741 ;;		Unchanged: 0/0
 14742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14747 ;;Total ram usage:        0 bytes
 14748 ;; Hardware stack levels used:    1
 14749 ;; Hardware stack levels required when called:    6
 14750 ;; This function calls:
 14751 ;;		Nothing
 14752 ;; This function is called by:
 14753 ;;		_led_dynamic_init
 14754 ;; This function uses a non-reentrant model
 14755 ;;
 14756                           
 14757                           
 14758                           ;psect for function _led_moon3_init
 14759  1BCB                     _led_moon3_init:	
 14760                           
 14761                           ;app_led.c: 1085: dynamic_chn = 0x04;
 14762                           
 14763                           ;incstack = 0
 14764                           ; Regs used in _led_moon3_init: [wreg+status,2]
 14765  1BCB  3004               	movlw	4
 14766                           
 14767                           ;app_led.c: 1086: dynamic_rise = 0x00;
 14768                           
 14769                           ;app_led.c: 1087: dynamic_min[2] = 100;
 14770  1BCC  23E9               	fcall	PL176	;call to abstracted procedure
 14771  1BCD  00DA               	movwf	_dynamic_min+2
 14772                           
 14773                           ;app_led.c: 1088: dynamic_max[2] = 250;
 14774  1BCE  30FA               	movlw	250
 14775  1BCF  00D6               	movwf	_dynamic_max+2
 14776  1BD0  3064               	movlw	100
 14777                           
 14778                           ;app_led.c: 1089: current_bright[0] = 0;
 14779                           
 14780                           ;app_led.c: 1090: current_bright[1] = 0;
 14781                           
 14782                           ;app_led.c: 1091: current_bright[3] = 100;
 14783  1BD1  318B  2392  319B   	fcall	PL78	;call to abstracted procedure
 14784  1BD4  30D0               	movlw	208
 14785  1BD5  01CF               	clrf	_current_bright+7
 14786                           
 14787                           ;app_led.c: 1092: dynamic_period = 2000;
 14788  1BD6  2BE4               	ljmp	PL62	;call to abstracted procedure
 14789  1BD7                     __end_of_led_moon3_init:	
 14790  1BD7                     __ptext52:	
 14791 ;; *************** function _led_cloud4_init *****************
 14792 ;; Defined at:
 14793 ;;		line 1046 in file "src/app_led.c"
 14794 ;; Parameters:    Size  Location     Type
 14795 ;;		None
 14796 ;; Auto vars:     Size  Location     Type
 14797 ;;		None
 14798 ;; Return value:  Size  Location     Type
 14799 ;;                  1    wreg      void 
 14800 ;; Registers used:
 14801 ;;		wreg, status,2
 14802 ;; Tracked objects:
 14803 ;;		On entry : 1F/0
 14804 ;;		On exit  : 1F/1
 14805 ;;		Unchanged: 0/0
 14806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14811 ;;Total ram usage:        0 bytes
 14812 ;; Hardware stack levels used:    1
 14813 ;; Hardware stack levels required when called:    6
 14814 ;; This function calls:
 14815 ;;		Nothing
 14816 ;; This function is called by:
 14817 ;;		_led_dynamic_init
 14818 ;; This function uses a non-reentrant model
 14819 ;;
 14820                           
 14821                           
 14822                           ;psect for function _led_cloud4_init
 14823  1BD7                     _led_cloud4_init:	
 14824                           
 14825                           ;app_led.c: 1048: dynamic_chn = 0x09;
 14826                           
 14827                           ;incstack = 0
 14828                           ; Regs used in _led_cloud4_init: [wreg+status,2]
 14829  1BD7  3009               	movlw	9
 14830                           
 14831                           ;app_led.c: 1049: dynamic_rise = 0x00;
 14832                           
 14833                           ;app_led.c: 1050: dynamic_min[0] = 100;
 14834  1BD8  23E9               	fcall	PL176	;call to abstracted procedure
 14835  1BD9  00D8               	movwf	_dynamic_min
 14836                           
 14837                           ;app_led.c: 1051: dynamic_max[0] = 160;
 14838  1BDA  30A0               	movlw	160
 14839  1BDB  00D4               	movwf	_dynamic_max
 14840                           
 14841                           ;app_led.c: 1052: dynamic_min[3] = 125;
 14842                           
 14843                           ;app_led.c: 1053: dynamic_max[3] = 250;
 14844  1BDC  3188  201E  319B   	fcall	PL168	;call to abstracted procedure
 14845                           
 14846                           ;app_led.c: 1054: current_bright[1] = 0;
 14847  1BDF  01CA               	clrf	_current_bright+2
 14848  1BE0  01CB               	clrf	_current_bright+3
 14849                           
 14850                           ;app_led.c: 1055: current_bright[2] = 0;
 14851  1BE1  01CC               	clrf	_current_bright+4
 14852  1BE2  01CD               	clrf	_current_bright+5
 14853                           
 14854                           ;app_led.c: 1056: dynamic_period = 2000;
 14855  1BE3  2BE4               	ljmp	PL62	;call to abstracted procedure
 14856  1BE4                     __end_of_led_cloud4_init:	
 14857  1BE4                     PL62:	
 14858  1BE4  0021               	movlb	1	; select bank1
 14859  1BE5  00C8               	movwf	_dynamic_period^(0+128)	;volatile
 14860  1BE6  3007               	movlw	7
 14861  1BE7  00C9               	movwf	(_dynamic_period^(0+128)+1)	;volatile
 14862  1BE8  0008               	return
 14863  1BE9                     __end_ofPL62:	
 14864  1BE9                     PL176:	
 14865  1BE9  00D2               	movwf	_dynamic_chn	;volatile
 14866  1BEA  0021               	movlb	1	; select bank1
 14867  1BEB  01CC               	clrf	_dynamic_rise^(0+128)	;volatile
 14868  1BEC  0020               	movlb	0	; select bank0
 14869  1BED  3464               	retlw	100
 14870  1BEE                     __end_ofPL176:	
 14871                           
 14872                           	psect	text57
 14873  0800                     __ptext57:	
 14874 ;; *************** function _led_thunder2_init *****************
 14875 ;; Defined at:
 14876 ;;		line 1225 in file "src/app_led.c"
 14877 ;; Parameters:    Size  Location     Type
 14878 ;;		None
 14879 ;; Auto vars:     Size  Location     Type
 14880 ;;		None
 14881 ;; Return value:  Size  Location     Type
 14882 ;;                  1    wreg      void 
 14883 ;; Registers used:
 14884 ;;		wreg, status,2
 14885 ;; Tracked objects:
 14886 ;;		On entry : 1F/0
 14887 ;;		On exit  : 1F/1
 14888 ;;		Unchanged: 0/0
 14889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14894 ;;Total ram usage:        0 bytes
 14895 ;; Hardware stack levels used:    1
 14896 ;; Hardware stack levels required when called:    6
 14897 ;; This function calls:
 14898 ;;		Nothing
 14899 ;; This function is called by:
 14900 ;;		_led_dynamic_init
 14901 ;; This function uses a non-reentrant model
 14902 ;;
 14903                           
 14904                           
 14905                           ;psect for function _led_thunder2_init
 14906  0800                     _led_thunder2_init:	
 14907                           
 14908                           ;app_led.c: 1227: dynamic_chn = 0x0C;
 14909                           
 14910                           ;incstack = 0
 14911                           ; Regs used in _led_thunder2_init: [wreg+status,2]
 14912  0800  300C               	movlw	12
 14913                           
 14914                           ;app_led.c: 1228: dynamic_rise = 0x04;
 14915                           
 14916                           ;app_led.c: 1229: dynamic_min[2] = 25;
 14917                           
 14918                           ;app_led.c: 1230: dynamic_max[2] = 53;
 14919                           
 14920                           ;app_led.c: 1231: dynamic_min[3] = 3;
 14921                           
 14922                           ;app_led.c: 1232: dynamic_max[3] = 25;
 14923  0801  318B  237A         	fcall	PL68	;call to abstracted procedure
 14924                           
 14925                           ;app_led.c: 1233: current_bright[0] = 0;
 14926  0803  01C8               	clrf	_current_bright
 14927  0804  01C9               	clrf	_current_bright+1
 14928  0805  01CA               	clrf	_current_bright+2
 14929  0806  01CB               	clrf	_current_bright+3
 14930                           
 14931                           ;app_led.c: 1235: dynamic_period = 80;
 14932  0807  318B  2B8E         	ljmp	PL74	;call to abstracted procedure
 14933  0809                     __end_of_led_thunder2_init:	
 14934                           
 14935                           	psect	text58
 14936  19D2                     __ptext58:	
 14937 ;; *************** function _led_thunder1_init *****************
 14938 ;; Defined at:
 14939 ;;		line 1138 in file "src/app_led.c"
 14940 ;; Parameters:    Size  Location     Type
 14941 ;;		None
 14942 ;; Auto vars:     Size  Location     Type
 14943 ;;		None
 14944 ;; Return value:  Size  Location     Type
 14945 ;;                  1    wreg      void 
 14946 ;; Registers used:
 14947 ;;		wreg, status,2
 14948 ;; Tracked objects:
 14949 ;;		On entry : 1F/0
 14950 ;;		On exit  : 1F/1
 14951 ;;		Unchanged: 0/0
 14952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14957 ;;Total ram usage:        0 bytes
 14958 ;; Hardware stack levels used:    1
 14959 ;; Hardware stack levels required when called:    6
 14960 ;; This function calls:
 14961 ;;		Nothing
 14962 ;; This function is called by:
 14963 ;;		_led_dynamic_init
 14964 ;; This function uses a non-reentrant model
 14965 ;;
 14966                           
 14967                           
 14968                           ;psect for function _led_thunder1_init
 14969  19D2                     _led_thunder1_init:	
 14970                           
 14971                           ;app_led.c: 1140: dynamic_chn = 0x00;
 14972                           
 14973                           ;incstack = 0
 14974                           ; Regs used in _led_thunder1_init: [wreg+status,2]
 14975  19D2  01D2               	clrf	_dynamic_chn	;volatile
 14976                           
 14977                           ;app_led.c: 1141: current_bright[0] = 0;
 14978                           
 14979                           ;app_led.c: 1142: current_bright[1] = 0;
 14980                           
 14981                           ;app_led.c: 1143: current_bright[2] = 250;
 14982  19D3  318B  23AA         	fcall	PL90	;call to abstracted procedure
 14983  19D5  01CD               	clrf	_current_bright+5
 14984                           
 14985                           ;app_led.c: 1144: current_bright[3] = 250;
 14986  19D6  00CE               	movwf	_current_bright+6
 14987                           
 14988                           ;app_led.c: 1145: dynamic_period = 500;
 14989  19D7  318B  2BDD         	ljmp	PL132	;call to abstracted procedure
 14990  19D9                     __end_of_led_thunder1_init:	
 14991                           
 14992                           	psect	text59
 14993  19CA                     __ptext59:	
 14994 ;; *************** function _led_thunder3_init *****************
 14995 ;; Defined at:
 14996 ;;		line 1422 in file "src/app_led.c"
 14997 ;; Parameters:    Size  Location     Type
 14998 ;;		None
 14999 ;; Auto vars:     Size  Location     Type
 15000 ;;		None
 15001 ;; Return value:  Size  Location     Type
 15002 ;;                  1    wreg      void 
 15003 ;; Registers used:
 15004 ;;		wreg, status,2
 15005 ;; Tracked objects:
 15006 ;;		On entry : 1F/0
 15007 ;;		On exit  : 1F/1
 15008 ;;		Unchanged: 0/0
 15009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15014 ;;Total ram usage:        0 bytes
 15015 ;; Hardware stack levels used:    1
 15016 ;; Hardware stack levels required when called:    6
 15017 ;; This function calls:
 15018 ;;		Nothing
 15019 ;; This function is called by:
 15020 ;;		_led_dynamic_init
 15021 ;; This function uses a non-reentrant model
 15022 ;;
 15023                           
 15024                           
 15025                           ;psect for function _led_thunder3_init
 15026  19CA                     _led_thunder3_init:	
 15027                           
 15028                           ;app_led.c: 1424: dynamic_chn = 0x0F;
 15029                           
 15030                           ;incstack = 0
 15031                           ; Regs used in _led_thunder3_init: [wreg+status,2]
 15032  19CA  300F               	movlw	15
 15033  19CB  00D2               	movwf	_dynamic_chn	;volatile
 15034                           
 15035                           ;app_led.c: 1425: dynamic_rise = 0x06;
 15036  19CC  3006               	movlw	6
 15037                           
 15038                           ;app_led.c: 1426: dynamic_min[0] = 0;
 15039                           
 15040                           ;app_led.c: 1427: dynamic_max[0] = 250;
 15041                           
 15042                           ;app_led.c: 1428: dynamic_min[1] = 0;
 15043                           
 15044                           ;app_led.c: 1429: dynamic_max[1] = 125;
 15045                           
 15046                           ;app_led.c: 1430: dynamic_min[2] = 0;
 15047                           
 15048                           ;app_led.c: 1431: dynamic_max[2] = 250;
 15049  19CD  318B  233E         	fcall	PL16	;call to abstracted procedure
 15050                           
 15051                           ;app_led.c: 1432: dynamic_min[3] = 175;
 15052  19CF  30AF               	movlw	175
 15053                           
 15054                           ;app_led.c: 1433: dynamic_max[3] = 250;
 15055                           
 15056                           ;app_led.c: 1434: dynamic_period = 1000;
 15057  19D0  318B  2B71         	ljmp	PL60	;call to abstracted procedure
 15058  19D2                     __end_of_led_thunder3_init:	
 15059                           
 15060                           	psect	text63
 15061  1BEE                     __ptext63:	
 15062 ;; *************** function _led_set_bright *****************
 15063 ;; Defined at:
 15064 ;;		line 2070 in file "src/app_led.c"
 15065 ;; Parameters:    Size  Location     Type
 15066 ;;  pbuf            1    wreg     const PTR const unsigned
 15067 ;;		 -> rx_buf(80), 
 15068 ;; Auto vars:     Size  Location     Type
 15069 ;;  pbuf            1   24[BANK0 ] const PTR const unsigned
 15070 ;;		 -> rx_buf(80), 
 15071 ;;  val             2   25[BANK0 ] unsigned int 
 15072 ;;  i               1   27[BANK0 ] unsigned char 
 15073 ;; Return value:  Size  Location     Type
 15074 ;;                  1    wreg      unsigned char 
 15075 ;; Registers used:
 15076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15077 ;; Tracked objects:
 15078 ;;		On entry : 19/4
 15079 ;;		On exit  : 1F/1
 15080 ;;		Unchanged: 0/0
 15081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15083 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15084 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15085 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15086 ;;Total ram usage:        8 bytes
 15087 ;; Hardware stack levels used:    1
 15088 ;; Hardware stack levels required when called:    7
 15089 ;; This function calls:
 15090 ;;		_led_prepare_to_save
 15091 ;; This function is called by:
 15092 ;;		_ble_decode
 15093 ;; This function uses a non-reentrant model
 15094 ;;
 15095                           
 15096                           
 15097                           ;psect for function _led_set_bright
 15098  1BEE                     _led_set_bright:	
 15099                           
 15100                           ;incstack = 0
 15101                           ; Regs used in _led_set_bright: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15102                           ;led_set_bright@pbuf stored from wreg
 15103  1BEE  0020               	movlb	0	; select bank0
 15104  1BEF  00B8               	movwf	led_set_bright@pbuf
 15105                           
 15106                           ;app_led.c: 2072: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0 || m_led_para.ble_para.manual_para.mOn == 0)
 15107  1BF0  0021               	movlb	1	; select bank1
 15108  1BF1  1C42               	btfss	_led_run_para^(0+128),0
 15109  1BF2  18C2               	btfsc	_led_run_para^(0+128),1
 15110  1BF3  0008               	return
 15111  1BF4  318E  26DF  319B   	fcall	PL4	;call to abstracted procedure
 15112  1BF7  1D03               	skipz
 15113  1BF8  0008               	return
 15114  1BF9  318F  2760  319B   	fcall	PL40	;call to abstracted procedure
 15115  1BFC  1C01               	btfss	1,0
 15116  1BFD  0008               	return
 15117                           
 15118                           ;app_led.c: 2075: }
 15119                           ;app_led.c: 2077: dynamic_run_mode = 0;
 15120                           
 15121                           ;app_led.c: 2078: dynamic_run_pause = 0;
 15122                           
 15123                           ;app_led.c: 2079: m_led_para.ble_para.manual_para.mDyn = 0;
 15124  1BFE  2438  319B         	fcall	PL94	;call to abstracted procedure
 15125  1C00  3143               	addfsr 1,3
 15126  1C01  0181               	clrf	1
 15127                           
 15128                           ;app_led.c: 2081: for(uint8_t i = 0; i < 4; i++)
 15129  1C02  01BB               	clrf	led_set_bright@i
 15130  1C03                     l5836:	
 15131                           
 15132                           ;app_led.c: 2082: {
 15133                           ;app_led.c: 2083: uint16_t val = (*(pbuf + 2 * i)) << 8 | (*(pbuf + 2 * i + 1));
 15134  1C03  353B               	lslf	led_set_bright@i,w
 15135  1C04  0738               	addwf	led_set_bright@pbuf,w
 15136  1C05  00B4               	movwf	??_led_set_bright
 15137  1C06  0A34               	incf	??_led_set_bright,w
 15138  1C07  0086               	movwf	6
 15139  1C08  3002               	movlw	2	; select bank4/5
 15140  1C09  0087               	movwf	7
 15141  1C0A  353B               	lslf	led_set_bright@i,w
 15142  1C0B  0738               	addwf	led_set_bright@pbuf,w
 15143  1C0C  00B5               	movwf	??_led_set_bright+1
 15144  1C0D  0084               	movwf	4
 15145  1C0E  3002               	movlw	2	; select bank4/5
 15146  1C0F  0085               	movwf	5
 15147  1C10  0800               	movf	0,w
 15148  1C11  00BA               	movwf	led_set_bright@val+1
 15149  1C12  0801               	movf	1,w
 15150  1C13  00B9               	movwf	led_set_bright@val
 15151                           
 15152                           ;app_led.c: 2084: if(val <= 1000)
 15153  1C14  3003               	movlw	3
 15154  1C15  023A               	subwf	led_set_bright@val+1,w
 15155  1C16  30E9               	movlw	233
 15156  1C17  1903               	skipnz
 15157  1C18  0239               	subwf	led_set_bright@val,w
 15158  1C19  1803               	skipnc
 15159  1C1A  2C31               	goto	l5842
 15160                           
 15161                           ;app_led.c: 2085: {
 15162                           ;app_led.c: 2086: m_led_para.ble_para.manual_para.mBright[i] = val;
 15163  1C1B  083B               	movf	led_set_bright@i,w
 15164  1C1C  00B4               	movwf	??_led_set_bright
 15165  1C1D  3082               	movlw	130
 15166  1C1E  01B5               	clrf	??_led_set_bright+1
 15167  1C1F  35B4               	lslf	??_led_set_bright,f
 15168  1C20  0DB5               	rlf	??_led_set_bright+1,f
 15169  1C21  00B6               	movwf	??_led_set_bright+2
 15170  1C22  3023               	movlw	35
 15171  1C23  00B7               	movwf	??_led_set_bright+3
 15172  1C24  0834               	movf	??_led_set_bright,w
 15173  1C25  0736               	addwf	??_led_set_bright+2,w
 15174  1C26  0086               	movwf	6
 15175  1C27  0835               	movf	??_led_set_bright+1,w
 15176  1C28  3D37               	addwfc	??_led_set_bright+3,w
 15177  1C29  2440  319B         	fcall	PL170	;call to abstracted procedure
 15178                           
 15179                           ;app_led.c: 2087: target_bright[i] = val;
 15180  1C2B  353B               	lslf	led_set_bright@i,w
 15181  1C2C  3E4D               	addlw	(low (_target_bright| (0+256)))& (0+255)
 15182  1C2D  0086               	movwf	6
 15183  1C2E  3001               	movlw	1	; select bank2/3
 15184  1C2F  2440  319B         	fcall	PL170	;call to abstracted procedure
 15185  1C31                     l5842:	
 15186  1C31  3004               	movlw	4
 15187  1C32  0ABB               	incf	led_set_bright@i,f
 15188  1C33  023B               	subwf	led_set_bright@i,w
 15189  1C34  1C03               	skipc
 15190  1C35  2C03               	goto	l5836
 15191                           
 15192                           ;app_led.c: 2088: }
 15193                           ;app_led.c: 2089: }
 15194                           ;app_led.c: 2090: led_prepare_to_save();
 15195  1C36  318D  2D81         	ljmp	l5446
 15196  1C38                     __end_of_led_set_bright:	
 15197  1C38                     PL94:	
 15198  1C38  01FC               	clrf	_dynamic_run_mode	;volatile
 15199  1C39  0020               	movlb	0	; select bank0
 15200  1C3A  01D0               	clrf	_dynamic_run_pause	;volatile
 15201  1C3B  307E               	movlw	126
 15202  1C3C  0086               	movwf	6
 15203  1C3D  3023               	movlw	35
 15204  1C3E  0087               	movwf	7
 15205  1C3F  0008               	return
 15206  1C40                     __end_ofPL94:	
 15207  1C40                     PL170:	
 15208  1C40  0087               	movwf	7
 15209  1C41  0839               	movf	led_set_bright@val,w
 15210  1C42  3FC0               	movwi [0]fsr1
 15211  1C43  083A               	movf	led_set_bright@val+1,w
 15212  1C44  3FC1               	movwi [1]fsr1
 15213  1C45  0008               	return
 15214  1C46                     __end_ofPL170:	
 15215                           
 15216                           	psect	text66
 15217  1042                     __ptext66:	
 15218 ;; *************** function _led_decrease *****************
 15219 ;; Defined at:
 15220 ;;		line 2166 in file "src/app_led.c"
 15221 ;; Parameters:    Size  Location     Type
 15222 ;;  chn             1    wreg     unsigned char 
 15223 ;;  delt            1   29[BANK0 ] unsigned char 
 15224 ;; Auto vars:     Size  Location     Type
 15225 ;;  chn             1   34[BANK0 ] unsigned char 
 15226 ;; Return value:  Size  Location     Type
 15227 ;;                  1    wreg      unsigned char 
 15228 ;; Registers used:
 15229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15230 ;; Tracked objects:
 15231 ;;		On entry : 1F/4
 15232 ;;		On exit  : 1E/0
 15233 ;;		Unchanged: 0/0
 15234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15235 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15237 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15238 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15239 ;;Total ram usage:        6 bytes
 15240 ;; Hardware stack levels used:    1
 15241 ;; Hardware stack levels required when called:    7
 15242 ;; This function calls:
 15243 ;;		_decrease
 15244 ;;		_led_prepare_to_save
 15245 ;; This function is called by:
 15246 ;;		_ble_decode
 15247 ;; This function uses a non-reentrant model
 15248 ;;
 15249                           
 15250                           
 15251                           ;psect for function _led_decrease
 15252  1042                     _led_decrease:	
 15253                           
 15254                           ;incstack = 0
 15255                           ; Regs used in _led_decrease: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15256                           ;led_decrease@chn stored from wreg
 15257  1042  0020               	movlb	0	; select bank0
 15258  1043  00C2               	movwf	led_decrease@chn
 15259                           
 15260                           ;app_led.c: 2168: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0 || m_led_para.ble_para.manual_para.mOn == 0 || chn >= 4)
 15261  1044  0021               	movlb	1	; select bank1
 15262  1045  1C42               	btfss	_led_run_para^(0+128),0
 15263  1046  18C2               	btfsc	_led_run_para^(0+128),1
 15264  1047  0008               	return
 15265  1048  318E  26DF  3190   	fcall	PL4	;call to abstracted procedure
 15266  104B  1D03               	skipz
 15267  104C  0008               	return
 15268  104D  318F  2760  3190   	fcall	PL40	;call to abstracted procedure
 15269  1050  1C01               	btfss	1,0
 15270  1051  0008               	return
 15271  1052  3004               	movlw	4
 15272  1053  0020               	movlb	0	; select bank0
 15273  1054  0242               	subwf	led_decrease@chn,w
 15274  1055  1803               	btfsc	3,0
 15275  1056  0008               	return
 15276                           
 15277                           ;app_led.c: 2171: }
 15278                           ;app_led.c: 2173: if(dynamic_run_mode > 0)
 15279  1057  087C               	movf	_dynamic_run_mode,w	;volatile
 15280  1058  1D03               	btfss	3,2
 15281  1059  0008               	return
 15282                           
 15283                           ;app_led.c: 2176: }
 15284                           ;app_led.c: 2178: decrease(&m_led_para.ble_para.manual_para.mBright[chn], delt, 0);
 15285  105A  3082               	movlw	130
 15286  105B  00B4               	movwf	decrease@psrc
 15287  105C  3023               	movlw	35
 15288  105D  00B5               	movwf	decrease@psrc+1
 15289  105E  0842               	movf	led_decrease@chn,w
 15290  105F  00BE               	movwf	??_led_decrease
 15291  1060  01BF               	clrf	??_led_decrease+1
 15292  1061  35BE               	lslf	??_led_decrease,f
 15293  1062  0DBF               	rlf	??_led_decrease+1,f
 15294  1063  083E               	movf	??_led_decrease,w
 15295  1064  07B4               	addwf	decrease@psrc,f
 15296  1065  083F               	movf	??_led_decrease+1,w
 15297  1066  3DB5               	addwfc	decrease@psrc+1,f
 15298  1067  083D               	movf	led_decrease@delt,w
 15299  1068  00B6               	movwf	decrease@delt
 15300  1069  01B7               	clrf	decrease@min
 15301  106A  01B8               	clrf	decrease@min+1
 15302  106B  2080  3190         	fcall	_decrease
 15303                           
 15304                           ;app_led.c: 2179: target_bright[chn] = m_led_para.ble_para.manual_para.mBright[chn];
 15305  106D  0842               	movf	led_decrease@chn,w
 15306  106E  00BE               	movwf	??_led_decrease
 15307  106F  3082               	movlw	130
 15308  1070  01BF               	clrf	??_led_decrease+1
 15309  1071  35BE               	lslf	??_led_decrease,f
 15310  1072  0DBF               	rlf	??_led_decrease+1,f
 15311  1073  00C0               	movwf	??_led_decrease+2
 15312  1074  3023               	movlw	35
 15313  1075  00C1               	movwf	??_led_decrease+3
 15314  1076  083E               	movf	??_led_decrease,w
 15315  1077  0740               	addwf	??_led_decrease+2,w
 15316  1078  0086               	movwf	6
 15317  1079  083F               	movf	??_led_decrease+1,w
 15318  107A  3D41               	addwfc	??_led_decrease+3,w
 15319  107B  0087               	movwf	7
 15320  107C  3542               	lslf	led_decrease@chn,w
 15321  107D  210D               	fcall	PL80	;call to abstracted procedure
 15322                           
 15323                           ;app_led.c: 2180: led_prepare_to_save();
 15324  107E  318D  2D81         	ljmp	l5446
 15325  1080                     __end_of_led_decrease:	
 15326  1080                     __ptext68:	
 15327 ;; *************** function _decrease *****************
 15328 ;; Defined at:
 15329 ;;		line 15 in file "src/app_util.c"
 15330 ;; Parameters:    Size  Location     Type
 15331 ;;  psrc            2   20[BANK0 ] const PTR unsigned int 
 15332 ;;		 -> m_led_para.ble_para.manual_para.mBright(8), m_led_para.ble_para.manual_para(26), 
 15333 ;;  delt            1   22[BANK0 ] const unsigned char 
 15334 ;;  min             2   23[BANK0 ] const unsigned int 
 15335 ;; Auto vars:     Size  Location     Type
 15336 ;;		None
 15337 ;; Return value:  Size  Location     Type
 15338 ;;                  1    wreg      void 
 15339 ;; Registers used:
 15340 ;;		wreg, fsr1l, fsr1h
 15341 ;; Tracked objects:
 15342 ;;		On entry : 1F/0
 15343 ;;		On exit  : 1F/0
 15344 ;;		Unchanged: 0/0
 15345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15346 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15348 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15349 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15350 ;;Total ram usage:        9 bytes
 15351 ;; Hardware stack levels used:    1
 15352 ;; Hardware stack levels required when called:    6
 15353 ;; This function calls:
 15354 ;;		Nothing
 15355 ;; This function is called by:
 15356 ;;		_led_decrease
 15357 ;; This function uses a non-reentrant model
 15358 ;;
 15359                           
 15360                           
 15361                           ;psect for function _decrease
 15362  1080                     _decrease:	
 15363                           
 15364                           ;app_util.c: 17: if((*psrc) > min + delt)
 15365                           
 15366                           ;incstack = 0
 15367                           ; Regs used in _decrease: [wregfsr1]
 15368  1080  0834               	movf	decrease@psrc,w
 15369  1081  0086               	movwf	6
 15370  1082  0835               	movf	decrease@psrc+1,w
 15371  1083  0087               	movwf	7
 15372  1084  3F40               	moviw [0]fsr1
 15373  1085  00B9               	movwf	??_decrease
 15374  1086  3F41               	moviw [1]fsr1
 15375  1087  00BA               	movwf	??_decrease+1
 15376  1088  0836               	movf	decrease@delt,w
 15377  1089  0737               	addwf	decrease@min,w
 15378  108A  00BB               	movwf	??_decrease+2
 15379  108B  0838               	movf	decrease@min+1,w
 15380  108C  1803               	skipnc
 15381  108D  0A38               	incf	decrease@min+1,w
 15382  108E  00BC               	movwf	??_decrease+3
 15383  108F  083A               	movf	??_decrease+1,w
 15384  1090  023C               	subwf	??_decrease+3,w
 15385  1091  1D03               	skipz
 15386  1092  2895               	goto	u3225
 15387  1093  0839               	movf	??_decrease,w
 15388  1094  023B               	subwf	??_decrease+2,w
 15389  1095                     u3225:	
 15390                           
 15391                           ;app_util.c: 18: {
 15392                           ;app_util.c: 19: (*psrc) -= delt;
 15393  1095  0834               	movf	decrease@psrc,w
 15394  1096  0086               	movwf	6
 15395  1097  0835               	movf	decrease@psrc+1,w
 15396  1098  0087               	movwf	7
 15397  1099  1803               	skipnc
 15398  109A  28A2               	goto	L21
 15399  109B  0836               	movf	decrease@delt,w
 15400  109C  0281               	subwf	1,f
 15401  109D  3141               	addfsr 1,1
 15402  109E  1C03               	skipc
 15403  109F  0381               	decf	1,f
 15404  10A0  317F               	addfsr 1,-1
 15405                           
 15406                           ;app_util.c: 20: }
 15407  10A1  0008               	return
 15408  10A2                     L21:	
 15409                           ;app_util.c: 21: else
 15410                           ;app_util.c: 22: {
 15411                           ;app_util.c: 23: (*psrc) = min;
 15412                           
 15413  10A2  0837               	movf	decrease@min,w
 15414  10A3  3FC0               	movwi [0]fsr1
 15415  10A4  0838               	movf	decrease@min+1,w
 15416  10A5  3FC1               	movwi [1]fsr1
 15417  10A6  0008               	return
 15418  10A7                     __end_of_decrease:	
 15419  10A7                     __ptext64:	
 15420 ;; *************** function _led_increase *****************
 15421 ;; Defined at:
 15422 ;;		line 2148 in file "src/app_led.c"
 15423 ;; Parameters:    Size  Location     Type
 15424 ;;  chn             1    wreg     unsigned char 
 15425 ;;  delt            1   29[BANK0 ] unsigned char 
 15426 ;; Auto vars:     Size  Location     Type
 15427 ;;  chn             1   34[BANK0 ] unsigned char 
 15428 ;; Return value:  Size  Location     Type
 15429 ;;                  1    wreg      unsigned char 
 15430 ;; Registers used:
 15431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15432 ;; Tracked objects:
 15433 ;;		On entry : 1F/4
 15434 ;;		On exit  : 1E/0
 15435 ;;		Unchanged: 0/0
 15436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15437 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15439 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15440 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15441 ;;Total ram usage:        6 bytes
 15442 ;; Hardware stack levels used:    1
 15443 ;; Hardware stack levels required when called:    7
 15444 ;; This function calls:
 15445 ;;		_increase
 15446 ;;		_led_prepare_to_save
 15447 ;; This function is called by:
 15448 ;;		_ble_decode
 15449 ;; This function uses a non-reentrant model
 15450 ;;
 15451                           
 15452                           
 15453                           ;psect for function _led_increase
 15454  10A7                     _led_increase:	
 15455                           
 15456                           ;incstack = 0
 15457                           ; Regs used in _led_increase: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15458                           ;led_increase@chn stored from wreg
 15459  10A7  0020               	movlb	0	; select bank0
 15460  10A8  00C2               	movwf	led_increase@chn
 15461                           
 15462                           ;app_led.c: 2150: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0 || m_led_para.ble_para.manual_para.mOn == 0 || chn >= 4)
 15463  10A9  0021               	movlb	1	; select bank1
 15464  10AA  1C42               	btfss	_led_run_para^(0+128),0
 15465  10AB  18C2               	btfsc	_led_run_para^(0+128),1
 15466  10AC  0008               	return
 15467  10AD  318E  26DF  3190   	fcall	PL4	;call to abstracted procedure
 15468  10B0  1D03               	skipz
 15469  10B1  0008               	return
 15470  10B2  318F  2760  3190   	fcall	PL40	;call to abstracted procedure
 15471  10B5  1C01               	btfss	1,0
 15472  10B6  0008               	return
 15473  10B7  3004               	movlw	4
 15474  10B8  0020               	movlb	0	; select bank0
 15475  10B9  0242               	subwf	led_increase@chn,w
 15476  10BA  1803               	btfsc	3,0
 15477  10BB  0008               	return
 15478                           
 15479                           ;app_led.c: 2153: }
 15480                           ;app_led.c: 2155: if(dynamic_run_mode > 0)
 15481  10BC  087C               	movf	_dynamic_run_mode,w	;volatile
 15482  10BD  1D03               	btfss	3,2
 15483  10BE  0008               	return
 15484                           
 15485                           ;app_led.c: 2158: }
 15486                           ;app_led.c: 2160: increase(&m_led_para.ble_para.manual_para.mBright[chn], delt, 1000 );
 15487  10BF  3082               	movlw	130
 15488  10C0  00B4               	movwf	increase@psrc
 15489  10C1  3023               	movlw	35
 15490  10C2  00B5               	movwf	increase@psrc+1
 15491  10C3  0842               	movf	led_increase@chn,w
 15492  10C4  00BE               	movwf	??_led_increase
 15493  10C5  01BF               	clrf	??_led_increase+1
 15494  10C6  35BE               	lslf	??_led_increase,f
 15495  10C7  0DBF               	rlf	??_led_increase+1,f
 15496  10C8  083E               	movf	??_led_increase,w
 15497  10C9  07B4               	addwf	increase@psrc,f
 15498  10CA  083F               	movf	??_led_increase+1,w
 15499  10CB  3DB5               	addwfc	increase@psrc+1,f
 15500  10CC  083D               	movf	led_increase@delt,w
 15501  10CD  00B6               	movwf	increase@delt
 15502  10CE  30E8               	movlw	232
 15503  10CF  00B7               	movwf	increase@max
 15504  10D0  3003               	movlw	3
 15505  10D1  00B8               	movwf	increase@max+1
 15506  10D2  20E7  3190         	fcall	_increase
 15507                           
 15508                           ;app_led.c: 2161: target_bright[chn] = m_led_para.ble_para.manual_para.mBright[chn];
 15509  10D4  0842               	movf	led_increase@chn,w
 15510  10D5  00BE               	movwf	??_led_increase
 15511  10D6  3082               	movlw	130
 15512  10D7  01BF               	clrf	??_led_increase+1
 15513  10D8  35BE               	lslf	??_led_increase,f
 15514  10D9  0DBF               	rlf	??_led_increase+1,f
 15515  10DA  00C0               	movwf	??_led_increase+2
 15516  10DB  3023               	movlw	35
 15517  10DC  00C1               	movwf	??_led_increase+3
 15518  10DD  083E               	movf	??_led_increase,w
 15519  10DE  0740               	addwf	??_led_increase+2,w
 15520  10DF  0086               	movwf	6
 15521  10E0  083F               	movf	??_led_increase+1,w
 15522  10E1  3D41               	addwfc	??_led_increase+3,w
 15523  10E2  0087               	movwf	7
 15524  10E3  3542               	lslf	led_increase@chn,w
 15525  10E4  210D               	fcall	PL80	;call to abstracted procedure
 15526                           
 15527                           ;app_led.c: 2162: led_prepare_to_save();
 15528  10E5  318D  2D81         	ljmp	l5446
 15529  10E7                     __end_of_led_increase:	
 15530  10E7                     __ptext65:	
 15531 ;; *************** function _increase *****************
 15532 ;; Defined at:
 15533 ;;		line 3 in file "src/app_util.c"
 15534 ;; Parameters:    Size  Location     Type
 15535 ;;  psrc            2   20[BANK0 ] const PTR unsigned int 
 15536 ;;		 -> m_led_para.ble_para.manual_para.mBright(8), m_led_para.ble_para.manual_para(26), 
 15537 ;;  delt            1   22[BANK0 ] const unsigned char 
 15538 ;;  max             2   23[BANK0 ] const unsigned int 
 15539 ;; Auto vars:     Size  Location     Type
 15540 ;;		None
 15541 ;; Return value:  Size  Location     Type
 15542 ;;                  1    wreg      void 
 15543 ;; Registers used:
 15544 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15545 ;; Tracked objects:
 15546 ;;		On entry : 1F/0
 15547 ;;		On exit  : 1F/0
 15548 ;;		Unchanged: 0/0
 15549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15550 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15552 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15553 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15554 ;;Total ram usage:        9 bytes
 15555 ;; Hardware stack levels used:    1
 15556 ;; Hardware stack levels required when called:    6
 15557 ;; This function calls:
 15558 ;;		Nothing
 15559 ;; This function is called by:
 15560 ;;		_led_increase
 15561 ;; This function uses a non-reentrant model
 15562 ;;
 15563                           
 15564                           
 15565                           ;psect for function _increase
 15566  10E7                     _increase:	
 15567                           
 15568                           ;app_util.c: 5: if((*psrc) + delt < max)
 15569                           
 15570                           ;incstack = 0
 15571                           ; Regs used in _increase: [wreg+fsr1l+fsr1h+status,2+status,0]
 15572  10E7  0834               	movf	increase@psrc,w
 15573  10E8  0086               	movwf	6
 15574  10E9  0835               	movf	increase@psrc+1,w
 15575  10EA  0087               	movwf	7
 15576  10EB  3F40               	moviw [0]fsr1
 15577  10EC  00B9               	movwf	??_increase
 15578  10ED  3F41               	moviw [1]fsr1
 15579  10EE  00BA               	movwf	??_increase+1
 15580  10EF  0836               	movf	increase@delt,w
 15581  10F0  0739               	addwf	??_increase,w
 15582  10F1  00BB               	movwf	??_increase+2
 15583  10F2  083A               	movf	??_increase+1,w
 15584  10F3  1803               	skipnc
 15585  10F4  0A3A               	incf	??_increase+1,w
 15586  10F5  00BC               	movwf	??_increase+3
 15587  10F6  0838               	movf	increase@max+1,w
 15588  10F7  023C               	subwf	??_increase+3,w
 15589  10F8  1D03               	skipz
 15590  10F9  28FC               	goto	u3215
 15591  10FA  0837               	movf	increase@max,w
 15592  10FB  023B               	subwf	??_increase+2,w
 15593  10FC                     u3215:	
 15594                           
 15595                           ;app_util.c: 6: {
 15596                           ;app_util.c: 7: (*psrc) += delt;
 15597  10FC  0834               	movf	increase@psrc,w
 15598  10FD  0086               	movwf	6
 15599  10FE  0835               	movf	increase@psrc+1,w
 15600  10FF  0087               	movwf	7
 15601  1100  1803               	skipnc
 15602  1101  2908               	goto	L20
 15603  1102  0836               	movf	increase@delt,w
 15604  1103  0781               	addwf	1,f
 15605  1104  3141               	addfsr 1,1
 15606  1105  1803               	skipnc
 15607  1106  0A81               	incf	1,f
 15608                           
 15609                           ;app_util.c: 8: }
 15610  1107  0008               	return
 15611  1108                     L20:	
 15612                           ;app_util.c: 9: else
 15613                           ;app_util.c: 10: {
 15614                           ;app_util.c: 11: (*psrc) = max;
 15615                           
 15616  1108  0837               	movf	increase@max,w
 15617  1109  3FC0               	movwi [0]fsr1
 15618  110A  0838               	movf	increase@max+1,w
 15619  110B  3FC1               	movwi [1]fsr1
 15620  110C  0008               	return
 15621  110D                     __end_of_increase:	
 15622  110D                     PL80:	
 15623  110D  3E4D               	addlw	(low (_target_bright| (0+256)))& (0+255)
 15624  110E  0084               	movwf	4
 15625  110F  3001               	movlw	1	; select bank2/3
 15626  1110  0085               	movwf	5
 15627  1111  3F40               	moviw [0]fsr1
 15628  1112  3F80               	movwi [0]fsr0
 15629  1113  3F41               	moviw [1]fsr1
 15630  1114  3F81               	movwi [1]fsr0
 15631  1115  0008               	return
 15632  1116                     __end_ofPL80:	
 15633                           
 15634                           	psect	text71
 15635  1441                     __ptext71:	
 15636 ;; *************** function _ble_ota_ack *****************
 15637 ;; Defined at:
 15638 ;;		line 262 in file "src/app_ble.c"
 15639 ;; Parameters:    Size  Location     Type
 15640 ;;		None
 15641 ;; Auto vars:     Size  Location     Type
 15642 ;;		None
 15643 ;; Return value:  Size  Location     Type
 15644 ;;                  1    wreg      void 
 15645 ;; Registers used:
 15646 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15647 ;; Tracked objects:
 15648 ;;		On entry : 1F/11
 15649 ;;		On exit  : 1F/2
 15650 ;;		Unchanged: 0/0
 15651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15656 ;;Total ram usage:        0 bytes
 15657 ;; Hardware stack levels used:    1
 15658 ;; Hardware stack levels required when called:    7
 15659 ;; This function calls:
 15660 ;;		_ble_transmit_start
 15661 ;;		_ble_transmit_stop
 15662 ;;		_eusart_write
 15663 ;; This function is called by:
 15664 ;;		_ble_decode
 15665 ;; This function uses a non-reentrant model
 15666 ;;
 15667                           
 15668                           
 15669                           ;psect for function _ble_ota_ack
 15670  1441                     _ble_ota_ack:	
 15671                           
 15672                           ;app_ble.c: 264: ble_transmit_start();
 15673                           
 15674                           ;incstack = 0
 15675                           ; Regs used in _ble_ota_ack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15676  1441  275B  3194         	fcall	_ble_transmit_start
 15677                           
 15678                           ;app_ble.c: 265: eusart_write(0x68);
 15679  1443  3068               	movlw	104
 15680  1444  26DD  3194         	fcall	_eusart_write
 15681                           
 15682                           ;app_ble.c: 266: eusart_write(0x00);
 15683  1446  3000               	movlw	0
 15684  1447  26DD  3194         	fcall	_eusart_write
 15685                           
 15686                           ;app_ble.c: 267: eusart_write(0x00);
 15687  1449  3000               	movlw	0
 15688  144A  26DD  3194         	fcall	_eusart_write
 15689                           
 15690                           ;app_ble.c: 268: eusart_write(0x00);
 15691  144C  3000               	movlw	0
 15692  144D  26DD  3194         	fcall	_eusart_write
 15693                           
 15694                           ;app_ble.c: 269: eusart_write(0x68);
 15695  144F  3068               	movlw	104
 15696  1450  26DD  3194         	fcall	_eusart_write
 15697                           
 15698                           ;app_ble.c: 270: ble_transmit_stop();
 15699  1452  2FC3               	ljmp	l418
 15700  1453                     __end_of_ble_ota_ack:	
 15701  1453                     start_initialization:	
 15702                           ; #config settings
 15703                           
 15704  1453                     __initialization:		;BIGRAM
 15705                           
 15706                           ; Initialize objects allocated to BANK2
 15707  1453  307B               	movlw	low __pidataBANK2
 15708  1454  0084               	movwf	4
 15709  1455  309B               	movlw	(high __pidataBANK2)| (0+128)
 15710  1456  0085               	movwf	5
 15711  1457  3020               	movlw	low __pdataBANK2
 15712  1458  0086               	movwf	6
 15713  1459  3001               	movlw	high __pdataBANK2
 15714  145A  0087               	movwf	7
 15715  145B  302D               	movlw	45
 15716  145C  01FF               	clrf	127
 15717  145D  3199  2185  3194   	fcall	init_ram
 15718                           
 15719                           ; Initialize objects allocated to BANK3
 15720  1460  30FE               	movlw	low __pidataBANK3
 15721  1461  0084               	movwf	4
 15722  1462  309A               	movlw	(high __pidataBANK3)| (0+128)
 15723  1463  0085               	movwf	5
 15724  1464  30D4               	movlw	low __pdataBANK3
 15725  1465  0086               	movwf	6
 15726  1466  3001               	movlw	high __pdataBANK3
 15727  1467  0087               	movwf	7
 15728  1468  3016               	movlw	22
 15729  1469  01FF               	clrf	127
 15730  146A  3199  2185  3194   	fcall	init_ram
 15731                           
 15732                           ; Clear objects allocated to BIGRAM
 15733  146D  307E               	movlw	126
 15734  146E  0084               	movwf	4
 15735  146F  3023               	movlw	35
 15736  1470  0085               	movwf	5
 15737  1471  3072               	movlw	114
 15738  1472  00FE               	movwf	126
 15739  1473  01FF               	clrf	127
 15740  1474  3199  2191  3194   	fcall	clear_ram0
 15741  1477  3048               	movlw	low __pbssBANK0
 15742                           
 15743                           ; Clear objects allocated to COMMON
 15744  1478  01FC               	clrf	__pbssCOMMON& (0+127)
 15745  1479  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
 15746                           
 15747                           ; Clear objects allocated to BANK0
 15748  147A  0084               	movwf	4
 15749  147B  3000               	movlw	high __pbssBANK0
 15750  147C  0085               	movwf	5
 15751  147D  3014               	movlw	20
 15752  147E  00FE               	movwf	126
 15753  147F  3000               	movlw	0
 15754  1480  00FF               	movwf	127
 15755  1481  3199  2191  3194   	fcall	clear_ram0
 15756                           
 15757                           ; Clear objects allocated to BANK1
 15758  1484  30C2               	movlw	low __pbssBANK1
 15759  1485  0084               	movwf	4
 15760  1486  3000               	movlw	high __pbssBANK1
 15761  1487  0085               	movwf	5
 15762  1488  300E               	movlw	14
 15763  1489  00FE               	movwf	126
 15764  148A  3000               	movlw	0
 15765  148B  00FF               	movwf	127
 15766  148C  3199  2191  3194   	fcall	clear_ram0
 15767                           
 15768                           ; Clear objects allocated to BANK2
 15769  148F  304D               	movlw	low __pbssBANK2
 15770  1490  0084               	movwf	4
 15771  1491  3001               	movlw	high __pbssBANK2
 15772  1492  0085               	movwf	5
 15773  1493  300F               	movlw	15
 15774  1494  00FE               	movwf	126
 15775  1495  3000               	movlw	0
 15776  1496  00FF               	movwf	127
 15777  1497  3199  2191  3194   	fcall	clear_ram0
 15778                           
 15779                           ; Clear objects allocated to BANK4
 15780  149A  3020               	movlw	low __pbssBANK4
 15781  149B  0084               	movwf	4
 15782  149C  3002               	movlw	high __pbssBANK4
 15783  149D  0085               	movwf	5
 15784  149E  3050               	movlw	80
 15785  149F  00FE               	movwf	126
 15786  14A0  3000               	movlw	0
 15787  14A1  00FF               	movwf	127
 15788  14A2  3199  2191  3194   	fcall	clear_ram0
 15789                           
 15790                           ; Clear objects allocated to BANK5
 15791  14A5  30A0               	movlw	low __pbssBANK5
 15792  14A6  0084               	movwf	4
 15793  14A7  3002               	movlw	high __pbssBANK5
 15794  14A8  0085               	movwf	5
 15795  14A9  3040               	movlw	64
 15796  14AA  00FE               	movwf	126
 15797  14AB  3000               	movlw	0
 15798  14AC  00FF               	movwf	127
 15799  14AD  3199  2191  3194   	fcall	clear_ram0
 15800  14B0                     end_of_initialization:	
 15801                           ;End of C runtime variable initialization code
 15802                           
 15803  14B0                     __end_of__initialization:	
 15804  14B0  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 15805  14B1  0020               	movlb	0
 15806  14B2  2CB3               	ljmp	_main	;jump to C main() function
 15807  14B3                     __pmaintext:	
 15808                           ; 1 bytes @ 0x28
 15809 ;;
 15810 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 15811 ;;
 15812 ;; *************** function _main *****************
 15813 ;; Defined at:
 15814 ;;		line 149 in file "src/app_main.c"
 15815 ;; Parameters:    Size  Location     Type
 15816 ;;		None
 15817 ;; Auto vars:     Size  Location     Type
 15818 ;;		None
 15819 ;; Return value:  Size  Location     Type
 15820 ;;                  1    wreg      void 
 15821 ;; Registers used:
 15822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15823 ;; Tracked objects:
 15824 ;;		On entry : B1F/0
 15825 ;;		On exit  : 1F/1
 15826 ;;		Unchanged: 0/0
 15827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15832 ;;Total ram usage:        0 bytes
 15833 ;; Hardware stack levels required when called:   11
 15834 ;; This function calls:
 15835 ;;		_app_init
 15836 ;;		_ble_init
 15837 ;;		_ble_process
 15838 ;;		_led_init
 15839 ;;		_led_second_cb
 15840 ;;		_rtc_init
 15841 ;;		_rtc_second_ready
 15842 ;; This function is called by:
 15843 ;;		Startup code after reset
 15844 ;; This function uses a non-reentrant model
 15845 ;;
 15846                           
 15847                           
 15848                           ;psect for function _main
 15849  14B3                     _main:	
 15850                           
 15851                           ;app_main.c: 151: app_init();
 15852                           
 15853                           ;incstack = 0
 15854                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15855  14B3  24CC  3194         	fcall	_app_init
 15856                           
 15857                           ;app_main.c: 152: ble_init();
 15858  14B5  2595  3194         	fcall	_ble_init
 15859                           
 15860                           ;app_main.c: 153: rtc_init();
 15861  14B7  2640  3194         	fcall	_rtc_init
 15862                           
 15863                           ;app_main.c: 154: led_init();
 15864  14B9  263E  3194         	fcall	_led_init
 15865                           
 15866                           ;app_main.c: 155: (PIE1bits.RCIE = 1);
 15867  14BB  0021               	movlb	1	; select bank1
 15868  14BC  1691               	bsf	17,5	;volatile
 15869                           
 15870                           ;app_main.c: 156: (T0CON0bits.T0EN = 1);
 15871  14BD  0020               	movlb	0	; select bank0
 15872  14BE  1797               	bsf	23,7	;volatile
 15873                           
 15874                           ;app_main.c: 157: (T2CONbits.TMR2ON = 1);
 15875  14BF  151F               	bsf	31,2	;volatile
 15876  14C0                     l1276:	
 15877                           ;app_main.c: 159: while(1)
 15878                           
 15879  14C0  0064               	clrwdt	;# 
 15880                           
 15881                           ;app_main.c: 163: ble_process();
 15882  14C1  2773  3194         	fcall	_ble_process
 15883                           
 15884                           ;app_main.c: 164: if(rtc_second_ready())
 15885  14C3  279F  3194         	fcall	_rtc_second_ready
 15886  14C5  3A00               	xorlw	0
 15887  14C6  1903               	skipnz
 15888  14C7  2CC0               	goto	l1276
 15889                           
 15890                           ;app_main.c: 165: {
 15891                           ;app_main.c: 166: led_second_cb();
 15892  14C8  318D  25ED  3194   	fcall	_led_second_cb
 15893  14CB  2CC0               	goto	l1276
 15894  14CC                     __end_of_main:	
 15895  14CC                     __ptext80:	
 15896 ;; *************** function _app_init *****************
 15897 ;; Defined at:
 15898 ;;		line 109 in file "src/app_main.c"
 15899 ;; Parameters:    Size  Location     Type
 15900 ;;		None
 15901 ;; Auto vars:     Size  Location     Type
 15902 ;;		None
 15903 ;; Return value:  Size  Location     Type
 15904 ;;                  1    wreg      void 
 15905 ;; Registers used:
 15906 ;;		wreg, status,2, status,0, pclath, cstack
 15907 ;; Tracked objects:
 15908 ;;		On entry : B1F/0
 15909 ;;		On exit  : B1F/2
 15910 ;;		Unchanged: B00/0
 15911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15916 ;;Total ram usage:        0 bytes
 15917 ;; Hardware stack levels used:    1
 15918 ;; Hardware stack levels required when called:    7
 15919 ;; This function calls:
 15920 ;;		_eusart_init
 15921 ;;		_gpio_init
 15922 ;;		_osc_init
 15923 ;;		_pwm1_init
 15924 ;;		_pwm2_init
 15925 ;;		_pwm3_init
 15926 ;;		_pwm4_init
 15927 ;;		_pwm5_init
 15928 ;;		_tmr0_init
 15929 ;;		_tmr2_init
 15930 ;; This function is called by:
 15931 ;;		_main
 15932 ;; This function uses a non-reentrant model
 15933 ;;
 15934                           
 15935                           
 15936                           ;psect for function _app_init
 15937  14CC                     _app_init:	
 15938                           
 15939                           ;app_main.c: 111: gpio_init();
 15940                           
 15941                           ;incstack = 0
 15942                           ; Regs used in _app_init: [wreg+status,2+status,0+pclath+cstack]
 15943  14CC  24F1  3194         	fcall	_gpio_init
 15944                           
 15945                           ;app_main.c: 112: osc_init();
 15946  14CE  2535  3194         	fcall	_osc_init
 15947                           
 15948                           ;app_main.c: 113: pwm1_init();
 15949  14D0  253F  3194         	fcall	_pwm1_init
 15950                           
 15951                           ;app_main.c: 114: pwm2_init();
 15952  14D2  2549  3194         	fcall	_pwm2_init
 15953                           
 15954                           ;app_main.c: 115: pwm3_init();
 15955  14D4  2552  3194         	fcall	_pwm3_init
 15956                           
 15957                           ;app_main.c: 116: pwm4_init();
 15958  14D6  255D  3194         	fcall	_pwm4_init
 15959                           
 15960                           ;app_main.c: 117: pwm5_init();
 15961  14D8  2568  3194         	fcall	_pwm5_init
 15962                           
 15963                           ;app_main.c: 118: tmr0_init(rtc_process);
 15964  14DA  3046               	movlw	low _rtc_process
 15965  14DB  0020               	movlb	0	; select bank0
 15966  14DC  00B4               	movwf	tmr0_init@cb
 15967  14DD  301C               	movlw	high _rtc_process
 15968  14DE  00B5               	movwf	tmr0_init@cb+1
 15969  14DF  2572  3194         	fcall	_tmr0_init
 15970                           
 15971                           ;app_main.c: 119: tmr2_init(tmr2_isr_callback);
 15972  14E1  3087               	movlw	low _tmr2_isr_callback
 15973  14E2  0020               	movlb	0	; select bank0
 15974  14E3  00B4               	movwf	tmr2_init@cb
 15975  14E4  3008               	movlw	high _tmr2_isr_callback
 15976  14E5  00B5               	movwf	tmr2_init@cb+1
 15977  14E6  2584  3194         	fcall	_tmr2_init
 15978                           
 15979                           ;app_main.c: 120: eusart_init(ble_receive);
 15980  14E8  3055               	movlw	low _ble_receive
 15981  14E9  0020               	movlb	0	; select bank0
 15982  14EA  00B4               	movwf	eusart_init@cb
 15983  14EB  3019               	movlw	high _ble_receive
 15984  14EC  00B5               	movwf	eusart_init@cb+1
 15985  14ED  27A5               	fcall	_eusart_init
 15986                           
 15987                           ;app_main.c: 125: (INTCONbits.GIE = 1);
 15988  14EE  178B               	bsf	11,7	;volatile
 15989                           
 15990                           ;app_main.c: 126: (INTCONbits.PEIE = 1);
 15991  14EF  170B               	bsf	11,6	;volatile
 15992  14F0  0008               	return
 15993  14F1                     __end_of_app_init:	
 15994  14F1                     __ptext89:	
 15995 ;; *************** function _gpio_init *****************
 15996 ;; Defined at:
 15997 ;;		line 38 in file "src/app_main.c"
 15998 ;; Parameters:    Size  Location     Type
 15999 ;;		None
 16000 ;; Auto vars:     Size  Location     Type
 16001 ;;		None
 16002 ;; Return value:  Size  Location     Type
 16003 ;;                  1    wreg      void 
 16004 ;; Registers used:
 16005 ;;		wreg, status,2, status,0
 16006 ;; Tracked objects:
 16007 ;;		On entry : B1F/0
 16008 ;;		On exit  : B1F/1C
 16009 ;;		Unchanged: B00/0
 16010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16015 ;;Total ram usage:        0 bytes
 16016 ;; Hardware stack levels used:    1
 16017 ;; Hardware stack levels required when called:    6
 16018 ;; This function calls:
 16019 ;;		Nothing
 16020 ;; This function is called by:
 16021 ;;		_app_init
 16022 ;; This function uses a non-reentrant model
 16023 ;;
 16024                           
 16025                           
 16026                           ;psect for function _gpio_init
 16027  14F1                     _gpio_init:	
 16028                           
 16029                           ;app_main.c: 43: LATA = 0x02;
 16030                           
 16031                           ;incstack = 0
 16032                           ; Regs used in _gpio_init: [wreg+status,2+status,0]
 16033  14F1  3002               	movlw	2
 16034  14F2  0022               	movlb	2	; select bank2
 16035  14F3  008C               	movwf	12	;volatile
 16036                           
 16037                           ;app_main.c: 44: LATB = 0xD0;
 16038  14F4  30D0               	movlw	208
 16039  14F5  008D               	movwf	13	;volatile
 16040                           
 16041                           ;app_main.c: 45: LATC = 0x00;
 16042  14F6  018E               	clrf	14	;volatile
 16043                           
 16044                           ;app_main.c: 50: TRISA = 0x34;
 16045  14F7  3034               	movlw	52
 16046  14F8  0021               	movlb	1	; select bank1
 16047  14F9  008C               	movwf	12	;volatile
 16048                           
 16049                           ;app_main.c: 51: TRISB = 0x00;
 16050  14FA  018D               	clrf	13	;volatile
 16051                           
 16052                           ;app_main.c: 52: TRISC = 0x05;
 16053  14FB  3005               	movlw	5
 16054  14FC  008E               	movwf	14	;volatile
 16055                           
 16056                           ;app_main.c: 57: ANSELC = 0x00;
 16057  14FD  0023               	movlb	3	; select bank3
 16058  14FE  018E               	clrf	14	;volatile
 16059                           
 16060                           ;app_main.c: 58: ANSELB = 0x00;
 16061  14FF  018D               	clrf	13	;volatile
 16062                           
 16063                           ;app_main.c: 59: ANSELA = 0x00;
 16064  1500  018C               	clrf	12	;volatile
 16065                           
 16066                           ;app_main.c: 64: WPUB = 0x00;
 16067  1501  0024               	movlb	4	; select bank4
 16068  1502  018D               	clrf	13	;volatile
 16069                           
 16070                           ;app_main.c: 65: WPUA = 0x04;
 16071  1503  3004               	movlw	4
 16072  1504  008C               	movwf	12	;volatile
 16073                           
 16074                           ;app_main.c: 66: WPUC = 0x01;
 16075  1505  3001               	movlw	1
 16076  1506  008E               	movwf	14	;volatile
 16077                           
 16078                           ;app_main.c: 71: ODCONA = 0x00;
 16079  1507  0025               	movlb	5	; select bank5
 16080  1508  018C               	clrf	12	;volatile
 16081                           
 16082                           ;app_main.c: 72: ODCONB = 0x00;
 16083  1509  018D               	clrf	13	;volatile
 16084                           
 16085                           ;app_main.c: 73: ODCONC = 0x00;
 16086  150A  018E               	clrf	14	;volatile
 16087                           
 16088                           ;app_main.c: 75: PPSLOCK = 0x55;
 16089  150B  3055               	movlw	85
 16090  150C  003C               	movlb	28	; select bank28
 16091  150D  008F               	movwf	15	;volsfr
 16092                           
 16093                           ;app_main.c: 76: PPSLOCK = 0xAA;
 16094  150E  30AA               	movlw	170
 16095  150F  008F               	movwf	15	;volsfr
 16096                           
 16097                           ;app_main.c: 77: PPSLOCKbits.PPSLOCKED = 0x00;
 16098  1510  100F               	bcf	15,0	;volsfr
 16099                           
 16100                           ;app_main.c: 79: RXPPSbits.RXPPS = 0x12;
 16101  1511  0824               	movf	36,w	;volatile
 16102  1512  39E0               	andlw	-32
 16103  1513  3812               	iorlw	18
 16104  1514  00A4               	movwf	36	;volatile
 16105                           
 16106                           ;app_main.c: 80: RB4PPSbits.RB4PPS = 0x14;
 16107  1515  003D               	movlb	29	; select bank29
 16108  1516  081C               	movf	28,w	;volatile
 16109  1517  39E0               	andlw	-32
 16110  1518  3814               	iorlw	20
 16111  1519  009C               	movwf	28	;volatile
 16112                           
 16113                           ;app_main.c: 81: RC5PPSbits.RC5PPS = 0x0C;
 16114  151A  0825               	movf	37,w	;volatile
 16115  151B  39E0               	andlw	-32
 16116  151C  380C               	iorlw	12
 16117  151D  00A5               	movwf	37	;volatile
 16118                           
 16119                           ;app_main.c: 82: RC4PPSbits.RC4PPS = 0x0D;
 16120  151E  0824               	movf	36,w	;volatile
 16121  151F  39E0               	andlw	-32
 16122  1520  380D               	iorlw	13
 16123  1521  00A4               	movwf	36	;volatile
 16124                           
 16125                           ;app_main.c: 83: RC3PPSbits.RC3PPS = 0x0E;
 16126  1522  0823               	movf	35,w	;volatile
 16127  1523  39E0               	andlw	-32
 16128  1524  380E               	iorlw	14
 16129  1525  00A3               	movwf	35	;volatile
 16130                           
 16131                           ;app_main.c: 84: RC6PPSbits.RC6PPS = 0x0F;
 16132  1526  0826               	movf	38,w	;volatile
 16133  1527  39E0               	andlw	-32
 16134  1528  380F               	iorlw	15
 16135  1529  00A6               	movwf	38	;volatile
 16136                           
 16137                           ;app_main.c: 85: RC7PPSbits.RC7PPS = 0x02;
 16138  152A  0827               	movf	39,w	;volatile
 16139  152B  39E0               	andlw	-32
 16140  152C  3802               	iorlw	2
 16141  152D  00A7               	movwf	39	;volatile
 16142                           
 16143                           ;app_main.c: 87: PPSLOCK = 0x55;
 16144  152E  3055               	movlw	85
 16145  152F  003C               	movlb	28	; select bank28
 16146  1530  008F               	movwf	15	;volsfr
 16147                           
 16148                           ;app_main.c: 88: PPSLOCK = 0xAA;
 16149  1531  30AA               	movlw	170
 16150  1532  008F               	movwf	15	;volsfr
 16151                           
 16152                           ;app_main.c: 89: PPSLOCKbits.PPSLOCKED = 0x01;
 16153  1533  140F               	bsf	15,0	;volsfr
 16154  1534  0008               	return
 16155  1535                     __end_of_gpio_init:	
 16156  1535                     __ptext88:	
 16157 ;; *************** function _osc_init *****************
 16158 ;; Defined at:
 16159 ;;		line 23 in file "src/app_main.c"
 16160 ;; Parameters:    Size  Location     Type
 16161 ;;		None
 16162 ;; Auto vars:     Size  Location     Type
 16163 ;;		None
 16164 ;; Return value:  Size  Location     Type
 16165 ;;                  1    wreg      void 
 16166 ;; Registers used:
 16167 ;;		wreg, status,2
 16168 ;; Tracked objects:
 16169 ;;		On entry : B1F/1C
 16170 ;;		On exit  : B1F/12
 16171 ;;		Unchanged: B00/0
 16172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16177 ;;Total ram usage:        0 bytes
 16178 ;; Hardware stack levels used:    1
 16179 ;; Hardware stack levels required when called:    6
 16180 ;; This function calls:
 16181 ;;		Nothing
 16182 ;; This function is called by:
 16183 ;;		_app_init
 16184 ;; This function uses a non-reentrant model
 16185 ;;
 16186                           
 16187                           
 16188                           ;psect for function _osc_init
 16189  1535                     _osc_init:	
 16190                           
 16191                           ;app_main.c: 26: OSCCON1 = 0x60;
 16192                           
 16193                           ;incstack = 0
 16194                           ; Regs used in _osc_init: [wreg+status,2]
 16195  1535  3060               	movlw	96
 16196  1536  0032               	movlb	18	; select bank18
 16197  1537  0099               	movwf	25	;volatile
 16198                           
 16199                           ;app_main.c: 28: OSCCON3 = 0x00;
 16200  1538  019B               	clrf	27	;volatile
 16201                           
 16202                           ;app_main.c: 30: OSCEN = 0x48;
 16203  1539  3048               	movlw	72
 16204  153A  009D               	movwf	29	;volatile
 16205                           
 16206                           ;app_main.c: 32: OSCFRQ = 0x06;
 16207  153B  3006               	movlw	6
 16208  153C  009F               	movwf	31	;volatile
 16209                           
 16210                           ;app_main.c: 34: OSCTUNE = 0x00;
 16211  153D  019E               	clrf	30	;volatile
 16212  153E  0008               	return
 16213  153F                     __end_of_osc_init:	
 16214  153F                     __ptext87:	
 16215 ;; *************** function _pwm1_init *****************
 16216 ;; Defined at:
 16217 ;;		line 3 in file "src/drv_pwm.c"
 16218 ;; Parameters:    Size  Location     Type
 16219 ;;		None
 16220 ;; Auto vars:     Size  Location     Type
 16221 ;;		None
 16222 ;; Return value:  Size  Location     Type
 16223 ;;                  1    wreg      void 
 16224 ;; Registers used:
 16225 ;;		wreg, status,2, status,0
 16226 ;; Tracked objects:
 16227 ;;		On entry : B1F/12
 16228 ;;		On exit  : B1F/5
 16229 ;;		Unchanged: B00/0
 16230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16235 ;;Total ram usage:        0 bytes
 16236 ;; Hardware stack levels used:    1
 16237 ;; Hardware stack levels required when called:    6
 16238 ;; This function calls:
 16239 ;;		Nothing
 16240 ;; This function is called by:
 16241 ;;		_app_init
 16242 ;; This function uses a non-reentrant model
 16243 ;;
 16244                           
 16245                           
 16246                           ;psect for function _pwm1_init
 16247  153F                     _pwm1_init:	
 16248                           
 16249                           ;drv_pwm.c: 6: CCP1CON = 0x8F;
 16250                           
 16251                           ;incstack = 0
 16252                           ; Regs used in _pwm1_init: [wreg+status,2+status,0]
 16253  153F  308F               	movlw	143
 16254  1540  0025               	movlb	5	; select bank5
 16255  1541  0093               	movwf	19	;volatile
 16256                           
 16257                           ;drv_pwm.c: 9: CCPR1H = 0x00;
 16258  1542  0192               	clrf	18	;volatile
 16259                           
 16260                           ;drv_pwm.c: 12: CCPR1L = 0x00;
 16261  1543  0191               	clrf	17	;volatile
 16262                           
 16263                           ;drv_pwm.c: 15: CCPTMRSbits.C1TSEL = 0x1;
 16264  1544  081F               	movf	31,w	;volatile
 16265  1545  39FC               	andlw	-4
 16266  1546  3801               	iorlw	1
 16267  1547  009F               	movwf	31	;volatile
 16268  1548  0008               	return
 16269  1549                     __end_of_pwm1_init:	
 16270  1549                     __ptext86:	
 16271 ;; *************** function _pwm2_init *****************
 16272 ;; Defined at:
 16273 ;;		line 25 in file "src/drv_pwm.c"
 16274 ;; Parameters:    Size  Location     Type
 16275 ;;		None
 16276 ;; Auto vars:     Size  Location     Type
 16277 ;;		None
 16278 ;; Return value:  Size  Location     Type
 16279 ;;                  1    wreg      void 
 16280 ;; Registers used:
 16281 ;;		wreg, status,2, status,0
 16282 ;; Tracked objects:
 16283 ;;		On entry : B1F/5
 16284 ;;		On exit  : B1F/5
 16285 ;;		Unchanged: B00/0
 16286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16291 ;;Total ram usage:        0 bytes
 16292 ;; Hardware stack levels used:    1
 16293 ;; Hardware stack levels required when called:    6
 16294 ;; This function calls:
 16295 ;;		Nothing
 16296 ;; This function is called by:
 16297 ;;		_app_init
 16298 ;; This function uses a non-reentrant model
 16299 ;;
 16300                           
 16301                           
 16302                           ;psect for function _pwm2_init
 16303  1549                     _pwm2_init:	
 16304                           
 16305                           ;drv_pwm.c: 28: CCP2CON = 0x8F;
 16306                           
 16307                           ;incstack = 0
 16308                           ; Regs used in _pwm2_init: [wreg+status,2+status,0]
 16309  1549  308F               	movlw	143
 16310  154A  0097               	movwf	23	;volatile
 16311                           
 16312                           ;drv_pwm.c: 31: CCPR2H = 0x00;
 16313  154B  0196               	clrf	22	;volatile
 16314                           
 16315                           ;drv_pwm.c: 34: CCPR2L = 0x00;
 16316  154C  0195               	clrf	21	;volatile
 16317                           
 16318                           ;drv_pwm.c: 37: CCPTMRSbits.C2TSEL = 0x1;
 16319  154D  081F               	movf	31,w	;volatile
 16320  154E  39F3               	andlw	-13
 16321  154F  3804               	iorlw	4
 16322  1550  009F               	movwf	31	;volatile
 16323  1551  0008               	return
 16324  1552                     __end_of_pwm2_init:	
 16325  1552                     __ptext85:	
 16326 ;; *************** function _pwm3_init *****************
 16327 ;; Defined at:
 16328 ;;		line 47 in file "src/drv_pwm.c"
 16329 ;; Parameters:    Size  Location     Type
 16330 ;;		None
 16331 ;; Auto vars:     Size  Location     Type
 16332 ;;		None
 16333 ;; Return value:  Size  Location     Type
 16334 ;;                  1    wreg      void 
 16335 ;; Registers used:
 16336 ;;		wreg, status,2, status,0
 16337 ;; Tracked objects:
 16338 ;;		On entry : B1F/5
 16339 ;;		On exit  : B1F/5
 16340 ;;		Unchanged: B00/0
 16341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16346 ;;Total ram usage:        0 bytes
 16347 ;; Hardware stack levels used:    1
 16348 ;; Hardware stack levels required when called:    6
 16349 ;; This function calls:
 16350 ;;		Nothing
 16351 ;; This function is called by:
 16352 ;;		_app_init
 16353 ;; This function uses a non-reentrant model
 16354 ;;
 16355                           
 16356                           
 16357                           ;psect for function _pwm3_init
 16358  1552                     _pwm3_init:	
 16359                           
 16360                           ;drv_pwm.c: 50: CCP3CON = 0x8F;
 16361                           
 16362                           ;incstack = 0
 16363                           ; Regs used in _pwm3_init: [wreg+status,2+status,0]
 16364  1552  308F               	movlw	143
 16365  1553  0026               	movlb	6	; select bank6
 16366  1554  0093               	movwf	19	;volatile
 16367                           
 16368                           ;drv_pwm.c: 53: CCPR3H = 0x00;
 16369  1555  0192               	clrf	18	;volatile
 16370                           
 16371                           ;drv_pwm.c: 56: CCPR3L = 0x00;
 16372  1556  0191               	clrf	17	;volatile
 16373                           
 16374                           ;drv_pwm.c: 59: CCPTMRSbits.C3TSEL = 0x1;
 16375  1557  0025               	movlb	5	; select bank5
 16376  1558  081F               	movf	31,w	;volatile
 16377  1559  39CF               	andlw	-49
 16378  155A  3810               	iorlw	16
 16379  155B  009F               	movwf	31	;volatile
 16380  155C  0008               	return
 16381  155D                     __end_of_pwm3_init:	
 16382  155D                     __ptext84:	
 16383 ;; *************** function _pwm4_init *****************
 16384 ;; Defined at:
 16385 ;;		line 69 in file "src/drv_pwm.c"
 16386 ;; Parameters:    Size  Location     Type
 16387 ;;		None
 16388 ;; Auto vars:     Size  Location     Type
 16389 ;;		None
 16390 ;; Return value:  Size  Location     Type
 16391 ;;                  1    wreg      void 
 16392 ;; Registers used:
 16393 ;;		wreg, status,2, status,0
 16394 ;; Tracked objects:
 16395 ;;		On entry : B1F/5
 16396 ;;		On exit  : B1F/5
 16397 ;;		Unchanged: B00/0
 16398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16403 ;;Total ram usage:        0 bytes
 16404 ;; Hardware stack levels used:    1
 16405 ;; Hardware stack levels required when called:    6
 16406 ;; This function calls:
 16407 ;;		Nothing
 16408 ;; This function is called by:
 16409 ;;		_app_init
 16410 ;; This function uses a non-reentrant model
 16411 ;;
 16412                           
 16413                           
 16414                           ;psect for function _pwm4_init
 16415  155D                     _pwm4_init:	
 16416                           
 16417                           ;drv_pwm.c: 72: CCP4CON = 0x8F;
 16418                           
 16419                           ;incstack = 0
 16420                           ; Regs used in _pwm4_init: [wreg+status,2+status,0]
 16421  155D  308F               	movlw	143
 16422  155E  0026               	movlb	6	; select bank6
 16423  155F  0097               	movwf	23	;volatile
 16424                           
 16425                           ;drv_pwm.c: 75: CCPR4H = 0x00;
 16426  1560  0196               	clrf	22	;volatile
 16427                           
 16428                           ;drv_pwm.c: 78: CCPR4L = 0x00;
 16429  1561  0195               	clrf	21	;volatile
 16430                           
 16431                           ;drv_pwm.c: 81: CCPTMRSbits.C4TSEL = 0x1;
 16432  1562  0025               	movlb	5	; select bank5
 16433  1563  081F               	movf	31,w	;volatile
 16434  1564  393F               	andlw	-193
 16435  1565  3840               	iorlw	64
 16436  1566  009F               	movwf	31	;volatile
 16437  1567  0008               	return
 16438  1568                     __end_of_pwm4_init:	
 16439  1568                     __ptext83:	
 16440 ;; *************** function _pwm5_init *****************
 16441 ;; Defined at:
 16442 ;;		line 91 in file "src/drv_pwm.c"
 16443 ;; Parameters:    Size  Location     Type
 16444 ;;		None
 16445 ;; Auto vars:     Size  Location     Type
 16446 ;;		None
 16447 ;; Return value:  Size  Location     Type
 16448 ;;                  1    wreg      void 
 16449 ;; Registers used:
 16450 ;;		wreg, status,2, status,0
 16451 ;; Tracked objects:
 16452 ;;		On entry : B1F/5
 16453 ;;		On exit  : B1F/C
 16454 ;;		Unchanged: B00/0
 16455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16460 ;;Total ram usage:        0 bytes
 16461 ;; Hardware stack levels used:    1
 16462 ;; Hardware stack levels required when called:    6
 16463 ;; This function calls:
 16464 ;;		Nothing
 16465 ;; This function is called by:
 16466 ;;		_app_init
 16467 ;; This function uses a non-reentrant model
 16468 ;;
 16469                           
 16470                           
 16471                           ;psect for function _pwm5_init
 16472  1568                     _pwm5_init:	
 16473                           
 16474                           ;drv_pwm.c: 93: PWM5DCH = 0;
 16475                           
 16476                           ;incstack = 0
 16477                           ; Regs used in _pwm5_init: [wreg+status,2+status,0]
 16478  1568  002C               	movlb	12	; select bank12
 16479  1569  0198               	clrf	24	;volatile
 16480                           
 16481                           ;drv_pwm.c: 94: PWM5DCL = 0;
 16482  156A  0197               	clrf	23	;volatile
 16483                           
 16484                           ;drv_pwm.c: 95: PWMTMRSbits.P5TSEL = 0X01;
 16485  156B  081F               	movf	31,w	;volatile
 16486  156C  39FC               	andlw	-4
 16487  156D  3801               	iorlw	1
 16488  156E  009F               	movwf	31	;volatile
 16489                           
 16490                           ;drv_pwm.c: 96: PWM5CON = 0X80;
 16491  156F  3080               	movlw	128
 16492  1570  0099               	movwf	25	;volatile
 16493  1571  0008               	return
 16494  1572                     __end_of_pwm5_init:	
 16495  1572                     __ptext82:	
 16496 ;; *************** function _tmr0_init *****************
 16497 ;; Defined at:
 16498 ;;		line 6 in file "src/drv_tmr.c"
 16499 ;; Parameters:    Size  Location     Type
 16500 ;;  cb              2   20[BANK0 ] PTR FTN()void 
 16501 ;;		 -> rtc_process(1), 
 16502 ;; Auto vars:     Size  Location     Type
 16503 ;;		None
 16504 ;; Return value:  Size  Location     Type
 16505 ;;                  1    wreg      void 
 16506 ;; Registers used:
 16507 ;;		wreg, status,2
 16508 ;; Tracked objects:
 16509 ;;		On entry : B1F/0
 16510 ;;		On exit  : B1F/1
 16511 ;;		Unchanged: B00/0
 16512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16516 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16517 ;;Total ram usage:        2 bytes
 16518 ;; Hardware stack levels used:    1
 16519 ;; Hardware stack levels required when called:    6
 16520 ;; This function calls:
 16521 ;;		Nothing
 16522 ;; This function is called by:
 16523 ;;		_app_init
 16524 ;; This function uses a non-reentrant model
 16525 ;;
 16526                           
 16527                           
 16528                           ;psect for function _tmr0_init
 16529  1572                     _tmr0_init:	
 16530                           
 16531                           ;drv_tmr.c: 9: T0CON0 = 0x00;
 16532                           
 16533                           ;incstack = 0
 16534                           ; Regs used in _tmr0_init: [wreg+status,2]
 16535  1572  0197               	clrf	23	;volatile
 16536                           
 16537                           ;drv_tmr.c: 12: T0CON1 = 0xD7;
 16538  1573  30D7               	movlw	215
 16539  1574  0098               	movwf	24	;volatile
 16540                           
 16541                           ;drv_tmr.c: 15: TMR0H = 0xFF;
 16542  1575  30FF               	movlw	255
 16543  1576  0096               	movwf	22	;volatile
 16544                           
 16545                           ;drv_tmr.c: 18: TMR0L = 0x00;
 16546  1577  0195               	clrf	21	;volatile
 16547                           
 16548                           ;drv_tmr.c: 21: PIR0bits.TMR0IF = 0;
 16549  1578  1290               	bcf	16,5	;volatile
 16550                           
 16551                           ;drv_tmr.c: 24: PIE0bits.TMR0IE = 1;
 16552  1579  0021               	movlb	1	; select bank1
 16553  157A  1690               	bsf	16,5	;volatile
 16554                           
 16555                           ;drv_tmr.c: 26: tmr0_isr_cb = cb;
 16556  157B  0020               	movlb	0	; select bank0
 16557  157C  0835               	movf	tmr0_init@cb+1,w
 16558  157D  0021               	movlb	1	; select bank1
 16559  157E  00D1               	movwf	(_tmr0_isr_cb+1)^(0+128)
 16560  157F  0020               	movlb	0	; select bank0
 16561  1580  0834               	movf	tmr0_init@cb,w
 16562  1581  0021               	movlb	1	; select bank1
 16563  1582  00D0               	movwf	_tmr0_isr_cb^(0+128)
 16564  1583  0008               	return
 16565  1584                     __end_of_tmr0_init:	
 16566  1584                     __ptext81:	
 16567 ;; *************** function _tmr2_init *****************
 16568 ;; Defined at:
 16569 ;;		line 38 in file "src/drv_tmr.c"
 16570 ;; Parameters:    Size  Location     Type
 16571 ;;  cb              2   20[BANK0 ] PTR FTN()void 
 16572 ;;		 -> tmr2_isr_callback(1), 
 16573 ;; Auto vars:     Size  Location     Type
 16574 ;;		None
 16575 ;; Return value:  Size  Location     Type
 16576 ;;                  1    wreg      void 
 16577 ;; Registers used:
 16578 ;;		wreg, status,2
 16579 ;; Tracked objects:
 16580 ;;		On entry : B1F/0
 16581 ;;		On exit  : B1F/2
 16582 ;;		Unchanged: B00/0
 16583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16584 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16587 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16588 ;;Total ram usage:        2 bytes
 16589 ;; Hardware stack levels used:    1
 16590 ;; Hardware stack levels required when called:    6
 16591 ;; This function calls:
 16592 ;;		Nothing
 16593 ;; This function is called by:
 16594 ;;		_app_init
 16595 ;; This function uses a non-reentrant model
 16596 ;;
 16597                           
 16598                           
 16599                           ;psect for function _tmr2_init
 16600  1584                     _tmr2_init:	
 16601                           
 16602                           ;drv_tmr.c: 41: T2CON = 0x78;
 16603                           
 16604                           ;incstack = 0
 16605                           ; Regs used in _tmr2_init: [wreg+status,2]
 16606  1584  3078               	movlw	120
 16607  1585  009F               	movwf	31	;volatile
 16608                           
 16609                           ;drv_tmr.c: 44: PR2 = 0xF9;
 16610  1586  30F9               	movlw	249
 16611  1587  009E               	movwf	30	;volatile
 16612                           
 16613                           ;drv_tmr.c: 47: TMR2 = 0x00;
 16614  1588  019D               	clrf	29	;volatile
 16615                           
 16616                           ;drv_tmr.c: 50: PIR1bits.TMR2IF = 0;
 16617  1589  1091               	bcf	17,1	;volatile
 16618                           
 16619                           ;drv_tmr.c: 53: PIE1bits.TMR2IE = 1;
 16620  158A  0021               	movlb	1	; select bank1
 16621  158B  1491               	bsf	17,1	;volatile
 16622                           
 16623                           ;drv_tmr.c: 55: tmr2_isr_cb = cb;
 16624  158C  0020               	movlb	0	; select bank0
 16625  158D  0835               	movf	tmr2_init@cb+1,w
 16626  158E  0022               	movlb	2	; select bank2
 16627  158F  00DF               	movwf	(_tmr2_isr_cb+1)^(0+256)
 16628  1590  0020               	movlb	0	; select bank0
 16629  1591  0834               	movf	tmr2_init@cb,w
 16630  1592  0022               	movlb	2	; select bank2
 16631  1593  00DE               	movwf	_tmr2_isr_cb^(0+256)
 16632  1594  0008               	return
 16633  1595                     __end_of_tmr2_init:	
 16634  1595                     __ptext75:	
 16635 ;; *************** function _ble_init *****************
 16636 ;; Defined at:
 16637 ;;		line 180 in file "src/app_ble.c"
 16638 ;; Parameters:    Size  Location     Type
 16639 ;;		None
 16640 ;; Auto vars:     Size  Location     Type
 16641 ;;		None
 16642 ;; Return value:  Size  Location     Type
 16643 ;;                  1    wreg      void 
 16644 ;; Registers used:
 16645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16646 ;; Tracked objects:
 16647 ;;		On entry : B1F/2
 16648 ;;		On exit  : 1F/2
 16649 ;;		Unchanged: 0/0
 16650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16653 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16654 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16655 ;;Total ram usage:        2 bytes
 16656 ;; Hardware stack levels used:    1
 16657 ;; Hardware stack levels required when called:    9
 16658 ;; This function calls:
 16659 ;;		_ble_check_devid
 16660 ;;		_ble_send_cmd
 16661 ;; This function is called by:
 16662 ;;		_main
 16663 ;; This function uses a non-reentrant model
 16664 ;;
 16665                           
 16666                           
 16667                           ;psect for function _ble_init
 16668  1595                     _ble_init:	
 16669                           
 16670                           ;app_ble.c: 182: LATCbits.LATC1 = 0;
 16671                           
 16672                           ;incstack = 0
 16673                           ; Regs used in _ble_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16674  1595  108E               	bcf	14,1	;volatile
 16675                           
 16676                           ;app_ble.c: 183: LATBbits.LATB5 = 0;
 16677  1596  128D               	bcf	13,5	;volatile
 16678                           
 16679                           ;app_ble.c: 184: _delay((unsigned long)((20)*(16000000/4000.0)));
 16680  1597  3068               	movlw	104
 16681  1598  0021               	movlb	1	; select bank1
 16682  1599  00B7               	movwf	??_ble_init^(0+128)
 16683  159A  30E4               	movlw	228
 16684  159B                     u7697:	
 16685  159B  0B89               	decfsz	9,f
 16686  159C  2D9B               	goto	u7697
 16687  159D  0BB7               	decfsz	??_ble_init^(0+128),f
 16688  159E  2D9B               	goto	u7697
 16689  159F  0000               	nop
 16690                           
 16691                           ;app_ble.c: 185: LATBbits.LATB5 = 1;
 16692  15A0  0022               	movlb	2	; select bank2
 16693  15A1  168D               	bsf	13,5	;volatile
 16694                           
 16695                           ;app_ble.c: 186: _delay((unsigned long)((240)*(16000000/4000.0)));
 16696  15A2  3005               	movlw	5
 16697  15A3  0021               	movlb	1	; select bank1
 16698  15A4  00B8               	movwf	(??_ble_init^(0+128)+1)
 16699  15A5  30DF               	movlw	223
 16700  15A6  00B7               	movwf	??_ble_init^(0+128)
 16701  15A7  30BB               	movlw	187
 16702  15A8                     u7707:	
 16703  15A8  0B89               	decfsz	9,f
 16704  15A9  2DA8               	goto	u7707
 16705  15AA  0BB7               	decfsz	??_ble_init^(0+128),f
 16706  15AB  2DA8               	goto	u7707
 16707  15AC  0BB8               	decfsz	(??_ble_init^(0+128)+1),f
 16708  15AD  2DA8               	goto	u7707
 16709  15AE  3200               	nop2
 16710                           
 16711                           ;app_ble.c: 189: if(ble_check_devid() == 0)
 16712  15AF  2713  3194         	fcall	_ble_check_devid
 16713  15B1  3A00               	xorlw	0
 16714  15B2  1D03               	skipz
 16715  15B3  2DC4               	goto	l8172
 16716                           
 16717                           ;app_ble.c: 190: {
 16718                           ;app_ble.c: 191: _delay((unsigned long)((40)*(16000000/4000.0)));
 16719  15B4  30D0               	movlw	208
 16720  15B5  0021               	movlb	1	; select bank1
 16721  15B6  00B7               	movwf	??_ble_init^(0+128)
 16722  15B7  30C9               	movlw	201
 16723  15B8                     u7717:	
 16724  15B8  0B89               	decfsz	9,f
 16725  15B9  2DB8               	goto	u7717
 16726  15BA  0BB7               	decfsz	??_ble_init^(0+128),f
 16727  15BB  2DB8               	goto	u7717
 16728  15BC  3200               	nop2
 16729                           
 16730                           ;app_ble.c: 192: ble_send_cmd("AT+ADV_MFR_SPC=" "30313431" "30313033" "\r\n");
 16731  15BD  30BA               	movlw	low (STR_2| (0+32768))
 16732  15BE  0020               	movlb	0	; select bank0
 16733  15BF  00B9               	movwf	ble_send_cmd@cmd
 16734  15C0  3098               	movlw	high (STR_2| (0+32768))
 16735  15C1  00BA               	movwf	ble_send_cmd@cmd+1
 16736  15C2  25F0  3194         	fcall	_ble_send_cmd
 16737  15C4                     l8172:	
 16738                           
 16739                           ;app_ble.c: 193: }
 16740                           ;app_ble.c: 194: _delay((unsigned long)((40)*(16000000/4000.0)));
 16741  15C4  30D0               	movlw	208
 16742  15C5  0021               	movlb	1	; select bank1
 16743  15C6  00B7               	movwf	??_ble_init^(0+128)
 16744  15C7  30C9               	movlw	201
 16745  15C8                     u7727:	
 16746  15C8  0B89               	decfsz	9,f
 16747  15C9  2DC8               	goto	u7727
 16748  15CA  0BB7               	decfsz	??_ble_init^(0+128),f
 16749  15CB  2DC8               	goto	u7727
 16750  15CC  3200               	nop2
 16751                           
 16752                           ;app_ble.c: 196: ble_send_cmd("AT+SET=1\r\n");
 16753  15CD  30B5               	movlw	low (STR_3| (0+32768))
 16754  15CE  0020               	movlb	0	; select bank0
 16755  15CF  00B9               	movwf	ble_send_cmd@cmd
 16756  15D0  3099               	movlw	high (STR_3| (0+32768))
 16757  15D1  00BA               	movwf	ble_send_cmd@cmd+1
 16758  15D2  25F0  3194         	fcall	_ble_send_cmd
 16759                           
 16760                           ;app_ble.c: 197: _delay((unsigned long)((40)*(16000000/4000.0)));
 16761  15D4  30D0               	movlw	208
 16762  15D5  0021               	movlb	1	; select bank1
 16763  15D6  00B7               	movwf	??_ble_init^(0+128)
 16764  15D7  30C9               	movlw	201
 16765  15D8                     u7737:	
 16766  15D8  0B89               	decfsz	9,f
 16767  15D9  2DD8               	goto	u7737
 16768  15DA  0BB7               	decfsz	??_ble_init^(0+128),f
 16769  15DB  2DD8               	goto	u7737
 16770  15DC  3200               	nop2
 16771                           
 16772                           ;app_ble.c: 199: ble_send_cmd("AT+MODE=DATA\r\n");
 16773  15DD  3067               	movlw	low (STR_4| (0+32768))
 16774  15DE  0020               	movlb	0	; select bank0
 16775  15DF  00B9               	movwf	ble_send_cmd@cmd
 16776  15E0  3099               	movlw	high (STR_4| (0+32768))
 16777  15E1  00BA               	movwf	ble_send_cmd@cmd+1
 16778  15E2  25F0  3194         	fcall	_ble_send_cmd
 16779                           
 16780                           ;app_ble.c: 200: _delay((unsigned long)((40)*(16000000/4000.0)));
 16781  15E4  30D0               	movlw	208
 16782  15E5  0021               	movlb	1	; select bank1
 16783  15E6  00B7               	movwf	??_ble_init^(0+128)
 16784  15E7  30C9               	movlw	201
 16785  15E8                     u7747:	
 16786  15E8  0B89               	decfsz	9,f
 16787  15E9  2DE8               	goto	u7747
 16788  15EA  0BB7               	decfsz	??_ble_init^(0+128),f
 16789  15EB  2DE8               	goto	u7747
 16790  15EC  3200               	nop2
 16791                           
 16792                           ;app_ble.c: 201: LATCbits.LATC1 = 1;
 16793  15ED  0022               	movlb	2	; select bank2
 16794  15EE  148E               	bsf	14,1	;volatile
 16795  15EF  0008               	return
 16796  15F0                     __end_of_ble_init:	
 16797  15F0                     __ptext77:	
 16798 ;; *************** function _ble_send_cmd *****************
 16799 ;; Defined at:
 16800 ;;		line 44 in file "src/app_ble.c"
 16801 ;; Parameters:    Size  Location     Type
 16802 ;;  cmd             2   25[BANK0 ] PTR const unsigned char 
 16803 ;;		 -> STR_4(15), STR_3(11), STR_2(34), STR_1(19), 
 16804 ;; Auto vars:     Size  Location     Type
 16805 ;;  ack             8   28[BANK0 ] unsigned char [8]
 16806 ;;  idx             1   39[BANK0 ] unsigned char 
 16807 ;;  rev             1   38[BANK0 ] unsigned char 
 16808 ;;  cnt             1   37[BANK0 ] unsigned char 
 16809 ;;  len             1   36[BANK0 ] unsigned char 
 16810 ;; Return value:  Size  Location     Type
 16811 ;;                  1    wreg      unsigned char 
 16812 ;; Registers used:
 16813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16814 ;; Tracked objects:
 16815 ;;		On entry : 1F/0
 16816 ;;		On exit  : 1F/0
 16817 ;;		Unchanged: 0/0
 16818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16819 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16820 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16821 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16822 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16823 ;;Total ram usage:       15 bytes
 16824 ;; Hardware stack levels used:    1
 16825 ;; Hardware stack levels required when called:    7
 16826 ;; This function calls:
 16827 ;;		_eusart_write
 16828 ;;		_strlen
 16829 ;; This function is called by:
 16830 ;;		_ble_check_devid
 16831 ;;		_ble_init
 16832 ;; This function uses a non-reentrant model
 16833 ;;
 16834                           
 16835                           
 16836                           ;psect for function _ble_send_cmd
 16837  15F0                     _ble_send_cmd:	
 16838                           
 16839                           ;app_ble.c: 46: char ack[] = "AT+OK\r\n";
 16840                           
 16841                           ;incstack = 0
 16842                           ; Regs used in _ble_send_cmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16843  15F0  3045               	movlw	low ble_send_cmd@F8318
 16844  15F1  0086               	movwf	6
 16845  15F2  3001               	movlw	high ble_send_cmd@F8318
 16846  15F3  0087               	movwf	7
 16847  15F4  303C               	movlw	low ble_send_cmd@ack
 16848  15F5  0084               	movwf	4
 16849  15F6  3000               	movlw	high ble_send_cmd@ack
 16850  15F7  0085               	movwf	5
 16851  15F8  3008               	movlw	8
 16852  15F9  00BB               	movwf	??_ble_send_cmd
 16853  15FA                     u3730:	
 16854  15FA  0016               	moviw fsr1++
 16855  15FB  001A               	movwi fsr0++
 16856  15FC  0BBB               	decfsz	??_ble_send_cmd,f
 16857  15FD  2DFA               	goto	u3730
 16858                           
 16859                           ;app_ble.c: 47: uint8_t len = strlen(ack);
 16860  15FE  303C               	movlw	(low (ble_send_cmd@ack| 0))& (0+255)
 16861  15FF  2701  3194         	fcall	_strlen
 16862  1601  0834               	movf	?_strlen,w
 16863  1602  00C4               	movwf	ble_send_cmd@len
 16864                           
 16865                           ;app_ble.c: 48: uint8_t idx = 0;
 16866  1603  01C7               	clrf	ble_send_cmd@idx
 16867                           
 16868                           ;app_ble.c: 49: uint8_t cnt = 0;
 16869  1604  01C5               	clrf	ble_send_cmd@cnt
 16870  1605  0023               	movlb	3	; select bank3
 16871  1606  0819               	movf	25,w	;volatile
 16872  1607                     l5632:	
 16873                           ;app_ble.c: 51: while(*cmd != '\0')
 16874                           
 16875  1607  0020               	movlb	0	; select bank0
 16876  1608  0839               	movf	ble_send_cmd@cmd,w
 16877  1609  0084               	movwf	4
 16878  160A  083A               	movf	ble_send_cmd@cmd+1,w
 16879  160B  0085               	movwf	5
 16880  160C  0012               	moviw fsr0++
 16881  160D  1903               	btfsc	3,2
 16882  160E  2E39               	goto	l5654
 16883                           
 16884                           ;app_ble.c: 52: {
 16885                           ;app_ble.c: 53: eusart_write(*cmd++);
 16886  160F  0839               	movf	ble_send_cmd@cmd,w
 16887  1610  0084               	movwf	4
 16888  1611  083A               	movf	ble_send_cmd@cmd+1,w
 16889  1612  0085               	movwf	5
 16890  1613  0800               	movf	0,w	;code access
 16891  1614  26DD  3194         	fcall	_eusart_write
 16892  1616  0AB9               	incf	ble_send_cmd@cmd,f
 16893  1617  1903               	skipnz
 16894  1618  0ABA               	incf	ble_send_cmd@cmd+1,f
 16895  1619  2E07               	goto	l5632
 16896  161A                     l392:	
 16897                           
 16898                           ;app_ble.c: 57: {
 16899                           ;app_ble.c: 58: if(PIR1bits.RCIF)
 16900  161A  1E91               	btfss	17,5	;volatile
 16901  161B  2E2F               	goto	l5646
 16902                           
 16903                           ;app_ble.c: 59: {
 16904                           ;app_ble.c: 60: if(RCSTAbits.OERR)
 16905  161C  0023               	movlb	3	; select bank3
 16906  161D  1C9D               	btfss	29,1	;volatile
 16907  161E  2E21               	goto	l5638
 16908                           
 16909                           ;app_ble.c: 61: {
 16910                           ;app_ble.c: 62: RCSTAbits.CREN = 0;
 16911  161F  121D               	bcf	29,4	;volatile
 16912                           
 16913                           ;app_ble.c: 63: RCSTAbits.CREN = 1;
 16914  1620  161D               	bsf	29,4	;volatile
 16915  1621                     l5638:	
 16916                           
 16917                           ;app_ble.c: 64: }
 16918                           ;app_ble.c: 65: rev = RCREG;
 16919  1621  0819               	movf	25,w	;volatile
 16920  1622  0020               	movlb	0	; select bank0
 16921  1623  00C6               	movwf	ble_send_cmd@rev
 16922                           
 16923                           ;app_ble.c: 66: if(rev == ack[idx])
 16924  1624  0847               	movf	ble_send_cmd@idx,w
 16925  1625  3E3C               	addlw	(low (ble_send_cmd@ack| 0))& (0+255)
 16926  1626  0086               	movwf	6
 16927  1627  0187               	clrf	7
 16928  1628  0801               	movf	1,w
 16929  1629  0646               	xorwf	ble_send_cmd@rev,w
 16930  162A  1D03               	skipz
 16931  162B  2E2E               	goto	l5644
 16932                           
 16933                           ;app_ble.c: 67: {
 16934                           ;app_ble.c: 68: idx++;
 16935  162C  0AC7               	incf	ble_send_cmd@idx,f
 16936                           
 16937                           ;app_ble.c: 69: }
 16938  162D  2E2F               	goto	l5646
 16939  162E                     l5644:	
 16940                           
 16941                           ;app_ble.c: 70: else
 16942                           ;app_ble.c: 71: {
 16943                           ;app_ble.c: 72: idx = 0;
 16944  162E  01C7               	clrf	ble_send_cmd@idx
 16945  162F                     l5646:	
 16946                           
 16947                           ;app_ble.c: 73: }
 16948                           ;app_ble.c: 74: }
 16949                           ;app_ble.c: 75: _delay((unsigned long)((250)*(16000000/4000000.0)));
 16950  162F  30C8               	movlw	200
 16951  1630                     u7767:	
 16952  1630  3200               	nop2
 16953  1631  0B89               	decfsz	9,f
 16954  1632  2E30               	goto	u7767
 16955                           
 16956                           ;app_ble.c: 76: cnt++;
 16957  1633  0020               	movlb	0	; select bank0
 16958  1634  30FB               	movlw	251
 16959  1635  0AC5               	incf	ble_send_cmd@cnt,f
 16960                           
 16961                           ;app_ble.c: 77: if(cnt > 250)
 16962  1636  0245               	subwf	ble_send_cmd@cnt,w
 16963  1637  1803               	btfsc	3,0
 16964  1638  0008               	return
 16965  1639                     l5654:	
 16966  1639  0844               	movf	ble_send_cmd@len,w
 16967  163A  0247               	subwf	ble_send_cmd@idx,w
 16968  163B  1803               	btfsc	3,0
 16969  163C  0008               	return
 16970  163D  2E1A               	goto	l392
 16971  163E                     __end_of_ble_send_cmd:	
 16972  163E                     __ptext22:	
 16973 ;; *************** function _led_init *****************
 16974 ;; Defined at:
 16975 ;;		line 453 in file "src/app_led.c"
 16976 ;; Parameters:    Size  Location     Type
 16977 ;;		None
 16978 ;; Auto vars:     Size  Location     Type
 16979 ;;		None
 16980 ;; Return value:  Size  Location     Type
 16981 ;;                  1    wreg      void 
 16982 ;; Registers used:
 16983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16984 ;; Tracked objects:
 16985 ;;		On entry : 1F/2
 16986 ;;		On exit  : 1E/0
 16987 ;;		Unchanged: 0/0
 16988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16993 ;;Total ram usage:        0 bytes
 16994 ;; Hardware stack levels used:    1
 16995 ;; Hardware stack levels required when called:    9
 16996 ;; This function calls:
 16997 ;;		_led_para_init
 16998 ;; This function is called by:
 16999 ;;		_main
 17000 ;; This function uses a non-reentrant model
 17001 ;;
 17002                           
 17003                           
 17004                           ;psect for function _led_init
 17005  163E                     _led_init:	
 17006                           
 17007                           ;app_led.c: 455: led_para_init();
 17008                           
 17009                           ;incstack = 0
 17010                           ; Regs used in _led_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17011  163E  3184  2C30         	ljmp	l7724
 17012  1640                     __end_of_led_init:	
 17013  1640                     __ptext2:	
 17014 ;; *************** function _rtc_init *****************
 17015 ;; Defined at:
 17016 ;;		line 41 in file "src/app_rtc.c"
 17017 ;; Parameters:    Size  Location     Type
 17018 ;;		None
 17019 ;; Auto vars:     Size  Location     Type
 17020 ;;		None
 17021 ;; Return value:  Size  Location     Type
 17022 ;;                  1    wreg      void 
 17023 ;; Registers used:
 17024 ;;		status,2
 17025 ;; Tracked objects:
 17026 ;;		On entry : 1F/2
 17027 ;;		On exit  : 1F/2
 17028 ;;		Unchanged: 0/0
 17029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17034 ;;Total ram usage:        0 bytes
 17035 ;; Hardware stack levels used:    1
 17036 ;; Hardware stack levels required when called:    6
 17037 ;; This function calls:
 17038 ;;		Nothing
 17039 ;; This function is called by:
 17040 ;;		_main
 17041 ;; This function uses a non-reentrant model
 17042 ;;
 17043                           
 17044                           
 17045                           ;psect for function _rtc_init
 17046  1640                     _rtc_init:	
 17047                           
 17048                           ;app_rtc.c: 43: m_current_time.year = 0;
 17049                           
 17050                           ;incstack = 0
 17051                           ; Regs used in _rtc_init: [status,2]
 17052  1640  01D5               	clrf	_m_current_time^(0+256)
 17053                           
 17054                           ;app_rtc.c: 44: m_current_time.month = 1;
 17055  1641  01D6               	clrf	(_m_current_time^(0+256)+1)
 17056  1642  0AD6               	incf	(_m_current_time^(0+256)+1),f
 17057                           
 17058                           ;app_rtc.c: 45: m_current_time.day = 1;
 17059  1643  01D7               	clrf	(_m_current_time^(0+256)+2)
 17060  1644  0AD7               	incf	(_m_current_time^(0+256)+2),f
 17061                           
 17062                           ;app_rtc.c: 46: m_current_time.week = 0;
 17063  1645  01D8               	clrf	(_m_current_time^(0+256)+3)
 17064                           
 17065                           ;app_rtc.c: 47: m_current_time.hour = 0;
 17066  1646  01D9               	clrf	(_m_current_time^(0+256)+4)
 17067                           
 17068                           ;app_rtc.c: 48: m_current_time.minute = 0;
 17069  1647  01DA               	clrf	(_m_current_time^(0+256)+5)
 17070                           
 17071                           ;app_rtc.c: 49: m_current_time.second = 0;
 17072  1648  01DB               	clrf	(_m_current_time^(0+256)+6)
 17073  1649  0008               	return
 17074  164A                     __end_of_rtc_init:	
 17075  164A                     __ptext69:	
 17076 ;; *************** function _ble_send_data *****************
 17077 ;; Defined at:
 17078 ;;		line 204 in file "src/app_ble.c"
 17079 ;; Parameters:    Size  Location     Type
 17080 ;;		None
 17081 ;; Auto vars:     Size  Location     Type
 17082 ;;  p               2   29[BANK0 ] PTR struct .
 17083 ;;		 -> m_led_para.ble_para(113), m_led_para(114), 
 17084 ;;  i               1   31[BANK0 ] unsigned char 
 17085 ;;  len             1   28[BANK0 ] unsigned char 
 17086 ;;  xor             1   27[BANK0 ] unsigned char 
 17087 ;; Return value:  Size  Location     Type
 17088 ;;                  1    wreg      void 
 17089 ;; Registers used:
 17090 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17091 ;; Tracked objects:
 17092 ;;		On entry : 18/1
 17093 ;;		On exit  : 1F/2
 17094 ;;		Unchanged: 0/0
 17095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17097 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17098 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17099 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17100 ;;Total ram usage:        9 bytes
 17101 ;; Hardware stack levels used:    1
 17102 ;; Hardware stack levels required when called:    7
 17103 ;; This function calls:
 17104 ;;		___bmul
 17105 ;;		_ble_transmit_start
 17106 ;;		_ble_transmit_stop
 17107 ;;		_eusart_write
 17108 ;; This function is called by:
 17109 ;;		_ble_decode
 17110 ;; This function uses a non-reentrant model
 17111 ;;
 17112                           
 17113                           
 17114                           ;psect for function _ble_send_data
 17115  164A                     _ble_send_data:	
 17116  164A                     l5656:	
 17117                           ;incstack = 0
 17118                           ; Regs used in _ble_send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17119                           
 17120                           
 17121                           ;app_ble.c: 206: uint8_t i;
 17122                           ;app_ble.c: 207: uint8_t len;
 17123                           ;app_ble.c: 208: uint8_t xor = 0;
 17124  164A  0020               	movlb	0	; select bank0
 17125  164B  307F               	movlw	127
 17126  164C  01BB               	clrf	ble_send_data@xor
 17127                           
 17128                           ;app_ble.c: 209: ble_para_t *p = &m_led_para.ble_para;
 17129  164D  00BD               	movwf	ble_send_data@p
 17130  164E  3023               	movlw	35
 17131  164F  00BE               	movwf	ble_send_data@p+1
 17132                           
 17133                           ;app_ble.c: 210: ble_transmit_start();
 17134  1650  275B  3194         	fcall	_ble_transmit_start
 17135                           
 17136                           ;app_ble.c: 211: xor ^= eusart_write(0x68);
 17137  1652  3068               	movlw	104
 17138  1653  26DD  3194         	fcall	_eusart_write
 17139  1655  06BB               	xorwf	ble_send_data@xor,f
 17140                           
 17141                           ;app_ble.c: 212: xor ^= eusart_write(0x05);
 17142  1656  3005               	movlw	5
 17143  1657  26DD  3194         	fcall	_eusart_write
 17144  1659  06BB               	xorwf	ble_send_data@xor,f
 17145                           
 17146                           ;app_ble.c: 213: xor ^= eusart_write(p->mMode);
 17147  165A  27E8  3194         	fcall	PL114	;call to abstracted procedure
 17148  165C  26DD  3194         	fcall	_eusart_write
 17149  165E  06BB               	xorwf	ble_send_data@xor,f
 17150                           
 17151                           ;app_ble.c: 214: if(p->mMode == 1)
 17152  165F  27E8  3194         	fcall	PL114	;call to abstracted procedure
 17153  1661  3A01               	xorlw	1
 17154  1662  1D03               	skipz
 17155  1663  2E84               	goto	l5692
 17156                           
 17157                           ;app_ble.c: 215: {
 17158                           ;app_ble.c: 216: len = sizeof(p->auto_para.array);
 17159  1664  3013               	movlw	19
 17160  1665  00BC               	movwf	ble_send_data@len
 17161                           
 17162                           ;app_ble.c: 217: for(i = 0; i < len; i++)
 17163  1666  01BF               	clrf	ble_send_data@i
 17164  1667                     l5678:	
 17165  1667  083C               	movf	ble_send_data@len,w
 17166  1668  023F               	subwf	ble_send_data@i,w
 17167  1669  1803               	btfsc	3,0
 17168  166A  2E77               	goto	l5680
 17169                           
 17170                           ;app_ble.c: 218: {
 17171                           ;app_ble.c: 219: xor ^= eusart_write(p->auto_para.array[i]);
 17172  166B  27D4  3194         	fcall	PL22	;call to abstracted procedure
 17173  166D  0086               	movwf	6
 17174  166E  083A               	movf	??_ble_send_data+3,w
 17175  166F  0087               	movwf	7
 17176  1670  315B               	addfsr 1,27
 17177  1671  0801               	movf	1,w
 17178  1672  26DD  3194         	fcall	_eusart_write
 17179  1674  06BB               	xorwf	ble_send_data@xor,f
 17180  1675  0ABF               	incf	ble_send_data@i,f
 17181  1676  2E67               	goto	l5678
 17182  1677                     l5680:	
 17183                           
 17184                           ;app_ble.c: 220: }
 17185                           ;app_ble.c: 222: for(i = 0; i < sizeof(p->dynamic_para.array); i++)
 17186  1677  01BF               	clrf	ble_send_data@i
 17187  1678                     l5686:	
 17188                           
 17189                           ;app_ble.c: 223: {
 17190                           ;app_ble.c: 224: xor ^= eusart_write(p->dynamic_para.array[i]);
 17191  1678  27D4  3194         	fcall	PL22	;call to abstracted procedure
 17192  167A  3E6B               	addlw	107
 17193  167B  27F5  3194         	fcall	PL142	;call to abstracted procedure
 17194  167D  26DD  3194         	fcall	_eusart_write
 17195  167F  27FB  3194         	fcall	PL194	;call to abstracted procedure
 17196  1681  1803               	btfsc	3,0
 17197  1682  2ED9               	goto	l5734
 17198  1683  2E78               	goto	l5686
 17199  1684                     l5692:	
 17200                           
 17201                           ;app_ble.c: 228: else if(p->mMode == 2)
 17202  1684  27E8  3194         	fcall	PL114	;call to abstracted procedure
 17203  1686  3A02               	xorlw	2
 17204  1687  1D03               	skipz
 17205  1688  2EC6               	goto	l5724
 17206                           
 17207                           ;app_ble.c: 229: {
 17208                           ;app_ble.c: 230: if(p->pro_para.point_count < 4)
 17209  1689  083D               	movf	ble_send_data@p,w
 17210  168A  27EF  3194         	fcall	PL140	;call to abstracted procedure
 17211  168C  3004               	movlw	4
 17212  168D  0201               	subwf	1,w
 17213                           
 17214                           ;app_ble.c: 231: {
 17215                           ;app_ble.c: 232: p->pro_para.point_count = 4;
 17216  168E  083D               	movf	ble_send_data@p,w
 17217  168F  1803               	skipnc
 17218  1690  2E95               	goto	L23
 17219  1691  27DE  3194         	fcall	PL110	;call to abstracted procedure
 17220  1693  3004               	movlw	4
 17221  1694  2E9F               	goto	L22
 17222  1695                     L23:	
 17223                           ;app_ble.c: 234: else if(p->pro_para.point_count > 10)
 17224                           
 17225                           ;app_ble.c: 233: }
 17226                           
 17227  1695  27EF  3194         	fcall	PL140	;call to abstracted procedure
 17228  1697  300B               	movlw	11
 17229  1698  0201               	subwf	1,w
 17230  1699  1C03               	skipc
 17231  169A  2EA0               	goto	l5702
 17232                           
 17233                           ;app_ble.c: 235: {
 17234                           ;app_ble.c: 236: p->pro_para.point_count = 10;
 17235  169B  083D               	movf	ble_send_data@p,w
 17236  169C  27DE  3194         	fcall	PL110	;call to abstracted procedure
 17237  169E  300A               	movlw	10
 17238  169F                     L22:	
 17239  169F  0081               	movwf	1
 17240  16A0                     l5702:	
 17241                           
 17242                           ;app_ble.c: 237: }
 17243                           ;app_ble.c: 238: len = p->pro_para.point_count*(2+4)+1;
 17244  16A0  3006               	movlw	6
 17245  16A1  00B4               	movwf	___bmul@multiplicand
 17246  16A2  083D               	movf	ble_send_data@p,w
 17247  16A3  27EF  3194         	fcall	PL140	;call to abstracted procedure
 17248  16A5  0801               	movf	1,w
 17249  16A6  2767  3194         	fcall	___bmul
 17250  16A8  3E01               	addlw	1
 17251  16A9  00BC               	movwf	ble_send_data@len
 17252                           
 17253                           ;app_ble.c: 239: for(i = 0; i < len; i++)
 17254  16AA  01BF               	clrf	ble_send_data@i
 17255  16AB                     l5710:	
 17256  16AB  083C               	movf	ble_send_data@len,w
 17257  16AC  023F               	subwf	ble_send_data@i,w
 17258  16AD  1803               	btfsc	3,0
 17259  16AE  2EB9               	goto	l5712
 17260                           
 17261                           ;app_ble.c: 240: {
 17262                           ;app_ble.c: 241: xor ^= eusart_write(p->pro_para.array[i]);
 17263  16AF  27D4  3194         	fcall	PL22	;call to abstracted procedure
 17264  16B1  3E2E               	addlw	46
 17265  16B2  27F5  3194         	fcall	PL142	;call to abstracted procedure
 17266  16B4  26DD  3194         	fcall	_eusart_write
 17267  16B6  06BB               	xorwf	ble_send_data@xor,f
 17268  16B7  0ABF               	incf	ble_send_data@i,f
 17269  16B8  2EAB               	goto	l5710
 17270  16B9                     l5712:	
 17271                           
 17272                           ;app_ble.c: 242: }
 17273                           ;app_ble.c: 244: for(i = 0; i < sizeof(p->dynamic_para.array); i++)
 17274  16B9  01BF               	clrf	ble_send_data@i
 17275  16BA                     l5718:	
 17276                           
 17277                           ;app_ble.c: 245: {
 17278                           ;app_ble.c: 246: xor ^= eusart_write(p->dynamic_para.array[i]);
 17279  16BA  27D4  3194         	fcall	PL22	;call to abstracted procedure
 17280  16BC  3E6B               	addlw	107
 17281  16BD  27F5  3194         	fcall	PL142	;call to abstracted procedure
 17282  16BF  26DD  3194         	fcall	_eusart_write
 17283  16C1  27FB  3194         	fcall	PL194	;call to abstracted procedure
 17284  16C3  1803               	btfsc	3,0
 17285  16C4  2ED9               	goto	l5734
 17286  16C5  2EBA               	goto	l5718
 17287  16C6                     l5724:	
 17288                           
 17289                           ;app_ble.c: 250: else
 17290                           ;app_ble.c: 251: {
 17291                           ;app_ble.c: 252: len = sizeof(p->manual_para.array);
 17292  16C6  301A               	movlw	26
 17293  16C7  00BC               	movwf	ble_send_data@len
 17294                           
 17295                           ;app_ble.c: 253: for(i = 0; i < len; i++)
 17296  16C8  01BF               	clrf	ble_send_data@i
 17297  16C9                     l5732:	
 17298  16C9  083C               	movf	ble_send_data@len,w
 17299  16CA  023F               	subwf	ble_send_data@i,w
 17300  16CB  1803               	btfsc	3,0
 17301  16CC  2ED9               	goto	l5734
 17302                           
 17303                           ;app_ble.c: 254: {
 17304                           ;app_ble.c: 255: xor ^= eusart_write(p->manual_para.array[i]);
 17305  16CD  27D4  3194         	fcall	PL22	;call to abstracted procedure
 17306  16CF  0086               	movwf	6
 17307  16D0  083A               	movf	??_ble_send_data+3,w
 17308  16D1  0087               	movwf	7
 17309  16D2  3141               	addfsr 1,1
 17310  16D3  0801               	movf	1,w
 17311  16D4  26DD  3194         	fcall	_eusart_write
 17312  16D6  06BB               	xorwf	ble_send_data@xor,f
 17313  16D7  0ABF               	incf	ble_send_data@i,f
 17314  16D8  2EC9               	goto	l5732
 17315  16D9                     l5734:	
 17316                           
 17317                           ;app_ble.c: 256: }
 17318                           ;app_ble.c: 257: }
 17319                           ;app_ble.c: 258: eusart_write(xor);
 17320  16D9  083B               	movf	ble_send_data@xor,w
 17321  16DA  26DD  3194         	fcall	_eusart_write
 17322                           
 17323                           ;app_ble.c: 259: ble_transmit_stop();
 17324  16DC  2FC3               	ljmp	l418
 17325  16DD                     __end_of_ble_send_data:	
 17326  16DD                     __ptext79:	
 17327 ;; *************** function _eusart_write *****************
 17328 ;; Defined at:
 17329 ;;		line 30 in file "src/drv_eusart.c"
 17330 ;; Parameters:    Size  Location     Type
 17331 ;;  byte            1    wreg     unsigned char 
 17332 ;; Auto vars:     Size  Location     Type
 17333 ;;  byte            1   20[BANK0 ] unsigned char 
 17334 ;; Return value:  Size  Location     Type
 17335 ;;                  1    wreg      unsigned char 
 17336 ;; Registers used:
 17337 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17338 ;; Tracked objects:
 17339 ;;		On entry : 0/0
 17340 ;;		On exit  : 1F/0
 17341 ;;		Unchanged: 0/0
 17342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17344 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17346 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17347 ;;Total ram usage:        1 bytes
 17348 ;; Hardware stack levels used:    1
 17349 ;; Hardware stack levels required when called:    6
 17350 ;; This function calls:
 17351 ;;		Nothing
 17352 ;; This function is called by:
 17353 ;;		_ble_send_cmd
 17354 ;;		_ble_send_data
 17355 ;;		_ble_ota_ack
 17356 ;; This function uses a non-reentrant model
 17357 ;;
 17358                           
 17359                           
 17360                           ;psect for function _eusart_write
 17361  16DD                     _eusart_write:	
 17362                           
 17363                           ;incstack = 0
 17364                           ; Regs used in _eusart_write: [wreg+fsr1l+fsr1h+status,2+status,0]
 17365                           ;eusart_write@byte stored from wreg
 17366  16DD  0020               	movlb	0	; select bank0
 17367  16DE  00B4               	movwf	eusart_write@byte
 17368  16DF                     l5170:	
 17369                           ;drv_eusart.c: 32: while(0 == tx_remain);
 17370                           
 17371  16DF  0022               	movlb	2	; select bank2
 17372  16E0  0860               	movf	_tx_remain^(0+256),w
 17373  16E1  1903               	btfsc	3,2
 17374  16E2  2EDF               	goto	l5170
 17375                           
 17376                           ;drv_eusart.c: 34: if(!PIE1bits.TXIE)
 17377  16E3  0021               	movlb	1	; select bank1
 17378  16E4  1A11               	btfsc	17,4	;volatile
 17379  16E5  2EEB               	goto	l186
 17380                           
 17381                           ;drv_eusart.c: 35: {
 17382                           ;drv_eusart.c: 36: TXREG = byte;
 17383  16E6  0020               	movlb	0	; select bank0
 17384  16E7  0834               	movf	eusart_write@byte,w
 17385  16E8  0023               	movlb	3	; select bank3
 17386  16E9  009A               	movwf	26	;volatile
 17387                           
 17388                           ;drv_eusart.c: 37: }
 17389  16EA  2EFC               	goto	l5184
 17390  16EB                     l186:	
 17391                           
 17392                           ;drv_eusart.c: 38: else
 17393                           ;drv_eusart.c: 39: {
 17394                           ;drv_eusart.c: 40: PIE1bits.TXIE = 0;
 17395  16EB  1211               	bcf	17,4	;volatile
 17396                           
 17397                           ;drv_eusart.c: 41: tx_buf[tx_head++] = byte;
 17398  16EC  084F               	movf	_tx_head^(0+128),w
 17399  16ED  3EA0               	addlw	(low (_tx_buf| (0+512)))& (0+255)
 17400  16EE  0086               	movwf	6
 17401  16EF  3002               	movlw	2	; select bank5/6
 17402  16F0  0087               	movwf	7
 17403  16F1  0020               	movlb	0	; select bank0
 17404  16F2  0834               	movf	eusart_write@byte,w
 17405  16F3  0081               	movwf	1
 17406  16F4  0021               	movlb	1	; select bank1
 17407  16F5  3040               	movlw	64
 17408  16F6  0ACF               	incf	_tx_head^(0+128),f
 17409                           
 17410                           ;drv_eusart.c: 42: if(sizeof( tx_buf) <= tx_head)
 17411  16F7  024F               	subwf	_tx_head^(0+128),w
 17412  16F8  1803               	btfsc	3,0
 17413                           
 17414                           ;drv_eusart.c: 43: {
 17415                           ;drv_eusart.c: 44: tx_head = 0;
 17416  16F9  01CF               	clrf	_tx_head^(0+128)
 17417                           
 17418                           ;drv_eusart.c: 45: }
 17419                           ;drv_eusart.c: 46: tx_remain--;
 17420  16FA  0022               	movlb	2	; select bank2
 17421  16FB  03E0               	decf	_tx_remain^(0+256),f
 17422  16FC                     l5184:	
 17423                           
 17424                           ;drv_eusart.c: 47: }
 17425                           ;drv_eusart.c: 48: PIE1bits.TXIE = 1;
 17426  16FC  0021               	movlb	1	; select bank1
 17427  16FD  1611               	bsf	17,4	;volatile
 17428                           
 17429                           ;drv_eusart.c: 49: return byte;
 17430  16FE  0020               	movlb	0	; select bank0
 17431  16FF  0834               	movf	eusart_write@byte,w
 17432  1700  0008               	return
 17433  1701                     __end_of_eusart_write:	
 17434  1701                     __ptext78:	
 17435 ;; *************** function _strlen *****************
 17436 ;; Defined at:
 17437 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\strlen.c"
 17438 ;; Parameters:    Size  Location     Type
 17439 ;;  s               1    wreg     PTR const unsigned char 
 17440 ;;		 -> ble_check_devid@dev(17), ble_send_cmd@ack(8), 
 17441 ;; Auto vars:     Size  Location     Type
 17442 ;;  s               1   24[BANK0 ] PTR const unsigned char 
 17443 ;;		 -> ble_check_devid@dev(17), ble_send_cmd@ack(8), 
 17444 ;;  cp              1   23[BANK0 ] PTR const unsigned char 
 17445 ;;		 -> ble_check_devid@dev(17), ble_send_cmd@ack(8), 
 17446 ;; Return value:  Size  Location     Type
 17447 ;;                  2   20[BANK0 ] unsigned int 
 17448 ;; Registers used:
 17449 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17450 ;; Tracked objects:
 17451 ;;		On entry : 1E/1
 17452 ;;		On exit  : 1F/0
 17453 ;;		Unchanged: 0/0
 17454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17455 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17456 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17458 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17459 ;;Total ram usage:        5 bytes
 17460 ;; Hardware stack levels used:    1
 17461 ;; Hardware stack levels required when called:    6
 17462 ;; This function calls:
 17463 ;;		Nothing
 17464 ;; This function is called by:
 17465 ;;		_ble_send_cmd
 17466 ;;		_ble_check_devid
 17467 ;; This function uses a non-reentrant model
 17468 ;;
 17469                           
 17470                           
 17471                           ;psect for function _strlen
 17472  1701                     _strlen:	
 17473                           
 17474                           ;incstack = 0
 17475                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 17476                           ;strlen@s stored from wreg
 17477  1701  0020               	movlb	0	; select bank0
 17478  1702  00B8               	movwf	strlen@s
 17479  1703  00B7               	movwf	strlen@cp
 17480  1704                     l5222:	
 17481  1704  0837               	movf	strlen@cp,w
 17482  1705  0086               	movwf	6
 17483  1706  0187               	clrf	7
 17484  1707  0801               	movf	1,w
 17485  1708  1903               	btfsc	3,2
 17486  1709  2F0C               	goto	l5224
 17487  170A  0AB7               	incf	strlen@cp,f
 17488  170B  2F04               	goto	l5222
 17489  170C                     l5224:	
 17490  170C  0838               	movf	strlen@s,w
 17491  170D  0237               	subwf	strlen@cp,w
 17492  170E  00B4               	movwf	?_strlen
 17493  170F  01B5               	clrf	?_strlen+1
 17494  1710  1BB4               	btfsc	?_strlen,7
 17495  1711  03B5               	decf	?_strlen+1,f
 17496  1712  0008               	return
 17497  1713                     __end_of_strlen:	
 17498  1713                     __ptext76:	
 17499 ;; *************** function _ble_check_devid *****************
 17500 ;; Defined at:
 17501 ;;		line 85 in file "src/app_ble.c"
 17502 ;; Parameters:    Size  Location     Type
 17503 ;;		None
 17504 ;; Auto vars:     Size  Location     Type
 17505 ;;  dev            17    1[BANK1 ] unsigned char [17]
 17506 ;;  cnt             2   20[BANK1 ] unsigned int 
 17507 ;;  idx             1   22[BANK1 ] unsigned char 
 17508 ;;  rev             1   19[BANK1 ] unsigned char 
 17509 ;;  len             1   18[BANK1 ] unsigned char 
 17510 ;; Return value:  Size  Location     Type
 17511 ;;                  1    wreg      unsigned char 
 17512 ;; Registers used:
 17513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17514 ;; Tracked objects:
 17515 ;;		On entry : 0/2
 17516 ;;		On exit  : 1F/1
 17517 ;;		Unchanged: 0/0
 17518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17520 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0
 17521 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17522 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0
 17523 ;;Total ram usage:       23 bytes
 17524 ;; Hardware stack levels used:    1
 17525 ;; Hardware stack levels required when called:    8
 17526 ;; This function calls:
 17527 ;;		_ble_send_cmd
 17528 ;;		_strlen
 17529 ;; This function is called by:
 17530 ;;		_ble_init
 17531 ;; This function uses a non-reentrant model
 17532 ;;
 17533                           
 17534                           
 17535                           ;psect for function _ble_check_devid
 17536  1713                     _ble_check_devid:	
 17537                           
 17538                           ;app_ble.c: 87: char dev[] = "30313431" "30313033";
 17539                           
 17540                           ;incstack = 0
 17541                           ; Regs used in _ble_check_devid: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17542  1713  3020               	movlw	low ble_check_devid@F8326
 17543  1714  0086               	movwf	6
 17544  1715  3001               	movlw	high ble_check_devid@F8326
 17545  1716  0087               	movwf	7
 17546  1717  30A1               	movlw	low ble_check_devid@dev
 17547  1718  0084               	movwf	4
 17548  1719  3000               	movlw	high ble_check_devid@dev
 17549  171A  0085               	movwf	5
 17550  171B  3011               	movlw	17
 17551  171C  0021               	movlb	1	; select bank1
 17552  171D  00A0               	movwf	??_ble_check_devid^(0+128)
 17553  171E                     u6450:	
 17554  171E  0016               	moviw fsr1++
 17555  171F  001A               	movwi fsr0++
 17556  1720  0BA0               	decfsz	??_ble_check_devid^(0+128),f
 17557  1721  2F1E               	goto	u6450
 17558                           
 17559                           ;app_ble.c: 88: uint8_t len = strlen(dev);
 17560  1722  30A1               	movlw	(low (ble_check_devid@dev| 0))& (0+255)
 17561  1723  2701  3194         	fcall	_strlen
 17562  1725  0834               	movf	?_strlen,w
 17563  1726  0021               	movlb	1	; select bank1
 17564  1727  00B2               	movwf	ble_check_devid@len^(0+128)
 17565  1728  3042               	movlw	low (STR_1| (0+32768))
 17566                           
 17567                           ;app_ble.c: 89: uint8_t idx = 0;
 17568  1729  01B6               	clrf	ble_check_devid@idx^(0+128)
 17569                           
 17570                           ;app_ble.c: 90: uint16_t cnt = 0;
 17571  172A  01B4               	clrf	ble_check_devid@cnt^(0+128)
 17572  172B  01B5               	clrf	(ble_check_devid@cnt+1)^(0+128)
 17573                           
 17574                           ;app_ble.c: 91: uint8_t rev;
 17575                           ;app_ble.c: 92: ble_send_cmd("AT+ADV_MFR_SPC=?\r\n");
 17576  172C  0020               	movlb	0	; select bank0
 17577  172D  00B9               	movwf	ble_send_cmd@cmd
 17578  172E  3099               	movlw	high (STR_1| (0+32768))
 17579  172F  00BA               	movwf	ble_send_cmd@cmd+1
 17580  1730  25F0  3194         	fcall	_ble_send_cmd
 17581  1732                     l7608:	
 17582                           ;app_ble.c: 93: while(idx < len)
 17583                           
 17584  1732  0021               	movlb	1	; select bank1
 17585  1733  0832               	movf	ble_check_devid@len^(0+128),w
 17586  1734  0236               	subwf	ble_check_devid@idx^(0+128),w
 17587  1735  1803               	btfsc	3,0
 17588  1736  3401               	retlw	1
 17589                           
 17590                           ;app_ble.c: 94: {
 17591                           ;app_ble.c: 95: if(PIR1bits.RCIF)
 17592  1737  0020               	movlb	0	; select bank0
 17593  1738  1E91               	btfss	17,5	;volatile
 17594  1739  2F4B               	goto	l7598
 17595                           
 17596                           ;app_ble.c: 96: {
 17597                           ;app_ble.c: 97: if(RC1STAbits.OERR)
 17598  173A  0023               	movlb	3	; select bank3
 17599  173B  1C9D               	btfss	29,1	;volatile
 17600  173C  2F3F               	goto	l7588
 17601                           
 17602                           ;app_ble.c: 98: {
 17603                           ;app_ble.c: 99: RC1STAbits.CREN = 0;
 17604  173D  121D               	bcf	29,4	;volatile
 17605                           
 17606                           ;app_ble.c: 100: RC1STAbits.CREN = 1;
 17607  173E  161D               	bsf	29,4	;volatile
 17608  173F                     l7588:	
 17609                           
 17610                           ;app_ble.c: 101: }
 17611                           ;app_ble.c: 102: rev = RCREG;
 17612  173F  0819               	movf	25,w	;volatile
 17613  1740  0021               	movlb	1	; select bank1
 17614  1741  00B3               	movwf	ble_check_devid@rev^(0+128)
 17615                           
 17616                           ;app_ble.c: 103: if(rev == dev[idx])
 17617  1742  0836               	movf	ble_check_devid@idx^(0+128),w
 17618  1743  3EA1               	addlw	(low (ble_check_devid@dev| 0))& (0+255)
 17619  1744  0086               	movwf	6
 17620  1745  0187               	clrf	7
 17621  1746  0801               	movf	1,w
 17622  1747  0633               	xorwf	ble_check_devid@rev^(0+128),w
 17623  1748  1D03               	skipz
 17624  1749  3400               	retlw	0
 17625                           
 17626                           ;app_ble.c: 104: {
 17627                           ;app_ble.c: 105: idx++;
 17628  174A  0AB6               	incf	ble_check_devid@idx^(0+128),f
 17629  174B                     l7598:	
 17630                           ;app_ble.c: 107: else
 17631                           ;app_ble.c: 108: {
 17632                           ;app_ble.c: 109: return 0;
 17633                           
 17634                           ;app_ble.c: 106: }
 17635                           
 17636                           
 17637                           ;app_ble.c: 110: }
 17638                           ;app_ble.c: 111: }
 17639                           ;app_ble.c: 112: _delay((unsigned long)((100)*(16000000/4000000.0)));
 17640  174B  3085               	movlw	133
 17641  174C                     u7757:	
 17642  174C  0B89               	decfsz	9,f
 17643  174D  2F4C               	goto	u7757
 17644  174E  0000               	nop
 17645                           
 17646                           ;app_ble.c: 113: cnt++;
 17647  174F  0021               	movlb	1	; select bank1
 17648  1750  0AB4               	incf	ble_check_devid@cnt^(0+128),f
 17649  1751  1903               	skipnz
 17650  1752  0AB5               	incf	(ble_check_devid@cnt+1)^(0+128),f
 17651                           
 17652                           ;app_ble.c: 114: if(cnt > 1000)
 17653  1753  3003               	movlw	3
 17654  1754  0235               	subwf	(ble_check_devid@cnt+1)^(0+128),w
 17655  1755  30E9               	movlw	233
 17656  1756  1903               	skipnz
 17657  1757  0234               	subwf	ble_check_devid@cnt^(0+128),w
 17658  1758  1803               	btfsc	3,0
 17659  1759  3400               	retlw	0
 17660  175A  2F32               	goto	l7608
 17661  175B                     __end_of_ble_check_devid:	
 17662                           ;app_ble.c: 117: }
 17663                           ;app_ble.c: 118: }
 17664                           ;app_ble.c: 119: return 1;
 17665                           
 17666  175B                     __ptext73:	
 17667 ;; *************** function _ble_transmit_start *****************
 17668 ;; Defined at:
 17669 ;;		line 122 in file "src/app_ble.c"
 17670 ;; Parameters:    Size  Location     Type
 17671 ;;		None
 17672 ;; Auto vars:     Size  Location     Type
 17673 ;;		None
 17674 ;; Return value:  Size  Location     Type
 17675 ;;                  1    wreg      void 
 17676 ;; Registers used:
 17677 ;;		wreg
 17678 ;; Tracked objects:
 17679 ;;		On entry : E/0
 17680 ;;		On exit  : 0/0
 17681 ;;		Unchanged: 0/0
 17682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17685 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17686 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17687 ;;Total ram usage:        1 bytes
 17688 ;; Hardware stack levels used:    1
 17689 ;; Hardware stack levels required when called:    6
 17690 ;; This function calls:
 17691 ;;		Nothing
 17692 ;; This function is called by:
 17693 ;;		_ble_send_data
 17694 ;;		_ble_ota_ack
 17695 ;; This function uses a non-reentrant model
 17696 ;;
 17697                           
 17698                           
 17699                           ;psect for function _ble_transmit_start
 17700  175B                     _ble_transmit_start:	
 17701                           
 17702                           ;app_ble.c: 124: LATCbits.LATC1 = 0;
 17703                           
 17704                           ;incstack = 0
 17705                           ; Regs used in _ble_transmit_start: [wreg]
 17706  175B  0022               	movlb	2	; select bank2
 17707  175C  108E               	bcf	14,1	;volatile
 17708                           
 17709                           ;app_ble.c: 125: _delay((unsigned long)((800)*(16000000/4000000.0)));
 17710  175D  3005               	movlw	5
 17711  175E  0020               	movlb	0	; select bank0
 17712  175F  00B4               	movwf	??_ble_transmit_start
 17713  1760  3026               	movlw	38
 17714  1761                     u7687:	
 17715  1761  0B89               	decfsz	9,f
 17716  1762  2F61               	goto	u7687
 17717  1763  0BB4               	decfsz	??_ble_transmit_start,f
 17718  1764  2F61               	goto	u7687
 17719  1765  0000               	nop
 17720  1766  0008               	return
 17721  1767                     __end_of_ble_transmit_start:	
 17722  1767                     __ptext70:	
 17723 ;; *************** function ___bmul *****************
 17724 ;; Defined at:
 17725 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul8.c"
 17726 ;; Parameters:    Size  Location     Type
 17727 ;;  multiplier      1    wreg     unsigned char 
 17728 ;;  multiplicand    1   20[BANK0 ] unsigned char 
 17729 ;; Auto vars:     Size  Location     Type
 17730 ;;  multiplier      1   22[BANK0 ] unsigned char 
 17731 ;;  product         1   21[BANK0 ] unsigned char 
 17732 ;; Return value:  Size  Location     Type
 17733 ;;                  1    wreg      unsigned char 
 17734 ;; Registers used:
 17735 ;;		wreg, status,2, status,0
 17736 ;; Tracked objects:
 17737 ;;		On entry : 1F/0
 17738 ;;		On exit  : 1F/0
 17739 ;;		Unchanged: 0/0
 17740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17741 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17742 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17744 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17745 ;;Total ram usage:        3 bytes
 17746 ;; Hardware stack levels used:    1
 17747 ;; Hardware stack levels required when called:    6
 17748 ;; This function calls:
 17749 ;;		Nothing
 17750 ;; This function is called by:
 17751 ;;		_ble_send_data
 17752 ;;		_led_set_pro
 17753 ;; This function uses a non-reentrant model
 17754 ;;
 17755                           
 17756                           
 17757                           ;psect for function ___bmul
 17758  1767                     ___bmul:	
 17759                           
 17760                           ;incstack = 0
 17761                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 17762                           ;___bmul@multiplier stored from wreg
 17763  1767  00B6               	movwf	___bmul@multiplier
 17764  1768  01B5               	clrf	___bmul@product
 17765  1769                     l5480:	
 17766  1769  0834               	movf	___bmul@multiplicand,w
 17767  176A  1836               	btfsc	___bmul@multiplier,0
 17768  176B  07B5               	addwf	___bmul@product,f
 17769  176C  35B4               	lslf	___bmul@multiplicand,f
 17770  176D  36B6               	lsrf	___bmul@multiplier,f
 17771  176E  0836               	movf	___bmul@multiplier,w
 17772  176F  1D03               	btfss	3,2
 17773  1770  2F69               	goto	l5480
 17774  1771  0835               	movf	___bmul@product,w
 17775  1772  0008               	return
 17776  1773                     __end_of___bmul:	
 17777  1773                     __ptext28:	
 17778 ;; *************** function _ble_process *****************
 17779 ;; Defined at:
 17780 ;;		line 167 in file "src/app_ble.c"
 17781 ;; Parameters:    Size  Location     Type
 17782 ;;		None
 17783 ;; Auto vars:     Size  Location     Type
 17784 ;;		None
 17785 ;; Return value:  Size  Location     Type
 17786 ;;                  1    wreg      void 
 17787 ;; Registers used:
 17788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17789 ;; Tracked objects:
 17790 ;;		On entry : 0/0
 17791 ;;		On exit  : 0/0
 17792 ;;		Unchanged: 0/0
 17793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17798 ;;Total ram usage:        0 bytes
 17799 ;; Hardware stack levels used:    1
 17800 ;; Hardware stack levels required when called:   10
 17801 ;; This function calls:
 17802 ;;		_ble_decode
 17803 ;;		_ble_ready_to_receive
 17804 ;;		_ble_receive_complete
 17805 ;;		_ble_receive_start
 17806 ;;		_ble_receive_stop
 17807 ;; This function is called by:
 17808 ;;		_main
 17809 ;; This function uses a non-reentrant model
 17810 ;;
 17811                           
 17812                           
 17813                           ;psect for function _ble_process
 17814  1773                     _ble_process:	
 17815                           
 17816                           ;app_ble.c: 169: if(ble_ready_to_receive())
 17817                           
 17818                           ;incstack = 0
 17819                           ; Regs used in _ble_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17820  1773  2782  3194         	fcall	_ble_ready_to_receive
 17821  1775  3A00               	xorlw	0
 17822  1776  1903               	skipnz
 17823  1777  2F7A               	goto	l8154
 17824                           
 17825                           ;app_ble.c: 170: {
 17826                           ;app_ble.c: 171: ble_receive_start();
 17827  1778  2790  3194         	fcall	_ble_receive_start
 17828  177A                     l8154:	
 17829                           
 17830                           ;app_ble.c: 172: }
 17831                           ;app_ble.c: 173: if(ble_receive_complete())
 17832  177A  2789  3194         	fcall	_ble_receive_complete
 17833  177C  3A00               	xorlw	0
 17834  177D  1903               	skipnz
 17835  177E  0008               	return
 17836                           
 17837                           ;app_ble.c: 174: {
 17838                           ;app_ble.c: 175: ble_receive_stop();
 17839  177F  27CD               	fcall	_ble_receive_stop
 17840                           
 17841                           ;app_ble.c: 176: ble_decode();
 17842  1780  318C  2C04         	ljmp	l7614
 17843  1782                     __end_of_ble_process:	
 17844  1782                     __ptext32:	
 17845 ;; *************** function _ble_ready_to_receive *****************
 17846 ;; Defined at:
 17847 ;;		line 135 in file "src/app_ble.c"
 17848 ;; Parameters:    Size  Location     Type
 17849 ;;		None
 17850 ;; Auto vars:     Size  Location     Type
 17851 ;;		None
 17852 ;; Return value:  Size  Location     Type
 17853 ;;                  1    wreg      unsigned char 
 17854 ;; Registers used:
 17855 ;;		wreg
 17856 ;; Tracked objects:
 17857 ;;		On entry : 0/0
 17858 ;;		On exit  : 1D/0
 17859 ;;		Unchanged: 0/0
 17860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17865 ;;Total ram usage:        0 bytes
 17866 ;; Hardware stack levels used:    1
 17867 ;; Hardware stack levels required when called:    6
 17868 ;; This function calls:
 17869 ;;		Nothing
 17870 ;; This function is called by:
 17871 ;;		_ble_process
 17872 ;; This function uses a non-reentrant model
 17873 ;;
 17874                           
 17875                           
 17876                           ;psect for function _ble_ready_to_receive
 17877  1782                     _ble_ready_to_receive:	
 17878                           
 17879                           ;app_ble.c: 137: if((PORTAbits.RA2 == 0) && LATCbits.LATC1)
 17880                           
 17881                           ;incstack = 0
 17882                           ; Regs used in _ble_ready_to_receive: [wreg]
 17883  1782  0020               	movlb	0	; select bank0
 17884  1783  190C               	btfsc	12,2	;volatile
 17885  1784  3400               	retlw	0
 17886  1785  0022               	movlb	2	; select bank2
 17887  1786  188E               	btfsc	14,1	;volatile
 17888                           
 17889                           ;app_ble.c: 138: {
 17890                           ;app_ble.c: 139: return 1;
 17891  1787  3401               	retlw	1
 17892                           
 17893                           ;app_ble.c: 140: }
 17894                           ;app_ble.c: 141: return 0;
 17895  1788  3400               	retlw	0
 17896  1789                     __end_of_ble_ready_to_receive:	
 17897  1789                     __ptext31:	
 17898 ;; *************** function _ble_receive_complete *****************
 17899 ;; Defined at:
 17900 ;;		line 152 in file "src/app_ble.c"
 17901 ;; Parameters:    Size  Location     Type
 17902 ;;		None
 17903 ;; Auto vars:     Size  Location     Type
 17904 ;;		None
 17905 ;; Return value:  Size  Location     Type
 17906 ;;                  1    wreg      unsigned char 
 17907 ;; Registers used:
 17908 ;;		wreg
 17909 ;; Tracked objects:
 17910 ;;		On entry : 1D/0
 17911 ;;		On exit  : 1D/0
 17912 ;;		Unchanged: 0/0
 17913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17918 ;;Total ram usage:        0 bytes
 17919 ;; Hardware stack levels used:    1
 17920 ;; Hardware stack levels required when called:    6
 17921 ;; This function calls:
 17922 ;;		Nothing
 17923 ;; This function is called by:
 17924 ;;		_ble_process
 17925 ;; This function uses a non-reentrant model
 17926 ;;
 17927                           
 17928                           
 17929                           ;psect for function _ble_receive_complete
 17930  1789                     _ble_receive_complete:	
 17931                           
 17932                           ;app_ble.c: 154: if(PORTAbits.RA2 && (LATCbits.LATC1 == 0))
 17933                           
 17934                           ;incstack = 0
 17935                           ; Regs used in _ble_receive_complete: [wreg]
 17936  1789  0020               	movlb	0	; select bank0
 17937  178A  1D0C               	btfss	12,2	;volatile
 17938  178B  3400               	retlw	0
 17939  178C  0022               	movlb	2	; select bank2
 17940  178D  1C8E               	btfss	14,1	;volatile
 17941                           
 17942                           ;app_ble.c: 155: {
 17943                           ;app_ble.c: 156: return 1;
 17944  178E  3401               	retlw	1
 17945                           
 17946                           ;app_ble.c: 157: }
 17947                           ;app_ble.c: 158: return 0;
 17948  178F  3400               	retlw	0
 17949  1790                     __end_of_ble_receive_complete:	
 17950  1790                     __ptext30:	
 17951 ;; *************** function _ble_receive_start *****************
 17952 ;; Defined at:
 17953 ;;		line 144 in file "src/app_ble.c"
 17954 ;; Parameters:    Size  Location     Type
 17955 ;;		None
 17956 ;; Auto vars:     Size  Location     Type
 17957 ;;		None
 17958 ;; Return value:  Size  Location     Type
 17959 ;;                  1    wreg      void 
 17960 ;; Registers used:
 17961 ;;		wreg, status,2
 17962 ;; Tracked objects:
 17963 ;;		On entry : 1D/0
 17964 ;;		On exit  : 1F/2
 17965 ;;		Unchanged: 0/0
 17966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17969 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17970 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17971 ;;Total ram usage:        1 bytes
 17972 ;; Hardware stack levels used:    1
 17973 ;; Hardware stack levels required when called:    6
 17974 ;; This function calls:
 17975 ;;		Nothing
 17976 ;; This function is called by:
 17977 ;;		_ble_process
 17978 ;; This function uses a non-reentrant model
 17979 ;;
 17980                           
 17981                           
 17982                           ;psect for function _ble_receive_start
 17983  1790                     _ble_receive_start:	
 17984                           
 17985                           ;app_ble.c: 146: index = 0;
 17986                           
 17987                           ;incstack = 0
 17988                           ; Regs used in _ble_receive_start: [wreg+status,2]
 17989  1790  01FD               	clrf	_index
 17990                           
 17991                           ;app_ble.c: 147: checksum = 0;
 17992  1791  0021               	movlb	1	; select bank1
 17993  1792  3005               	movlw	5
 17994  1793  01CD               	clrf	_checksum^(0+128)
 17995                           
 17996                           ;app_ble.c: 148: _delay((unsigned long)((800)*(16000000/4000000.0)));
 17997  1794  0020               	movlb	0	; select bank0
 17998  1795  00B4               	movwf	??_ble_receive_start
 17999  1796  3026               	movlw	38
 18000  1797                     u7657:	
 18001  1797  0B89               	decfsz	9,f
 18002  1798  2F97               	goto	u7657
 18003  1799  0BB4               	decfsz	??_ble_receive_start,f
 18004  179A  2F97               	goto	u7657
 18005  179B  0000               	nop
 18006                           
 18007                           ;app_ble.c: 149: LATCbits.LATC1 = 0;
 18008  179C  0022               	movlb	2	; select bank2
 18009  179D  108E               	bcf	14,1	;volatile
 18010  179E  0008               	return
 18011  179F                     __end_of_ble_receive_start:	
 18012  179F                     __ptext1:	
 18013 ;; *************** function _rtc_second_ready *****************
 18014 ;; Defined at:
 18015 ;;		line 100 in file "src/app_rtc.c"
 18016 ;; Parameters:    Size  Location     Type
 18017 ;;		None
 18018 ;; Auto vars:     Size  Location     Type
 18019 ;;		None
 18020 ;; Return value:  Size  Location     Type
 18021 ;;                  1    wreg      unsigned char 
 18022 ;; Registers used:
 18023 ;;		wreg
 18024 ;; Tracked objects:
 18025 ;;		On entry : 0/0
 18026 ;;		On exit  : 1F/1
 18027 ;;		Unchanged: 0/0
 18028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18033 ;;Total ram usage:        0 bytes
 18034 ;; Hardware stack levels used:    1
 18035 ;; Hardware stack levels required when called:    6
 18036 ;; This function calls:
 18037 ;;		Nothing
 18038 ;; This function is called by:
 18039 ;;		_main
 18040 ;; This function uses a non-reentrant model
 18041 ;;
 18042                           
 18043                           
 18044                           ;psect for function _rtc_second_ready
 18045  179F                     _rtc_second_ready:	
 18046                           
 18047                           ;app_rtc.c: 102: if(rtc_status.fSec)
 18048                           
 18049                           ;incstack = 0
 18050                           ; Regs used in _rtc_second_ready: [wreg]
 18051  179F  0021               	movlb	1	; select bank1
 18052  17A0  1C4E               	btfss	_rtc_status^(0+128),0
 18053  17A1  3400               	retlw	0
 18054  17A2  3001               	movlw	1
 18055                           
 18056                           ;app_rtc.c: 103: {
 18057                           ;app_rtc.c: 104: rtc_status.fSec = 0;
 18058  17A3  104E               	bcf	_rtc_status^(0+128),0
 18059                           
 18060                           ;app_rtc.c: 105: return 1;
 18061  17A4  0008               	return
 18062  17A5                     __end_of_rtc_second_ready:	
 18063                           ;app_rtc.c: 106: }
 18064                           ;app_rtc.c: 107: return 0;
 18065                           
 18066  17A5                     __ptext90:	
 18067 ;; *************** function _eusart_init *****************
 18068 ;; Defined at:
 18069 ;;		line 12 in file "src/drv_eusart.c"
 18070 ;; Parameters:    Size  Location     Type
 18071 ;;  cb              2   20[BANK0 ] PTR FTN(unsigned char ,)
 18072 ;;		 -> ble_receive(1), 
 18073 ;; Auto vars:     Size  Location     Type
 18074 ;;		None
 18075 ;; Return value:  Size  Location     Type
 18076 ;;                  1    wreg      void 
 18077 ;; Registers used:
 18078 ;;		wreg, status,2
 18079 ;; Tracked objects:
 18080 ;;		On entry : B1F/0
 18081 ;;		On exit  : B1F/2
 18082 ;;		Unchanged: B00/0
 18083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18084 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18087 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18088 ;;Total ram usage:        2 bytes
 18089 ;; Hardware stack levels used:    1
 18090 ;; Hardware stack levels required when called:    6
 18091 ;; This function calls:
 18092 ;;		Nothing
 18093 ;; This function is called by:
 18094 ;;		_app_init
 18095 ;; This function uses a non-reentrant model
 18096 ;;
 18097                           
 18098                           
 18099                           ;psect for function _eusart_init
 18100  17A5                     _eusart_init:	
 18101                           
 18102                           ;drv_eusart.c: 14: PIE1bits.RCIE = 0;
 18103                           
 18104                           ;incstack = 0
 18105                           ; Regs used in _eusart_init: [wreg+status,2]
 18106  17A5  0021               	movlb	1	; select bank1
 18107  17A6  1291               	bcf	17,5	;volatile
 18108                           
 18109                           ;drv_eusart.c: 15: PIE1bits.TXIE = 0;
 18110  17A7  1211               	bcf	17,4	;volatile
 18111                           
 18112                           ;drv_eusart.c: 17: BAUD1CON = 0x08;
 18113  17A8  3008               	movlw	8
 18114  17A9  0023               	movlb	3	; select bank3
 18115  17AA  009F               	movwf	31	;volatile
 18116                           
 18117                           ;drv_eusart.c: 18: RC1STA = 0x90;
 18118  17AB  3090               	movlw	144
 18119  17AC  009D               	movwf	29	;volatile
 18120                           
 18121                           ;drv_eusart.c: 19: TX1STA = 0x24;
 18122  17AD  3024               	movlw	36
 18123  17AE  009E               	movwf	30	;volatile
 18124                           
 18125                           ;drv_eusart.c: 20: SP1BRGL = 0xA0;
 18126  17AF  30A0               	movlw	160
 18127  17B0  009B               	movwf	27	;volatile
 18128                           
 18129                           ;drv_eusart.c: 21: SP1BRGH = 0x01;
 18130  17B1  3001               	movlw	1
 18131  17B2  009C               	movwf	28	;volatile
 18132                           
 18133                           ;drv_eusart.c: 24: tx_tail = 0;
 18134  17B3  0020               	movlb	0	; select bank0
 18135  17B4  01D3               	clrf	_tx_tail
 18136                           
 18137                           ;drv_eusart.c: 25: tx_head = 0;
 18138  17B5  0021               	movlb	1	; select bank1
 18139  17B6  3040               	movlw	64
 18140  17B7  01CF               	clrf	_tx_head^(0+128)
 18141                           
 18142                           ;drv_eusart.c: 26: tx_remain = sizeof(tx_buf);
 18143  17B8  0022               	movlb	2	; select bank2
 18144  17B9  00E0               	movwf	_tx_remain^(0+256)
 18145                           
 18146                           ;drv_eusart.c: 27: eusart_rcv_cb = cb;
 18147  17BA  0020               	movlb	0	; select bank0
 18148  17BB  0835               	movf	eusart_init@cb+1,w
 18149  17BC  0022               	movlb	2	; select bank2
 18150  17BD  00DD               	movwf	(_eusart_rcv_cb+1)^(0+256)
 18151  17BE  0020               	movlb	0	; select bank0
 18152  17BF  0834               	movf	eusart_init@cb,w
 18153  17C0  0022               	movlb	2	; select bank2
 18154  17C1  00DC               	movwf	_eusart_rcv_cb^(0+256)
 18155  17C2  0008               	return
 18156  17C3                     __end_of_eusart_init:	
 18157  17C3                     __ptext72:	
 18158 ;; *************** function _ble_transmit_stop *****************
 18159 ;; Defined at:
 18160 ;;		line 128 in file "src/app_ble.c"
 18161 ;; Parameters:    Size  Location     Type
 18162 ;;		None
 18163 ;; Auto vars:     Size  Location     Type
 18164 ;;		None
 18165 ;; Return value:  Size  Location     Type
 18166 ;;                  1    wreg      void 
 18167 ;; Registers used:
 18168 ;;		wreg
 18169 ;; Tracked objects:
 18170 ;;		On entry : 1F/0
 18171 ;;		On exit  : 1F/2
 18172 ;;		Unchanged: 0/0
 18173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18178 ;;Total ram usage:        0 bytes
 18179 ;; Hardware stack levels used:    1
 18180 ;; Hardware stack levels required when called:    6
 18181 ;; This function calls:
 18182 ;;		Nothing
 18183 ;; This function is called by:
 18184 ;;		_ble_send_data
 18185 ;;		_ble_ota_ack
 18186 ;; This function uses a non-reentrant model
 18187 ;;
 18188                           
 18189                           
 18190                           ;psect for function _ble_transmit_stop
 18191  17C3                     _ble_transmit_stop:	
 18192  17C3                     l418:	
 18193                           ;app_ble.c: 130: while(!TXSTAbits.TRMT);
 18194                           
 18195                           ;incstack = 0
 18196                           ; Regs used in _ble_transmit_stop: [wreg]
 18197                           
 18198  17C3  0023               	movlb	3	; select bank3
 18199  17C4  1C9E               	btfss	30,1	;volatile
 18200  17C5  2FC3               	goto	l418
 18201                           
 18202                           ;app_ble.c: 131: _delay((unsigned long)((200)*(16000000/4000000.0)));
 18203  17C6  30A0               	movlw	160
 18204  17C7                     u7677:	
 18205  17C7  3200               	nop2
 18206  17C8  0B89               	decfsz	9,f
 18207  17C9  2FC7               	goto	u7677
 18208                           
 18209                           ;app_ble.c: 132: LATCbits.LATC1 = 1;
 18210  17CA  0022               	movlb	2	; select bank2
 18211  17CB  148E               	bsf	14,1	;volatile
 18212  17CC  0008               	return
 18213  17CD                     __end_of_ble_transmit_stop:	
 18214  17CD                     __ptext29:	
 18215 ;; *************** function _ble_receive_stop *****************
 18216 ;; Defined at:
 18217 ;;		line 161 in file "src/app_ble.c"
 18218 ;; Parameters:    Size  Location     Type
 18219 ;;		None
 18220 ;; Auto vars:     Size  Location     Type
 18221 ;;		None
 18222 ;; Return value:  Size  Location     Type
 18223 ;;                  1    wreg      void 
 18224 ;; Registers used:
 18225 ;;		wreg
 18226 ;; Tracked objects:
 18227 ;;		On entry : 1D/0
 18228 ;;		On exit  : 1F/2
 18229 ;;		Unchanged: 0/0
 18230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18235 ;;Total ram usage:        0 bytes
 18236 ;; Hardware stack levels used:    1
 18237 ;; Hardware stack levels required when called:    6
 18238 ;; This function calls:
 18239 ;;		Nothing
 18240 ;; This function is called by:
 18241 ;;		_ble_process
 18242 ;; This function uses a non-reentrant model
 18243 ;;
 18244                           
 18245                           
 18246                           ;psect for function _ble_receive_stop
 18247  17CD                     _ble_receive_stop:	
 18248                           
 18249                           ;app_ble.c: 163: _delay((unsigned long)((100)*(16000000/4000000.0)));
 18250                           
 18251                           ;incstack = 0
 18252                           ; Regs used in _ble_receive_stop: [wreg]
 18253  17CD  3085               	movlw	133
 18254  17CE                     u7647:	
 18255  17CE  0B89               	decfsz	9,f
 18256  17CF  2FCE               	goto	u7647
 18257  17D0  0000               	nop
 18258                           
 18259                           ;app_ble.c: 164: LATCbits.LATC1 = 1;
 18260  17D1  0022               	movlb	2	; select bank2
 18261  17D2  148E               	bsf	14,1	;volatile
 18262  17D3  0008               	return
 18263  17D4                     __end_of_ble_receive_stop:	
 18264  17D4                     PL22:	
 18265  17D4  083F               	movf	ble_send_data@i,w
 18266  17D5  00B7               	movwf	??_ble_send_data
 18267  17D6  01B8               	clrf	??_ble_send_data+1
 18268  17D7  073D               	addwf	ble_send_data@p,w
 18269  17D8  00B9               	movwf	??_ble_send_data+2
 18270  17D9  0838               	movf	??_ble_send_data+1,w
 18271  17DA  3D3E               	addwfc	ble_send_data@p+1,w
 18272  17DB  00BA               	movwf	??_ble_send_data+3
 18273  17DC  0839               	movf	??_ble_send_data+2,w
 18274  17DD  0008               	return
 18275  17DE                     __end_ofPL22:	
 18276  17DE                     PL110:	
 18277  17DE  3E2E               	addlw	46
 18278  17DF  00B7               	movwf	??_ble_send_data
 18279  17E0  3000               	movlw	0
 18280  17E1  3D3E               	addwfc	ble_send_data@p+1,w
 18281  17E2  00B8               	movwf	??_ble_send_data+1
 18282  17E3  0837               	movf	??_ble_send_data,w
 18283  17E4  0086               	movwf	6
 18284  17E5  0838               	movf	??_ble_send_data+1,w
 18285  17E6  0087               	movwf	7
 18286  17E7  0008               	return
 18287  17E8                     __end_ofPL110:	
 18288  17E8                     PL114:	
 18289  17E8  083D               	movf	ble_send_data@p,w
 18290  17E9  0086               	movwf	6
 18291  17EA  083E               	movf	ble_send_data@p+1,w
 18292  17EB  0087               	movwf	7
 18293  17EC  0801               	movf	1,w
 18294  17ED  3903               	andlw	3
 18295  17EE  0008               	return
 18296  17EF                     __end_ofPL114:	
 18297  17EF                     PL140:	
 18298  17EF  3E2E               	addlw	46
 18299  17F0  0086               	movwf	6
 18300  17F1  3000               	movlw	0
 18301  17F2  3D3E               	addwfc	ble_send_data@p+1,w
 18302  17F3  0087               	movwf	7
 18303  17F4  0008               	return
 18304  17F5                     __end_ofPL140:	
 18305  17F5                     PL142:	
 18306  17F5  0086               	movwf	6
 18307  17F6  3000               	movlw	0
 18308  17F7  3D3A               	addwfc	??_ble_send_data+3,w
 18309  17F8  0087               	movwf	7
 18310  17F9  0801               	movf	1,w
 18311  17FA  0008               	return
 18312  17FB                     __end_ofPL142:	
 18313  17FB                     PL194:	
 18314  17FB  06BB               	xorwf	ble_send_data@xor,f
 18315  17FC  3006               	movlw	6
 18316  17FD  0ABF               	incf	ble_send_data@i,f
 18317  17FE  023F               	subwf	ble_send_data@i,w
 18318  17FF  0008               	return
 18319  1800                     __end_ofPL194:	
 18320                           
 18321                           	psect	intentry
 18322  0404                     __pintentry:	
 18323 ;; *************** function _app_isr *****************
 18324 ;; Defined at:
 18325 ;;		line 129 in file "src/app_main.c"
 18326 ;; Parameters:    Size  Location     Type
 18327 ;;		None
 18328 ;; Auto vars:     Size  Location     Type
 18329 ;;		None
 18330 ;; Return value:  Size  Location     Type
 18331 ;;                  1    wreg      void 
 18332 ;; Registers used:
 18333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18334 ;; Tracked objects:
 18335 ;;		On entry : 0/0
 18336 ;;		On exit  : 0/0
 18337 ;;		Unchanged: 0/0
 18338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18343 ;;Total ram usage:        0 bytes
 18344 ;; Hardware stack levels used:    1
 18345 ;; Hardware stack levels required when called:    5
 18346 ;; This function calls:
 18347 ;;		_eusart_receive_isr
 18348 ;;		_eusart_transmit_isr
 18349 ;;		_tmr0_isr
 18350 ;;		_tmr2_isr
 18351 ;; This function is called by:
 18352 ;;		Interrupt level 1
 18353 ;; This function uses a non-reentrant model
 18354 ;;
 18355                           
 18356  0404                     _app_isr:	
 18357                           
 18358                           ;incstack = 0
 18359  0404  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 18360                           
 18361                           ; Regs used in _app_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18362  0405  3184               	pagesel	$
 18363                           
 18364                           ;app_main.c: 131: if(PIE1bits.RCIE && PIR1bits.RCIF)
 18365  0406  0021               	movlb	1	; select bank1
 18366  0407  1E91               	btfss	17,5	;volatile
 18367  0408  2C10               	goto	i1l1264
 18368  0409  0020               	movlb	0	; select bank0
 18369  040A  1E91               	btfss	17,5	;volatile
 18370  040B  2C10               	goto	i1l1264
 18371                           
 18372                           ;app_main.c: 132: {
 18373                           ;app_main.c: 133: eusart_receive_isr();
 18374  040C  3199  212C  3184   	fcall	_eusart_receive_isr
 18375                           
 18376                           ;app_main.c: 134: }
 18377  040F  2C2C               	goto	i1l1271
 18378  0410                     i1l1264:	
 18379                           
 18380                           ;app_main.c: 135: else if(PIE0bits.TMR0IE && PIR0bits.TMR0IF)
 18381  0410  0021               	movlb	1	; select bank1
 18382  0411  1E90               	btfss	16,5	;volatile
 18383  0412  2C1A               	goto	i1l1266
 18384  0413  0020               	movlb	0	; select bank0
 18385  0414  1E90               	btfss	16,5	;volatile
 18386  0415  2C1A               	goto	i1l1266
 18387                           
 18388                           ;app_main.c: 136: {
 18389                           ;app_main.c: 137: tmr0_isr();
 18390  0416  3199  21A9  3184   	fcall	_tmr0_isr
 18391                           
 18392                           ;app_main.c: 138: }
 18393  0419  2C2C               	goto	i1l1271
 18394  041A                     i1l1266:	
 18395                           
 18396                           ;app_main.c: 139: else if(PIE1bits.TMR2IE && PIR1bits.TMR2IF)
 18397  041A  0021               	movlb	1	; select bank1
 18398  041B  1C91               	btfss	17,1	;volatile
 18399  041C  2C24               	goto	i1l1268
 18400  041D  0020               	movlb	0	; select bank0
 18401  041E  1C91               	btfss	17,1	;volatile
 18402  041F  2C24               	goto	i1l1268
 18403                           
 18404                           ;app_main.c: 140: {
 18405                           ;app_main.c: 141: tmr2_isr();
 18406  0420  3199  219D  3184   	fcall	_tmr2_isr
 18407                           
 18408                           ;app_main.c: 142: }
 18409  0423  2C2C               	goto	i1l1271
 18410  0424                     i1l1268:	
 18411                           
 18412                           ;app_main.c: 143: else if(PIE1bits.TXIE && PIR1bits.TXIF)
 18413  0424  0021               	movlb	1	; select bank1
 18414  0425  1E11               	btfss	17,4	;volatile
 18415  0426  2C2C               	goto	i1l1271
 18416  0427  0020               	movlb	0	; select bank0
 18417  0428  1E11               	btfss	17,4	;volatile
 18418  0429  2C2C               	goto	i1l1271
 18419                           
 18420                           ;app_main.c: 144: {
 18421                           ;app_main.c: 145: eusart_transmit_isr();
 18422  042A  319B  2314         	fcall	_eusart_transmit_isr
 18423  042C                     i1l1271:	
 18424  042C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 18425  042D  0009               	retfie
 18426  042E                     __end_of_app_isr:	
 18427                           
 18428                           	psect	text92
 18429  199D                     __ptext92:	
 18430 ;; *************** function _tmr2_isr *****************
 18431 ;; Defined at:
 18432 ;;		line 58 in file "src/drv_tmr.c"
 18433 ;; Parameters:    Size  Location     Type
 18434 ;;		None
 18435 ;; Auto vars:     Size  Location     Type
 18436 ;;		None
 18437 ;; Return value:  Size  Location     Type
 18438 ;;                  1    wreg      void 
 18439 ;; Registers used:
 18440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18441 ;; Tracked objects:
 18442 ;;		On entry : 1F/0
 18443 ;;		On exit  : 0/0
 18444 ;;		Unchanged: 0/0
 18445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18450 ;;Total ram usage:        0 bytes
 18451 ;; Hardware stack levels used:    1
 18452 ;; Hardware stack levels required when called:    4
 18453 ;; This function calls:
 18454 ;;		Absolute function
 18455 ;;		_tmr2_isr_callback
 18456 ;; This function is called by:
 18457 ;;		_app_isr
 18458 ;; This function uses a non-reentrant model
 18459 ;;
 18460                           
 18461                           
 18462                           ;psect for function _tmr2_isr
 18463  199D                     _tmr2_isr:	
 18464                           
 18465                           ;drv_tmr.c: 60: PIR1bits.TMR2IF = 0;
 18466                           
 18467                           ;incstack = 0
 18468                           ; Regs used in _tmr2_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18469  199D  1091               	bcf	17,1	;volatile
 18470                           
 18471                           ;drv_tmr.c: 61: if(tmr2_isr_cb != (0))
 18472  199E  0022               	movlb	2	; select bank2
 18473  199F  085E               	movf	_tmr2_isr_cb^(0+256),w
 18474  19A0  045F               	iorwf	(_tmr2_isr_cb+1)^(0+256),w
 18475  19A1  1903               	btfsc	3,2
 18476  19A2  0008               	return
 18477                           
 18478                           ;drv_tmr.c: 62: {
 18479                           ;drv_tmr.c: 63: tmr2_isr_cb();
 18480  19A3  085F               	movf	(_tmr2_isr_cb+1)^(0+256),w
 18481  19A4  008A               	movwf	10
 18482  19A5  085E               	movf	_tmr2_isr_cb^(0+256),w
 18483  19A6  000A               	callw
 18484  19A7  3199               	pagesel	$
 18485  19A8  0008               	return
 18486  19A9                     __end_of_tmr2_isr:	
 18487                           
 18488                           	psect	swtext2
 18489  1900                     __pswtext2:	
 18490  1900                     i1S8364:	
 18491  1900  3188  28B0         	ljmp	i1l5318
 18492  1902  3188  28BB         	ljmp	i1l5326
 18493  1904  3188  28C4         	ljmp	i1l5334
 18494  1906  3188  28CD         	ljmp	i1l5342
 18495  1908  3188  28D6         	ljmp	i1l963
 18496  190A  3188  28D6         	ljmp	i1l5350
 18497  190C  3188  28D6         	ljmp	i1l5350
 18498  190E  3188  28D6         	ljmp	i1l5350
 18499  1910  3188  28D6         	ljmp	i1l5350
 18500  1912  3188  28D6         	ljmp	i1l5350
 18501  1914  3188  28D6         	ljmp	i1l5350
 18502                           
 18503                           	psect	text97
 18504  1B2E                     __ptext97:	
 18505 ;; *************** function i1___lmul *****************
 18506 ;; Defined at:
 18507 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul32.c"
 18508 ;; Parameters:    Size  Location     Type
 18509 ;;  multiplier      4    0[COMMON] unsigned long 
 18510 ;;  multiplicand    4    4[COMMON] unsigned long 
 18511 ;; Auto vars:     Size  Location     Type
 18512 ;;  __lmul          4    8[COMMON] unsigned long 
 18513 ;; Return value:  Size  Location     Type
 18514 ;;                  4    0[COMMON] unsigned long 
 18515 ;; Registers used:
 18516 ;;		wreg, status,2, status,0
 18517 ;; Tracked objects:
 18518 ;;		On entry : 1F/1
 18519 ;;		On exit  : 1F/1
 18520 ;;		Unchanged: 1F/0
 18521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18522 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18523 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18525 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18526 ;;Total ram usage:       12 bytes
 18527 ;; Hardware stack levels used:    1
 18528 ;; This function calls:
 18529 ;;		Nothing
 18530 ;; This function is called by:
 18531 ;;		_led_dynamic_process
 18532 ;; This function uses a non-reentrant model
 18533 ;;
 18534                           
 18535                           
 18536                           ;psect for function i1___lmul
 18537  1B2E                     i1___lmul:	
 18538                           
 18539                           ;incstack = 0
 18540                           ; Regs used in i1___lmul: [wreg+status,2+status,0]
 18541  1B2E  01F8               	clrf	i1___lmul@product
 18542  1B2F  01F9               	clrf	i1___lmul@product+1
 18543  1B30  01FA               	clrf	i1___lmul@product+2
 18544  1B31  01FB               	clrf	i1___lmul@product+3
 18545  1B32                     i1l1373:	
 18546  1B32  1C70               	btfss	i1___lmul@multiplier,0
 18547  1B33  2B3C               	goto	i1l5100
 18548  1B34  0874               	movf	i1___lmul@multiplicand,w
 18549  1B35  07F8               	addwf	i1___lmul@product,f
 18550  1B36  0875               	movf	i1___lmul@multiplicand+1,w
 18551  1B37  3DF9               	addwfc	i1___lmul@product+1,f
 18552  1B38  0876               	movf	i1___lmul@multiplicand+2,w
 18553  1B39  3DFA               	addwfc	i1___lmul@product+2,f
 18554  1B3A  0877               	movf	i1___lmul@multiplicand+3,w
 18555  1B3B  3DFB               	addwfc	i1___lmul@product+3,f
 18556  1B3C                     i1l5100:	
 18557  1B3C  35F4               	lslf	i1___lmul@multiplicand,f
 18558  1B3D  0DF5               	rlf	i1___lmul@multiplicand+1,f
 18559  1B3E  0DF6               	rlf	i1___lmul@multiplicand+2,f
 18560  1B3F  0DF7               	rlf	i1___lmul@multiplicand+3,f
 18561  1B40  36F3               	lsrf	i1___lmul@multiplier+3,f
 18562  1B41  0CF2               	rrf	i1___lmul@multiplier+2,f
 18563  1B42  0CF1               	rrf	i1___lmul@multiplier+1,f
 18564  1B43  0CF0               	rrf	i1___lmul@multiplier,f
 18565  1B44  0873               	movf	i1___lmul@multiplier+3,w
 18566  1B45  0472               	iorwf	i1___lmul@multiplier+2,w
 18567  1B46  0471               	iorwf	i1___lmul@multiplier+1,w
 18568  1B47  0470               	iorwf	i1___lmul@multiplier,w
 18569  1B48  1D03               	skipz
 18570  1B49  2B32               	goto	i1l1373
 18571  1B4A  087B               	movf	i1___lmul@product+3,w
 18572  1B4B  00F3               	movwf	?i1___lmul+3
 18573  1B4C  087A               	movf	i1___lmul@product+2,w
 18574  1B4D  00F2               	movwf	?i1___lmul+2
 18575  1B4E  0879               	movf	i1___lmul@product+1,w
 18576  1B4F  00F1               	movwf	?i1___lmul+1
 18577  1B50  0878               	movf	i1___lmul@product,w
 18578  1B51  00F0               	movwf	?i1___lmul
 18579  1B52  0008               	return
 18580  1B53                     __end_ofi1___lmul:	
 18581                           
 18582                           	psect	text98
 18583  1003                     __ptext98:	
 18584 ;; *************** function i1___lldiv *****************
 18585 ;; Defined at:
 18586 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lldiv.c"
 18587 ;; Parameters:    Size  Location     Type
 18588 ;;  divisor         4    0[BANK0 ] unsigned long 
 18589 ;;  dividend        4    4[BANK0 ] unsigned long 
 18590 ;; Auto vars:     Size  Location     Type
 18591 ;;  __lldiv         4    8[BANK0 ] unsigned long 
 18592 ;;  __lldiv         1   12[BANK0 ] unsigned char 
 18593 ;; Return value:  Size  Location     Type
 18594 ;;                  4    0[BANK0 ] unsigned long 
 18595 ;; Registers used:
 18596 ;;		wreg, status,2, status,0
 18597 ;; Tracked objects:
 18598 ;;		On entry : 1F/0
 18599 ;;		On exit  : 1F/0
 18600 ;;		Unchanged: 0/0
 18601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18602 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18603 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18605 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18606 ;;Total ram usage:       13 bytes
 18607 ;; Hardware stack levels used:    1
 18608 ;; This function calls:
 18609 ;;		Nothing
 18610 ;; This function is called by:
 18611 ;;		_led_dynamic_process
 18612 ;; This function uses a non-reentrant model
 18613 ;;
 18614                           
 18615                           
 18616                           ;psect for function i1___lldiv
 18617  1003                     i1___lldiv:	
 18618                           
 18619                           ;incstack = 0
 18620                           ; Regs used in i1___lldiv: [wreg+status,2+status,0]
 18621  1003  01A8               	clrf	i1___lldiv@quotient
 18622  1004  01A9               	clrf	i1___lldiv@quotient+1
 18623  1005  01AA               	clrf	i1___lldiv@quotient+2
 18624  1006  01AB               	clrf	i1___lldiv@quotient+3
 18625  1007  0823               	movf	i1___lldiv@divisor+3,w
 18626  1008  0422               	iorwf	i1___lldiv@divisor+2,w
 18627  1009  0421               	iorwf	i1___lldiv@divisor+1,w
 18628  100A  0420               	iorwf	i1___lldiv@divisor,w
 18629  100B  1903               	skipnz
 18630  100C  2839               	goto	i1l5130
 18631  100D  01AC               	clrf	i1___lldiv@counter
 18632  100E                     L24:	
 18633  100E  0AAC               	incf	i1___lldiv@counter,f
 18634  100F  1BA3               	btfsc	i1___lldiv@divisor+3,7
 18635  1010  2816               	goto	i1l5118
 18636  1011  35A0               	lslf	i1___lldiv@divisor,f
 18637  1012  0DA1               	rlf	i1___lldiv@divisor+1,f
 18638  1013  0DA2               	rlf	i1___lldiv@divisor+2,f
 18639  1014  0DA3               	rlf	i1___lldiv@divisor+3,f
 18640  1015  280E               	goto	L24
 18641  1016                     i1l5118:	
 18642  1016  35A8               	lslf	i1___lldiv@quotient,f
 18643  1017  0DA9               	rlf	i1___lldiv@quotient+1,f
 18644  1018  0DAA               	rlf	i1___lldiv@quotient+2,f
 18645  1019  0DAB               	rlf	i1___lldiv@quotient+3,f
 18646  101A  0823               	movf	i1___lldiv@divisor+3,w
 18647  101B  0227               	subwf	i1___lldiv@dividend+3,w
 18648  101C  1D03               	skipz
 18649  101D  2828               	goto	u314_25
 18650  101E  0822               	movf	i1___lldiv@divisor+2,w
 18651  101F  0226               	subwf	i1___lldiv@dividend+2,w
 18652  1020  1D03               	skipz
 18653  1021  2828               	goto	u314_25
 18654  1022  0821               	movf	i1___lldiv@divisor+1,w
 18655  1023  0225               	subwf	i1___lldiv@dividend+1,w
 18656  1024  1D03               	skipz
 18657  1025  2828               	goto	u314_25
 18658  1026  0820               	movf	i1___lldiv@divisor,w
 18659  1027  0224               	subwf	i1___lldiv@dividend,w
 18660  1028                     u314_25:	
 18661  1028  1C03               	skipc
 18662  1029  2833               	goto	i1l5126
 18663  102A  0820               	movf	i1___lldiv@divisor,w
 18664  102B  02A4               	subwf	i1___lldiv@dividend,f
 18665  102C  0821               	movf	i1___lldiv@divisor+1,w
 18666  102D  3BA5               	subwfb	i1___lldiv@dividend+1,f
 18667  102E  0822               	movf	i1___lldiv@divisor+2,w
 18668  102F  3BA6               	subwfb	i1___lldiv@dividend+2,f
 18669  1030  0823               	movf	i1___lldiv@divisor+3,w
 18670  1031  3BA7               	subwfb	i1___lldiv@dividend+3,f
 18671  1032  1428               	bsf	i1___lldiv@quotient,0
 18672  1033                     i1l5126:	
 18673  1033  36A3               	lsrf	i1___lldiv@divisor+3,f
 18674  1034  0CA2               	rrf	i1___lldiv@divisor+2,f
 18675  1035  0CA1               	rrf	i1___lldiv@divisor+1,f
 18676  1036  0CA0               	rrf	i1___lldiv@divisor,f
 18677  1037  0BAC               	decfsz	i1___lldiv@counter,f
 18678  1038  2816               	goto	i1l5118
 18679  1039                     i1l5130:	
 18680  1039  082B               	movf	i1___lldiv@quotient+3,w
 18681  103A  00A3               	movwf	?i1___lldiv+3
 18682  103B  082A               	movf	i1___lldiv@quotient+2,w
 18683  103C  00A2               	movwf	?i1___lldiv+2
 18684  103D  0829               	movf	i1___lldiv@quotient+1,w
 18685  103E  00A1               	movwf	?i1___lldiv+1
 18686  103F  0828               	movf	i1___lldiv@quotient,w
 18687  1040  00A0               	movwf	?i1___lldiv
 18688  1041  0008               	return
 18689  1042                     __end_ofi1___lldiv:	
 18690                           
 18691                           	psect	text99
 18692  19D9                     __ptext99:	
 18693 ;; *************** function _pwm3_load_duty *****************
 18694 ;; Defined at:
 18695 ;;		line 62 in file "src/drv_pwm.c"
 18696 ;; Parameters:    Size  Location     Type
 18697 ;;  value           2    0[COMMON] unsigned int 
 18698 ;; Auto vars:     Size  Location     Type
 18699 ;;		None
 18700 ;; Return value:  Size  Location     Type
 18701 ;;                  1    wreg      void 
 18702 ;; Registers used:
 18703 ;;		wreg
 18704 ;; Tracked objects:
 18705 ;;		On entry : 18/1
 18706 ;;		On exit  : 1F/6
 18707 ;;		Unchanged: 0/0
 18708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18713 ;;Total ram usage:        2 bytes
 18714 ;; Hardware stack levels used:    1
 18715 ;; This function calls:
 18716 ;;		Nothing
 18717 ;; This function is called by:
 18718 ;;		_led_ramp
 18719 ;;		_led_dynamic_process
 18720 ;; This function uses a non-reentrant model
 18721 ;;
 18722                           
 18723                           
 18724                           ;psect for function _pwm3_load_duty
 18725  19D9                     _pwm3_load_duty:	
 18726                           
 18727                           ;drv_pwm.c: 65: CCPR3H = value >> 8;
 18728                           
 18729                           ;incstack = 0
 18730                           ; Regs used in _pwm3_load_duty: [wreg]
 18731  19D9  0871               	movf	pwm3_load_duty@value+1,w
 18732  19DA  0026               	movlb	6	; select bank6
 18733  19DB  0092               	movwf	18	;volatile
 18734                           
 18735                           ;drv_pwm.c: 66: CCPR3L = value;
 18736  19DC  0870               	movf	pwm3_load_duty@value,w
 18737  19DD  0091               	movwf	17	;volatile
 18738  19DE  0008               	return
 18739  19DF                     __end_of_pwm3_load_duty:	
 18740                           
 18741                           	psect	text100
 18742  19DF                     __ptext100:	
 18743 ;; *************** function _pwm2_load_duty *****************
 18744 ;; Defined at:
 18745 ;;		line 40 in file "src/drv_pwm.c"
 18746 ;; Parameters:    Size  Location     Type
 18747 ;;  value           2    0[COMMON] unsigned int 
 18748 ;; Auto vars:     Size  Location     Type
 18749 ;;		None
 18750 ;; Return value:  Size  Location     Type
 18751 ;;                  1    wreg      void 
 18752 ;; Registers used:
 18753 ;;		wreg
 18754 ;; Tracked objects:
 18755 ;;		On entry : 18/1
 18756 ;;		On exit  : 1F/5
 18757 ;;		Unchanged: 0/0
 18758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18763 ;;Total ram usage:        2 bytes
 18764 ;; Hardware stack levels used:    1
 18765 ;; This function calls:
 18766 ;;		Nothing
 18767 ;; This function is called by:
 18768 ;;		_led_ramp
 18769 ;;		_led_dynamic_process
 18770 ;; This function uses a non-reentrant model
 18771 ;;
 18772                           
 18773                           
 18774                           ;psect for function _pwm2_load_duty
 18775  19DF                     _pwm2_load_duty:	
 18776                           
 18777                           ;drv_pwm.c: 43: CCPR2H = value >> 8;
 18778                           
 18779                           ;incstack = 0
 18780                           ; Regs used in _pwm2_load_duty: [wreg]
 18781  19DF  0871               	movf	pwm2_load_duty@value+1,w
 18782  19E0  0025               	movlb	5	; select bank5
 18783  19E1  0096               	movwf	22	;volatile
 18784                           
 18785                           ;drv_pwm.c: 44: CCPR2L = value;
 18786  19E2  0870               	movf	pwm2_load_duty@value,w
 18787  19E3  0095               	movwf	21	;volatile
 18788  19E4  0008               	return
 18789  19E5                     __end_of_pwm2_load_duty:	
 18790                           
 18791                           	psect	text101
 18792  19E5                     __ptext101:	
 18793 ;; *************** function _pwm1_load_duty *****************
 18794 ;; Defined at:
 18795 ;;		line 18 in file "src/drv_pwm.c"
 18796 ;; Parameters:    Size  Location     Type
 18797 ;;  value           2    0[COMMON] unsigned int 
 18798 ;; Auto vars:     Size  Location     Type
 18799 ;;		None
 18800 ;; Return value:  Size  Location     Type
 18801 ;;                  1    wreg      void 
 18802 ;; Registers used:
 18803 ;;		wreg
 18804 ;; Tracked objects:
 18805 ;;		On entry : 18/1
 18806 ;;		On exit  : 1F/5
 18807 ;;		Unchanged: 0/0
 18808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18812 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18813 ;;Total ram usage:        2 bytes
 18814 ;; Hardware stack levels used:    1
 18815 ;; This function calls:
 18816 ;;		Nothing
 18817 ;; This function is called by:
 18818 ;;		_led_ramp
 18819 ;;		_led_dynamic_process
 18820 ;; This function uses a non-reentrant model
 18821 ;;
 18822                           
 18823                           
 18824                           ;psect for function _pwm1_load_duty
 18825  19E5                     _pwm1_load_duty:	
 18826                           
 18827                           ;drv_pwm.c: 21: CCPR1H = value>>8;
 18828                           
 18829                           ;incstack = 0
 18830                           ; Regs used in _pwm1_load_duty: [wreg]
 18831  19E5  0871               	movf	pwm1_load_duty@value+1,w
 18832  19E6  0025               	movlb	5	; select bank5
 18833  19E7  0092               	movwf	18	;volatile
 18834                           
 18835                           ;drv_pwm.c: 22: CCPR1L = value;
 18836  19E8  0870               	movf	pwm1_load_duty@value,w
 18837  19E9  0091               	movwf	17	;volatile
 18838  19EA  0008               	return
 18839  19EB                     __end_of_pwm1_load_duty:	
 18840                           
 18841                           	psect	text102
 18842  19EB                     __ptext102:	
 18843 ;; *************** function _pwm4_load_duty *****************
 18844 ;; Defined at:
 18845 ;;		line 84 in file "src/drv_pwm.c"
 18846 ;; Parameters:    Size  Location     Type
 18847 ;;  value           2    0[COMMON] unsigned int 
 18848 ;; Auto vars:     Size  Location     Type
 18849 ;;		None
 18850 ;; Return value:  Size  Location     Type
 18851 ;;                  1    wreg      void 
 18852 ;; Registers used:
 18853 ;;		wreg
 18854 ;; Tracked objects:
 18855 ;;		On entry : 18/1
 18856 ;;		On exit  : 1F/6
 18857 ;;		Unchanged: 0/0
 18858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18862 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18863 ;;Total ram usage:        2 bytes
 18864 ;; Hardware stack levels used:    1
 18865 ;; This function calls:
 18866 ;;		Nothing
 18867 ;; This function is called by:
 18868 ;;		_led_ramp
 18869 ;;		_led_dynamic_process
 18870 ;; This function uses a non-reentrant model
 18871 ;;
 18872                           
 18873                           
 18874                           ;psect for function _pwm4_load_duty
 18875  19EB                     _pwm4_load_duty:	
 18876                           
 18877                           ;drv_pwm.c: 87: CCPR4H = value >> 8;
 18878                           
 18879                           ;incstack = 0
 18880                           ; Regs used in _pwm4_load_duty: [wreg]
 18881  19EB  0871               	movf	pwm4_load_duty@value+1,w
 18882  19EC  0026               	movlb	6	; select bank6
 18883  19ED  0096               	movwf	22	;volatile
 18884                           
 18885                           ;drv_pwm.c: 88: CCPR4L = value;
 18886  19EE  0870               	movf	pwm4_load_duty@value,w
 18887  19EF  0095               	movwf	21	;volatile
 18888  19F0  0008               	return
 18889  19F1                     __end_of_pwm4_load_duty:	
 18890                           
 18891                           	psect	swtext3
 18892  18DC                     __pswtext3:	
 18893  18DC                     i1S8366:	
 18894  18DC  3189  29F8         	ljmp	i1l4874
 18895  18DE  3189  29FF         	ljmp	i1l4884
 18896  18E0  3189  29F8         	ljmp	i1l4874
 18897  18E2  3189  29FF         	ljmp	i1l4884
 18898  18E4  318A  2A03         	ljmp	i1l4894
 18899  18E6  318A  2A0A         	ljmp	i1l4904
 18900  18E8  318A  2A1B         	ljmp	i1l4918
 18901  18EA  318A  2A29         	ljmp	i1l4932
 18902  18EC  318A  2A36         	ljmp	i1l4942
 18903  18EE  318A  2A41         	ljmp	i1l4944
 18904  18F0  318A  2A4C         	ljmp	i1l4964
 18905  18F2  318A  2A53         	ljmp	i1l4968
 18906  18F4  318A  2A5B         	ljmp	i1l4974
 18907  18F6  318A  2A6C         	ljmp	i1l4976
 18908  18F8  318A  2A72         	ljmp	i1l4984
 18909  18FA  318A  2A7D         	ljmp	i1l4990
 18910  18FC  318A  2A90         	ljmp	i1l5004
 18911                           
 18912                           	psect	swtext4
 18913  1800                     __pswtext4:	
 18914  1800                     i1S8368:	
 18915  1800  318A  2AB9         	ljmp	i1l828
 18916  1802  318A  2ABD         	ljmp	i1l834
 18917  1804  318A  2AC9         	ljmp	i1l839
 18918  1806  318A  2AD6         	ljmp	i1l844
 18919  1808  318A  2AE2         	ljmp	i1l849
 18920  180A  318A  2AEB         	ljmp	i1l854
 18921  180C  318A  2AF1         	ljmp	i1l859
 18922  180E  318A  2AF8         	ljmp	i1l864
 18923  1810  318A  2AFF         	ljmp	i1l869
 18924  1812  318B  2B04         	ljmp	i1l874
 18925  1814  318B  2B0E         	ljmp	i1l4808
 18926  1816  318B  2B23         	ljmp	i1l884
 18927  1818  318A  2AFF         	ljmp	i1l869
 18928  181A  318B  2B2B         	ljmp	i1l894
 18929  181C  318B  2B35         	ljmp	i1l4842
 18930  181E  318A  2AB9         	ljmp	i1l4748
 18931  1820  318A  2ABD         	ljmp	i1l4750
 18932  1822  318A  2AC9         	ljmp	i1l4756
 18933  1824  318A  2AD6         	ljmp	i1l4758
 18934  1826  318A  2AE2         	ljmp	i1l4764
 18935  1828  318A  2AEB         	ljmp	i1l4772
 18936  182A  318A  2AF1         	ljmp	i1l4780
 18937  182C  318A  2AF8         	ljmp	i1l4786
 18938  182E  318A  2AFF         	ljmp	i1l4794
 18939  1830  318B  2B04         	ljmp	i1l4798
 18940  1832  318B  2B0E         	ljmp	i1l4808
 18941  1834  318B  2B23         	ljmp	i1l4820
 18942  1836  318A  2AFF         	ljmp	i1l4794
 18943  1838  318B  2B2B         	ljmp	i1l4832
 18944  183A  318B  2B3C         	ljmp	i1l4846
 18945  183C  318A  2AB9         	ljmp	i1l4748
 18946  183E  318A  2ABD         	ljmp	i1l4750
 18947  1840  318A  2AC9         	ljmp	i1l4756
 18948  1842  318A  2AD6         	ljmp	i1l4758
 18949  1844  318A  2AE2         	ljmp	i1l4764
 18950  1846  318A  2AEB         	ljmp	i1l4772
 18951  1848  318A  2AF1         	ljmp	i1l4780
 18952  184A  318A  2AF8         	ljmp	i1l4786
 18953  184C  318A  2AFF         	ljmp	i1l4794
 18954  184E  318B  2B04         	ljmp	i1l4798
 18955  1850  318B  2B1C         	ljmp	i1l4816
 18956  1852  318B  2B23         	ljmp	i1l4820
 18957  1854  318A  2AFF         	ljmp	i1l4794
 18958  1856  318B  2B2B         	ljmp	i1l4832
 18959  1858  318B  2B35         	ljmp	i1l4842
 18960  185A  318A  2AB9         	ljmp	i1l4748
 18961  185C  318A  2ABD         	ljmp	i1l4750
 18962  185E  318A  2AC9         	ljmp	i1l4756
 18963  1860  318A  2AD6         	ljmp	i1l4758
 18964  1862  318A  2AE2         	ljmp	i1l4764
 18965  1864  318A  2AEB         	ljmp	i1l4772
 18966  1866  318A  2AF1         	ljmp	i1l4780
 18967  1868  318A  2AF8         	ljmp	i1l4786
 18968  186A  318A  2AFF         	ljmp	i1l4794
 18969  186C  318B  2B04         	ljmp	i1l4798
 18970  186E  318B  2B15         	ljmp	i1l4812
 18971  1870  318B  2B23         	ljmp	i1l4820
 18972  1872  318A  2AFF         	ljmp	i1l4794
 18973  1874  318B  2B2B         	ljmp	i1l4832
 18974  1876  318B  2B35         	ljmp	i1l4842
 18975  1878  318A  2AB9         	ljmp	i1l4748
 18976  187A  318A  2ABD         	ljmp	i1l4750
 18977  187C  318A  2AC9         	ljmp	i1l4756
 18978  187E  318A  2AD6         	ljmp	i1l4758
 18979  1880  318A  2AE2         	ljmp	i1l4764
 18980  1882  318A  2AEB         	ljmp	i1l4772
 18981  1884  318A  2AF1         	ljmp	i1l4780
 18982  1886  318A  2AF8         	ljmp	i1l4786
 18983  1888  318A  2AFF         	ljmp	i1l4794
 18984  188A  318B  2B04         	ljmp	i1l4798
 18985  188C  318B  2B15         	ljmp	i1l4812
 18986  188E  318B  2B23         	ljmp	i1l4820
 18987  1890  318A  2AFF         	ljmp	i1l4794
 18988  1892  318B  2B2B         	ljmp	i1l4832
 18989  1894  318B  2B0E         	ljmp	i1l4808
 18990                           
 18991                           	psect	swtext5
 18992  1916                     __pswtext5:	
 18993  1916                     i1S8370:	
 18994  1916  3189  29B0         	ljmp	i1l4678
 18995  1918  3189  29B4         	ljmp	i1l4684
 18996  191A  3189  29BA         	ljmp	i1l4690
 18997  191C  3189  29C1         	ljmp	i1l4696
 18998  191E  3189  29C9         	ljmp	i1l4698
 18999  1920  3189  29CE         	ljmp	i1l4704
 19000  1922  3189  29D2         	ljmp	i1l4708
 19001  1924  3189  29D8         	ljmp	i1l4714
 19002  1926  3189  29E0         	ljmp	i1l4716
 19003  1928  3189  29E5         	ljmp	i1l4722
 19004  192A  3189  29E7         	ljmp	i1l4728
 19005                           
 19006                           	psect	swtext6
 19007  19C0                     __pswtext6:	
 19008  19C0                     i1S8372:	
 19009  19C0  3189  296A         	ljmp	i1l5038
 19010  19C2  3189  296D         	ljmp	i1l5048
 19011  19C4  3189  297B         	ljmp	i1l5058
 19012  19C6  3189  2986         	ljmp	i1l5068
 19013  19C8  3189  2998         	ljmp	i1l5078
 19014                           
 19015                           	psect	text107
 19016  19A9                     __ptext107:	
 19017 ;; *************** function _tmr0_isr *****************
 19018 ;; Defined at:
 19019 ;;		line 29 in file "src/drv_tmr.c"
 19020 ;; Parameters:    Size  Location     Type
 19021 ;;		None
 19022 ;; Auto vars:     Size  Location     Type
 19023 ;;		None
 19024 ;; Return value:  Size  Location     Type
 19025 ;;                  1    wreg      void 
 19026 ;; Registers used:
 19027 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19028 ;; Tracked objects:
 19029 ;;		On entry : 1F/0
 19030 ;;		On exit  : 0/0
 19031 ;;		Unchanged: 0/0
 19032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19037 ;;Total ram usage:        0 bytes
 19038 ;; Hardware stack levels used:    1
 19039 ;; Hardware stack levels required when called:    3
 19040 ;; This function calls:
 19041 ;;		Absolute function
 19042 ;;		_rtc_process
 19043 ;; This function is called by:
 19044 ;;		_app_isr
 19045 ;; This function uses a non-reentrant model
 19046 ;;
 19047                           
 19048                           
 19049                           ;psect for function _tmr0_isr
 19050  19A9                     _tmr0_isr:	
 19051                           
 19052                           ;drv_tmr.c: 31: PIR0bits.TMR0IF = 0;
 19053                           
 19054                           ;incstack = 0
 19055                           ; Regs used in _tmr0_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19056  19A9  1290               	bcf	16,5	;volatile
 19057                           
 19058                           ;drv_tmr.c: 32: if(tmr0_isr_cb != (0))
 19059  19AA  0021               	movlb	1	; select bank1
 19060  19AB  0850               	movf	_tmr0_isr_cb^(0+128),w
 19061  19AC  0451               	iorwf	(_tmr0_isr_cb+1)^(0+128),w
 19062  19AD  1903               	btfsc	3,2
 19063  19AE  0008               	return
 19064                           
 19065                           ;drv_tmr.c: 33: {
 19066                           ;drv_tmr.c: 34: tmr0_isr_cb();
 19067  19AF  0851               	movf	(_tmr0_isr_cb+1)^(0+128),w
 19068  19B0  008A               	movwf	10
 19069  19B1  0850               	movf	_tmr0_isr_cb^(0+128),w
 19070  19B2  000A               	callw
 19071  19B3  3199               	pagesel	$
 19072  19B4  0008               	return
 19073  19B5                     __end_of_tmr0_isr:	
 19074                           
 19075                           	psect	text108
 19076  1C46                     __ptext108:	
 19077 ;; *************** function _rtc_process *****************
 19078 ;; Defined at:
 19079 ;;		line 52 in file "src/app_rtc.c"
 19080 ;; Parameters:    Size  Location     Type
 19081 ;;		None
 19082 ;; Auto vars:     Size  Location     Type
 19083 ;;		None
 19084 ;; Return value:  Size  Location     Type
 19085 ;;                  1    wreg      void 
 19086 ;; Registers used:
 19087 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19088 ;; Tracked objects:
 19089 ;;		On entry : 1F/1
 19090 ;;		On exit  : 1F/1
 19091 ;;		Unchanged: 0/0
 19092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19097 ;;Total ram usage:        0 bytes
 19098 ;; Hardware stack levels used:    1
 19099 ;; Hardware stack levels required when called:    2
 19100 ;; This function calls:
 19101 ;;		_rtc_is_leap_year
 19102 ;; This function is called by:
 19103 ;;		_app_init
 19104 ;;		_tmr0_isr
 19105 ;; This function uses a non-reentrant model
 19106 ;;
 19107                           
 19108                           
 19109                           ;psect for function _rtc_process
 19110  1C46                     _rtc_process:	
 19111                           
 19112                           ;app_rtc.c: 54: m_current_time.second++;
 19113                           
 19114                           ;incstack = 0
 19115                           ; Regs used in _rtc_process: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19116  1C46  0022               	movlb	2	; select bank2
 19117  1C47  303C               	movlw	60
 19118  1C48  0ADB               	incf	(_m_current_time^(0+256)+6),f
 19119                           
 19120                           ;app_rtc.c: 55: if(m_current_time.second >= 60)
 19121  1C49  025B               	subwf	(_m_current_time^(0+256)+6),w
 19122  1C4A  1C03               	skipc
 19123  1C4B  2C8C               	goto	i1l6338
 19124  1C4C  303C               	movlw	60
 19125                           
 19126                           ;app_rtc.c: 56: {
 19127                           ;app_rtc.c: 57: m_current_time.second = 0;
 19128  1C4D  01DB               	clrf	(_m_current_time^(0+256)+6)
 19129                           
 19130                           ;app_rtc.c: 58: m_current_time.minute++;
 19131  1C4E  0ADA               	incf	(_m_current_time^(0+256)+5),f
 19132                           
 19133                           ;app_rtc.c: 59: if(m_current_time.minute >= 60)
 19134  1C4F  025A               	subwf	(_m_current_time^(0+256)+5),w
 19135  1C50  1C03               	skipc
 19136  1C51  2C8C               	goto	i1l6338
 19137  1C52  3018               	movlw	24
 19138                           
 19139                           ;app_rtc.c: 60: {
 19140                           ;app_rtc.c: 61: m_current_time.minute = 0;
 19141  1C53  01DA               	clrf	(_m_current_time^(0+256)+5)
 19142                           
 19143                           ;app_rtc.c: 62: m_current_time.hour++;
 19144  1C54  0AD9               	incf	(_m_current_time^(0+256)+4),f
 19145                           
 19146                           ;app_rtc.c: 63: if(m_current_time.hour >= 24)
 19147  1C55  0259               	subwf	(_m_current_time^(0+256)+4),w
 19148  1C56  1C03               	skipc
 19149  1C57  2C8C               	goto	i1l6338
 19150  1C58  3007               	movlw	7
 19151                           
 19152                           ;app_rtc.c: 64: {
 19153                           ;app_rtc.c: 65: m_current_time.hour = 0;
 19154  1C59  01D9               	clrf	(_m_current_time^(0+256)+4)
 19155                           
 19156                           ;app_rtc.c: 66: m_current_time.day++;
 19157  1C5A  0AD7               	incf	(_m_current_time^(0+256)+2),f
 19158                           
 19159                           ;app_rtc.c: 67: m_current_time.week++;
 19160  1C5B  0AD8               	incf	(_m_current_time^(0+256)+3),f
 19161                           
 19162                           ;app_rtc.c: 68: if(m_current_time.week > 6)
 19163  1C5C  0258               	subwf	(_m_current_time^(0+256)+3),w
 19164  1C5D  1803               	btfsc	3,0
 19165                           
 19166                           ;app_rtc.c: 69: {
 19167                           ;app_rtc.c: 70: m_current_time.week = 0;
 19168  1C5E  01D8               	clrf	(_m_current_time^(0+256)+3)
 19169                           
 19170                           ;app_rtc.c: 71: }
 19171                           ;app_rtc.c: 72: if(rtc_is_leap_year(m_current_time.year + 2000))
 19172  1C5F  0855               	movf	_m_current_time^(0+256),w
 19173  1C60  00F5               	movwf	rtc_is_leap_year@year
 19174  1C61  30D0               	movlw	208
 19175  1C62  01F6               	clrf	rtc_is_leap_year@year+1
 19176  1C63  07F5               	addwf	rtc_is_leap_year@year,f
 19177  1C64  3007               	movlw	7
 19178  1C65  3DF6               	addwfc	rtc_is_leap_year@year+1,f
 19179  1C66  248F  319C         	fcall	_rtc_is_leap_year
 19180  1C68  3A00               	xorlw	0
 19181  1C69  1903               	skipnz
 19182  1C6A  2C6D               	goto	i1l6322
 19183                           
 19184                           ;app_rtc.c: 73: {
 19185                           ;app_rtc.c: 74: MONTH_DAY[1] = 29;
 19186  1C6B  301D               	movlw	29
 19187  1C6C  2C6E               	goto	L32
 19188  1C6D                     i1l6322:	
 19189                           ;app_rtc.c: 75: }
 19190                           
 19191                           
 19192                           ;app_rtc.c: 76: else
 19193                           ;app_rtc.c: 77: {
 19194                           ;app_rtc.c: 78: MONTH_DAY[1] = 28;
 19195  1C6D  301C               	movlw	28
 19196  1C6E                     L32:	
 19197  1C6E  0022               	movlb	2	; select bank2
 19198  1C6F  00B2               	movwf	(_MONTH_DAY^(0+256)+1)
 19199                           
 19200                           ;app_rtc.c: 79: }
 19201                           ;app_rtc.c: 80: if(m_current_time.month > 12 || m_current_time.month == 0)
 19202  1C70  300D               	movlw	13
 19203  1C71  0256               	subwf	(_m_current_time^(0+256)+1),w
 19204  1C72  1803               	skipnc
 19205  1C73  2C77               	goto	i1l266
 19206  1C74  0856               	movf	(_m_current_time^(0+256)+1),w
 19207  1C75  1D03               	btfss	3,2
 19208  1C76  2C79               	goto	i1l6326
 19209  1C77                     i1l266:	
 19210                           
 19211                           ;app_rtc.c: 81: {
 19212                           ;app_rtc.c: 82: m_current_time.month = 1;
 19213  1C77  01D6               	clrf	(_m_current_time^(0+256)+1)
 19214  1C78  0AD6               	incf	(_m_current_time^(0+256)+1),f
 19215  1C79                     i1l6326:	
 19216                           
 19217                           ;app_rtc.c: 83: }
 19218                           ;app_rtc.c: 84: if(m_current_time.day > MONTH_DAY[m_current_time.month - 1])
 19219  1C79  0856               	movf	(_m_current_time^(0+256)+1),w
 19220  1C7A  3E30               	addlw	(low ((_MONTH_DAY| (0+256)+255)))& (0+255)
 19221  1C7B  0086               	movwf	6
 19222  1C7C  3001               	movlw	1	; select bank2/3
 19223  1C7D  0087               	movwf	7
 19224  1C7E  0857               	movf	(_m_current_time^(0+256)+2),w
 19225  1C7F  0201               	subwf	1,w
 19226  1C80  1803               	skipnc
 19227  1C81  2C8C               	goto	i1l6338
 19228  1C82  300D               	movlw	13
 19229                           
 19230                           ;app_rtc.c: 85: {
 19231                           ;app_rtc.c: 86: m_current_time.day = 1;
 19232  1C83  01D7               	clrf	(_m_current_time^(0+256)+2)
 19233  1C84  0AD7               	incf	(_m_current_time^(0+256)+2),f
 19234                           
 19235                           ;app_rtc.c: 87: m_current_time.month++;
 19236  1C85  0AD6               	incf	(_m_current_time^(0+256)+1),f
 19237                           
 19238                           ;app_rtc.c: 88: if(m_current_time.month > 12)
 19239  1C86  0256               	subwf	(_m_current_time^(0+256)+1),w
 19240  1C87  1C03               	skipc
 19241  1C88  2C8C               	goto	i1l6338
 19242                           
 19243                           ;app_rtc.c: 89: {
 19244                           ;app_rtc.c: 90: m_current_time.month = 1;
 19245  1C89  01D6               	clrf	(_m_current_time^(0+256)+1)
 19246  1C8A  0AD6               	incf	(_m_current_time^(0+256)+1),f
 19247                           
 19248                           ;app_rtc.c: 91: m_current_time.year++;
 19249  1C8B  0AD5               	incf	_m_current_time^(0+256),f
 19250  1C8C                     i1l6338:	
 19251                           
 19252                           ;app_rtc.c: 92: }
 19253                           ;app_rtc.c: 93: }
 19254                           ;app_rtc.c: 94: }
 19255                           ;app_rtc.c: 95: }
 19256                           ;app_rtc.c: 96: }
 19257                           ;app_rtc.c: 97: rtc_status.fSec = 1;
 19258  1C8C  0021               	movlb	1	; select bank1
 19259  1C8D  144E               	bsf	_rtc_status^(0+128),0
 19260  1C8E  0008               	return
 19261  1C8F                     __end_of_rtc_process:	
 19262  1C8F                     __ptext109:	
 19263 ;; *************** function _rtc_is_leap_year *****************
 19264 ;; Defined at:
 19265 ;;		line 22 in file "src/app_rtc.c"
 19266 ;; Parameters:    Size  Location     Type
 19267 ;;  year            2    5[COMMON] unsigned int 
 19268 ;; Auto vars:     Size  Location     Type
 19269 ;;		None
 19270 ;; Return value:  Size  Location     Type
 19271 ;;                  1    wreg      unsigned char 
 19272 ;; Registers used:
 19273 ;;		wreg, status,2, status,0, pclath, cstack
 19274 ;; Tracked objects:
 19275 ;;		On entry : 1F/2
 19276 ;;		On exit  : 0/0
 19277 ;;		Unchanged: 0/0
 19278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19283 ;;Total ram usage:        2 bytes
 19284 ;; Hardware stack levels used:    1
 19285 ;; Hardware stack levels required when called:    1
 19286 ;; This function calls:
 19287 ;;		___lwmod
 19288 ;; This function is called by:
 19289 ;;		_rtc_process
 19290 ;; This function uses a non-reentrant model
 19291 ;;
 19292                           
 19293                           
 19294                           ;psect for function _rtc_is_leap_year
 19295  1C8F                     _rtc_is_leap_year:	
 19296                           
 19297                           ;app_rtc.c: 24: if((year & 0x03) == 0)
 19298                           
 19299                           ;incstack = 0
 19300                           ; Regs used in _rtc_is_leap_year: [wreg+status,2+status,0+pclath+cstack]
 19301  1C8F  0875               	movf	rtc_is_leap_year@year,w
 19302  1C90  3903               	andlw	3
 19303  1C91  1D03               	btfss	3,2
 19304  1C92  3400               	retlw	0
 19305                           
 19306                           ;app_rtc.c: 25: {
 19307                           ;app_rtc.c: 26: if(year % 100 == 0)
 19308  1C93  3064               	movlw	100
 19309  1C94  00F0               	movwf	___lwmod@divisor
 19310  1C95  01F1               	clrf	___lwmod@divisor+1
 19311  1C96  24CB  319C         	fcall	PL182	;call to abstracted procedure
 19312  1C98  24AB  319C         	fcall	___lwmod
 19313  1C9A  0870               	movf	?___lwmod,w
 19314  1C9B  0471               	iorwf	?___lwmod+1,w
 19315  1C9C  1D03               	btfss	3,2
 19316  1C9D  3401               	retlw	1
 19317                           
 19318                           ;app_rtc.c: 27: {
 19319                           ;app_rtc.c: 28: if(year % 400 == 0)
 19320  1C9E  3090               	movlw	144
 19321  1C9F  00F0               	movwf	___lwmod@divisor
 19322  1CA0  3001               	movlw	1
 19323  1CA1  00F1               	movwf	___lwmod@divisor+1
 19324  1CA2  24CB  319C         	fcall	PL182	;call to abstracted procedure
 19325  1CA4  24AB  319C         	fcall	___lwmod
 19326  1CA6  0870               	movf	?___lwmod,w
 19327  1CA7  0471               	iorwf	?___lwmod+1,w
 19328  1CA8  1903               	btfsc	3,2
 19329                           
 19330                           ;app_rtc.c: 29: {
 19331                           ;app_rtc.c: 30: return 1;
 19332  1CA9  3401               	retlw	1
 19333                           
 19334                           ;app_rtc.c: 36: }
 19335                           ;app_rtc.c: 37: }
 19336                           ;app_rtc.c: 38: return 0;
 19337  1CAA  3400               	retlw	0
 19338  1CAB                     __end_of_rtc_is_leap_year:	
 19339  1CAB                     __ptext110:	
 19340 ;; *************** function ___lwmod *****************
 19341 ;; Defined at:
 19342 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwmod.c"
 19343 ;; Parameters:    Size  Location     Type
 19344 ;;  divisor         2    0[COMMON] unsigned int 
 19345 ;;  dividend        2    2[COMMON] unsigned int 
 19346 ;; Auto vars:     Size  Location     Type
 19347 ;;  counter         1    4[COMMON] unsigned char 
 19348 ;; Return value:  Size  Location     Type
 19349 ;;                  2    0[COMMON] unsigned int 
 19350 ;; Registers used:
 19351 ;;		wreg, status,2, status,0
 19352 ;; Tracked objects:
 19353 ;;		On entry : 0/2
 19354 ;;		On exit  : 0/0
 19355 ;;		Unchanged: 0/0
 19356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19360 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19361 ;;Total ram usage:        5 bytes
 19362 ;; Hardware stack levels used:    1
 19363 ;; This function calls:
 19364 ;;		Nothing
 19365 ;; This function is called by:
 19366 ;;		_rtc_is_leap_year
 19367 ;; This function uses a non-reentrant model
 19368 ;;
 19369                           
 19370                           
 19371                           ;psect for function ___lwmod
 19372  1CAB                     ___lwmod:	
 19373                           
 19374                           ;incstack = 0
 19375                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 19376  1CAB  0870               	movf	___lwmod@divisor,w
 19377  1CAC  0471               	iorwf	___lwmod@divisor+1,w
 19378  1CAD  1903               	btfsc	3,2
 19379  1CAE  2CC6               	goto	i1l5560
 19380  1CAF  01F4               	clrf	___lwmod@counter
 19381  1CB0                     L33:	
 19382  1CB0  0AF4               	incf	___lwmod@counter,f
 19383  1CB1  1BF1               	btfsc	___lwmod@divisor+1,7
 19384  1CB2  2CB6               	goto	i1l5552
 19385  1CB3  35F0               	lslf	___lwmod@divisor,f
 19386  1CB4  0DF1               	rlf	___lwmod@divisor+1,f
 19387  1CB5  2CB0               	goto	L33
 19388  1CB6                     i1l5552:	
 19389  1CB6  0871               	movf	___lwmod@divisor+1,w
 19390  1CB7  0273               	subwf	___lwmod@dividend+1,w
 19391  1CB8  1D03               	skipz
 19392  1CB9  2CBC               	goto	u366_25
 19393  1CBA  0870               	movf	___lwmod@divisor,w
 19394  1CBB  0272               	subwf	___lwmod@dividend,w
 19395  1CBC                     u366_25:	
 19396  1CBC  1C03               	skipc
 19397  1CBD  2CC2               	goto	i1l5556
 19398  1CBE  0870               	movf	___lwmod@divisor,w
 19399  1CBF  02F2               	subwf	___lwmod@dividend,f
 19400  1CC0  0871               	movf	___lwmod@divisor+1,w
 19401  1CC1  3BF3               	subwfb	___lwmod@dividend+1,f
 19402  1CC2                     i1l5556:	
 19403  1CC2  36F1               	lsrf	___lwmod@divisor+1,f
 19404  1CC3  0CF0               	rrf	___lwmod@divisor,f
 19405  1CC4  0BF4               	decfsz	___lwmod@counter,f
 19406  1CC5  2CB6               	goto	i1l5552
 19407  1CC6                     i1l5560:	
 19408  1CC6  0873               	movf	___lwmod@dividend+1,w
 19409  1CC7  00F1               	movwf	?___lwmod+1
 19410  1CC8  0872               	movf	___lwmod@dividend,w
 19411  1CC9  00F0               	movwf	?___lwmod
 19412  1CCA  0008               	return
 19413  1CCB                     __end_of___lwmod:	
 19414  1CCB                     PL182:	
 19415  1CCB  0876               	movf	rtc_is_leap_year@year+1,w
 19416  1CCC  00F3               	movwf	___lwmod@dividend+1
 19417  1CCD  0875               	movf	rtc_is_leap_year@year,w
 19418  1CCE  00F2               	movwf	___lwmod@dividend
 19419  1CCF  0008               	return
 19420  1CD0                     __end_ofPL182:	
 19421                           
 19422                           	psect	text111
 19423  1B14                     __ptext111:	
 19424 ;; *************** function _eusart_transmit_isr *****************
 19425 ;; Defined at:
 19426 ;;		line 52 in file "src/drv_eusart.c"
 19427 ;; Parameters:    Size  Location     Type
 19428 ;;		None
 19429 ;; Auto vars:     Size  Location     Type
 19430 ;;		None
 19431 ;; Return value:  Size  Location     Type
 19432 ;;                  1    wreg      void 
 19433 ;; Registers used:
 19434 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19435 ;; Tracked objects:
 19436 ;;		On entry : 1F/0
 19437 ;;		On exit  : 1C/0
 19438 ;;		Unchanged: 0/0
 19439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19444 ;;Total ram usage:        0 bytes
 19445 ;; Hardware stack levels used:    1
 19446 ;; This function calls:
 19447 ;;		Nothing
 19448 ;; This function is called by:
 19449 ;;		_app_isr
 19450 ;; This function uses a non-reentrant model
 19451 ;;
 19452                           
 19453                           
 19454                           ;psect for function _eusart_transmit_isr
 19455  1B14                     _eusart_transmit_isr:	
 19456                           
 19457                           ;drv_eusart.c: 54: if(sizeof(tx_buf) > tx_remain)
 19458                           
 19459                           ;incstack = 0
 19460                           ; Regs used in _eusart_transmit_isr: [wreg+fsr1l+fsr1h+status,2+status,0]
 19461  1B14  3040               	movlw	64
 19462  1B15  0022               	movlb	2	; select bank2
 19463  1B16  0260               	subwf	_tx_remain^(0+256),w
 19464  1B17  1803               	skipnc
 19465  1B18  2B2B               	goto	i1l192
 19466                           
 19467                           ;drv_eusart.c: 55: {
 19468                           ;drv_eusart.c: 56: TXREG = tx_buf[tx_tail++];
 19469  1B19  0020               	movlb	0	; select bank0
 19470  1B1A  0853               	movf	_tx_tail,w
 19471  1B1B  3EA0               	addlw	(low (_tx_buf| (0+512)))& (0+255)
 19472  1B1C  0086               	movwf	6
 19473  1B1D  3002               	movlw	2	; select bank5/6
 19474  1B1E  0087               	movwf	7
 19475  1B1F  0801               	movf	1,w
 19476  1B20  0023               	movlb	3	; select bank3
 19477  1B21  009A               	movwf	26	;volatile
 19478  1B22  0020               	movlb	0	; select bank0
 19479  1B23  3040               	movlw	64
 19480  1B24  0AD3               	incf	_tx_tail,f
 19481                           
 19482                           ;drv_eusart.c: 57: if(sizeof(tx_buf) <= tx_tail)
 19483  1B25  0253               	subwf	_tx_tail,w
 19484  1B26  1803               	btfsc	3,0
 19485                           
 19486                           ;drv_eusart.c: 58: {
 19487                           ;drv_eusart.c: 59: tx_tail = 0;
 19488  1B27  01D3               	clrf	_tx_tail
 19489                           
 19490                           ;drv_eusart.c: 60: }
 19491                           ;drv_eusart.c: 61: tx_remain++;
 19492  1B28  0022               	movlb	2	; select bank2
 19493  1B29  0AE0               	incf	_tx_remain^(0+256),f
 19494                           
 19495                           ;drv_eusart.c: 62: }
 19496  1B2A  0008               	return
 19497  1B2B                     i1l192:	
 19498                           
 19499                           ;drv_eusart.c: 63: else
 19500                           ;drv_eusart.c: 64: {
 19501                           ;drv_eusart.c: 65: PIE1bits.TXIE = 0;
 19502  1B2B  0021               	movlb	1	; select bank1
 19503  1B2C  1211               	bcf	17,4	;volatile
 19504  1B2D  0008               	return
 19505  1B2E                     __end_of_eusart_transmit_isr:	
 19506                           
 19507                           	psect	text112
 19508  192C                     __ptext112:	
 19509 ;; *************** function _eusart_receive_isr *****************
 19510 ;; Defined at:
 19511 ;;		line 69 in file "src/drv_eusart.c"
 19512 ;; Parameters:    Size  Location     Type
 19513 ;;		None
 19514 ;; Auto vars:     Size  Location     Type
 19515 ;;  rcv             1    1[COMMON] unsigned char 
 19516 ;; Return value:  Size  Location     Type
 19517 ;;                  1    wreg      void 
 19518 ;; Registers used:
 19519 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19520 ;; Tracked objects:
 19521 ;;		On entry : 1F/0
 19522 ;;		On exit  : 0/0
 19523 ;;		Unchanged: 0/0
 19524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19529 ;;Total ram usage:        1 bytes
 19530 ;; Hardware stack levels used:    1
 19531 ;; Hardware stack levels required when called:    1
 19532 ;; This function calls:
 19533 ;;		Absolute function
 19534 ;;		_ble_receive
 19535 ;; This function is called by:
 19536 ;;		_app_isr
 19537 ;; This function uses a non-reentrant model
 19538 ;;
 19539                           
 19540                           
 19541                           ;psect for function _eusart_receive_isr
 19542  192C                     _eusart_receive_isr:	
 19543                           
 19544                           ;drv_eusart.c: 71: if(RC1STAbits.FERR || RC1STAbits.OERR)
 19545                           
 19546                           ;incstack = 0
 19547                           ; Regs used in _eusart_receive_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19548  192C  0023               	movlb	3	; select bank3
 19549  192D  191D               	btfsc	29,2	;volatile
 19550  192E  2931               	goto	i1l200
 19551  192F  1C9D               	btfss	29,1	;volatile
 19552  1930  2933               	goto	i1l7100
 19553  1931                     i1l200:	
 19554                           
 19555                           ;drv_eusart.c: 72: {
 19556                           ;drv_eusart.c: 73: RC1STAbits.SPEN = 0;
 19557  1931  139D               	bcf	29,7	;volatile
 19558                           
 19559                           ;drv_eusart.c: 74: RC1STAbits.SPEN = 1;
 19560  1932  179D               	bsf	29,7	;volatile
 19561  1933                     i1l7100:	
 19562                           
 19563                           ;drv_eusart.c: 75: }
 19564                           ;drv_eusart.c: 76: uint8_t rcv = RCREG;
 19565  1933  0819               	movf	25,w	;volatile
 19566  1934  00F1               	movwf	eusart_receive_isr@rcv
 19567                           
 19568                           ;drv_eusart.c: 77: if(eusart_rcv_cb != (0))
 19569  1935  0022               	movlb	2	; select bank2
 19570  1936  085C               	movf	_eusart_rcv_cb^(0+256),w
 19571  1937  045D               	iorwf	(_eusart_rcv_cb+1)^(0+256),w
 19572  1938  1903               	btfsc	3,2
 19573  1939  0008               	return
 19574                           
 19575                           ;drv_eusart.c: 78: {
 19576                           ;drv_eusart.c: 79: eusart_rcv_cb(rcv);
 19577  193A  0871               	movf	eusart_receive_isr@rcv,w
 19578  193B  00F0               	movwf	ble_receive@rcv
 19579  193C  085D               	movf	(_eusart_rcv_cb+1)^(0+256),w
 19580  193D  008A               	movwf	10
 19581  193E  085C               	movf	_eusart_rcv_cb^(0+256),w
 19582  193F  000A               	callw
 19583  1940  3199               	pagesel	$
 19584  1941  0008               	return
 19585  1942                     __end_of_eusart_receive_isr:	
 19586                           
 19587                           	psect	text113
 19588  1955                     __ptext113:	
 19589 ;; *************** function _ble_receive *****************
 19590 ;; Defined at:
 19591 ;;		line 273 in file "src/app_ble.c"
 19592 ;; Parameters:    Size  Location     Type
 19593 ;;  rcv             1    0[COMMON] unsigned char 
 19594 ;; Auto vars:     Size  Location     Type
 19595 ;;		None
 19596 ;; Return value:  Size  Location     Type
 19597 ;;                  1    wreg      void 
 19598 ;; Registers used:
 19599 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19600 ;; Tracked objects:
 19601 ;;		On entry : 1F/2
 19602 ;;		On exit  : 1F/1
 19603 ;;		Unchanged: 0/0
 19604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19605 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19609 ;;Total ram usage:        1 bytes
 19610 ;; Hardware stack levels used:    1
 19611 ;; This function calls:
 19612 ;;		Nothing
 19613 ;; This function is called by:
 19614 ;;		_app_init
 19615 ;;		_eusart_receive_isr
 19616 ;; This function uses a non-reentrant model
 19617 ;;
 19618                           
 19619                           
 19620                           ;psect for function _ble_receive
 19621  1955                     _ble_receive:	
 19622                           
 19623                           ;app_ble.c: 275: rx_buf[index++] = rcv;
 19624                           
 19625                           ;incstack = 0
 19626                           ; Regs used in _ble_receive: [wreg+fsr1l+fsr1h+status,2+status,0]
 19627  1955  087D               	movf	_index,w
 19628  1956  3E20               	addlw	(low (_rx_buf| (0+512)))& (0+255)
 19629  1957  0086               	movwf	6
 19630  1958  3002               	movlw	2	; select bank4/5
 19631  1959  0087               	movwf	7
 19632  195A  0870               	movf	ble_receive@rcv,w
 19633  195B  0081               	movwf	1
 19634  195C  0AFD               	incf	_index,f
 19635                           
 19636                           ;app_ble.c: 276: checksum ^= rcv;
 19637  195D  0870               	movf	ble_receive@rcv,w
 19638  195E  0021               	movlb	1	; select bank1
 19639  195F  06CD               	xorwf	_checksum^(0+128),f
 19640                           
 19641                           ;app_ble.c: 277: if(index >= sizeof(rx_buf))
 19642  1960  3050               	movlw	80
 19643  1961  027D               	subwf	_index,w
 19644  1962  1C03               	skipc
 19645  1963  0008               	return
 19646                           
 19647                           ;app_ble.c: 278: {
 19648                           ;app_ble.c: 279: index = 0;
 19649  1964  01FD               	clrf	_index
 19650                           
 19651                           ;app_ble.c: 280: checksum = 0;
 19652  1965  01CD               	clrf	_checksum^(0+128)
 19653  1966  0008               	return
 19654  1967                     __end_of_ble_receive:	
 19655  007E                     btemp	set	126	;btemp
 19656  007E                     int$flags	set	126
 19657  007E                     wtemp0	set	126


Data Sizes:
    Strings     79
    Constant    0
    Data        67
    BSS         195
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     40      60
    BANK1            80     34      50
    BANK2            80      0      65
    BANK3            80     52      74
    BANK4            80      0      80
    BANK5            80      0      64
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           14      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 17
		 -> ble_check_devid@dev(BANK1[17]), ble_send_cmd@ack(BANK0[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 17
		 -> ble_check_devid@dev(BANK1[17]), ble_send_cmd@ack(BANK0[8]), 

    memset@p1	PTR void  size(2) Largest target is 114
		 -> m_led_para(BIGRAM[114]), 

    memset@p	PTR unsigned char  size(2) Largest target is 114
		 -> m_led_para(BIGRAM[114]), 

    led_set_time@ptime	PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK4[80]), 

    led_set_preview@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK4[80]), 

    led_set_pro@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK4[80]), 

    led_set_cycle@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK4[80]), 

    led_set_bright@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK4[80]), 

    led_set_period_dynamic@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK4[80]), 

    led_pro_process@ep	PTR struct . size(2) Largest target is 61
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_pro_process@sp	PTR struct . size(2) Largest target is 61
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_pro_process@p2	PTR struct . size(2) Largest target is 61
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_pro_process@p1	PTR struct . size(2) Largest target is 61
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_auto_process@p	PTR struct . size(2) Largest target is 113
		 -> m_led_para.ble_para.auto_para(UNKNOWN), m_led_para.ble_para(UNKNOWN), 

    sp__memset	PTR void  size(2) Largest target is 114
		 -> m_led_para(BIGRAM[114]), 

    led_load_duty	PTR FTN(unsigned int ,)void [4] size(2) Largest target is 1
		 -> pwm4_load_duty(), pwm3_load_duty(), pwm2_load_duty(), pwm1_load_duty(), 

    dynamic_func_init	PTR FTN()void [11] size(2) Largest target is 1
		 -> led_moon3_init(), led_moon2_init(), led_moon1_init(), led_cloud4_init(), 
		 -> led_cloud3_init(), led_cloud2_init(), led_cloud1_init(), led_allcolor_init(), 
		 -> led_thunder3_init(), led_thunder2_init(), led_thunder1_init(), 

    ble_send_data@p	PTR struct . size(2) Largest target is 114
		 -> m_led_para.ble_para(UNKNOWN), m_led_para(BIGRAM[114]), 

    ble_send_cmd@cmd	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_4(CODE[15]), STR_3(CODE[11]), STR_2(CODE[34]), STR_1(CODE[19]), 

    decrease@psrc	const PTR unsigned int  size(2) Largest target is 26
		 -> m_led_para.ble_para.manual_para.mBright(UNKNOWN), m_led_para.ble_para.manual_para(UNKNOWN), 

    increase@psrc	const PTR unsigned int  size(2) Largest target is 26
		 -> m_led_para.ble_para.manual_para.mBright(UNKNOWN), m_led_para.ble_para.manual_para(UNKNOWN), 

    rtc_set@ptime	PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK4[80]), 

    key_func	PTR FTN(unsigned char ,enum E8166,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_init@cb	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> ble_receive(), 

    eusart_rcv_cb	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> ble_receive(), Absolute function(), 

    eeprom_read_buffer@pbuf	PTR unsigned char  size(2) Largest target is 114
		 -> m_led_para(BIGRAM[114]), 

    eeprom_write_buffer@pbuf	PTR unsigned char  size(2) Largest target is 114
		 -> m_led_para(BIGRAM[114]), 

    tmr2_init@cb	PTR FTN()void  size(2) Largest target is 1
		 -> tmr2_isr_callback(), 

    tmr2_isr_cb	PTR FTN()void  size(2) Largest target is 1
		 -> tmr2_isr_callback(), Absolute function(), 

    tmr0_init@cb	PTR FTN()void  size(2) Largest target is 1
		 -> rtc_process(), 

    tmr0_isr_cb	PTR FTN()void  size(2) Largest target is 1
		 -> rtc_process(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _app_isr in COMMON

    _led_ramp->_pwm1_load_duty
    _led_ramp->_pwm2_load_duty
    _led_ramp->_pwm3_load_duty
    _led_ramp->_pwm4_load_duty
    _led_dynamic_process->i1___lmul
    i1___lldiv->i1___lmul
    _rtc_process->_rtc_is_leap_year
    _rtc_is_leap_year->___lwmod
    _eusart_receive_isr->_ble_receive

Critical Paths under _main in BANK0

    _led_save_para->_eeprom_write_buffer
    _eeprom_write_buffer->_eeprom_write
    _led_period_dynamic_process->___wmul
    _led_find_device->_led_turnoff
    _led_find_device->_led_turnon_max
    _led_calc_bright->___lldiv
    ___lldiv->___lmul
    _led_init->_led_para_init
    _led_para_init->_led_para_default
    _led_para_default->_memset
    _eeprom_read_buffer->_eeprom_read
    _ble_process->_ble_decode
    _ble_decode->_led_decrease
    _ble_decode->_led_increase
    _led_set_time->_rtc_set
    _led_set_pro->___bmul
    _led_set_power->_led_turnon_ramp
    _led_set_mode->_led_turnon_ramp
    _led_set_dynamic->_led_sunrs_init
    _led_set_custom->___lwdiv
    _led_increase->_increase
    _led_decrease->_decrease
    _ble_send_data->___bmul
    _ble_ota_ack->_ble_transmit_start
    _ble_ota_ack->_eusart_write
    _ble_init->_ble_send_cmd
    _ble_check_devid->_ble_send_cmd
    _ble_send_cmd->_strlen
    _app_init->_eusart_init
    _app_init->_tmr0_init
    _app_init->_tmr2_init

Critical Paths under _app_isr in BANK0

    _led_process->_led_dynamic_process
    _led_dynamic_process->i1___lldiv

Critical Paths under _main in BANK1

    _main->_led_second_cb
    _led_second_cb->_led_pro_process
    _led_pro_process->_led_calc_bright
    _led_auto_process->_led_calc_bright
    _led_calc_bright->___lldiv
    _led_init->_led_para_init
    _led_para_init->_led_para_default
    _ble_decode->_led_set_custom
    _ble_init->_ble_check_devid

Critical Paths under _app_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _app_isr in BANK2

    None.

Critical Paths under _main in BANK3

    _led_second_cb->_led_auto_process

Critical Paths under _app_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _app_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _app_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _app_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _app_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _app_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _app_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _app_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _app_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _app_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   69676
                           _app_init
                           _ble_init
                        _ble_process
                           _led_init
                      _led_second_cb
                           _rtc_init
                   _rtc_second_ready
 ---------------------------------------------------------------------------------
 (1) _rtc_second_ready                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rtc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_second_cb                                        3     3      0   48847
                                             31 BANK1      3     3      0
                             ___wmul
                   _led_auto_process
                    _led_find_device
         _led_period_dynamic_process
                        _led_preview
                    _led_pro_process
                      _led_save_para
                       _rtc_get_hour
                     _rtc_get_minute
                     _rtc_get_second
 ---------------------------------------------------------------------------------
 (2) _rtc_get_second                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_get_minute                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_get_hour                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _led_save_para                                        0     0      0     373
                _eeprom_write_buffer
 ---------------------------------------------------------------------------------
 (3) _eeprom_write_buffer                                  5     2      3     373
                                             23 BANK0      5     2      3
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         3     2      1     131
                                             20 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _led_pro_process                                     52    49      3   17052
                                             20 BANK1     11     8      3
                                              0 BANK3     41    41      0
                             ___wmul
                    _led_calc_bright
 ---------------------------------------------------------------------------------
 (2) _led_preview                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _led_period_dynamic_process                          10     8      2    6453
                                             26 BANK0     10     8      2
                             ___wmul
                   _led_dynamic_init
                       _rtc_get_week
 ---------------------------------------------------------------------------------
 (3) _rtc_get_week                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _led_find_device                                      0     0      0     180
                        _led_turnoff
                     _led_turnon_max
 ---------------------------------------------------------------------------------
 (3) _led_turnon_max                                       1     1      0      90
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _led_turnoff                                          1     1      0      90
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _led_auto_process                                    61    58      3   18847
                                             20 BANK1      9     6      3
                                              0 BANK3     52    52      0
                            ___awmod
                             ___lmul
                             ___wmul
                    _led_calc_bright
 ---------------------------------------------------------------------------------
 (3) _led_calc_bright                                     15     8      7    8414
                                              5 BANK1     15     8      7
                            ___lldiv
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     990
                                             20 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     633
                                             32 BANK0      8     0      8
                                              0 BANK1      5     5      0
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     618
                                             20 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _led_init                                             0     0      0    7968
                      _led_para_init
 ---------------------------------------------------------------------------------
 (2) _led_para_init                                       12    12      0    7968
                                             38 BANK0      2     2      0
                                              4 BANK1     10    10      0
                             ___wmul
                 _eeprom_read_buffer
                   _led_dynamic_init
                   _led_para_default
                   _led_turnoff_ramp
                    _led_turnon_ramp
 ---------------------------------------------------------------------------------
 (3) _led_para_default                                    14    14      0     826
                                             28 BANK0     10    10      0
                                              0 BANK1      4     4      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     368
                                             20 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _eeprom_read_buffer                                   6     3      3     264
                                             21 BANK0      6     3      3
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          1     1      0      22
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ble_process                                          0     0      0   10845
                         _ble_decode
               _ble_ready_to_receive
               _ble_receive_complete
                  _ble_receive_start
                   _ble_receive_stop
 ---------------------------------------------------------------------------------
 (2) _ble_receive_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ble_receive_start                                    1     1      0       0
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ble_receive_complete                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ble_ready_to_receive                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ble_decode                                           2     2      0   10845
                                             35 BANK0      2     2      0
                             ___wmul
                        _ble_ota_ack
                      _ble_send_data
                       _led_decrease
                       _led_increase
                     _led_set_bright
                     _led_set_custom
                      _led_set_cycle
                    _led_set_dynamic
                       _led_set_mode
             _led_set_period_dynamic
                      _led_set_power
                    _led_set_preview
                        _led_set_pro
                       _led_set_time
                    _led_start_flash
                  _led_start_preview
                   _led_stop_preview
 ---------------------------------------------------------------------------------
 (3) _led_stop_preview                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_start_preview                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_start_flash                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_set_time                                         1     1      0     173
                                             22 BANK0      1     1      0
                            _rtc_set
 ---------------------------------------------------------------------------------
 (4) _rtc_set                                              2     2      0     121
                                             20 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _led_set_pro                                         11    11      0     385
                                             23 BANK0     11    11      0
                             ___bmul
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (3) _led_set_preview                                      6     6      0     275
                                             20 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) _led_set_power                                        1     1      0     246
                                             25 BANK0      1     1      0
                   _led_dynamic_init
                _led_prepare_to_save
                   _led_turnoff_ramp
                    _led_turnon_ramp
 ---------------------------------------------------------------------------------
 (3) _led_set_period_dynamic                              11    11      0     143
                                             20 BANK0     11    11      0
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (3) _led_set_mode                                         1     1      0     268
                                             25 BANK0      1     1      0
                   _led_dynamic_init
                _led_prepare_to_save
                   _led_turnoff_ramp
                    _led_turnon_ramp
 ---------------------------------------------------------------------------------
 (3) _led_turnon_ramp                                      5     5      0      90
                                             20 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _led_turnoff_ramp                                     1     1      0      68
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _led_set_dynamic                                      1     1      0     580
                                             28 BANK0      1     1      0
                   _led_dynamic_init
                _led_prepare_to_save
                     _led_sunrs_init
 ---------------------------------------------------------------------------------
 (4) _led_sunrs_init                                       8     8      0     360
                                             20 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (3) _led_dynamic_init                                     1     1      0      44
                                             20 BANK0      1     1      0
                  _led_allcolor_init *
                    _led_cloud1_init *
                    _led_cloud2_init *
                    _led_cloud3_init *
                    _led_cloud4_init *
                     _led_moon1_init *
                     _led_moon2_init *
                     _led_moon3_init *
                  _led_thunder1_init *
                  _led_thunder2_init *
                  _led_thunder3_init *
 ---------------------------------------------------------------------------------
 (4) _led_thunder3_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _led_thunder2_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _led_thunder1_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _led_moon3_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _led_moon2_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _led_moon1_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _led_cloud4_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _led_cloud3_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _led_cloud2_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _led_cloud1_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _led_allcolor_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_set_cycle                                       11    11      0     143
                                             20 BANK0     11    11      0
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (3) _led_set_custom                                      17    17      0     482
                                             27 BANK0      2     2      0
                                              0 BANK1     15    15      0
                            ___lwdiv
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                             20 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _led_set_bright                                       8     8      0     275
                                             20 BANK0      8     8      0
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (3) _led_increase                                         6     5      1     542
                                             29 BANK0      6     5      1
                           _increase
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (4) _increase                                             9     4      5     368
                                             20 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (3) _led_decrease                                         6     5      1     542
                                             29 BANK0      6     5      1
                           _decrease
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (4) _led_prepare_to_save                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _decrease                                             9     4      5     368
                                             20 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (3) _ble_send_data                                        9     9      0     947
                                             23 BANK0      9     9      0
                             ___bmul
                 _ble_transmit_start
                  _ble_transmit_stop
                       _eusart_write
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               3     2      1     220
                                             20 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _ble_ota_ack                                          0     0      0      66
                 _ble_transmit_start
                  _ble_transmit_stop
                       _eusart_write
 ---------------------------------------------------------------------------------
 (4) _ble_transmit_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ble_transmit_start                                   1     1      0       0
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    5778
                                             20 BANK0      6     2      4
                       _rtc_get_hour (ARG)
 ---------------------------------------------------------------------------------
 (1) _ble_init                                             2     2      0    1758
                                             23 BANK1      2     2      0
                    _ble_check_devid
                       _ble_send_cmd
 ---------------------------------------------------------------------------------
 (2) _ble_check_devid                                     23    23      0    1076
                                              0 BANK1     23    23      0
                       _ble_send_cmd
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ble_send_cmd                                        15    13      2     682
                                             25 BANK0     15    13      2
                       _eusart_write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     2      3     150
                                             20 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (4) _eusart_write                                         1     1      0      66
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0     258
                        _eusart_init
                          _gpio_init
                           _osc_init
                          _pwm1_init
                          _pwm2_init
                          _pwm3_init
                          _pwm4_init
                          _pwm5_init
                          _tmr0_init
                          _tmr2_init
 ---------------------------------------------------------------------------------
 (2) _tmr2_init                                            2     0      2      86
                                             20 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            2     0      2      86
                                             20 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _pwm5_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm4_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm3_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _osc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_init                                          2     0      2      86
                                             20 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _app_isr                                              0     0      0    2166
                 _eusart_receive_isr
                _eusart_transmit_isr
                           _tmr0_isr
                           _tmr2_isr
 ---------------------------------------------------------------------------------
 (7) _tmr2_isr                                             0     0      0    1489
                   Absolute function *
                  _tmr2_isr_callback *
 ---------------------------------------------------------------------------------
 (8) _tmr2_isr_callback                                    0     0      0    1489
                        _led_process
 ---------------------------------------------------------------------------------
 (9) _led_process                                          0     0      0    1489
                _led_dynamic_process
                           _led_ramp
 ---------------------------------------------------------------------------------
 (10) _led_ramp                                            7     7      0     532
                                              2 COMMON     7     7      0
                     _pwm1_load_duty *
                     _pwm2_load_duty *
                     _pwm3_load_duty *
                     _pwm4_load_duty *
 ---------------------------------------------------------------------------------
 (10) _led_dynamic_process                                 7     7      0     957
                                             13 BANK0      7     7      0
               _led_allcolor_process
               _led_thunder1_process
               _led_thunder2_process
               _led_thunder3_process
                     _pwm1_load_duty *
                     _pwm2_load_duty *
                     _pwm3_load_duty *
                     _pwm4_load_duty *
                          i1___lldiv
                           i1___lmul
 ---------------------------------------------------------------------------------
 (11) i1___lmul                                           12     4      8     166
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (11) i1___lldiv                                          13     5      8     214
                                              0 BANK0     13     5      8
                           i1___lmul (ARG)
 ---------------------------------------------------------------------------------
 (11) _pwm4_load_duty                                      2     0      2     131
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _pwm3_load_duty                                      2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _pwm2_load_duty                                      2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _pwm1_load_duty                                      2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _led_thunder3_process                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _led_thunder2_process                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _led_thunder1_process                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _led_allcolor_process                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _tmr0_isr                                             0     0      0     567
                   Absolute function *
                        _rtc_process *
 ---------------------------------------------------------------------------------
 (8) _rtc_process                                          0     0      0     567
                   _rtc_is_leap_year
 ---------------------------------------------------------------------------------
 (9) _rtc_is_leap_year                                     2     0      2     567
                                              5 COMMON     2     0      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (10) ___lwmod                                             5     1      4     415
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (7) _eusart_transmit_isr                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _eusart_receive_isr                                   1     1      0     110
                                              1 COMMON     1     1      0
                   Absolute function *
                        _ble_receive *
 ---------------------------------------------------------------------------------
 (8) _ble_receive                                          1     0      1      87
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _eusart_init
     _gpio_init
     _osc_init
     _pwm1_init
     _pwm2_init
     _pwm3_init
     _pwm4_init
     _pwm5_init
     _tmr0_init
     _tmr2_init
   _ble_init
     _ble_check_devid
       _ble_send_cmd
         _eusart_write
         _strlen
       _strlen
     _ble_send_cmd
       _eusart_write
       _strlen
   _ble_process
     _ble_decode
       ___wmul
         _rtc_get_hour (ARG)
       _ble_ota_ack
         _ble_transmit_start
         _ble_transmit_stop
         _eusart_write
       _ble_send_data
         ___bmul
         _ble_transmit_start
         _ble_transmit_stop
         _eusart_write
       _led_decrease
         _decrease
         _led_prepare_to_save
       _led_increase
         _increase
         _led_prepare_to_save
       _led_set_bright
         _led_prepare_to_save
       _led_set_custom
         ___lwdiv
         _led_prepare_to_save
       _led_set_cycle
         _led_prepare_to_save
       _led_set_dynamic
         _led_dynamic_init
           _led_allcolor_init *
           _led_cloud1_init *
           _led_cloud2_init *
           _led_cloud3_init *
           _led_cloud4_init *
           _led_moon1_init *
           _led_moon2_init *
           _led_moon3_init *
           _led_thunder1_init *
           _led_thunder2_init *
           _led_thunder3_init *
         _led_prepare_to_save
         _led_sunrs_init
       _led_set_mode
         _led_dynamic_init
           _led_allcolor_init *
           _led_cloud1_init *
           _led_cloud2_init *
           _led_cloud3_init *
           _led_cloud4_init *
           _led_moon1_init *
           _led_moon2_init *
           _led_moon3_init *
           _led_thunder1_init *
           _led_thunder2_init *
           _led_thunder3_init *
         _led_prepare_to_save
         _led_turnoff_ramp
         _led_turnon_ramp
       _led_set_period_dynamic
         _led_prepare_to_save
       _led_set_power
         _led_dynamic_init
           _led_allcolor_init *
           _led_cloud1_init *
           _led_cloud2_init *
           _led_cloud3_init *
           _led_cloud4_init *
           _led_moon1_init *
           _led_moon2_init *
           _led_moon3_init *
           _led_thunder1_init *
           _led_thunder2_init *
           _led_thunder3_init *
         _led_prepare_to_save
         _led_turnoff_ramp
         _led_turnon_ramp
       _led_set_preview
       _led_set_pro
         ___bmul
         _led_prepare_to_save
       _led_set_time
         _rtc_set
       _led_start_flash
       _led_start_preview
       _led_stop_preview
     _ble_ready_to_receive
     _ble_receive_complete
     _ble_receive_start
     _ble_receive_stop
   _led_init
     _led_para_init
       ___wmul
         _rtc_get_hour (ARG)
       _eeprom_read_buffer
         _eeprom_read
       _led_dynamic_init
         _led_allcolor_init *
         _led_cloud1_init *
         _led_cloud2_init *
         _led_cloud3_init *
         _led_cloud4_init *
         _led_moon1_init *
         _led_moon2_init *
         _led_moon3_init *
         _led_thunder1_init *
         _led_thunder2_init *
         _led_thunder3_init *
       _led_para_default
         _memset
       _led_turnoff_ramp
       _led_turnon_ramp
   _led_second_cb
     ___wmul
       _rtc_get_hour (ARG)
     _led_auto_process
       ___awmod
       ___lmul
       ___wmul
         _rtc_get_hour (ARG)
       _led_calc_bright
         ___lldiv
           ___lmul (ARG)
         ___lmul
         ___wmul
           _rtc_get_hour (ARG)
     _led_find_device
       _led_turnoff
       _led_turnon_max
     _led_period_dynamic_process
       ___wmul
         _rtc_get_hour (ARG)
       _led_dynamic_init
         _led_allcolor_init *
         _led_cloud1_init *
         _led_cloud2_init *
         _led_cloud3_init *
         _led_cloud4_init *
         _led_moon1_init *
         _led_moon2_init *
         _led_moon3_init *
         _led_thunder1_init *
         _led_thunder2_init *
         _led_thunder3_init *
       _rtc_get_week
     _led_preview
     _led_pro_process
       ___wmul
         _rtc_get_hour (ARG)
       _led_calc_bright
         ___lldiv
           ___lmul (ARG)
         ___lmul
         ___wmul
           _rtc_get_hour (ARG)
     _led_save_para
       _eeprom_write_buffer
         _eeprom_write
     _rtc_get_hour
     _rtc_get_minute
     _rtc_get_second
   _rtc_init
   _rtc_second_ready

 _app_isr (ROOT)
   _eusart_receive_isr
     Absolute function(Fake) *
     _ble_receive *
   _eusart_transmit_isr
   _tmr0_isr
     Absolute function(Fake) *
     _rtc_process *
       _rtc_is_leap_year
         ___lwmod
   _tmr2_isr
     Absolute function(Fake) *
     _tmr2_isr_callback *
       _led_process
         _led_dynamic_process
           _led_allcolor_process
           _led_thunder1_process
           _led_thunder2_process
           _led_thunder3_process
           _pwm1_load_duty *
           _pwm2_load_duty *
           _pwm3_load_duty *
           _pwm4_load_duty *
           i1___lldiv *
             i1___lmul (ARG)
           i1___lmul *
         _led_ramp
           _pwm1_load_duty *
           _pwm2_load_duty *
           _pwm3_load_duty *
           _pwm4_load_duty *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      3C       5       75.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     22      32       7       62.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      41       9       81.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     34      4A      11       92.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     197      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11               E      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     197      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Aug 08 16:34:16 2018

                ?_eusart_receive_isr 0070                        ?_led_decrease 003D  
                                  pc 0002                       ___bmul@product 0035  
                                 PL2 13B9                                   PL4 0EDF  
                                 PL6 1F23                                   PL8 1F2F  
                     _led_moon1_init 1976                       _led_moon2_init 0809  
                     _led_moon3_init 1BCB                        _led_second_cb 0DED  
               _led_thunder1_process 09AB                  ___wmul@multiplicand 0036  
                      eusart_init@cb 0034           led_set_period_dynamic@pbuf 003D  
            __size_of_pwm3_load_duty 0006                 ?_eeprom_write_buffer 0037  
                  _dynamic_run_pause 0050                 _led_thunder2_process 0AAA  
                      _led_save_para 0E92                                  PL10 06BC  
                                PL20 0B4B                                  PL12 13CF  
                                PL30 0B51                                  PL22 17D4  
                                PL14 06CB                                  PL40 0F60  
                                PL32 13F0                                  PL24 1F4C  
                                PL16 0B3E                                  PL50 07F4  
                                PL42 06FE                                  PL34 06F4  
                                PL26 1F64                                  PL18 1F37  
                                PL60 0B71                                  PL52 1F7E  
                                PL44 0B5F                                  PL36 1F6A  
                                PL28 06DD                                  PL70 0728  
                                PL62 1BE4                                  PL54 0718  
                                PL46 0706                                  PL38 0B5A  
                                PL80 110D                                  PL72 0B88  
                                PL64 0720                                  PL56 1F88  
                                PL48 0860                                  PL90 0BAA  
                                PL82 0B98                                  PL74 0B8E  
                                PL66 1F9F                                  PL58 1F99  
                                PL92 0F66                                  PL84 13FA  
                                PL76 1FAE                                  PL68 0B7A  
                                PL94 1C38                                  PL86 0737  
                                PL78 0B92                                  PL96 0BB1  
                                PL88 0BA4                                  PL98 1FBC  
          __end_of_ble_transmit_stop 17CD                 _led_thunder3_process 09F7  
                                l133 0ED5                                  l186 16EB  
                                l418 17C3                                  l522 0CB6  
                                l702 119C                                  l392 161A  
                                l480 0CD8                                  l651 04FB  
                                l643 04C4                                  l644 04CC  
                                l645 04D4                                  l646 04DC  
                                l647 04E4                                  l664 058A  
                                l665 0592                                  l666 059A  
                                l658 0533                                  l667 05A2  
                                l668 05AA                         ?_led_set_pro 0070  
                                l795 0F56                        _led_set_cycle 0D59  
                                _PR2 001E                    led_set_bright@val 0039  
                       ?_led_preview 0070               led_para_default@i_1263 00A3  
             led_para_default@i_1256 00A2                         ?_led_process 0070  
             eeprom_write_buffer@len 0039                        _led_set_power 0772  
                      ?_led_increase 003D                         ___awmod@sign 0039  
                  ??_led_turnon_ramp 0034                                  wreg 0009  
                       ?_led_turnoff 0070              __size_of_pwm4_load_duty 0006  
                               S8362 1896                 ??_eusart_receive_isr 0071  
                               PL100 073E                                 PL110 17DE  
                               PL102 0744                                 PL120 1418  
                               PL112 1405                                 PL104 1FC2  
                               PL130 0BD5                                 PL122 0BC3  
                               PL114 17E8                                 PL106 0F6E  
                               PL140 17EF                                 PL132 0BDD  
                               PL124 0BCC                                 PL116 0BBC  
                               PL108 074A                                 PL150 1424  
                               PL142 17F5                                 PL134 0750  
                               PL126 141E                                 PL118 140F  
                               PL160 0BF9                                 PL152 075C  
                               PL144 0877                                 PL136 0871  
                               PL128 1FC8                                 PL170 1C40  
                               PL162 087C                                 PL154 0BF2  
                               PL146 0BE4                                 PL138 0756  
                               PL180 0768                                 PL172 0BFF  
                               PL164 0763                                 PL156 0DE7  
                               PL148 0BEB                                 PL190 1FDB  
                               PL182 1CCB                                 PL174 1431  
                               PL166 0881                                 PL158 142B  
                               PL192 076D                                 PL184 143C  
                               PL176 1BE9                                 PL168 081E  
                               PL194 17FB                                 PL186 1FD1  
                               PL178 1437                                 PL188 1FD6  
                       rtc_set@ptime 0034                                 l1017 0E57  
                               l1043 0E0B                                 l1276 14C0  
                               l1373 12ED                                 l5222 1704  
                               l5224 170C                                 l6032 0DA3  
                               l5170 16DF                                 l5402 0EF9  
                               l5406 0EFE                                 l5262 07DB  
                               l5184 16FC                                 l6048 0DBA  
                               l5256 07DA                                 l6072 1B58  
                               l5418 0F09                                 l5274 07D0  
                               l6074 1B79                                 l6170 0E7E  
                               l8010 1DF1                                 l5540 0D54  
                               l5436 0F2E                                 l5428 0F2A  
                               l5268 07CF                                 l6164 0E7C  
                               l8100 1EBE                                 l8012 1D79  
                               l5710 16AB                                 l5702 16A0  
                               l5446 0D81                                 l5198 0FE4  
                               l6182 0E6C                                 l8014 1DF3  
                               l5632 1607                                 l5480 1769  
                               l5712 16B9                                 l5536 0D50  
                               l5528 0D41                                 l5810 079B  
                               l8018 1DF5                                 l5644 162E  
                               l5732 16C9                                 l5724 16C6  
                               l5812 079C                                 l7420 13A8  
                               l8132 1D3C                                 l8052 1E41  
                               l8204 0E37                                 l5638 1621  
                               l5646 162F                                 l5654 1639  
                               l5718 16BA                                 l5734 16D9  
                               l5398 0EEE                                 l5582 05C4  
                               l7510 0689                                 l8142 1D43  
                               l5566 0EAB                                 l5680 1677  
                               l5656 164A                                 l7432 0CE2  
                               l5808 0798                                 l7416 13A0  
                               l7408 1380                                 l8048 1E28  
                               l8208 0E46                    ?_led_turnoff_ramp 0070  
                               l5842 1C31                                 l7442 0CEB  
                               l8154 177A                                 l8146 1D4E  
                               l8138 1D3E                                 l8090 1E66  
                               l8058 1E64                        ?_led_set_mode 0070  
                               l8172 15C4                                 l7372 1F0D  
                               l5692 1684                                 l5836 1C03  
                               l5780 07CC                                 l7364 06B2  
                               l8092 1EB9                                 l5686 1678  
                               l5678 1667                                 l7630 0C24  
                               l7622 0C19                                 l7614 0C04  
                               l7470 05FE                                 l7550 12C1  
                               l7390 12F7                                 l7534 1363  
                               l7608 1732                                 l7376 1F13  
                               l5776 07C8                                 l7624 0C1B  
                               l7368 06A9                                 l7528 134E  
                               l8088 1EB6                                 l5778 07CB  
                               l7650 0C40                                 l7634 0C2B  
                               l7618 0C0E                                 l7730 0440  
                               l7570 12E4                                 l7562 12D8  
                               l7546 12BA                                 l8194 0E10  
                               l5892 0D5E                                 l5964 0FAA  
                               l5972 0FF7                                 l7644 0C38  
                               l7716 0CCD                                 l7492 0638  
                               l7484 0624                                 l7820 051D  
                               l7804 0508                                 l7740 044F  
                               l7724 0430                                 l5894 0D7F  
                               l5958 0F81                                 l5982 0DE2  
                               l7654 0C4B                                 l7638 0C30  
                               l7814 051C                                 l7750 0469  
                               l7734 044D                                 l7558 12CC  
                               l7566 12DC                                 l7902 1196  
                               l8198 0E1A                                 l5976 0FFC  
                               l7664 0C61                                 l7832 0548  
                               l7744 0467                                 l5994 0FBE  
                               l7674 0C6E                                 l7658 0C56  
                               l7826 0546                                 l7754 0486  
                               l7930 1206                                 l7914 11C3  
                               l7588 173F                                 l5996 0FDF  
                               l7668 0C66                                 l7836 056F  
                               l7598 174B                                 l7694 0C9A  
                               l7678 0C73                                 l7870 05C0  
                               l7688 0C92                                 l7848 057F  
                               l7792 04EC                                 l7960 12AD  
                               l7698 0CA3                                 l7778 04BC  
                               l7954 1269                                 l7938 1223  
                               l7962 11C4                                 l7868 05BF  
                               l7980 1D66                                 l6996 0E92  
                               l7798 04ED                                 l7990 1D78  
                               STR_1 1942                                 STR_2 18BA  
                               STR_3 19B5                                 STR_4 1967  
                     _led_set_bright 1BEE                        ?_led_set_time 0070  
                  led_set_cycle@pbuf 003D                                 _LATA 010C  
                               _LATB 010D                                 _LATC 010E  
                               u3215 10FC                                 u3225 1095  
                               u4430 0DCA                                 u4440 0DCB  
                               u3625 0D49                                 u3730 15FA  
                               u7205 1202                                 u7215 1217  
                               u6425 12D2                                 u6265 1394  
                               u7225 1221                                 u7305 1DDA  
                               u6450 171E                                 u7235 1230  
                               u7335 1E26                                 u7185 11EF  
                               u7345 1E49                                 u7434 1CEE  
                               u7195 11F8                                 u7435 1CED  
                               u7355 1EA6                                 u7365 1EB0  
                               u7455 1D22                                 u7375 1E76  
                               u7465 1D2A                                 u7707 15A8  
                               u7717 15B8                                 u7485 1D32  
                               u7727 15C8                                 u7647 17CE  
                               u7495 1D3A                                 u7737 15D8  
                               u7657 1797                                 u7747 15E8  
                               u7667 0CC4                                 u7757 174C  
                               u7677 17C7                                 u7767 1630  
                               u7687 1761                                 u7697 159B  
                               _TMR2 001D                                 _WPUA 020C  
                               _WPUB 020D                                 _WPUC 020E  
                 led_set_bright@pbuf 0038                       ??_eeprom_write 0035  
                     _led_set_custom 0CD9              eeprom_write_buffer@addr 003A  
            eeprom_write_buffer@pbuf 0037                   ??_led_turnoff_ramp 0034  
                  i1___lldiv@divisor 0020                                 _main 14B3  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                    i1___lldiv@counter 002C  
         led_pro_process@point_count 01BE                                 start 042E  
               __end_of_ble_send_cmd 163E                       ?_led_para_init 0070  
                  ___bmul@multiplier 0036               __end_of_led_moon1_init 1985  
                     ??_led_decrease 003E               __end_of_led_moon2_init 0813  
             __end_of_led_moon3_init 1BD7         __size_of_eusart_transmit_isr 001A  
                     ?_led_second_cb 0070                ?_led_thunder1_process 0070  
              ??_eeprom_write_buffer 003A                       ?_led_save_para 0070  
              ?_led_thunder2_process 0070                    led_set_custom@idx 003B  
          __size_of_rtc_second_ready 0006                ?_led_thunder3_process 0070  
                     ?_led_set_cycle 0070                                ?_main 0070  
                    __end_of___awmod 12E9                      __end_of___lldiv 13B9  
                              _T2CON 001F                       ?_led_set_power 0070  
                     ??_led_increase 003E                      __end_of___lwdiv 0D59  
                              i1l200 1931                                i1l192 1B2B  
                    __end_of___lwmod 1CCB                                i1l266 1C77  
                              i1l834 0ABD                                i1l844 0AD6  
                              i1l828 0AB9                                i1l854 0AEB  
                              i1l839 0AC9                                i1l864 0AF8  
                              i1l849 0AE2                                i1l874 0B04  
                              i1l859 0AF1                                i1l963 08D6  
                              i1l884 0B23                                i1l869 0AFF  
                              i1l894 0B2B                                _RCREG 0199  
                              _OSCEN 091D                                _TMR0H 0016  
                              _TMR0L 0015                      _ble_check_devid 1713  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                      _led_set_dynamic 0D86  
                              _TXREG 019A                  ___lmul@multiplicand 0038  
                    __end_of_app_isr 042E               __end_of_led_set_bright 1C38  
            led_dynamic_process@temp 0031                   i1___lldiv@dividend 0024  
                    _led_set_preview 0F74         led_period_dynamic_process@ct 003A  
                              _index 007D               __end_of_led_set_custom 0D34  
                     ??_led_set_mode 0039                       ??_led_set_time 0036  
                       ?_eusart_init 0034          __size_of_eeprom_read_buffer 0017  
                   __end_ofi1___lmul 1B53                                pclath 000A  
      __size_of_led_allcolor_process 0047           __size_of_tmr2_isr_callback 0007  
                    __end_of_rtc_set 0FF7                                status 0003  
                   ?_led_cloud1_init 0070                     ??_rtc_get_minute 0034  
                   ??_rtc_get_second 0034                     ?_led_cloud2_init 0070  
                              wtemp0 007E                 __size_of_ble_receive 0012  
                   ?_led_cloud3_init 0070                     _rtc_is_leap_year 1C8F  
                   ?_led_cloud4_init 0070                __end_of_ble_send_data 16DD  
               __size_of_ble_ota_ack 0012                   __size_ofi1___lldiv 003F  
                       __end_ofPL100 0744                         __end_ofPL110 17E8  
                       __end_ofPL102 074A                         __end_ofPL120 141E  
                       __end_ofPL112 140F                         __end_ofPL104 1FC8  
                       __end_ofPL130 0BDD                         __end_ofPL122 0BCC  
                       __end_ofPL114 17EF                         __end_ofPL106 0F74  
                       __end_ofPL140 17F5                         __end_ofPL132 0BE4  
                       __end_ofPL124 0BD5                         __end_ofPL116 0BC3  
                       __end_ofPL108 0750                         __end_ofPL150 142B  
                       __end_ofPL142 17FB                         __end_ofPL134 0756  
                       __end_ofPL126 1424                         __end_ofPL118 1418  
                       __end_ofPL160 0BFF                         __end_ofPL152 0763  
                       __end_ofPL144 087C                         __end_ofPL136 0877  
                       __end_ofPL128 1FD1                       _led_sunrs_init 0EE7  
                       __end_ofPL170 1C46                         __end_ofPL162 0881  
                       __end_ofPL154 0BF9                         __end_ofPL146 0BEB  
                       __end_ofPL138 075C                         __end_ofPL180 076D  
                       __end_ofPL172 0C04                         __end_ofPL164 0768  
                       __end_ofPL156 0DED                         __end_ofPL148 0BF2  
                       __end_ofPL190 1FE0                         __end_ofPL182 1CD0  
                       __end_ofPL174 1437                         __end_ofPL166 0887  
                       __end_ofPL158 1431                         __end_ofPL192 0772  
                       __end_ofPL184 1441                         __end_ofPL176 1BEE  
                       __end_ofPL168 0823                         __end_ofPL194 1800  
                       __end_ofPL186 1FD6                         __end_ofPL178 143C  
                       __end_ofPL188 1FDB                 __size_of_ble_process 000F  
                  led_set_time@ptime 0036                     ?_led_find_device 0070  
       ??_led_period_dynamic_process 003C                      __initialization 1453  
                 ble_check_devid@dev 00A1                   ble_check_devid@cnt 00B4  
                 ble_check_devid@idx 00B6                   ble_check_devid@len 00B2  
                 ble_check_devid@rev 00B3                      ?_led_moon1_init 0070  
                     _led_turnon_max 0E7C                      ?_led_moon2_init 0070  
           __end_of_led_auto_process 12B0                      ?_led_moon3_init 0070  
                       __end_of_main 14CC                  i1___lmul@multiplier 0070  
                    _led_pro_process 1D51                   i1___lldiv@quotient 0028  
                     _m_current_time 0155                   led_set_dynamic@dyn 003C  
                             ??_main 0048           __size_of_ble_transmit_stop 000A  
            led_set_period_dynamic@i 003E                    ?_ble_receive_stop 0070  
                       led_set_pro@i 0041                          increase@max 0037  
                 ??_ble_receive_stop 0034                      ?_led_set_bright 0070  
                    ?_led_set_custom 0070                               i1S8370 1916  
                             i1S8372 19C0                               i1S8364 1900  
                             i1S8366 18DC                               i1S8368 1800  
                             _CCPR1H 0292                               _CCPR2H 0296  
                             _CCPR3H 0312                               _CCPR1L 0291  
                             _CCPR4H 0316                               _CCPR2L 0295  
                             _CCPR3L 0311                               _CCPR4L 0315  
__size_of_led_period_dynamic_process 0081                               _ANSELA 018C  
                             _ANSELB 018D                               _ANSELC 018E  
                             _T0CON0 0017                               _T0CON1 0018  
                             _RC1STA 019D                       _pwm1_load_duty 19E5  
                             i1l1271 042C                               i1l1264 0410  
                             _ODCONA 028C                               i1l1266 041A  
                             _ODCONB 028D                               _ODCONC 028E  
                             i1l1268 0424                               i1l1373 1B32  
                             i1l5002 0A88                               i1l5004 0A90  
                             i1l5020 0A9F                               i1l5100 1B3C  
                             i1l5130 1039                               i1l5054 0973  
                             i1l5038 096A                               i1l5126 1033  
                             i1l5118 1016                               i1l5310 08A8  
                             i1l5302 0897                               i1l5048 096D  
                             i1l5058 097B                               i1l5090 099F  
                             i1l7100 1933                               i1l5068 0986  
                             i1l5324 08B8                               i1l5078 0998  
                             i1l5350 08D6                               i1l5342 08CD  
                             i1l5334 08C4                               i1l5326 08BB  
                             i1l5318 08B0                               i1l4704 09CE  
                             i1l5280 0823                               i1l6322 1C6D  
                             i1l4722 09E5                               i1l4714 09D8  
                             i1l5370 0949                               i1l5362 08EA  
                             i1l5354 08DB                               i1l5290 0835  
                             i1l6162 0896                               i1l4716 09E0  
                             i1l4708 09D2                               i1l4820 0B23  
                             i1l4812 0B15                               i1l5372 0954  
                             i1l5356 08E8                               i1l6156 088E  
                             i1l6326 1C79                               i1l4734 09EC  
                             i1l4750 0ABD                               i1l5294 0847  
                             i1l5286 0824                               i1l5552 1CB6  
                             i1l5560 1CC6                               i1l4728 09E7  
                             i1l4832 0B2B                               i1l4816 0B1C  
                             i1l4808 0B0E                               i1l4904 0A0A  
                             i1l5296 0851                               i1l6338 1C8C  
                             i1l4690 09BA                               i1l4842 0B35  
                             i1l5556 1CC2                               i1l4684 09B4  
                             i1l4780 0AF1                               i1l4772 0AEB  
                             i1l4764 0AE2                               i1l4756 0AC9  
                             i1l4748 0AB9                               i1l4932 0A29  
                             i1l4694 09BF                               i1l4678 09B0  
                             i1l4846 0B3C                               i1l4758 0AD6  
                             i1l4942 0A36                               i1l4918 0A1B  
                             i1l4696 09C1                               i1l4688 09B8  
                             i1l4944 0A41                               i1l4698 09C9  
                             i1l4794 0AFF                               i1l4786 0AF8  
                             i1l4874 09F8                               i1l4964 0A4C  
                             i1l4884 09FF                               i1l4798 0B04  
                             i1l4990 0A7D                               i1l4974 0A5B  
                             i1l4966 0A51                               i1l4894 0A03  
                             i1l4984 0A72                               i1l4976 0A6C  
                             i1l4968 0A53                      led_second_cb@ct 00C0  
                             u314_25 1028                               u340_25 0913  
                             u332_25 08A2                               u341_24 0938  
                             u341_25 0937                               u338_24 08EF  
                             u338_25 08EE               __end_of_led_sunrs_init 0F60  
                             u366_25 1CBC                               _OSCFRQ 091F  
                    _led_start_flash 0DE2                               _NVMADR 0891  
                             _TX1STA 019E                      ??_led_para_init 00A4  
                   __end_of_decrease 10A7                     __end_of_ble_init 15F0  
             __end_of_led_turnon_max 0E92                       _pwm2_load_duty 19DF  
                eeprom_read_buffer@i 003A                     __end_of_app_init 14F1  
               __size_of_eeprom_read 000F                         led_turnoff@i 0034  
                    ??_led_second_cb 0048                               ___bmul 1767  
                   __end_of_led_init 1640                     __end_of_led_ramp 0860  
                             ___lmul 12E9               ??_led_thunder1_process 0070  
                             ___wmul 1F0B                      ??_led_save_para 003C  
                          ??___awmod 0038             __end_of_led_dynamic_init 0DDF  
                          ??___lldiv 0048               ??_led_thunder2_process 0070  
           __end_of_led_para_default 06A5        led_period_dynamic_process@end 0042  
                          ??___lwdiv 0038                            ??___lwmod 0074  
                   __end_of_increase 110D              __end_of_ble_check_devid 175B  
            __end_of_led_set_dynamic 0DCD                      ??_led_set_cycle 0034  
          led_set_period_dynamic@len 003C          __end_of_led_dynamic_process 0964  
                     _pwm3_load_duty 19D9               ??_led_thunder3_process 0070  
                             _memset 06A5                      ??_led_set_power 0039  
                    ___awmod@divisor 0034                 __end_of_eeprom_write 0EDF  
                    ___awmod@counter 0038                               _rx_buf 0220  
                          ??_app_isr 007C                               _tx_buf 02A0  
                  led_para_default@i 00A0                    led_para_default@j 00A1  
            __end_of_led_set_preview 0FB0                               _strlen 1701  
                      ?_eusart_write 0070                     __end_of_tmr0_isr 19B5  
                   __end_of_tmr2_isr 19A9                     __end_of_osc_init 153F  
                  __end_ofi1___lldiv 1042                       _pwm4_load_duty 19EB  
               __size_of_led_set_pro 0031                     __end_of_rtc_init 164A  
               __size_of_led_preview 0007                 __size_of_led_process 0009  
                          ??_rtc_set 0034               __end_of_pwm1_load_duty 19EB  
                  ble_send_cmd@F8318 0145                 __end_of_led_decrease 1080  
               __size_of_led_turnoff 0012                  led_calc_bright@dbrt 00B2  
                led_calc_bright@ebrt 00A5                  led_calc_bright@sbrt 00B3  
              __size_of_ble_send_cmd 004E                         ?_rtc_process 0070  
                    ?_led_sunrs_init 0070              __end_of__initialization 14B0  
                    eeprom_read@addr 0034               __end_of_pwm2_load_duty 19E5  
                   led_turnon_ramp@i 0038                      led_set_bright@i 003B  
          __size_of_led_stop_preview 0004              __end_of_led_pro_process 1F0B  
               __end_of_led_increase 10E7                      ?_led_turnon_max 0070  
                ___bmul@multiplicand 0034                     eusart_write@byte 0034  
                     __pcstackCOMMON 0070              led_pro_process@duration 01B4  
                    led_set_custom@i 003C               __end_of_pwm3_load_duty 19DF  
                       __pidataBANK2 1B7B                         __pidataBANK3 1AFE  
       __end_of_ble_ready_to_receive 1789                      _led_turnon_ramp 07DA  
               __end_of_led_set_mode 07CF                 __end_of_led_set_time 0DE2  
       __end_of_ble_receive_complete 1790                      led_set_pro@pbuf 0040  
                         __end_ofPL2 13CF                           __end_ofPL4 0EE7  
                         __end_ofPL6 1F2F                           __end_ofPL8 1F37  
                   _rtc_second_ready 179F                       ??_eusart_write 0034  
                          ?i1___lmul 0070               __end_of_pwm4_load_duty 19F1  
                    led_set_power@on 0039          __end_of_led_prepare_to_save 0D86  
                       _ble_send_cmd 15F0              __end_of_led_start_flash 0DE7  
                 led_set_preview@val 0037                    eeprom_write@state 0036  
                    ?_pwm1_load_duty 0070                  _eusart_transmit_isr 1B14  
        __size_of_ble_transmit_start 000C                        _dynamic_count 00C6  
                  _ble_receive_start 1790                    led_calc_bright@dt 00A8  
                  led_calc_bright@vs 00AE                           __pbssBANK0 0048  
                         __pbssBANK1 00C2                           __pbssBANK2 014D  
                         __pbssBANK4 0220                           __pbssBANK5 02A0  
                      _dynamic_state 0051                           _ble_decode 0C04  
                      led_set_mode@m 0039                   ?_ble_receive_start 0070  
               __size_of_eusart_init 001E                   __size_of_gpio_init 0044  
                  _led_allcolor_init 1BA8                      ?_pwm2_load_duty 0070  
 __end_of_led_period_dynamic_process 1D51           _led_period_dynamic_process 1CD0  
                       increase@delt 0036                         increase@psrc 0034  
                 ?_led_allcolor_init 0070                           __pmaintext 14B3  
                ??_ble_receive_start 0034                              ?___bmul 0034  
                            ?___lmul 0034                 ?_eusart_transmit_isr 0070  
                    ?_pwm3_load_duty 0070                              ?___wmul 0034  
          __size_of_led_turnoff_ramp 000B                           __pintentry 0404  
                 __size_of_pwm1_init 000A                   __size_of_pwm2_init 0009  
                 __size_of_tmr0_init 0012                   __size_of_pwm3_init 000B  
                 __size_of_pwm4_init 000B                   __size_of_tmr2_init 0011  
                            _CCP1CON 0293                              _CCP2CON 0297  
                            _CCP3CON 0313                     led_decrease@delt 003D  
                 __size_of_pwm5_init 000A                              _CCP4CON 0317  
                ??_led_allcolor_init 0034                     ?_ble_check_devid 0070  
                   ?_led_set_dynamic 0070                              ?_memset 0034  
                     ___lmul@product 003C                           ??i1___lmul 0078  
           __size_of_led_calc_bright 005A                              ?_strlen 0034  
           __end_of_rtc_is_leap_year 1CAB                     ?_led_set_preview 0070  
                    ?_pwm4_load_duty 0070                 led_sunrs_init@i_1377 003A  
               led_sunrs_init@i_1378 003B                 tmr2_isr_callback@cnt 00CA  
                   led_second_cb@sec 00BF                            ?_decrease 0034  
                            _SP1BRGH 019C                              _SP1BRGL 019B  
                          ?_ble_init 0070                          tmr0_init@cb 0034  
                            _OSCCON1 0919                              _OSCCON3 091B  
                            _NVMADRH 0892                              _NVMADRL 0891  
                            _OSCTUNE 091E                              _NVMDATL 0893  
                            _NVMCON1 0895                              _NVMCON2 0896  
                            _PWM5DCH 0618                              _PWM5DCL 0617  
          __end_of_ble_receive_start 179F                              _PWM5CON 0619  
                            _PPSLOCK 0E0F                            ?_app_init 0070  
                        tmr2_init@cb 0034          __size_of_eusart_receive_isr 0016  
                         _m_led_para 237E                        _eusart_rcv_cb 015C  
                          ?_led_init 0070                            ?_led_ramp 0070  
          __end_of_led_allcolor_init 1BAE                            ?_increase 0034  
              led_find_device@toggle 00CB                     ??_led_moon1_init 0034  
                   ??_led_moon2_init 0034                     ??_led_moon3_init 0034  
            __end_of_led_turnon_ramp 07F4                     ?_led_pro_process 00B4  
                          ?_tmr0_isr 0070                            ?_tmr2_isr 0070  
                          ?_osc_init 0070          __end_of_eeprom_write_buffer 0EBD  
              ??_eusart_transmit_isr 0070                __size_of_eeprom_write 0022  
                          ?_rtc_init 0070                      __size_of___bmul 000C  
                    __size_of___lmul 0025                    ?_led_auto_process 00B4  
                            ___awmod 12B0                              ___lldiv 1368  
                    __size_of___wmul 0015                              ___lwdiv 0D34  
                            ___lwmod 1CAB         __end_of_led_allcolor_process 09AB  
           ??_led_set_period_dynamic 0034                   ??_led_auto_process 00B7  
                    __size_of_memset 0017       led_period_dynamic_process@flag 003E  
                            __ptext1 179F                              __ptext2 1640  
                            __ptext3 0DED                              __ptext4 0E67  
                            __ptext5 0E64                              __ptext6 0E61  
                            __ptext7 0E92                              __ptext8 0EA8  
                            __ptext9 0EBD                              _app_isr 0404  
     led_period_dynamic_process@mode 003F                    __end_of_gpio_init 1535  
     led_period_dynamic_process@week 003D                     ??_led_set_bright 0034  
                    __size_of_strlen 0012                __size_of_led_decrease 003E  
                   ??_led_set_custom 00A0                            _T2CONbits 001F  
                   ___awmod@dividend 0036                           ??_decrease 0039  
                         ??_ble_init 00B7                 rtc_is_leap_year@year 0075  
         __end_of_eeprom_read_buffer 05D8                     ?_led_start_flash 0070  
                            _rtc_set 0FE1                           ??_app_init 0036  
                            _tx_head 00CF                              clrloop0 1992  
                            _tx_tail 0053                        ??_ble_receive 0071  
                         ??_led_init 0048                 end_of_initialization 14B0  
                         ??_led_ramp 0072                 _ble_ready_to_receive 1782  
                  __end_of_pwm1_init 1549                        ??_ble_ota_ack 0035  
           led_auto_process@duration 01C4                    __end_of_pwm2_init 1552  
                  __end_of_tmr0_init 1584                __size_of_led_increase 0040  
                  __end_of_pwm3_init 155D                    __end_of_pwm4_init 1568  
                  __end_of_tmr2_init 1595                    __end_of_pwm5_init 1572  
                        ?_ble_decode 0070                           ??_increase 0039  
               _ble_receive_complete 1789                        ??_ble_process 0045  
                            init_ram 1985                              memset@c 0036  
                            memset@n 0038                              memset@p 003A  
                       _eeprom_write 0EBD                              initloop 1986  
               __end_of_eusart_write 1701            __size_of_ble_receive_stop 0007  
                  led_pro_process@p1 01B6                    led_pro_process@p2 01B8  
                  led_pro_process@t1 01AB                    led_pro_process@t2 01AD  
                  led_pro_process@ct 00B4                    led_pro_process@ep 01C3  
                  led_pro_process@dt 01AF                    led_pro_process@et 01BF  
                   _led_stop_preview 0FFC                    led_pro_process@sp 01C1  
                  led_pro_process@st 01C6                 __size_of_rtc_process 0049  
                    ___lldiv@divisor 0040                           ??_tmr0_isr 0077  
              __size_of_led_set_mode 0030                           ??_tmr2_isr 007C  
              __size_of_led_set_time 0003                      ___lldiv@counter 00A4  
                         ??_osc_init 0034                            _MONTH_DAY 0131  
                      ?_rtc_get_hour 0070                        ?_rtc_get_week 0070  
                          _RCSTAbits 019D                           ??_rtc_init 0034  
           __size_of_led_cloud1_init 0011             __size_of_led_cloud2_init 000B  
           __size_of_led_cloud3_init 000C             __size_of_led_cloud4_init 000D  
                       _led_decrease 1042                    ?_led_dynamic_init 0070  
                  led_turnoff_ramp@i 0034                    ?_led_para_default 0070  
                            strlen@s 0038             __size_of_led_find_device 0010  
                          _PORTAbits 000C                   ??_led_dynamic_init 0034  
                 ??_led_para_default 003C                           _rtc_status 00CE  
             __size_of_ble_send_data 0093                         _led_increase 10A7  
                   ??_led_sunrs_init 0034           __size_of_ble_receive_start 000F  
                          i1___lldiv 1003                    ??_led_calc_bright 0048  
               eeprom_write_buffer@i 003B                     _dynamic_run_mode 007C  
              ?_ble_ready_to_receive 0070                         _led_set_mode 079F  
                       _led_set_time 0DDF           __size_of_led_allcolor_init 0006  
                          _RXPPSbits 0E24                ?_ble_receive_complete 0070  
                   ??_led_turnon_max 0034                 ble_check_devid@F8326 0120  
           __end_of_rtc_second_ready 17A5                        ??_eeprom_read 0034  
                   led_set_cycle@len 003C                            _TXSTAbits 019E  
                       _led_run_para 00C2                     ?_led_turnon_ramp 0070  
              __end_of_led_para_init 05C1                  __end_of_ble_receive 1967  
                     ??_rtc_get_hour 0034                  __end_of_ble_ota_ack 1453  
                     ??_rtc_get_week 0034                       led_para_init@i 0047  
                     led_para_init@j 0046                  __end_of_ble_process 1782  
                   _led_turnoff_ramp 07CF                __end_of_led_second_cb 0E4A  
                     __end_of___bmul 1773              __size_of_rtc_get_minute 0003  
            __size_of_rtc_get_second 0003                       __end_of___lmul 130E  
      __size_of_led_thunder1_process 004C                       __end_of___wmul 1F20  
              __end_of_led_save_para 0EA8        __size_of_led_thunder2_process 0094  
    __size_of_led_set_period_dynamic 0028                __end_of_led_set_cycle 0D81  
                __size_of_ble_decode 00D5                        ??_led_set_pro 0037  
                     __end_of_memset 06BC        __size_of_led_thunder3_process 00B3  
              __end_of_led_set_power 079F                        ??_led_preview 0034  
                      ??_led_process 007C                     ??_pwm1_load_duty 0072  
                     __end_of_strlen 1713                i1___lmul@multiplicand 0074  
                  __size_ofi1___lmul 0025                          __end_ofPL10 06CB  
                        __end_ofPL20 0B51                          __end_ofPL12 13F0  
                        __end_ofPL30 0B5A                          __end_ofPL22 17DE  
                        __end_ofPL14 06DD                          __end_ofPL40 0F66  
                        __end_ofPL32 13FA                          __end_ofPL24 1F64  
                        __end_ofPL16 0B4B                          __end_ofPL50 07FB  
                        __end_ofPL42 0706                          __end_ofPL34 06FE  
                        __end_ofPL26 1F6A                          __end_ofPL18 1F4C  
                        __end_ofPL60 0B7A                          __end_ofPL52 1F88  
                        __end_ofPL44 0B71                          __end_ofPL36 1F7E  
                        __end_ofPL28 06F4                          __end_ofPL70 0737  
                        __end_ofPL62 1BE9                          __end_ofPL54 0720  
                        __end_ofPL46 0718                          __end_ofPL38 0B5F  
                        __end_ofPL80 1116                          __end_ofPL72 0B8E  
                        __end_ofPL64 0728                          __end_ofPL56 1F99  
                        __end_ofPL48 0871                          __end_ofPL90 0BB1  
                        __end_ofPL82 0BA4                          __end_ofPL74 0B92  
                        __end_ofPL66 1FAE                          __end_ofPL58 1F9F  
                        __end_ofPL92 0F6E                          __end_ofPL84 1405  
                        __end_ofPL76 1FBC                          __end_ofPL68 0B88  
                        __end_ofPL94 1C40                          __end_ofPL86 073E  
                        __end_ofPL78 0B98                          __end_ofPL96 0BBC  
                        __end_ofPL88 0BAA                          __end_ofPL98 1FC2  
                start_initialization 1453                        ??_led_turnoff 0034  
       __size_of_led_dynamic_process 00CD               eeprom_read_buffer@addr 0039  
                         ?i1___lldiv 0020               eeprom_read_buffer@pbuf 0035  
                    led_sunrs_init@i 0039                     ??_pwm2_load_duty 0072  
                   led_set_preview@i 0039                 _led_allcolor_process 0964  
                   ??_pwm3_load_duty 0072                        _ble_send_data 164A  
        ?_led_period_dynamic_process 003A                   led_sunrs_init@flag 0038  
                led_set_preview@pbuf 0036                             ??___bmul 0035  
                           ??___lmul 003C                             ??___wmul 0038  
                __end_of_eeprom_read 05E7                          _CCPTMRSbits 029F  
                   ??_pwm4_load_duty 0072                          __pdataBANK2 0120  
                        __pdataBANK3 01D4                             ??_memset 003A  
                           ??_strlen 0037                       _dynamic_period 00C8  
                  ??_led_cloud1_init 0034                       _current_bright 0048  
                  ??_led_cloud2_init 0034                    ??_led_cloud3_init 0034  
                  ?_rtc_is_leap_year 0075                    ??_led_cloud4_init 0034  
                  _led_thunder1_init 19D2                      led_turnon_max@i 0034  
                  _led_thunder2_init 0800                          __pbssBIGRAM 237E  
                  _led_thunder3_init 19CA                          __pbssCOMMON 007C  
                     led_set_cycle@i 003E                            ___latbits 0002  
                   ble_send_data@len 003C           __end_of_ble_transmit_start 1767  
                      __pcstackBANK0 0020                        __pcstackBANK1 00A0  
                      __pcstackBANK3 01A0                     ble_send_data@xor 003B  
                 ??_rtc_is_leap_year 0077                    ??_led_find_device 0035  
                 ?_led_thunder1_init 0070                   ?_led_thunder2_init 0070  
                 ?_led_thunder3_init 0070               ??_ble_ready_to_receive 0034  
                __end_of_led_set_pro 0FE1                    __size_of_decrease 0027  
                     led_set_pro@len 003F                    __size_of_ble_init 005B  
                      ??_eusart_init 0036                  __end_of_led_preview 0E61  
                __end_of_led_process 0897               ??_ble_receive_complete 0034  
              __size_of_eusart_write 0024                     i1___lmul@product 0078  
              ?_led_allcolor_process 0070                          _ble_receive 1955  
       __size_of_led_prepare_to_save 0005                     eeprom_write@addr 0035  
                  __size_of_app_init 0025                          _ble_ota_ack 1441  
             _led_set_period_dynamic 1B53                  __end_of_led_turnoff 0E7C  
                   eeprom_write@byte 0034                  ??_led_thunder1_init 0034  
                ??_led_thunder2_init 0034                  ??_led_thunder3_init 0034  
                        _ble_process 1773                    __size_of_led_init 0002  
                  __size_of_led_ramp 003D                       ?_ble_send_data 0070  
                   _ble_receive_stop 17CD                         _dynamic_rise 00CC  
                          __pnvBANK1 00D0                            __pnvBANK2 015C  
               led_pro_process@index 01A0                    __size_of_increase 0026  
               led_pro_process@start 01BA                     ___lwdiv@dividend 0036  
                  __size_of_tmr0_isr 000C                      led_decrease@chn 0042  
                  __size_of_tmr2_isr 000C                            __ptext100 19DF  
                          __ptext101 19E5                            __ptext110 1CAB  
                          __ptext102 19EB                            __ptext111 1B14  
                          __ptext103 09F7                            __ptext112 192C  
                          __ptext104 0AAA                            __ptext113 1955  
                          __ptext105 09AB                            __ptext106 0964  
                  __size_of_osc_init 000A                            __ptext107 19A9  
                          __ptext108 1C46                            __ptext109 1C8F  
                           ?___awmod 0034                             ?___lldiv 0040  
                           ?___lwdiv 0034                             ?___lwmod 0070  
                  __size_of_rtc_init 000A                         decrease@delt 0036  
          __end_of_led_thunder1_init 19D9            __end_of_led_thunder2_init 0809  
          __end_of_led_thunder3_init 19D2                         decrease@psrc 0034  
                          __pswtext1 1896                             ?_app_isr 0070  
                          __pswtext2 1900                            __pswtext3 18DC  
                          __pswtext4 1800                            __pswtext5 1916  
                          __pswtext6 19C0                        _target_bright 014D  
                           _BAUD1CON 019F                         _eusart_write 16DD  
           __end_of_led_stop_preview 1000           __end_of_eusart_receive_isr 1942  
           __size_of_ble_check_devid 0048             __size_of_led_set_dynamic 0047  
               __end_of_rtc_get_hour 0E64                            _gpio_init 14F1  
               __end_of_rtc_get_week 1F23                             ?_rtc_set 0070  
                        ??i1___lldiv 007C            __size_of_led_auto_process 019A  
                   ___lwdiv@quotient 0038             __size_of_led_set_preview 003C  
                       ??_ble_decode 0043                       ___wmul@product 0038  
                           _LATBbits 010D                             _LATCbits 010E  
        __end_of_eusart_transmit_isr 1B2E                            clear_ram0 1991  
                          _pwm1_init 153F                          _eeprom_read 05D8  
                          _tmr0_init 1572                            _pwm2_init 1549  
                           _PIE0bits 0090                             _PIE1bits 0091  
                          _pwm3_init 1552                  __end_of_eusart_init 17C3  
                          _tmr2_init 1584                            _pwm4_init 155D  
                          _pwm5_init 1568                   _eeprom_read_buffer 05C1  
                   led_pro_process@i 01C8                     led_pro_process@j 01C5  
                           _PIR0bits 0010                             _PIR1bits 0011  
                led_auto_process@sec 00B6                  led_auto_process@val 01A0  
                     _rtc_get_minute 0E64                       _rtc_get_second 0E67  
                ?_eeprom_read_buffer 0035                  pwm1_load_duty@value 0070  
           __size_of_led_pro_process 01BA                      _led_calc_bright 130E  
                  _led_start_preview 0FF7         __size_of_eeprom_write_buffer 0015  
                           i1___lmul 1B2E                    ___wmul@multiplier 0034  
                        _led_set_pro 0FB0                   __end_of_ble_decode 0CD9  
                 ?_led_start_preview 0070                          _led_preview 0E5A  
                        _led_process 088E                 led_dynamic_process@i 0033  
                          _tx_remain 0160                           ?_gpio_init 0070  
                        _led_turnoff 0E6A                            led_ramp@i 0078  
             ??_led_allcolor_process 0070                  ??_led_start_preview 0034  
           __end_of_led_turnoff_ramp 07DA            __size_of_led_dynamic_init 0012  
                  ___lmul@multiplier 0034            __size_of_led_para_default 00BE  
               ??_eeprom_read_buffer 0038                        ??_rtc_process 0077  
                    ??_ble_send_data 0037                eeprom_read_buffer@len 0037  
                  ?_rtc_second_ready 0070             __size_of_led_start_flash 0005  
                         ?_pwm1_init 0070                           ?_tmr0_init 0034  
                         ?_pwm2_init 0070                           ?_pwm3_init 0070  
                         ?_tmr2_init 0034                           ?_pwm4_init 0070  
                         ?_pwm5_init 0070                   ??_rtc_second_ready 0034  
                _led_dynamic_process 0897               __end_of_rtc_get_minute 0E67  
             __end_of_rtc_get_second 0E6A            __end_of_led_start_preview 0FFC  
                   __size_of___awmod 0039                     __size_of___lldiv 0051  
            __size_of_led_moon1_init 000F              __size_of_led_moon2_init 000A  
            __size_of_led_moon3_init 000C                      ble_send_cmd@ack 003C  
                   __size_of___lwdiv 0025                      ble_send_cmd@cmd 0039  
                   __size_of___lwmod 0020                      ble_send_cmd@cnt 0045  
                    ble_send_cmd@idx 0047                      ble_send_cmd@len 0044  
                    ble_send_cmd@rev 0046           __size_of_led_thunder1_init 0007  
         __size_of_led_thunder2_init 0009           __size_of_led_thunder3_init 0008  
                   __size_of_app_isr 002A                          _dynamic_chn 0052  
                        _dynamic_max 0054                          _dynamic_min 0058  
                      ?_ble_send_cmd 0039                  led_pro_process@flag 01B3  
                         _T0CON0bits 0017                  pwm2_load_duty@value 0070  
                           _decrease 1080                             _checksum 00CD  
               ?_led_dynamic_process 0070                             _ble_init 1595  
                    ___lwdiv@divisor 0034                      ___lwdiv@counter 003A  
                           __ptext10 1D51                             __ptext11 0E5A  
                           __ptext20 1368                             __ptext12 1CD0  
                           __ptext21 12B0                             __ptext13 1F20  
                           __ptext30 1790                             __ptext22 163E  
                           __ptext14 0E4A                             __ptext31 1789  
                           __ptext23 0430                             __ptext15 0E7C  
                           __ptext40 0F74                             __ptext32 1782  
                           __ptext24 05E7                             __ptext16 0E6A  
                           __ptext41 0772                             __ptext33 0C04  
                           __ptext25 06A5                             __ptext17 1116  
                           __ptext50 0809                             __ptext42 1B53  
                           __ptext34 0FFC                             __ptext26 05C1  
                           __ptext18 130E                             __ptext51 1976  
                           __ptext43 079F                             __ptext35 0FF7  
                           __ptext27 05D8                             __ptext19 12E9  
                           __ptext60 0D59                             __ptext52 1BD7  
                           __ptext44 07DA                             __ptext36 0DE2  
                           __ptext28 1773                             __ptext61 0CD9  
                           __ptext53 1BAE                             __ptext45 07CF  
                           __ptext37 0DDF                             __ptext29 17CD  
                           __ptext70 1767                             __ptext62 0D34  
                           __ptext54 0813                             __ptext46 0D86  
                           __ptext38 0FE1                             __ptext71 1441  
                           __ptext63 1BEE                             __ptext55 1BBA  
                           __ptext47 0EE7                             __ptext39 0FB0  
                           __ptext80 14CC                             __ptext72 17C3  
                           __ptext64 10A7                             __ptext56 1BA8  
                           __ptext48 0DCD                             __ptext81 1584  
                           __ptext73 175B                             __ptext65 10E7  
                           __ptext57 0800                             __ptext49 1BCB  
                           __ptext90 17A5                             __ptext82 1572  
                           __ptext74 1F0B                             __ptext66 1042  
                           __ptext58 19D2                             __ptext83 1568  
                           __ptext75 1595                             __ptext67 0D81  
                           __ptext59 19CA                             __ptext92 199D  
                           __ptext84 155D                             __ptext76 1713  
                           __ptext68 1080                             __ptext93 0887  
                           __ptext85 1552                             __ptext77 15F0  
                           __ptext69 164A                             __ptext94 088E  
                           __ptext86 1549                             __ptext78 1701  
                           __ptext95 0823                             __ptext87 153F  
                           __ptext79 16DD                             __ptext96 0897  
                           __ptext88 1535                             __ptext97 1B2E  
                           __ptext89 14F1                             __ptext98 1003  
                           __ptext99 19D9                             _app_init 14CC  
                   __size_of_rtc_set 0016         __end_of_led_thunder1_process 09F7  
                        decrease@min 0037      led_period_dynamic_process@start 0040  
                        _eusart_init 17A5                             _led_init 163E  
                           _led_ramp 0823         __end_of_led_thunder2_process 0B3E  
            __size_of_led_set_bright 004A                    ??_ble_check_devid 00A0  
                           _increase 10E7              __size_of_led_set_custom 005B  
       __end_of_led_thunder3_process 0AAA                    ??_led_set_dynamic 003C  
                      __size_of_main 0019                  led_dynamic_init@dyn 0034  
                  ??_led_set_preview 0034                             _tmr0_isr 19A9  
                           _tmr2_isr 199D                       ble_receive@rcv 0070  
                           _osc_init 1535                  __end_of_rtc_process 1C8F  
            __end_of_led_calc_bright 1368                           _RC1STAbits 019D  
                 led_auto_process@ct 00B4                   led_auto_process@dt 01C7  
                 led_auto_process@et 01CC                   led_auto_process@st 01CF  
                 led_auto_process@tr 01B8                           _RB4PPSbits 0E9C  
                    _led_cloud1_init 1BBA                      ?_rtc_get_minute 0070  
                    ?_rtc_get_second 0070                      _led_cloud2_init 0813  
                    _led_cloud3_init 1BAE                      _led_cloud4_init 1BD7  
                         _RC3PPSbits 0EA3                             _rtc_init 1640  
                         _RC4PPSbits 0EA4                             int$flags 007E  
                         _RC5PPSbits 0EA5                           _RC6PPSbits 0EA6  
                    _led_find_device 0E4A                           _RC7PPSbits 0EA7  
           __size_of_led_turnon_ramp 001A                  _led_prepare_to_save 0D81  
              __size_of_rtc_get_hour 0003                __size_of_rtc_get_week 0003  
           __end_of_ble_receive_stop 17D4                       ??_ble_send_cmd 003B  
              ??_led_dynamic_process 002D                           _INTCONbits 000B  
                        _NVMCON1bits 0895                    ??_led_pro_process 00B7  
                        ??_gpio_init 0034               __size_of_led_para_init 0191  
                        _tmr0_isr_cb 00D0                     _led_auto_process 1116  
                           memset@p1 0034              ?_led_set_period_dynamic 0070  
                        _tmr2_isr_cb 015E                       ble_send_data@i 003F  
                     ble_send_data@p 003D                         ?_ble_receive 0070  
                           intlevel1 0000                 ?_led_prepare_to_save 0070  
                pwm3_load_duty@value 0070                         ?_ble_ota_ack 0070  
             __size_of_led_second_cb 005D                   led_pro_process@end 01BC  
                 led_pro_process@sec 00B6                   led_pro_process@tmp 01AA  
                   ___lwmod@dividend 0072                         ?_ble_process 0070  
             __size_of_led_save_para 0016                     ___lldiv@dividend 0044  
          __size_of_rtc_is_leap_year 001C                          ??_pwm1_init 0034  
            led_calc_bright@duration 00A6               __size_of_led_set_cycle 0028  
                        ??_tmr0_init 0036                          ??_pwm2_init 0034  
                 _ble_transmit_start 175B                    _tmr2_isr_callback 0887  
                        ??_pwm3_init 0034                          ??_tmr2_init 0036  
                        ??_pwm4_init 0034                          _PPSLOCKbits 0E0F  
                        ??_pwm5_init 0034              __size_of_led_sunrs_init 0079  
             __size_of_led_set_power 002D                led_auto_process@count 01CB  
                 ?_tmr2_isr_callback 0070                    led_auto_process@i 01D3  
                  led_auto_process@j 01C6                    led_auto_process@k 01CE  
                  led_auto_process@p 01D1                         _rtc_get_hour 0E61  
                       _rtc_get_week 1F20              __size_of_led_turnon_max 0016  
                  ??_led_start_flash 0034                             rtc_set@i 0035  
                ?_ble_transmit_start 0070           __size_of_led_start_preview 0005  
                ??_tmr2_isr_callback 007C                        __pstringtext1 18BA  
                      __pstringtext2 1942                        __pstringtext3 1967  
                      __pstringtext4 19B5                        __pstringtext5 0000  
                   ___lldiv@quotient 00A0                      ___lwmod@divisor 0070  
                  ?_led_stop_preview 0070                             strlen@cp 0037  
                  _ble_transmit_stop 17C3                      ___lwmod@counter 0074  
     __end_of_led_set_period_dynamic 1B7B                    _dynamic_func_init 01D4  
                 ??_led_stop_preview 0034                   ?_ble_transmit_stop 0070  
               ??_ble_transmit_start 0034                     _led_dynamic_init 0DCD  
                   _led_para_default 05E7                ??_led_prepare_to_save 0034  
      __size_of_ble_ready_to_receive 0007                eusart_receive_isr@rcv 0071  
            __size_of_pwm1_load_duty 0006        __size_of_ble_receive_complete 0007  
                        _rtc_process 1C46                led_calc_bright@period 00B0  
          __end_of_tmr2_isr_callback 088E                  _eeprom_write_buffer 0EA8  
                        _PWMTMRSbits 061F                        ?_eeprom_write 0034  
            __end_of_led_cloud1_init 1BCB              __end_of_led_cloud2_init 081E  
              led_calc_bright@result 00AC              __end_of_led_cloud3_init 1BBA  
            __end_of_led_cloud4_init 1BE4                  ??_ble_transmit_stop 0034  
                   led_increase@delt 003D                   _eusart_receive_isr 192C  
                       ?_eeprom_read 0070              __end_of_led_find_device 0E5A  
                    led_increase@chn 0042                        _led_load_duty 013D  
                pwm4_load_duty@value 0070                        _led_para_init 0430  
            __size_of_pwm2_load_duty 0006                     ?_led_calc_bright 00A5  

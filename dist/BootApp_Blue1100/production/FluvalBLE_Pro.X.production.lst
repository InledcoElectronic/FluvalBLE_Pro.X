

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 10 16:03:02 2018

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text20,local,class=CODE,merge=1,delta=2
    25                           	psect	text24,local,class=CODE,merge=1,delta=2
    26                           	psect	text36,local,class=CODE,merge=1,delta=2
    27                           	psect	swtext1,local,class=CONST,delta=2
    28                           	psect	text43,local,class=CODE,merge=1,delta=2
    29                           	psect	text44,local,class=CODE,merge=1,delta=2
    30                           	psect	text52,local,class=CODE,merge=1,delta=2
    31                           	psect	text55,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text82,local,class=CODE,merge=1,delta=2
    34                           	psect	text83,local,class=CODE,merge=1,delta=2
    35                           	psect	text86,local,class=CODE,merge=1,delta=2
    36                           	psect	text87,local,class=CODE,merge=1,delta=2
    37                           	psect	text88,local,class=CODE,merge=1,delta=2
    38                           	psect	text89,local,class=CODE,merge=1,delta=2
    39                           	psect	text95,local,class=CODE,merge=1,delta=2
    40                           	psect	text126,local,class=CODE,merge=1,delta=2
    41                           	psect	text127,local,class=CODE,merge=1,delta=2
    42                           	psect	text130,local,class=CODE,merge=1,delta=2
    43                           	psect	text131,local,class=CODE,merge=1,delta=2
    44                           	psect	text132,local,class=CODE,merge=1,delta=2
    45                           	psect	pa_nodes0,global,class=CODE,delta=2
    46                           	dabs	1,0x620,48
    47                           	dabs	1,0x5AF,65
    48                           	dabs	1,0x237F,0,_m_led_para
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 1.45
    52                           ; Generated 16/11/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F18345 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0097                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  0111                     	;# 
   138  0112                     	;# 
   139  0113                     	;# 
   140  0114                     	;# 
   141  0115                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0118                     	;# 
   145  0119                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  018E                     	;# 
   149  0197                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019D                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019E                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  020D                     	;# 
   177  020E                     	;# 
   178  0211                     	;# 
   179  0211                     	;# 
   180  0212                     	;# 
   181  0212                     	;# 
   182  0213                     	;# 
   183  0213                     	;# 
   184  0214                     	;# 
   185  0214                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0216                     	;# 
   191  0216                     	;# 
   192  0217                     	;# 
   193  0217                     	;# 
   194  0219                     	;# 
   195  021A                     	;# 
   196  021B                     	;# 
   197  021C                     	;# 
   198  021D                     	;# 
   199  021D                     	;# 
   200  021E                     	;# 
   201  021F                     	;# 
   202  028C                     	;# 
   203  028D                     	;# 
   204  028E                     	;# 
   205  0291                     	;# 
   206  0291                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0294                     	;# 
   210  0295                     	;# 
   211  0295                     	;# 
   212  0296                     	;# 
   213  0297                     	;# 
   214  0298                     	;# 
   215  029F                     	;# 
   216  030C                     	;# 
   217  030D                     	;# 
   218  030E                     	;# 
   219  0311                     	;# 
   220  0311                     	;# 
   221  0312                     	;# 
   222  0313                     	;# 
   223  0314                     	;# 
   224  0315                     	;# 
   225  0315                     	;# 
   226  0316                     	;# 
   227  0317                     	;# 
   228  0318                     	;# 
   229  038C                     	;# 
   230  038D                     	;# 
   231  038E                     	;# 
   232  0391                     	;# 
   233  0392                     	;# 
   234  0393                     	;# 
   235  0394                     	;# 
   236  0395                     	;# 
   237  0396                     	;# 
   238  0397                     	;# 
   239  0398                     	;# 
   240  0399                     	;# 
   241  039A                     	;# 
   242  039C                     	;# 
   243  039D                     	;# 
   244  039E                     	;# 
   245  039F                     	;# 
   246  0411                     	;# 
   247  0411                     	;# 
   248  0412                     	;# 
   249  0413                     	;# 
   250  0414                     	;# 
   251  0415                     	;# 
   252  0416                     	;# 
   253  0417                     	;# 
   254  0418                     	;# 
   255  0418                     	;# 
   256  0419                     	;# 
   257  041A                     	;# 
   258  041B                     	;# 
   259  041C                     	;# 
   260  041D                     	;# 
   261  041E                     	;# 
   262  041F                     	;# 
   263  0498                     	;# 
   264  0498                     	;# 
   265  0499                     	;# 
   266  049A                     	;# 
   267  049B                     	;# 
   268  049B                     	;# 
   269  049C                     	;# 
   270  049D                     	;# 
   271  049E                     	;# 
   272  049F                     	;# 
   273  0617                     	;# 
   274  0618                     	;# 
   275  0619                     	;# 
   276  0619                     	;# 
   277  061A                     	;# 
   278  061B                     	;# 
   279  061C                     	;# 
   280  061C                     	;# 
   281  061F                     	;# 
   282  0691                     	;# 
   283  0692                     	;# 
   284  0693                     	;# 
   285  0694                     	;# 
   286  0695                     	;# 
   287  0696                     	;# 
   288  0697                     	;# 
   289  0698                     	;# 
   290  0699                     	;# 
   291  0711                     	;# 
   292  0712                     	;# 
   293  0713                     	;# 
   294  0714                     	;# 
   295  0715                     	;# 
   296  0716                     	;# 
   297  0717                     	;# 
   298  0718                     	;# 
   299  0719                     	;# 
   300  0891                     	;# 
   301  0891                     	;# 
   302  0891                     	;# 
   303  0891                     	;# 
   304  0891                     	;# 
   305  0891                     	;# 
   306  0892                     	;# 
   307  0892                     	;# 
   308  0892                     	;# 
   309  0893                     	;# 
   310  0893                     	;# 
   311  0893                     	;# 
   312  0893                     	;# 
   313  0893                     	;# 
   314  0893                     	;# 
   315  0894                     	;# 
   316  0894                     	;# 
   317  0894                     	;# 
   318  0895                     	;# 
   319  0895                     	;# 
   320  0895                     	;# 
   321  0896                     	;# 
   322  0896                     	;# 
   323  0896                     	;# 
   324  089B                     	;# 
   325  0911                     	;# 
   326  0912                     	;# 
   327  0913                     	;# 
   328  0914                     	;# 
   329  0915                     	;# 
   330  0916                     	;# 
   331  0918                     	;# 
   332  0919                     	;# 
   333  091A                     	;# 
   334  091B                     	;# 
   335  091C                     	;# 
   336  091D                     	;# 
   337  091E                     	;# 
   338  091F                     	;# 
   339  0E0F                     	;# 
   340  0E10                     	;# 
   341  0E11                     	;# 
   342  0E12                     	;# 
   343  0E13                     	;# 
   344  0E14                     	;# 
   345  0E15                     	;# 
   346  0E16                     	;# 
   347  0E17                     	;# 
   348  0E18                     	;# 
   349  0E19                     	;# 
   350  0E1A                     	;# 
   351  0E1B                     	;# 
   352  0E1C                     	;# 
   353  0E1D                     	;# 
   354  0E1E                     	;# 
   355  0E1F                     	;# 
   356  0E20                     	;# 
   357  0E21                     	;# 
   358  0E22                     	;# 
   359  0E24                     	;# 
   360  0E25                     	;# 
   361  0E28                     	;# 
   362  0E29                     	;# 
   363  0E2A                     	;# 
   364  0E2B                     	;# 
   365  0E2C                     	;# 
   366  0E2D                     	;# 
   367  0E2E                     	;# 
   368  0E2F                     	;# 
   369  0E90                     	;# 
   370  0E91                     	;# 
   371  0E92                     	;# 
   372  0E94                     	;# 
   373  0E95                     	;# 
   374  0E9C                     	;# 
   375  0E9D                     	;# 
   376  0E9E                     	;# 
   377  0E9F                     	;# 
   378  0EA0                     	;# 
   379  0EA1                     	;# 
   380  0EA2                     	;# 
   381  0EA3                     	;# 
   382  0EA4                     	;# 
   383  0EA5                     	;# 
   384  0EA6                     	;# 
   385  0EA7                     	;# 
   386  0F0F                     	;# 
   387  0F10                     	;# 
   388  0F11                     	;# 
   389  0F12                     	;# 
   390  0F13                     	;# 
   391  0F14                     	;# 
   392  0F15                     	;# 
   393  0F16                     	;# 
   394  0F17                     	;# 
   395  0F18                     	;# 
   396  0F19                     	;# 
   397  0F1A                     	;# 
   398  0F1B                     	;# 
   399  0F1C                     	;# 
   400  0F1D                     	;# 
   401  0F1E                     	;# 
   402  0F1F                     	;# 
   403  0F20                     	;# 
   404  0F21                     	;# 
   405  0F22                     	;# 
   406  0F23                     	;# 
   407  0F24                     	;# 
   408  0F25                     	;# 
   409  0F26                     	;# 
   410  0F27                     	;# 
   411  0F28                     	;# 
   412  0F29                     	;# 
   413  0F2A                     	;# 
   414  0F2B                     	;# 
   415  0F2C                     	;# 
   416  0F2D                     	;# 
   417  0F2E                     	;# 
   418  0F2F                     	;# 
   419  0F30                     	;# 
   420  0F31                     	;# 
   421  0F32                     	;# 
   422  0F33                     	;# 
   423  0F34                     	;# 
   424  0F35                     	;# 
   425  0F36                     	;# 
   426  0F37                     	;# 
   427  0FE4                     	;# 
   428  0FE5                     	;# 
   429  0FE6                     	;# 
   430  0FE7                     	;# 
   431  0FE8                     	;# 
   432  0FE9                     	;# 
   433  0FEA                     	;# 
   434  0FEB                     	;# 
   435  0FED                     	;# 
   436  0FEE                     	;# 
   437  0FEF                     	;# 
   438  0000                     	;# 
   439  0001                     	;# 
   440  0002                     	;# 
   441  0003                     	;# 
   442  0004                     	;# 
   443  0005                     	;# 
   444  0006                     	;# 
   445  0007                     	;# 
   446  0008                     	;# 
   447  0009                     	;# 
   448  000A                     	;# 
   449  000B                     	;# 
   450  000C                     	;# 
   451  000D                     	;# 
   452  000E                     	;# 
   453  0010                     	;# 
   454  0011                     	;# 
   455  0012                     	;# 
   456  0013                     	;# 
   457  0014                     	;# 
   458  0015                     	;# 
   459  0015                     	;# 
   460  0016                     	;# 
   461  0016                     	;# 
   462  0017                     	;# 
   463  0018                     	;# 
   464  0019                     	;# 
   465  0019                     	;# 
   466  001A                     	;# 
   467  001B                     	;# 
   468  001C                     	;# 
   469  001D                     	;# 
   470  001E                     	;# 
   471  001F                     	;# 
   472  008C                     	;# 
   473  008D                     	;# 
   474  008E                     	;# 
   475  0090                     	;# 
   476  0091                     	;# 
   477  0092                     	;# 
   478  0093                     	;# 
   479  0094                     	;# 
   480  0097                     	;# 
   481  009B                     	;# 
   482  009B                     	;# 
   483  009C                     	;# 
   484  009D                     	;# 
   485  009E                     	;# 
   486  009F                     	;# 
   487  010C                     	;# 
   488  010D                     	;# 
   489  010E                     	;# 
   490  0111                     	;# 
   491  0112                     	;# 
   492  0113                     	;# 
   493  0114                     	;# 
   494  0115                     	;# 
   495  0116                     	;# 
   496  0117                     	;# 
   497  0118                     	;# 
   498  0119                     	;# 
   499  018C                     	;# 
   500  018D                     	;# 
   501  018E                     	;# 
   502  0197                     	;# 
   503  0199                     	;# 
   504  0199                     	;# 
   505  0199                     	;# 
   506  019A                     	;# 
   507  019A                     	;# 
   508  019A                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019B                     	;# 
   514  019C                     	;# 
   515  019C                     	;# 
   516  019C                     	;# 
   517  019D                     	;# 
   518  019D                     	;# 
   519  019D                     	;# 
   520  019E                     	;# 
   521  019E                     	;# 
   522  019E                     	;# 
   523  019F                     	;# 
   524  019F                     	;# 
   525  019F                     	;# 
   526  019F                     	;# 
   527  019F                     	;# 
   528  020C                     	;# 
   529  020D                     	;# 
   530  020E                     	;# 
   531  0211                     	;# 
   532  0211                     	;# 
   533  0212                     	;# 
   534  0212                     	;# 
   535  0213                     	;# 
   536  0213                     	;# 
   537  0214                     	;# 
   538  0214                     	;# 
   539  0215                     	;# 
   540  0215                     	;# 
   541  0215                     	;# 
   542  0215                     	;# 
   543  0216                     	;# 
   544  0216                     	;# 
   545  0217                     	;# 
   546  0217                     	;# 
   547  0219                     	;# 
   548  021A                     	;# 
   549  021B                     	;# 
   550  021C                     	;# 
   551  021D                     	;# 
   552  021D                     	;# 
   553  021E                     	;# 
   554  021F                     	;# 
   555  028C                     	;# 
   556  028D                     	;# 
   557  028E                     	;# 
   558  0291                     	;# 
   559  0291                     	;# 
   560  0292                     	;# 
   561  0293                     	;# 
   562  0294                     	;# 
   563  0295                     	;# 
   564  0295                     	;# 
   565  0296                     	;# 
   566  0297                     	;# 
   567  0298                     	;# 
   568  029F                     	;# 
   569  030C                     	;# 
   570  030D                     	;# 
   571  030E                     	;# 
   572  0311                     	;# 
   573  0311                     	;# 
   574  0312                     	;# 
   575  0313                     	;# 
   576  0314                     	;# 
   577  0315                     	;# 
   578  0315                     	;# 
   579  0316                     	;# 
   580  0317                     	;# 
   581  0318                     	;# 
   582  038C                     	;# 
   583  038D                     	;# 
   584  038E                     	;# 
   585  0391                     	;# 
   586  0392                     	;# 
   587  0393                     	;# 
   588  0394                     	;# 
   589  0395                     	;# 
   590  0396                     	;# 
   591  0397                     	;# 
   592  0398                     	;# 
   593  0399                     	;# 
   594  039A                     	;# 
   595  039C                     	;# 
   596  039D                     	;# 
   597  039E                     	;# 
   598  039F                     	;# 
   599  0411                     	;# 
   600  0411                     	;# 
   601  0412                     	;# 
   602  0413                     	;# 
   603  0414                     	;# 
   604  0415                     	;# 
   605  0416                     	;# 
   606  0417                     	;# 
   607  0418                     	;# 
   608  0418                     	;# 
   609  0419                     	;# 
   610  041A                     	;# 
   611  041B                     	;# 
   612  041C                     	;# 
   613  041D                     	;# 
   614  041E                     	;# 
   615  041F                     	;# 
   616  0498                     	;# 
   617  0498                     	;# 
   618  0499                     	;# 
   619  049A                     	;# 
   620  049B                     	;# 
   621  049B                     	;# 
   622  049C                     	;# 
   623  049D                     	;# 
   624  049E                     	;# 
   625  049F                     	;# 
   626  0617                     	;# 
   627  0618                     	;# 
   628  0619                     	;# 
   629  0619                     	;# 
   630  061A                     	;# 
   631  061B                     	;# 
   632  061C                     	;# 
   633  061C                     	;# 
   634  061F                     	;# 
   635  0691                     	;# 
   636  0692                     	;# 
   637  0693                     	;# 
   638  0694                     	;# 
   639  0695                     	;# 
   640  0696                     	;# 
   641  0697                     	;# 
   642  0698                     	;# 
   643  0699                     	;# 
   644  0711                     	;# 
   645  0712                     	;# 
   646  0713                     	;# 
   647  0714                     	;# 
   648  0715                     	;# 
   649  0716                     	;# 
   650  0717                     	;# 
   651  0718                     	;# 
   652  0719                     	;# 
   653  0891                     	;# 
   654  0891                     	;# 
   655  0891                     	;# 
   656  0891                     	;# 
   657  0891                     	;# 
   658  0891                     	;# 
   659  0892                     	;# 
   660  0892                     	;# 
   661  0892                     	;# 
   662  0893                     	;# 
   663  0893                     	;# 
   664  0893                     	;# 
   665  0893                     	;# 
   666  0893                     	;# 
   667  0893                     	;# 
   668  0894                     	;# 
   669  0894                     	;# 
   670  0894                     	;# 
   671  0895                     	;# 
   672  0895                     	;# 
   673  0895                     	;# 
   674  0896                     	;# 
   675  0896                     	;# 
   676  0896                     	;# 
   677  089B                     	;# 
   678  0911                     	;# 
   679  0912                     	;# 
   680  0913                     	;# 
   681  0914                     	;# 
   682  0915                     	;# 
   683  0916                     	;# 
   684  0918                     	;# 
   685  0919                     	;# 
   686  091A                     	;# 
   687  091B                     	;# 
   688  091C                     	;# 
   689  091D                     	;# 
   690  091E                     	;# 
   691  091F                     	;# 
   692  0E0F                     	;# 
   693  0E10                     	;# 
   694  0E11                     	;# 
   695  0E12                     	;# 
   696  0E13                     	;# 
   697  0E14                     	;# 
   698  0E15                     	;# 
   699  0E16                     	;# 
   700  0E17                     	;# 
   701  0E18                     	;# 
   702  0E19                     	;# 
   703  0E1A                     	;# 
   704  0E1B                     	;# 
   705  0E1C                     	;# 
   706  0E1D                     	;# 
   707  0E1E                     	;# 
   708  0E1F                     	;# 
   709  0E20                     	;# 
   710  0E21                     	;# 
   711  0E22                     	;# 
   712  0E24                     	;# 
   713  0E25                     	;# 
   714  0E28                     	;# 
   715  0E29                     	;# 
   716  0E2A                     	;# 
   717  0E2B                     	;# 
   718  0E2C                     	;# 
   719  0E2D                     	;# 
   720  0E2E                     	;# 
   721  0E2F                     	;# 
   722  0E90                     	;# 
   723  0E91                     	;# 
   724  0E92                     	;# 
   725  0E94                     	;# 
   726  0E95                     	;# 
   727  0E9C                     	;# 
   728  0E9D                     	;# 
   729  0E9E                     	;# 
   730  0E9F                     	;# 
   731  0EA0                     	;# 
   732  0EA1                     	;# 
   733  0EA2                     	;# 
   734  0EA3                     	;# 
   735  0EA4                     	;# 
   736  0EA5                     	;# 
   737  0EA6                     	;# 
   738  0EA7                     	;# 
   739  0F0F                     	;# 
   740  0F10                     	;# 
   741  0F11                     	;# 
   742  0F12                     	;# 
   743  0F13                     	;# 
   744  0F14                     	;# 
   745  0F15                     	;# 
   746  0F16                     	;# 
   747  0F17                     	;# 
   748  0F18                     	;# 
   749  0F19                     	;# 
   750  0F1A                     	;# 
   751  0F1B                     	;# 
   752  0F1C                     	;# 
   753  0F1D                     	;# 
   754  0F1E                     	;# 
   755  0F1F                     	;# 
   756  0F20                     	;# 
   757  0F21                     	;# 
   758  0F22                     	;# 
   759  0F23                     	;# 
   760  0F24                     	;# 
   761  0F25                     	;# 
   762  0F26                     	;# 
   763  0F27                     	;# 
   764  0F28                     	;# 
   765  0F29                     	;# 
   766  0F2A                     	;# 
   767  0F2B                     	;# 
   768  0F2C                     	;# 
   769  0F2D                     	;# 
   770  0F2E                     	;# 
   771  0F2F                     	;# 
   772  0F30                     	;# 
   773  0F31                     	;# 
   774  0F32                     	;# 
   775  0F33                     	;# 
   776  0F34                     	;# 
   777  0F35                     	;# 
   778  0F36                     	;# 
   779  0F37                     	;# 
   780  0FE4                     	;# 
   781  0FE5                     	;# 
   782  0FE6                     	;# 
   783  0FE7                     	;# 
   784  0FE8                     	;# 
   785  0FE9                     	;# 
   786  0FEA                     	;# 
   787  0FEB                     	;# 
   788  0FED                     	;# 
   789  0FEE                     	;# 
   790  0FEF                     	;# 
   791  0000                     	;# 
   792  0001                     	;# 
   793  0002                     	;# 
   794  0003                     	;# 
   795  0004                     	;# 
   796  0005                     	;# 
   797  0006                     	;# 
   798  0007                     	;# 
   799  0008                     	;# 
   800  0009                     	;# 
   801  000A                     	;# 
   802  000B                     	;# 
   803  000C                     	;# 
   804  000D                     	;# 
   805  000E                     	;# 
   806  0010                     	;# 
   807  0011                     	;# 
   808  0012                     	;# 
   809  0013                     	;# 
   810  0014                     	;# 
   811  0015                     	;# 
   812  0015                     	;# 
   813  0016                     	;# 
   814  0016                     	;# 
   815  0017                     	;# 
   816  0018                     	;# 
   817  0019                     	;# 
   818  0019                     	;# 
   819  001A                     	;# 
   820  001B                     	;# 
   821  001C                     	;# 
   822  001D                     	;# 
   823  001E                     	;# 
   824  001F                     	;# 
   825  008C                     	;# 
   826  008D                     	;# 
   827  008E                     	;# 
   828  0090                     	;# 
   829  0091                     	;# 
   830  0092                     	;# 
   831  0093                     	;# 
   832  0094                     	;# 
   833  0097                     	;# 
   834  009B                     	;# 
   835  009B                     	;# 
   836  009C                     	;# 
   837  009D                     	;# 
   838  009E                     	;# 
   839  009F                     	;# 
   840  010C                     	;# 
   841  010D                     	;# 
   842  010E                     	;# 
   843  0111                     	;# 
   844  0112                     	;# 
   845  0113                     	;# 
   846  0114                     	;# 
   847  0115                     	;# 
   848  0116                     	;# 
   849  0117                     	;# 
   850  0118                     	;# 
   851  0119                     	;# 
   852  018C                     	;# 
   853  018D                     	;# 
   854  018E                     	;# 
   855  0197                     	;# 
   856  0199                     	;# 
   857  0199                     	;# 
   858  0199                     	;# 
   859  019A                     	;# 
   860  019A                     	;# 
   861  019A                     	;# 
   862  019B                     	;# 
   863  019B                     	;# 
   864  019B                     	;# 
   865  019B                     	;# 
   866  019B                     	;# 
   867  019C                     	;# 
   868  019C                     	;# 
   869  019C                     	;# 
   870  019D                     	;# 
   871  019D                     	;# 
   872  019D                     	;# 
   873  019E                     	;# 
   874  019E                     	;# 
   875  019E                     	;# 
   876  019F                     	;# 
   877  019F                     	;# 
   878  019F                     	;# 
   879  019F                     	;# 
   880  019F                     	;# 
   881  020C                     	;# 
   882  020D                     	;# 
   883  020E                     	;# 
   884  0211                     	;# 
   885  0211                     	;# 
   886  0212                     	;# 
   887  0212                     	;# 
   888  0213                     	;# 
   889  0213                     	;# 
   890  0214                     	;# 
   891  0214                     	;# 
   892  0215                     	;# 
   893  0215                     	;# 
   894  0215                     	;# 
   895  0215                     	;# 
   896  0216                     	;# 
   897  0216                     	;# 
   898  0217                     	;# 
   899  0217                     	;# 
   900  0219                     	;# 
   901  021A                     	;# 
   902  021B                     	;# 
   903  021C                     	;# 
   904  021D                     	;# 
   905  021D                     	;# 
   906  021E                     	;# 
   907  021F                     	;# 
   908  028C                     	;# 
   909  028D                     	;# 
   910  028E                     	;# 
   911  0291                     	;# 
   912  0291                     	;# 
   913  0292                     	;# 
   914  0293                     	;# 
   915  0294                     	;# 
   916  0295                     	;# 
   917  0295                     	;# 
   918  0296                     	;# 
   919  0297                     	;# 
   920  0298                     	;# 
   921  029F                     	;# 
   922  030C                     	;# 
   923  030D                     	;# 
   924  030E                     	;# 
   925  0311                     	;# 
   926  0311                     	;# 
   927  0312                     	;# 
   928  0313                     	;# 
   929  0314                     	;# 
   930  0315                     	;# 
   931  0315                     	;# 
   932  0316                     	;# 
   933  0317                     	;# 
   934  0318                     	;# 
   935  038C                     	;# 
   936  038D                     	;# 
   937  038E                     	;# 
   938  0391                     	;# 
   939  0392                     	;# 
   940  0393                     	;# 
   941  0394                     	;# 
   942  0395                     	;# 
   943  0396                     	;# 
   944  0397                     	;# 
   945  0398                     	;# 
   946  0399                     	;# 
   947  039A                     	;# 
   948  039C                     	;# 
   949  039D                     	;# 
   950  039E                     	;# 
   951  039F                     	;# 
   952  0411                     	;# 
   953  0411                     	;# 
   954  0412                     	;# 
   955  0413                     	;# 
   956  0414                     	;# 
   957  0415                     	;# 
   958  0416                     	;# 
   959  0417                     	;# 
   960  0418                     	;# 
   961  0418                     	;# 
   962  0419                     	;# 
   963  041A                     	;# 
   964  041B                     	;# 
   965  041C                     	;# 
   966  041D                     	;# 
   967  041E                     	;# 
   968  041F                     	;# 
   969  0498                     	;# 
   970  0498                     	;# 
   971  0499                     	;# 
   972  049A                     	;# 
   973  049B                     	;# 
   974  049B                     	;# 
   975  049C                     	;# 
   976  049D                     	;# 
   977  049E                     	;# 
   978  049F                     	;# 
   979  0617                     	;# 
   980  0618                     	;# 
   981  0619                     	;# 
   982  0619                     	;# 
   983  061A                     	;# 
   984  061B                     	;# 
   985  061C                     	;# 
   986  061C                     	;# 
   987  061F                     	;# 
   988  0691                     	;# 
   989  0692                     	;# 
   990  0693                     	;# 
   991  0694                     	;# 
   992  0695                     	;# 
   993  0696                     	;# 
   994  0697                     	;# 
   995  0698                     	;# 
   996  0699                     	;# 
   997  0711                     	;# 
   998  0712                     	;# 
   999  0713                     	;# 
  1000  0714                     	;# 
  1001  0715                     	;# 
  1002  0716                     	;# 
  1003  0717                     	;# 
  1004  0718                     	;# 
  1005  0719                     	;# 
  1006  0891                     	;# 
  1007  0891                     	;# 
  1008  0891                     	;# 
  1009  0891                     	;# 
  1010  0891                     	;# 
  1011  0891                     	;# 
  1012  0892                     	;# 
  1013  0892                     	;# 
  1014  0892                     	;# 
  1015  0893                     	;# 
  1016  0893                     	;# 
  1017  0893                     	;# 
  1018  0893                     	;# 
  1019  0893                     	;# 
  1020  0893                     	;# 
  1021  0894                     	;# 
  1022  0894                     	;# 
  1023  0894                     	;# 
  1024  0895                     	;# 
  1025  0895                     	;# 
  1026  0895                     	;# 
  1027  0896                     	;# 
  1028  0896                     	;# 
  1029  0896                     	;# 
  1030  089B                     	;# 
  1031  0911                     	;# 
  1032  0912                     	;# 
  1033  0913                     	;# 
  1034  0914                     	;# 
  1035  0915                     	;# 
  1036  0916                     	;# 
  1037  0918                     	;# 
  1038  0919                     	;# 
  1039  091A                     	;# 
  1040  091B                     	;# 
  1041  091C                     	;# 
  1042  091D                     	;# 
  1043  091E                     	;# 
  1044  091F                     	;# 
  1045  0E0F                     	;# 
  1046  0E10                     	;# 
  1047  0E11                     	;# 
  1048  0E12                     	;# 
  1049  0E13                     	;# 
  1050  0E14                     	;# 
  1051  0E15                     	;# 
  1052  0E16                     	;# 
  1053  0E17                     	;# 
  1054  0E18                     	;# 
  1055  0E19                     	;# 
  1056  0E1A                     	;# 
  1057  0E1B                     	;# 
  1058  0E1C                     	;# 
  1059  0E1D                     	;# 
  1060  0E1E                     	;# 
  1061  0E1F                     	;# 
  1062  0E20                     	;# 
  1063  0E21                     	;# 
  1064  0E22                     	;# 
  1065  0E24                     	;# 
  1066  0E25                     	;# 
  1067  0E28                     	;# 
  1068  0E29                     	;# 
  1069  0E2A                     	;# 
  1070  0E2B                     	;# 
  1071  0E2C                     	;# 
  1072  0E2D                     	;# 
  1073  0E2E                     	;# 
  1074  0E2F                     	;# 
  1075  0E90                     	;# 
  1076  0E91                     	;# 
  1077  0E92                     	;# 
  1078  0E94                     	;# 
  1079  0E95                     	;# 
  1080  0E9C                     	;# 
  1081  0E9D                     	;# 
  1082  0E9E                     	;# 
  1083  0E9F                     	;# 
  1084  0EA0                     	;# 
  1085  0EA1                     	;# 
  1086  0EA2                     	;# 
  1087  0EA3                     	;# 
  1088  0EA4                     	;# 
  1089  0EA5                     	;# 
  1090  0EA6                     	;# 
  1091  0EA7                     	;# 
  1092  0F0F                     	;# 
  1093  0F10                     	;# 
  1094  0F11                     	;# 
  1095  0F12                     	;# 
  1096  0F13                     	;# 
  1097  0F14                     	;# 
  1098  0F15                     	;# 
  1099  0F16                     	;# 
  1100  0F17                     	;# 
  1101  0F18                     	;# 
  1102  0F19                     	;# 
  1103  0F1A                     	;# 
  1104  0F1B                     	;# 
  1105  0F1C                     	;# 
  1106  0F1D                     	;# 
  1107  0F1E                     	;# 
  1108  0F1F                     	;# 
  1109  0F20                     	;# 
  1110  0F21                     	;# 
  1111  0F22                     	;# 
  1112  0F23                     	;# 
  1113  0F24                     	;# 
  1114  0F25                     	;# 
  1115  0F26                     	;# 
  1116  0F27                     	;# 
  1117  0F28                     	;# 
  1118  0F29                     	;# 
  1119  0F2A                     	;# 
  1120  0F2B                     	;# 
  1121  0F2C                     	;# 
  1122  0F2D                     	;# 
  1123  0F2E                     	;# 
  1124  0F2F                     	;# 
  1125  0F30                     	;# 
  1126  0F31                     	;# 
  1127  0F32                     	;# 
  1128  0F33                     	;# 
  1129  0F34                     	;# 
  1130  0F35                     	;# 
  1131  0F36                     	;# 
  1132  0F37                     	;# 
  1133  0FE4                     	;# 
  1134  0FE5                     	;# 
  1135  0FE6                     	;# 
  1136  0FE7                     	;# 
  1137  0FE8                     	;# 
  1138  0FE9                     	;# 
  1139  0FEA                     	;# 
  1140  0FEB                     	;# 
  1141  0FED                     	;# 
  1142  0FEE                     	;# 
  1143  0FEF                     	;# 
  1144  0000                     	;# 
  1145  0001                     	;# 
  1146  0002                     	;# 
  1147  0003                     	;# 
  1148  0004                     	;# 
  1149  0005                     	;# 
  1150  0006                     	;# 
  1151  0007                     	;# 
  1152  0008                     	;# 
  1153  0009                     	;# 
  1154  000A                     	;# 
  1155  000B                     	;# 
  1156  000C                     	;# 
  1157  000D                     	;# 
  1158  000E                     	;# 
  1159  0010                     	;# 
  1160  0011                     	;# 
  1161  0012                     	;# 
  1162  0013                     	;# 
  1163  0014                     	;# 
  1164  0015                     	;# 
  1165  0015                     	;# 
  1166  0016                     	;# 
  1167  0016                     	;# 
  1168  0017                     	;# 
  1169  0018                     	;# 
  1170  0019                     	;# 
  1171  0019                     	;# 
  1172  001A                     	;# 
  1173  001B                     	;# 
  1174  001C                     	;# 
  1175  001D                     	;# 
  1176  001E                     	;# 
  1177  001F                     	;# 
  1178  008C                     	;# 
  1179  008D                     	;# 
  1180  008E                     	;# 
  1181  0090                     	;# 
  1182  0091                     	;# 
  1183  0092                     	;# 
  1184  0093                     	;# 
  1185  0094                     	;# 
  1186  0097                     	;# 
  1187  009B                     	;# 
  1188  009B                     	;# 
  1189  009C                     	;# 
  1190  009D                     	;# 
  1191  009E                     	;# 
  1192  009F                     	;# 
  1193  010C                     	;# 
  1194  010D                     	;# 
  1195  010E                     	;# 
  1196  0111                     	;# 
  1197  0112                     	;# 
  1198  0113                     	;# 
  1199  0114                     	;# 
  1200  0115                     	;# 
  1201  0116                     	;# 
  1202  0117                     	;# 
  1203  0118                     	;# 
  1204  0119                     	;# 
  1205  018C                     	;# 
  1206  018D                     	;# 
  1207  018E                     	;# 
  1208  0197                     	;# 
  1209  0199                     	;# 
  1210  0199                     	;# 
  1211  0199                     	;# 
  1212  019A                     	;# 
  1213  019A                     	;# 
  1214  019A                     	;# 
  1215  019B                     	;# 
  1216  019B                     	;# 
  1217  019B                     	;# 
  1218  019B                     	;# 
  1219  019B                     	;# 
  1220  019C                     	;# 
  1221  019C                     	;# 
  1222  019C                     	;# 
  1223  019D                     	;# 
  1224  019D                     	;# 
  1225  019D                     	;# 
  1226  019E                     	;# 
  1227  019E                     	;# 
  1228  019E                     	;# 
  1229  019F                     	;# 
  1230  019F                     	;# 
  1231  019F                     	;# 
  1232  019F                     	;# 
  1233  019F                     	;# 
  1234  020C                     	;# 
  1235  020D                     	;# 
  1236  020E                     	;# 
  1237  0211                     	;# 
  1238  0211                     	;# 
  1239  0212                     	;# 
  1240  0212                     	;# 
  1241  0213                     	;# 
  1242  0213                     	;# 
  1243  0214                     	;# 
  1244  0214                     	;# 
  1245  0215                     	;# 
  1246  0215                     	;# 
  1247  0215                     	;# 
  1248  0215                     	;# 
  1249  0216                     	;# 
  1250  0216                     	;# 
  1251  0217                     	;# 
  1252  0217                     	;# 
  1253  0219                     	;# 
  1254  021A                     	;# 
  1255  021B                     	;# 
  1256  021C                     	;# 
  1257  021D                     	;# 
  1258  021D                     	;# 
  1259  021E                     	;# 
  1260  021F                     	;# 
  1261  028C                     	;# 
  1262  028D                     	;# 
  1263  028E                     	;# 
  1264  0291                     	;# 
  1265  0291                     	;# 
  1266  0292                     	;# 
  1267  0293                     	;# 
  1268  0294                     	;# 
  1269  0295                     	;# 
  1270  0295                     	;# 
  1271  0296                     	;# 
  1272  0297                     	;# 
  1273  0298                     	;# 
  1274  029F                     	;# 
  1275  030C                     	;# 
  1276  030D                     	;# 
  1277  030E                     	;# 
  1278  0311                     	;# 
  1279  0311                     	;# 
  1280  0312                     	;# 
  1281  0313                     	;# 
  1282  0314                     	;# 
  1283  0315                     	;# 
  1284  0315                     	;# 
  1285  0316                     	;# 
  1286  0317                     	;# 
  1287  0318                     	;# 
  1288  038C                     	;# 
  1289  038D                     	;# 
  1290  038E                     	;# 
  1291  0391                     	;# 
  1292  0392                     	;# 
  1293  0393                     	;# 
  1294  0394                     	;# 
  1295  0395                     	;# 
  1296  0396                     	;# 
  1297  0397                     	;# 
  1298  0398                     	;# 
  1299  0399                     	;# 
  1300  039A                     	;# 
  1301  039C                     	;# 
  1302  039D                     	;# 
  1303  039E                     	;# 
  1304  039F                     	;# 
  1305  0411                     	;# 
  1306  0411                     	;# 
  1307  0412                     	;# 
  1308  0413                     	;# 
  1309  0414                     	;# 
  1310  0415                     	;# 
  1311  0416                     	;# 
  1312  0417                     	;# 
  1313  0418                     	;# 
  1314  0418                     	;# 
  1315  0419                     	;# 
  1316  041A                     	;# 
  1317  041B                     	;# 
  1318  041C                     	;# 
  1319  041D                     	;# 
  1320  041E                     	;# 
  1321  041F                     	;# 
  1322  0498                     	;# 
  1323  0498                     	;# 
  1324  0499                     	;# 
  1325  049A                     	;# 
  1326  049B                     	;# 
  1327  049B                     	;# 
  1328  049C                     	;# 
  1329  049D                     	;# 
  1330  049E                     	;# 
  1331  049F                     	;# 
  1332  0617                     	;# 
  1333  0618                     	;# 
  1334  0619                     	;# 
  1335  0619                     	;# 
  1336  061A                     	;# 
  1337  061B                     	;# 
  1338  061C                     	;# 
  1339  061C                     	;# 
  1340  061F                     	;# 
  1341  0691                     	;# 
  1342  0692                     	;# 
  1343  0693                     	;# 
  1344  0694                     	;# 
  1345  0695                     	;# 
  1346  0696                     	;# 
  1347  0697                     	;# 
  1348  0698                     	;# 
  1349  0699                     	;# 
  1350  0711                     	;# 
  1351  0712                     	;# 
  1352  0713                     	;# 
  1353  0714                     	;# 
  1354  0715                     	;# 
  1355  0716                     	;# 
  1356  0717                     	;# 
  1357  0718                     	;# 
  1358  0719                     	;# 
  1359  0891                     	;# 
  1360  0891                     	;# 
  1361  0891                     	;# 
  1362  0891                     	;# 
  1363  0891                     	;# 
  1364  0891                     	;# 
  1365  0892                     	;# 
  1366  0892                     	;# 
  1367  0892                     	;# 
  1368  0893                     	;# 
  1369  0893                     	;# 
  1370  0893                     	;# 
  1371  0893                     	;# 
  1372  0893                     	;# 
  1373  0893                     	;# 
  1374  0894                     	;# 
  1375  0894                     	;# 
  1376  0894                     	;# 
  1377  0895                     	;# 
  1378  0895                     	;# 
  1379  0895                     	;# 
  1380  0896                     	;# 
  1381  0896                     	;# 
  1382  0896                     	;# 
  1383  089B                     	;# 
  1384  0911                     	;# 
  1385  0912                     	;# 
  1386  0913                     	;# 
  1387  0914                     	;# 
  1388  0915                     	;# 
  1389  0916                     	;# 
  1390  0918                     	;# 
  1391  0919                     	;# 
  1392  091A                     	;# 
  1393  091B                     	;# 
  1394  091C                     	;# 
  1395  091D                     	;# 
  1396  091E                     	;# 
  1397  091F                     	;# 
  1398  0E0F                     	;# 
  1399  0E10                     	;# 
  1400  0E11                     	;# 
  1401  0E12                     	;# 
  1402  0E13                     	;# 
  1403  0E14                     	;# 
  1404  0E15                     	;# 
  1405  0E16                     	;# 
  1406  0E17                     	;# 
  1407  0E18                     	;# 
  1408  0E19                     	;# 
  1409  0E1A                     	;# 
  1410  0E1B                     	;# 
  1411  0E1C                     	;# 
  1412  0E1D                     	;# 
  1413  0E1E                     	;# 
  1414  0E1F                     	;# 
  1415  0E20                     	;# 
  1416  0E21                     	;# 
  1417  0E22                     	;# 
  1418  0E24                     	;# 
  1419  0E25                     	;# 
  1420  0E28                     	;# 
  1421  0E29                     	;# 
  1422  0E2A                     	;# 
  1423  0E2B                     	;# 
  1424  0E2C                     	;# 
  1425  0E2D                     	;# 
  1426  0E2E                     	;# 
  1427  0E2F                     	;# 
  1428  0E90                     	;# 
  1429  0E91                     	;# 
  1430  0E92                     	;# 
  1431  0E94                     	;# 
  1432  0E95                     	;# 
  1433  0E9C                     	;# 
  1434  0E9D                     	;# 
  1435  0E9E                     	;# 
  1436  0E9F                     	;# 
  1437  0EA0                     	;# 
  1438  0EA1                     	;# 
  1439  0EA2                     	;# 
  1440  0EA3                     	;# 
  1441  0EA4                     	;# 
  1442  0EA5                     	;# 
  1443  0EA6                     	;# 
  1444  0EA7                     	;# 
  1445  0F0F                     	;# 
  1446  0F10                     	;# 
  1447  0F11                     	;# 
  1448  0F12                     	;# 
  1449  0F13                     	;# 
  1450  0F14                     	;# 
  1451  0F15                     	;# 
  1452  0F16                     	;# 
  1453  0F17                     	;# 
  1454  0F18                     	;# 
  1455  0F19                     	;# 
  1456  0F1A                     	;# 
  1457  0F1B                     	;# 
  1458  0F1C                     	;# 
  1459  0F1D                     	;# 
  1460  0F1E                     	;# 
  1461  0F1F                     	;# 
  1462  0F20                     	;# 
  1463  0F21                     	;# 
  1464  0F22                     	;# 
  1465  0F23                     	;# 
  1466  0F24                     	;# 
  1467  0F25                     	;# 
  1468  0F26                     	;# 
  1469  0F27                     	;# 
  1470  0F28                     	;# 
  1471  0F29                     	;# 
  1472  0F2A                     	;# 
  1473  0F2B                     	;# 
  1474  0F2C                     	;# 
  1475  0F2D                     	;# 
  1476  0F2E                     	;# 
  1477  0F2F                     	;# 
  1478  0F30                     	;# 
  1479  0F31                     	;# 
  1480  0F32                     	;# 
  1481  0F33                     	;# 
  1482  0F34                     	;# 
  1483  0F35                     	;# 
  1484  0F36                     	;# 
  1485  0F37                     	;# 
  1486  0FE4                     	;# 
  1487  0FE5                     	;# 
  1488  0FE6                     	;# 
  1489  0FE7                     	;# 
  1490  0FE8                     	;# 
  1491  0FE9                     	;# 
  1492  0FEA                     	;# 
  1493  0FEB                     	;# 
  1494  0FED                     	;# 
  1495  0FEE                     	;# 
  1496  0FEF                     	;# 
  1497  0000                     	;# 
  1498  0001                     	;# 
  1499  0002                     	;# 
  1500  0003                     	;# 
  1501  0004                     	;# 
  1502  0005                     	;# 
  1503  0006                     	;# 
  1504  0007                     	;# 
  1505  0008                     	;# 
  1506  0009                     	;# 
  1507  000A                     	;# 
  1508  000B                     	;# 
  1509  000C                     	;# 
  1510  000D                     	;# 
  1511  000E                     	;# 
  1512  0010                     	;# 
  1513  0011                     	;# 
  1514  0012                     	;# 
  1515  0013                     	;# 
  1516  0014                     	;# 
  1517  0015                     	;# 
  1518  0015                     	;# 
  1519  0016                     	;# 
  1520  0016                     	;# 
  1521  0017                     	;# 
  1522  0018                     	;# 
  1523  0019                     	;# 
  1524  0019                     	;# 
  1525  001A                     	;# 
  1526  001B                     	;# 
  1527  001C                     	;# 
  1528  001D                     	;# 
  1529  001E                     	;# 
  1530  001F                     	;# 
  1531  008C                     	;# 
  1532  008D                     	;# 
  1533  008E                     	;# 
  1534  0090                     	;# 
  1535  0091                     	;# 
  1536  0092                     	;# 
  1537  0093                     	;# 
  1538  0094                     	;# 
  1539  0097                     	;# 
  1540  009B                     	;# 
  1541  009B                     	;# 
  1542  009C                     	;# 
  1543  009D                     	;# 
  1544  009E                     	;# 
  1545  009F                     	;# 
  1546  010C                     	;# 
  1547  010D                     	;# 
  1548  010E                     	;# 
  1549  0111                     	;# 
  1550  0112                     	;# 
  1551  0113                     	;# 
  1552  0114                     	;# 
  1553  0115                     	;# 
  1554  0116                     	;# 
  1555  0117                     	;# 
  1556  0118                     	;# 
  1557  0119                     	;# 
  1558  018C                     	;# 
  1559  018D                     	;# 
  1560  018E                     	;# 
  1561  0197                     	;# 
  1562  0199                     	;# 
  1563  0199                     	;# 
  1564  0199                     	;# 
  1565  019A                     	;# 
  1566  019A                     	;# 
  1567  019A                     	;# 
  1568  019B                     	;# 
  1569  019B                     	;# 
  1570  019B                     	;# 
  1571  019B                     	;# 
  1572  019B                     	;# 
  1573  019C                     	;# 
  1574  019C                     	;# 
  1575  019C                     	;# 
  1576  019D                     	;# 
  1577  019D                     	;# 
  1578  019D                     	;# 
  1579  019E                     	;# 
  1580  019E                     	;# 
  1581  019E                     	;# 
  1582  019F                     	;# 
  1583  019F                     	;# 
  1584  019F                     	;# 
  1585  019F                     	;# 
  1586  019F                     	;# 
  1587  020C                     	;# 
  1588  020D                     	;# 
  1589  020E                     	;# 
  1590  0211                     	;# 
  1591  0211                     	;# 
  1592  0212                     	;# 
  1593  0212                     	;# 
  1594  0213                     	;# 
  1595  0213                     	;# 
  1596  0214                     	;# 
  1597  0214                     	;# 
  1598  0215                     	;# 
  1599  0215                     	;# 
  1600  0215                     	;# 
  1601  0215                     	;# 
  1602  0216                     	;# 
  1603  0216                     	;# 
  1604  0217                     	;# 
  1605  0217                     	;# 
  1606  0219                     	;# 
  1607  021A                     	;# 
  1608  021B                     	;# 
  1609  021C                     	;# 
  1610  021D                     	;# 
  1611  021D                     	;# 
  1612  021E                     	;# 
  1613  021F                     	;# 
  1614  028C                     	;# 
  1615  028D                     	;# 
  1616  028E                     	;# 
  1617  0291                     	;# 
  1618  0291                     	;# 
  1619  0292                     	;# 
  1620  0293                     	;# 
  1621  0294                     	;# 
  1622  0295                     	;# 
  1623  0295                     	;# 
  1624  0296                     	;# 
  1625  0297                     	;# 
  1626  0298                     	;# 
  1627  029F                     	;# 
  1628  030C                     	;# 
  1629  030D                     	;# 
  1630  030E                     	;# 
  1631  0311                     	;# 
  1632  0311                     	;# 
  1633  0312                     	;# 
  1634  0313                     	;# 
  1635  0314                     	;# 
  1636  0315                     	;# 
  1637  0315                     	;# 
  1638  0316                     	;# 
  1639  0317                     	;# 
  1640  0318                     	;# 
  1641  038C                     	;# 
  1642  038D                     	;# 
  1643  038E                     	;# 
  1644  0391                     	;# 
  1645  0392                     	;# 
  1646  0393                     	;# 
  1647  0394                     	;# 
  1648  0395                     	;# 
  1649  0396                     	;# 
  1650  0397                     	;# 
  1651  0398                     	;# 
  1652  0399                     	;# 
  1653  039A                     	;# 
  1654  039C                     	;# 
  1655  039D                     	;# 
  1656  039E                     	;# 
  1657  039F                     	;# 
  1658  0411                     	;# 
  1659  0411                     	;# 
  1660  0412                     	;# 
  1661  0413                     	;# 
  1662  0414                     	;# 
  1663  0415                     	;# 
  1664  0416                     	;# 
  1665  0417                     	;# 
  1666  0418                     	;# 
  1667  0418                     	;# 
  1668  0419                     	;# 
  1669  041A                     	;# 
  1670  041B                     	;# 
  1671  041C                     	;# 
  1672  041D                     	;# 
  1673  041E                     	;# 
  1674  041F                     	;# 
  1675  0498                     	;# 
  1676  0498                     	;# 
  1677  0499                     	;# 
  1678  049A                     	;# 
  1679  049B                     	;# 
  1680  049B                     	;# 
  1681  049C                     	;# 
  1682  049D                     	;# 
  1683  049E                     	;# 
  1684  049F                     	;# 
  1685  0617                     	;# 
  1686  0618                     	;# 
  1687  0619                     	;# 
  1688  0619                     	;# 
  1689  061A                     	;# 
  1690  061B                     	;# 
  1691  061C                     	;# 
  1692  061C                     	;# 
  1693  061F                     	;# 
  1694  0691                     	;# 
  1695  0692                     	;# 
  1696  0693                     	;# 
  1697  0694                     	;# 
  1698  0695                     	;# 
  1699  0696                     	;# 
  1700  0697                     	;# 
  1701  0698                     	;# 
  1702  0699                     	;# 
  1703  0711                     	;# 
  1704  0712                     	;# 
  1705  0713                     	;# 
  1706  0714                     	;# 
  1707  0715                     	;# 
  1708  0716                     	;# 
  1709  0717                     	;# 
  1710  0718                     	;# 
  1711  0719                     	;# 
  1712  0891                     	;# 
  1713  0891                     	;# 
  1714  0891                     	;# 
  1715  0891                     	;# 
  1716  0891                     	;# 
  1717  0891                     	;# 
  1718  0892                     	;# 
  1719  0892                     	;# 
  1720  0892                     	;# 
  1721  0893                     	;# 
  1722  0893                     	;# 
  1723  0893                     	;# 
  1724  0893                     	;# 
  1725  0893                     	;# 
  1726  0893                     	;# 
  1727  0894                     	;# 
  1728  0894                     	;# 
  1729  0894                     	;# 
  1730  0895                     	;# 
  1731  0895                     	;# 
  1732  0895                     	;# 
  1733  0896                     	;# 
  1734  0896                     	;# 
  1735  0896                     	;# 
  1736  089B                     	;# 
  1737  0911                     	;# 
  1738  0912                     	;# 
  1739  0913                     	;# 
  1740  0914                     	;# 
  1741  0915                     	;# 
  1742  0916                     	;# 
  1743  0918                     	;# 
  1744  0919                     	;# 
  1745  091A                     	;# 
  1746  091B                     	;# 
  1747  091C                     	;# 
  1748  091D                     	;# 
  1749  091E                     	;# 
  1750  091F                     	;# 
  1751  0E0F                     	;# 
  1752  0E10                     	;# 
  1753  0E11                     	;# 
  1754  0E12                     	;# 
  1755  0E13                     	;# 
  1756  0E14                     	;# 
  1757  0E15                     	;# 
  1758  0E16                     	;# 
  1759  0E17                     	;# 
  1760  0E18                     	;# 
  1761  0E19                     	;# 
  1762  0E1A                     	;# 
  1763  0E1B                     	;# 
  1764  0E1C                     	;# 
  1765  0E1D                     	;# 
  1766  0E1E                     	;# 
  1767  0E1F                     	;# 
  1768  0E20                     	;# 
  1769  0E21                     	;# 
  1770  0E22                     	;# 
  1771  0E24                     	;# 
  1772  0E25                     	;# 
  1773  0E28                     	;# 
  1774  0E29                     	;# 
  1775  0E2A                     	;# 
  1776  0E2B                     	;# 
  1777  0E2C                     	;# 
  1778  0E2D                     	;# 
  1779  0E2E                     	;# 
  1780  0E2F                     	;# 
  1781  0E90                     	;# 
  1782  0E91                     	;# 
  1783  0E92                     	;# 
  1784  0E94                     	;# 
  1785  0E95                     	;# 
  1786  0E9C                     	;# 
  1787  0E9D                     	;# 
  1788  0E9E                     	;# 
  1789  0E9F                     	;# 
  1790  0EA0                     	;# 
  1791  0EA1                     	;# 
  1792  0EA2                     	;# 
  1793  0EA3                     	;# 
  1794  0EA4                     	;# 
  1795  0EA5                     	;# 
  1796  0EA6                     	;# 
  1797  0EA7                     	;# 
  1798  0F0F                     	;# 
  1799  0F10                     	;# 
  1800  0F11                     	;# 
  1801  0F12                     	;# 
  1802  0F13                     	;# 
  1803  0F14                     	;# 
  1804  0F15                     	;# 
  1805  0F16                     	;# 
  1806  0F17                     	;# 
  1807  0F18                     	;# 
  1808  0F19                     	;# 
  1809  0F1A                     	;# 
  1810  0F1B                     	;# 
  1811  0F1C                     	;# 
  1812  0F1D                     	;# 
  1813  0F1E                     	;# 
  1814  0F1F                     	;# 
  1815  0F20                     	;# 
  1816  0F21                     	;# 
  1817  0F22                     	;# 
  1818  0F23                     	;# 
  1819  0F24                     	;# 
  1820  0F25                     	;# 
  1821  0F26                     	;# 
  1822  0F27                     	;# 
  1823  0F28                     	;# 
  1824  0F29                     	;# 
  1825  0F2A                     	;# 
  1826  0F2B                     	;# 
  1827  0F2C                     	;# 
  1828  0F2D                     	;# 
  1829  0F2E                     	;# 
  1830  0F2F                     	;# 
  1831  0F30                     	;# 
  1832  0F31                     	;# 
  1833  0F32                     	;# 
  1834  0F33                     	;# 
  1835  0F34                     	;# 
  1836  0F35                     	;# 
  1837  0F36                     	;# 
  1838  0F37                     	;# 
  1839  0FE4                     	;# 
  1840  0FE5                     	;# 
  1841  0FE6                     	;# 
  1842  0FE7                     	;# 
  1843  0FE8                     	;# 
  1844  0FE9                     	;# 
  1845  0FEA                     	;# 
  1846  0FEB                     	;# 
  1847  0FED                     	;# 
  1848  0FEE                     	;# 
  1849  0FEF                     	;# 
  1850  0000                     	;# 
  1851  0001                     	;# 
  1852  0002                     	;# 
  1853  0003                     	;# 
  1854  0004                     	;# 
  1855  0005                     	;# 
  1856  0006                     	;# 
  1857  0007                     	;# 
  1858  0008                     	;# 
  1859  0009                     	;# 
  1860  000A                     	;# 
  1861  000B                     	;# 
  1862  000C                     	;# 
  1863  000D                     	;# 
  1864  000E                     	;# 
  1865  0010                     	;# 
  1866  0011                     	;# 
  1867  0012                     	;# 
  1868  0013                     	;# 
  1869  0014                     	;# 
  1870  0015                     	;# 
  1871  0015                     	;# 
  1872  0016                     	;# 
  1873  0016                     	;# 
  1874  0017                     	;# 
  1875  0018                     	;# 
  1876  0019                     	;# 
  1877  0019                     	;# 
  1878  001A                     	;# 
  1879  001B                     	;# 
  1880  001C                     	;# 
  1881  001D                     	;# 
  1882  001E                     	;# 
  1883  001F                     	;# 
  1884  008C                     	;# 
  1885  008D                     	;# 
  1886  008E                     	;# 
  1887  0090                     	;# 
  1888  0091                     	;# 
  1889  0092                     	;# 
  1890  0093                     	;# 
  1891  0094                     	;# 
  1892  0097                     	;# 
  1893  009B                     	;# 
  1894  009B                     	;# 
  1895  009C                     	;# 
  1896  009D                     	;# 
  1897  009E                     	;# 
  1898  009F                     	;# 
  1899  010C                     	;# 
  1900  010D                     	;# 
  1901  010E                     	;# 
  1902  0111                     	;# 
  1903  0112                     	;# 
  1904  0113                     	;# 
  1905  0114                     	;# 
  1906  0115                     	;# 
  1907  0116                     	;# 
  1908  0117                     	;# 
  1909  0118                     	;# 
  1910  0119                     	;# 
  1911  018C                     	;# 
  1912  018D                     	;# 
  1913  018E                     	;# 
  1914  0197                     	;# 
  1915  0199                     	;# 
  1916  0199                     	;# 
  1917  0199                     	;# 
  1918  019A                     	;# 
  1919  019A                     	;# 
  1920  019A                     	;# 
  1921  019B                     	;# 
  1922  019B                     	;# 
  1923  019B                     	;# 
  1924  019B                     	;# 
  1925  019B                     	;# 
  1926  019C                     	;# 
  1927  019C                     	;# 
  1928  019C                     	;# 
  1929  019D                     	;# 
  1930  019D                     	;# 
  1931  019D                     	;# 
  1932  019E                     	;# 
  1933  019E                     	;# 
  1934  019E                     	;# 
  1935  019F                     	;# 
  1936  019F                     	;# 
  1937  019F                     	;# 
  1938  019F                     	;# 
  1939  019F                     	;# 
  1940  020C                     	;# 
  1941  020D                     	;# 
  1942  020E                     	;# 
  1943  0211                     	;# 
  1944  0211                     	;# 
  1945  0212                     	;# 
  1946  0212                     	;# 
  1947  0213                     	;# 
  1948  0213                     	;# 
  1949  0214                     	;# 
  1950  0214                     	;# 
  1951  0215                     	;# 
  1952  0215                     	;# 
  1953  0215                     	;# 
  1954  0215                     	;# 
  1955  0216                     	;# 
  1956  0216                     	;# 
  1957  0217                     	;# 
  1958  0217                     	;# 
  1959  0219                     	;# 
  1960  021A                     	;# 
  1961  021B                     	;# 
  1962  021C                     	;# 
  1963  021D                     	;# 
  1964  021D                     	;# 
  1965  021E                     	;# 
  1966  021F                     	;# 
  1967  028C                     	;# 
  1968  028D                     	;# 
  1969  028E                     	;# 
  1970  0291                     	;# 
  1971  0291                     	;# 
  1972  0292                     	;# 
  1973  0293                     	;# 
  1974  0294                     	;# 
  1975  0295                     	;# 
  1976  0295                     	;# 
  1977  0296                     	;# 
  1978  0297                     	;# 
  1979  0298                     	;# 
  1980  029F                     	;# 
  1981  030C                     	;# 
  1982  030D                     	;# 
  1983  030E                     	;# 
  1984  0311                     	;# 
  1985  0311                     	;# 
  1986  0312                     	;# 
  1987  0313                     	;# 
  1988  0314                     	;# 
  1989  0315                     	;# 
  1990  0315                     	;# 
  1991  0316                     	;# 
  1992  0317                     	;# 
  1993  0318                     	;# 
  1994  038C                     	;# 
  1995  038D                     	;# 
  1996  038E                     	;# 
  1997  0391                     	;# 
  1998  0392                     	;# 
  1999  0393                     	;# 
  2000  0394                     	;# 
  2001  0395                     	;# 
  2002  0396                     	;# 
  2003  0397                     	;# 
  2004  0398                     	;# 
  2005  0399                     	;# 
  2006  039A                     	;# 
  2007  039C                     	;# 
  2008  039D                     	;# 
  2009  039E                     	;# 
  2010  039F                     	;# 
  2011  0411                     	;# 
  2012  0411                     	;# 
  2013  0412                     	;# 
  2014  0413                     	;# 
  2015  0414                     	;# 
  2016  0415                     	;# 
  2017  0416                     	;# 
  2018  0417                     	;# 
  2019  0418                     	;# 
  2020  0418                     	;# 
  2021  0419                     	;# 
  2022  041A                     	;# 
  2023  041B                     	;# 
  2024  041C                     	;# 
  2025  041D                     	;# 
  2026  041E                     	;# 
  2027  041F                     	;# 
  2028  0498                     	;# 
  2029  0498                     	;# 
  2030  0499                     	;# 
  2031  049A                     	;# 
  2032  049B                     	;# 
  2033  049B                     	;# 
  2034  049C                     	;# 
  2035  049D                     	;# 
  2036  049E                     	;# 
  2037  049F                     	;# 
  2038  0617                     	;# 
  2039  0618                     	;# 
  2040  0619                     	;# 
  2041  0619                     	;# 
  2042  061A                     	;# 
  2043  061B                     	;# 
  2044  061C                     	;# 
  2045  061C                     	;# 
  2046  061F                     	;# 
  2047  0691                     	;# 
  2048  0692                     	;# 
  2049  0693                     	;# 
  2050  0694                     	;# 
  2051  0695                     	;# 
  2052  0696                     	;# 
  2053  0697                     	;# 
  2054  0698                     	;# 
  2055  0699                     	;# 
  2056  0711                     	;# 
  2057  0712                     	;# 
  2058  0713                     	;# 
  2059  0714                     	;# 
  2060  0715                     	;# 
  2061  0716                     	;# 
  2062  0717                     	;# 
  2063  0718                     	;# 
  2064  0719                     	;# 
  2065  0891                     	;# 
  2066  0891                     	;# 
  2067  0891                     	;# 
  2068  0891                     	;# 
  2069  0891                     	;# 
  2070  0891                     	;# 
  2071  0892                     	;# 
  2072  0892                     	;# 
  2073  0892                     	;# 
  2074  0893                     	;# 
  2075  0893                     	;# 
  2076  0893                     	;# 
  2077  0893                     	;# 
  2078  0893                     	;# 
  2079  0893                     	;# 
  2080  0894                     	;# 
  2081  0894                     	;# 
  2082  0894                     	;# 
  2083  0895                     	;# 
  2084  0895                     	;# 
  2085  0895                     	;# 
  2086  0896                     	;# 
  2087  0896                     	;# 
  2088  0896                     	;# 
  2089  089B                     	;# 
  2090  0911                     	;# 
  2091  0912                     	;# 
  2092  0913                     	;# 
  2093  0914                     	;# 
  2094  0915                     	;# 
  2095  0916                     	;# 
  2096  0918                     	;# 
  2097  0919                     	;# 
  2098  091A                     	;# 
  2099  091B                     	;# 
  2100  091C                     	;# 
  2101  091D                     	;# 
  2102  091E                     	;# 
  2103  091F                     	;# 
  2104  0E0F                     	;# 
  2105  0E10                     	;# 
  2106  0E11                     	;# 
  2107  0E12                     	;# 
  2108  0E13                     	;# 
  2109  0E14                     	;# 
  2110  0E15                     	;# 
  2111  0E16                     	;# 
  2112  0E17                     	;# 
  2113  0E18                     	;# 
  2114  0E19                     	;# 
  2115  0E1A                     	;# 
  2116  0E1B                     	;# 
  2117  0E1C                     	;# 
  2118  0E1D                     	;# 
  2119  0E1E                     	;# 
  2120  0E1F                     	;# 
  2121  0E20                     	;# 
  2122  0E21                     	;# 
  2123  0E22                     	;# 
  2124  0E24                     	;# 
  2125  0E25                     	;# 
  2126  0E28                     	;# 
  2127  0E29                     	;# 
  2128  0E2A                     	;# 
  2129  0E2B                     	;# 
  2130  0E2C                     	;# 
  2131  0E2D                     	;# 
  2132  0E2E                     	;# 
  2133  0E2F                     	;# 
  2134  0E90                     	;# 
  2135  0E91                     	;# 
  2136  0E92                     	;# 
  2137  0E94                     	;# 
  2138  0E95                     	;# 
  2139  0E9C                     	;# 
  2140  0E9D                     	;# 
  2141  0E9E                     	;# 
  2142  0E9F                     	;# 
  2143  0EA0                     	;# 
  2144  0EA1                     	;# 
  2145  0EA2                     	;# 
  2146  0EA3                     	;# 
  2147  0EA4                     	;# 
  2148  0EA5                     	;# 
  2149  0EA6                     	;# 
  2150  0EA7                     	;# 
  2151  0F0F                     	;# 
  2152  0F10                     	;# 
  2153  0F11                     	;# 
  2154  0F12                     	;# 
  2155  0F13                     	;# 
  2156  0F14                     	;# 
  2157  0F15                     	;# 
  2158  0F16                     	;# 
  2159  0F17                     	;# 
  2160  0F18                     	;# 
  2161  0F19                     	;# 
  2162  0F1A                     	;# 
  2163  0F1B                     	;# 
  2164  0F1C                     	;# 
  2165  0F1D                     	;# 
  2166  0F1E                     	;# 
  2167  0F1F                     	;# 
  2168  0F20                     	;# 
  2169  0F21                     	;# 
  2170  0F22                     	;# 
  2171  0F23                     	;# 
  2172  0F24                     	;# 
  2173  0F25                     	;# 
  2174  0F26                     	;# 
  2175  0F27                     	;# 
  2176  0F28                     	;# 
  2177  0F29                     	;# 
  2178  0F2A                     	;# 
  2179  0F2B                     	;# 
  2180  0F2C                     	;# 
  2181  0F2D                     	;# 
  2182  0F2E                     	;# 
  2183  0F2F                     	;# 
  2184  0F30                     	;# 
  2185  0F31                     	;# 
  2186  0F32                     	;# 
  2187  0F33                     	;# 
  2188  0F34                     	;# 
  2189  0F35                     	;# 
  2190  0F36                     	;# 
  2191  0F37                     	;# 
  2192  0FE4                     	;# 
  2193  0FE5                     	;# 
  2194  0FE6                     	;# 
  2195  0FE7                     	;# 
  2196  0FE8                     	;# 
  2197  0FE9                     	;# 
  2198  0FEA                     	;# 
  2199  0FEB                     	;# 
  2200  0FED                     	;# 
  2201  0FEE                     	;# 
  2202  0FEF                     	;# 
  2203  0000                     	;# 
  2204  0001                     	;# 
  2205  0002                     	;# 
  2206  0003                     	;# 
  2207  0004                     	;# 
  2208  0005                     	;# 
  2209  0006                     	;# 
  2210  0007                     	;# 
  2211  0008                     	;# 
  2212  0009                     	;# 
  2213  000A                     	;# 
  2214  000B                     	;# 
  2215  000C                     	;# 
  2216  000D                     	;# 
  2217  000E                     	;# 
  2218  0010                     	;# 
  2219  0011                     	;# 
  2220  0012                     	;# 
  2221  0013                     	;# 
  2222  0014                     	;# 
  2223  0015                     	;# 
  2224  0015                     	;# 
  2225  0016                     	;# 
  2226  0016                     	;# 
  2227  0017                     	;# 
  2228  0018                     	;# 
  2229  0019                     	;# 
  2230  0019                     	;# 
  2231  001A                     	;# 
  2232  001B                     	;# 
  2233  001C                     	;# 
  2234  001D                     	;# 
  2235  001E                     	;# 
  2236  001F                     	;# 
  2237  008C                     	;# 
  2238  008D                     	;# 
  2239  008E                     	;# 
  2240  0090                     	;# 
  2241  0091                     	;# 
  2242  0092                     	;# 
  2243  0093                     	;# 
  2244  0094                     	;# 
  2245  0097                     	;# 
  2246  009B                     	;# 
  2247  009B                     	;# 
  2248  009C                     	;# 
  2249  009D                     	;# 
  2250  009E                     	;# 
  2251  009F                     	;# 
  2252  010C                     	;# 
  2253  010D                     	;# 
  2254  010E                     	;# 
  2255  0111                     	;# 
  2256  0112                     	;# 
  2257  0113                     	;# 
  2258  0114                     	;# 
  2259  0115                     	;# 
  2260  0116                     	;# 
  2261  0117                     	;# 
  2262  0118                     	;# 
  2263  0119                     	;# 
  2264  018C                     	;# 
  2265  018D                     	;# 
  2266  018E                     	;# 
  2267  0197                     	;# 
  2268  0199                     	;# 
  2269  0199                     	;# 
  2270  0199                     	;# 
  2271  019A                     	;# 
  2272  019A                     	;# 
  2273  019A                     	;# 
  2274  019B                     	;# 
  2275  019B                     	;# 
  2276  019B                     	;# 
  2277  019B                     	;# 
  2278  019B                     	;# 
  2279  019C                     	;# 
  2280  019C                     	;# 
  2281  019C                     	;# 
  2282  019D                     	;# 
  2283  019D                     	;# 
  2284  019D                     	;# 
  2285  019E                     	;# 
  2286  019E                     	;# 
  2287  019E                     	;# 
  2288  019F                     	;# 
  2289  019F                     	;# 
  2290  019F                     	;# 
  2291  019F                     	;# 
  2292  019F                     	;# 
  2293  020C                     	;# 
  2294  020D                     	;# 
  2295  020E                     	;# 
  2296  0211                     	;# 
  2297  0211                     	;# 
  2298  0212                     	;# 
  2299  0212                     	;# 
  2300  0213                     	;# 
  2301  0213                     	;# 
  2302  0214                     	;# 
  2303  0214                     	;# 
  2304  0215                     	;# 
  2305  0215                     	;# 
  2306  0215                     	;# 
  2307  0215                     	;# 
  2308  0216                     	;# 
  2309  0216                     	;# 
  2310  0217                     	;# 
  2311  0217                     	;# 
  2312  0219                     	;# 
  2313  021A                     	;# 
  2314  021B                     	;# 
  2315  021C                     	;# 
  2316  021D                     	;# 
  2317  021D                     	;# 
  2318  021E                     	;# 
  2319  021F                     	;# 
  2320  028C                     	;# 
  2321  028D                     	;# 
  2322  028E                     	;# 
  2323  0291                     	;# 
  2324  0291                     	;# 
  2325  0292                     	;# 
  2326  0293                     	;# 
  2327  0294                     	;# 
  2328  0295                     	;# 
  2329  0295                     	;# 
  2330  0296                     	;# 
  2331  0297                     	;# 
  2332  0298                     	;# 
  2333  029F                     	;# 
  2334  030C                     	;# 
  2335  030D                     	;# 
  2336  030E                     	;# 
  2337  0311                     	;# 
  2338  0311                     	;# 
  2339  0312                     	;# 
  2340  0313                     	;# 
  2341  0314                     	;# 
  2342  0315                     	;# 
  2343  0315                     	;# 
  2344  0316                     	;# 
  2345  0317                     	;# 
  2346  0318                     	;# 
  2347  038C                     	;# 
  2348  038D                     	;# 
  2349  038E                     	;# 
  2350  0391                     	;# 
  2351  0392                     	;# 
  2352  0393                     	;# 
  2353  0394                     	;# 
  2354  0395                     	;# 
  2355  0396                     	;# 
  2356  0397                     	;# 
  2357  0398                     	;# 
  2358  0399                     	;# 
  2359  039A                     	;# 
  2360  039C                     	;# 
  2361  039D                     	;# 
  2362  039E                     	;# 
  2363  039F                     	;# 
  2364  0411                     	;# 
  2365  0411                     	;# 
  2366  0412                     	;# 
  2367  0413                     	;# 
  2368  0414                     	;# 
  2369  0415                     	;# 
  2370  0416                     	;# 
  2371  0417                     	;# 
  2372  0418                     	;# 
  2373  0418                     	;# 
  2374  0419                     	;# 
  2375  041A                     	;# 
  2376  041B                     	;# 
  2377  041C                     	;# 
  2378  041D                     	;# 
  2379  041E                     	;# 
  2380  041F                     	;# 
  2381  0498                     	;# 
  2382  0498                     	;# 
  2383  0499                     	;# 
  2384  049A                     	;# 
  2385  049B                     	;# 
  2386  049B                     	;# 
  2387  049C                     	;# 
  2388  049D                     	;# 
  2389  049E                     	;# 
  2390  049F                     	;# 
  2391  0617                     	;# 
  2392  0618                     	;# 
  2393  0619                     	;# 
  2394  0619                     	;# 
  2395  061A                     	;# 
  2396  061B                     	;# 
  2397  061C                     	;# 
  2398  061C                     	;# 
  2399  061F                     	;# 
  2400  0691                     	;# 
  2401  0692                     	;# 
  2402  0693                     	;# 
  2403  0694                     	;# 
  2404  0695                     	;# 
  2405  0696                     	;# 
  2406  0697                     	;# 
  2407  0698                     	;# 
  2408  0699                     	;# 
  2409  0711                     	;# 
  2410  0712                     	;# 
  2411  0713                     	;# 
  2412  0714                     	;# 
  2413  0715                     	;# 
  2414  0716                     	;# 
  2415  0717                     	;# 
  2416  0718                     	;# 
  2417  0719                     	;# 
  2418  0891                     	;# 
  2419  0891                     	;# 
  2420  0891                     	;# 
  2421  0891                     	;# 
  2422  0891                     	;# 
  2423  0891                     	;# 
  2424  0892                     	;# 
  2425  0892                     	;# 
  2426  0892                     	;# 
  2427  0893                     	;# 
  2428  0893                     	;# 
  2429  0893                     	;# 
  2430  0893                     	;# 
  2431  0893                     	;# 
  2432  0893                     	;# 
  2433  0894                     	;# 
  2434  0894                     	;# 
  2435  0894                     	;# 
  2436  0895                     	;# 
  2437  0895                     	;# 
  2438  0895                     	;# 
  2439  0896                     	;# 
  2440  0896                     	;# 
  2441  0896                     	;# 
  2442  089B                     	;# 
  2443  0911                     	;# 
  2444  0912                     	;# 
  2445  0913                     	;# 
  2446  0914                     	;# 
  2447  0915                     	;# 
  2448  0916                     	;# 
  2449  0918                     	;# 
  2450  0919                     	;# 
  2451  091A                     	;# 
  2452  091B                     	;# 
  2453  091C                     	;# 
  2454  091D                     	;# 
  2455  091E                     	;# 
  2456  091F                     	;# 
  2457  0E0F                     	;# 
  2458  0E10                     	;# 
  2459  0E11                     	;# 
  2460  0E12                     	;# 
  2461  0E13                     	;# 
  2462  0E14                     	;# 
  2463  0E15                     	;# 
  2464  0E16                     	;# 
  2465  0E17                     	;# 
  2466  0E18                     	;# 
  2467  0E19                     	;# 
  2468  0E1A                     	;# 
  2469  0E1B                     	;# 
  2470  0E1C                     	;# 
  2471  0E1D                     	;# 
  2472  0E1E                     	;# 
  2473  0E1F                     	;# 
  2474  0E20                     	;# 
  2475  0E21                     	;# 
  2476  0E22                     	;# 
  2477  0E24                     	;# 
  2478  0E25                     	;# 
  2479  0E28                     	;# 
  2480  0E29                     	;# 
  2481  0E2A                     	;# 
  2482  0E2B                     	;# 
  2483  0E2C                     	;# 
  2484  0E2D                     	;# 
  2485  0E2E                     	;# 
  2486  0E2F                     	;# 
  2487  0E90                     	;# 
  2488  0E91                     	;# 
  2489  0E92                     	;# 
  2490  0E94                     	;# 
  2491  0E95                     	;# 
  2492  0E9C                     	;# 
  2493  0E9D                     	;# 
  2494  0E9E                     	;# 
  2495  0E9F                     	;# 
  2496  0EA0                     	;# 
  2497  0EA1                     	;# 
  2498  0EA2                     	;# 
  2499  0EA3                     	;# 
  2500  0EA4                     	;# 
  2501  0EA5                     	;# 
  2502  0EA6                     	;# 
  2503  0EA7                     	;# 
  2504  0F0F                     	;# 
  2505  0F10                     	;# 
  2506  0F11                     	;# 
  2507  0F12                     	;# 
  2508  0F13                     	;# 
  2509  0F14                     	;# 
  2510  0F15                     	;# 
  2511  0F16                     	;# 
  2512  0F17                     	;# 
  2513  0F18                     	;# 
  2514  0F19                     	;# 
  2515  0F1A                     	;# 
  2516  0F1B                     	;# 
  2517  0F1C                     	;# 
  2518  0F1D                     	;# 
  2519  0F1E                     	;# 
  2520  0F1F                     	;# 
  2521  0F20                     	;# 
  2522  0F21                     	;# 
  2523  0F22                     	;# 
  2524  0F23                     	;# 
  2525  0F24                     	;# 
  2526  0F25                     	;# 
  2527  0F26                     	;# 
  2528  0F27                     	;# 
  2529  0F28                     	;# 
  2530  0F29                     	;# 
  2531  0F2A                     	;# 
  2532  0F2B                     	;# 
  2533  0F2C                     	;# 
  2534  0F2D                     	;# 
  2535  0F2E                     	;# 
  2536  0F2F                     	;# 
  2537  0F30                     	;# 
  2538  0F31                     	;# 
  2539  0F32                     	;# 
  2540  0F33                     	;# 
  2541  0F34                     	;# 
  2542  0F35                     	;# 
  2543  0F36                     	;# 
  2544  0F37                     	;# 
  2545  0FE4                     	;# 
  2546  0FE5                     	;# 
  2547  0FE6                     	;# 
  2548  0FE7                     	;# 
  2549  0FE8                     	;# 
  2550  0FE9                     	;# 
  2551  0FEA                     	;# 
  2552  0FEB                     	;# 
  2553  0FED                     	;# 
  2554  0FEE                     	;# 
  2555  0FEF                     	;# 
  2556  0000                     	;# 
  2557  0001                     	;# 
  2558  0002                     	;# 
  2559  0003                     	;# 
  2560  0004                     	;# 
  2561  0005                     	;# 
  2562  0006                     	;# 
  2563  0007                     	;# 
  2564  0008                     	;# 
  2565  0009                     	;# 
  2566  000A                     	;# 
  2567  000B                     	;# 
  2568  000C                     	;# 
  2569  000D                     	;# 
  2570  000E                     	;# 
  2571  0010                     	;# 
  2572  0011                     	;# 
  2573  0012                     	;# 
  2574  0013                     	;# 
  2575  0014                     	;# 
  2576  0015                     	;# 
  2577  0015                     	;# 
  2578  0016                     	;# 
  2579  0016                     	;# 
  2580  0017                     	;# 
  2581  0018                     	;# 
  2582  0019                     	;# 
  2583  0019                     	;# 
  2584  001A                     	;# 
  2585  001B                     	;# 
  2586  001C                     	;# 
  2587  001D                     	;# 
  2588  001E                     	;# 
  2589  001F                     	;# 
  2590  008C                     	;# 
  2591  008D                     	;# 
  2592  008E                     	;# 
  2593  0090                     	;# 
  2594  0091                     	;# 
  2595  0092                     	;# 
  2596  0093                     	;# 
  2597  0094                     	;# 
  2598  0097                     	;# 
  2599  009B                     	;# 
  2600  009B                     	;# 
  2601  009C                     	;# 
  2602  009D                     	;# 
  2603  009E                     	;# 
  2604  009F                     	;# 
  2605  010C                     	;# 
  2606  010D                     	;# 
  2607  010E                     	;# 
  2608  0111                     	;# 
  2609  0112                     	;# 
  2610  0113                     	;# 
  2611  0114                     	;# 
  2612  0115                     	;# 
  2613  0116                     	;# 
  2614  0117                     	;# 
  2615  0118                     	;# 
  2616  0119                     	;# 
  2617  018C                     	;# 
  2618  018D                     	;# 
  2619  018E                     	;# 
  2620  0197                     	;# 
  2621  0199                     	;# 
  2622  0199                     	;# 
  2623  0199                     	;# 
  2624  019A                     	;# 
  2625  019A                     	;# 
  2626  019A                     	;# 
  2627  019B                     	;# 
  2628  019B                     	;# 
  2629  019B                     	;# 
  2630  019B                     	;# 
  2631  019B                     	;# 
  2632  019C                     	;# 
  2633  019C                     	;# 
  2634  019C                     	;# 
  2635  019D                     	;# 
  2636  019D                     	;# 
  2637  019D                     	;# 
  2638  019E                     	;# 
  2639  019E                     	;# 
  2640  019E                     	;# 
  2641  019F                     	;# 
  2642  019F                     	;# 
  2643  019F                     	;# 
  2644  019F                     	;# 
  2645  019F                     	;# 
  2646  020C                     	;# 
  2647  020D                     	;# 
  2648  020E                     	;# 
  2649  0211                     	;# 
  2650  0211                     	;# 
  2651  0212                     	;# 
  2652  0212                     	;# 
  2653  0213                     	;# 
  2654  0213                     	;# 
  2655  0214                     	;# 
  2656  0214                     	;# 
  2657  0215                     	;# 
  2658  0215                     	;# 
  2659  0215                     	;# 
  2660  0215                     	;# 
  2661  0216                     	;# 
  2662  0216                     	;# 
  2663  0217                     	;# 
  2664  0217                     	;# 
  2665  0219                     	;# 
  2666  021A                     	;# 
  2667  021B                     	;# 
  2668  021C                     	;# 
  2669  021D                     	;# 
  2670  021D                     	;# 
  2671  021E                     	;# 
  2672  021F                     	;# 
  2673  028C                     	;# 
  2674  028D                     	;# 
  2675  028E                     	;# 
  2676  0291                     	;# 
  2677  0291                     	;# 
  2678  0292                     	;# 
  2679  0293                     	;# 
  2680  0294                     	;# 
  2681  0295                     	;# 
  2682  0295                     	;# 
  2683  0296                     	;# 
  2684  0297                     	;# 
  2685  0298                     	;# 
  2686  029F                     	;# 
  2687  030C                     	;# 
  2688  030D                     	;# 
  2689  030E                     	;# 
  2690  0311                     	;# 
  2691  0311                     	;# 
  2692  0312                     	;# 
  2693  0313                     	;# 
  2694  0314                     	;# 
  2695  0315                     	;# 
  2696  0315                     	;# 
  2697  0316                     	;# 
  2698  0317                     	;# 
  2699  0318                     	;# 
  2700  038C                     	;# 
  2701  038D                     	;# 
  2702  038E                     	;# 
  2703  0391                     	;# 
  2704  0392                     	;# 
  2705  0393                     	;# 
  2706  0394                     	;# 
  2707  0395                     	;# 
  2708  0396                     	;# 
  2709  0397                     	;# 
  2710  0398                     	;# 
  2711  0399                     	;# 
  2712  039A                     	;# 
  2713  039C                     	;# 
  2714  039D                     	;# 
  2715  039E                     	;# 
  2716  039F                     	;# 
  2717  0411                     	;# 
  2718  0411                     	;# 
  2719  0412                     	;# 
  2720  0413                     	;# 
  2721  0414                     	;# 
  2722  0415                     	;# 
  2723  0416                     	;# 
  2724  0417                     	;# 
  2725  0418                     	;# 
  2726  0418                     	;# 
  2727  0419                     	;# 
  2728  041A                     	;# 
  2729  041B                     	;# 
  2730  041C                     	;# 
  2731  041D                     	;# 
  2732  041E                     	;# 
  2733  041F                     	;# 
  2734  0498                     	;# 
  2735  0498                     	;# 
  2736  0499                     	;# 
  2737  049A                     	;# 
  2738  049B                     	;# 
  2739  049B                     	;# 
  2740  049C                     	;# 
  2741  049D                     	;# 
  2742  049E                     	;# 
  2743  049F                     	;# 
  2744  0617                     	;# 
  2745  0618                     	;# 
  2746  0619                     	;# 
  2747  0619                     	;# 
  2748  061A                     	;# 
  2749  061B                     	;# 
  2750  061C                     	;# 
  2751  061C                     	;# 
  2752  061F                     	;# 
  2753  0691                     	;# 
  2754  0692                     	;# 
  2755  0693                     	;# 
  2756  0694                     	;# 
  2757  0695                     	;# 
  2758  0696                     	;# 
  2759  0697                     	;# 
  2760  0698                     	;# 
  2761  0699                     	;# 
  2762  0711                     	;# 
  2763  0712                     	;# 
  2764  0713                     	;# 
  2765  0714                     	;# 
  2766  0715                     	;# 
  2767  0716                     	;# 
  2768  0717                     	;# 
  2769  0718                     	;# 
  2770  0719                     	;# 
  2771  0891                     	;# 
  2772  0891                     	;# 
  2773  0891                     	;# 
  2774  0891                     	;# 
  2775  0891                     	;# 
  2776  0891                     	;# 
  2777  0892                     	;# 
  2778  0892                     	;# 
  2779  0892                     	;# 
  2780  0893                     	;# 
  2781  0893                     	;# 
  2782  0893                     	;# 
  2783  0893                     	;# 
  2784  0893                     	;# 
  2785  0893                     	;# 
  2786  0894                     	;# 
  2787  0894                     	;# 
  2788  0894                     	;# 
  2789  0895                     	;# 
  2790  0895                     	;# 
  2791  0895                     	;# 
  2792  0896                     	;# 
  2793  0896                     	;# 
  2794  0896                     	;# 
  2795  089B                     	;# 
  2796  0911                     	;# 
  2797  0912                     	;# 
  2798  0913                     	;# 
  2799  0914                     	;# 
  2800  0915                     	;# 
  2801  0916                     	;# 
  2802  0918                     	;# 
  2803  0919                     	;# 
  2804  091A                     	;# 
  2805  091B                     	;# 
  2806  091C                     	;# 
  2807  091D                     	;# 
  2808  091E                     	;# 
  2809  091F                     	;# 
  2810  0E0F                     	;# 
  2811  0E10                     	;# 
  2812  0E11                     	;# 
  2813  0E12                     	;# 
  2814  0E13                     	;# 
  2815  0E14                     	;# 
  2816  0E15                     	;# 
  2817  0E16                     	;# 
  2818  0E17                     	;# 
  2819  0E18                     	;# 
  2820  0E19                     	;# 
  2821  0E1A                     	;# 
  2822  0E1B                     	;# 
  2823  0E1C                     	;# 
  2824  0E1D                     	;# 
  2825  0E1E                     	;# 
  2826  0E1F                     	;# 
  2827  0E20                     	;# 
  2828  0E21                     	;# 
  2829  0E22                     	;# 
  2830  0E24                     	;# 
  2831  0E25                     	;# 
  2832  0E28                     	;# 
  2833  0E29                     	;# 
  2834  0E2A                     	;# 
  2835  0E2B                     	;# 
  2836  0E2C                     	;# 
  2837  0E2D                     	;# 
  2838  0E2E                     	;# 
  2839  0E2F                     	;# 
  2840  0E90                     	;# 
  2841  0E91                     	;# 
  2842  0E92                     	;# 
  2843  0E94                     	;# 
  2844  0E95                     	;# 
  2845  0E9C                     	;# 
  2846  0E9D                     	;# 
  2847  0E9E                     	;# 
  2848  0E9F                     	;# 
  2849  0EA0                     	;# 
  2850  0EA1                     	;# 
  2851  0EA2                     	;# 
  2852  0EA3                     	;# 
  2853  0EA4                     	;# 
  2854  0EA5                     	;# 
  2855  0EA6                     	;# 
  2856  0EA7                     	;# 
  2857  0F0F                     	;# 
  2858  0F10                     	;# 
  2859  0F11                     	;# 
  2860  0F12                     	;# 
  2861  0F13                     	;# 
  2862  0F14                     	;# 
  2863  0F15                     	;# 
  2864  0F16                     	;# 
  2865  0F17                     	;# 
  2866  0F18                     	;# 
  2867  0F19                     	;# 
  2868  0F1A                     	;# 
  2869  0F1B                     	;# 
  2870  0F1C                     	;# 
  2871  0F1D                     	;# 
  2872  0F1E                     	;# 
  2873  0F1F                     	;# 
  2874  0F20                     	;# 
  2875  0F21                     	;# 
  2876  0F22                     	;# 
  2877  0F23                     	;# 
  2878  0F24                     	;# 
  2879  0F25                     	;# 
  2880  0F26                     	;# 
  2881  0F27                     	;# 
  2882  0F28                     	;# 
  2883  0F29                     	;# 
  2884  0F2A                     	;# 
  2885  0F2B                     	;# 
  2886  0F2C                     	;# 
  2887  0F2D                     	;# 
  2888  0F2E                     	;# 
  2889  0F2F                     	;# 
  2890  0F30                     	;# 
  2891  0F31                     	;# 
  2892  0F32                     	;# 
  2893  0F33                     	;# 
  2894  0F34                     	;# 
  2895  0F35                     	;# 
  2896  0F36                     	;# 
  2897  0F37                     	;# 
  2898  0FE4                     	;# 
  2899  0FE5                     	;# 
  2900  0FE6                     	;# 
  2901  0FE7                     	;# 
  2902  0FE8                     	;# 
  2903  0FE9                     	;# 
  2904  0FEA                     	;# 
  2905  0FEB                     	;# 
  2906  0FED                     	;# 
  2907  0FEE                     	;# 
  2908  0FEF                     	;# 
  2909  0000                     	;# 
  2910  0001                     	;# 
  2911  0002                     	;# 
  2912  0003                     	;# 
  2913  0004                     	;# 
  2914  0005                     	;# 
  2915  0006                     	;# 
  2916  0007                     	;# 
  2917  0008                     	;# 
  2918  0009                     	;# 
  2919  000A                     	;# 
  2920  000B                     	;# 
  2921  000C                     	;# 
  2922  000D                     	;# 
  2923  000E                     	;# 
  2924  0010                     	;# 
  2925  0011                     	;# 
  2926  0012                     	;# 
  2927  0013                     	;# 
  2928  0014                     	;# 
  2929  0015                     	;# 
  2930  0015                     	;# 
  2931  0016                     	;# 
  2932  0016                     	;# 
  2933  0017                     	;# 
  2934  0018                     	;# 
  2935  0019                     	;# 
  2936  0019                     	;# 
  2937  001A                     	;# 
  2938  001B                     	;# 
  2939  001C                     	;# 
  2940  001D                     	;# 
  2941  001E                     	;# 
  2942  001F                     	;# 
  2943  008C                     	;# 
  2944  008D                     	;# 
  2945  008E                     	;# 
  2946  0090                     	;# 
  2947  0091                     	;# 
  2948  0092                     	;# 
  2949  0093                     	;# 
  2950  0094                     	;# 
  2951  0097                     	;# 
  2952  009B                     	;# 
  2953  009B                     	;# 
  2954  009C                     	;# 
  2955  009D                     	;# 
  2956  009E                     	;# 
  2957  009F                     	;# 
  2958  010C                     	;# 
  2959  010D                     	;# 
  2960  010E                     	;# 
  2961  0111                     	;# 
  2962  0112                     	;# 
  2963  0113                     	;# 
  2964  0114                     	;# 
  2965  0115                     	;# 
  2966  0116                     	;# 
  2967  0117                     	;# 
  2968  0118                     	;# 
  2969  0119                     	;# 
  2970  018C                     	;# 
  2971  018D                     	;# 
  2972  018E                     	;# 
  2973  0197                     	;# 
  2974  0199                     	;# 
  2975  0199                     	;# 
  2976  0199                     	;# 
  2977  019A                     	;# 
  2978  019A                     	;# 
  2979  019A                     	;# 
  2980  019B                     	;# 
  2981  019B                     	;# 
  2982  019B                     	;# 
  2983  019B                     	;# 
  2984  019B                     	;# 
  2985  019C                     	;# 
  2986  019C                     	;# 
  2987  019C                     	;# 
  2988  019D                     	;# 
  2989  019D                     	;# 
  2990  019D                     	;# 
  2991  019E                     	;# 
  2992  019E                     	;# 
  2993  019E                     	;# 
  2994  019F                     	;# 
  2995  019F                     	;# 
  2996  019F                     	;# 
  2997  019F                     	;# 
  2998  019F                     	;# 
  2999  020C                     	;# 
  3000  020D                     	;# 
  3001  020E                     	;# 
  3002  0211                     	;# 
  3003  0211                     	;# 
  3004  0212                     	;# 
  3005  0212                     	;# 
  3006  0213                     	;# 
  3007  0213                     	;# 
  3008  0214                     	;# 
  3009  0214                     	;# 
  3010  0215                     	;# 
  3011  0215                     	;# 
  3012  0215                     	;# 
  3013  0215                     	;# 
  3014  0216                     	;# 
  3015  0216                     	;# 
  3016  0217                     	;# 
  3017  0217                     	;# 
  3018  0219                     	;# 
  3019  021A                     	;# 
  3020  021B                     	;# 
  3021  021C                     	;# 
  3022  021D                     	;# 
  3023  021D                     	;# 
  3024  021E                     	;# 
  3025  021F                     	;# 
  3026  028C                     	;# 
  3027  028D                     	;# 
  3028  028E                     	;# 
  3029  0291                     	;# 
  3030  0291                     	;# 
  3031  0292                     	;# 
  3032  0293                     	;# 
  3033  0294                     	;# 
  3034  0295                     	;# 
  3035  0295                     	;# 
  3036  0296                     	;# 
  3037  0297                     	;# 
  3038  0298                     	;# 
  3039  029F                     	;# 
  3040  030C                     	;# 
  3041  030D                     	;# 
  3042  030E                     	;# 
  3043  0311                     	;# 
  3044  0311                     	;# 
  3045  0312                     	;# 
  3046  0313                     	;# 
  3047  0314                     	;# 
  3048  0315                     	;# 
  3049  0315                     	;# 
  3050  0316                     	;# 
  3051  0317                     	;# 
  3052  0318                     	;# 
  3053  038C                     	;# 
  3054  038D                     	;# 
  3055  038E                     	;# 
  3056  0391                     	;# 
  3057  0392                     	;# 
  3058  0393                     	;# 
  3059  0394                     	;# 
  3060  0395                     	;# 
  3061  0396                     	;# 
  3062  0397                     	;# 
  3063  0398                     	;# 
  3064  0399                     	;# 
  3065  039A                     	;# 
  3066  039C                     	;# 
  3067  039D                     	;# 
  3068  039E                     	;# 
  3069  039F                     	;# 
  3070  0411                     	;# 
  3071  0411                     	;# 
  3072  0412                     	;# 
  3073  0413                     	;# 
  3074  0414                     	;# 
  3075  0415                     	;# 
  3076  0416                     	;# 
  3077  0417                     	;# 
  3078  0418                     	;# 
  3079  0418                     	;# 
  3080  0419                     	;# 
  3081  041A                     	;# 
  3082  041B                     	;# 
  3083  041C                     	;# 
  3084  041D                     	;# 
  3085  041E                     	;# 
  3086  041F                     	;# 
  3087  0498                     	;# 
  3088  0498                     	;# 
  3089  0499                     	;# 
  3090  049A                     	;# 
  3091  049B                     	;# 
  3092  049B                     	;# 
  3093  049C                     	;# 
  3094  049D                     	;# 
  3095  049E                     	;# 
  3096  049F                     	;# 
  3097  0617                     	;# 
  3098  0618                     	;# 
  3099  0619                     	;# 
  3100  0619                     	;# 
  3101  061A                     	;# 
  3102  061B                     	;# 
  3103  061C                     	;# 
  3104  061C                     	;# 
  3105  061F                     	;# 
  3106  0691                     	;# 
  3107  0692                     	;# 
  3108  0693                     	;# 
  3109  0694                     	;# 
  3110  0695                     	;# 
  3111  0696                     	;# 
  3112  0697                     	;# 
  3113  0698                     	;# 
  3114  0699                     	;# 
  3115  0711                     	;# 
  3116  0712                     	;# 
  3117  0713                     	;# 
  3118  0714                     	;# 
  3119  0715                     	;# 
  3120  0716                     	;# 
  3121  0717                     	;# 
  3122  0718                     	;# 
  3123  0719                     	;# 
  3124  0891                     	;# 
  3125  0891                     	;# 
  3126  0891                     	;# 
  3127  0891                     	;# 
  3128  0891                     	;# 
  3129  0891                     	;# 
  3130  0892                     	;# 
  3131  0892                     	;# 
  3132  0892                     	;# 
  3133  0893                     	;# 
  3134  0893                     	;# 
  3135  0893                     	;# 
  3136  0893                     	;# 
  3137  0893                     	;# 
  3138  0893                     	;# 
  3139  0894                     	;# 
  3140  0894                     	;# 
  3141  0894                     	;# 
  3142  0895                     	;# 
  3143  0895                     	;# 
  3144  0895                     	;# 
  3145  0896                     	;# 
  3146  0896                     	;# 
  3147  0896                     	;# 
  3148  089B                     	;# 
  3149  0911                     	;# 
  3150  0912                     	;# 
  3151  0913                     	;# 
  3152  0914                     	;# 
  3153  0915                     	;# 
  3154  0916                     	;# 
  3155  0918                     	;# 
  3156  0919                     	;# 
  3157  091A                     	;# 
  3158  091B                     	;# 
  3159  091C                     	;# 
  3160  091D                     	;# 
  3161  091E                     	;# 
  3162  091F                     	;# 
  3163  0E0F                     	;# 
  3164  0E10                     	;# 
  3165  0E11                     	;# 
  3166  0E12                     	;# 
  3167  0E13                     	;# 
  3168  0E14                     	;# 
  3169  0E15                     	;# 
  3170  0E16                     	;# 
  3171  0E17                     	;# 
  3172  0E18                     	;# 
  3173  0E19                     	;# 
  3174  0E1A                     	;# 
  3175  0E1B                     	;# 
  3176  0E1C                     	;# 
  3177  0E1D                     	;# 
  3178  0E1E                     	;# 
  3179  0E1F                     	;# 
  3180  0E20                     	;# 
  3181  0E21                     	;# 
  3182  0E22                     	;# 
  3183  0E24                     	;# 
  3184  0E25                     	;# 
  3185  0E28                     	;# 
  3186  0E29                     	;# 
  3187  0E2A                     	;# 
  3188  0E2B                     	;# 
  3189  0E2C                     	;# 
  3190  0E2D                     	;# 
  3191  0E2E                     	;# 
  3192  0E2F                     	;# 
  3193  0E90                     	;# 
  3194  0E91                     	;# 
  3195  0E92                     	;# 
  3196  0E94                     	;# 
  3197  0E95                     	;# 
  3198  0E9C                     	;# 
  3199  0E9D                     	;# 
  3200  0E9E                     	;# 
  3201  0E9F                     	;# 
  3202  0EA0                     	;# 
  3203  0EA1                     	;# 
  3204  0EA2                     	;# 
  3205  0EA3                     	;# 
  3206  0EA4                     	;# 
  3207  0EA5                     	;# 
  3208  0EA6                     	;# 
  3209  0EA7                     	;# 
  3210  0F0F                     	;# 
  3211  0F10                     	;# 
  3212  0F11                     	;# 
  3213  0F12                     	;# 
  3214  0F13                     	;# 
  3215  0F14                     	;# 
  3216  0F15                     	;# 
  3217  0F16                     	;# 
  3218  0F17                     	;# 
  3219  0F18                     	;# 
  3220  0F19                     	;# 
  3221  0F1A                     	;# 
  3222  0F1B                     	;# 
  3223  0F1C                     	;# 
  3224  0F1D                     	;# 
  3225  0F1E                     	;# 
  3226  0F1F                     	;# 
  3227  0F20                     	;# 
  3228  0F21                     	;# 
  3229  0F22                     	;# 
  3230  0F23                     	;# 
  3231  0F24                     	;# 
  3232  0F25                     	;# 
  3233  0F26                     	;# 
  3234  0F27                     	;# 
  3235  0F28                     	;# 
  3236  0F29                     	;# 
  3237  0F2A                     	;# 
  3238  0F2B                     	;# 
  3239  0F2C                     	;# 
  3240  0F2D                     	;# 
  3241  0F2E                     	;# 
  3242  0F2F                     	;# 
  3243  0F30                     	;# 
  3244  0F31                     	;# 
  3245  0F32                     	;# 
  3246  0F33                     	;# 
  3247  0F34                     	;# 
  3248  0F35                     	;# 
  3249  0F36                     	;# 
  3250  0F37                     	;# 
  3251  0FE4                     	;# 
  3252  0FE5                     	;# 
  3253  0FE6                     	;# 
  3254  0FE7                     	;# 
  3255  0FE8                     	;# 
  3256  0FE9                     	;# 
  3257  0FEA                     	;# 
  3258  0FEB                     	;# 
  3259  0FED                     	;# 
  3260  0FEE                     	;# 
  3261  0FEF                     	;# 
  3262  0000                     	;# 
  3263  0001                     	;# 
  3264  0002                     	;# 
  3265  0003                     	;# 
  3266  0004                     	;# 
  3267  0005                     	;# 
  3268  0006                     	;# 
  3269  0007                     	;# 
  3270  0008                     	;# 
  3271  0009                     	;# 
  3272  000A                     	;# 
  3273  000B                     	;# 
  3274  000C                     	;# 
  3275  000D                     	;# 
  3276  000E                     	;# 
  3277  0010                     	;# 
  3278  0011                     	;# 
  3279  0012                     	;# 
  3280  0013                     	;# 
  3281  0014                     	;# 
  3282  0015                     	;# 
  3283  0015                     	;# 
  3284  0016                     	;# 
  3285  0016                     	;# 
  3286  0017                     	;# 
  3287  0018                     	;# 
  3288  0019                     	;# 
  3289  0019                     	;# 
  3290  001A                     	;# 
  3291  001B                     	;# 
  3292  001C                     	;# 
  3293  001D                     	;# 
  3294  001E                     	;# 
  3295  001F                     	;# 
  3296  008C                     	;# 
  3297  008D                     	;# 
  3298  008E                     	;# 
  3299  0090                     	;# 
  3300  0091                     	;# 
  3301  0092                     	;# 
  3302  0093                     	;# 
  3303  0094                     	;# 
  3304  0097                     	;# 
  3305  009B                     	;# 
  3306  009B                     	;# 
  3307  009C                     	;# 
  3308  009D                     	;# 
  3309  009E                     	;# 
  3310  009F                     	;# 
  3311  010C                     	;# 
  3312  010D                     	;# 
  3313  010E                     	;# 
  3314  0111                     	;# 
  3315  0112                     	;# 
  3316  0113                     	;# 
  3317  0114                     	;# 
  3318  0115                     	;# 
  3319  0116                     	;# 
  3320  0117                     	;# 
  3321  0118                     	;# 
  3322  0119                     	;# 
  3323  018C                     	;# 
  3324  018D                     	;# 
  3325  018E                     	;# 
  3326  0197                     	;# 
  3327  0199                     	;# 
  3328  0199                     	;# 
  3329  0199                     	;# 
  3330  019A                     	;# 
  3331  019A                     	;# 
  3332  019A                     	;# 
  3333  019B                     	;# 
  3334  019B                     	;# 
  3335  019B                     	;# 
  3336  019B                     	;# 
  3337  019B                     	;# 
  3338  019C                     	;# 
  3339  019C                     	;# 
  3340  019C                     	;# 
  3341  019D                     	;# 
  3342  019D                     	;# 
  3343  019D                     	;# 
  3344  019E                     	;# 
  3345  019E                     	;# 
  3346  019E                     	;# 
  3347  019F                     	;# 
  3348  019F                     	;# 
  3349  019F                     	;# 
  3350  019F                     	;# 
  3351  019F                     	;# 
  3352  020C                     	;# 
  3353  020D                     	;# 
  3354  020E                     	;# 
  3355  0211                     	;# 
  3356  0211                     	;# 
  3357  0212                     	;# 
  3358  0212                     	;# 
  3359  0213                     	;# 
  3360  0213                     	;# 
  3361  0214                     	;# 
  3362  0214                     	;# 
  3363  0215                     	;# 
  3364  0215                     	;# 
  3365  0215                     	;# 
  3366  0215                     	;# 
  3367  0216                     	;# 
  3368  0216                     	;# 
  3369  0217                     	;# 
  3370  0217                     	;# 
  3371  0219                     	;# 
  3372  021A                     	;# 
  3373  021B                     	;# 
  3374  021C                     	;# 
  3375  021D                     	;# 
  3376  021D                     	;# 
  3377  021E                     	;# 
  3378  021F                     	;# 
  3379  028C                     	;# 
  3380  028D                     	;# 
  3381  028E                     	;# 
  3382  0291                     	;# 
  3383  0291                     	;# 
  3384  0292                     	;# 
  3385  0293                     	;# 
  3386  0294                     	;# 
  3387  0295                     	;# 
  3388  0295                     	;# 
  3389  0296                     	;# 
  3390  0297                     	;# 
  3391  0298                     	;# 
  3392  029F                     	;# 
  3393  030C                     	;# 
  3394  030D                     	;# 
  3395  030E                     	;# 
  3396  0311                     	;# 
  3397  0311                     	;# 
  3398  0312                     	;# 
  3399  0313                     	;# 
  3400  0314                     	;# 
  3401  0315                     	;# 
  3402  0315                     	;# 
  3403  0316                     	;# 
  3404  0317                     	;# 
  3405  0318                     	;# 
  3406  038C                     	;# 
  3407  038D                     	;# 
  3408  038E                     	;# 
  3409  0391                     	;# 
  3410  0392                     	;# 
  3411  0393                     	;# 
  3412  0394                     	;# 
  3413  0395                     	;# 
  3414  0396                     	;# 
  3415  0397                     	;# 
  3416  0398                     	;# 
  3417  0399                     	;# 
  3418  039A                     	;# 
  3419  039C                     	;# 
  3420  039D                     	;# 
  3421  039E                     	;# 
  3422  039F                     	;# 
  3423  0411                     	;# 
  3424  0411                     	;# 
  3425  0412                     	;# 
  3426  0413                     	;# 
  3427  0414                     	;# 
  3428  0415                     	;# 
  3429  0416                     	;# 
  3430  0417                     	;# 
  3431  0418                     	;# 
  3432  0418                     	;# 
  3433  0419                     	;# 
  3434  041A                     	;# 
  3435  041B                     	;# 
  3436  041C                     	;# 
  3437  041D                     	;# 
  3438  041E                     	;# 
  3439  041F                     	;# 
  3440  0498                     	;# 
  3441  0498                     	;# 
  3442  0499                     	;# 
  3443  049A                     	;# 
  3444  049B                     	;# 
  3445  049B                     	;# 
  3446  049C                     	;# 
  3447  049D                     	;# 
  3448  049E                     	;# 
  3449  049F                     	;# 
  3450  0617                     	;# 
  3451  0618                     	;# 
  3452  0619                     	;# 
  3453  0619                     	;# 
  3454  061A                     	;# 
  3455  061B                     	;# 
  3456  061C                     	;# 
  3457  061C                     	;# 
  3458  061F                     	;# 
  3459  0691                     	;# 
  3460  0692                     	;# 
  3461  0693                     	;# 
  3462  0694                     	;# 
  3463  0695                     	;# 
  3464  0696                     	;# 
  3465  0697                     	;# 
  3466  0698                     	;# 
  3467  0699                     	;# 
  3468  0711                     	;# 
  3469  0712                     	;# 
  3470  0713                     	;# 
  3471  0714                     	;# 
  3472  0715                     	;# 
  3473  0716                     	;# 
  3474  0717                     	;# 
  3475  0718                     	;# 
  3476  0719                     	;# 
  3477  0891                     	;# 
  3478  0891                     	;# 
  3479  0891                     	;# 
  3480  0891                     	;# 
  3481  0891                     	;# 
  3482  0891                     	;# 
  3483  0892                     	;# 
  3484  0892                     	;# 
  3485  0892                     	;# 
  3486  0893                     	;# 
  3487  0893                     	;# 
  3488  0893                     	;# 
  3489  0893                     	;# 
  3490  0893                     	;# 
  3491  0893                     	;# 
  3492  0894                     	;# 
  3493  0894                     	;# 
  3494  0894                     	;# 
  3495  0895                     	;# 
  3496  0895                     	;# 
  3497  0895                     	;# 
  3498  0896                     	;# 
  3499  0896                     	;# 
  3500  0896                     	;# 
  3501  089B                     	;# 
  3502  0911                     	;# 
  3503  0912                     	;# 
  3504  0913                     	;# 
  3505  0914                     	;# 
  3506  0915                     	;# 
  3507  0916                     	;# 
  3508  0918                     	;# 
  3509  0919                     	;# 
  3510  091A                     	;# 
  3511  091B                     	;# 
  3512  091C                     	;# 
  3513  091D                     	;# 
  3514  091E                     	;# 
  3515  091F                     	;# 
  3516  0E0F                     	;# 
  3517  0E10                     	;# 
  3518  0E11                     	;# 
  3519  0E12                     	;# 
  3520  0E13                     	;# 
  3521  0E14                     	;# 
  3522  0E15                     	;# 
  3523  0E16                     	;# 
  3524  0E17                     	;# 
  3525  0E18                     	;# 
  3526  0E19                     	;# 
  3527  0E1A                     	;# 
  3528  0E1B                     	;# 
  3529  0E1C                     	;# 
  3530  0E1D                     	;# 
  3531  0E1E                     	;# 
  3532  0E1F                     	;# 
  3533  0E20                     	;# 
  3534  0E21                     	;# 
  3535  0E22                     	;# 
  3536  0E24                     	;# 
  3537  0E25                     	;# 
  3538  0E28                     	;# 
  3539  0E29                     	;# 
  3540  0E2A                     	;# 
  3541  0E2B                     	;# 
  3542  0E2C                     	;# 
  3543  0E2D                     	;# 
  3544  0E2E                     	;# 
  3545  0E2F                     	;# 
  3546  0E90                     	;# 
  3547  0E91                     	;# 
  3548  0E92                     	;# 
  3549  0E94                     	;# 
  3550  0E95                     	;# 
  3551  0E9C                     	;# 
  3552  0E9D                     	;# 
  3553  0E9E                     	;# 
  3554  0E9F                     	;# 
  3555  0EA0                     	;# 
  3556  0EA1                     	;# 
  3557  0EA2                     	;# 
  3558  0EA3                     	;# 
  3559  0EA4                     	;# 
  3560  0EA5                     	;# 
  3561  0EA6                     	;# 
  3562  0EA7                     	;# 
  3563  0F0F                     	;# 
  3564  0F10                     	;# 
  3565  0F11                     	;# 
  3566  0F12                     	;# 
  3567  0F13                     	;# 
  3568  0F14                     	;# 
  3569  0F15                     	;# 
  3570  0F16                     	;# 
  3571  0F17                     	;# 
  3572  0F18                     	;# 
  3573  0F19                     	;# 
  3574  0F1A                     	;# 
  3575  0F1B                     	;# 
  3576  0F1C                     	;# 
  3577  0F1D                     	;# 
  3578  0F1E                     	;# 
  3579  0F1F                     	;# 
  3580  0F20                     	;# 
  3581  0F21                     	;# 
  3582  0F22                     	;# 
  3583  0F23                     	;# 
  3584  0F24                     	;# 
  3585  0F25                     	;# 
  3586  0F26                     	;# 
  3587  0F27                     	;# 
  3588  0F28                     	;# 
  3589  0F29                     	;# 
  3590  0F2A                     	;# 
  3591  0F2B                     	;# 
  3592  0F2C                     	;# 
  3593  0F2D                     	;# 
  3594  0F2E                     	;# 
  3595  0F2F                     	;# 
  3596  0F30                     	;# 
  3597  0F31                     	;# 
  3598  0F32                     	;# 
  3599  0F33                     	;# 
  3600  0F34                     	;# 
  3601  0F35                     	;# 
  3602  0F36                     	;# 
  3603  0F37                     	;# 
  3604  0FE4                     	;# 
  3605  0FE5                     	;# 
  3606  0FE6                     	;# 
  3607  0FE7                     	;# 
  3608  0FE8                     	;# 
  3609  0FE9                     	;# 
  3610  0FEA                     	;# 
  3611  0FEB                     	;# 
  3612  0FED                     	;# 
  3613  0FEE                     	;# 
  3614  0FEF                     	;_m_led_para
  3615                           
  3616                           	psect	idataBANK2
  3617  1E50                     __pidataBANK2:	
  3618                           
  3619                           ;initializer for ble_check_devid@F8342
  3620  1E50  3433               	retlw	51
  3621  1E51  3430               	retlw	48
  3622  1E52  3433               	retlw	51
  3623  1E53  3431               	retlw	49
  3624  1E54  3433               	retlw	51
  3625  1E55  3436               	retlw	54
  3626  1E56  3433               	retlw	51
  3627  1E57  3433               	retlw	51
  3628  1E58  3433               	retlw	51
  3629  1E59  3430               	retlw	48
  3630  1E5A  3433               	retlw	51
  3631  1E5B  3431               	retlw	49
  3632  1E5C  3433               	retlw	51
  3633  1E5D  3430               	retlw	48
  3634  1E5E  3433               	retlw	51
  3635  1E5F  3433               	retlw	51
  3636  1E60  3400               	retlw	0
  3637                           
  3638                           ;initializer for _MONTH_DAY
  3639  1E61  341F               	retlw	31
  3640  1E62  341C               	retlw	28
  3641  1E63  341F               	retlw	31
  3642  1E64  341E               	retlw	30
  3643  1E65  341F               	retlw	31
  3644  1E66  341E               	retlw	30
  3645  1E67  341F               	retlw	31
  3646  1E68  341F               	retlw	31
  3647  1E69  341E               	retlw	30
  3648  1E6A  341F               	retlw	31
  3649  1E6B  341E               	retlw	30
  3650  1E6C  341F               	retlw	31
  3651                           
  3652                           ;initializer for _led_load_duty
  3653  1E6D  3400               	retlw	low _pwm4_load_duty
  3654  1E6E  3410               	retlw	high _pwm4_load_duty
  3655  1E6F  34D4               	retlw	low _pwm1_load_duty
  3656  1E70  341D               	retlw	high _pwm1_load_duty
  3657  1E71  34DA               	retlw	low _pwm3_load_duty
  3658  1E72  341D               	retlw	high _pwm3_load_duty
  3659  1E73  3410               	retlw	low _pwm5_load_duty
  3660  1E74  341E               	retlw	high _pwm5_load_duty
  3661                           
  3662                           ;initializer for _led_state_cb
  3663  1E75  34E9               	retlw	low _led_state_off_cb
  3664  1E76  340E               	retlw	high _led_state_off_cb
  3665  1E77  3431               	retlw	low _led_state_day_cb
  3666  1E78  340E               	retlw	high _led_state_day_cb
  3667  1E79  3485               	retlw	low _led_state_night_cb
  3668  1E7A  341E               	retlw	high _led_state_night_cb
  3669  1E7B  3456               	retlw	low _led_state_ble_cb
  3670  1E7C  3407               	retlw	high _led_state_ble_cb
  3671                           
  3672                           ;initializer for ble_send_cmd@F8334
  3673  1E7D  3441               	retlw	65
  3674  1E7E  3454               	retlw	84
  3675  1E7F  342B               	retlw	43
  3676  1E80  344F               	retlw	79
  3677  1E81  344B               	retlw	75
  3678  1E82  340D               	retlw	13
  3679  1E83  340A               	retlw	10
  3680  1E84  3400               	retlw	0
  3681                           
  3682                           	psect	nvBANK0
  3683  006C                     __pnvBANK0:	
  3684  006C                     _tx_remain:	
  3685  006C                     	ds	1
  3686                           
  3687                           	psect	nvBANK1
  3688  00E6                     __pnvBANK1:	
  3689  00E6                     _key_func:	
  3690  00E6                     	ds	2
  3691  00E8                     _eusart_rcv_cb:	
  3692  00E8                     	ds	2
  3693  00EA                     _tmr2_isr_cb:	
  3694  00EA                     	ds	2
  3695  00EC                     _tmr0_isr_cb:	
  3696  00EC                     	ds	2
  3697  001F                     _T2CONbits	set	31
  3698  0017                     _T0CON0bits	set	23
  3699  000C                     _PORTAbits	set	12
  3700  000E                     _PORTC	set	14
  3701  000B                     _INTCONbits	set	11
  3702  0011                     _PIR1bits	set	17
  3703  001D                     _TMR2	set	29
  3704  001E                     _PR2	set	30
  3705  001F                     _T2CON	set	31
  3706  0010                     _PIR0bits	set	16
  3707  0015                     _TMR0L	set	21
  3708  0016                     _TMR0H	set	22
  3709  0018                     _T0CON1	set	24
  3710  0017                     _T0CON0	set	23
  3711  008E                     _TRISC	set	142
  3712  008D                     _TRISB	set	141
  3713  008C                     _TRISA	set	140
  3714  0091                     _PIE1bits	set	145
  3715  0090                     _PIE0bits	set	144
  3716  010E                     _LATC	set	270
  3717  010D                     _LATB	set	269
  3718  010C                     _LATA	set	268
  3719  010C                     _LATAbits	set	268
  3720  010D                     _LATBbits	set	269
  3721  010E                     _LATCbits	set	270
  3722  018C                     _ANSELA	set	396
  3723  018D                     _ANSELB	set	397
  3724  018E                     _ANSELC	set	398
  3725  019E                     _TXSTAbits	set	414
  3726  019D                     _RCSTAbits	set	413
  3727  0199                     _RCREG	set	409
  3728  019D                     _RC1STAbits	set	413
  3729  019A                     _TXREG	set	410
  3730  019C                     _SP1BRGH	set	412
  3731  019B                     _SP1BRGL	set	411
  3732  019E                     _TX1STA	set	414
  3733  019D                     _RC1STA	set	413
  3734  019F                     _BAUD1CON	set	415
  3735  020E                     _WPUC	set	526
  3736  020C                     _WPUA	set	524
  3737  020D                     _WPUB	set	525
  3738  028E                     _ODCONC	set	654
  3739  028D                     _ODCONB	set	653
  3740  028C                     _ODCONA	set	652
  3741  0295                     _CCPR2L	set	661
  3742  0296                     _CCPR2H	set	662
  3743  0297                     _CCP2CON	set	663
  3744  029F                     _CCPTMRSbits	set	671
  3745  0291                     _CCPR1L	set	657
  3746  0292                     _CCPR1H	set	658
  3747  0293                     _CCP1CON	set	659
  3748  0315                     _CCPR4L	set	789
  3749  0316                     _CCPR4H	set	790
  3750  0317                     _CCP4CON	set	791
  3751  0311                     _CCPR3L	set	785
  3752  0312                     _CCPR3H	set	786
  3753  0313                     _CCP3CON	set	787
  3754  0619                     _PWM5CON	set	1561
  3755  061F                     _PWMTMRSbits	set	1567
  3756  0617                     _PWM5DCL	set	1559
  3757  0618                     _PWM5DCH	set	1560
  3758  0891                     _NVMADR	set	2193
  3759  0895                     _NVMCON1	set	2197
  3760  0896                     _NVMCON2	set	2198
  3761  0895                     _NVMCON1bits	set	2197
  3762  0893                     _NVMDATL	set	2195
  3763  0891                     _NVMADRL	set	2193
  3764  0892                     _NVMADRH	set	2194
  3765  091E                     _OSCTUNE	set	2334
  3766  091F                     _OSCFRQ	set	2335
  3767  091D                     _OSCEN	set	2333
  3768  091B                     _OSCCON3	set	2331
  3769  0919                     _OSCCON1	set	2329
  3770  0E24                     _RXPPSbits	set	3620
  3771  0E0F                     _PPSLOCKbits	set	3599
  3772  0E0F                     _PPSLOCK	set	3599
  3773  0EA7                     _RC7PPSbits	set	3751
  3774  0EA6                     _RC6PPSbits	set	3750
  3775  0EA3                     _RC3PPSbits	set	3747
  3776  0EA4                     _RC4PPSbits	set	3748
  3777  0EA5                     _RC5PPSbits	set	3749
  3778  0E9C                     _RB4PPSbits	set	3740
  3779                           
  3780                           	psect	stringtext1
  3781  1800                     __pstringtext1:	
  3782  1800                     STR_2:	
  3783  1800  3441               	retlw	65	;'A'
  3784  1801  3454               	retlw	84	;'T'
  3785  1802  342B               	retlw	43	;'+'
  3786  1803  3441               	retlw	65	;'A'
  3787  1804  3444               	retlw	68	;'D'
  3788  1805  3456               	retlw	86	;'V'
  3789  1806  345F               	retlw	95	;'_'
  3790  1807  344D               	retlw	77	;'M'
  3791  1808  3446               	retlw	70	;'F'
  3792  1809  3452               	retlw	82	;'R'
  3793  180A  345F               	retlw	95	;'_'
  3794  180B  3453               	retlw	83	;'S'
  3795  180C  3450               	retlw	80	;'P'
  3796  180D  3443               	retlw	67	;'C'
  3797  180E  343D               	retlw	61	;'='
  3798  180F  3433               	retlw	51	;'3'
  3799  1810  3430               	retlw	48	;'0'
  3800  1811  3433               	retlw	51	;'3'
  3801  1812  3431               	retlw	49	;'1'
  3802  1813  3433               	retlw	51	;'3'
  3803  1814  3436               	retlw	54	;'6'
  3804  1815  3433               	retlw	51	;'3'
  3805  1816  3433               	retlw	51	;'3'
  3806  1817  3433               	retlw	51	;'3'
  3807  1818  3430               	retlw	48	;'0'
  3808  1819  3433               	retlw	51	;'3'
  3809  181A  3431               	retlw	49	;'1'
  3810  181B  3433               	retlw	51	;'3'
  3811  181C  3430               	retlw	48	;'0'
  3812  181D  3433               	retlw	51	;'3'
  3813  181E  3433               	retlw	51	;'3'
  3814  181F  340D               	retlw	13
  3815  1820  340A               	retlw	10
  3816  1821  3400               	retlw	0
  3817                           
  3818                           	psect	stringtext2
  3819  1844                     __pstringtext2:	
  3820  1844                     STR_1:	
  3821  1844  3441               	retlw	65	;'A'
  3822  1845  3454               	retlw	84	;'T'
  3823  1846  342B               	retlw	43	;'+'
  3824  1847  3441               	retlw	65	;'A'
  3825  1848  3444               	retlw	68	;'D'
  3826  1849  3456               	retlw	86	;'V'
  3827  184A  345F               	retlw	95	;'_'
  3828  184B  344D               	retlw	77	;'M'
  3829  184C  3446               	retlw	70	;'F'
  3830  184D  3452               	retlw	82	;'R'
  3831  184E  345F               	retlw	95	;'_'
  3832  184F  3453               	retlw	83	;'S'
  3833  1850  3450               	retlw	80	;'P'
  3834  1851  3443               	retlw	67	;'C'
  3835  1852  343D               	retlw	61	;'='
  3836  1853  343F               	retlw	63	;'?'
  3837  1854  340D               	retlw	13
  3838  1855  340A               	retlw	10
  3839  1856  3400               	retlw	0
  3840                           
  3841                           	psect	stringtext3
  3842  1857                     __pstringtext3:	
  3843  1857                     STR_4:	
  3844  1857  3441               	retlw	65	;'A'
  3845  1858  3454               	retlw	84	;'T'
  3846  1859  342B               	retlw	43	;'+'
  3847  185A  344D               	retlw	77	;'M'
  3848  185B  344F               	retlw	79	;'O'
  3849  185C  3444               	retlw	68	;'D'
  3850  185D  3445               	retlw	69	;'E'
  3851  185E  343D               	retlw	61	;'='
  3852  185F  3444               	retlw	68	;'D'
  3853  1860  3441               	retlw	65	;'A'
  3854  1861  3454               	retlw	84	;'T'
  3855  1862  3441               	retlw	65	;'A'
  3856  1863  340D               	retlw	13
  3857  1864  340A               	retlw	10
  3858  1865  3400               	retlw	0
  3859                           
  3860                           	psect	stringtext4
  3861  1866                     __pstringtext4:	
  3862  1866                     STR_3:	
  3863  1866  3441               	retlw	65	;'A'
  3864  1867  3454               	retlw	84	;'T'
  3865  1868  342B               	retlw	43	;'+'
  3866  1869  3453               	retlw	83	;'S'
  3867  186A  3445               	retlw	69	;'E'
  3868  186B  3454               	retlw	84	;'T'
  3869  186C  343D               	retlw	61	;'='
  3870  186D  3431               	retlw	49	;'1'
  3871  186E  340D               	retlw	13
  3872  186F  340A               	retlw	10
  3873  1870  3400               	retlw	0
  3874                           
  3875                           	psect	stringtext5
  3876  0000                     __pstringtext5:	
  3877                           
  3878                           	psect	bssBANK0
  3879  0055                     __pbssBANK0:	
  3880  0055                     _target_bright:	
  3881  0055                     	ds	8
  3882  005D                     _led_run_para:	
  3883  005D                     	ds	4
  3884  0061                     tmr2_isr_callback@cnt:	
  3885  0061                     	ds	1
  3886  0062                     led_find_device@toggle:	
  3887  0062                     	ds	1
  3888  0063                     _checksum:	
  3889  0063                     	ds	1
  3890  0064                     _index:	
  3891  0064                     	ds	1
  3892  0065                     _rtc_status:	
  3893  0065                     	ds	1
  3894  0066                     key_scan@repeat:	
  3895  0066                     	ds	1
  3896  0067                     key_scan@last_key:	
  3897  0067                     	ds	1
  3898  0068                     key_read@cont:	
  3899  0068                     	ds	1
  3900  0069                     key_read@trg:	
  3901  0069                     	ds	1
  3902  006A                     _tx_head:	
  3903  006A                     	ds	1
  3904  006B                     _tx_tail:	
  3905  006B                     	ds	1
  3906                           
  3907                           	psect	bssBANK1
  3908  00D7                     __pbssBANK1:	
  3909  00D7                     _current_bright:	
  3910  00D7                     	ds	8
  3911  00DF                     _m_current_time:	
  3912  00DF                     	ds	7
  3913                           
  3914                           	psect	dataBANK2
  3915  0120                     __pdataBANK2:	
  3916  0120                     ble_check_devid@F8342:	
  3917  0120                     	ds	17
  3918  0131                     _MONTH_DAY:	
  3919  0131                     	ds	12
  3920  013D                     _led_load_duty:	
  3921  013D                     	ds	8
  3922  0145                     _led_state_cb:	
  3923  0145                     	ds	8
  3924  014D                     ble_send_cmd@F8334:	
  3925  014D                     	ds	8
  3926                           
  3927                           	psect	bssBANK3
  3928  01A0                     __pbssBANK3:	
  3929  01A0                     _rx_buf:	
  3930  01A0                     	ds	80
  3931                           
  3932                           	psect	bssBANK4
  3933  0220                     __pbssBANK4:	
  3934  0220                     _tx_buf:	
  3935  0220                     	ds	64
  3936                           
  3937                           	psect	inittext
  3938  1E04                     init_ram:	
  3939  1E04  00FE               	movwf	126
  3940  1E05                     initloop:	
  3941  1E05  0012               	moviw fsr0++
  3942  1E06  001E               	movwi fsr1++
  3943  1E07  3001               	movlw	1
  3944  1E08  02FE               	subwf	126,f
  3945  1E09  3000               	movlw	0
  3946  1E0A  3BFF               	subwfb	127,f
  3947  1E0B  087F               	movf	127,w
  3948  1E0C  047E               	iorwf	126,w
  3949  1E0D  1903               	btfsc	3,2
  3950  1E0E  3400               	retlw	0
  3951  1E0F  2E05               	goto	initloop
  3952                           
  3953                           	psect	clrtext
  3954  1DF8                     clear_ram0:	
  3955                           ;	Called with FSR0 containing the base address, and
  3956                           ;	btemp/btemp+1 has the size to clear
  3957                           
  3958  1DF8  0064               	clrwdt	;clear the watchdog before getting into this loop
  3959  1DF9                     clrloop0:	
  3960  1DF9  3001               	movlw	1
  3961  1DFA  0180               	clrf	0	;clear RAM location pointed to by FSR
  3962  1DFB  3101               	addfsr 0,1
  3963  1DFC  02FE               	subwf	126,f
  3964  1DFD  3000               	movlw	0
  3965  1DFE  3BFF               	subwfb	127,f
  3966  1DFF  087F               	movf	127,w
  3967  1E00  047E               	iorwf	126,w
  3968  1E01  1903               	btfsc	3,2
  3969  1E02  3400               	retlw	0	;all done for this memory range, return
  3970  1E03  2DF9               	goto	clrloop0	;have we reached the end yet?
  3971                           
  3972                           	psect	cstackBANK1
  3973  00A0                     __pcstackBANK1:	
  3974  00A0                     led_pro_process@index:	
  3975  00A0                     led_auto_process@val:	
  3976                           ; 10 bytes @ 0x0
  3977                           
  3978                           
  3979                           ; 24 bytes @ 0x0
  3980  00A0                     	ds	10
  3981  00AA                     led_pro_process@tmp:	
  3982                           
  3983                           ; 1 bytes @ 0xA
  3984  00AA                     	ds	1
  3985  00AB                     led_pro_process@t1:	
  3986                           
  3987                           ; 2 bytes @ 0xB
  3988  00AB                     	ds	2
  3989  00AD                     led_pro_process@t2:	
  3990                           
  3991                           ; 2 bytes @ 0xD
  3992  00AD                     	ds	2
  3993  00AF                     led_pro_process@dt:	
  3994                           
  3995                           ; 4 bytes @ 0xF
  3996  00AF                     	ds	4
  3997  00B3                     led_pro_process@flag:	
  3998                           
  3999                           ; 1 bytes @ 0x13
  4000  00B3                     	ds	1
  4001  00B4                     led_pro_process@duration:	
  4002                           
  4003                           ; 2 bytes @ 0x14
  4004  00B4                     	ds	2
  4005  00B6                     led_pro_process@p1:	
  4006                           
  4007                           ; 2 bytes @ 0x16
  4008  00B6                     	ds	2
  4009  00B8                     led_pro_process@p2:	
  4010  00B8                     led_auto_process@tr:	
  4011                           ; 2 bytes @ 0x18
  4012                           
  4013                           
  4014                           ; 12 bytes @ 0x18
  4015  00B8                     	ds	2
  4016  00BA                     led_pro_process@start:	
  4017                           
  4018                           ; 2 bytes @ 0x1A
  4019  00BA                     	ds	2
  4020  00BC                     led_pro_process@end:	
  4021                           
  4022                           ; 2 bytes @ 0x1C
  4023  00BC                     	ds	2
  4024  00BE                     led_pro_process@point_count:	
  4025                           
  4026                           ; 1 bytes @ 0x1E
  4027  00BE                     	ds	1
  4028  00BF                     led_pro_process@et:	
  4029                           
  4030                           ; 2 bytes @ 0x1F
  4031  00BF                     	ds	2
  4032  00C1                     led_pro_process@sp:	
  4033                           
  4034                           ; 2 bytes @ 0x21
  4035  00C1                     	ds	2
  4036  00C3                     led_pro_process@ep:	
  4037                           
  4038                           ; 2 bytes @ 0x23
  4039  00C3                     	ds	1
  4040  00C4                     led_auto_process@duration:	
  4041                           
  4042                           ; 2 bytes @ 0x24
  4043  00C4                     	ds	1
  4044  00C5                     led_pro_process@j:	
  4045                           
  4046                           ; 1 bytes @ 0x25
  4047  00C5                     	ds	1
  4048  00C6                     led_auto_process@j:	
  4049  00C6                     led_pro_process@st:	
  4050                           ; 1 bytes @ 0x26
  4051                           
  4052                           
  4053                           ; 2 bytes @ 0x26
  4054  00C6                     	ds	1
  4055  00C7                     led_auto_process@dt:	
  4056                           
  4057                           ; 4 bytes @ 0x27
  4058  00C7                     	ds	1
  4059  00C8                     led_pro_process@i:	
  4060                           
  4061                           ; 1 bytes @ 0x28
  4062  00C8                     	ds	3
  4063  00CB                     led_auto_process@count:	
  4064                           
  4065                           ; 1 bytes @ 0x2B
  4066  00CB                     	ds	1
  4067  00CC                     led_auto_process@et:	
  4068                           
  4069                           ; 2 bytes @ 0x2C
  4070  00CC                     	ds	2
  4071  00CE                     led_auto_process@k:	
  4072                           
  4073                           ; 1 bytes @ 0x2E
  4074  00CE                     	ds	1
  4075  00CF                     led_auto_process@st:	
  4076                           
  4077                           ; 2 bytes @ 0x2F
  4078  00CF                     	ds	2
  4079  00D1                     led_auto_process@p:	
  4080                           
  4081                           ; 2 bytes @ 0x31
  4082  00D1                     	ds	2
  4083  00D3                     led_auto_process@i:	
  4084                           
  4085                           ; 1 bytes @ 0x33
  4086  00D3                     	ds	1
  4087  00D4                     led_second_cb@sec:	
  4088                           
  4089                           ; 1 bytes @ 0x34
  4090  00D4                     	ds	1
  4091  00D5                     led_second_cb@ct:	
  4092                           
  4093                           ; 2 bytes @ 0x35
  4094  00D5                     	ds	2
  4095                           
  4096                           	psect	cstackCOMMON
  4097  0070                     __pcstackCOMMON:	
  4098  0070                     ?_ble_decode:	
  4099  0070                     ?_led_set_mode:	
  4100                           ; 1 bytes @ 0x0
  4101                           
  4102  0070                     ?_led_set_power:	
  4103                           ; 1 bytes @ 0x0
  4104                           
  4105  0070                     ?_led_set_bright:	
  4106                           ; 1 bytes @ 0x0
  4107                           
  4108  0070                     ?_led_set_custom:	
  4109                           ; 1 bytes @ 0x0
  4110                           
  4111  0070                     ?_led_set_cycle:	
  4112                           ; 1 bytes @ 0x0
  4113                           
  4114  0070                     ?_led_set_preview:	
  4115                           ; 1 bytes @ 0x0
  4116                           
  4117  0070                     ?_led_start_preview:	
  4118                           ; 1 bytes @ 0x0
  4119                           
  4120  0070                     ?_led_stop_preview:	
  4121                           ; 1 bytes @ 0x0
  4122                           
  4123  0070                     ?_led_set_time:	
  4124                           ; 1 bytes @ 0x0
  4125                           
  4126  0070                     ?_led_start_flash:	
  4127                           ; 1 bytes @ 0x0
  4128                           
  4129  0070                     ?_led_set_pro:	
  4130                           ; 1 bytes @ 0x0
  4131                           
  4132  0070                     ?_led_turnoff:	
  4133                           ; 1 bytes @ 0x0
  4134                           
  4135  0070                     ?_led_indicate_off:	
  4136                           ; 1 bytes @ 0x0
  4137                           
  4138  0070                     ?_led_update_day_bright:	
  4139                           ; 1 bytes @ 0x0
  4140                           
  4141  0070                     ?_led_indicate_day:	
  4142                           ; 1 bytes @ 0x0
  4143                           
  4144  0070                     ?_led_update_night_bright:	
  4145                           ; 1 bytes @ 0x0
  4146                           
  4147  0070                     ?_led_indicate_night:	
  4148                           ; 1 bytes @ 0x0
  4149                           
  4150  0070                     ?_led_turnon_ramp:	
  4151                           ; 1 bytes @ 0x0
  4152                           
  4153  0070                     ?_led_turnoff_ramp:	
  4154                           ; 1 bytes @ 0x0
  4155                           
  4156  0070                     ?_led_indicate_ble:	
  4157                           ; 1 bytes @ 0x0
  4158                           
  4159  0070                     ?_led_prepare_to_save:	
  4160                           ; 1 bytes @ 0x0
  4161                           
  4162  0070                     ?_tmr0_isr:	
  4163                           ; 1 bytes @ 0x0
  4164                           
  4165  0070                     ?_tmr2_isr:	
  4166                           ; 1 bytes @ 0x0
  4167                           
  4168  0070                     ?_pwm1_init:	
  4169                           ; 1 bytes @ 0x0
  4170                           
  4171  0070                     ?_pwm1_load_duty:	
  4172                           ; 1 bytes @ 0x0
  4173                           
  4174  0070                     ?_pwm2_init:	
  4175                           ; 1 bytes @ 0x0
  4176                           
  4177  0070                     ?_pwm3_init:	
  4178                           ; 1 bytes @ 0x0
  4179                           
  4180  0070                     ?_pwm3_load_duty:	
  4181                           ; 1 bytes @ 0x0
  4182                           
  4183  0070                     ?_pwm4_init:	
  4184                           ; 1 bytes @ 0x0
  4185                           
  4186  0070                     ?_pwm4_load_duty:	
  4187                           ; 1 bytes @ 0x0
  4188                           
  4189  0070                     ?_pwm5_init:	
  4190                           ; 1 bytes @ 0x0
  4191                           
  4192  0070                     ?_pwm5_load_duty:	
  4193                           ; 1 bytes @ 0x0
  4194                           
  4195  0070                     ?_eeprom_read:	
  4196                           ; 1 bytes @ 0x0
  4197                           
  4198  0070                     ?_eusart_write:	
  4199                           ; 1 bytes @ 0x0
  4200                           
  4201  0070                     ?_eusart_transmit_isr:	
  4202                           ; 1 bytes @ 0x0
  4203                           
  4204  0070                     ??_eusart_transmit_isr:	
  4205                           ; 1 bytes @ 0x0
  4206                           
  4207  0070                     ?_eusart_receive_isr:	
  4208                           ; 1 bytes @ 0x0
  4209                           
  4210  0070                     ?_key_read:	
  4211                           ; 1 bytes @ 0x0
  4212                           
  4213  0070                     ??_key_read:	
  4214                           ; 1 bytes @ 0x0
  4215                           
  4216  0070                     ?_key_scan:	
  4217                           ; 1 bytes @ 0x0
  4218                           
  4219  0070                     ?_rtc_init:	
  4220                           ; 1 bytes @ 0x0
  4221                           
  4222  0070                     ?_rtc_process:	
  4223                           ; 1 bytes @ 0x0
  4224                           
  4225  0070                     ?_rtc_second_ready:	
  4226                           ; 1 bytes @ 0x0
  4227                           
  4228  0070                     ?_rtc_set:	
  4229                           ; 1 bytes @ 0x0
  4230                           
  4231  0070                     ?_rtc_get_hour:	
  4232                           ; 1 bytes @ 0x0
  4233                           
  4234  0070                     ?_rtc_get_minute:	
  4235                           ; 1 bytes @ 0x0
  4236                           
  4237  0070                     ?_rtc_get_second:	
  4238                           ; 1 bytes @ 0x0
  4239                           
  4240  0070                     ?_ble_check_devid:	
  4241                           ; 1 bytes @ 0x0
  4242                           
  4243  0070                     ?_ble_transmit_start:	
  4244                           ; 1 bytes @ 0x0
  4245                           
  4246  0070                     ?_ble_transmit_stop:	
  4247                           ; 1 bytes @ 0x0
  4248                           
  4249  0070                     ?_ble_ready_to_receive:	
  4250                           ; 1 bytes @ 0x0
  4251                           
  4252  0070                     ?_ble_receive_start:	
  4253                           ; 1 bytes @ 0x0
  4254                           
  4255  0070                     ?_ble_receive_complete:	
  4256                           ; 1 bytes @ 0x0
  4257                           
  4258  0070                     ?_ble_receive_stop:	
  4259                           ; 1 bytes @ 0x0
  4260                           
  4261  0070                     ?_ble_process:	
  4262                           ; 1 bytes @ 0x0
  4263                           
  4264  0070                     ?_ble_init:	
  4265                           ; 1 bytes @ 0x0
  4266                           
  4267  0070                     ?_ble_send_data:	
  4268                           ; 1 bytes @ 0x0
  4269                           
  4270  0070                     ?_ble_ota_ack:	
  4271                           ; 1 bytes @ 0x0
  4272                           
  4273  0070                     ?_ble_receive:	
  4274                           ; 1 bytes @ 0x0
  4275                           
  4276  0070                     ?_led_para_default:	
  4277                           ; 1 bytes @ 0x0
  4278                           
  4279  0070                     ?_led_para_init:	
  4280                           ; 1 bytes @ 0x0
  4281                           
  4282  0070                     ?_led_init:	
  4283                           ; 1 bytes @ 0x0
  4284                           
  4285  0070                     ?_led_ramp:	
  4286                           ; 1 bytes @ 0x0
  4287                           
  4288  0070                     ?_led_process:	
  4289                           ; 1 bytes @ 0x0
  4290                           
  4291  0070                     ?_led_turnon_max:	
  4292                           ; 1 bytes @ 0x0
  4293                           
  4294  0070                     ?_led_update_day_status:	
  4295                           ; 1 bytes @ 0x0
  4296                           
  4297  0070                     ??_led_update_day_status:	
  4298                           ; 1 bytes @ 0x0
  4299                           
  4300  0070                     ?_led_update_night_status:	
  4301                           ; 1 bytes @ 0x0
  4302                           
  4303  0070                     ??_led_update_night_status:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306  0070                     ?_led_state_off_short_press_cb:	
  4307                           ; 1 bytes @ 0x0
  4308                           
  4309  0070                     ?_led_state_off_long_press_cb:	
  4310                           ; 1 bytes @ 0x0
  4311                           
  4312  0070                     ?_led_state_off_cont_press_cb:	
  4313                           ; 1 bytes @ 0x0
  4314                           
  4315  0070                     ??_led_state_off_cont_press_cb:	
  4316                           ; 1 bytes @ 0x0
  4317                           
  4318  0070                     ?_led_state_off_release_cb:	
  4319                           ; 1 bytes @ 0x0
  4320                           
  4321  0070                     ??_led_state_off_release_cb:	
  4322                           ; 1 bytes @ 0x0
  4323                           
  4324  0070                     ?_led_state_day_short_press_cb:	
  4325                           ; 1 bytes @ 0x0
  4326                           
  4327  0070                     ?_led_state_day_long_press_cb:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330  0070                     ?_led_state_day_cont_press_cb:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333  0070                     ?_led_state_day_release_cb:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336  0070                     ??_led_state_day_release_cb:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339  0070                     ?_led_state_night_short_press_cb:	
  4340                           ; 1 bytes @ 0x0
  4341                           
  4342  0070                     ??_led_state_night_short_press_cb:	
  4343                           ; 1 bytes @ 0x0
  4344                           
  4345  0070                     ?_led_state_night_long_press_cb:	
  4346                           ; 1 bytes @ 0x0
  4347                           
  4348  0070                     ?_led_state_night_cont_press_cb:	
  4349                           ; 1 bytes @ 0x0
  4350                           
  4351  0070                     ?_led_state_night_release_cb:	
  4352                           ; 1 bytes @ 0x0
  4353                           
  4354  0070                     ??_led_state_night_release_cb:	
  4355                           ; 1 bytes @ 0x0
  4356                           
  4357  0070                     ?_led_state_ble_short_press_cb:	
  4358                           ; 1 bytes @ 0x0
  4359                           
  4360  0070                     ?_led_state_ble_long_press_cb:	
  4361                           ; 1 bytes @ 0x0
  4362                           
  4363  0070                     ??_led_state_ble_long_press_cb:	
  4364                           ; 1 bytes @ 0x0
  4365                           
  4366  0070                     ?_led_state_ble_cont_press_cb:	
  4367                           ; 1 bytes @ 0x0
  4368                           
  4369  0070                     ??_led_state_ble_cont_press_cb:	
  4370                           ; 1 bytes @ 0x0
  4371                           
  4372  0070                     ?_led_state_ble_release_cb:	
  4373                           ; 1 bytes @ 0x0
  4374                           
  4375  0070                     ??_led_state_ble_release_cb:	
  4376                           ; 1 bytes @ 0x0
  4377                           
  4378  0070                     ?_led_find_device:	
  4379                           ; 1 bytes @ 0x0
  4380                           
  4381  0070                     ?_led_preview:	
  4382                           ; 1 bytes @ 0x0
  4383                           
  4384  0070                     ?_led_save_para:	
  4385                           ; 1 bytes @ 0x0
  4386                           
  4387  0070                     ?_led_second_cb:	
  4388                           ; 1 bytes @ 0x0
  4389                           
  4390  0070                     ?_osc_init:	
  4391                           ; 1 bytes @ 0x0
  4392                           
  4393  0070                     ?_gpio_init:	
  4394                           ; 1 bytes @ 0x0
  4395                           
  4396  0070                     ?_tmr2_isr_callback:	
  4397                           ; 1 bytes @ 0x0
  4398                           
  4399  0070                     ?_app_init:	
  4400                           ; 1 bytes @ 0x0
  4401                           
  4402  0070                     ?_app_isr:	
  4403                           ; 1 bytes @ 0x0
  4404                           
  4405  0070                     ?_main:	
  4406                           ; 1 bytes @ 0x0
  4407                           
  4408  0070                     ?i1_increase:	
  4409                           ; 1 bytes @ 0x0
  4410                           
  4411  0070                     ?i1_decrease:	
  4412                           ; 1 bytes @ 0x0
  4413                           
  4414  0070                     ?i1_led_turnoff:	
  4415                           ; 1 bytes @ 0x0
  4416                           
  4417  0070                     ??i1_led_turnoff:	
  4418                           ; 1 bytes @ 0x0
  4419                           
  4420  0070                     ?i1_led_indicate_off:	
  4421                           ; 1 bytes @ 0x0
  4422                           
  4423  0070                     ??i1_led_indicate_off:	
  4424                           ; 1 bytes @ 0x0
  4425                           
  4426  0070                     ?i1_led_indicate_day:	
  4427                           ; 1 bytes @ 0x0
  4428                           
  4429  0070                     ??i1_led_indicate_day:	
  4430                           ; 1 bytes @ 0x0
  4431                           
  4432  0070                     ?i1_led_indicate_night:	
  4433                           ; 1 bytes @ 0x0
  4434                           
  4435  0070                     ??i1_led_indicate_night:	
  4436                           ; 1 bytes @ 0x0
  4437                           
  4438  0070                     ?i1_led_indicate_ble:	
  4439                           ; 1 bytes @ 0x0
  4440                           
  4441  0070                     ??i1_led_indicate_ble:	
  4442                           ; 1 bytes @ 0x0
  4443                           
  4444  0070                     ?i1_led_update_day_bright:	
  4445                           ; 1 bytes @ 0x0
  4446                           
  4447  0070                     ??i1_led_update_day_bright:	
  4448                           ; 1 bytes @ 0x0
  4449                           
  4450  0070                     ?i1_led_update_night_bright:	
  4451                           ; 1 bytes @ 0x0
  4452                           
  4453  0070                     ??i1_led_update_night_bright:	
  4454                           ; 1 bytes @ 0x0
  4455                           
  4456  0070                     ?i1_led_prepare_to_save:	
  4457                           ; 1 bytes @ 0x0
  4458                           
  4459  0070                     ??i1_led_prepare_to_save:	
  4460                           ; 1 bytes @ 0x0
  4461                           
  4462  0070                     ?___lwmod:	
  4463                           ; 1 bytes @ 0x0
  4464                           
  4465  0070                     key_read@dat:	
  4466                           ; 2 bytes @ 0x0
  4467                           
  4468  0070                     ble_receive@rcv:	
  4469                           ; 1 bytes @ 0x0
  4470                           
  4471  0070                     i1led_turnoff@i:	
  4472                           ; 1 bytes @ 0x0
  4473                           
  4474  0070                     pwm1_load_duty@value:	
  4475                           ; 1 bytes @ 0x0
  4476                           
  4477  0070                     pwm3_load_duty@value:	
  4478                           ; 2 bytes @ 0x0
  4479                           
  4480  0070                     pwm4_load_duty@value:	
  4481                           ; 2 bytes @ 0x0
  4482                           
  4483  0070                     pwm5_load_duty@value:	
  4484                           ; 2 bytes @ 0x0
  4485                           
  4486  0070                     ___lwmod@divisor:	
  4487                           ; 2 bytes @ 0x0
  4488                           
  4489  0070                     i1increase@psrc:	
  4490                           ; 2 bytes @ 0x0
  4491                           
  4492  0070                     i1decrease@psrc:	
  4493                           ; 2 bytes @ 0x0
  4494                           
  4495                           
  4496                           ; 2 bytes @ 0x0
  4497  0070                     	ds	1
  4498  0071                     ??_eusart_receive_isr:	
  4499  0071                     ??_ble_receive:	
  4500                           ; 1 bytes @ 0x1
  4501                           
  4502  0071                     ??_led_state_ble_short_press_cb:	
  4503                           ; 1 bytes @ 0x1
  4504                           
  4505  0071                     eusart_receive_isr@rcv:	
  4506                           ; 1 bytes @ 0x1
  4507                           
  4508                           
  4509                           ; 1 bytes @ 0x1
  4510  0071                     	ds	1
  4511  0072                     ??_pwm1_load_duty:	
  4512  0072                     ??_pwm3_load_duty:	
  4513                           ; 1 bytes @ 0x2
  4514                           
  4515  0072                     ??_pwm4_load_duty:	
  4516                           ; 1 bytes @ 0x2
  4517                           
  4518  0072                     ??_pwm5_load_duty:	
  4519                           ; 1 bytes @ 0x2
  4520                           
  4521  0072                     ??_led_state_day_long_press_cb:	
  4522                           ; 1 bytes @ 0x2
  4523                           
  4524  0072                     ??_led_state_night_long_press_cb:	
  4525                           ; 1 bytes @ 0x2
  4526                           
  4527  0072                     i1increase@delt:	
  4528                           ; 1 bytes @ 0x2
  4529                           
  4530  0072                     i1decrease@delt:	
  4531                           ; 1 bytes @ 0x2
  4532                           
  4533  0072                     ___lwmod@dividend:	
  4534                           ; 1 bytes @ 0x2
  4535                           
  4536                           
  4537                           ; 2 bytes @ 0x2
  4538  0072                     	ds	1
  4539  0073                     i1increase@max:	
  4540  0073                     i1decrease@min:	
  4541                           ; 2 bytes @ 0x3
  4542                           
  4543                           
  4544                           ; 2 bytes @ 0x3
  4545  0073                     	ds	1
  4546  0074                     ??_led_ramp:	
  4547  0074                     ??___lwmod:	
  4548                           ; 1 bytes @ 0x4
  4549                           
  4550  0074                     ___lwmod@counter:	
  4551                           ; 1 bytes @ 0x4
  4552                           
  4553  0074                     i1led_update_day_bright@i:	
  4554                           ; 1 bytes @ 0x4
  4555                           
  4556  0074                     i1led_update_night_bright@i:	
  4557                           ; 1 bytes @ 0x4
  4558                           
  4559                           
  4560                           ; 1 bytes @ 0x4
  4561  0074                     	ds	1
  4562  0075                     ?_rtc_is_leap_year:	
  4563  0075                     ??_led_state_off_short_press_cb:	
  4564                           ; 1 bytes @ 0x5
  4565                           
  4566  0075                     ??_led_state_off_long_press_cb:	
  4567                           ; 1 bytes @ 0x5
  4568                           
  4569  0075                     ??_led_state_day_short_press_cb:	
  4570                           ; 1 bytes @ 0x5
  4571                           
  4572  0075                     ??i1_increase:	
  4573                           ; 1 bytes @ 0x5
  4574                           
  4575  0075                     ??i1_decrease:	
  4576                           ; 1 bytes @ 0x5
  4577                           
  4578  0075                     rtc_is_leap_year@year:	
  4579                           ; 1 bytes @ 0x5
  4580                           
  4581                           
  4582                           ; 2 bytes @ 0x5
  4583  0075                     	ds	2
  4584  0077                     ??_tmr0_isr:	
  4585  0077                     ??_rtc_is_leap_year:	
  4586                           ; 1 bytes @ 0x7
  4587                           
  4588  0077                     ??_rtc_process:	
  4589                           ; 1 bytes @ 0x7
  4590                           
  4591                           
  4592                           ; 1 bytes @ 0x7
  4593  0077                     	ds	2
  4594  0079                     ?_led_state_off_cb:	
  4595  0079                     ?_led_state_day_cb:	
  4596                           ; 1 bytes @ 0x9
  4597                           
  4598  0079                     ?_led_state_night_cb:	
  4599                           ; 1 bytes @ 0x9
  4600                           
  4601  0079                     ?_led_state_ble_cb:	
  4602                           ; 1 bytes @ 0x9
  4603                           
  4604  0079                     ??_led_state_day_cont_press_cb:	
  4605                           ; 1 bytes @ 0x9
  4606                           
  4607  0079                     ??_led_state_night_cont_press_cb:	
  4608                           ; 1 bytes @ 0x9
  4609                           
  4610  0079                     led_state_off_cb@key:	
  4611                           ; 1 bytes @ 0x9
  4612                           
  4613  0079                     led_state_day_cb@key:	
  4614                           ; 1 bytes @ 0x9
  4615                           
  4616  0079                     led_state_night_cb@key:	
  4617                           ; 1 bytes @ 0x9
  4618                           
  4619  0079                     led_state_ble_cb@key:	
  4620                           ; 1 bytes @ 0x9
  4621                           
  4622                           
  4623                           ; 1 bytes @ 0x9
  4624  0079                     	ds	1
  4625  007A                     led_ramp@i:	
  4626  007A                     led_state_off_cb@state:	
  4627                           ; 1 bytes @ 0xA
  4628                           
  4629  007A                     led_state_day_cb@state:	
  4630                           ; 1 bytes @ 0xA
  4631                           
  4632  007A                     led_state_night_cb@state:	
  4633                           ; 1 bytes @ 0xA
  4634                           
  4635  007A                     led_state_ble_cb@state:	
  4636                           ; 1 bytes @ 0xA
  4637                           
  4638                           
  4639                           ; 1 bytes @ 0xA
  4640  007A                     	ds	1
  4641  007B                     ??_led_state_off_cb:	
  4642  007B                     ??_led_state_day_cb:	
  4643                           ; 1 bytes @ 0xB
  4644                           
  4645  007B                     ??_led_state_night_cb:	
  4646                           ; 1 bytes @ 0xB
  4647                           
  4648  007B                     ??_led_state_ble_cb:	
  4649                           ; 1 bytes @ 0xB
  4650                           
  4651  007B                     ??_led_process:	
  4652                           ; 1 bytes @ 0xB
  4653                           
  4654  007B                     ?_led_touch_cb:	
  4655                           ; 1 bytes @ 0xB
  4656                           
  4657  007B                     led_touch_cb@key:	
  4658                           ; 1 bytes @ 0xB
  4659                           
  4660                           
  4661                           ; 1 bytes @ 0xB
  4662  007B                     	ds	1
  4663  007C                     led_touch_cb@state:	
  4664                           
  4665                           ; 1 bytes @ 0xC
  4666  007C                     	ds	1
  4667  007D                     ?_key_action:	
  4668  007D                     ??_led_touch_cb:	
  4669                           ; 1 bytes @ 0xD
  4670                           
  4671  007D                     key_action@state:	
  4672                           ; 1 bytes @ 0xD
  4673                           
  4674                           
  4675                           ; 1 bytes @ 0xD
  4676  007D                     	ds	1
  4677  007E                     ??_tmr2_isr:	
  4678  007E                     ??_key_action:	
  4679                           ; 1 bytes @ 0xE
  4680                           
  4681  007E                     ??_key_scan:	
  4682                           ; 1 bytes @ 0xE
  4683                           
  4684  007E                     ??_tmr2_isr_callback:	
  4685                           ; 1 bytes @ 0xE
  4686                           
  4687  007E                     ??_app_isr:	
  4688                           ; 1 bytes @ 0xE
  4689                           
  4690                           
  4691                           	psect	cstackBANK0
  4692  0020                     __pcstackBANK0:	
  4693                           ; 1 bytes @ 0xE
  4694                           
  4695  0020                     key_action@key:	
  4696                           
  4697                           ; 1 bytes @ 0x0
  4698  0020                     	ds	1
  4699  0021                     key_scan@key_value:	
  4700                           
  4701                           ; 1 bytes @ 0x1
  4702  0021                     	ds	1
  4703  0022                     ??_led_set_bright:	
  4704  0022                     ??_led_set_cycle:	
  4705                           ; 1 bytes @ 0x2
  4706                           
  4707  0022                     ??_led_set_preview:	
  4708                           ; 1 bytes @ 0x2
  4709                           
  4710  0022                     ??_led_start_preview:	
  4711                           ; 1 bytes @ 0x2
  4712                           
  4713  0022                     ??_led_stop_preview:	
  4714                           ; 1 bytes @ 0x2
  4715                           
  4716  0022                     ??_led_start_flash:	
  4717                           ; 1 bytes @ 0x2
  4718                           
  4719  0022                     ??_led_turnoff:	
  4720                           ; 1 bytes @ 0x2
  4721                           
  4722  0022                     ??_led_indicate_off:	
  4723                           ; 1 bytes @ 0x2
  4724                           
  4725  0022                     ??_led_update_day_bright:	
  4726                           ; 1 bytes @ 0x2
  4727                           
  4728  0022                     ??_led_indicate_day:	
  4729                           ; 1 bytes @ 0x2
  4730                           
  4731  0022                     ??_led_update_night_bright:	
  4732                           ; 1 bytes @ 0x2
  4733                           
  4734  0022                     ??_led_indicate_night:	
  4735                           ; 1 bytes @ 0x2
  4736                           
  4737  0022                     ??_led_turnon_ramp:	
  4738                           ; 1 bytes @ 0x2
  4739                           
  4740  0022                     ??_led_turnoff_ramp:	
  4741                           ; 1 bytes @ 0x2
  4742                           
  4743  0022                     ??_led_indicate_ble:	
  4744                           ; 1 bytes @ 0x2
  4745                           
  4746  0022                     ??_led_prepare_to_save:	
  4747                           ; 1 bytes @ 0x2
  4748                           
  4749  0022                     ?_tmr0_init:	
  4750                           ; 1 bytes @ 0x2
  4751                           
  4752  0022                     ?_tmr2_init:	
  4753                           ; 1 bytes @ 0x2
  4754                           
  4755  0022                     ??_pwm1_init:	
  4756                           ; 1 bytes @ 0x2
  4757                           
  4758  0022                     ??_pwm2_init:	
  4759                           ; 1 bytes @ 0x2
  4760                           
  4761  0022                     ??_pwm3_init:	
  4762                           ; 1 bytes @ 0x2
  4763                           
  4764  0022                     ??_pwm4_init:	
  4765                           ; 1 bytes @ 0x2
  4766                           
  4767  0022                     ??_pwm5_init:	
  4768                           ; 1 bytes @ 0x2
  4769                           
  4770  0022                     ?_eeprom_write:	
  4771                           ; 1 bytes @ 0x2
  4772                           
  4773  0022                     ??_eeprom_read:	
  4774                           ; 1 bytes @ 0x2
  4775                           
  4776  0022                     ?_eusart_init:	
  4777                           ; 1 bytes @ 0x2
  4778                           
  4779  0022                     ??_eusart_write:	
  4780                           ; 1 bytes @ 0x2
  4781                           
  4782  0022                     ?_key_init:	
  4783                           ; 1 bytes @ 0x2
  4784                           
  4785  0022                     ??_rtc_init:	
  4786                           ; 1 bytes @ 0x2
  4787                           
  4788  0022                     ??_rtc_second_ready:	
  4789                           ; 1 bytes @ 0x2
  4790                           
  4791  0022                     ??_rtc_set:	
  4792                           ; 1 bytes @ 0x2
  4793                           
  4794  0022                     ??_rtc_get_hour:	
  4795                           ; 1 bytes @ 0x2
  4796                           
  4797  0022                     ??_rtc_get_minute:	
  4798                           ; 1 bytes @ 0x2
  4799                           
  4800  0022                     ??_rtc_get_second:	
  4801                           ; 1 bytes @ 0x2
  4802                           
  4803  0022                     ?_increase:	
  4804                           ; 1 bytes @ 0x2
  4805                           
  4806  0022                     ?_decrease:	
  4807                           ; 1 bytes @ 0x2
  4808                           
  4809  0022                     ??_ble_transmit_start:	
  4810                           ; 1 bytes @ 0x2
  4811                           
  4812  0022                     ??_ble_transmit_stop:	
  4813                           ; 1 bytes @ 0x2
  4814                           
  4815  0022                     ??_ble_ready_to_receive:	
  4816                           ; 1 bytes @ 0x2
  4817                           
  4818  0022                     ??_ble_receive_start:	
  4819                           ; 1 bytes @ 0x2
  4820                           
  4821  0022                     ??_ble_receive_complete:	
  4822                           ; 1 bytes @ 0x2
  4823                           
  4824  0022                     ??_ble_receive_stop:	
  4825                           ; 1 bytes @ 0x2
  4826                           
  4827  0022                     ??_led_turnon_max:	
  4828                           ; 1 bytes @ 0x2
  4829                           
  4830  0022                     ??_led_preview:	
  4831                           ; 1 bytes @ 0x2
  4832                           
  4833  0022                     ??_osc_init:	
  4834                           ; 1 bytes @ 0x2
  4835                           
  4836  0022                     ??_gpio_init:	
  4837                           ; 1 bytes @ 0x2
  4838                           
  4839  0022                     ?___bmul:	
  4840                           ; 1 bytes @ 0x2
  4841                           
  4842  0022                     ?_strlen:	
  4843                           ; 1 bytes @ 0x2
  4844                           
  4845  0022                     ?_memset:	
  4846                           ; 2 bytes @ 0x2
  4847                           
  4848  0022                     ?___wmul:	
  4849                           ; 2 bytes @ 0x2
  4850                           
  4851  0022                     ?___awmod:	
  4852                           ; 2 bytes @ 0x2
  4853                           
  4854  0022                     ?___lwdiv:	
  4855                           ; 2 bytes @ 0x2
  4856                           
  4857  0022                     ?___lmul:	
  4858                           ; 2 bytes @ 0x2
  4859                           
  4860  0022                     eeprom_write@byte:	
  4861                           ; 4 bytes @ 0x2
  4862                           
  4863  0022                     eeprom_read@addr:	
  4864                           ; 1 bytes @ 0x2
  4865                           
  4866  0022                     eusart_write@byte:	
  4867                           ; 1 bytes @ 0x2
  4868                           
  4869  0022                     rtc_set@ptime:	
  4870                           ; 1 bytes @ 0x2
  4871                           
  4872  0022                     led_turnoff_ramp@i:	
  4873                           ; 1 bytes @ 0x2
  4874                           
  4875  0022                     led_turnon_max@i:	
  4876                           ; 1 bytes @ 0x2
  4877                           
  4878  0022                     led_turnoff@i:	
  4879                           ; 1 bytes @ 0x2
  4880                           
  4881  0022                     ___bmul@multiplicand:	
  4882                           ; 1 bytes @ 0x2
  4883                           
  4884  0022                     tmr0_init@cb:	
  4885                           ; 1 bytes @ 0x2
  4886                           
  4887  0022                     tmr2_init@cb:	
  4888                           ; 2 bytes @ 0x2
  4889                           
  4890  0022                     eusart_init@cb:	
  4891                           ; 2 bytes @ 0x2
  4892                           
  4893  0022                     key_init@cb:	
  4894                           ; 2 bytes @ 0x2
  4895                           
  4896  0022                     increase@psrc:	
  4897                           ; 2 bytes @ 0x2
  4898                           
  4899  0022                     decrease@psrc:	
  4900                           ; 2 bytes @ 0x2
  4901                           
  4902  0022                     ___wmul@multiplier:	
  4903                           ; 2 bytes @ 0x2
  4904                           
  4905  0022                     ___awmod@divisor:	
  4906                           ; 2 bytes @ 0x2
  4907                           
  4908  0022                     ___lwdiv@divisor:	
  4909                           ; 2 bytes @ 0x2
  4910                           
  4911  0022                     memset@p1:	
  4912                           ; 2 bytes @ 0x2
  4913                           
  4914  0022                     ___lmul@multiplier:	
  4915                           ; 2 bytes @ 0x2
  4916                           
  4917                           
  4918                           ; 4 bytes @ 0x2
  4919  0022                     	ds	1
  4920  0023                     ??_eeprom_write:	
  4921  0023                     ?_eeprom_read_buffer:	
  4922                           ; 1 bytes @ 0x3
  4923                           
  4924  0023                     ??_ble_ota_ack:	
  4925                           ; 1 bytes @ 0x3
  4926                           
  4927  0023                     ??_led_find_device:	
  4928                           ; 1 bytes @ 0x3
  4929                           
  4930  0023                     ??___bmul:	
  4931                           ; 1 bytes @ 0x3
  4932                           
  4933  0023                     eeprom_write@addr:	
  4934                           ; 1 bytes @ 0x3
  4935                           
  4936  0023                     rtc_set@i:	
  4937                           ; 1 bytes @ 0x3
  4938                           
  4939  0023                     ___bmul@product:	
  4940                           ; 1 bytes @ 0x3
  4941                           
  4942  0023                     eeprom_read_buffer@pbuf:	
  4943                           ; 1 bytes @ 0x3
  4944                           
  4945                           
  4946                           ; 2 bytes @ 0x3
  4947  0023                     	ds	1
  4948  0024                     ??_tmr0_init:	
  4949  0024                     ??_tmr2_init:	
  4950                           ; 1 bytes @ 0x4
  4951                           
  4952  0024                     ??_eusart_init:	
  4953                           ; 1 bytes @ 0x4
  4954                           
  4955  0024                     ??_key_init:	
  4956                           ; 1 bytes @ 0x4
  4957                           
  4958  0024                     ??_app_init:	
  4959                           ; 1 bytes @ 0x4
  4960                           
  4961  0024                     eeprom_write@state:	
  4962                           ; 1 bytes @ 0x4
  4963                           
  4964  0024                     increase@delt:	
  4965                           ; 1 bytes @ 0x4
  4966                           
  4967  0024                     decrease@delt:	
  4968                           ; 1 bytes @ 0x4
  4969                           
  4970  0024                     led_set_preview@pbuf:	
  4971                           ; 1 bytes @ 0x4
  4972                           
  4973  0024                     ___bmul@multiplier:	
  4974                           ; 1 bytes @ 0x4
  4975                           
  4976  0024                     ___wmul@multiplicand:	
  4977                           ; 1 bytes @ 0x4
  4978                           
  4979  0024                     ___awmod@dividend:	
  4980                           ; 2 bytes @ 0x4
  4981                           
  4982  0024                     ___lwdiv@dividend:	
  4983                           ; 2 bytes @ 0x4
  4984                           
  4985  0024                     memset@c:	
  4986                           ; 2 bytes @ 0x4
  4987                           
  4988                           
  4989                           ; 2 bytes @ 0x4
  4990  0024                     	ds	1
  4991  0025                     ??_strlen:	
  4992  0025                     ??_led_set_pro:	
  4993                           ; 1 bytes @ 0x5
  4994                           
  4995  0025                     ?_eeprom_write_buffer:	
  4996                           ; 1 bytes @ 0x5
  4997                           
  4998  0025                     ??_ble_send_data:	
  4999                           ; 1 bytes @ 0x5
  5000                           
  5001  0025                     eeprom_read_buffer@len:	
  5002                           ; 1 bytes @ 0x5
  5003                           
  5004  0025                     strlen@cp:	
  5005                           ; 1 bytes @ 0x5
  5006                           
  5007  0025                     eeprom_write_buffer@pbuf:	
  5008                           ; 1 bytes @ 0x5
  5009                           
  5010  0025                     increase@max:	
  5011                           ; 2 bytes @ 0x5
  5012                           
  5013  0025                     decrease@min:	
  5014                           ; 2 bytes @ 0x5
  5015                           
  5016  0025                     led_set_preview@val:	
  5017                           ; 2 bytes @ 0x5
  5018                           
  5019                           
  5020                           ; 2 bytes @ 0x5
  5021  0025                     	ds	1
  5022  0026                     ??_eeprom_read_buffer:	
  5023  0026                     ??___wmul:	
  5024                           ; 1 bytes @ 0x6
  5025                           
  5026  0026                     ??___awmod:	
  5027                           ; 1 bytes @ 0x6
  5028                           
  5029  0026                     ??___lwdiv:	
  5030                           ; 1 bytes @ 0x6
  5031                           
  5032  0026                     led_turnon_ramp@i:	
  5033                           ; 1 bytes @ 0x6
  5034                           
  5035  0026                     led_update_day_bright@i:	
  5036                           ; 1 bytes @ 0x6
  5037                           
  5038  0026                     led_update_night_bright@i:	
  5039                           ; 1 bytes @ 0x6
  5040                           
  5041  0026                     led_set_bright@pbuf:	
  5042                           ; 1 bytes @ 0x6
  5043                           
  5044  0026                     ___awmod@counter:	
  5045                           ; 1 bytes @ 0x6
  5046                           
  5047  0026                     strlen@s:	
  5048                           ; 1 bytes @ 0x6
  5049                           
  5050  0026                     ___wmul@product:	
  5051                           ; 1 bytes @ 0x6
  5052                           
  5053  0026                     ___lwdiv@quotient:	
  5054                           ; 2 bytes @ 0x6
  5055                           
  5056  0026                     memset@n:	
  5057                           ; 2 bytes @ 0x6
  5058                           
  5059  0026                     ___lmul@multiplicand:	
  5060                           ; 2 bytes @ 0x6
  5061                           
  5062                           
  5063                           ; 4 bytes @ 0x6
  5064  0026                     	ds	1
  5065  0027                     ??_led_set_mode:	
  5066  0027                     ??_led_set_power:	
  5067                           ; 1 bytes @ 0x7
  5068                           
  5069  0027                     ??_led_set_time:	
  5070                           ; 1 bytes @ 0x7
  5071                           
  5072  0027                     ??_increase:	
  5073                           ; 1 bytes @ 0x7
  5074                           
  5075  0027                     ??_decrease:	
  5076                           ; 1 bytes @ 0x7
  5077                           
  5078  0027                     ?_ble_send_cmd:	
  5079                           ; 1 bytes @ 0x7
  5080                           
  5081  0027                     eeprom_write_buffer@len:	
  5082                           ; 1 bytes @ 0x7
  5083                           
  5084  0027                     eeprom_read_buffer@addr:	
  5085                           ; 1 bytes @ 0x7
  5086                           
  5087  0027                     led_set_power@on:	
  5088                           ; 1 bytes @ 0x7
  5089                           
  5090  0027                     led_set_preview@i:	
  5091                           ; 1 bytes @ 0x7
  5092                           
  5093  0027                     led_set_time@ptime:	
  5094                           ; 1 bytes @ 0x7
  5095                           
  5096  0027                     ___awmod@sign:	
  5097                           ; 1 bytes @ 0x7
  5098                           
  5099  0027                     ble_send_cmd@cmd:	
  5100                           ; 1 bytes @ 0x7
  5101                           
  5102  0027                     led_set_bright@val:	
  5103                           ; 2 bytes @ 0x7
  5104                           
  5105                           
  5106                           ; 2 bytes @ 0x7
  5107  0027                     	ds	1
  5108  0028                     ??_memset:	
  5109  0028                     ??_eeprom_write_buffer:	
  5110                           ; 1 bytes @ 0x8
  5111                           
  5112  0028                     eeprom_write_buffer@addr:	
  5113                           ; 1 bytes @ 0x8
  5114                           
  5115  0028                     eeprom_read_buffer@i:	
  5116                           ; 1 bytes @ 0x8
  5117                           
  5118  0028                     led_set_mode@m:	
  5119                           ; 1 bytes @ 0x8
  5120                           
  5121  0028                     ___lwdiv@counter:	
  5122                           ; 1 bytes @ 0x8
  5123                           
  5124  0028                     memset@p:	
  5125                           ; 1 bytes @ 0x8
  5126                           
  5127                           
  5128                           ; 2 bytes @ 0x8
  5129  0028                     	ds	1
  5130  0029                     ??_led_set_custom:	
  5131  0029                     ??_ble_send_cmd:	
  5132                           ; 1 bytes @ 0x9
  5133                           
  5134  0029                     eeprom_write_buffer@i:	
  5135                           ; 1 bytes @ 0x9
  5136                           
  5137  0029                     ble_send_data@xor:	
  5138                           ; 1 bytes @ 0x9
  5139                           
  5140  0029                     led_set_bright@i:	
  5141                           ; 1 bytes @ 0x9
  5142                           
  5143                           
  5144                           ; 1 bytes @ 0x9
  5145  0029                     	ds	1
  5146  002A                     ??_led_para_default:	
  5147  002A                     ??_led_save_para:	
  5148                           ; 1 bytes @ 0xA
  5149                           
  5150  002A                     ??___lmul:	
  5151                           ; 1 bytes @ 0xA
  5152                           
  5153  002A                     ble_send_data@len:	
  5154                           ; 1 bytes @ 0xA
  5155                           
  5156  002A                     led_set_cycle@len:	
  5157                           ; 1 bytes @ 0xA
  5158                           
  5159  002A                     ___lmul@product:	
  5160                           ; 1 bytes @ 0xA
  5161                           
  5162  002A                     ble_send_cmd@ack:	
  5163                           ; 4 bytes @ 0xA
  5164                           
  5165                           
  5166                           ; 8 bytes @ 0xA
  5167  002A                     	ds	1
  5168  002B                     ?_led_increase:	
  5169  002B                     ?_led_decrease:	
  5170                           ; 1 bytes @ 0xB
  5171                           
  5172  002B                     ble_send_data@i:	
  5173                           ; 1 bytes @ 0xB
  5174                           
  5175  002B                     led_set_cycle@pbuf:	
  5176                           ; 1 bytes @ 0xB
  5177                           
  5178  002B                     led_increase@delt:	
  5179                           ; 1 bytes @ 0xB
  5180                           
  5181  002B                     led_decrease@delt:	
  5182                           ; 1 bytes @ 0xB
  5183                           
  5184                           
  5185                           ; 1 bytes @ 0xB
  5186  002B                     	ds	1
  5187  002C                     ??_led_increase:	
  5188  002C                     ??_led_decrease:	
  5189                           ; 1 bytes @ 0xC
  5190                           
  5191  002C                     led_set_cycle@i:	
  5192                           ; 1 bytes @ 0xC
  5193                           
  5194  002C                     ble_send_data@p:	
  5195                           ; 1 bytes @ 0xC
  5196                           
  5197                           
  5198                           ; 2 bytes @ 0xC
  5199  002C                     	ds	1
  5200  002D                     led_set_pro@len:	
  5201                           
  5202                           ; 1 bytes @ 0xD
  5203  002D                     	ds	1
  5204  002E                     ?___lldiv:	
  5205  002E                     led_set_pro@pbuf:	
  5206                           ; 4 bytes @ 0xE
  5207                           
  5208  002E                     ___lldiv@divisor:	
  5209                           ; 1 bytes @ 0xE
  5210                           
  5211                           
  5212                           ; 4 bytes @ 0xE
  5213  002E                     	ds	1
  5214  002F                     led_set_pro@i:	
  5215                           
  5216                           ; 1 bytes @ 0xF
  5217  002F                     	ds	1
  5218  0030                     led_increase@chn:	
  5219  0030                     led_decrease@chn:	
  5220                           ; 1 bytes @ 0x10
  5221                           
  5222                           
  5223                           ; 1 bytes @ 0x10
  5224  0030                     	ds	2
  5225  0032                     ble_send_cmd@len:	
  5226  0032                     ___lldiv@dividend:	
  5227                           ; 1 bytes @ 0x12
  5228                           
  5229                           
  5230                           ; 4 bytes @ 0x12
  5231  0032                     	ds	1
  5232  0033                     ble_send_cmd@cnt:	
  5233                           
  5234                           ; 1 bytes @ 0x13
  5235  0033                     	ds	1
  5236  0034                     ble_send_cmd@rev:	
  5237  0034                     led_para_default@i:	
  5238                           ; 1 bytes @ 0x14
  5239                           
  5240                           
  5241                           ; 1 bytes @ 0x14
  5242  0034                     	ds	1
  5243  0035                     ble_send_cmd@idx:	
  5244  0035                     led_para_default@j:	
  5245                           ; 1 bytes @ 0x15
  5246                           
  5247                           
  5248                           ; 1 bytes @ 0x15
  5249  0035                     	ds	1
  5250  0036                     ??_ble_check_devid:	
  5251  0036                     ??___lldiv:	
  5252                           ; 1 bytes @ 0x16
  5253                           
  5254  0036                     led_para_default@i_1199:	
  5255                           ; 1 bytes @ 0x16
  5256                           
  5257  0036                     ___lldiv@quotient:	
  5258                           ; 1 bytes @ 0x16
  5259                           
  5260                           
  5261                           ; 4 bytes @ 0x16
  5262  0036                     	ds	1
  5263  0037                     led_para_default@i_1206:	
  5264  0037                     ble_check_devid@dev:	
  5265                           ; 1 bytes @ 0x17
  5266                           
  5267                           
  5268                           ; 17 bytes @ 0x17
  5269  0037                     	ds	1
  5270  0038                     ??_led_para_init:	
  5271  0038                     led_set_custom@idx:	
  5272                           ; 1 bytes @ 0x18
  5273                           
  5274                           
  5275                           ; 1 bytes @ 0x18
  5276  0038                     	ds	1
  5277  0039                     led_set_custom@i:	
  5278                           
  5279                           ; 1 bytes @ 0x19
  5280  0039                     	ds	1
  5281  003A                     ??_ble_decode:	
  5282  003A                     ___lldiv@counter:	
  5283                           ; 1 bytes @ 0x1A
  5284                           
  5285                           
  5286                           ; 1 bytes @ 0x1A
  5287  003A                     	ds	1
  5288  003B                     ?_led_calc_bright:	
  5289  003B                     led_calc_bright@ebrt:	
  5290                           ; 2 bytes @ 0x1B
  5291                           
  5292                           
  5293                           ; 1 bytes @ 0x1B
  5294  003B                     	ds	1
  5295  003C                     ??_ble_process:	
  5296  003C                     led_calc_bright@duration:	
  5297                           ; 1 bytes @ 0x1C
  5298                           
  5299                           
  5300                           ; 2 bytes @ 0x1C
  5301  003C                     	ds	2
  5302  003E                     led_calc_bright@dt:	
  5303                           
  5304                           ; 4 bytes @ 0x1E
  5305  003E                     	ds	4
  5306  0042                     ??_led_calc_bright:	
  5307  0042                     led_para_init@j:	
  5308                           ; 1 bytes @ 0x22
  5309                           
  5310  0042                     led_calc_bright@result:	
  5311                           ; 1 bytes @ 0x22
  5312                           
  5313                           
  5314                           ; 2 bytes @ 0x22
  5315  0042                     	ds	1
  5316  0043                     led_para_init@i:	
  5317                           
  5318                           ; 1 bytes @ 0x23
  5319  0043                     	ds	1
  5320  0044                     ??_led_init:	
  5321  0044                     led_calc_bright@vs:	
  5322                           ; 1 bytes @ 0x24
  5323                           
  5324                           
  5325                           ; 2 bytes @ 0x24
  5326  0044                     	ds	2
  5327  0046                     led_calc_bright@period:	
  5328                           
  5329                           ; 2 bytes @ 0x26
  5330  0046                     	ds	2
  5331  0048                     led_calc_bright@dbrt:	
  5332  0048                     ble_check_devid@cnt:	
  5333                           ; 1 bytes @ 0x28
  5334                           
  5335                           
  5336                           ; 2 bytes @ 0x28
  5337  0048                     	ds	1
  5338  0049                     led_calc_bright@sbrt:	
  5339                           
  5340                           ; 1 bytes @ 0x29
  5341  0049                     	ds	1
  5342  004A                     ?_led_auto_process:	
  5343  004A                     ?_led_pro_process:	
  5344                           ; 1 bytes @ 0x2A
  5345                           
  5346  004A                     ble_check_devid@len:	
  5347                           ; 1 bytes @ 0x2A
  5348                           
  5349  004A                     led_auto_process@ct:	
  5350                           ; 1 bytes @ 0x2A
  5351                           
  5352  004A                     led_pro_process@ct:	
  5353                           ; 2 bytes @ 0x2A
  5354                           
  5355                           
  5356                           ; 2 bytes @ 0x2A
  5357  004A                     	ds	1
  5358  004B                     ble_check_devid@rev:	
  5359                           
  5360                           ; 1 bytes @ 0x2B
  5361  004B                     	ds	1
  5362  004C                     ble_check_devid@idx:	
  5363  004C                     led_auto_process@sec:	
  5364                           ; 1 bytes @ 0x2C
  5365                           
  5366  004C                     led_pro_process@sec:	
  5367                           ; 1 bytes @ 0x2C
  5368                           
  5369                           
  5370                           ; 1 bytes @ 0x2C
  5371  004C                     	ds	1
  5372  004D                     ??_ble_init:	
  5373  004D                     ??_led_auto_process:	
  5374                           ; 1 bytes @ 0x2D
  5375                           
  5376  004D                     ??_led_pro_process:	
  5377                           ; 1 bytes @ 0x2D
  5378                           
  5379                           
  5380                           ; 1 bytes @ 0x2D
  5381  004D                     	ds	8
  5382  0055                     ??_led_second_cb:	
  5383  0055                     ??_main:	
  5384                           ; 1 bytes @ 0x35
  5385                           
  5386                           
  5387                           	psect	text3
  5388  14B9                     __ptext3:	
  5389 ;; *************** function _led_second_cb *****************
  5390 ;; Defined at:
  5391 ;;		line 1941 in file "src/app_led.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;		None
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  ct              2   53[BANK1 ] unsigned int 
  5396 ;;  sec             1   52[BANK1 ] unsigned char 
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  1    wreg      void 
  5399 ;; Registers used:
  5400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5401 ;; Tracked objects:
  5402 ;;		On entry : 1F/0
  5403 ;;		On exit  : 1F/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5407 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5409 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;Total ram usage:        3 bytes
  5411 ;; Hardware stack levels used:    1
  5412 ;; Hardware stack levels required when called:   12
  5413 ;; This function calls:
  5414 ;;		___wmul
  5415 ;;		_led_auto_process
  5416 ;;		_led_find_device
  5417 ;;		_led_preview
  5418 ;;		_led_pro_process
  5419 ;;		_led_save_para
  5420 ;;		_rtc_get_hour
  5421 ;;		_rtc_get_minute
  5422 ;;		_rtc_get_second
  5423 ;; This function is called by:
  5424 ;;		_main
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           
  5429                           ;psect for function _led_second_cb
  5430  14B9                     _led_second_cb:	
  5431                           
  5432                           ;app_led.c: 1943: uint16_t ct = rtc_get_hour()*60u + rtc_get_minute();
  5433                           
  5434                           ;incstack = 0
  5435                           ; Regs used in _led_second_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5436  14B9  26EB  3194         	fcall	_rtc_get_hour
  5437  14BB  0020               	movlb	0	; select bank0
  5438  14BC  00A2               	movwf	___wmul@multiplier
  5439  14BD  303C               	movlw	60
  5440  14BE  01A3               	clrf	___wmul@multiplier+1
  5441  14BF  00A4               	movwf	___wmul@multiplicand
  5442  14C0  01A5               	clrf	___wmul@multiplicand+1
  5443  14C1  26BF  3194         	fcall	___wmul
  5444  14C3  0823               	movf	?___wmul+1,w
  5445  14C4  0021               	movlb	1	; select bank1
  5446  14C5  00D6               	movwf	(led_second_cb@ct+1)^(0+128)
  5447  14C6  0020               	movlb	0	; select bank0
  5448  14C7  0822               	movf	?___wmul,w
  5449  14C8  0021               	movlb	1	; select bank1
  5450  14C9  00D5               	movwf	led_second_cb@ct^(0+128)
  5451  14CA  26EE  3194         	fcall	_rtc_get_minute
  5452  14CC  07D5               	addwf	led_second_cb@ct^(0+128),f
  5453  14CD  1803               	skipnc
  5454  14CE  0AD6               	incf	(led_second_cb@ct+1)^(0+128),f
  5455                           
  5456                           ;app_led.c: 1944: uint8_t sec = rtc_get_second();
  5457  14CF  26F0  3194         	fcall	_rtc_get_second
  5458  14D1  00D4               	movwf	led_second_cb@sec^(0+128)
  5459                           
  5460                           ;app_led.c: 1945: if(led_run_para.mFind)
  5461  14D2  0020               	movlb	0	; select bank0
  5462  14D3  1C5D               	btfss	_led_run_para,0
  5463  14D4  2CD8               	goto	l6543
  5464                           
  5465                           ;app_led.c: 1946: {
  5466                           ;app_led.c: 1947: led_find_device();
  5467  14D5  26D4  3194         	fcall	_led_find_device
  5468                           
  5469                           ;app_led.c: 1948: }
  5470  14D7  2D0D               	goto	l6557
  5471  14D8                     l6543:	
  5472                           
  5473                           ;app_led.c: 1949: else
  5474                           ;app_led.c: 1950: {
  5475                           ;app_led.c: 1952: if(m_led_para.mState == 3)
  5476  14D8  318F  277D  3194   	fcall	PL14	;call to abstracted procedure
  5477  14DB  3A03               	xorlw	3
  5478  14DC  1D03               	skipz
  5479  14DD  2D0D               	goto	l6557
  5480                           
  5481                           ;app_led.c: 1953: {
  5482                           ;app_led.c: 1955: if(led_run_para.mPrev)
  5483  14DE  1CDD               	btfss	_led_run_para,1
  5484  14DF  2CE3               	goto	l6549
  5485                           
  5486                           ;app_led.c: 1956: {
  5487                           ;app_led.c: 1957: led_preview();
  5488  14E0  26E4  3194         	fcall	_led_preview
  5489                           
  5490                           ;app_led.c: 1958: }
  5491  14E2  2D0D               	goto	l6557
  5492  14E3                     l6549:	
  5493                           
  5494                           ;app_led.c: 1975: else if(m_led_para.ble_para.mMode == 1)
  5495  14E3  3186  26AC  3194   	fcall	PL10	;call to abstracted procedure
  5496  14E6  3A01               	xorlw	1
  5497  14E7  1D03               	skipz
  5498  14E8  2CF9               	goto	l6553
  5499                           
  5500                           ;app_led.c: 1976: {
  5501                           ;app_led.c: 1977: led_auto_process(ct, sec);
  5502  14E9  0021               	movlb	1	; select bank1
  5503  14EA  0856               	movf	(led_second_cb@ct+1)^(0+128),w
  5504  14EB  0020               	movlb	0	; select bank0
  5505  14EC  00CB               	movwf	led_auto_process@ct+1
  5506  14ED  0021               	movlb	1	; select bank1
  5507  14EE  0855               	movf	led_second_cb@ct^(0+128),w
  5508  14EF  0020               	movlb	0	; select bank0
  5509  14F0  00CA               	movwf	led_auto_process@ct
  5510  14F1  0021               	movlb	1	; select bank1
  5511  14F2  0854               	movf	led_second_cb@sec^(0+128),w
  5512  14F3  0020               	movlb	0	; select bank0
  5513  14F4  00CC               	movwf	led_auto_process@sec
  5514  14F5  3191  21C7  3194   	fcall	_led_auto_process
  5515                           
  5516                           ;app_led.c: 1978: }
  5517  14F8  2D0D               	goto	l6557
  5518  14F9                     l6553:	
  5519                           
  5520                           ;app_led.c: 1979: else if(m_led_para.ble_para.mMode == 2)
  5521  14F9  3186  26AC  3194   	fcall	PL10	;call to abstracted procedure
  5522  14FC  3A02               	xorlw	2
  5523  14FD  1D03               	skipz
  5524  14FE  2D0D               	goto	l6557
  5525                           
  5526                           ;app_led.c: 1980: {
  5527                           ;app_led.c: 1981: led_pro_process(ct, sec);
  5528  14FF  0021               	movlb	1	; select bank1
  5529  1500  0856               	movf	(led_second_cb@ct+1)^(0+128),w
  5530  1501  0020               	movlb	0	; select bank0
  5531  1502  00CB               	movwf	led_pro_process@ct+1
  5532  1503  0021               	movlb	1	; select bank1
  5533  1504  0855               	movf	led_second_cb@ct^(0+128),w
  5534  1505  0020               	movlb	0	; select bank0
  5535  1506  00CA               	movwf	led_pro_process@ct
  5536  1507  0021               	movlb	1	; select bank1
  5537  1508  0854               	movf	led_second_cb@sec^(0+128),w
  5538  1509  0020               	movlb	0	; select bank0
  5539  150A  00CC               	movwf	led_pro_process@sec
  5540  150B  2511  3194         	fcall	_led_pro_process
  5541  150D                     l6557:	
  5542                           
  5543                           ;app_led.c: 1982: }
  5544                           ;app_led.c: 1985: }
  5545                           ;app_led.c: 1987: }
  5546                           ;app_led.c: 1989: if(led_run_para.mSave)
  5547  150D  0020               	movlb	0	; select bank0
  5548  150E  1D5D               	btfss	_led_run_para,2
  5549  150F  0008               	return
  5550                           
  5551                           ;app_led.c: 1990: {
  5552                           ;app_led.c: 1991: led_save_para();
  5553  1510  2F08               	ljmp	l6509
  5554  1511                     __end_of_led_second_cb:	
  5555  1511                     __ptext10:	
  5556 ;; *************** function _led_pro_process *****************
  5557 ;; Defined at:
  5558 ;;		line 596 in file "src/app_led.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  ct              2   42[BANK0 ] unsigned int 
  5561 ;;  sec             1   44[BANK0 ] unsigned char 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  tmp             1   10[BANK1 ] unsigned char 
  5564 ;;  p2              2   24[BANK1 ] PTR struct .
  5565 ;;		 -> m_led_para.ble_para.pro_para.points(60), m_led_para.ble_para.pro_para(61), 
  5566 ;;  p1              2   22[BANK1 ] PTR struct .
  5567 ;;		 -> m_led_para.ble_para.pro_para.points(60), m_led_para.ble_para.pro_para(61), 
  5568 ;;  t2              2   13[BANK1 ] unsigned int 
  5569 ;;  t1              2   11[BANK1 ] unsigned int 
  5570 ;;  index          10    0[BANK1 ] unsigned char [10]
  5571 ;;  dt              4   15[BANK1 ] unsigned long 
  5572 ;;  st              2   38[BANK1 ] unsigned int 
  5573 ;;  ep              2   35[BANK1 ] PTR struct .
  5574 ;;		 -> m_led_para.ble_para.pro_para.points(60), m_led_para.ble_para.pro_para(61), 
  5575 ;;  sp              2   33[BANK1 ] PTR struct .
  5576 ;;		 -> m_led_para.ble_para.pro_para.points(60), m_led_para.ble_para.pro_para(61), 
  5577 ;;  et              2   31[BANK1 ] unsigned int 
  5578 ;;  end             2   28[BANK1 ] unsigned int 
  5579 ;;  start           2   26[BANK1 ] unsigned int 
  5580 ;;  duration        2   20[BANK1 ] unsigned int 
  5581 ;;  i               1   40[BANK1 ] unsigned char 
  5582 ;;  j               1   37[BANK1 ] unsigned char 
  5583 ;;  point_count     1   30[BANK1 ] unsigned char 
  5584 ;;  flag            1   19[BANK1 ] unsigned char 
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  1    wreg      void 
  5587 ;; Registers used:
  5588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5589 ;; Tracked objects:
  5590 ;;		On entry : 1F/0
  5591 ;;		On exit  : 1F/1
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5594 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Locals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;      Totals:         0      11      41       0       0       0       0       0       0       0       0       0       
      +0       0
  5598 ;;Total ram usage:       52 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:   11
  5601 ;; This function calls:
  5602 ;;		___wmul
  5603 ;;		_led_calc_bright
  5604 ;; This function is called by:
  5605 ;;		_led_second_cb
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           
  5610                           ;psect for function _led_pro_process
  5611  1511                     _led_pro_process:	
  5612                           
  5613                           ;app_led.c: 598: if(m_led_para.ble_para.pro_para.point_count < 4)
  5614                           
  5615                           ;incstack = 0
  5616                           ; Regs used in _led_pro_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5617  1511  3187  2740  3194   	fcall	PL114	;call to abstracted procedure
  5618                           
  5619                           ;app_led.c: 599: {
  5620                           ;app_led.c: 600: m_led_para.ble_para.pro_para.point_count = 4;
  5621  1514  1803               	skipnc
  5622  1515  2D18               	goto	L3
  5623  1516  3004               	movlw	4
  5624  1517  2D1F               	goto	L1
  5625  1518                     L3:	
  5626                           ;app_led.c: 602: else if(m_led_para.ble_para.pro_para.point_count > 10)
  5627                           
  5628                           ;app_led.c: 601: }
  5629                           
  5630  1518  300B               	movlw	11
  5631  1519  0201               	subwf	1,w
  5632                           
  5633                           ;app_led.c: 603: {
  5634                           ;app_led.c: 604: m_led_para.ble_para.pro_para.point_count = 10;
  5635  151A  27F1  3194         	fcall	PL148	;call to abstracted procedure
  5636  151C  1C03               	skipc
  5637  151D  2D22               	goto	L4
  5638  151E  300A               	movlw	10
  5639  151F                     L1:	
  5640  151F  0081               	movwf	1
  5641                           
  5642                           ;app_led.c: 605: }
  5643                           ;app_led.c: 606: uint8_t point_count = m_led_para.ble_para.pro_para.point_count;
  5644  1520  27F1  3194         	fcall	PL148	;call to abstracted procedure
  5645  1522                     L4:	
  5646  1522  0801               	movf	1,w
  5647  1523  0021               	movlb	1	; select bank1
  5648  1524  00BE               	movwf	led_pro_process@point_count^(0+128)
  5649                           
  5650                           ;app_led.c: 607: uint8_t i, j;
  5651                           ;app_led.c: 608: uint8_t index[10];
  5652                           ;app_led.c: 609: for(i = 0; i < 10; i++)
  5653  1525  01C8               	clrf	led_pro_process@i^(0+128)
  5654  1526                     l6361:	
  5655                           
  5656                           ;app_led.c: 610: {
  5657                           ;app_led.c: 611: index[i] = i;
  5658  1526  0848               	movf	led_pro_process@i^(0+128),w
  5659  1527  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  5660  1528  0086               	movwf	6
  5661  1529  0187               	clrf	7
  5662  152A  0848               	movf	led_pro_process@i^(0+128),w
  5663  152B  0081               	movwf	1
  5664  152C  300A               	movlw	10
  5665  152D  0AC8               	incf	led_pro_process@i^(0+128),f
  5666  152E  0248               	subwf	led_pro_process@i^(0+128),w
  5667  152F  1C03               	skipc
  5668  1530  2D26               	goto	l6361
  5669                           
  5670                           ;app_led.c: 612: }
  5671                           ;app_led.c: 613: for(i = point_count - 1; i > 0; i--)
  5672  1531  083E               	movf	led_pro_process@point_count^(0+128),w
  5673  1532  3EFF               	addlw	255
  5674  1533  00C8               	movwf	led_pro_process@i^(0+128)
  5675  1534  0848               	movf	led_pro_process@i^(0+128),w
  5676  1535  1903               	btfsc	3,2
  5677  1536  2DB3               	goto	l6397
  5678  1537                     l6371:	
  5679                           
  5680                           ;app_led.c: 614: {
  5681                           ;app_led.c: 615: for(j = 0; j < i; j++)
  5682  1537  01C5               	clrf	led_pro_process@j^(0+128)
  5683  1538                     l6391:	
  5684  1538  0848               	movf	led_pro_process@i^(0+128),w
  5685  1539  0245               	subwf	led_pro_process@j^(0+128),w
  5686  153A  1803               	btfsc	3,0
  5687  153B  2DB1               	goto	l6393
  5688                           
  5689                           ;app_led.c: 616: {
  5690                           ;app_led.c: 617: timer_bright_point_t *p1 = &m_led_para.ble_para.pro_para.points[index[j
      +                          ]];
  5691  153C  3023               	movlw	35
  5692  153D  00B7               	movwf	(led_pro_process@p1+1)^(0+128)
  5693  153E  30B3               	movlw	179
  5694  153F  00B6               	movwf	led_pro_process@p1^(0+128)
  5695  1540  0845               	movf	led_pro_process@j^(0+128),w
  5696  1541  27DB  3194         	fcall	PL64	;call to abstracted procedure
  5697  1543  27BB  3194         	fcall	PL44	;call to abstracted procedure
  5698  1545  26BF  3194         	fcall	___wmul
  5699  1547  2770  3194         	fcall	PL18	;call to abstracted procedure
  5700  1549  07B6               	addwf	led_pro_process@p1^(0+128),f
  5701  154A  0020               	movlb	0	; select bank0
  5702  154B  084E               	movf	??_led_pro_process+1,w
  5703  154C  0021               	movlb	1	; select bank1
  5704  154D  3DB7               	addwfc	(led_pro_process@p1+1)^(0+128),f
  5705                           
  5706                           ;app_led.c: 618: timer_bright_point_t *p2 = &m_led_para.ble_para.pro_para.points[index[j
      +                          +1]];
  5707  154E  3023               	movlw	35
  5708  154F  00B9               	movwf	(led_pro_process@p2+1)^(0+128)
  5709  1550  30B3               	movlw	179
  5710  1551  00B8               	movwf	led_pro_process@p2^(0+128)
  5711  1552  0845               	movf	led_pro_process@j^(0+128),w
  5712  1553  3E01               	addlw	1
  5713  1554  27DB  3194         	fcall	PL64	;call to abstracted procedure
  5714  1556  27BB  3194         	fcall	PL44	;call to abstracted procedure
  5715  1558  26BF  3194         	fcall	___wmul
  5716  155A  2770  3194         	fcall	PL18	;call to abstracted procedure
  5717  155C  07B8               	addwf	led_pro_process@p2^(0+128),f
  5718  155D  0020               	movlb	0	; select bank0
  5719  155E  084E               	movf	??_led_pro_process+1,w
  5720  155F  0021               	movlb	1	; select bank1
  5721  1560  3DB9               	addwfc	(led_pro_process@p2+1)^(0+128),f
  5722                           
  5723                           ;app_led.c: 619: uint16_t t1 = p1->hour*60u + p1->minuite;
  5724  1561  0836               	movf	led_pro_process@p1^(0+128),w
  5725  1562  0086               	movwf	6
  5726  1563  0837               	movf	(led_pro_process@p1+1)^(0+128),w
  5727  1564  0087               	movwf	7
  5728  1565  2753  3194         	fcall	PL8	;call to abstracted procedure
  5729  1567  26BF  3194         	fcall	___wmul
  5730  1569  0823               	movf	?___wmul+1,w
  5731  156A  0021               	movlb	1	; select bank1
  5732  156B  00AC               	movwf	(led_pro_process@t1+1)^(0+128)
  5733  156C  0020               	movlb	0	; select bank0
  5734  156D  0822               	movf	?___wmul,w
  5735  156E  0021               	movlb	1	; select bank1
  5736  156F  00AB               	movwf	led_pro_process@t1^(0+128)
  5737  1570  0836               	movf	led_pro_process@p1^(0+128),w
  5738  1571  0086               	movwf	6
  5739  1572  0837               	movf	(led_pro_process@p1+1)^(0+128),w
  5740  1573  0087               	movwf	7
  5741  1574  3141               	addfsr 1,1
  5742  1575  0801               	movf	1,w
  5743  1576  07AB               	addwf	led_pro_process@t1^(0+128),f
  5744  1577  1803               	skipnc
  5745  1578  0AAC               	incf	(led_pro_process@t1+1)^(0+128),f
  5746                           
  5747                           ;app_led.c: 620: uint16_t t2 = p2->hour*60u + p2->minuite;
  5748  1579  0838               	movf	led_pro_process@p2^(0+128),w
  5749  157A  0086               	movwf	6
  5750  157B  0839               	movf	(led_pro_process@p2+1)^(0+128),w
  5751  157C  0087               	movwf	7
  5752  157D  2753  3194         	fcall	PL8	;call to abstracted procedure
  5753  157F  26BF  3194         	fcall	___wmul
  5754  1581  0823               	movf	?___wmul+1,w
  5755  1582  0021               	movlb	1	; select bank1
  5756  1583  00AE               	movwf	(led_pro_process@t2+1)^(0+128)
  5757  1584  0020               	movlb	0	; select bank0
  5758  1585  0822               	movf	?___wmul,w
  5759  1586  0021               	movlb	1	; select bank1
  5760  1587  00AD               	movwf	led_pro_process@t2^(0+128)
  5761  1588  0838               	movf	led_pro_process@p2^(0+128),w
  5762  1589  0086               	movwf	6
  5763  158A  0839               	movf	(led_pro_process@p2+1)^(0+128),w
  5764  158B  0087               	movwf	7
  5765  158C  3141               	addfsr 1,1
  5766  158D  0801               	movf	1,w
  5767  158E  07AD               	addwf	led_pro_process@t2^(0+128),f
  5768  158F  1803               	skipnc
  5769  1590  0AAE               	incf	(led_pro_process@t2+1)^(0+128),f
  5770                           
  5771                           ;app_led.c: 621: if(t1 > t2)
  5772  1591  082C               	movf	(led_pro_process@t1+1)^(0+128),w
  5773  1592  022E               	subwf	(led_pro_process@t2+1)^(0+128),w
  5774  1593  1D03               	skipz
  5775  1594  2D97               	goto	u6315
  5776  1595  082B               	movf	led_pro_process@t1^(0+128),w
  5777  1596  022D               	subwf	led_pro_process@t2^(0+128),w
  5778  1597                     u6315:	
  5779  1597  1803               	skipnc
  5780  1598  2DAF               	goto	l6389
  5781                           
  5782                           ;app_led.c: 622: {
  5783                           ;app_led.c: 623: uint8_t tmp = index[j];
  5784  1599  0845               	movf	led_pro_process@j^(0+128),w
  5785  159A  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  5786  159B  0086               	movwf	6
  5787  159C  0187               	clrf	7
  5788  159D  0801               	movf	1,w
  5789  159E  00AA               	movwf	led_pro_process@tmp^(0+128)
  5790                           
  5791                           ;app_led.c: 624: index[j] = index[j+1];
  5792  159F  0845               	movf	led_pro_process@j^(0+128),w
  5793  15A0  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  5794  15A1  0086               	movwf	6
  5795  15A2  0845               	movf	led_pro_process@j^(0+128),w
  5796  15A3  3E01               	addlw	1
  5797  15A4  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  5798  15A5  0084               	movwf	4
  5799  15A6  0185               	clrf	5
  5800  15A7  0800               	movf	0,w
  5801  15A8  0081               	movwf	1
  5802                           
  5803                           ;app_led.c: 625: index[j+1] = tmp;
  5804  15A9  0845               	movf	led_pro_process@j^(0+128),w
  5805  15AA  3E01               	addlw	1
  5806  15AB  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  5807  15AC  0086               	movwf	6
  5808  15AD  082A               	movf	led_pro_process@tmp^(0+128),w
  5809  15AE  0081               	movwf	1
  5810  15AF                     l6389:	
  5811  15AF  0AC5               	incf	led_pro_process@j^(0+128),f
  5812  15B0  2D38               	goto	l6391
  5813  15B1                     l6393:	
  5814  15B1  0BC8               	decfsz	led_pro_process@i^(0+128),f
  5815  15B2  2D37               	goto	l6371
  5816  15B3                     l6397:	
  5817                           
  5818                           ;app_led.c: 626: }
  5819                           ;app_led.c: 627: }
  5820                           ;app_led.c: 628: }
  5821                           ;app_led.c: 629: uint16_t start = index[point_count-1];
  5822  15B3  083E               	movf	led_pro_process@point_count^(0+128),w
  5823  15B4  3EFF               	addlw	255
  5824  15B5  27EA  3194         	fcall	PL108	;call to abstracted procedure
  5825                           
  5826                           ;app_led.c: 630: uint16_t end = index[0];
  5827  15B7  0820               	movf	led_pro_process@index^(0+128),w
  5828                           
  5829                           ;app_led.c: 631: timer_bright_point_t *sp = &m_led_para.ble_para.pro_para.points[start];
  5830  15B8  27A0  3194         	fcall	PL38	;call to abstracted procedure
  5831  15BA  26BF  3194         	fcall	___wmul
  5832  15BC  2770  3194         	fcall	PL18	;call to abstracted procedure
  5833                           
  5834                           ;app_led.c: 632: timer_bright_point_t *ep = &m_led_para.ble_para.pro_para.points[end];
  5835  15BE  2779  3194         	fcall	PL30	;call to abstracted procedure
  5836  15C0  26BF  3194         	fcall	___wmul
  5837  15C2  2770  3194         	fcall	PL18	;call to abstracted procedure
  5838                           
  5839                           ;app_led.c: 633: uint16_t st = sp->hour * 60u + sp->minuite;
  5840  15C4  27B1  3194         	fcall	PL40	;call to abstracted procedure
  5841  15C6  2753  3194         	fcall	PL8	;call to abstracted procedure
  5842  15C8  26BF  3194         	fcall	___wmul
  5843                           
  5844                           ;app_led.c: 634: uint16_t et = ep->hour * 60u + ep->minuite;
  5845  15CA  275B  3194         	fcall	PL16	;call to abstracted procedure
  5846  15CC  2753  3194         	fcall	PL8	;call to abstracted procedure
  5847  15CE  26BF  3194         	fcall	___wmul
  5848  15D0  27C1  3194         	fcall	PL48	;call to abstracted procedure
  5849  15D2  1803               	skipnc
  5850  15D3  0AC0               	incf	(led_pro_process@et+1)^(0+128),f
  5851                           
  5852                           ;app_led.c: 635: uint16_t duration = 1440u - st + et;
  5853  15D4  27E1  3194         	fcall	PL84	;call to abstracted procedure
  5854  15D6  30A0               	movlw	160
  5855  15D7  07B4               	addwf	led_pro_process@duration^(0+128),f
  5856  15D8  3005               	movlw	5
  5857  15D9  3DB5               	addwfc	(led_pro_process@duration+1)^(0+128),f
  5858                           
  5859                           ;app_led.c: 636: uint32_t dt;
  5860                           ;app_led.c: 637: bool flag = 0;
  5861  15DA  01B3               	clrf	led_pro_process@flag^(0+128)
  5862                           
  5863                           ;app_led.c: 638: if(ct >= st)
  5864  15DB  0847               	movf	(led_pro_process@st+1)^(0+128),w
  5865  15DC  0020               	movlb	0	; select bank0
  5866  15DD  024B               	subwf	led_pro_process@ct+1,w
  5867  15DE  1D03               	skipz
  5868  15DF  2DE2               	goto	u6345
  5869  15E0  27F6  3194         	fcall	PL156	;call to abstracted procedure
  5870  15E2                     u6345:	
  5871  15E2  1C03               	skipc
  5872  15E3  2DFB               	goto	l6431
  5873  15E4                     l6427:	
  5874                           
  5875                           ;app_led.c: 639: {
  5876                           ;app_led.c: 640: dt = (ct-st)*60u + sec;
  5877  15E4  0020               	movlb	0	; select bank0
  5878  15E5  27D0  3194         	fcall	PL62	;call to abstracted procedure
  5879  15E7  26BF  3194         	fcall	___wmul
  5880  15E9  278D  3194         	fcall	PL34	;call to abstracted procedure
  5881  15EB  26BF  3194         	fcall	___wmul
  5882  15ED  0822               	movf	?___wmul,w
  5883  15EE  074F               	addwf	??_led_pro_process+2,w
  5884  15EF  0021               	movlb	1	; select bank1
  5885  15F0  00AF               	movwf	led_pro_process@dt^(0+128)
  5886  15F1  0020               	movlb	0	; select bank0
  5887  15F2  0823               	movf	?___wmul+1,w
  5888  15F3  3D50               	addwfc	??_led_pro_process+3,w
  5889  15F4                     L2:	
  5890  15F4  0021               	movlb	1	; select bank1
  5891  15F5  00B0               	movwf	(led_pro_process@dt+1)^(0+128)
  5892  15F6  01B1               	clrf	(led_pro_process@dt+2)^(0+128)
  5893  15F7  01B2               	clrf	(led_pro_process@dt+3)^(0+128)
  5894                           
  5895                           ;app_led.c: 641: flag = 1;
  5896  15F8  01B3               	clrf	led_pro_process@flag^(0+128)
  5897  15F9  0AB3               	incf	led_pro_process@flag^(0+128),f
  5898                           
  5899                           ;app_led.c: 642: }
  5900  15FA  2E6D               	goto	l6471
  5901  15FB                     l6431:	
  5902                           
  5903                           ;app_led.c: 643: else if(ct < et)
  5904  15FB  0021               	movlb	1	; select bank1
  5905  15FC  0840               	movf	(led_pro_process@et+1)^(0+128),w
  5906  15FD  0020               	movlb	0	; select bank0
  5907  15FE  024B               	subwf	led_pro_process@ct+1,w
  5908  15FF  1D03               	skipz
  5909  1600  2E03               	goto	u6355
  5910  1601  27FB  3194         	fcall	PL158	;call to abstracted procedure
  5911  1603                     u6355:	
  5912  1603  1803               	skipnc
  5913  1604  2E1B               	goto	l6437
  5914                           
  5915                           ;app_led.c: 644: {
  5916                           ;app_led.c: 645: dt = (1440u-st+ct)*60u + sec;
  5917  1605  27D0  3194         	fcall	PL62	;call to abstracted procedure
  5918  1607  26BF  3194         	fcall	___wmul
  5919  1609  278D  3194         	fcall	PL34	;call to abstracted procedure
  5920  160B  26BF  3194         	fcall	___wmul
  5921  160D  0822               	movf	?___wmul,w
  5922  160E  074F               	addwf	??_led_pro_process+2,w
  5923  160F  00D1               	movwf	??_led_pro_process+4
  5924  1610  0823               	movf	?___wmul+1,w
  5925  1611  3D50               	addwfc	??_led_pro_process+3,w
  5926  1612  00D2               	movwf	??_led_pro_process+5
  5927  1613  0851               	movf	??_led_pro_process+4,w
  5928  1614  3E80               	addlw	128
  5929  1615  0021               	movlb	1	; select bank1
  5930  1616  00AF               	movwf	led_pro_process@dt^(0+128)
  5931  1617  3051               	movlw	81
  5932  1618  0020               	movlb	0	; select bank0
  5933  1619  3D52               	addwfc	??_led_pro_process+5,w
  5934  161A  2DF4               	goto	L2
  5935  161B                     l6437:	
  5936                           
  5937                           ;app_led.c: 648: else
  5938                           ;app_led.c: 649: {
  5939                           ;app_led.c: 650: for(i = 0; i < point_count-1; i++)
  5940  161B  0021               	movlb	1	; select bank1
  5941  161C  01C8               	clrf	led_pro_process@i^(0+128)
  5942  161D                     l6469:	
  5943  161D  083E               	movf	led_pro_process@point_count^(0+128),w
  5944  161E  3EFF               	addlw	255
  5945  161F  0020               	movlb	0	; select bank0
  5946  1620  00CD               	movwf	??_led_pro_process
  5947  1621  30FF               	movlw	255
  5948  1622  1803               	skipnc
  5949  1623  3000               	movlw	0
  5950  1624  00CE               	movwf	??_led_pro_process+1
  5951  1625  3A80               	xorlw	128
  5952  1626  3C80               	sublw	128
  5953  1627  1D03               	skipz
  5954  1628  2E2C               	goto	u6385
  5955  1629  084D               	movf	??_led_pro_process,w
  5956  162A  0021               	movlb	1	; select bank1
  5957  162B  0248               	subwf	led_pro_process@i^(0+128),w
  5958  162C                     u6385:	
  5959  162C  1803               	btfsc	3,0
  5960  162D  2E6D               	goto	l6471
  5961                           
  5962                           ;app_led.c: 651: {
  5963                           ;app_led.c: 652: start = index[i];
  5964  162E  0021               	movlb	1	; select bank1
  5965  162F  0848               	movf	led_pro_process@i^(0+128),w
  5966  1630  27EA  3194         	fcall	PL108	;call to abstracted procedure
  5967                           
  5968                           ;app_led.c: 653: end = index[i+1];
  5969  1632  0848               	movf	led_pro_process@i^(0+128),w
  5970  1633  3E01               	addlw	1
  5971  1634  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  5972  1635  0086               	movwf	6
  5973  1636  0801               	movf	1,w
  5974                           
  5975                           ;app_led.c: 654: sp = &m_led_para.ble_para.pro_para.points[start];
  5976  1637  27A0  3194         	fcall	PL38	;call to abstracted procedure
  5977  1639  26BF  3194         	fcall	___wmul
  5978  163B  2770  3194         	fcall	PL18	;call to abstracted procedure
  5979                           
  5980                           ;app_led.c: 655: ep = &m_led_para.ble_para.pro_para.points[end];
  5981  163D  2779  3194         	fcall	PL30	;call to abstracted procedure
  5982  163F  26BF  3194         	fcall	___wmul
  5983  1641  2770  3194         	fcall	PL18	;call to abstracted procedure
  5984                           
  5985                           ;app_led.c: 656: st = sp->hour*60u + sp->minuite;
  5986  1643  27B1  3194         	fcall	PL40	;call to abstracted procedure
  5987  1645  2753  3194         	fcall	PL8	;call to abstracted procedure
  5988  1647  26BF  3194         	fcall	___wmul
  5989                           
  5990                           ;app_led.c: 657: et = ep->hour*60u + ep->minuite;
  5991  1649  275B  3194         	fcall	PL16	;call to abstracted procedure
  5992  164B  2753  3194         	fcall	PL8	;call to abstracted procedure
  5993  164D  26BF  3194         	fcall	___wmul
  5994  164F  27C1  3194         	fcall	PL48	;call to abstracted procedure
  5995  1651  1803               	skipnc
  5996  1652  0AC0               	incf	(led_pro_process@et+1)^(0+128),f
  5997                           
  5998                           ;app_led.c: 658: if(ct >= st && ct < et)
  5999  1653  0847               	movf	(led_pro_process@st+1)^(0+128),w
  6000  1654  0020               	movlb	0	; select bank0
  6001  1655  024B               	subwf	led_pro_process@ct+1,w
  6002  1656  1D03               	skipz
  6003  1657  2E5A               	goto	u6365
  6004  1658  27F6  3194         	fcall	PL156	;call to abstracted procedure
  6005  165A                     u6365:	
  6006  165A  1C03               	skipc
  6007  165B  2E6A               	goto	l6467
  6008  165C  0021               	movlb	1	; select bank1
  6009  165D  0840               	movf	(led_pro_process@et+1)^(0+128),w
  6010  165E  0020               	movlb	0	; select bank0
  6011  165F  024B               	subwf	led_pro_process@ct+1,w
  6012  1660  1D03               	skipz
  6013  1661  2E64               	goto	u6375
  6014  1662  27FB  3194         	fcall	PL158	;call to abstracted procedure
  6015  1664                     u6375:	
  6016  1664  1803               	skipnc
  6017  1665  2E6A               	goto	l6467
  6018                           
  6019                           ;app_led.c: 659: {
  6020                           ;app_led.c: 660: duration = et - st;
  6021  1666  0021               	movlb	1	; select bank1
  6022  1667  27E1  3194         	fcall	PL84	;call to abstracted procedure
  6023  1669  2DE4               	goto	l6427
  6024  166A                     l6467:	
  6025  166A  0021               	movlb	1	; select bank1
  6026  166B  0AC8               	incf	led_pro_process@i^(0+128),f
  6027  166C  2E1D               	goto	l6469
  6028  166D                     l6471:	
  6029                           
  6030                           ;app_led.c: 664: }
  6031                           ;app_led.c: 665: }
  6032                           ;app_led.c: 666: }
  6033                           ;app_led.c: 667: if(flag)
  6034  166D  0021               	movlb	1	; select bank1
  6035  166E  0833               	movf	led_pro_process@flag^(0+128),w
  6036  166F  1903               	btfsc	3,2
  6037  1670  0008               	return
  6038                           
  6039                           ;app_led.c: 668: {
  6040                           ;app_led.c: 669: for(i = 0; i < 4; i++)
  6041  1671  01C8               	clrf	led_pro_process@i^(0+128)
  6042  1672                     l6479:	
  6043                           
  6044                           ;app_led.c: 670: {
  6045                           ;app_led.c: 671: target_bright[i] = led_calc_bright(sp->bright[i], ep->bright[i], durati
      +                          on, dt);
  6046  1672  0848               	movf	led_pro_process@i^(0+128),w
  6047  1673  0020               	movlb	0	; select bank0
  6048  1674  00CD               	movwf	??_led_pro_process
  6049  1675  01CE               	clrf	??_led_pro_process+1
  6050  1676  0021               	movlb	1	; select bank1
  6051  1677  0743               	addwf	led_pro_process@ep^(0+128),w
  6052  1678  0020               	movlb	0	; select bank0
  6053  1679  00CF               	movwf	??_led_pro_process+2
  6054  167A  084E               	movf	??_led_pro_process+1,w
  6055  167B  0021               	movlb	1	; select bank1
  6056  167C  3D44               	addwfc	(led_pro_process@ep+1)^(0+128),w
  6057  167D  0020               	movlb	0	; select bank0
  6058  167E  00D0               	movwf	??_led_pro_process+3
  6059  167F  084F               	movf	??_led_pro_process+2,w
  6060  1680  0086               	movwf	6
  6061  1681  0850               	movf	??_led_pro_process+3,w
  6062  1682  0087               	movwf	7
  6063  1683  3142               	addfsr 1,2
  6064  1684  0801               	movf	1,w
  6065  1685  00BB               	movwf	led_calc_bright@ebrt
  6066  1686  0021               	movlb	1	; select bank1
  6067  1687  0835               	movf	(led_pro_process@duration+1)^(0+128),w
  6068  1688  0020               	movlb	0	; select bank0
  6069  1689  00BD               	movwf	led_calc_bright@duration+1
  6070  168A  0021               	movlb	1	; select bank1
  6071  168B  0834               	movf	led_pro_process@duration^(0+128),w
  6072  168C  0020               	movlb	0	; select bank0
  6073  168D  00BC               	movwf	led_calc_bright@duration
  6074  168E  0021               	movlb	1	; select bank1
  6075  168F  0832               	movf	(led_pro_process@dt+3)^(0+128),w
  6076  1690  0020               	movlb	0	; select bank0
  6077  1691  00C1               	movwf	led_calc_bright@dt+3
  6078  1692  0021               	movlb	1	; select bank1
  6079  1693  0831               	movf	(led_pro_process@dt+2)^(0+128),w
  6080  1694  0020               	movlb	0	; select bank0
  6081  1695  00C0               	movwf	led_calc_bright@dt+2
  6082  1696  0021               	movlb	1	; select bank1
  6083  1697  0830               	movf	(led_pro_process@dt+1)^(0+128),w
  6084  1698  0020               	movlb	0	; select bank0
  6085  1699  00BF               	movwf	led_calc_bright@dt+1
  6086  169A  0021               	movlb	1	; select bank1
  6087  169B  082F               	movf	led_pro_process@dt^(0+128),w
  6088  169C  0020               	movlb	0	; select bank0
  6089  169D  00BE               	movwf	led_calc_bright@dt
  6090  169E  0021               	movlb	1	; select bank1
  6091  169F  0848               	movf	led_pro_process@i^(0+128),w
  6092  16A0  0020               	movlb	0	; select bank0
  6093  16A1  00D1               	movwf	??_led_pro_process+4
  6094  16A2  01D2               	clrf	??_led_pro_process+5
  6095  16A3  0021               	movlb	1	; select bank1
  6096  16A4  0741               	addwf	led_pro_process@sp^(0+128),w
  6097  16A5  0020               	movlb	0	; select bank0
  6098  16A6  00D3               	movwf	??_led_pro_process+6
  6099  16A7  0852               	movf	??_led_pro_process+5,w
  6100  16A8  0021               	movlb	1	; select bank1
  6101  16A9  3D42               	addwfc	(led_pro_process@sp+1)^(0+128),w
  6102  16AA  0020               	movlb	0	; select bank0
  6103  16AB  00D4               	movwf	??_led_pro_process+7
  6104  16AC  0853               	movf	??_led_pro_process+6,w
  6105  16AD  0086               	movwf	6
  6106  16AE  0854               	movf	??_led_pro_process+7,w
  6107  16AF  0087               	movwf	7
  6108  16B0  3142               	addfsr 1,2
  6109  16B1  0801               	movf	1,w
  6110  16B2  3193  23C3  3194   	fcall	_led_calc_bright
  6111  16B5  0021               	movlb	1	; select bank1
  6112  16B6  3548               	lslf	led_pro_process@i^(0+128),w
  6113  16B7  3194  247F  3194   	fcall	PL66	;call to abstracted procedure
  6114  16BA  0AC8               	incf	led_pro_process@i^(0+128),f
  6115  16BB  0248               	subwf	led_pro_process@i^(0+128),w
  6116  16BC  1803               	btfsc	3,0
  6117  16BD  0008               	return
  6118  16BE  2E72               	goto	l6479
  6119  16BF                     __end_of_led_pro_process:	
  6120  16BF                     __ptext63:	
  6121 ;; *************** function ___wmul *****************
  6122 ;; Defined at:
  6123 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul16.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  multiplier      2    2[BANK0 ] unsigned int 
  6126 ;;  multiplicand    2    4[BANK0 ] unsigned int 
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;  product         2    6[BANK0 ] unsigned int 
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  2    2[BANK0 ] unsigned int 
  6131 ;; Registers used:
  6132 ;;		wreg, status,2, status,0
  6133 ;; Tracked objects:
  6134 ;;		On entry : 1F/0
  6135 ;;		On exit  : 1F/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6139 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;Total ram usage:        6 bytes
  6143 ;; Hardware stack levels used:    1
  6144 ;; Hardware stack levels required when called:    9
  6145 ;; This function calls:
  6146 ;;		Nothing
  6147 ;; This function is called by:
  6148 ;;		_ble_decode
  6149 ;;		_led_para_init
  6150 ;;		_led_calc_bright
  6151 ;;		_led_auto_process
  6152 ;;		_led_pro_process
  6153 ;;		_led_second_cb
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           
  6158                           ;psect for function ___wmul
  6159  16BF                     ___wmul:	
  6160                           
  6161                           ;incstack = 0
  6162                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6163  16BF  01A6               	clrf	___wmul@product
  6164  16C0  01A7               	clrf	___wmul@product+1
  6165  16C1                     l5843:	
  6166  16C1  1C22               	btfss	___wmul@multiplier,0
  6167  16C2  2EC7               	goto	l5847
  6168  16C3  0824               	movf	___wmul@multiplicand,w
  6169  16C4  07A6               	addwf	___wmul@product,f
  6170  16C5  0825               	movf	___wmul@multiplicand+1,w
  6171  16C6  3DA7               	addwfc	___wmul@product+1,f
  6172  16C7                     l5847:	
  6173  16C7  35A4               	lslf	___wmul@multiplicand,f
  6174  16C8  0DA5               	rlf	___wmul@multiplicand+1,f
  6175  16C9  36A3               	lsrf	___wmul@multiplier+1,f
  6176  16CA  0CA2               	rrf	___wmul@multiplier,f
  6177  16CB  0822               	movf	___wmul@multiplier,w
  6178  16CC  0423               	iorwf	___wmul@multiplier+1,w
  6179  16CD  1D03               	btfss	3,2
  6180  16CE  2EC1               	goto	l5843
  6181  16CF  0827               	movf	___wmul@product+1,w
  6182  16D0  00A3               	movwf	?___wmul+1
  6183  16D1  0826               	movf	___wmul@product,w
  6184  16D2  00A2               	movwf	?___wmul
  6185  16D3  0008               	return
  6186  16D4                     __end_of___wmul:	
  6187  16D4                     __ptext12:	
  6188 ;; *************** function _led_find_device *****************
  6189 ;; Defined at:
  6190 ;;		line 1870 in file "src/app_led.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 1F/0
  6201 ;;		On exit  : 1F/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6208 ;;Total ram usage:        0 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:   10
  6211 ;; This function calls:
  6212 ;;		_led_turnoff
  6213 ;;		_led_turnon_max
  6214 ;; This function is called by:
  6215 ;;		_led_second_cb
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           
  6220                           ;psect for function _led_find_device
  6221  16D4                     _led_find_device:	
  6222                           
  6223                           ;app_led.c: 1872: static bool toggle = 0;
  6224                           ;app_led.c: 1873: if(toggle)
  6225                           
  6226                           ;incstack = 0
  6227                           ; Regs used in _led_find_device: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6228  16D4  0862               	movf	led_find_device@toggle,w
  6229  16D5  1903               	btfsc	3,2
  6230  16D6  2EE1               	goto	l877
  6231                           
  6232                           ;app_led.c: 1874: {
  6233                           ;app_led.c: 1875: toggle = 0;
  6234  16D7  01E2               	clrf	led_find_device@toggle
  6235                           
  6236                           ;app_led.c: 1876: led_turnoff();
  6237  16D8  3186  2634         	fcall	_led_turnoff
  6238                           
  6239                           ;app_led.c: 1877: if(led_run_para.flash_count > 0)
  6240  16DA  085E               	movf	_led_run_para+1,w
  6241  16DB  1D03               	btfss	3,2
  6242                           
  6243                           ;app_led.c: 1878: {
  6244                           ;app_led.c: 1879: led_run_para.flash_count--;
  6245  16DC  03DE               	decf	_led_run_para+1,f
  6246                           
  6247                           ;app_led.c: 1880: }
  6248                           ;app_led.c: 1881: if(led_run_para.flash_count == 0)
  6249  16DD  085E               	movf	_led_run_para+1,w
  6250  16DE  1903               	btfsc	3,2
  6251                           
  6252                           ;app_led.c: 1882: {
  6253                           ;app_led.c: 1883: led_run_para.mFind = 0;
  6254  16DF  105D               	bcf	_led_run_para,0
  6255  16E0  0008               	return
  6256  16E1                     l877:	
  6257                           
  6258                           ;app_led.c: 1886: else
  6259                           ;app_led.c: 1887: {
  6260                           ;app_led.c: 1888: toggle = 1;
  6261  16E1  01E2               	clrf	led_find_device@toggle
  6262  16E2  0AE2               	incf	led_find_device@toggle,f
  6263                           
  6264                           ;app_led.c: 1889: led_turnon_max();
  6265  16E3  2EF2               	ljmp	l5943
  6266  16E4                     __end_of_led_find_device:	
  6267  16E4                     __ptext11:	
  6268 ;; *************** function _led_preview *****************
  6269 ;; Defined at:
  6270 ;;		line 1907 in file "src/app_led.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;		None
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;		None
  6275 ;; Return value:  Size  Location     Type
  6276 ;;                  1    wreg      void 
  6277 ;; Registers used:
  6278 ;;		wreg, status,2, status,0
  6279 ;; Tracked objects:
  6280 ;;		On entry : 1F/0
  6281 ;;		On exit  : 1F/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;Total ram usage:        0 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; Hardware stack levels required when called:    9
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		_led_second_cb
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           
  6299                           ;psect for function _led_preview
  6300  16E4                     _led_preview:	
  6301                           
  6302                           ;app_led.c: 1909: if(led_run_para.prev_count > 0)
  6303                           
  6304                           ;incstack = 0
  6305                           ; Regs used in _led_preview: [wreg+status,2+status,0]
  6306  16E4  085F               	movf	_led_run_para+2,w
  6307  16E5  1D03               	btfss	3,2
  6308                           
  6309                           ;app_led.c: 1910: {
  6310                           ;app_led.c: 1911: led_run_para.prev_count--;
  6311  16E6  03DF               	decf	_led_run_para+2,f
  6312                           
  6313                           ;app_led.c: 1912: }
  6314                           ;app_led.c: 1913: if(led_run_para.prev_count == 0)
  6315  16E7  085F               	movf	_led_run_para+2,w
  6316  16E8  1903               	btfsc	3,2
  6317                           
  6318                           ;app_led.c: 1914: {
  6319                           ;app_led.c: 1915: led_run_para.mPrev = 0;
  6320  16E9  10DD               	bcf	_led_run_para,1
  6321  16EA  0008               	return
  6322  16EB                     __end_of_led_preview:	
  6323  16EB                     __ptext6:	
  6324 ;; *************** function _rtc_get_hour *****************
  6325 ;; Defined at:
  6326 ;;		line 140 in file "src/app_rtc.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;		None
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      unsigned char 
  6333 ;; Registers used:
  6334 ;;		wreg
  6335 ;; Tracked objects:
  6336 ;;		On entry : 1F/0
  6337 ;;		On exit  : 1F/1
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6344 ;;Total ram usage:        0 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; Hardware stack levels required when called:    9
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_led_second_cb
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           
  6355                           ;psect for function _rtc_get_hour
  6356  16EB                     _rtc_get_hour:	
  6357                           
  6358                           ;app_rtc.c: 142: return m_current_time.hour;
  6359                           
  6360                           ;incstack = 0
  6361                           ; Regs used in _rtc_get_hour: [wreg]
  6362  16EB  0021               	movlb	1	; select bank1
  6363  16EC  0863               	movf	(_m_current_time^(0+128)+4),w
  6364  16ED  0008               	return
  6365  16EE                     __end_of_rtc_get_hour:	
  6366  16EE                     __ptext5:	
  6367 ;; *************** function _rtc_get_minute *****************
  6368 ;; Defined at:
  6369 ;;		line 145 in file "src/app_rtc.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;		None
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;		None
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      unsigned char 
  6376 ;; Registers used:
  6377 ;;		wreg
  6378 ;; Tracked objects:
  6379 ;;		On entry : 1F/1
  6380 ;;		On exit  : 1F/1
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6387 ;;Total ram usage:        0 bytes
  6388 ;; Hardware stack levels used:    1
  6389 ;; Hardware stack levels required when called:    9
  6390 ;; This function calls:
  6391 ;;		Nothing
  6392 ;; This function is called by:
  6393 ;;		_led_second_cb
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           
  6398                           ;psect for function _rtc_get_minute
  6399  16EE                     _rtc_get_minute:	
  6400                           
  6401                           ;app_rtc.c: 147: return m_current_time.minute;
  6402                           
  6403                           ;incstack = 0
  6404                           ; Regs used in _rtc_get_minute: [wreg]
  6405  16EE  0864               	movf	(_m_current_time^(0+128)+5),w
  6406  16EF  0008               	return
  6407  16F0                     __end_of_rtc_get_minute:	
  6408  16F0                     __ptext4:	
  6409 ;; *************** function _rtc_get_second *****************
  6410 ;; Defined at:
  6411 ;;		line 150 in file "src/app_rtc.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;		None
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;		None
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      unsigned char 
  6418 ;; Registers used:
  6419 ;;		wreg
  6420 ;; Tracked objects:
  6421 ;;		On entry : 1F/1
  6422 ;;		On exit  : 1F/1
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6429 ;;Total ram usage:        0 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:    9
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_led_second_cb
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           
  6440                           ;psect for function _rtc_get_second
  6441  16F0                     _rtc_get_second:	
  6442                           
  6443                           ;app_rtc.c: 152: return m_current_time.second;
  6444                           
  6445                           ;incstack = 0
  6446                           ; Regs used in _rtc_get_second: [wreg]
  6447  16F0  0865               	movf	(_m_current_time^(0+128)+6),w
  6448  16F1  0008               	return
  6449  16F2                     __end_of_rtc_get_second:	
  6450  16F2                     __ptext13:	
  6451 ;; *************** function _led_turnon_max *****************
  6452 ;; Defined at:
  6453 ;;		line 693 in file "src/app_led.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;		None
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;  i               1    2[BANK0 ] unsigned char 
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6462 ;; Tracked objects:
  6463 ;;		On entry : 1F/0
  6464 ;;		On exit  : 1F/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6468 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6470 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;Total ram usage:        1 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:    9
  6474 ;; This function calls:
  6475 ;;		Nothing
  6476 ;; This function is called by:
  6477 ;;		_led_find_device
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           
  6482                           ;psect for function _led_turnon_max
  6483  16F2                     _led_turnon_max:	
  6484  16F2                     l5943:	
  6485                           ;incstack = 0
  6486                           ; Regs used in _led_turnon_max: [wreg+fsr1l+fsr1h+status,2+status,0]
  6487                           
  6488                           
  6489                           ;app_led.c: 695: for(uint8_t i = 0; i < 4; i++)
  6490  16F2  01A2               	clrf	led_turnon_max@i
  6491  16F3                     l5949:	
  6492                           
  6493                           ;app_led.c: 696: {
  6494                           ;app_led.c: 697: target_bright[i] = 1000;
  6495  16F3  3522               	lslf	led_turnon_max@i,w
  6496  16F4  3E55               	addlw	(low (_target_bright| 0))& (0+255)
  6497  16F5  0086               	movwf	6
  6498  16F6  30E8               	movlw	232
  6499  16F7  0187               	clrf	7
  6500  16F8  3FC0               	movwi [0]fsr1
  6501  16F9  3003               	movlw	3
  6502  16FA  3FC1               	movwi [1]fsr1
  6503                           
  6504                           ;app_led.c: 698: current_bright[i] = 1000;
  6505  16FB  3522               	lslf	led_turnon_max@i,w
  6506  16FC  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
  6507  16FD  0086               	movwf	6
  6508  16FE  30E8               	movlw	232
  6509  16FF  3FC0               	movwi [0]fsr1
  6510  1700  3003               	movlw	3
  6511  1701  3FC1               	movwi [1]fsr1
  6512  1702  3004               	movlw	4
  6513  1703  0AA2               	incf	led_turnon_max@i,f
  6514  1704  0222               	subwf	led_turnon_max@i,w
  6515  1705  1803               	btfsc	3,0
  6516  1706  0008               	return
  6517  1707  2EF3               	goto	l5949
  6518  1708                     __end_of_led_turnon_max:	
  6519  1708                     __ptext7:	
  6520 ;; *************** function _led_save_para *****************
  6521 ;; Defined at:
  6522 ;;		line 1927 in file "src/app_led.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;		None
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;		None
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  1    wreg      void 
  6529 ;; Registers used:
  6530 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6531 ;; Tracked objects:
  6532 ;;		On entry : 1F/0
  6533 ;;		On exit  : 1F/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6540 ;;Total ram usage:        0 bytes
  6541 ;; Hardware stack levels used:    1
  6542 ;; Hardware stack levels required when called:   11
  6543 ;; This function calls:
  6544 ;;		_eeprom_write_buffer
  6545 ;; This function is called by:
  6546 ;;		_led_second_cb
  6547 ;; This function uses a non-reentrant model
  6548 ;;
  6549                           
  6550                           
  6551                           ;psect for function _led_save_para
  6552  1708                     _led_save_para:	
  6553  1708                     l6509:	
  6554                           ;incstack = 0
  6555                           ; Regs used in _led_save_para: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6556                           
  6557                           
  6558                           ;app_led.c: 1929: if(led_run_para.save_delay_count > 0)
  6559  1708  0860               	movf	_led_run_para+3,w
  6560  1709  1D03               	btfss	3,2
  6561                           
  6562                           ;app_led.c: 1930: {
  6563                           ;app_led.c: 1931: led_run_para.save_delay_count--;
  6564  170A  03E0               	decf	_led_run_para+3,f
  6565                           
  6566                           ;app_led.c: 1932: }
  6567                           ;app_led.c: 1933: if(led_run_para.save_delay_count == 0)
  6568  170B  0860               	movf	_led_run_para+3,w
  6569  170C  1D03               	btfss	3,2
  6570  170D  0008               	return
  6571                           
  6572                           ;app_led.c: 1934: {
  6573                           ;app_led.c: 1935: m_led_para.save_flag = 0x55;
  6574  170E  3187  2751  3194   	fcall	PL144	;call to abstracted procedure
  6575  1711  3FC0               	movwi [0]fsr1
  6576                           
  6577                           ;app_led.c: 1936: eeprom_write_buffer(0x10, (uint8_t *) &m_led_para, sizeof(m_led_para))
      +                          ;
  6578  1712  307F               	movlw	127
  6579  1713  00A5               	movwf	eeprom_write_buffer@pbuf
  6580  1714  3023               	movlw	35
  6581  1715  00A6               	movwf	eeprom_write_buffer@pbuf+1
  6582  1716  3071               	movlw	113
  6583  1717  00A7               	movwf	eeprom_write_buffer@len
  6584  1718  3010               	movlw	16
  6585  1719  271C               	fcall	_eeprom_write_buffer
  6586                           
  6587                           ;app_led.c: 1937: led_run_para.mSave = 0;
  6588  171A  115D               	bcf	_led_run_para,2
  6589  171B  0008               	return
  6590  171C                     __end_of_led_save_para:	
  6591  171C                     __ptext8:	
  6592 ;; *************** function _eeprom_write_buffer *****************
  6593 ;; Defined at:
  6594 ;;		line 35 in file "src/drv_eeprom.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  addr            1    wreg     unsigned char 
  6597 ;;  pbuf            2    5[BANK0 ] PTR unsigned char 
  6598 ;;		 -> m_led_para(113), 
  6599 ;;  len             1    7[BANK0 ] unsigned char 
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;  addr            1    8[BANK0 ] unsigned char 
  6602 ;;  i               1    9[BANK0 ] unsigned char 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  1    wreg      void 
  6605 ;; Registers used:
  6606 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6607 ;; Tracked objects:
  6608 ;;		On entry : 1F/0
  6609 ;;		On exit  : 1F/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6612 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6615 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6616 ;;Total ram usage:        5 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:   10
  6619 ;; This function calls:
  6620 ;;		_eeprom_write
  6621 ;; This function is called by:
  6622 ;;		_led_save_para
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           
  6627                           ;psect for function _eeprom_write_buffer
  6628  171C                     _eeprom_write_buffer:	
  6629                           
  6630                           ;incstack = 0
  6631                           ; Regs used in _eeprom_write_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6632                           ;eeprom_write_buffer@addr stored from wreg
  6633  171C  00A8               	movwf	eeprom_write_buffer@addr
  6634                           
  6635                           ;drv_eeprom.c: 37: for(uint8_t i = len; i > 0; i--)
  6636  171D  0827               	movf	eeprom_write_buffer@len,w
  6637  171E  00A9               	movwf	eeprom_write_buffer@i
  6638  171F                     l5897:	
  6639  171F  0829               	movf	eeprom_write_buffer@i,w
  6640  1720  1903               	btfsc	3,2
  6641  1721  0008               	return
  6642                           
  6643                           ;drv_eeprom.c: 38: {
  6644                           ;drv_eeprom.c: 39: eeprom_write(addr++, *pbuf++);
  6645  1722  0825               	movf	eeprom_write_buffer@pbuf,w
  6646  1723  0086               	movwf	6
  6647  1724  0826               	movf	eeprom_write_buffer@pbuf+1,w
  6648  1725  0087               	movwf	7
  6649  1726  0801               	movf	1,w
  6650  1727  00A2               	movwf	eeprom_write@byte
  6651  1728  0828               	movf	eeprom_write_buffer@addr,w
  6652  1729  2731  3194         	fcall	_eeprom_write
  6653  172B  0AA5               	incf	eeprom_write_buffer@pbuf,f
  6654  172C  1903               	skipnz
  6655  172D  0AA6               	incf	eeprom_write_buffer@pbuf+1,f
  6656  172E  0AA8               	incf	eeprom_write_buffer@addr,f
  6657  172F  03A9               	decf	eeprom_write_buffer@i,f
  6658  1730  2F1F               	goto	l5897
  6659  1731                     __end_of_eeprom_write_buffer:	
  6660  1731                     __ptext9:	
  6661 ;; *************** function _eeprom_write *****************
  6662 ;; Defined at:
  6663 ;;		line 5 in file "src/drv_eeprom.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  addr            1    wreg     unsigned char 
  6666 ;;  byte            1    2[BANK0 ] unsigned char 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  addr            1    3[BANK0 ] unsigned char 
  6669 ;;  state           1    4[BANK0 ] unsigned char 
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  1    wreg      void 
  6672 ;; Registers used:
  6673 ;;		wreg, status,2, status,0
  6674 ;; Tracked objects:
  6675 ;;		On entry : 1F/0
  6676 ;;		On exit  : 1F/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6679 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6680 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6682 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6683 ;;Total ram usage:        3 bytes
  6684 ;; Hardware stack levels used:    1
  6685 ;; Hardware stack levels required when called:    9
  6686 ;; This function calls:
  6687 ;;		Nothing
  6688 ;; This function is called by:
  6689 ;;		_eeprom_write_buffer
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           
  6694                           ;psect for function _eeprom_write
  6695  1731                     _eeprom_write:	
  6696                           
  6697                           ;incstack = 0
  6698                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  6699                           ;eeprom_write@addr stored from wreg
  6700  1731  00A3               	movwf	eeprom_write@addr
  6701                           
  6702                           ;drv_eeprom.c: 7: bool state = INTCONbits.GIE;
  6703  1732  3000               	movlw	0
  6704  1733  1B8B               	btfsc	11,7	;volatile
  6705  1734  3001               	movlw	1
  6706  1735  00A4               	movwf	eeprom_write@state
  6707                           
  6708                           ;drv_eeprom.c: 9: NVMADRH = 0x70;
  6709  1736  3070               	movlw	112
  6710  1737  0031               	movlb	17	; select bank17
  6711  1738  0092               	movwf	18	;volatile
  6712                           
  6713                           ;drv_eeprom.c: 10: NVMADRL = addr;
  6714  1739  0020               	movlb	0	; select bank0
  6715  173A  0823               	movf	eeprom_write@addr,w
  6716  173B  0031               	movlb	17	; select bank17
  6717  173C  0091               	movwf	17	;volatile
  6718                           
  6719                           ;drv_eeprom.c: 11: NVMDATL = byte;
  6720  173D  0020               	movlb	0	; select bank0
  6721  173E  0822               	movf	eeprom_write@byte,w
  6722  173F  0031               	movlb	17	; select bank17
  6723  1740  0093               	movwf	19	;volatile
  6724                           
  6725                           ;drv_eeprom.c: 12: NVMCON1bits.NVMREGS = 1;
  6726  1741  1715               	bsf	21,6	;volsfr
  6727                           
  6728                           ;drv_eeprom.c: 13: NVMCON1bits.WREN = 1;
  6729  1742  1515               	bsf	21,2	;volsfr
  6730                           
  6731                           ;drv_eeprom.c: 14: INTCONbits.GIE = 0;
  6732  1743  138B               	bcf	11,7	;volatile
  6733                           
  6734                           ;drv_eeprom.c: 15: NVMCON2 = 0x55;
  6735  1744  3055               	movlw	85
  6736  1745  0096               	movwf	22	;volsfr
  6737                           
  6738                           ;drv_eeprom.c: 16: NVMCON2 = 0xAA;
  6739  1746  30AA               	movlw	170
  6740  1747  0096               	movwf	22	;volsfr
  6741                           
  6742                           ;drv_eeprom.c: 17: NVMCON1bits.WR = 1;
  6743  1748  1495               	bsf	21,1	;volsfr
  6744  1749                     l133:	
  6745                           ;drv_eeprom.c: 18: while(NVMCON1bits.WR);
  6746                           
  6747  1749  1895               	btfsc	21,1	;volsfr
  6748  174A  2F49               	goto	l133
  6749                           
  6750                           ;drv_eeprom.c: 19: NVMCON1bits.WREN = 0;
  6751  174B  1115               	bcf	21,2	;volsfr
  6752                           
  6753                           ;drv_eeprom.c: 21: INTCONbits.GIE = state;
  6754  174C  0020               	movlb	0	; select bank0
  6755  174D  0C24               	rrf	eeprom_write@state,w
  6756  174E  1C03               	skipc
  6757  174F  138B               	bcf	11,7	;volatile
  6758  1750  1803               	skipnc
  6759  1751  178B               	bsf	11,7	;volatile
  6760  1752  0008               	return
  6761  1753                     __end_of_eeprom_write:	
  6762  1753                     PL8:	
  6763  1753  0801               	movf	1,w
  6764  1754  0020               	movlb	0	; select bank0
  6765  1755  00A2               	movwf	___wmul@multiplier
  6766  1756  303C               	movlw	60
  6767  1757  01A3               	clrf	___wmul@multiplier+1
  6768  1758  00A4               	movwf	___wmul@multiplicand
  6769  1759  01A5               	clrf	___wmul@multiplicand+1
  6770  175A  0008               	return
  6771  175B                     __end_ofPL8:	
  6772  175B                     PL16:	
  6773  175B  0823               	movf	?___wmul+1,w
  6774  175C  0021               	movlb	1	; select bank1
  6775  175D  00C7               	movwf	(led_pro_process@st+1)^(0+128)
  6776  175E  0020               	movlb	0	; select bank0
  6777  175F  0822               	movf	?___wmul,w
  6778  1760  0021               	movlb	1	; select bank1
  6779  1761  00C6               	movwf	led_pro_process@st^(0+128)
  6780  1762  0841               	movf	led_pro_process@sp^(0+128),w
  6781  1763  0086               	movwf	6
  6782  1764  0842               	movf	(led_pro_process@sp+1)^(0+128),w
  6783  1765  0087               	movwf	7
  6784  1766  3141               	addfsr 1,1
  6785  1767  0801               	movf	1,w
  6786  1768  07C6               	addwf	led_pro_process@st^(0+128),f
  6787  1769  1803               	skipnc
  6788  176A  0AC7               	incf	(led_pro_process@st+1)^(0+128),f
  6789  176B  0843               	movf	led_pro_process@ep^(0+128),w
  6790  176C  0086               	movwf	6
  6791  176D  0844               	movf	(led_pro_process@ep+1)^(0+128),w
  6792  176E  0087               	movwf	7
  6793  176F  0008               	return
  6794  1770                     __end_ofPL16:	
  6795  1770                     PL18:	
  6796  1770  0822               	movf	?___wmul,w
  6797  1771  3E01               	addlw	1
  6798  1772  00CD               	movwf	??_led_pro_process
  6799  1773  3000               	movlw	0
  6800  1774  3D23               	addwfc	?___wmul+1,w
  6801  1775  00CE               	movwf	??_led_pro_process+1
  6802  1776  084D               	movf	??_led_pro_process,w
  6803  1777  0021               	movlb	1	; select bank1
  6804  1778  0008               	return
  6805  1779                     __end_ofPL18:	
  6806  1779                     PL30:	
  6807  1779  07C1               	addwf	led_pro_process@sp^(0+128),f
  6808  177A  0020               	movlb	0	; select bank0
  6809  177B  084E               	movf	??_led_pro_process+1,w
  6810  177C  0021               	movlb	1	; select bank1
  6811  177D  3DC2               	addwfc	(led_pro_process@sp+1)^(0+128),f
  6812  177E  3023               	movlw	35
  6813  177F  00C4               	movwf	(led_pro_process@ep+1)^(0+128)
  6814  1780  30B3               	movlw	179
  6815  1781  00C3               	movwf	led_pro_process@ep^(0+128)
  6816  1782  083D               	movf	(led_pro_process@end+1)^(0+128),w
  6817  1783  0020               	movlb	0	; select bank0
  6818  1784  00A3               	movwf	___wmul@multiplier+1
  6819  1785  0021               	movlb	1	; select bank1
  6820  1786  083C               	movf	led_pro_process@end^(0+128),w
  6821  1787  0020               	movlb	0	; select bank0
  6822  1788  00A2               	movwf	___wmul@multiplier
  6823  1789  3006               	movlw	6
  6824  178A  00A4               	movwf	___wmul@multiplicand
  6825  178B  01A5               	clrf	___wmul@multiplicand+1
  6826  178C  0008               	return
  6827  178D                     __end_ofPL30:	
  6828  178D                     PL34:	
  6829  178D  084D               	movf	??_led_pro_process,w
  6830  178E  0722               	addwf	?___wmul,w
  6831  178F  00CF               	movwf	??_led_pro_process+2
  6832  1790  084E               	movf	??_led_pro_process+1,w
  6833  1791  3D23               	addwfc	?___wmul+1,w
  6834  1792  00D0               	movwf	??_led_pro_process+3
  6835  1793  0021               	movlb	1	; select bank1
  6836  1794  0847               	movf	(led_pro_process@st+1)^(0+128),w
  6837  1795  0020               	movlb	0	; select bank0
  6838  1796  00A3               	movwf	___wmul@multiplier+1
  6839  1797  0021               	movlb	1	; select bank1
  6840  1798  0846               	movf	led_pro_process@st^(0+128),w
  6841  1799  0020               	movlb	0	; select bank0
  6842  179A  00A2               	movwf	___wmul@multiplier
  6843  179B  30C4               	movlw	196
  6844  179C  00A4               	movwf	___wmul@multiplicand
  6845  179D  30FF               	movlw	255
  6846  179E  00A5               	movwf	___wmul@multiplicand+1
  6847  179F  0008               	return
  6848  17A0                     __end_ofPL34:	
  6849  17A0                     PL38:	
  6850  17A0  00BC               	movwf	led_pro_process@end^(0+128)
  6851  17A1  3023               	movlw	35
  6852  17A2  01BD               	clrf	(led_pro_process@end+1)^(0+128)
  6853  17A3  00C2               	movwf	(led_pro_process@sp+1)^(0+128)
  6854  17A4  30B3               	movlw	179
  6855  17A5  00C1               	movwf	led_pro_process@sp^(0+128)
  6856  17A6  083B               	movf	(led_pro_process@start+1)^(0+128),w
  6857  17A7  0020               	movlb	0	; select bank0
  6858  17A8  00A3               	movwf	___wmul@multiplier+1
  6859  17A9  0021               	movlb	1	; select bank1
  6860  17AA  083A               	movf	led_pro_process@start^(0+128),w
  6861  17AB  0020               	movlb	0	; select bank0
  6862  17AC  00A2               	movwf	___wmul@multiplier
  6863  17AD  3006               	movlw	6
  6864  17AE  00A4               	movwf	___wmul@multiplicand
  6865  17AF  01A5               	clrf	___wmul@multiplicand+1
  6866  17B0  0008               	return
  6867  17B1                     __end_ofPL38:	
  6868  17B1                     PL40:	
  6869  17B1  07C3               	addwf	led_pro_process@ep^(0+128),f
  6870  17B2  0020               	movlb	0	; select bank0
  6871  17B3  084E               	movf	??_led_pro_process+1,w
  6872  17B4  0021               	movlb	1	; select bank1
  6873  17B5  3DC4               	addwfc	(led_pro_process@ep+1)^(0+128),f
  6874  17B6  0841               	movf	led_pro_process@sp^(0+128),w
  6875  17B7  0086               	movwf	6
  6876  17B8  0842               	movf	(led_pro_process@sp+1)^(0+128),w
  6877  17B9  0087               	movwf	7
  6878  17BA  0008               	return
  6879  17BB                     __end_ofPL40:	
  6880  17BB                     PL44:	
  6881  17BB  00A2               	movwf	___wmul@multiplier
  6882  17BC  3006               	movlw	6
  6883  17BD  01A3               	clrf	___wmul@multiplier+1
  6884  17BE  00A4               	movwf	___wmul@multiplicand
  6885  17BF  01A5               	clrf	___wmul@multiplicand+1
  6886  17C0  0008               	return
  6887  17C1                     __end_ofPL44:	
  6888  17C1                     PL48:	
  6889  17C1  0823               	movf	?___wmul+1,w
  6890  17C2  0021               	movlb	1	; select bank1
  6891  17C3  00C0               	movwf	(led_pro_process@et+1)^(0+128)
  6892  17C4  0020               	movlb	0	; select bank0
  6893  17C5  0822               	movf	?___wmul,w
  6894  17C6  0021               	movlb	1	; select bank1
  6895  17C7  00BF               	movwf	led_pro_process@et^(0+128)
  6896  17C8  0843               	movf	led_pro_process@ep^(0+128),w
  6897  17C9  0086               	movwf	6
  6898  17CA  0844               	movf	(led_pro_process@ep+1)^(0+128),w
  6899  17CB  0087               	movwf	7
  6900  17CC  3141               	addfsr 1,1
  6901  17CD  0801               	movf	1,w
  6902  17CE  07BF               	addwf	led_pro_process@et^(0+128),f
  6903  17CF  0008               	return
  6904  17D0                     __end_ofPL48:	
  6905  17D0                     PL62:	
  6906  17D0  084C               	movf	led_pro_process@sec,w
  6907  17D1  00CD               	movwf	??_led_pro_process
  6908  17D2  01CE               	clrf	??_led_pro_process+1
  6909  17D3  084B               	movf	led_pro_process@ct+1,w
  6910  17D4  00A3               	movwf	___wmul@multiplier+1
  6911  17D5  084A               	movf	led_pro_process@ct,w
  6912  17D6  00A2               	movwf	___wmul@multiplier
  6913  17D7  303C               	movlw	60
  6914  17D8  00A4               	movwf	___wmul@multiplicand
  6915  17D9  01A5               	clrf	___wmul@multiplicand+1
  6916  17DA  0008               	return
  6917  17DB                     __end_ofPL62:	
  6918  17DB                     PL64:	
  6919  17DB  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  6920  17DC  0086               	movwf	6
  6921  17DD  0187               	clrf	7
  6922  17DE  0801               	movf	1,w
  6923  17DF  0020               	movlb	0	; select bank0
  6924  17E0  0008               	return
  6925  17E1                     __end_ofPL64:	
  6926  17E1                     PL84:	
  6927  17E1  0840               	movf	(led_pro_process@et+1)^(0+128),w
  6928  17E2  00B5               	movwf	(led_pro_process@duration+1)^(0+128)
  6929  17E3  083F               	movf	led_pro_process@et^(0+128),w
  6930  17E4  00B4               	movwf	led_pro_process@duration^(0+128)
  6931  17E5  0846               	movf	led_pro_process@st^(0+128),w
  6932  17E6  02B4               	subwf	led_pro_process@duration^(0+128),f
  6933  17E7  0847               	movf	(led_pro_process@st+1)^(0+128),w
  6934  17E8  3BB5               	subwfb	(led_pro_process@duration+1)^(0+128),f
  6935  17E9  0008               	return
  6936  17EA                     __end_ofPL84:	
  6937  17EA                     PL108:	
  6938  17EA  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  6939  17EB  0086               	movwf	6
  6940  17EC  0187               	clrf	7
  6941  17ED  0801               	movf	1,w
  6942  17EE  00BA               	movwf	led_pro_process@start^(0+128)
  6943  17EF  01BB               	clrf	(led_pro_process@start+1)^(0+128)
  6944  17F0  0008               	return
  6945  17F1                     __end_ofPL108:	
  6946  17F1                     PL148:	
  6947  17F1  30B3               	movlw	179
  6948  17F2  0086               	movwf	6
  6949  17F3  3023               	movlw	35
  6950  17F4  0087               	movwf	7
  6951  17F5  0008               	return
  6952  17F6                     __end_ofPL148:	
  6953  17F6                     PL156:	
  6954  17F6  0021               	movlb	1	; select bank1
  6955  17F7  0846               	movf	led_pro_process@st^(0+128),w
  6956  17F8  0020               	movlb	0	; select bank0
  6957  17F9  024A               	subwf	led_pro_process@ct,w
  6958  17FA  0008               	return
  6959  17FB                     __end_ofPL156:	
  6960  17FB                     PL158:	
  6961  17FB  0021               	movlb	1	; select bank1
  6962  17FC  083F               	movf	led_pro_process@et^(0+128),w
  6963  17FD  0020               	movlb	0	; select bank0
  6964  17FE  024A               	subwf	led_pro_process@ct,w
  6965  17FF  0008               	return
  6966  1800                     __end_ofPL158:	
  6967                           
  6968                           	psect	text14
  6969  11C7                     __ptext14:	
  6970 ;; *************** function _led_auto_process *****************
  6971 ;; Defined at:
  6972 ;;		line 515 in file "src/app_led.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  ct              2   42[BANK0 ] unsigned int 
  6975 ;;  sec             1   44[BANK0 ] unsigned char 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  val            24    0[BANK1 ] unsigned char [4][6]
  6978 ;;  tr             12   24[BANK1 ] unsigned int [6]
  6979 ;;  dt              4   39[BANK1 ] unsigned long 
  6980 ;;  p               2   49[BANK1 ] PTR struct .
  6981 ;;		 -> m_led_para.ble_para.auto_para(19), m_led_para.ble_para(107), 
  6982 ;;  st              2   47[BANK1 ] unsigned int 
  6983 ;;  et              2   44[BANK1 ] unsigned int 
  6984 ;;  duration        2   36[BANK1 ] unsigned int 
  6985 ;;  i               1   51[BANK1 ] unsigned char 
  6986 ;;  k               1   46[BANK1 ] unsigned char 
  6987 ;;  count           1   43[BANK1 ] unsigned char 
  6988 ;;  j               1   38[BANK1 ] unsigned char 
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  1    wreg      void 
  6991 ;; Registers used:
  6992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6993 ;; Tracked objects:
  6994 ;;		On entry : 1F/0
  6995 ;;		On exit  : 1F/1
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6998 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;      Totals:         0       9      52       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;Total ram usage:       61 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; Hardware stack levels required when called:   11
  7005 ;; This function calls:
  7006 ;;		___awmod
  7007 ;;		___lmul
  7008 ;;		___wmul
  7009 ;;		_led_calc_bright
  7010 ;; This function is called by:
  7011 ;;		_led_second_cb
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           
  7016                           ;psect for function _led_auto_process
  7017  11C7                     _led_auto_process:	
  7018                           
  7019                           ;app_led.c: 517: uint8_t i, j, k;
  7020                           ;app_led.c: 518: uint16_t st;
  7021                           ;app_led.c: 519: uint16_t et;
  7022                           ;app_led.c: 520: uint16_t duration;
  7023                           ;app_led.c: 521: uint32_t dt;
  7024                           ;app_led.c: 522: uint8_t count = 4;
  7025                           
  7026                           ;incstack = 0
  7027                           ; Regs used in _led_auto_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7028  11C7  3004               	movlw	4
  7029  11C8  0021               	movlb	1	; select bank1
  7030  11C9  00CB               	movwf	led_auto_process@count^(0+128)
  7031                           
  7032                           ;app_led.c: 523: auto_para_t *p = &m_led_para.ble_para.auto_para;
  7033  11CA  3023               	movlw	35
  7034  11CB  00D2               	movwf	(led_auto_process@p+1)^(0+128)
  7035  11CC  3085               	movlw	133
  7036  11CD  00D1               	movwf	led_auto_process@p^(0+128)
  7037  11CE  301B               	movlw	27
  7038  11CF  07D1               	addwf	led_auto_process@p^(0+128),f
  7039  11D0  1803               	skipnc
  7040  11D1  0AD2               	incf	(led_auto_process@p+1)^(0+128),f
  7041                           
  7042                           ;app_led.c: 524: uint16_t tr[6];
  7043                           ;app_led.c: 525: tr[0] = p->sunrise_start_hour * 60u + p->sunrise_start_minute;
  7044  11D2  0851               	movf	led_auto_process@p^(0+128),w
  7045  11D3  0086               	movwf	6
  7046  11D4  0852               	movf	(led_auto_process@p+1)^(0+128),w
  7047  11D5  0087               	movwf	7
  7048  11D6  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
  7049  11D9  3196  26BF  3191   	fcall	___wmul
  7050  11DC  0823               	movf	?___wmul+1,w
  7051  11DD  0021               	movlb	1	; select bank1
  7052  11DE  00B9               	movwf	(led_auto_process@tr+1)^(0+128)
  7053  11DF  0020               	movlb	0	; select bank0
  7054  11E0  0822               	movf	?___wmul,w
  7055  11E1  0021               	movlb	1	; select bank1
  7056  11E2  00B8               	movwf	led_auto_process@tr^(0+128)
  7057  11E3  0851               	movf	led_auto_process@p^(0+128),w
  7058  11E4  0086               	movwf	6
  7059  11E5  0852               	movf	(led_auto_process@p+1)^(0+128),w
  7060  11E6  0087               	movwf	7
  7061  11E7  3141               	addfsr 1,1
  7062  11E8  0801               	movf	1,w
  7063  11E9  07B8               	addwf	led_auto_process@tr^(0+128),f
  7064  11EA  1803               	skipnc
  7065  11EB  0AB9               	incf	(led_auto_process@tr+1)^(0+128),f
  7066                           
  7067                           ;app_led.c: 526: tr[1] = p->sunrise_end_hour * 60u + p->sunrise_end_minute;
  7068  11EC  0851               	movf	led_auto_process@p^(0+128),w
  7069  11ED  0086               	movwf	6
  7070  11EE  0852               	movf	(led_auto_process@p+1)^(0+128),w
  7071  11EF  0087               	movwf	7
  7072  11F0  3143               	addfsr 1,3
  7073  11F1  2461               	fcall	PL22	;call to abstracted procedure
  7074  11F2  3142               	addfsr 1,2
  7075  11F3  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
  7076  11F6  3196  26BF  3191   	fcall	___wmul
  7077  11F9  084D               	movf	??_led_auto_process,w
  7078  11FA  0722               	addwf	?___wmul,w
  7079  11FB  0021               	movlb	1	; select bank1
  7080  11FC  00BA               	movwf	(led_auto_process@tr^(0+128)+2)
  7081  11FD  0020               	movlb	0	; select bank0
  7082  11FE  084E               	movf	??_led_auto_process+1,w
  7083  11FF  3D23               	addwfc	?___wmul+1,w
  7084  1200  0021               	movlb	1	; select bank1
  7085  1201  00BB               	movwf	((led_auto_process@tr+1)^(0+128)+2)
  7086                           
  7087                           ;app_led.c: 527: tr[2] = p->sunset_start_hour * 60u + p->sunset_start_minute;
  7088  1202  0851               	movf	led_auto_process@p^(0+128),w
  7089  1203  0086               	movwf	6
  7090  1204  0852               	movf	(led_auto_process@p+1)^(0+128),w
  7091  1205  0087               	movwf	7
  7092  1206  3149               	addfsr 1,9
  7093  1207  2461               	fcall	PL22	;call to abstracted procedure
  7094  1208  3148               	addfsr 1,8
  7095  1209  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
  7096  120C  3196  26BF  3191   	fcall	___wmul
  7097  120F  084D               	movf	??_led_auto_process,w
  7098  1210  0722               	addwf	?___wmul,w
  7099  1211  0021               	movlb	1	; select bank1
  7100  1212  00BC               	movwf	(led_auto_process@tr^(0+128)+4)
  7101  1213  0020               	movlb	0	; select bank0
  7102  1214  084E               	movf	??_led_auto_process+1,w
  7103  1215  3D23               	addwfc	?___wmul+1,w
  7104  1216  0021               	movlb	1	; select bank1
  7105  1217  00BD               	movwf	((led_auto_process@tr+1)^(0+128)+4)
  7106                           
  7107                           ;app_led.c: 528: tr[3] = p->sunset_end_hour * 60u + p->sunset_end_minute;
  7108  1218  0851               	movf	led_auto_process@p^(0+128),w
  7109  1219  0086               	movwf	6
  7110  121A  0852               	movf	(led_auto_process@p+1)^(0+128),w
  7111  121B  0087               	movwf	7
  7112  121C  314B               	addfsr 1,11
  7113  121D  2461               	fcall	PL22	;call to abstracted procedure
  7114  121E  314A               	addfsr 1,10
  7115  121F  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
  7116  1222  3196  26BF  3191   	fcall	___wmul
  7117  1225  084D               	movf	??_led_auto_process,w
  7118  1226  0722               	addwf	?___wmul,w
  7119  1227  0021               	movlb	1	; select bank1
  7120  1228  00BE               	movwf	(led_auto_process@tr^(0+128)+6)
  7121  1229  0020               	movlb	0	; select bank0
  7122  122A  084E               	movf	??_led_auto_process+1,w
  7123  122B  3D23               	addwfc	?___wmul+1,w
  7124  122C  0021               	movlb	1	; select bank1
  7125  122D  00BF               	movwf	((led_auto_process@tr+1)^(0+128)+6)
  7126                           
  7127                           ;app_led.c: 529: tr[4] = p->turnoff_hour * 60u + p->turnoff_minute;
  7128  122E  0851               	movf	led_auto_process@p^(0+128),w
  7129  122F  0086               	movwf	6
  7130  1230  0852               	movf	(led_auto_process@p+1)^(0+128),w
  7131  1231  0087               	movwf	7
  7132  1232  3152               	addfsr 1,18
  7133  1233  2461               	fcall	PL22	;call to abstracted procedure
  7134  1234  3151               	addfsr 1,17
  7135  1235  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
  7136  1238  3196  26BF  3191   	fcall	___wmul
  7137  123B  084D               	movf	??_led_auto_process,w
  7138  123C  0722               	addwf	?___wmul,w
  7139  123D  0021               	movlb	1	; select bank1
  7140  123E  00C0               	movwf	(led_auto_process@tr^(0+128)+8)
  7141  123F  0020               	movlb	0	; select bank0
  7142  1240  084E               	movf	??_led_auto_process+1,w
  7143  1241  3D23               	addwfc	?___wmul+1,w
  7144  1242  0021               	movlb	1	; select bank1
  7145  1243  00C1               	movwf	((led_auto_process@tr+1)^(0+128)+8)
  7146                           
  7147                           ;app_led.c: 530: tr[5] = tr[4];
  7148  1244  00C3               	movwf	((led_auto_process@tr+1)^(0+128)+10)
  7149  1245  0840               	movf	(led_auto_process@tr^(0+128)+8),w
  7150  1246  00C2               	movwf	(led_auto_process@tr^(0+128)+10)
  7151                           
  7152                           ;app_led.c: 531: uint8_t val[6][4];
  7153                           ;app_led.c: 532: for(i = 0; i < 4; i++)
  7154  1247  01D3               	clrf	led_auto_process@i^(0+128)
  7155                           
  7156                           ;app_led.c: 533: {
  7157                           ;app_led.c: 534: if(p->turnoff_enabled)
  7158  1248  249C  3191         	fcall	PL110	;call to abstracted procedure
  7159  124A                     L7:	
  7160  124A  1903               	btfsc	3,2
  7161  124B  2A52               	goto	l6283
  7162                           
  7163                           ;app_led.c: 535: {
  7164                           ;app_led.c: 536: val[0][i] = 0;
  7165  124C  0853               	movf	led_auto_process@i^(0+128),w
  7166  124D  3EA0               	addlw	(low (led_auto_process@val| 0))& (0+255)
  7167  124E  0086               	movwf	6
  7168  124F  0187               	clrf	7
  7169  1250  0181               	clrf	1
  7170                           
  7171                           ;app_led.c: 537: }
  7172  1251  2A58               	goto	l669
  7173  1252                     l6283:	
  7174                           
  7175                           ;app_led.c: 538: else
  7176                           ;app_led.c: 539: {
  7177                           ;app_led.c: 540: val[0][i] = p->night_bright[i];
  7178  1252  0853               	movf	led_auto_process@i^(0+128),w
  7179  1253  244C  3191         	fcall	PL2	;call to abstracted procedure
  7180  1255  310C               	addfsr 0,12
  7181  1256  0800               	movf	0,w
  7182  1257  0081               	movwf	1
  7183  1258                     l669:	
  7184                           
  7185                           ;app_led.c: 541: }
  7186                           ;app_led.c: 542: val[1][i] = p->day_bright[i];
  7187  1258  0021               	movlb	1	; select bank1
  7188  1259  0853               	movf	led_auto_process@i^(0+128),w
  7189  125A  3E04               	addlw	4
  7190  125B  244C  3191         	fcall	PL2	;call to abstracted procedure
  7191                           
  7192                           ;app_led.c: 543: val[2][i] = p->day_bright[i];
  7193  125D  24A3  3191         	fcall	PL124	;call to abstracted procedure
  7194  125F  3E08               	addlw	8
  7195  1260  244C  3191         	fcall	PL2	;call to abstracted procedure
  7196                           
  7197                           ;app_led.c: 544: val[3][i] = p->night_bright[i];
  7198  1262  24A3  3191         	fcall	PL124	;call to abstracted procedure
  7199  1264  3E0C               	addlw	12
  7200  1265  244C  3191         	fcall	PL2	;call to abstracted procedure
  7201                           
  7202                           ;app_led.c: 545: val[4][i] = p->night_bright[i];
  7203  1267  24A9  3191         	fcall	PL140	;call to abstracted procedure
  7204  1269  3E10               	addlw	16
  7205  126A  244C  3191         	fcall	PL2	;call to abstracted procedure
  7206                           
  7207                           ;app_led.c: 546: val[5][i] = 0;
  7208  126C  24A9  3191         	fcall	PL140	;call to abstracted procedure
  7209  126E  3E14               	addlw	20
  7210  126F  3EA0               	addlw	(low (led_auto_process@val| 0))& (0+255)
  7211  1270  0086               	movwf	6
  7212  1271  3004               	movlw	4
  7213  1272  0187               	clrf	7
  7214  1273  0181               	clrf	1
  7215  1274  0AD3               	incf	led_auto_process@i^(0+128),f
  7216  1275  0253               	subwf	led_auto_process@i^(0+128),w
  7217                           
  7218                           ;app_led.c: 547: }
  7219                           ;app_led.c: 548: if(p->turnoff_enabled)
  7220  1276  249C  3191         	fcall	PL110	;call to abstracted procedure
  7221  1278  1C03               	skipc
  7222  1279  2A4A               	goto	L7
  7223  127A  1903               	btfsc	3,2
  7224  127B  2A7E               	goto	l6295
  7225                           
  7226                           ;app_led.c: 549: {
  7227                           ;app_led.c: 550: count = 6;
  7228  127C  3006               	movlw	6
  7229  127D  00CB               	movwf	led_auto_process@count^(0+128)
  7230  127E                     l6295:	
  7231                           
  7232                           ;app_led.c: 551: }
  7233                           ;app_led.c: 552: for(i = 0; i < count; i++)
  7234  127E  01D3               	clrf	led_auto_process@i^(0+128)
  7235  127F                     l6343:	
  7236  127F  084B               	movf	led_auto_process@count^(0+128),w
  7237  1280  0253               	subwf	led_auto_process@i^(0+128),w
  7238  1281  1803               	btfsc	3,0
  7239  1282  0008               	return
  7240                           
  7241                           ;app_led.c: 553: {
  7242                           ;app_led.c: 554: j = (i + 1) % count;
  7243  1283  0853               	movf	led_auto_process@i^(0+128),w
  7244  1284  0020               	movlb	0	; select bank0
  7245  1285  00A4               	movwf	___awmod@dividend
  7246  1286  01A5               	clrf	___awmod@dividend+1
  7247  1287  0AA4               	incf	___awmod@dividend,f
  7248  1288  1903               	skipnz
  7249  1289  0AA5               	incf	___awmod@dividend+1,f
  7250  128A  0021               	movlb	1	; select bank1
  7251  128B  084B               	movf	led_auto_process@count^(0+128),w
  7252  128C  0020               	movlb	0	; select bank0
  7253  128D  00A2               	movwf	___awmod@divisor
  7254  128E  01A3               	clrf	___awmod@divisor+1
  7255  128F  2365  3191         	fcall	___awmod
  7256  1291  0822               	movf	?___awmod,w
  7257  1292  0021               	movlb	1	; select bank1
  7258  1293  00C6               	movwf	led_auto_process@j^(0+128)
  7259                           
  7260                           ;app_led.c: 555: st = tr[i];
  7261  1294  3553               	lslf	led_auto_process@i^(0+128),w
  7262  1295  3EB8               	addlw	(low (led_auto_process@tr| 0))& (0+255)
  7263  1296  0086               	movwf	6
  7264  1297  0187               	clrf	7
  7265  1298  3F40               	moviw [0]fsr1
  7266  1299  00CF               	movwf	led_auto_process@st^(0+128)
  7267  129A  3F41               	moviw [1]fsr1
  7268  129B  00D0               	movwf	(led_auto_process@st+1)^(0+128)
  7269                           
  7270                           ;app_led.c: 556: et = tr[j];
  7271  129C  3546               	lslf	led_auto_process@j^(0+128),w
  7272  129D  3EB8               	addlw	(low (led_auto_process@tr| 0))& (0+255)
  7273  129E  0086               	movwf	6
  7274  129F  3F40               	moviw [0]fsr1
  7275  12A0  00CC               	movwf	led_auto_process@et^(0+128)
  7276  12A1  3F41               	moviw [1]fsr1
  7277  12A2  00CD               	movwf	(led_auto_process@et+1)^(0+128)
  7278                           
  7279                           ;app_led.c: 557: if(et >= st)
  7280  12A3  0850               	movf	(led_auto_process@st+1)^(0+128),w
  7281  12A4  024D               	subwf	(led_auto_process@et+1)^(0+128),w
  7282  12A5  1D03               	skipz
  7283  12A6  2AA9               	goto	u6195
  7284  12A7  084F               	movf	led_auto_process@st^(0+128),w
  7285  12A8  024C               	subwf	led_auto_process@et^(0+128),w
  7286  12A9                     u6195:	
  7287                           
  7288                           ;app_led.c: 558: {
  7289                           ;app_led.c: 559: if(ct >= st && ct < et)
  7290  12A9  0850               	movf	(led_auto_process@st+1)^(0+128),w
  7291  12AA  1C03               	skipc
  7292  12AB  2ACA               	goto	L8
  7293  12AC  0020               	movlb	0	; select bank0
  7294  12AD  024B               	subwf	led_auto_process@ct+1,w
  7295  12AE  1D03               	skipz
  7296  12AF  2AB2               	goto	u6205
  7297  12B0  24AF  3191         	fcall	PL146	;call to abstracted procedure
  7298  12B2                     u6205:	
  7299  12B2  1C03               	skipc
  7300  12B3  2B62               	goto	l6341
  7301  12B4  0021               	movlb	1	; select bank1
  7302  12B5  084D               	movf	(led_auto_process@et+1)^(0+128),w
  7303  12B6  0020               	movlb	0	; select bank0
  7304  12B7  024B               	subwf	led_auto_process@ct+1,w
  7305  12B8  1D03               	skipz
  7306  12B9  2ABC               	goto	u6215
  7307  12BA  24B4  3191         	fcall	PL152	;call to abstracted procedure
  7308  12BC                     u6215:	
  7309  12BC  1803               	skipnc
  7310  12BD  2B62               	goto	l6341
  7311                           
  7312                           ;app_led.c: 560: {
  7313                           ;app_led.c: 561: duration = et - st;
  7314  12BE  2489  3191         	fcall	PL76	;call to abstracted procedure
  7315  12C0                     l6311:	
  7316                           
  7317                           ;app_led.c: 562: dt = (ct - st) * 60ul + sec;
  7318  12C0  0021               	movlb	1	; select bank1
  7319  12C1  084F               	movf	led_auto_process@st^(0+128),w
  7320  12C2  0020               	movlb	0	; select bank0
  7321  12C3  024A               	subwf	led_auto_process@ct,w
  7322  12C4  00A2               	movwf	___lmul@multiplier
  7323  12C5  0021               	movlb	1	; select bank1
  7324  12C6  0850               	movf	(led_auto_process@st+1)^(0+128),w
  7325  12C7  0020               	movlb	0	; select bank0
  7326  12C8  3B4B               	subwfb	led_auto_process@ct+1,w
  7327  12C9  2AFA               	goto	L6
  7328  12CA                     L8:	
  7329                           ;app_led.c: 569: else
  7330                           ;app_led.c: 570: {
  7331                           ;app_led.c: 571: if(ct >= st || ct < et)
  7332                           
  7333                           ;app_led.c: 563: }
  7334                           
  7335  12CA  0020               	movlb	0	; select bank0
  7336  12CB  024B               	subwf	led_auto_process@ct+1,w
  7337  12CC  1D03               	skipz
  7338  12CD  2AD0               	goto	u6225
  7339  12CE  24AF  3191         	fcall	PL146	;call to abstracted procedure
  7340  12D0                     u6225:	
  7341  12D0  1803               	skipnc
  7342  12D1  2ADC               	goto	l6319
  7343  12D2  0021               	movlb	1	; select bank1
  7344  12D3  084D               	movf	(led_auto_process@et+1)^(0+128),w
  7345  12D4  0020               	movlb	0	; select bank0
  7346  12D5  024B               	subwf	led_auto_process@ct+1,w
  7347  12D6  1D03               	skipz
  7348  12D7  2ADA               	goto	u6235
  7349  12D8  24B4  3191         	fcall	PL152	;call to abstracted procedure
  7350  12DA                     u6235:	
  7351  12DA  1803               	skipnc
  7352  12DB  2B62               	goto	l6341
  7353  12DC                     l6319:	
  7354                           
  7355                           ;app_led.c: 572: {
  7356                           ;app_led.c: 573: duration = 1440u - st + et;
  7357  12DC  2489  3191         	fcall	PL76	;call to abstracted procedure
  7358  12DE  30A0               	movlw	160
  7359  12DF  07C4               	addwf	led_auto_process@duration^(0+128),f
  7360  12E0  3005               	movlw	5
  7361  12E1  3DC5               	addwfc	(led_auto_process@duration+1)^(0+128),f
  7362                           
  7363                           ;app_led.c: 574: if(ct >= st)
  7364  12E2  0850               	movf	(led_auto_process@st+1)^(0+128),w
  7365  12E3  0020               	movlb	0	; select bank0
  7366  12E4  024B               	subwf	led_auto_process@ct+1,w
  7367  12E5  1D03               	skipz
  7368  12E6  2AE9               	goto	u6245
  7369  12E7  24AF  3191         	fcall	PL146	;call to abstracted procedure
  7370  12E9                     u6245:	
  7371  12E9  1803               	btfsc	3,0
  7372  12EA  2AC0               	goto	l6311
  7373                           
  7374                           ;app_led.c: 578: else
  7375                           ;app_led.c: 579: {
  7376                           ;app_led.c: 580: dt = (1440u - st + ct) * 60ul + sec;
  7377  12EB  0021               	movlb	1	; select bank1
  7378  12EC  084F               	movf	led_auto_process@st^(0+128),w
  7379  12ED  0020               	movlb	0	; select bank0
  7380  12EE  024A               	subwf	led_auto_process@ct,w
  7381  12EF  00CD               	movwf	??_led_auto_process
  7382  12F0  0021               	movlb	1	; select bank1
  7383  12F1  0850               	movf	(led_auto_process@st+1)^(0+128),w
  7384  12F2  0020               	movlb	0	; select bank0
  7385  12F3  3B4B               	subwfb	led_auto_process@ct+1,w
  7386  12F4  00CE               	movwf	??_led_auto_process+1
  7387  12F5  084D               	movf	??_led_auto_process,w
  7388  12F6  3EA0               	addlw	160
  7389  12F7  00A2               	movwf	___lmul@multiplier
  7390  12F8  3005               	movlw	5
  7391  12F9  3D4E               	addwfc	??_led_auto_process+1,w
  7392  12FA                     L6:	
  7393  12FA  00A3               	movwf	___lmul@multiplier+1
  7394  12FB  303C               	movlw	60
  7395  12FC  01A4               	clrf	___lmul@multiplier+2
  7396  12FD  01A5               	clrf	___lmul@multiplier+3
  7397  12FE  00A6               	movwf	___lmul@multiplicand
  7398  12FF  01A7               	clrf	___lmul@multiplicand+1
  7399  1300  01A8               	clrf	___lmul@multiplicand+2
  7400  1301  01A9               	clrf	___lmul@multiplicand+3
  7401  1302  239E  3191         	fcall	___lmul
  7402  1304  0825               	movf	?___lmul+3,w
  7403  1305  0021               	movlb	1	; select bank1
  7404  1306  00CA               	movwf	(led_auto_process@dt+3)^(0+128)
  7405  1307  0020               	movlb	0	; select bank0
  7406  1308  0824               	movf	?___lmul+2,w
  7407  1309  0021               	movlb	1	; select bank1
  7408  130A  00C9               	movwf	(led_auto_process@dt+2)^(0+128)
  7409  130B  0020               	movlb	0	; select bank0
  7410  130C  0823               	movf	?___lmul+1,w
  7411  130D  0021               	movlb	1	; select bank1
  7412  130E  00C8               	movwf	(led_auto_process@dt+1)^(0+128)
  7413  130F  0020               	movlb	0	; select bank0
  7414  1310  0822               	movf	?___lmul,w
  7415  1311  0021               	movlb	1	; select bank1
  7416  1312  00C7               	movwf	led_auto_process@dt^(0+128)
  7417  1313  0020               	movlb	0	; select bank0
  7418  1314  084C               	movf	led_auto_process@sec,w
  7419  1315  0021               	movlb	1	; select bank1
  7420  1316  07C7               	addwf	led_auto_process@dt^(0+128),f
  7421  1317  3001               	movlw	1
  7422  1318  1803               	skipnc
  7423  1319  07C8               	addwf	(led_auto_process@dt+1)^(0+128),f
  7424  131A  1803               	skipnc
  7425  131B  07C9               	addwf	(led_auto_process@dt+2)^(0+128),f
  7426  131C  1803               	skipnc
  7427  131D  07CA               	addwf	(led_auto_process@dt+3)^(0+128),f
  7428                           
  7429                           ;app_led.c: 586: }
  7430                           ;app_led.c: 587: }
  7431                           ;app_led.c: 588: for(k = 0; k < 4; k++)
  7432  131E  01CE               	clrf	led_auto_process@k^(0+128)
  7433  131F                     l6335:	
  7434                           
  7435                           ;app_led.c: 589: {
  7436                           ;app_led.c: 590: target_bright[k] = led_calc_bright(val[i][k], val[j][k], duration, dt )
      +                          ;
  7437  131F  0846               	movf	led_auto_process@j^(0+128),w
  7438  1320  0020               	movlb	0	; select bank0
  7439  1321  00CD               	movwf	??_led_auto_process
  7440  1322  30A0               	movlw	(low (led_auto_process@val| 0))& (0+255)
  7441  1323  35CD               	lslf	??_led_auto_process,f
  7442  1324  35CD               	lslf	??_led_auto_process,f
  7443  1325  074D               	addwf	??_led_auto_process,w
  7444  1326  00CE               	movwf	??_led_auto_process+1
  7445  1327  0021               	movlb	1	; select bank1
  7446  1328  084E               	movf	led_auto_process@k^(0+128),w
  7447  1329  0020               	movlb	0	; select bank0
  7448  132A  074E               	addwf	??_led_auto_process+1,w
  7449  132B  00CF               	movwf	??_led_auto_process+2
  7450  132C  0086               	movwf	6
  7451  132D  0187               	clrf	7
  7452  132E  0801               	movf	1,w
  7453  132F  00BB               	movwf	led_calc_bright@ebrt
  7454  1330  0021               	movlb	1	; select bank1
  7455  1331  0845               	movf	(led_auto_process@duration+1)^(0+128),w
  7456  1332  0020               	movlb	0	; select bank0
  7457  1333  00BD               	movwf	led_calc_bright@duration+1
  7458  1334  0021               	movlb	1	; select bank1
  7459  1335  0844               	movf	led_auto_process@duration^(0+128),w
  7460  1336  0020               	movlb	0	; select bank0
  7461  1337  00BC               	movwf	led_calc_bright@duration
  7462  1338  0021               	movlb	1	; select bank1
  7463  1339  084A               	movf	(led_auto_process@dt+3)^(0+128),w
  7464  133A  0020               	movlb	0	; select bank0
  7465  133B  00C1               	movwf	led_calc_bright@dt+3
  7466  133C  0021               	movlb	1	; select bank1
  7467  133D  0849               	movf	(led_auto_process@dt+2)^(0+128),w
  7468  133E  0020               	movlb	0	; select bank0
  7469  133F  00C0               	movwf	led_calc_bright@dt+2
  7470  1340  0021               	movlb	1	; select bank1
  7471  1341  0848               	movf	(led_auto_process@dt+1)^(0+128),w
  7472  1342  0020               	movlb	0	; select bank0
  7473  1343  00BF               	movwf	led_calc_bright@dt+1
  7474  1344  0021               	movlb	1	; select bank1
  7475  1345  0847               	movf	led_auto_process@dt^(0+128),w
  7476  1346  0020               	movlb	0	; select bank0
  7477  1347  00BE               	movwf	led_calc_bright@dt
  7478  1348  0021               	movlb	1	; select bank1
  7479  1349  0853               	movf	led_auto_process@i^(0+128),w
  7480  134A  0020               	movlb	0	; select bank0
  7481  134B  00D0               	movwf	??_led_auto_process+3
  7482  134C  30A0               	movlw	(low (led_auto_process@val| 0))& (0+255)
  7483  134D  35D0               	lslf	??_led_auto_process+3,f
  7484  134E  35D0               	lslf	??_led_auto_process+3,f
  7485  134F  0750               	addwf	??_led_auto_process+3,w
  7486  1350  00D1               	movwf	??_led_auto_process+4
  7487  1351  0021               	movlb	1	; select bank1
  7488  1352  084E               	movf	led_auto_process@k^(0+128),w
  7489  1353  0020               	movlb	0	; select bank0
  7490  1354  0751               	addwf	??_led_auto_process+4,w
  7491  1355  00D2               	movwf	??_led_auto_process+5
  7492  1356  0086               	movwf	6
  7493  1357  0801               	movf	1,w
  7494  1358  23C3  3191         	fcall	_led_calc_bright
  7495  135A  0021               	movlb	1	; select bank1
  7496  135B  354E               	lslf	led_auto_process@k^(0+128),w
  7497  135C  247F  3191         	fcall	PL66	;call to abstracted procedure
  7498  135E  0ACE               	incf	led_auto_process@k^(0+128),f
  7499  135F  024E               	subwf	led_auto_process@k^(0+128),w
  7500  1360  1C03               	skipc
  7501  1361  2B1F               	goto	l6335
  7502  1362                     l6341:	
  7503  1362  0021               	movlb	1	; select bank1
  7504  1363  0AD3               	incf	led_auto_process@i^(0+128),f
  7505  1364  2A7F               	goto	l6343
  7506  1365                     __end_of_led_auto_process:	
  7507  1365                     __ptext18:	
  7508 ;; *************** function ___awmod *****************
  7509 ;; Defined at:
  7510 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\awmod.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  divisor         2    2[BANK0 ] int 
  7513 ;;  dividend        2    4[BANK0 ] int 
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;  sign            1    7[BANK0 ] unsigned char 
  7516 ;;  counter         1    6[BANK0 ] unsigned char 
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  2    2[BANK0 ] int 
  7519 ;; Registers used:
  7520 ;;		wreg, status,2, status,0
  7521 ;; Tracked objects:
  7522 ;;		On entry : 1F/0
  7523 ;;		On exit  : 1F/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7526 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7529 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7530 ;;Total ram usage:        6 bytes
  7531 ;; Hardware stack levels used:    1
  7532 ;; Hardware stack levels required when called:    9
  7533 ;; This function calls:
  7534 ;;		Nothing
  7535 ;; This function is called by:
  7536 ;;		_led_auto_process
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           
  7541                           ;psect for function ___awmod
  7542  1365                     ___awmod:	
  7543                           
  7544                           ;incstack = 0
  7545                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7546  1365  01A7               	clrf	___awmod@sign
  7547  1366  1FA5               	btfss	___awmod@dividend+1,7
  7548  1367  2B6F               	goto	l5963
  7549  1368  09A4               	comf	___awmod@dividend,f
  7550  1369  09A5               	comf	___awmod@dividend+1,f
  7551  136A  0AA4               	incf	___awmod@dividend,f
  7552  136B  1903               	skipnz
  7553  136C  0AA5               	incf	___awmod@dividend+1,f
  7554  136D  01A7               	clrf	___awmod@sign
  7555  136E  0AA7               	incf	___awmod@sign,f
  7556  136F                     l5963:	
  7557  136F  1FA3               	btfss	___awmod@divisor+1,7
  7558  1370  2B76               	goto	l5967
  7559  1371  09A2               	comf	___awmod@divisor,f
  7560  1372  09A3               	comf	___awmod@divisor+1,f
  7561  1373  0AA2               	incf	___awmod@divisor,f
  7562  1374  1903               	skipnz
  7563  1375  0AA3               	incf	___awmod@divisor+1,f
  7564  1376                     l5967:	
  7565  1376  0822               	movf	___awmod@divisor,w
  7566  1377  0423               	iorwf	___awmod@divisor+1,w
  7567  1378  1903               	btfsc	3,2
  7568  1379  2B91               	goto	l5983
  7569  137A  01A6               	clrf	___awmod@counter
  7570  137B                     L10:	
  7571  137B  0AA6               	incf	___awmod@counter,f
  7572  137C  1BA3               	btfsc	___awmod@divisor+1,7
  7573  137D  2B81               	goto	l5975
  7574  137E  35A2               	lslf	___awmod@divisor,f
  7575  137F  0DA3               	rlf	___awmod@divisor+1,f
  7576  1380  2B7B               	goto	L10
  7577  1381                     l5975:	
  7578  1381  0823               	movf	___awmod@divisor+1,w
  7579  1382  0225               	subwf	___awmod@dividend+1,w
  7580  1383  1D03               	skipz
  7581  1384  2B87               	goto	u5545
  7582  1385  0822               	movf	___awmod@divisor,w
  7583  1386  0224               	subwf	___awmod@dividend,w
  7584  1387                     u5545:	
  7585  1387  1C03               	skipc
  7586  1388  2B8D               	goto	l5979
  7587  1389  0822               	movf	___awmod@divisor,w
  7588  138A  02A4               	subwf	___awmod@dividend,f
  7589  138B  0823               	movf	___awmod@divisor+1,w
  7590  138C  3BA5               	subwfb	___awmod@dividend+1,f
  7591  138D                     l5979:	
  7592  138D  36A3               	lsrf	___awmod@divisor+1,f
  7593  138E  0CA2               	rrf	___awmod@divisor,f
  7594  138F  0BA6               	decfsz	___awmod@counter,f
  7595  1390  2B81               	goto	l5975
  7596  1391                     l5983:	
  7597  1391  0827               	movf	___awmod@sign,w
  7598  1392  1903               	btfsc	3,2
  7599  1393  2B99               	goto	l5987
  7600  1394  09A4               	comf	___awmod@dividend,f
  7601  1395  09A5               	comf	___awmod@dividend+1,f
  7602  1396  0AA4               	incf	___awmod@dividend,f
  7603  1397  1903               	skipnz
  7604  1398  0AA5               	incf	___awmod@dividend+1,f
  7605  1399                     l5987:	
  7606  1399  0825               	movf	___awmod@dividend+1,w
  7607  139A  00A3               	movwf	?___awmod+1
  7608  139B  0824               	movf	___awmod@dividend,w
  7609  139C  00A2               	movwf	?___awmod
  7610  139D  0008               	return
  7611  139E                     __end_of___awmod:	
  7612  139E                     __ptext16:	
  7613 ;; *************** function ___lmul *****************
  7614 ;; Defined at:
  7615 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul32.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  multiplier      4    2[BANK0 ] unsigned long 
  7618 ;;  multiplicand    4    6[BANK0 ] unsigned long 
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;  product         4   10[BANK0 ] unsigned long 
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  4    2[BANK0 ] unsigned long 
  7623 ;; Registers used:
  7624 ;;		wreg, status,2, status,0
  7625 ;; Tracked objects:
  7626 ;;		On entry : 1F/0
  7627 ;;		On exit  : 1F/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7630 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7631 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7634 ;;Total ram usage:       12 bytes
  7635 ;; Hardware stack levels used:    1
  7636 ;; Hardware stack levels required when called:    9
  7637 ;; This function calls:
  7638 ;;		Nothing
  7639 ;; This function is called by:
  7640 ;;		_led_calc_bright
  7641 ;;		_led_auto_process
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           
  7646                           ;psect for function ___lmul
  7647  139E                     ___lmul:	
  7648                           
  7649                           ;incstack = 0
  7650                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7651  139E  01AA               	clrf	___lmul@product
  7652  139F  01AB               	clrf	___lmul@product+1
  7653  13A0  01AC               	clrf	___lmul@product+2
  7654  13A1  01AD               	clrf	___lmul@product+3
  7655  13A2                     l1234:	
  7656  13A2  1C22               	btfss	___lmul@multiplier,0
  7657  13A3  2BAC               	goto	l5861
  7658  13A4  0826               	movf	___lmul@multiplicand,w
  7659  13A5  07AA               	addwf	___lmul@product,f
  7660  13A6  0827               	movf	___lmul@multiplicand+1,w
  7661  13A7  3DAB               	addwfc	___lmul@product+1,f
  7662  13A8  0828               	movf	___lmul@multiplicand+2,w
  7663  13A9  3DAC               	addwfc	___lmul@product+2,f
  7664  13AA  0829               	movf	___lmul@multiplicand+3,w
  7665  13AB  3DAD               	addwfc	___lmul@product+3,f
  7666  13AC                     l5861:	
  7667  13AC  35A6               	lslf	___lmul@multiplicand,f
  7668  13AD  0DA7               	rlf	___lmul@multiplicand+1,f
  7669  13AE  0DA8               	rlf	___lmul@multiplicand+2,f
  7670  13AF  0DA9               	rlf	___lmul@multiplicand+3,f
  7671  13B0  36A5               	lsrf	___lmul@multiplier+3,f
  7672  13B1  0CA4               	rrf	___lmul@multiplier+2,f
  7673  13B2  0CA3               	rrf	___lmul@multiplier+1,f
  7674  13B3  0CA2               	rrf	___lmul@multiplier,f
  7675  13B4  0825               	movf	___lmul@multiplier+3,w
  7676  13B5  0424               	iorwf	___lmul@multiplier+2,w
  7677  13B6  0423               	iorwf	___lmul@multiplier+1,w
  7678  13B7  0422               	iorwf	___lmul@multiplier,w
  7679  13B8  1D03               	skipz
  7680  13B9  2BA2               	goto	l1234
  7681  13BA  082D               	movf	___lmul@product+3,w
  7682  13BB  00A5               	movwf	?___lmul+3
  7683  13BC  082C               	movf	___lmul@product+2,w
  7684  13BD  00A4               	movwf	?___lmul+2
  7685  13BE  082B               	movf	___lmul@product+1,w
  7686  13BF  00A3               	movwf	?___lmul+1
  7687  13C0  082A               	movf	___lmul@product,w
  7688  13C1  00A2               	movwf	?___lmul
  7689  13C2  0008               	return
  7690  13C3                     __end_of___lmul:	
  7691  13C3                     __ptext15:	
  7692 ;; *************** function _led_calc_bright *****************
  7693 ;; Defined at:
  7694 ;;		line 460 in file "src/app_led.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;  sbrt            1    wreg     unsigned char 
  7697 ;;  ebrt            1   27[BANK0 ] unsigned char 
  7698 ;;  duration        2   28[BANK0 ] unsigned int 
  7699 ;;  dt              4   30[BANK0 ] unsigned long 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  sbrt            1   41[BANK0 ] unsigned char 
  7702 ;;  period          2   38[BANK0 ] unsigned int 
  7703 ;;  vs              2   36[BANK0 ] unsigned int 
  7704 ;;  result          2   34[BANK0 ] unsigned int 
  7705 ;;  dbrt            1   40[BANK0 ] unsigned char 
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  2   27[BANK0 ] unsigned int 
  7708 ;; Registers used:
  7709 ;;		wreg, status,2, status,0, pclath, cstack
  7710 ;; Tracked objects:
  7711 ;;		On entry : 1F/0
  7712 ;;		On exit  : 1F/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7715 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;Total ram usage:       15 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; Hardware stack levels required when called:   10
  7722 ;; This function calls:
  7723 ;;		___lldiv
  7724 ;;		___lmul
  7725 ;;		___wmul
  7726 ;; This function is called by:
  7727 ;;		_led_auto_process
  7728 ;;		_led_pro_process
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732                           
  7733                           ;psect for function _led_calc_bright
  7734  13C3                     _led_calc_bright:	
  7735                           
  7736                           ;incstack = 0
  7737                           ; Regs used in _led_calc_bright: [wreg+status,2+status,0+pclath+cstack]
  7738                           ;led_calc_bright@sbrt stored from wreg
  7739  13C3  00C9               	movwf	led_calc_bright@sbrt
  7740                           
  7741                           ;app_led.c: 462: uint8_t dbrt;
  7742                           ;app_led.c: 463: uint16_t result;
  7743                           ;app_led.c: 464: uint16_t vs = sbrt*10u;
  7744  13C4  00A2               	movwf	___wmul@multiplier
  7745  13C5  300A               	movlw	10
  7746  13C6  01A3               	clrf	___wmul@multiplier+1
  7747  13C7  00A4               	movwf	___wmul@multiplicand
  7748  13C8  01A5               	clrf	___wmul@multiplicand+1
  7749  13C9  3196  26BF  3191   	fcall	___wmul
  7750  13CC  0823               	movf	?___wmul+1,w
  7751  13CD  00C5               	movwf	led_calc_bright@vs+1
  7752  13CE  0822               	movf	?___wmul,w
  7753  13CF  00C4               	movwf	led_calc_bright@vs
  7754                           
  7755                           ;app_led.c: 465: uint16_t period = duration*6u;
  7756  13D0  083D               	movf	led_calc_bright@duration+1,w
  7757  13D1  00A3               	movwf	___wmul@multiplier+1
  7758  13D2  083C               	movf	led_calc_bright@duration,w
  7759  13D3  00A2               	movwf	___wmul@multiplier
  7760  13D4  3006               	movlw	6
  7761  13D5  00A4               	movwf	___wmul@multiplicand
  7762  13D6  01A5               	clrf	___wmul@multiplicand+1
  7763  13D7  3196  26BF  3191   	fcall	___wmul
  7764  13DA  0823               	movf	?___wmul+1,w
  7765  13DB  00C7               	movwf	led_calc_bright@period+1
  7766  13DC  0822               	movf	?___wmul,w
  7767  13DD  00C6               	movwf	led_calc_bright@period
  7768                           
  7769                           ;app_led.c: 466: if(sbrt <= ebrt)
  7770  13DE  0849               	movf	led_calc_bright@sbrt,w
  7771  13DF  023B               	subwf	led_calc_bright@ebrt,w
  7772  13E0  1C03               	skipc
  7773  13E1  2BF6               	goto	l5933
  7774                           
  7775                           ;app_led.c: 467: {
  7776                           ;app_led.c: 468: dbrt = ebrt - sbrt;
  7777  13E2  0849               	movf	led_calc_bright@sbrt,w
  7778  13E3  023B               	subwf	led_calc_bright@ebrt,w
  7779  13E4  00C8               	movwf	led_calc_bright@dbrt
  7780                           
  7781                           ;app_led.c: 469: result = vs + dbrt*dt/period;
  7782  13E5  246B  3191         	fcall	PL28	;call to abstracted procedure
  7783  13E7  239E  3191         	fcall	___lmul
  7784  13E9  2493  3191         	fcall	PL88	;call to abstracted procedure
  7785  13EB  240D  3191         	fcall	___lldiv
  7786  13ED  082F               	movf	?___lldiv+1,w
  7787  13EE  00C3               	movwf	led_calc_bright@result+1
  7788  13EF  082E               	movf	?___lldiv,w
  7789  13F0  00C2               	movwf	led_calc_bright@result
  7790  13F1  0844               	movf	led_calc_bright@vs,w
  7791  13F2  07C2               	addwf	led_calc_bright@result,f
  7792  13F3  0845               	movf	led_calc_bright@vs+1,w
  7793  13F4  3DC3               	addwfc	led_calc_bright@result+1,f
  7794                           
  7795                           ;app_led.c: 470: }
  7796  13F5  2C08               	goto	l5939
  7797  13F6                     l5933:	
  7798                           
  7799                           ;app_led.c: 471: else
  7800                           ;app_led.c: 472: {
  7801                           ;app_led.c: 473: dbrt = sbrt - ebrt;
  7802  13F6  083B               	movf	led_calc_bright@ebrt,w
  7803  13F7  0249               	subwf	led_calc_bright@sbrt,w
  7804  13F8  00C8               	movwf	led_calc_bright@dbrt
  7805                           
  7806                           ;app_led.c: 474: result = vs - dbrt*dt/period;
  7807  13F9  0845               	movf	led_calc_bright@vs+1,w
  7808  13FA  00C3               	movwf	led_calc_bright@result+1
  7809  13FB  0844               	movf	led_calc_bright@vs,w
  7810  13FC  00C2               	movwf	led_calc_bright@result
  7811  13FD  246B  3191         	fcall	PL28	;call to abstracted procedure
  7812  13FF  239E  3191         	fcall	___lmul
  7813  1401  2493  3191         	fcall	PL88	;call to abstracted procedure
  7814  1403  240D               	fcall	___lldiv
  7815  1404  082E               	movf	?___lldiv,w
  7816  1405  02C2               	subwf	led_calc_bright@result,f
  7817  1406  082F               	movf	?___lldiv+1,w
  7818  1407  3BC3               	subwfb	led_calc_bright@result+1,f
  7819  1408                     l5939:	
  7820                           
  7821                           ;app_led.c: 475: }
  7822                           ;app_led.c: 476: return result;
  7823  1408  0843               	movf	led_calc_bright@result+1,w
  7824  1409  00BC               	movwf	?_led_calc_bright+1
  7825  140A  0842               	movf	led_calc_bright@result,w
  7826  140B  00BB               	movwf	?_led_calc_bright
  7827  140C  0008               	return
  7828  140D                     __end_of_led_calc_bright:	
  7829  140D                     __ptext17:	
  7830 ;; *************** function ___lldiv *****************
  7831 ;; Defined at:
  7832 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lldiv.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;  divisor         4   14[BANK0 ] unsigned long 
  7835 ;;  dividend        4   18[BANK0 ] unsigned long 
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;  quotient        4   22[BANK0 ] unsigned long 
  7838 ;;  counter         1   26[BANK0 ] unsigned char 
  7839 ;; Return value:  Size  Location     Type
  7840 ;;                  4   14[BANK0 ] unsigned long 
  7841 ;; Registers used:
  7842 ;;		wreg, status,2, status,0
  7843 ;; Tracked objects:
  7844 ;;		On entry : 1F/0
  7845 ;;		On exit  : 1F/0
  7846 ;;		Unchanged: 0/0
  7847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7848 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7849 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;Total ram usage:       13 bytes
  7853 ;; Hardware stack levels used:    1
  7854 ;; Hardware stack levels required when called:    9
  7855 ;; This function calls:
  7856 ;;		Nothing
  7857 ;; This function is called by:
  7858 ;;		_led_calc_bright
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           
  7863                           ;psect for function ___lldiv
  7864  140D                     ___lldiv:	
  7865                           
  7866                           ;incstack = 0
  7867                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7868  140D  01B6               	clrf	___lldiv@quotient
  7869  140E  01B7               	clrf	___lldiv@quotient+1
  7870  140F  01B8               	clrf	___lldiv@quotient+2
  7871  1410  01B9               	clrf	___lldiv@quotient+3
  7872  1411  0831               	movf	___lldiv@divisor+3,w
  7873  1412  0430               	iorwf	___lldiv@divisor+2,w
  7874  1413  042F               	iorwf	___lldiv@divisor+1,w
  7875  1414  042E               	iorwf	___lldiv@divisor,w
  7876  1415  1903               	skipnz
  7877  1416  2C43               	goto	l5891
  7878  1417  01BA               	clrf	___lldiv@counter
  7879  1418                     L9:	
  7880  1418  0ABA               	incf	___lldiv@counter,f
  7881  1419  1BB1               	btfsc	___lldiv@divisor+3,7
  7882  141A  2C20               	goto	l5879
  7883  141B  35AE               	lslf	___lldiv@divisor,f
  7884  141C  0DAF               	rlf	___lldiv@divisor+1,f
  7885  141D  0DB0               	rlf	___lldiv@divisor+2,f
  7886  141E  0DB1               	rlf	___lldiv@divisor+3,f
  7887  141F  2C18               	goto	L9
  7888  1420                     l5879:	
  7889  1420  35B6               	lslf	___lldiv@quotient,f
  7890  1421  0DB7               	rlf	___lldiv@quotient+1,f
  7891  1422  0DB8               	rlf	___lldiv@quotient+2,f
  7892  1423  0DB9               	rlf	___lldiv@quotient+3,f
  7893  1424  0831               	movf	___lldiv@divisor+3,w
  7894  1425  0235               	subwf	___lldiv@dividend+3,w
  7895  1426  1D03               	skipz
  7896  1427  2C32               	goto	u5445
  7897  1428  0830               	movf	___lldiv@divisor+2,w
  7898  1429  0234               	subwf	___lldiv@dividend+2,w
  7899  142A  1D03               	skipz
  7900  142B  2C32               	goto	u5445
  7901  142C  082F               	movf	___lldiv@divisor+1,w
  7902  142D  0233               	subwf	___lldiv@dividend+1,w
  7903  142E  1D03               	skipz
  7904  142F  2C32               	goto	u5445
  7905  1430  082E               	movf	___lldiv@divisor,w
  7906  1431  0232               	subwf	___lldiv@dividend,w
  7907  1432                     u5445:	
  7908  1432  1C03               	skipc
  7909  1433  2C3D               	goto	l5887
  7910  1434  082E               	movf	___lldiv@divisor,w
  7911  1435  02B2               	subwf	___lldiv@dividend,f
  7912  1436  082F               	movf	___lldiv@divisor+1,w
  7913  1437  3BB3               	subwfb	___lldiv@dividend+1,f
  7914  1438  0830               	movf	___lldiv@divisor+2,w
  7915  1439  3BB4               	subwfb	___lldiv@dividend+2,f
  7916  143A  0831               	movf	___lldiv@divisor+3,w
  7917  143B  3BB5               	subwfb	___lldiv@dividend+3,f
  7918  143C  1436               	bsf	___lldiv@quotient,0
  7919  143D                     l5887:	
  7920  143D  36B1               	lsrf	___lldiv@divisor+3,f
  7921  143E  0CB0               	rrf	___lldiv@divisor+2,f
  7922  143F  0CAF               	rrf	___lldiv@divisor+1,f
  7923  1440  0CAE               	rrf	___lldiv@divisor,f
  7924  1441  0BBA               	decfsz	___lldiv@counter,f
  7925  1442  2C20               	goto	l5879
  7926  1443                     l5891:	
  7927  1443  0839               	movf	___lldiv@quotient+3,w
  7928  1444  00B1               	movwf	?___lldiv+3
  7929  1445  0838               	movf	___lldiv@quotient+2,w
  7930  1446  00B0               	movwf	?___lldiv+2
  7931  1447  0837               	movf	___lldiv@quotient+1,w
  7932  1448  00AF               	movwf	?___lldiv+1
  7933  1449  0836               	movf	___lldiv@quotient,w
  7934  144A  00AE               	movwf	?___lldiv
  7935  144B  0008               	return
  7936  144C                     __end_of___lldiv:	
  7937  144C                     PL2:	
  7938  144C  3EA0               	addlw	(low (led_auto_process@val| 0))& (0+255)
  7939  144D  0086               	movwf	6
  7940  144E  0187               	clrf	7
  7941  144F  0853               	movf	led_auto_process@i^(0+128),w
  7942  1450  0020               	movlb	0	; select bank0
  7943  1451  00CD               	movwf	??_led_auto_process
  7944  1452  01CE               	clrf	??_led_auto_process+1
  7945  1453  0021               	movlb	1	; select bank1
  7946  1454  0751               	addwf	led_auto_process@p^(0+128),w
  7947  1455  0020               	movlb	0	; select bank0
  7948  1456  00CF               	movwf	??_led_auto_process+2
  7949  1457  084E               	movf	??_led_auto_process+1,w
  7950  1458  0021               	movlb	1	; select bank1
  7951  1459  3D52               	addwfc	(led_auto_process@p+1)^(0+128),w
  7952  145A  0020               	movlb	0	; select bank0
  7953  145B  00D0               	movwf	??_led_auto_process+3
  7954  145C  084F               	movf	??_led_auto_process+2,w
  7955  145D  0084               	movwf	4
  7956  145E  0850               	movf	??_led_auto_process+3,w
  7957  145F  0085               	movwf	5
  7958  1460  0008               	return
  7959  1461                     __end_ofPL2:	
  7960  1461                     PL22:	
  7961  1461  0801               	movf	1,w
  7962  1462  0020               	movlb	0	; select bank0
  7963  1463  00CD               	movwf	??_led_auto_process
  7964  1464  01CE               	clrf	??_led_auto_process+1
  7965  1465  0021               	movlb	1	; select bank1
  7966  1466  0851               	movf	led_auto_process@p^(0+128),w
  7967  1467  0086               	movwf	6
  7968  1468  0852               	movf	(led_auto_process@p+1)^(0+128),w
  7969  1469  0087               	movwf	7
  7970  146A  0008               	return
  7971  146B                     __end_ofPL22:	
  7972  146B                     PL28:	
  7973  146B  0846               	movf	led_calc_bright@period,w
  7974  146C  00AE               	movwf	___lldiv@divisor
  7975  146D  0847               	movf	led_calc_bright@period+1,w
  7976  146E  00AF               	movwf	___lldiv@divisor+1
  7977  146F  01B0               	clrf	___lldiv@divisor+2
  7978  1470  01B1               	clrf	___lldiv@divisor+3
  7979  1471  0848               	movf	led_calc_bright@dbrt,w
  7980  1472  00A2               	movwf	___lmul@multiplier
  7981  1473  01A3               	clrf	___lmul@multiplier+1
  7982  1474  01A4               	clrf	___lmul@multiplier+2
  7983  1475  01A5               	clrf	___lmul@multiplier+3
  7984  1476  0841               	movf	led_calc_bright@dt+3,w
  7985  1477  00A9               	movwf	___lmul@multiplicand+3
  7986  1478  0840               	movf	led_calc_bright@dt+2,w
  7987  1479  00A8               	movwf	___lmul@multiplicand+2
  7988  147A  083F               	movf	led_calc_bright@dt+1,w
  7989  147B  00A7               	movwf	___lmul@multiplicand+1
  7990  147C  083E               	movf	led_calc_bright@dt,w
  7991  147D  00A6               	movwf	___lmul@multiplicand
  7992  147E  0008               	return
  7993  147F                     __end_ofPL28:	
  7994  147F                     PL66:	
  7995  147F  3E55               	addlw	(low (_target_bright| 0))& (0+255)
  7996  1480  0086               	movwf	6
  7997  1481  0187               	clrf	7
  7998  1482  0020               	movlb	0	; select bank0
  7999  1483  083B               	movf	?_led_calc_bright,w
  8000  1484  3FC0               	movwi [0]fsr1
  8001  1485  083C               	movf	?_led_calc_bright+1,w
  8002  1486  3FC1               	movwi [1]fsr1
  8003  1487  0021               	movlb	1	; select bank1
  8004  1488  3404               	retlw	4
  8005  1489                     __end_ofPL66:	
  8006  1489                     PL76:	
  8007  1489  0021               	movlb	1	; select bank1
  8008  148A  084D               	movf	(led_auto_process@et+1)^(0+128),w
  8009  148B  00C5               	movwf	(led_auto_process@duration+1)^(0+128)
  8010  148C  084C               	movf	led_auto_process@et^(0+128),w
  8011  148D  00C4               	movwf	led_auto_process@duration^(0+128)
  8012  148E  084F               	movf	led_auto_process@st^(0+128),w
  8013  148F  02C4               	subwf	led_auto_process@duration^(0+128),f
  8014  1490  0850               	movf	(led_auto_process@st+1)^(0+128),w
  8015  1491  3BC5               	subwfb	(led_auto_process@duration+1)^(0+128),f
  8016  1492  0008               	return
  8017  1493                     __end_ofPL76:	
  8018  1493                     PL88:	
  8019  1493  0825               	movf	?___lmul+3,w
  8020  1494  00B5               	movwf	___lldiv@dividend+3
  8021  1495  0824               	movf	?___lmul+2,w
  8022  1496  00B4               	movwf	___lldiv@dividend+2
  8023  1497  0823               	movf	?___lmul+1,w
  8024  1498  00B3               	movwf	___lldiv@dividend+1
  8025  1499  0822               	movf	?___lmul,w
  8026  149A  00B2               	movwf	___lldiv@dividend
  8027  149B  0008               	return
  8028  149C                     __end_ofPL88:	
  8029  149C                     PL110:	
  8030  149C  0851               	movf	led_auto_process@p^(0+128),w
  8031  149D  0086               	movwf	6
  8032  149E  0852               	movf	(led_auto_process@p+1)^(0+128),w
  8033  149F  0087               	movwf	7
  8034  14A0  3150               	addfsr 1,16
  8035  14A1  0801               	movf	1,w
  8036  14A2  0008               	return
  8037  14A3                     __end_ofPL110:	
  8038  14A3                     PL124:	
  8039  14A3  3104               	addfsr 0,4
  8040  14A4  0800               	movf	0,w
  8041  14A5  0081               	movwf	1
  8042  14A6  0021               	movlb	1	; select bank1
  8043  14A7  0853               	movf	led_auto_process@i^(0+128),w
  8044  14A8  0008               	return
  8045  14A9                     __end_ofPL124:	
  8046  14A9                     PL140:	
  8047  14A9  310C               	addfsr 0,12
  8048  14AA  0800               	movf	0,w
  8049  14AB  0081               	movwf	1
  8050  14AC  0021               	movlb	1	; select bank1
  8051  14AD  0853               	movf	led_auto_process@i^(0+128),w
  8052  14AE  0008               	return
  8053  14AF                     __end_ofPL140:	
  8054  14AF                     PL146:	
  8055  14AF  0021               	movlb	1	; select bank1
  8056  14B0  084F               	movf	led_auto_process@st^(0+128),w
  8057  14B1  0020               	movlb	0	; select bank0
  8058  14B2  024A               	subwf	led_auto_process@ct,w
  8059  14B3  0008               	return
  8060  14B4                     __end_ofPL146:	
  8061  14B4                     PL152:	
  8062  14B4  0021               	movlb	1	; select bank1
  8063  14B5  084C               	movf	led_auto_process@et^(0+128),w
  8064  14B6  0020               	movlb	0	; select bank0
  8065  14B7  024A               	subwf	led_auto_process@ct,w
  8066  14B8  0008               	return
  8067  14B9                     __end_ofPL152:	
  8068                           
  8069                           	psect	text20
  8070  0430                     __ptext20:	
  8071 ;; *************** function _led_para_init *****************
  8072 ;; Defined at:
  8073 ;;		line 237 in file "src/app_led.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;		None
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;  i               1   35[BANK0 ] unsigned char 
  8078 ;;  j               1   34[BANK0 ] unsigned char 
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 1F/1
  8085 ;;		On exit  : 1D/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8090 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8091 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8092 ;;Total ram usage:       12 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:   11
  8095 ;; This function calls:
  8096 ;;		___wmul
  8097 ;;		_eeprom_read_buffer
  8098 ;;		_led_indicate_ble
  8099 ;;		_led_indicate_day
  8100 ;;		_led_indicate_night
  8101 ;;		_led_indicate_off
  8102 ;;		_led_para_default
  8103 ;;		_led_turnoff
  8104 ;;		_led_turnoff_ramp
  8105 ;;		_led_turnon_ramp
  8106 ;;		_led_update_day_bright
  8107 ;;		_led_update_night_bright
  8108 ;; This function is called by:
  8109 ;;		_led_init
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113                           
  8114                           ;psect for function _led_para_init
  8115  0430                     _led_para_init:	
  8116  0430                     l6101:	
  8117                           ;incstack = 0
  8118                           ; Regs used in _led_para_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8119                           
  8120                           
  8121                           ;app_led.c: 239: uint8_t i, j;
  8122                           ;app_led.c: 240: eeprom_read_buffer(0x10, (uint8_t *) & m_led_para, sizeof(m_led_para));
  8123  0430  307F               	movlw	127
  8124  0431  0020               	movlb	0	; select bank0
  8125  0432  00A3               	movwf	eeprom_read_buffer@pbuf
  8126  0433  3023               	movlw	35
  8127  0434  00A4               	movwf	eeprom_read_buffer@pbuf+1
  8128  0435  3071               	movlw	113
  8129  0436  00A5               	movwf	eeprom_read_buffer@len
  8130  0437  3010               	movlw	16
  8131  0438  260E  3184         	fcall	_eeprom_read_buffer
  8132                           
  8133                           ;app_led.c: 241: if(m_led_para.save_flag != 0x55)
  8134  043A  2751  3184         	fcall	PL144	;call to abstracted procedure
  8135  043C  0601               	xorwf	1,w
  8136  043D  1903               	btfsc	3,2
  8137  043E  2C42               	goto	l6107
  8138                           
  8139                           ;app_led.c: 242: {
  8140                           ;app_led.c: 243: led_para_default();
  8141  043F  3190  20C6  3184   	fcall	_led_para_default
  8142  0442                     l6107:	
  8143                           
  8144                           ;app_led.c: 244: }
  8145                           ;app_led.c: 248: if(m_led_para.last_mode != 1 && m_led_para.last_mode != 2)
  8146  0442  307F               	movlw	127
  8147  0443  0086               	movwf	6
  8148  0444  3023               	movlw	35
  8149  0445  0087               	movwf	7
  8150  0446  3141               	addfsr 1,1
  8151  0447  0C01               	rrf	1,w
  8152  0448  0C89               	rrf	9,f
  8153  0449  3903               	andlw	3
  8154  044A  3A01               	xorlw	1
  8155  044B  2747  3184         	fcall	PL118	;call to abstracted procedure
  8156  044D  1903               	skipnz
  8157  044E  2C59               	goto	L11
  8158                           
  8159                           ;app_led.c: 249: {
  8160                           ;app_led.c: 250: m_led_para.last_mode = 1;
  8161  044F  318F  2797  3184   	fcall	PL78	;call to abstracted procedure
  8162  0452  1903               	skipnz
  8163  0453  2C59               	goto	L11
  8164  0454  3191  21C1  3184   	fcall	PL142	;call to abstracted procedure
  8165                           
  8166                           ;app_led.c: 251: }
  8167                           ;app_led.c: 252: if(m_led_para.all_bright > 1000)
  8168  0457  2747  3184         	fcall	PL118	;call to abstracted procedure
  8169  0459                     L11:	
  8170  0459  3142               	addfsr 1,2
  8171  045A  2739  3184         	fcall	PL104	;call to abstracted procedure
  8172  045C  1903               	skipnz
  8173  045D  0238               	subwf	??_led_para_init,w
  8174  045E  1C03               	skipc
  8175  045F  2C65               	goto	l598
  8176                           
  8177                           ;app_led.c: 253: {
  8178                           ;app_led.c: 254: m_led_para.all_bright = 1000;
  8179  0460  2725               	fcall	PL86	;call to abstracted procedure
  8180  0461  318F  2785  3184   	fcall	PL32	;call to abstracted procedure
  8181  0464  274C               	fcall	PL120	;call to abstracted procedure
  8182  0465                     l598:	
  8183                           
  8184                           ;app_led.c: 255: }
  8185                           ;app_led.c: 256: if(m_led_para.all_bright < 10)
  8186  0465  318F  2785  3184   	fcall	PL32	;call to abstracted procedure
  8187  0468  272A  3184         	fcall	PL98	;call to abstracted procedure
  8188  046A  1903               	skipnz
  8189  046B  0238               	subwf	??_led_para_init,w
  8190  046C  1803               	skipnc
  8191  046D  2C73               	goto	l599
  8192                           
  8193                           ;app_led.c: 257: {
  8194                           ;app_led.c: 258: m_led_para.all_bright = 10;
  8195  046E  2731  3184         	fcall	PL100	;call to abstracted procedure
  8196  0470  3142               	addfsr 1,2
  8197  0471  274C  3184         	fcall	PL120	;call to abstracted procedure
  8198  0473                     l599:	
  8199                           
  8200                           ;app_led.c: 259: }
  8201                           ;app_led.c: 260: if(m_led_para.blue_bright > 1000)
  8202  0473  26D5  3184         	fcall	PL26	;call to abstracted procedure
  8203  0475  2739  3184         	fcall	PL104	;call to abstracted procedure
  8204  0477  1903               	skipnz
  8205  0478  0238               	subwf	??_led_para_init,w
  8206  0479  1C03               	skipc
  8207  047A  2C81               	goto	l600
  8208                           
  8209                           ;app_led.c: 261: {
  8210                           ;app_led.c: 262: m_led_para.blue_bright = 1000;
  8211  047B  2725  3184         	fcall	PL86	;call to abstracted procedure
  8212  047D  26D5  3184         	fcall	PL26	;call to abstracted procedure
  8213  047F  274C  3184         	fcall	PL120	;call to abstracted procedure
  8214  0481                     l600:	
  8215                           
  8216                           ;app_led.c: 263: }
  8217                           ;app_led.c: 264: if(m_led_para.blue_bright < 10)
  8218  0481  26D5  3184         	fcall	PL26	;call to abstracted procedure
  8219  0483  272A  3184         	fcall	PL98	;call to abstracted procedure
  8220  0485  1903               	skipnz
  8221  0486  0238               	subwf	??_led_para_init,w
  8222  0487  1803               	skipnc
  8223  0488  2C8E               	goto	l6123
  8224                           
  8225                           ;app_led.c: 265: {
  8226                           ;app_led.c: 266: m_led_para.blue_bright = 10;
  8227  0489  2731  3184         	fcall	PL100	;call to abstracted procedure
  8228  048B  3144               	addfsr 1,4
  8229  048C  274C  3184         	fcall	PL120	;call to abstracted procedure
  8230  048E                     l6123:	
  8231                           
  8232                           ;app_led.c: 267: }
  8233                           ;app_led.c: 270: if(m_led_para.ble_para.mMode > 2)
  8234  048E  26AC  3184         	fcall	PL10	;call to abstracted procedure
  8235  0490  3A03               	xorlw	3
  8236                           
  8237                           ;app_led.c: 271: {
  8238                           ;app_led.c: 272: m_led_para.ble_para.mMode = 0;
  8239  0491  307F               	movlw	127
  8240  0492  0086               	movwf	6
  8241  0493  3023               	movlw	35
  8242  0494  0087               	movwf	7
  8243  0495  1D03               	skipz
  8244  0496  2C9C               	goto	L12
  8245  0497  30FC               	movlw	-4
  8246  0498  3146               	addfsr 1,6
  8247  0499  0581               	andwf	1,f
  8248                           
  8249                           ;app_led.c: 273: }
  8250                           ;app_led.c: 276: m_led_para.ble_para.manual_para.mRsv = 0;
  8251  049A  2747  3184         	fcall	PL118	;call to abstracted procedure
  8252  049C                     L12:	
  8253  049C  3001               	movlw	-255
  8254  049D  3147               	addfsr 1,7
  8255  049E  0581               	andwf	1,f
  8256                           
  8257                           ;app_led.c: 277: for(i = 0; i < 4; i++)
  8258  049F  01C3               	clrf	led_para_init@i
  8259  04A0                     l6133:	
  8260                           
  8261                           ;app_led.c: 278: {
  8262                           ;app_led.c: 279: if(m_led_para.ble_para.manual_para.mBright[i] > 1000)
  8263  04A0  0843               	movf	led_para_init@i,w
  8264  04A1  00B8               	movwf	??_led_para_init
  8265  04A2  3088               	movlw	136
  8266  04A3  01B9               	clrf	??_led_para_init+1
  8267  04A4  35B8               	lslf	??_led_para_init,f
  8268  04A5  0DB9               	rlf	??_led_para_init+1,f
  8269  04A6  00BA               	movwf	??_led_para_init+2
  8270  04A7  26F1  3184         	fcall	PL52	;call to abstracted procedure
  8271  04A9  3F40               	moviw [0]fsr1
  8272  04AA  00BC               	movwf	??_led_para_init+4
  8273  04AB  3F41               	moviw [1]fsr1
  8274  04AC  00BD               	movwf	??_led_para_init+5
  8275  04AD  3003               	movlw	3
  8276  04AE  023D               	subwf	??_led_para_init+5,w
  8277  04AF  30E9               	movlw	233
  8278  04B0  1903               	skipnz
  8279  04B1  023C               	subwf	??_led_para_init+4,w
  8280  04B2  1C03               	skipc
  8281  04B3  2CC9               	goto	l6137
  8282                           
  8283                           ;app_led.c: 280: {
  8284                           ;app_led.c: 281: m_led_para.ble_para.manual_para.mBright[i] = 1000;
  8285  04B4  30E8               	movlw	232
  8286  04B5  00B8               	movwf	??_led_para_init
  8287  04B6  3003               	movlw	3
  8288  04B7  00B9               	movwf	??_led_para_init+1
  8289  04B8  0843               	movf	led_para_init@i,w
  8290  04B9  00BA               	movwf	??_led_para_init+2
  8291  04BA  3088               	movlw	136
  8292  04BB  01BB               	clrf	??_led_para_init+3
  8293  04BC  35BA               	lslf	??_led_para_init+2,f
  8294  04BD  0DBB               	rlf	??_led_para_init+3,f
  8295  04BE  00BC               	movwf	??_led_para_init+4
  8296  04BF  3023               	movlw	35
  8297  04C0  00BD               	movwf	??_led_para_init+5
  8298  04C1  083A               	movf	??_led_para_init+2,w
  8299  04C2  073C               	addwf	??_led_para_init+4,w
  8300  04C3  0086               	movwf	6
  8301  04C4  083B               	movf	??_led_para_init+3,w
  8302  04C5  3D3D               	addwfc	??_led_para_init+5,w
  8303  04C6  0087               	movwf	7
  8304  04C7  274C  3184         	fcall	PL120	;call to abstracted procedure
  8305  04C9                     l6137:	
  8306                           
  8307                           ;app_led.c: 282: }
  8308                           ;app_led.c: 283: for(j = 0; j < 4; j++)
  8309  04C9  01C2               	clrf	led_para_init@j
  8310  04CA                     l6143:	
  8311                           
  8312                           ;app_led.c: 284: {
  8313                           ;app_led.c: 285: if(m_led_para.ble_para.manual_para.mCustomBright[j][i] > 100)
  8314  04CA  26B4  3184         	fcall	PL20	;call to abstracted procedure
  8315  04CC  0086               	movwf	6
  8316  04CD  0839               	movf	??_led_para_init+1,w
  8317  04CE  3D3F               	addwfc	??_led_para_init+7,w
  8318  04CF  0087               	movwf	7
  8319  04D0  3065               	movlw	101
  8320  04D1  0201               	subwf	1,w
  8321  04D2  1C03               	skipc
  8322  04D3  2CE0               	goto	l6147
  8323                           
  8324                           ;app_led.c: 286: {
  8325                           ;app_led.c: 287: m_led_para.ble_para.manual_para.mCustomBright[j][i] = 100;
  8326  04D4  26B4  3184         	fcall	PL20	;call to abstracted procedure
  8327  04D6  00C0               	movwf	??_led_para_init+8
  8328  04D7  0839               	movf	??_led_para_init+1,w
  8329  04D8  3D3F               	addwfc	??_led_para_init+7,w
  8330  04D9  00C1               	movwf	??_led_para_init+9
  8331  04DA  0840               	movf	??_led_para_init+8,w
  8332  04DB  0086               	movwf	6
  8333  04DC  0841               	movf	??_led_para_init+9,w
  8334  04DD  0087               	movwf	7
  8335  04DE  3064               	movlw	100
  8336  04DF  0081               	movwf	1
  8337  04E0                     l6147:	
  8338  04E0  3004               	movlw	4
  8339  04E1  0AC2               	incf	led_para_init@j,f
  8340  04E2  0242               	subwf	led_para_init@j,w
  8341  04E3  1C03               	skipc
  8342  04E4  2CCA               	goto	l6143
  8343  04E5  3004               	movlw	4
  8344  04E6  0AC3               	incf	led_para_init@i,f
  8345  04E7  0243               	subwf	led_para_init@i,w
  8346  04E8  1C03               	skipc
  8347  04E9  2CA0               	goto	l6133
  8348                           
  8349                           ;app_led.c: 288: }
  8350                           ;app_led.c: 289: }
  8351                           ;app_led.c: 290: }
  8352                           ;app_led.c: 293: if(m_led_para.ble_para.auto_para.sunrise_start_hour > 23)
  8353  04EA  30A0               	movlw	160
  8354  04EB  2713  3184         	fcall	PL68	;call to abstracted procedure
  8355  04ED  1C03               	skipc
  8356  04EE  2CF2               	goto	l609
  8357                           
  8358                           ;app_led.c: 294: {
  8359                           ;app_led.c: 295: m_led_para.ble_para.auto_para.sunrise_start_hour = 0;
  8360  04EF  30A0               	movlw	160
  8361  04F0  0086               	movwf	6
  8362  04F1  0181               	clrf	1
  8363  04F2                     l609:	
  8364                           
  8365                           ;app_led.c: 296: }
  8366                           ;app_led.c: 297: if(m_led_para.ble_para.auto_para.sunrise_start_minute > 59)
  8367  04F2  30A1               	movlw	161
  8368  04F3  2719  3184         	fcall	PL70	;call to abstracted procedure
  8369  04F5  1C03               	skipc
  8370  04F6  2CFA               	goto	l610
  8371                           
  8372                           ;app_led.c: 298: {
  8373                           ;app_led.c: 299: m_led_para.ble_para.auto_para.sunrise_start_minute = 0;
  8374  04F7  30A1               	movlw	161
  8375  04F8  0086               	movwf	6
  8376  04F9  0181               	clrf	1
  8377  04FA                     l610:	
  8378                           
  8379                           ;app_led.c: 300: }
  8380                           ;app_led.c: 301: if(m_led_para.ble_para.auto_para.sunrise_end_hour > 23)
  8381  04FA  30A2               	movlw	162
  8382  04FB  2713  3184         	fcall	PL68	;call to abstracted procedure
  8383  04FD  1C03               	skipc
  8384  04FE  2D02               	goto	l611
  8385                           
  8386                           ;app_led.c: 302: {
  8387                           ;app_led.c: 303: m_led_para.ble_para.auto_para.sunrise_end_hour = 0;
  8388  04FF  30A2               	movlw	162
  8389  0500  0086               	movwf	6
  8390  0501  0181               	clrf	1
  8391  0502                     l611:	
  8392                           
  8393                           ;app_led.c: 304: }
  8394                           ;app_led.c: 305: if(m_led_para.ble_para.auto_para.sunrise_end_minute > 59)
  8395  0502  30A3               	movlw	163
  8396  0503  2719  3184         	fcall	PL70	;call to abstracted procedure
  8397  0505  1C03               	skipc
  8398  0506  2D0A               	goto	l612
  8399                           
  8400                           ;app_led.c: 306: {
  8401                           ;app_led.c: 307: m_led_para.ble_para.auto_para.sunrise_end_minute = 0;
  8402  0507  30A3               	movlw	163
  8403  0508  0086               	movwf	6
  8404  0509  0181               	clrf	1
  8405  050A                     l612:	
  8406                           
  8407                           ;app_led.c: 308: }
  8408                           ;app_led.c: 309: if(m_led_para.ble_para.auto_para.sunset_start_hour > 23)
  8409  050A  30A8               	movlw	168
  8410  050B  2713  3184         	fcall	PL68	;call to abstracted procedure
  8411  050D  1C03               	skipc
  8412  050E  2D12               	goto	l613
  8413                           
  8414                           ;app_led.c: 310: {
  8415                           ;app_led.c: 311: m_led_para.ble_para.auto_para.sunset_start_hour = 0;
  8416  050F  30A8               	movlw	168
  8417  0510  0086               	movwf	6
  8418  0511  0181               	clrf	1
  8419  0512                     l613:	
  8420                           
  8421                           ;app_led.c: 312: }
  8422                           ;app_led.c: 313: if(m_led_para.ble_para.auto_para.sunset_start_minute > 59)
  8423  0512  30A9               	movlw	169
  8424  0513  2719  3184         	fcall	PL70	;call to abstracted procedure
  8425  0515  1C03               	skipc
  8426  0516  2D1A               	goto	l614
  8427                           
  8428                           ;app_led.c: 314: {
  8429                           ;app_led.c: 315: m_led_para.ble_para.auto_para.sunset_start_minute = 0;
  8430  0517  30A9               	movlw	169
  8431  0518  0086               	movwf	6
  8432  0519  0181               	clrf	1
  8433  051A                     l614:	
  8434                           
  8435                           ;app_led.c: 316: }
  8436                           ;app_led.c: 317: if(m_led_para.ble_para.auto_para.sunset_end_hour > 23)
  8437  051A  30AA               	movlw	170
  8438  051B  2713  3184         	fcall	PL68	;call to abstracted procedure
  8439  051D  1C03               	skipc
  8440  051E  2D22               	goto	l615
  8441                           
  8442                           ;app_led.c: 318: {
  8443                           ;app_led.c: 319: m_led_para.ble_para.auto_para.sunset_end_hour = 0;
  8444  051F  30AA               	movlw	170
  8445  0520  0086               	movwf	6
  8446  0521  0181               	clrf	1
  8447  0522                     l615:	
  8448                           
  8449                           ;app_led.c: 320: }
  8450                           ;app_led.c: 321: if(m_led_para.ble_para.auto_para.sunset_end_minute > 59)
  8451  0522  30AB               	movlw	171
  8452  0523  2719  3184         	fcall	PL70	;call to abstracted procedure
  8453  0525  1C03               	skipc
  8454  0526  2D2A               	goto	l616
  8455                           
  8456                           ;app_led.c: 322: {
  8457                           ;app_led.c: 323: m_led_para.ble_para.auto_para.sunset_end_minute = 0;
  8458  0527  30AB               	movlw	171
  8459  0528  0086               	movwf	6
  8460  0529  0181               	clrf	1
  8461  052A                     l616:	
  8462                           
  8463                           ;app_led.c: 324: }
  8464                           ;app_led.c: 325: if(m_led_para.ble_para.auto_para.turnoff_hour > 23)
  8465  052A  30B1               	movlw	177
  8466  052B  2713  3184         	fcall	PL68	;call to abstracted procedure
  8467  052D  1C03               	skipc
  8468  052E  2D32               	goto	l617
  8469                           
  8470                           ;app_led.c: 326: {
  8471                           ;app_led.c: 327: m_led_para.ble_para.auto_para.turnoff_hour = 0;
  8472  052F  30B1               	movlw	177
  8473  0530  0086               	movwf	6
  8474  0531  0181               	clrf	1
  8475  0532                     l617:	
  8476                           
  8477                           ;app_led.c: 328: }
  8478                           ;app_led.c: 329: if(m_led_para.ble_para.auto_para.turnoff_minute > 59)
  8479  0532  30B2               	movlw	178
  8480  0533  2719  3184         	fcall	PL70	;call to abstracted procedure
  8481  0535  1C03               	skipc
  8482  0536  2D3A               	goto	l6177
  8483                           
  8484                           ;app_led.c: 330: {
  8485                           ;app_led.c: 331: m_led_para.ble_para.auto_para.turnoff_minute = 0;
  8486  0537  30B2               	movlw	178
  8487  0538  0086               	movwf	6
  8488  0539  0181               	clrf	1
  8489  053A                     l6177:	
  8490                           
  8491                           ;app_led.c: 332: }
  8492                           ;app_led.c: 333: for(i = 0; i < 4; i++)
  8493  053A  01C3               	clrf	led_para_init@i
  8494  053B                     l6183:	
  8495                           
  8496                           ;app_led.c: 334: {
  8497                           ;app_led.c: 335: if(m_led_para.ble_para.auto_para.day_bright[i] > 100)
  8498  053B  0843               	movf	led_para_init@i,w
  8499  053C  00B8               	movwf	??_led_para_init
  8500  053D  30A4               	movlw	164
  8501  053E  01B9               	clrf	??_led_para_init+1
  8502  053F  00BA               	movwf	??_led_para_init+2
  8503  0540  26F1  3184         	fcall	PL52	;call to abstracted procedure
  8504  0542  3065               	movlw	101
  8505  0543  0201               	subwf	1,w
  8506                           
  8507                           ;app_led.c: 336: {
  8508                           ;app_led.c: 337: m_led_para.ble_para.auto_para.day_bright[i] = 100;
  8509  0544  0843               	movf	led_para_init@i,w
  8510  0545  00B8               	movwf	??_led_para_init
  8511  0546  1C03               	skipc
  8512  0547  2D4F               	goto	L13
  8513  0548  30A4               	movlw	164
  8514  0549  01B9               	clrf	??_led_para_init+1
  8515  054A  00BA               	movwf	??_led_para_init+2
  8516  054B  26E2  3184         	fcall	PL50	;call to abstracted procedure
  8517                           
  8518                           ;app_led.c: 338: }
  8519                           ;app_led.c: 339: if(m_led_para.ble_para.auto_para.night_bright[i] > 100)
  8520  054D  0843               	movf	led_para_init@i,w
  8521  054E  00B8               	movwf	??_led_para_init
  8522  054F                     L13:	
  8523  054F  30AC               	movlw	172
  8524  0550  01B9               	clrf	??_led_para_init+1
  8525  0551  00BA               	movwf	??_led_para_init+2
  8526  0552  26F1  3184         	fcall	PL52	;call to abstracted procedure
  8527  0554  3065               	movlw	101
  8528  0555  0201               	subwf	1,w
  8529  0556  1C03               	skipc
  8530  0557  2D5F               	goto	l6189
  8531                           
  8532                           ;app_led.c: 340: {
  8533                           ;app_led.c: 341: m_led_para.ble_para.auto_para.night_bright[i] = 100;
  8534  0558  0843               	movf	led_para_init@i,w
  8535  0559  00B8               	movwf	??_led_para_init
  8536  055A  30AC               	movlw	172
  8537  055B  01B9               	clrf	??_led_para_init+1
  8538  055C  00BA               	movwf	??_led_para_init+2
  8539  055D  26E2  3184         	fcall	PL50	;call to abstracted procedure
  8540  055F                     l6189:	
  8541  055F  3004               	movlw	4
  8542  0560  0AC3               	incf	led_para_init@i,f
  8543  0561  0243               	subwf	led_para_init@i,w
  8544  0562  1C03               	skipc
  8545  0563  2D3B               	goto	l6183
  8546                           
  8547                           ;app_led.c: 342: }
  8548                           ;app_led.c: 343: }
  8549                           ;app_led.c: 346: if(m_led_para.ble_para.pro_para.point_count < 4 || m_led_para.ble_para.
      +                          pro_para.point_count > 10)
  8550  0564  2740  3184         	fcall	PL114	;call to abstracted procedure
  8551  0566  30B3               	movlw	179
  8552  0567  0086               	movwf	6
  8553  0568  1C03               	skipc
  8554  0569  2D70               	goto	L14
  8555  056A  300B               	movlw	11
  8556  056B  0201               	subwf	1,w
  8557  056C  1C03               	skipc
  8558  056D  2D72               	goto	l6199
  8559                           
  8560                           ;app_led.c: 347: {
  8561                           ;app_led.c: 348: m_led_para.ble_para.pro_para.point_count = 6;
  8562  056E  30B3               	movlw	179
  8563  056F  0086               	movwf	6
  8564  0570                     L14:	
  8565  0570  3006               	movlw	6
  8566  0571  0081               	movwf	1
  8567  0572                     l6199:	
  8568                           
  8569                           ;app_led.c: 349: }
  8570                           ;app_led.c: 350: for(i = 0; i < 10; i++)
  8571  0572  01C3               	clrf	led_para_init@i
  8572  0573                     l6205:	
  8573                           
  8574                           ;app_led.c: 351: {
  8575                           ;app_led.c: 352: if(m_led_para.ble_para.pro_para.points[i].hour > 23)
  8576  0573  26DB               	fcall	PL42	;call to abstracted procedure
  8577  0574  3196  26BF  3184   	fcall	___wmul
  8578  0577  30B4               	movlw	180
  8579  0578  26CB  3184         	fcall	PL24	;call to abstracted procedure
  8580  057A  3018               	movlw	24
  8581  057B  0201               	subwf	1,w
  8582                           
  8583                           ;app_led.c: 353: {
  8584                           ;app_led.c: 354: m_led_para.ble_para.pro_para.points[i].hour = 0;
  8585  057C  26DB  3184         	fcall	PL42	;call to abstracted procedure
  8586  057E  1C03               	skipc
  8587  057F  2D88               	goto	L15
  8588  0580  3196  26BF  3184   	fcall	___wmul
  8589  0583  30B4               	movlw	180
  8590  0584  26CB  3184         	fcall	PL24	;call to abstracted procedure
  8591  0586  0181               	clrf	1
  8592                           
  8593                           ;app_led.c: 355: }
  8594                           ;app_led.c: 356: if(m_led_para.ble_para.pro_para.points[i].minuite > 59)
  8595  0587  26DB               	fcall	PL42	;call to abstracted procedure
  8596  0588                     L15:	
  8597  0588  3196  26BF  3184   	fcall	___wmul
  8598  058B  30B5               	movlw	181
  8599  058C  26CB  3184         	fcall	PL24	;call to abstracted procedure
  8600  058E  303C               	movlw	60
  8601  058F  0201               	subwf	1,w
  8602  0590  1C03               	skipc
  8603  0591  2D9A               	goto	l6211
  8604                           
  8605                           ;app_led.c: 357: {
  8606                           ;app_led.c: 358: m_led_para.ble_para.pro_para.points[i].hour = 0;
  8607  0592  26DB               	fcall	PL42	;call to abstracted procedure
  8608  0593  3196  26BF  3184   	fcall	___wmul
  8609  0596  30B4               	movlw	180
  8610  0597  26CB  3184         	fcall	PL24	;call to abstracted procedure
  8611  0599  0181               	clrf	1
  8612  059A                     l6211:	
  8613                           
  8614                           ;app_led.c: 359: }
  8615                           ;app_led.c: 360: for(j = 0; j < 4; j++)
  8616  059A  01C2               	clrf	led_para_init@j
  8617  059B                     l6217:	
  8618                           
  8619                           ;app_led.c: 361: {
  8620                           ;app_led.c: 362: if(m_led_para.ble_para.pro_para.points[i].bright[j] > 100)
  8621  059B  0842               	movf	led_para_init@j,w
  8622  059C  00B8               	movwf	??_led_para_init
  8623  059D  01B9               	clrf	??_led_para_init+1
  8624  059E  26DB               	fcall	PL42	;call to abstracted procedure
  8625  059F  3196  26BF  3184   	fcall	___wmul
  8626  05A2  26FA  3184         	fcall	PL56	;call to abstracted procedure
  8627  05A4  0086               	movwf	6
  8628  05A5  0839               	movf	??_led_para_init+1,w
  8629  05A6  3D3D               	addwfc	??_led_para_init+5,w
  8630  05A7  0087               	movwf	7
  8631  05A8  3065               	movlw	101
  8632  05A9  0201               	subwf	1,w
  8633  05AA  1C03               	skipc
  8634  05AB  2DBF               	goto	l6221
  8635                           
  8636                           ;app_led.c: 363: {
  8637                           ;app_led.c: 364: m_led_para.ble_para.pro_para.points[i].bright[j] = 100;
  8638  05AC  0842               	movf	led_para_init@j,w
  8639  05AD  00B8               	movwf	??_led_para_init
  8640  05AE  01B9               	clrf	??_led_para_init+1
  8641  05AF  26DB               	fcall	PL42	;call to abstracted procedure
  8642  05B0  3196  26BF  3184   	fcall	___wmul
  8643  05B3  26FA  3184         	fcall	PL56	;call to abstracted procedure
  8644  05B5  00BE               	movwf	??_led_para_init+6
  8645  05B6  0839               	movf	??_led_para_init+1,w
  8646  05B7  3D3D               	addwfc	??_led_para_init+5,w
  8647  05B8  00BF               	movwf	??_led_para_init+7
  8648  05B9  083E               	movf	??_led_para_init+6,w
  8649  05BA  0086               	movwf	6
  8650  05BB  083F               	movf	??_led_para_init+7,w
  8651  05BC  0087               	movwf	7
  8652  05BD  3064               	movlw	100
  8653  05BE  0081               	movwf	1
  8654  05BF                     l6221:	
  8655  05BF  3004               	movlw	4
  8656  05C0  0AC2               	incf	led_para_init@j,f
  8657  05C1  0242               	subwf	led_para_init@j,w
  8658  05C2  1C03               	skipc
  8659  05C3  2D9B               	goto	l6217
  8660  05C4  300A               	movlw	10
  8661  05C5  0AC3               	incf	led_para_init@i,f
  8662  05C6  0243               	subwf	led_para_init@i,w
  8663  05C7  1803               	btfsc	3,0
  8664  05C8  2DE2               	goto	l6253
  8665  05C9  2D73               	goto	l6205
  8666  05CA                     l6229:	
  8667                           
  8668                           ;app_led.c: 401: led_turnoff();
  8669  05CA  2634  3184         	fcall	_led_turnoff
  8670                           
  8671                           ;app_led.c: 402: led_indicate_off();
  8672  05CC  2F92               	ljmp	PL128
  8673  05CD                     l6233:	
  8674                           ;app_led.c: 403: break;
  8675                           
  8676                           
  8677                           ;app_led.c: 405: led_update_day_bright();
  8678  05CD  2642               	fcall	_led_update_day_bright
  8679                           
  8680                           ;app_led.c: 406: led_indicate_day();
  8681  05CE  318F  2FC4         	ljmp	PL130
  8682  05D0                     l6237:	
  8683                           ;app_led.c: 407: break;
  8684                           
  8685                           
  8686                           ;app_led.c: 409: led_update_night_bright();
  8687  05D0  266A               	fcall	_led_update_night_bright
  8688                           
  8689                           ;app_led.c: 410: led_indicate_night();
  8690  05D1  318F  2FC9         	ljmp	PL132
  8691  05D3                     l6241:	
  8692                           ;app_led.c: 411: break;
  8693                           
  8694                           
  8695                           ;app_led.c: 413: if(m_led_para.ble_para.mMode == 0)
  8696  05D3  26AC  3184         	fcall	PL10	;call to abstracted procedure
  8697  05D5  1D03               	skipz
  8698  05D6  2DE0               	goto	l6249
  8699                           
  8700                           ;app_led.c: 414: {
  8701                           ;app_led.c: 415: if(m_led_para.ble_para.manual_para.mOn)
  8702  05D7  318E  260C  3184   	fcall	PL54	;call to abstracted procedure
  8703  05DA  1C01               	btfss	1,0
  8704  05DB  2DDF               	goto	l6247
  8705                           
  8706                           ;app_led.c: 416: {
  8707                           ;app_led.c: 417: led_turnon_ramp();
  8708  05DC  25F2  3184         	fcall	_led_turnon_ramp
  8709                           
  8710                           ;app_led.c: 418: }
  8711  05DE  2DE0               	goto	l6249
  8712  05DF                     l6247:	
  8713                           
  8714                           ;app_led.c: 419: else
  8715                           ;app_led.c: 420: {
  8716                           ;app_led.c: 421: led_turnoff_ramp();
  8717  05DF  2699               	fcall	_led_turnoff_ramp
  8718  05E0                     l6249:	
  8719                           
  8720                           ;app_led.c: 422: }
  8721                           ;app_led.c: 423: }
  8722                           ;app_led.c: 424: led_indicate_ble();
  8723  05E0  318F  2FD4         	ljmp	PL136
  8724  05E2                     l6253:	
  8725                           ;app_led.c: 425: break;
  8726                           
  8727  05E2  318F  277D  3184   	fcall	PL14	;call to abstracted procedure
  8728                           
  8729                           ; Switch size 1, requested type "space"
  8730                           ; Number of cases is 4, Range of values is 0 to 3
  8731                           ; switch strategies available:
  8732                           ; Name         Instructions Cycles
  8733                           ; simple_byte           13     7 (average)
  8734                           ; direct_byte           14     6 (fixed)
  8735                           ; jumptable            260     6 (fixed)
  8736                           ;	Chosen strategy is simple_byte
  8737  05E5  1903               	skipnz
  8738  05E6  2DCA               	goto	l6229
  8739  05E7  3A01               	xorlw	1	; case 1
  8740  05E8  1903               	skipnz
  8741  05E9  2DCD               	goto	l6233
  8742  05EA  3A03               	xorlw	3	; case 2
  8743  05EB  1903               	skipnz
  8744  05EC  2DD0               	goto	l6237
  8745  05ED  3A01               	xorlw	1	; case 3
  8746  05EE  1903               	skipnz
  8747  05EF  2DD3               	goto	l6241
  8748  05F0  2DF1               	goto	l643
  8749  05F1                     l643:	
  8750  05F1  0008               	return
  8751  05F2                     __end_of_led_para_init:	
  8752  05F2                     __ptext47:	
  8753 ;; *************** function _led_turnon_ramp *****************
  8754 ;; Defined at:
  8755 ;;		line 677 in file "src/app_led.c"
  8756 ;; Parameters:    Size  Location     Type
  8757 ;;		None
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;  i               1    6[BANK0 ] unsigned char 
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8764 ;; Tracked objects:
  8765 ;;		On entry : 1E/0
  8766 ;;		On exit  : 1F/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8770 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8772 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8773 ;;Total ram usage:        5 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:    9
  8776 ;; This function calls:
  8777 ;;		Nothing
  8778 ;; This function is called by:
  8779 ;;		_led_para_init
  8780 ;;		_led_set_mode
  8781 ;;		_led_set_power
  8782 ;;		_led_set_time
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           
  8787                           ;psect for function _led_turnon_ramp
  8788  05F2                     _led_turnon_ramp:	
  8789                           
  8790                           ;app_led.c: 679: for(uint8_t i = 0; i < 4; i++)
  8791                           
  8792                           ;incstack = 0
  8793                           ; Regs used in _led_turnon_ramp: [wreg-fsr1h+status,2+status,0]
  8794  05F2  0020               	movlb	0	; select bank0
  8795  05F3  01A6               	clrf	led_turnon_ramp@i
  8796  05F4                     l4081:	
  8797                           
  8798                           ;app_led.c: 680: {
  8799                           ;app_led.c: 681: target_bright[i] = m_led_para.ble_para.manual_para.mBright[i];
  8800  05F4  0826               	movf	led_turnon_ramp@i,w
  8801  05F5  00A2               	movwf	??_led_turnon_ramp
  8802  05F6  3088               	movlw	136
  8803  05F7  01A3               	clrf	??_led_turnon_ramp+1
  8804  05F8  35A2               	lslf	??_led_turnon_ramp,f
  8805  05F9  0DA3               	rlf	??_led_turnon_ramp+1,f
  8806  05FA  00A4               	movwf	??_led_turnon_ramp+2
  8807  05FB  3023               	movlw	35
  8808  05FC  00A5               	movwf	??_led_turnon_ramp+3
  8809  05FD  0822               	movf	??_led_turnon_ramp,w
  8810  05FE  0724               	addwf	??_led_turnon_ramp+2,w
  8811  05FF  0086               	movwf	6
  8812  0600  0823               	movf	??_led_turnon_ramp+1,w
  8813  0601  3D25               	addwfc	??_led_turnon_ramp+3,w
  8814  0602  0087               	movwf	7
  8815  0603  3526               	lslf	led_turnon_ramp@i,w
  8816  0604  3E55               	addlw	(low (_target_bright| 0))& (0+255)
  8817  0605  0084               	movwf	4
  8818  0606  27F6  3184         	fcall	PL6	;call to abstracted procedure
  8819  0608  3004               	movlw	4
  8820  0609  0AA6               	incf	led_turnon_ramp@i,f
  8821  060A  0226               	subwf	led_turnon_ramp@i,w
  8822  060B  1803               	btfsc	3,0
  8823  060C  0008               	return
  8824  060D  2DF4               	goto	l4081
  8825  060E                     __end_of_led_turnon_ramp:	
  8826  060E                     __ptext29:	
  8827 ;; *************** function _eeprom_read_buffer *****************
  8828 ;; Defined at:
  8829 ;;		line 43 in file "src/drv_eeprom.c"
  8830 ;; Parameters:    Size  Location     Type
  8831 ;;  addr            1    wreg     unsigned char 
  8832 ;;  pbuf            2    3[BANK0 ] PTR unsigned char 
  8833 ;;		 -> m_led_para(113), 
  8834 ;;  len             1    5[BANK0 ] unsigned char 
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;  addr            1    7[BANK0 ] unsigned char 
  8837 ;;  i               1    8[BANK0 ] unsigned char 
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  1    wreg      void 
  8840 ;; Registers used:
  8841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8842 ;; Tracked objects:
  8843 ;;		On entry : 1F/0
  8844 ;;		On exit  : 1F/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8847 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8848 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8850 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8851 ;;Total ram usage:        6 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; Hardware stack levels required when called:   10
  8854 ;; This function calls:
  8855 ;;		_eeprom_read
  8856 ;; This function is called by:
  8857 ;;		_led_para_init
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           
  8862                           ;psect for function _eeprom_read_buffer
  8863  060E                     _eeprom_read_buffer:	
  8864                           
  8865                           ;incstack = 0
  8866                           ; Regs used in _eeprom_read_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8867                           ;eeprom_read_buffer@addr stored from wreg
  8868  060E  00A7               	movwf	eeprom_read_buffer@addr
  8869                           
  8870                           ;drv_eeprom.c: 45: for(uint8_t i = len; i > 0; i--)
  8871  060F  0825               	movf	eeprom_read_buffer@len,w
  8872  0610  00A8               	movwf	eeprom_read_buffer@i
  8873  0611                     l4259:	
  8874  0611  0828               	movf	eeprom_read_buffer@i,w
  8875  0612  1903               	btfsc	3,2
  8876  0613  0008               	return
  8877                           
  8878                           ;drv_eeprom.c: 46: {
  8879                           ;drv_eeprom.c: 47: *pbuf++ = eeprom_read(addr++);
  8880  0614  0827               	movf	eeprom_read_buffer@addr,w
  8881  0615  2625  3184         	fcall	_eeprom_read
  8882  0617  0020               	movlb	0	; select bank0
  8883  0618  00A6               	movwf	??_eeprom_read_buffer
  8884  0619  0823               	movf	eeprom_read_buffer@pbuf,w
  8885  061A  0086               	movwf	6
  8886  061B  0824               	movf	eeprom_read_buffer@pbuf+1,w
  8887  061C  0087               	movwf	7
  8888  061D  0826               	movf	??_eeprom_read_buffer,w
  8889  061E  0081               	movwf	1
  8890  061F  0AA7               	incf	eeprom_read_buffer@addr,f
  8891  0620  0AA3               	incf	eeprom_read_buffer@pbuf,f
  8892  0621  1903               	skipnz
  8893  0622  0AA4               	incf	eeprom_read_buffer@pbuf+1,f
  8894  0623  03A8               	decf	eeprom_read_buffer@i,f
  8895  0624  2E11               	goto	l4259
  8896  0625                     __end_of_eeprom_read_buffer:	
  8897  0625                     __ptext30:	
  8898 ;; *************** function _eeprom_read *****************
  8899 ;; Defined at:
  8900 ;;		line 24 in file "src/drv_eeprom.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;  addr            1    wreg     unsigned char 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  addr            1    2[BANK0 ] unsigned char 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      unsigned char 
  8907 ;; Registers used:
  8908 ;;		wreg
  8909 ;; Tracked objects:
  8910 ;;		On entry : 1F/0
  8911 ;;		On exit  : 1F/11
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8915 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8917 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8918 ;;Total ram usage:        1 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; Hardware stack levels required when called:    9
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_eeprom_read_buffer
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           
  8929                           ;psect for function _eeprom_read
  8930  0625                     _eeprom_read:	
  8931                           
  8932                           ;incstack = 0
  8933                           ; Regs used in _eeprom_read: [wreg]
  8934                           ;eeprom_read@addr stored from wreg
  8935  0625  00A2               	movwf	eeprom_read@addr
  8936                           
  8937                           ;drv_eeprom.c: 26: NVMADRH = 0x70;
  8938  0626  3070               	movlw	112
  8939  0627  0031               	movlb	17	; select bank17
  8940  0628  0092               	movwf	18	;volatile
  8941                           
  8942                           ;drv_eeprom.c: 27: NVMADRL = addr;
  8943  0629  0020               	movlb	0	; select bank0
  8944  062A  0822               	movf	eeprom_read@addr,w
  8945  062B  0031               	movlb	17	; select bank17
  8946  062C  0091               	movwf	17	;volatile
  8947                           
  8948                           ;drv_eeprom.c: 28: NVMCON1bits.NVMREGS = 1;
  8949  062D  1715               	bsf	21,6	;volsfr
  8950                           
  8951                           ;drv_eeprom.c: 29: NVMCON1bits.RD = 1;
  8952  062E  1415               	bsf	21,0	;volsfr
  8953                           
  8954                           ;drv_eeprom.c: 30: __nop();
  8955  062F  0000               	nop
  8956                           
  8957                           ;drv_eeprom.c: 31: __nop();
  8958  0630  0000               	nop
  8959                           
  8960                           ;drv_eeprom.c: 32: return (NVMDATL);
  8961  0631  0031               	movlb	17	; select bank17
  8962  0632  0813               	movf	19,w	;volatile
  8963  0633  0008               	return
  8964  0634                     __end_of_eeprom_read:	
  8965  0634                     __ptext23:	
  8966 ;; *************** function _led_turnoff *****************
  8967 ;; Defined at:
  8968 ;;		line 702 in file "src/app_led.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;		None
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;  i               1    2[BANK0 ] unsigned char 
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      void 
  8975 ;; Registers used:
  8976 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8977 ;; Tracked objects:
  8978 ;;		On entry : 1E/0
  8979 ;;		On exit  : 1F/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;Total ram usage:        1 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:    9
  8989 ;; This function calls:
  8990 ;;		Nothing
  8991 ;; This function is called by:
  8992 ;;		_led_para_init
  8993 ;;		_led_find_device
  8994 ;; This function uses a non-reentrant model
  8995 ;;
  8996                           
  8997                           
  8998                           ;psect for function _led_turnoff
  8999  0634                     _led_turnoff:	
  9000                           
  9001                           ;app_led.c: 704: for(uint8_t i = 0; i < 4; i++)
  9002                           
  9003                           ;incstack = 0
  9004                           ; Regs used in _led_turnoff: [wreg+fsr1l+fsr1h+status,2+status,0]
  9005  0634  0020               	movlb	0	; select bank0
  9006  0635  01A2               	clrf	led_turnoff@i
  9007  0636                     l5917:	
  9008                           
  9009                           ;app_led.c: 705: {
  9010                           ;app_led.c: 706: target_bright[i] = 0;
  9011  0636  3522               	lslf	led_turnoff@i,w
  9012  0637  3E55               	addlw	(low (_target_bright| 0))& (0+255)
  9013  0638  271F  3184         	fcall	PL72	;call to abstracted procedure
  9014                           
  9015                           ;app_led.c: 707: current_bright[i] = 0;
  9016  063A  3522               	lslf	led_turnoff@i,w
  9017  063B  278C  3184         	fcall	PL116	;call to abstracted procedure
  9018  063D  0AA2               	incf	led_turnoff@i,f
  9019  063E  0222               	subwf	led_turnoff@i,w
  9020  063F  1803               	btfsc	3,0
  9021  0640  0008               	return
  9022  0641  2E36               	goto	l5917
  9023  0642                     __end_of_led_turnoff:	
  9024  0642                     __ptext22:	
  9025 ;; *************** function _led_update_day_bright *****************
  9026 ;; Defined at:
  9027 ;;		line 740 in file "src/app_led.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;		None
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;  i               1    6[BANK0 ] unsigned char 
  9032 ;; Return value:  Size  Location     Type
  9033 ;;                  1    wreg      void 
  9034 ;; Registers used:
  9035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9036 ;; Tracked objects:
  9037 ;;		On entry : 1E/0
  9038 ;;		On exit  : 1F/0
  9039 ;;		Unchanged: 0/0
  9040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9042 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9043 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9044 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9045 ;;Total ram usage:        5 bytes
  9046 ;; Hardware stack levels used:    1
  9047 ;; Hardware stack levels required when called:    9
  9048 ;; This function calls:
  9049 ;;		Nothing
  9050 ;; This function is called by:
  9051 ;;		_led_para_init
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           
  9056                           ;psect for function _led_update_day_bright
  9057  0642                     _led_update_day_bright:	
  9058                           
  9059                           ;app_led.c: 742: for(uint8_t i = 0; i < 4; i++)
  9060                           
  9061                           ;incstack = 0
  9062                           ; Regs used in _led_update_day_bright: [wreg-fsr1h+status,2+status,0]
  9063  0642  0020               	movlb	0	; select bank0
  9064  0643  01A6               	clrf	led_update_day_bright@i
  9065  0644                     l4749:	
  9066                           
  9067                           ;app_led.c: 743: {
  9068                           ;app_led.c: 744: current_bright[i] = m_led_para.all_bright;
  9069  0644  318F  2785  3184   	fcall	PL32	;call to abstracted procedure
  9070  0647  3526               	lslf	led_update_day_bright@i,w
  9071  0648  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
  9072                           
  9073                           ;app_led.c: 745: target_bright[i] = m_led_para.all_bright;
  9074  0649  318F  2772  3184   	fcall	PL4	;call to abstracted procedure
  9075  064C  3142               	addfsr 1,2
  9076  064D  3526               	lslf	led_update_day_bright@i,w
  9077  064E  3E55               	addlw	(low (_target_bright| 0))& (0+255)
  9078                           
  9079                           ;app_led.c: 746: m_led_para.ble_para.manual_para.mBright[i] = m_led_para.all_bright;
  9080  064F  318F  2772  3184   	fcall	PL4	;call to abstracted procedure
  9081  0652  3142               	addfsr 1,2
  9082  0653  0826               	movf	led_update_day_bright@i,w
  9083  0654  00A2               	movwf	??_led_update_day_bright
  9084  0655  3088               	movlw	136
  9085  0656  01A3               	clrf	??_led_update_day_bright+1
  9086  0657  35A2               	lslf	??_led_update_day_bright,f
  9087  0658  0DA3               	rlf	??_led_update_day_bright+1,f
  9088  0659  00A4               	movwf	??_led_update_day_bright+2
  9089  065A  3023               	movlw	35
  9090  065B  00A5               	movwf	??_led_update_day_bright+3
  9091  065C  0822               	movf	??_led_update_day_bright,w
  9092  065D  0724               	addwf	??_led_update_day_bright+2,w
  9093  065E  0084               	movwf	4
  9094  065F  0823               	movf	??_led_update_day_bright+1,w
  9095  0660  3D25               	addwfc	??_led_update_day_bright+3,w
  9096  0661  318F  27AB  3184   	fcall	PL90	;call to abstracted procedure
  9097  0664  3004               	movlw	4
  9098  0665  0AA6               	incf	led_update_day_bright@i,f
  9099  0666  0226               	subwf	led_update_day_bright@i,w
  9100  0667  1803               	btfsc	3,0
  9101  0668  0008               	return
  9102  0669  2E44               	goto	l4749
  9103  066A                     __end_of_led_update_day_bright:	
  9104  066A                     __ptext21:	
  9105 ;; *************** function _led_update_night_bright *****************
  9106 ;; Defined at:
  9107 ;;		line 762 in file "src/app_led.c"
  9108 ;; Parameters:    Size  Location     Type
  9109 ;;		None
  9110 ;; Auto vars:     Size  Location     Type
  9111 ;;  i               1    6[BANK0 ] unsigned char 
  9112 ;; Return value:  Size  Location     Type
  9113 ;;                  1    wreg      void 
  9114 ;; Registers used:
  9115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9116 ;; Tracked objects:
  9117 ;;		On entry : 1E/0
  9118 ;;		On exit  : 1F/0
  9119 ;;		Unchanged: 0/0
  9120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9123 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9124 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9125 ;;Total ram usage:        5 bytes
  9126 ;; Hardware stack levels used:    1
  9127 ;; Hardware stack levels required when called:    9
  9128 ;; This function calls:
  9129 ;;		Nothing
  9130 ;; This function is called by:
  9131 ;;		_led_para_init
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           
  9136                           ;psect for function _led_update_night_bright
  9137  066A                     _led_update_night_bright:	
  9138                           
  9139                           ;app_led.c: 764: for(uint8_t i = 0; i < 4; i++)
  9140                           
  9141                           ;incstack = 0
  9142                           ; Regs used in _led_update_night_bright: [wreg-fsr1h+status,2+status,0]
  9143  066A  0020               	movlb	0	; select bank0
  9144  066B  01A6               	clrf	led_update_night_bright@i
  9145  066C                     l4763:	
  9146                           
  9147                           ;app_led.c: 765: {
  9148                           ;app_led.c: 766: if(i == 3)
  9149  066C  3003               	movlw	3
  9150  066D  0626               	xorwf	led_update_night_bright@i,w
  9151  066E  1D03               	btfss	3,2
  9152  066F  2E85               	goto	l4767
  9153                           
  9154                           ;app_led.c: 767: {
  9155                           ;app_led.c: 768: current_bright[i] = m_led_para.blue_bright;
  9156  0670  26D5               	fcall	PL26	;call to abstracted procedure
  9157  0671  3526               	lslf	led_update_night_bright@i,w
  9158  0672  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
  9159                           
  9160                           ;app_led.c: 769: target_bright[i] = m_led_para.blue_bright;
  9161  0673  318F  2772  3184   	fcall	PL4	;call to abstracted procedure
  9162  0676  3144               	addfsr 1,4
  9163  0677  3526               	lslf	led_update_night_bright@i,w
  9164  0678  3E55               	addlw	(low (_target_bright| 0))& (0+255)
  9165                           
  9166                           ;app_led.c: 770: m_led_para.ble_para.manual_para.mBright[i] = m_led_para.blue_bright;
  9167  0679  318F  2772  3184   	fcall	PL4	;call to abstracted procedure
  9168  067C  3144               	addfsr 1,4
  9169  067D  2707               	fcall	PL58	;call to abstracted procedure
  9170  067E  0084               	movwf	4
  9171  067F  0823               	movf	??_led_update_night_bright+1,w
  9172  0680  3D25               	addwfc	??_led_update_night_bright+3,w
  9173  0681  318F  27AB  3184   	fcall	PL90	;call to abstracted procedure
  9174                           
  9175                           ;app_led.c: 771: }
  9176  0684  2E93               	goto	l4769
  9177  0685                     l4767:	
  9178                           
  9179                           ;app_led.c: 772: else
  9180                           ;app_led.c: 773: {
  9181                           ;app_led.c: 774: current_bright[i] = 0;
  9182  0685  3526               	lslf	led_update_night_bright@i,w
  9183  0686  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
  9184  0687  271F               	fcall	PL72	;call to abstracted procedure
  9185                           
  9186                           ;app_led.c: 775: target_bright[i] = 0;
  9187  0688  3526               	lslf	led_update_night_bright@i,w
  9188  0689  318F  27CE  3184   	fcall	PL134	;call to abstracted procedure
  9189                           
  9190                           ;app_led.c: 776: m_led_para.ble_para.manual_para.mBright[i] = 0;
  9191  068C  2707               	fcall	PL58	;call to abstracted procedure
  9192  068D  0086               	movwf	6
  9193  068E  0823               	movf	??_led_update_night_bright+1,w
  9194  068F  3D25               	addwfc	??_led_update_night_bright+3,w
  9195  0690  318F  27DE  3184   	fcall	PL154	;call to abstracted procedure
  9196  0693                     l4769:	
  9197  0693  3004               	movlw	4
  9198  0694  0AA6               	incf	led_update_night_bright@i,f
  9199  0695  0226               	subwf	led_update_night_bright@i,w
  9200  0696  1803               	btfsc	3,0
  9201  0697  0008               	return
  9202  0698  2E6C               	goto	l4763
  9203  0699                     __end_of_led_update_night_bright:	
  9204  0699                     __ptext48:	
  9205 ;; *************** function _led_turnoff_ramp *****************
  9206 ;; Defined at:
  9207 ;;		line 685 in file "src/app_led.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;		None
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;  i               1    2[BANK0 ] unsigned char 
  9212 ;; Return value:  Size  Location     Type
  9213 ;;                  1    wreg      void 
  9214 ;; Registers used:
  9215 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9216 ;; Tracked objects:
  9217 ;;		On entry : 1E/0
  9218 ;;		On exit  : 1F/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9224 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9225 ;;Total ram usage:        1 bytes
  9226 ;; Hardware stack levels used:    1
  9227 ;; Hardware stack levels required when called:    9
  9228 ;; This function calls:
  9229 ;;		Nothing
  9230 ;; This function is called by:
  9231 ;;		_led_para_init
  9232 ;;		_led_set_mode
  9233 ;;		_led_set_power
  9234 ;;		_led_set_time
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           
  9239                           ;psect for function _led_turnoff_ramp
  9240  0699                     _led_turnoff_ramp:	
  9241                           
  9242                           ;app_led.c: 687: for(uint8_t i = 0; i < 4; i++)
  9243                           
  9244                           ;incstack = 0
  9245                           ; Regs used in _led_turnoff_ramp: [wreg+fsr1l+fsr1h+status,2+status,0]
  9246  0699  0020               	movlb	0	; select bank0
  9247  069A  01A2               	clrf	led_turnoff_ramp@i
  9248  069B                     l4093:	
  9249                           
  9250                           ;app_led.c: 688: {
  9251                           ;app_led.c: 689: target_bright[i] = 0;
  9252  069B  3522               	lslf	led_turnoff_ramp@i,w
  9253  069C  3E55               	addlw	(low (_target_bright| 0))& (0+255)
  9254  069D  271F  3184         	fcall	PL72	;call to abstracted procedure
  9255  069F  3004               	movlw	4
  9256  06A0  0AA2               	incf	led_turnoff_ramp@i,f
  9257  06A1  0222               	subwf	led_turnoff_ramp@i,w
  9258  06A2  1803               	btfsc	3,0
  9259  06A3  0008               	return
  9260  06A4  2E9B               	goto	l4093
  9261  06A5                     __end_of_led_turnoff_ramp:	
  9262  06A5                     __ptext42:	
  9263 ;; *************** function _led_indicate_ble *****************
  9264 ;; Defined at:
  9265 ;;		line 733 in file "src/app_led.c"
  9266 ;; Parameters:    Size  Location     Type
  9267 ;;		None
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;		None
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  1    wreg      void 
  9272 ;; Registers used:
  9273 ;;		None
  9274 ;; Tracked objects:
  9275 ;;		On entry : 1E/0
  9276 ;;		On exit  : 1F/2
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;Total ram usage:        0 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; Hardware stack levels required when called:    9
  9286 ;; This function calls:
  9287 ;;		Nothing
  9288 ;; This function is called by:
  9289 ;;		_led_para_init
  9290 ;;		_led_set_time
  9291 ;; This function uses a non-reentrant model
  9292 ;;
  9293                           
  9294                           
  9295                           ;psect for function _led_indicate_ble
  9296  06A5                     _led_indicate_ble:	
  9297                           
  9298                           ;app_led.c: 735: (LATBbits.LATB6 = 1);
  9299                           
  9300                           ;app_led.c: 736: (LATAbits.LATA1 = 0);
  9301                           
  9302                           ;app_led.c: 737: (LATBbits.LATB7 = 1);
  9303                           
  9304                           ;incstack = 0
  9305                           ; Regs used in _led_indicate_ble: []
  9306  06A5  318F  2FD4         	ljmp	PL136	;call to abstracted procedure
  9307  06A7                     __end_of_led_indicate_ble:	
  9308  06A7                     __ptext28:	
  9309 ;; *************** function _led_indicate_day *****************
  9310 ;; Defined at:
  9311 ;;		line 719 in file "src/app_led.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;		None
  9314 ;; Auto vars:     Size  Location     Type
  9315 ;;		None
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  1    wreg      void 
  9318 ;; Registers used:
  9319 ;;		None
  9320 ;; Tracked objects:
  9321 ;;		On entry : 1F/0
  9322 ;;		On exit  : 1F/2
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9329 ;;Total ram usage:        0 bytes
  9330 ;; Hardware stack levels used:    1
  9331 ;; Hardware stack levels required when called:    9
  9332 ;; This function calls:
  9333 ;;		Nothing
  9334 ;; This function is called by:
  9335 ;;		_led_para_init
  9336 ;; This function uses a non-reentrant model
  9337 ;;
  9338                           
  9339                           
  9340                           ;psect for function _led_indicate_day
  9341  06A7                     _led_indicate_day:	
  9342                           
  9343                           ;app_led.c: 721: (LATBbits.LATB6 = 0);
  9344                           
  9345                           ;app_led.c: 722: (LATAbits.LATA1 = 0);
  9346                           
  9347                           ;app_led.c: 723: (LATBbits.LATB7 = 0);
  9348                           
  9349                           ;incstack = 0
  9350                           ; Regs used in _led_indicate_day: []
  9351  06A7  318F  2FC4         	ljmp	PL130	;call to abstracted procedure
  9352  06A9                     __end_of_led_indicate_day:	
  9353  06A9                     __ptext27:	
  9354 ;; *************** function _led_indicate_night *****************
  9355 ;; Defined at:
  9356 ;;		line 726 in file "src/app_led.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;		None
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;		None
  9361 ;; Return value:  Size  Location     Type
  9362 ;;                  1    wreg      void 
  9363 ;; Registers used:
  9364 ;;		None
  9365 ;; Tracked objects:
  9366 ;;		On entry : 1F/0
  9367 ;;		On exit  : 1F/2
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9374 ;;Total ram usage:        0 bytes
  9375 ;; Hardware stack levels used:    1
  9376 ;; Hardware stack levels required when called:    9
  9377 ;; This function calls:
  9378 ;;		Nothing
  9379 ;; This function is called by:
  9380 ;;		_led_para_init
  9381 ;; This function uses a non-reentrant model
  9382 ;;
  9383                           
  9384                           
  9385                           ;psect for function _led_indicate_night
  9386  06A9                     _led_indicate_night:	
  9387                           
  9388                           ;app_led.c: 728: (LATBbits.LATB6 = 1);
  9389                           
  9390                           ;app_led.c: 729: (LATAbits.LATA1 = 1);
  9391                           
  9392                           ;app_led.c: 730: (LATBbits.LATB7 = 0);
  9393                           
  9394                           ;incstack = 0
  9395                           ; Regs used in _led_indicate_night: []
  9396  06A9  318F  2FC9         	ljmp	PL132	;call to abstracted procedure
  9397  06AB                     __end_of_led_indicate_night:	
  9398  06AB                     __ptext26:	
  9399 ;; *************** function _led_indicate_off *****************
  9400 ;; Defined at:
  9401 ;;		line 712 in file "src/app_led.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;		None
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;		None
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  1    wreg      void 
  9408 ;; Registers used:
  9409 ;;		None
  9410 ;; Tracked objects:
  9411 ;;		On entry : 1F/0
  9412 ;;		On exit  : 1F/2
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9419 ;;Total ram usage:        0 bytes
  9420 ;; Hardware stack levels used:    1
  9421 ;; Hardware stack levels required when called:    9
  9422 ;; This function calls:
  9423 ;;		Nothing
  9424 ;; This function is called by:
  9425 ;;		_led_para_init
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           
  9430                           ;psect for function _led_indicate_off
  9431  06AB                     _led_indicate_off:	
  9432                           
  9433                           ;app_led.c: 714: (LATBbits.LATB6 = 0);
  9434                           
  9435                           ;app_led.c: 715: (LATAbits.LATA1 = 1);
  9436                           
  9437                           ;app_led.c: 716: (LATBbits.LATB7 = 1);
  9438                           
  9439                           ;incstack = 0
  9440                           ; Regs used in _led_indicate_off: []
  9441  06AB  2F92               	ljmp	PL128	;call to abstracted procedure
  9442  06AC                     __end_of_led_indicate_off:	
  9443  06AC                     PL10:	
  9444  06AC  307F               	movlw	127
  9445  06AD  0086               	movwf	6
  9446  06AE  3023               	movlw	35
  9447  06AF  0087               	movwf	7
  9448  06B0  3146               	addfsr 1,6
  9449  06B1  0801               	movf	1,w
  9450  06B2  3903               	andlw	3
  9451  06B3  0008               	return
  9452  06B4                     __end_ofPL10:	
  9453  06B4                     PL20:	
  9454  06B4  0843               	movf	led_para_init@i,w
  9455  06B5  00B8               	movwf	??_led_para_init
  9456  06B6  01B9               	clrf	??_led_para_init+1
  9457  06B7  0842               	movf	led_para_init@j,w
  9458  06B8  00BA               	movwf	??_led_para_init+2
  9459  06B9  3090               	movlw	144
  9460  06BA  01BB               	clrf	??_led_para_init+3
  9461  06BB  35BA               	lslf	??_led_para_init+2,f
  9462  06BC  0DBB               	rlf	??_led_para_init+3,f
  9463  06BD  35BA               	lslf	??_led_para_init+2,f
  9464  06BE  0DBB               	rlf	??_led_para_init+3,f
  9465  06BF  00BC               	movwf	??_led_para_init+4
  9466  06C0  3023               	movlw	35
  9467  06C1  00BD               	movwf	??_led_para_init+5
  9468  06C2  083A               	movf	??_led_para_init+2,w
  9469  06C3  073C               	addwf	??_led_para_init+4,w
  9470  06C4  00BE               	movwf	??_led_para_init+6
  9471  06C5  083B               	movf	??_led_para_init+3,w
  9472  06C6  3D3D               	addwfc	??_led_para_init+5,w
  9473  06C7  00BF               	movwf	??_led_para_init+7
  9474  06C8  0838               	movf	??_led_para_init,w
  9475  06C9  073E               	addwf	??_led_para_init+6,w
  9476  06CA  0008               	return
  9477  06CB                     __end_ofPL20:	
  9478  06CB                     PL24:	
  9479  06CB  00B8               	movwf	??_led_para_init
  9480  06CC  3023               	movlw	35
  9481  06CD  00B9               	movwf	??_led_para_init+1
  9482  06CE  0822               	movf	?___wmul,w
  9483  06CF  0738               	addwf	??_led_para_init,w
  9484  06D0  0086               	movwf	6
  9485  06D1  0823               	movf	?___wmul+1,w
  9486  06D2  3D39               	addwfc	??_led_para_init+1,w
  9487  06D3  0087               	movwf	7
  9488  06D4  0008               	return
  9489  06D5                     __end_ofPL24:	
  9490  06D5                     PL26:	
  9491  06D5  307F               	movlw	127
  9492  06D6  0086               	movwf	6
  9493  06D7  3023               	movlw	35
  9494  06D8  0087               	movwf	7
  9495  06D9  3144               	addfsr 1,4
  9496  06DA  0008               	return
  9497  06DB                     __end_ofPL26:	
  9498  06DB                     PL42:	
  9499  06DB  0843               	movf	led_para_init@i,w
  9500  06DC  00A2               	movwf	___wmul@multiplier
  9501  06DD  3006               	movlw	6
  9502  06DE  01A3               	clrf	___wmul@multiplier+1
  9503  06DF  00A4               	movwf	___wmul@multiplicand
  9504  06E0  01A5               	clrf	___wmul@multiplicand+1
  9505  06E1  0008               	return
  9506  06E2                     __end_ofPL42:	
  9507  06E2                     PL50:	
  9508  06E2  3023               	movlw	35
  9509  06E3  00BB               	movwf	??_led_para_init+3
  9510  06E4  0838               	movf	??_led_para_init,w
  9511  06E5  073A               	addwf	??_led_para_init+2,w
  9512  06E6  00BC               	movwf	??_led_para_init+4
  9513  06E7  0839               	movf	??_led_para_init+1,w
  9514  06E8  3D3B               	addwfc	??_led_para_init+3,w
  9515  06E9  00BD               	movwf	??_led_para_init+5
  9516  06EA  083C               	movf	??_led_para_init+4,w
  9517  06EB  0086               	movwf	6
  9518  06EC  083D               	movf	??_led_para_init+5,w
  9519  06ED  0087               	movwf	7
  9520  06EE  3064               	movlw	100
  9521  06EF  0081               	movwf	1
  9522  06F0  0008               	return
  9523  06F1                     __end_ofPL50:	
  9524  06F1                     PL52:	
  9525  06F1  3023               	movlw	35
  9526  06F2  00BB               	movwf	??_led_para_init+3
  9527  06F3  0838               	movf	??_led_para_init,w
  9528  06F4  073A               	addwf	??_led_para_init+2,w
  9529  06F5  0086               	movwf	6
  9530  06F6  0839               	movf	??_led_para_init+1,w
  9531  06F7  3D3B               	addwfc	??_led_para_init+3,w
  9532  06F8  0087               	movwf	7
  9533  06F9  0008               	return
  9534  06FA                     __end_ofPL52:	
  9535  06FA                     PL56:	
  9536  06FA  30B6               	movlw	182
  9537  06FB  00BA               	movwf	??_led_para_init+2
  9538  06FC  3023               	movlw	35
  9539  06FD  00BB               	movwf	??_led_para_init+3
  9540  06FE  0822               	movf	?___wmul,w
  9541  06FF  073A               	addwf	??_led_para_init+2,w
  9542  0700  00BC               	movwf	??_led_para_init+4
  9543  0701  0823               	movf	?___wmul+1,w
  9544  0702  3D3B               	addwfc	??_led_para_init+3,w
  9545  0703  00BD               	movwf	??_led_para_init+5
  9546  0704  0838               	movf	??_led_para_init,w
  9547  0705  073C               	addwf	??_led_para_init+4,w
  9548  0706  0008               	return
  9549  0707                     __end_ofPL56:	
  9550  0707                     PL58:	
  9551  0707  0826               	movf	led_update_night_bright@i,w
  9552  0708  00A2               	movwf	??_led_update_night_bright
  9553  0709  3088               	movlw	136
  9554  070A  01A3               	clrf	??_led_update_night_bright+1
  9555  070B  35A2               	lslf	??_led_update_night_bright,f
  9556  070C  0DA3               	rlf	??_led_update_night_bright+1,f
  9557  070D  00A4               	movwf	??_led_update_night_bright+2
  9558  070E  3023               	movlw	35
  9559  070F  00A5               	movwf	??_led_update_night_bright+3
  9560  0710  0822               	movf	??_led_update_night_bright,w
  9561  0711  0724               	addwf	??_led_update_night_bright+2,w
  9562  0712  0008               	return
  9563  0713                     __end_ofPL58:	
  9564  0713                     PL68:	
  9565  0713  0086               	movwf	6
  9566  0714  3023               	movlw	35
  9567  0715  0087               	movwf	7
  9568  0716  3018               	movlw	24
  9569  0717  0201               	subwf	1,w
  9570  0718  0008               	return
  9571  0719                     __end_ofPL68:	
  9572  0719                     PL70:	
  9573  0719  0086               	movwf	6
  9574  071A  3023               	movlw	35
  9575  071B  0087               	movwf	7
  9576  071C  303C               	movlw	60
  9577  071D  0201               	subwf	1,w
  9578  071E  0008               	return
  9579  071F                     __end_ofPL70:	
  9580  071F                     PL72:	
  9581  071F  0086               	movwf	6
  9582  0720  3000               	movlw	0
  9583  0721  0187               	clrf	7
  9584  0722  3FC0               	movwi [0]fsr1
  9585  0723  3FC1               	movwi [1]fsr1
  9586  0724  0008               	return
  9587  0725                     __end_ofPL72:	
  9588  0725                     PL86:	
  9589  0725  30E8               	movlw	232
  9590  0726  00B8               	movwf	??_led_para_init
  9591  0727  3003               	movlw	3
  9592  0728  00B9               	movwf	??_led_para_init+1
  9593  0729  0008               	return
  9594  072A                     __end_ofPL86:	
  9595  072A                     PL98:	
  9596  072A  3F40               	moviw [0]fsr1
  9597  072B  00B8               	movwf	??_led_para_init
  9598  072C  3F41               	moviw [1]fsr1
  9599  072D  00B9               	movwf	??_led_para_init+1
  9600  072E  3000               	movlw	0
  9601  072F  0239               	subwf	??_led_para_init+1,w
  9602  0730  340A               	retlw	10
  9603  0731                     __end_ofPL98:	
  9604  0731                     PL100:	
  9605  0731  300A               	movlw	10
  9606  0732  00B8               	movwf	??_led_para_init
  9607  0733  307F               	movlw	127
  9608  0734  01B9               	clrf	??_led_para_init+1
  9609  0735  0086               	movwf	6
  9610  0736  3023               	movlw	35
  9611  0737  0087               	movwf	7
  9612  0738  0008               	return
  9613  0739                     __end_ofPL100:	
  9614  0739                     PL104:	
  9615  0739  3F40               	moviw [0]fsr1
  9616  073A  00B8               	movwf	??_led_para_init
  9617  073B  3F41               	moviw [1]fsr1
  9618  073C  00B9               	movwf	??_led_para_init+1
  9619  073D  3003               	movlw	3
  9620  073E  0239               	subwf	??_led_para_init+1,w
  9621  073F  34E9               	retlw	233
  9622  0740                     __end_ofPL104:	
  9623  0740                     PL114:	
  9624  0740  30B3               	movlw	179
  9625  0741  0086               	movwf	6
  9626  0742  3023               	movlw	35
  9627  0743  0087               	movwf	7
  9628  0744  3004               	movlw	4
  9629  0745  0201               	subwf	1,w
  9630  0746  0008               	return
  9631  0747                     __end_ofPL114:	
  9632  0747                     PL118:	
  9633  0747  307F               	movlw	127
  9634  0748  0086               	movwf	6
  9635  0749  3023               	movlw	35
  9636  074A  0087               	movwf	7
  9637  074B  0008               	return
  9638  074C                     __end_ofPL118:	
  9639  074C                     PL120:	
  9640  074C  0838               	movf	??_led_para_init,w
  9641  074D  3FC0               	movwi [0]fsr1
  9642  074E  0839               	movf	??_led_para_init+1,w
  9643  074F  3FC1               	movwi [1]fsr1
  9644  0750  0008               	return
  9645  0751                     __end_ofPL120:	
  9646  0751                     PL144:	
  9647  0751  307F               	movlw	127
  9648  0752  0086               	movwf	6
  9649  0753  3023               	movlw	35
  9650  0754  0087               	movwf	7
  9651  0755  3455               	retlw	85
  9652  0756                     __end_ofPL144:	
  9653  0756                     __ptext94:	
  9654 ;; *************** function _led_state_ble_cb *****************
  9655 ;; Defined at:
  9656 ;;		line 976 in file "src/app_led.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;  key             1    9[COMMON] unsigned char 
  9659 ;;  state           1   10[COMMON] enum E8242
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;		None
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  1    wreg      void 
  9664 ;; Registers used:
  9665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9666 ;; Tracked objects:
  9667 ;;		On entry : 1F/1
  9668 ;;		On exit  : 1E/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9675 ;;Total ram usage:        2 bytes
  9676 ;; Hardware stack levels used:    1
  9677 ;; Hardware stack levels required when called:    2
  9678 ;; This function calls:
  9679 ;;		_led_state_ble_cont_press_cb
  9680 ;;		_led_state_ble_long_press_cb
  9681 ;;		_led_state_ble_release_cb
  9682 ;;		_led_state_ble_short_press_cb
  9683 ;; This function is called by:
  9684 ;;		_led_touch_cb
  9685 ;; This function uses a non-reentrant model
  9686 ;;
  9687                           
  9688                           
  9689                           ;psect for function _led_state_ble_cb
  9690  0756                     _led_state_ble_cb:	
  9691                           
  9692                           ;app_led.c: 978: if(key == 0x01)
  9693                           
  9694                           ;incstack = 0
  9695                           ; Regs used in _led_state_ble_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9696  0756  0B79               	decfsz	led_state_ble_cb@key,w
  9697  0757  0008               	return
  9698  0758  087A               	movf	led_state_ble_cb@state,w
  9699                           
  9700                           ; Switch size 1, requested type "space"
  9701                           ; Number of cases is 4, Range of values is 0 to 3
  9702                           ; switch strategies available:
  9703                           ; Name         Instructions Cycles
  9704                           ; simple_byte           13     7 (average)
  9705                           ; direct_byte           14     6 (fixed)
  9706                           ; jumptable            260     6 (fixed)
  9707                           ;	Chosen strategy is simple_byte
  9708  0759  3A00               	xorlw	0	; case 0
  9709  075A  1903               	skipnz
  9710  075B  2F66               	goto	i1l3923
  9711  075C  3A01               	xorlw	1	; case 1
  9712  075D  1903               	skipnz
  9713  075E  2F67               	goto	i1l3925
  9714  075F  3A03               	xorlw	3	; case 2
  9715  0760  1903               	skipnz
  9716  0761  2F68               	goto	i1l3927
  9717  0762  3A01               	xorlw	1	; case 3
  9718  0763  1903               	skipnz
  9719  0764  2F69               	goto	i1l3929
  9720  0765  2F6A               	goto	i1l866
  9721  0766                     i1l3923:	
  9722                           
  9723                           ;app_led.c: 983: led_state_ble_short_press_cb();
  9724  0766  2F6E               	ljmp	i1l3863
  9725  0767                     i1l3925:	
  9726                           ;app_led.c: 984: break;
  9727                           
  9728                           
  9729                           ;app_led.c: 986: led_state_ble_long_press_cb();
  9730  0767  2F6C               	ljmp	i1l849
  9731  0768                     i1l3927:	
  9732                           ;app_led.c: 987: break;
  9733                           
  9734                           
  9735                           ;app_led.c: 989: led_state_ble_cont_press_cb();
  9736  0768  2F6B               	ljmp	i1l852
  9737  0769                     i1l3929:	
  9738                           ;app_led.c: 990: break;
  9739                           
  9740                           
  9741                           ;app_led.c: 992: led_state_ble_release_cb();
  9742  0769  2F6D               	ljmp	i1l855
  9743  076A                     i1l866:	
  9744  076A  0008               	return
  9745  076B                     __end_of_led_state_ble_cb:	
  9746  076B                     __ptext125:	
  9747 ;; *************** function _led_state_ble_cont_press_cb *****************
  9748 ;; Defined at:
  9749 ;;		line 972 in file "src/app_led.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;		None
  9752 ;; Auto vars:     Size  Location     Type
  9753 ;;		None
  9754 ;; Return value:  Size  Location     Type
  9755 ;;                  1    wreg      void 
  9756 ;; Registers used:
  9757 ;;		None
  9758 ;; Tracked objects:
  9759 ;;		On entry : 1F/1
  9760 ;;		On exit  : 1F/1
  9761 ;;		Unchanged: 1F/0
  9762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9767 ;;Total ram usage:        0 bytes
  9768 ;; Hardware stack levels used:    1
  9769 ;; This function calls:
  9770 ;;		Nothing
  9771 ;; This function is called by:
  9772 ;;		_led_state_ble_cb
  9773 ;; This function uses a non-reentrant model
  9774 ;;
  9775                           
  9776                           
  9777                           ;psect for function _led_state_ble_cont_press_cb
  9778  076B                     _led_state_ble_cont_press_cb:	
  9779  076B                     i1l852:	
  9780                           ;incstack = 0
  9781                           ; Regs used in _led_state_ble_cont_press_cb: []
  9782                           
  9783  076B  0008               	return
  9784  076C                     __end_of_led_state_ble_cont_press_cb:	
  9785  076C                     __ptext124:	
  9786 ;; *************** function _led_state_ble_long_press_cb *****************
  9787 ;; Defined at:
  9788 ;;		line 970 in file "src/app_led.c"
  9789 ;; Parameters:    Size  Location     Type
  9790 ;;		None
  9791 ;; Auto vars:     Size  Location     Type
  9792 ;;		None
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  1    wreg      void 
  9795 ;; Registers used:
  9796 ;;		None
  9797 ;; Tracked objects:
  9798 ;;		On entry : 1F/1
  9799 ;;		On exit  : 1F/1
  9800 ;;		Unchanged: 1F/0
  9801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9806 ;;Total ram usage:        0 bytes
  9807 ;; Hardware stack levels used:    1
  9808 ;; This function calls:
  9809 ;;		Nothing
  9810 ;; This function is called by:
  9811 ;;		_led_state_ble_cb
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815                           
  9816                           ;psect for function _led_state_ble_long_press_cb
  9817  076C                     _led_state_ble_long_press_cb:	
  9818  076C                     i1l849:	
  9819                           ;incstack = 0
  9820                           ; Regs used in _led_state_ble_long_press_cb: []
  9821                           
  9822  076C  0008               	return
  9823  076D                     __end_of_led_state_ble_long_press_cb:	
  9824  076D                     __ptext123:	
  9825 ;; *************** function _led_state_ble_release_cb *****************
  9826 ;; Defined at:
  9827 ;;		line 974 in file "src/app_led.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;		None
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;		None
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  1    wreg      void 
  9834 ;; Registers used:
  9835 ;;		None
  9836 ;; Tracked objects:
  9837 ;;		On entry : 1F/1
  9838 ;;		On exit  : 1F/1
  9839 ;;		Unchanged: 1F/0
  9840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;Total ram usage:        0 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; This function calls:
  9848 ;;		Nothing
  9849 ;; This function is called by:
  9850 ;;		_led_state_ble_cb
  9851 ;; This function uses a non-reentrant model
  9852 ;;
  9853                           
  9854                           
  9855                           ;psect for function _led_state_ble_release_cb
  9856  076D                     _led_state_ble_release_cb:	
  9857  076D                     i1l855:	
  9858                           ;incstack = 0
  9859                           ; Regs used in _led_state_ble_release_cb: []
  9860                           
  9861  076D  0008               	return
  9862  076E                     __end_of_led_state_ble_release_cb:	
  9863  076E                     __ptext119:	
  9864 ;; *************** function _led_state_ble_short_press_cb *****************
  9865 ;; Defined at:
  9866 ;;		line 962 in file "src/app_led.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;		None
  9869 ;; Auto vars:     Size  Location     Type
  9870 ;;		None
  9871 ;; Return value:  Size  Location     Type
  9872 ;;                  1    wreg      void 
  9873 ;; Registers used:
  9874 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9875 ;; Tracked objects:
  9876 ;;		On entry : 1F/1
  9877 ;;		On exit  : 1F/0
  9878 ;;		Unchanged: 0/0
  9879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9883 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;Total ram usage:        1 bytes
  9885 ;; Hardware stack levels used:    1
  9886 ;; Hardware stack levels required when called:    1
  9887 ;; This function calls:
  9888 ;;		i1_led_indicate_off
  9889 ;;		i1_led_prepare_to_save
  9890 ;;		i1_led_turnoff
  9891 ;; This function is called by:
  9892 ;;		_led_state_ble_cb
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           
  9897                           ;psect for function _led_state_ble_short_press_cb
  9898  076E                     _led_state_ble_short_press_cb:	
  9899  076E                     i1l3863:	
  9900                           ;incstack = 0
  9901                           ; Regs used in _led_state_ble_short_press_cb: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  9902                           
  9903                           
  9904                           ;app_led.c: 964: m_led_para.mState++;
  9905  076E  318F  277D  3184   	fcall	PL14	;call to abstracted procedure
  9906  0771  00F1               	movwf	??_led_state_ble_short_press_cb
  9907  0772  0AF1               	incf	??_led_state_ble_short_press_cb,f
  9908  0773  0801               	movf	1,w
  9909  0774  0671               	xorwf	??_led_state_ble_short_press_cb,w
  9910  0775  39FC               	andlw	-4
  9911  0776  0671               	xorwf	??_led_state_ble_short_press_cb,w
  9912  0777  0081               	movwf	1
  9913                           
  9914                           ;app_led.c: 965: led_turnoff();
  9915  0778  277F  3184         	fcall	i1_led_turnoff
  9916                           
  9917                           ;app_led.c: 966: led_indicate_off();
  9918  077A  277E               	fcall	i1_led_indicate_off
  9919                           
  9920                           ;app_led.c: 967: led_prepare_to_save();
  9921  077B  318F  274C         	fcall	i1_led_prepare_to_save
  9922  077D  0008               	return
  9923  077E                     __end_of_led_state_ble_short_press_cb:	
  9924  077E                     __ptext122:	
  9925 ;; *************** function i1_led_indicate_off *****************
  9926 ;; Defined at:
  9927 ;;		line 712 in file "src/app_led.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;		None
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;		None
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      void 
  9934 ;; Registers used:
  9935 ;;		None
  9936 ;; Tracked objects:
  9937 ;;		On entry : 1F/1
  9938 ;;		On exit  : 1F/2
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9945 ;;Total ram usage:        0 bytes
  9946 ;; Hardware stack levels used:    1
  9947 ;; This function calls:
  9948 ;;		Nothing
  9949 ;; This function is called by:
  9950 ;;		_led_state_ble_short_press_cb
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           
  9955                           ;psect for function i1_led_indicate_off
  9956  077E                     i1_led_indicate_off:	
  9957                           
  9958                           ;app_led.c: 714: (LATBbits.LATB6 = 0);
  9959                           
  9960                           ;incstack = 0
  9961                           ; Regs used in i1_led_indicate_off: []
  9962                           
  9963                           ;app_led.c: 715: (LATAbits.LATA1 = 1);
  9964                           
  9965                           ;app_led.c: 716: (LATBbits.LATB7 = 1);
  9966  077E  2F92               	ljmp	PL128	;call to abstracted procedure
  9967  077F                     __end_ofi1_led_indicate_off:	
  9968  077F                     __ptext120:	
  9969 ;; *************** function i1_led_turnoff *****************
  9970 ;; Defined at:
  9971 ;;		line 702 in file "src/app_led.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;		None
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;  led_turnoff     1    0[COMMON] unsigned char 
  9976 ;; Return value:  Size  Location     Type
  9977 ;;                  1    wreg      void 
  9978 ;; Registers used:
  9979 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9980 ;; Tracked objects:
  9981 ;;		On entry : 1F/1
  9982 ;;		On exit  : 1F/1
  9983 ;;		Unchanged: 1F/0
  9984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;Total ram usage:        1 bytes
  9990 ;; Hardware stack levels used:    1
  9991 ;; This function calls:
  9992 ;;		Nothing
  9993 ;; This function is called by:
  9994 ;;		_led_state_ble_short_press_cb
  9995 ;; This function uses a non-reentrant model
  9996 ;;
  9997                           
  9998                           
  9999                           ;psect for function i1_led_turnoff
 10000  077F                     i1_led_turnoff:	
 10001                           
 10002                           ;app_led.c: 704: for(uint8_t i = 0; i < 4; i++)
 10003                           
 10004                           ;incstack = 0
 10005                           ; Regs used in i1_led_turnoff: [wreg+fsr1l+fsr1h+status,2+status,0]
 10006  077F  01F0               	clrf	i1led_turnoff@i
 10007  0780                     i1l3757:	
 10008                           
 10009                           ;app_led.c: 705: {
 10010                           ;app_led.c: 706: target_bright[i] = 0;
 10011  0780  3570               	lslf	i1led_turnoff@i,w
 10012  0781  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 10013  0782  271F  3184         	fcall	PL72	;call to abstracted procedure
 10014                           
 10015                           ;app_led.c: 707: current_bright[i] = 0;
 10016  0784  3570               	lslf	i1led_turnoff@i,w
 10017  0785  278C  3184         	fcall	PL116	;call to abstracted procedure
 10018  0787  0AF0               	incf	i1led_turnoff@i,f
 10019  0788  0270               	subwf	i1led_turnoff@i,w
 10020  0789  1803               	btfsc	3,0
 10021  078A  0008               	return
 10022  078B  2F80               	goto	i1l3757
 10023  078C                     __end_ofi1_led_turnoff:	
 10024  078C                     PL116:	
 10025  078C  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 10026  078D  0086               	movwf	6
 10027  078E  3000               	movlw	0
 10028  078F  3FC0               	movwi [0]fsr1
 10029  0790  3FC1               	movwi [1]fsr1
 10030  0791  3404               	retlw	4
 10031  0792                     __end_ofPL116:	
 10032  0792                     PL128:	
 10033  0792  0022               	movlb	2	; select bank2
 10034  0793  130D               	bcf	13,6	;volatile
 10035  0794  148C               	bsf	12,1	;volatile
 10036  0795  178D               	bsf	13,7	;volatile
 10037  0796  0008               	return
 10038  0797                     __end_ofPL128:	
 10039  0797                     __ptext53:	
 10040 ;; *************** function _led_increase *****************
 10041 ;; Defined at:
 10042 ;;		line 2150 in file "src/app_led.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;  chn             1    wreg     unsigned char 
 10045 ;;  delt            1   11[BANK0 ] unsigned char 
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;  chn             1   16[BANK0 ] unsigned char 
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  1    wreg      unsigned char 
 10050 ;; Registers used:
 10051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10052 ;; Tracked objects:
 10053 ;;		On entry : 1F/3
 10054 ;;		On exit  : 1F/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10057 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10058 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10059 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10060 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10061 ;;Total ram usage:        6 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; Hardware stack levels required when called:   10
 10064 ;; This function calls:
 10065 ;;		_increase
 10066 ;;		_led_prepare_to_save
 10067 ;; This function is called by:
 10068 ;;		_ble_decode
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           
 10073                           ;psect for function _led_increase
 10074  0797                     _led_increase:	
 10075                           
 10076                           ;incstack = 0
 10077                           ; Regs used in _led_increase: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10078                           ;led_increase@chn stored from wreg
 10079  0797  0020               	movlb	0	; select bank0
 10080  0798  00B0               	movwf	led_increase@chn
 10081                           
 10082                           ;app_led.c: 2152: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0 || m_led_para.ble_para.manual_para.mOn == 0 || chn >= 4)
 10083  0799  1C5D               	btfss	_led_run_para,0
 10084  079A  18DD               	btfsc	_led_run_para,1
 10085  079B  0008               	return
 10086  079C  26AC  3184         	fcall	PL10	;call to abstracted procedure
 10087  079E  1D03               	skipz
 10088  079F  0008               	return
 10089  07A0  318E  260C  3184   	fcall	PL54	;call to abstracted procedure
 10090  07A3  1C01               	btfss	1,0
 10091  07A4  0008               	return
 10092  07A5  3004               	movlw	4
 10093  07A6  0230               	subwf	led_increase@chn,w
 10094  07A7  1803               	btfsc	3,0
 10095  07A8  0008               	return
 10096                           
 10097                           ;app_led.c: 2155: }
 10098                           ;app_led.c: 2162: increase(&m_led_para.ble_para.manual_para.mBright[chn], delt, 1000 );
 10099  07A9  3088               	movlw	136
 10100  07AA  00A2               	movwf	increase@psrc
 10101  07AB  3023               	movlw	35
 10102  07AC  00A3               	movwf	increase@psrc+1
 10103  07AD  0830               	movf	led_increase@chn,w
 10104  07AE  00AC               	movwf	??_led_increase
 10105  07AF  01AD               	clrf	??_led_increase+1
 10106  07B0  35AC               	lslf	??_led_increase,f
 10107  07B1  0DAD               	rlf	??_led_increase+1,f
 10108  07B2  082C               	movf	??_led_increase,w
 10109  07B3  07A2               	addwf	increase@psrc,f
 10110  07B4  082D               	movf	??_led_increase+1,w
 10111  07B5  3DA3               	addwfc	increase@psrc+1,f
 10112  07B6  082B               	movf	led_increase@delt,w
 10113  07B7  00A4               	movwf	increase@delt
 10114  07B8  30E8               	movlw	232
 10115  07B9  00A5               	movwf	increase@max
 10116  07BA  3003               	movlw	3
 10117  07BB  00A6               	movwf	increase@max+1
 10118  07BC  27D3  3184         	fcall	_increase
 10119                           
 10120                           ;app_led.c: 2163: target_bright[chn] = m_led_para.ble_para.manual_para.mBright[chn];
 10121  07BE  0830               	movf	led_increase@chn,w
 10122  07BF  00AC               	movwf	??_led_increase
 10123  07C0  3088               	movlw	136
 10124  07C1  01AD               	clrf	??_led_increase+1
 10125  07C2  35AC               	lslf	??_led_increase,f
 10126  07C3  0DAD               	rlf	??_led_increase+1,f
 10127  07C4  00AE               	movwf	??_led_increase+2
 10128  07C5  3023               	movlw	35
 10129  07C6  00AF               	movwf	??_led_increase+3
 10130  07C7  082C               	movf	??_led_increase,w
 10131  07C8  072E               	addwf	??_led_increase+2,w
 10132  07C9  0086               	movwf	6
 10133  07CA  082D               	movf	??_led_increase+1,w
 10134  07CB  3D2F               	addwfc	??_led_increase+3,w
 10135  07CC  0087               	movwf	7
 10136  07CD  3530               	lslf	led_increase@chn,w
 10137  07CE  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 10138  07CF  0084               	movwf	4
 10139  07D0  27F6               	fcall	PL6	;call to abstracted procedure
 10140                           
 10141                           ;app_led.c: 2164: led_prepare_to_save();
 10142  07D1  318F  2FD9         	ljmp	PL138
 10143  07D3                     __end_of_led_increase:	
 10144  07D3                     __ptext54:	
 10145 ;; *************** function _increase *****************
 10146 ;; Defined at:
 10147 ;;		line 3 in file "src/app_util.c"
 10148 ;; Parameters:    Size  Location     Type
 10149 ;;  psrc            2    2[BANK0 ] const PTR unsigned int 
 10150 ;;		 -> m_led_para.ble_para.manual_para.mBright(8), m_led_para.ble_para.manual_para(26), m_led_para(113), 
 10151 ;;  delt            1    4[BANK0 ] const unsigned char 
 10152 ;;  max             2    5[BANK0 ] const unsigned int 
 10153 ;; Auto vars:     Size  Location     Type
 10154 ;;		None
 10155 ;; Return value:  Size  Location     Type
 10156 ;;                  1    wreg      void 
 10157 ;; Registers used:
 10158 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10159 ;; Tracked objects:
 10160 ;;		On entry : 1F/0
 10161 ;;		On exit  : 1F/0
 10162 ;;		Unchanged: 0/0
 10163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10164 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10166 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10167 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10168 ;;Total ram usage:        9 bytes
 10169 ;; Hardware stack levels used:    1
 10170 ;; Hardware stack levels required when called:    9
 10171 ;; This function calls:
 10172 ;;		Nothing
 10173 ;; This function is called by:
 10174 ;;		_led_increase
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           
 10179                           ;psect for function _increase
 10180  07D3                     _increase:	
 10181                           
 10182                           ;app_util.c: 5: if((*psrc) + delt < max)
 10183                           
 10184                           ;incstack = 0
 10185                           ; Regs used in _increase: [wreg+fsr1l+fsr1h+status,2+status,0]
 10186  07D3  0822               	movf	increase@psrc,w
 10187  07D4  0086               	movwf	6
 10188  07D5  0823               	movf	increase@psrc+1,w
 10189  07D6  0087               	movwf	7
 10190  07D7  3F40               	moviw [0]fsr1
 10191  07D8  00A7               	movwf	??_increase
 10192  07D9  3F41               	moviw [1]fsr1
 10193  07DA  00A8               	movwf	??_increase+1
 10194  07DB  0824               	movf	increase@delt,w
 10195  07DC  0727               	addwf	??_increase,w
 10196  07DD  00A9               	movwf	??_increase+2
 10197  07DE  0828               	movf	??_increase+1,w
 10198  07DF  1803               	skipnc
 10199  07E0  0A28               	incf	??_increase+1,w
 10200  07E1  00AA               	movwf	??_increase+3
 10201  07E2  0826               	movf	increase@max+1,w
 10202  07E3  022A               	subwf	??_increase+3,w
 10203  07E4  1D03               	skipz
 10204  07E5  2FE8               	goto	u2925
 10205  07E6  0825               	movf	increase@max,w
 10206  07E7  0229               	subwf	??_increase+2,w
 10207  07E8                     u2925:	
 10208                           
 10209                           ;app_util.c: 6: {
 10210                           ;app_util.c: 7: (*psrc) += delt;
 10211  07E8  0822               	movf	increase@psrc,w
 10212  07E9  0086               	movwf	6
 10213  07EA  0823               	movf	increase@psrc+1,w
 10214  07EB  0087               	movwf	7
 10215  07EC  1803               	skipnc
 10216  07ED  2FF1               	goto	L19
 10217  07EE  0824               	movf	increase@delt,w
 10218                           
 10219                           ;app_util.c: 8: }
 10220  07EF  318F  2FBF         	ljmp	PL122	;call to abstracted procedure
 10221  07F1                     L19:	
 10222                           ;app_util.c: 9: else
 10223                           ;app_util.c: 10: {
 10224                           ;app_util.c: 11: (*psrc) = max;
 10225                           
 10226  07F1  0825               	movf	increase@max,w
 10227  07F2  3FC0               	movwi [0]fsr1
 10228  07F3  0826               	movf	increase@max+1,w
 10229  07F4  3FC1               	movwi [1]fsr1
 10230  07F5  0008               	return
 10231  07F6                     __end_of_increase:	
 10232  07F6                     PL6:	
 10233  07F6  0185               	clrf	5
 10234  07F7  3F40               	moviw [0]fsr1
 10235  07F8  3F80               	movwi [0]fsr0
 10236  07F9  3F41               	moviw [1]fsr1
 10237  07FA  3F81               	movwi [1]fsr0
 10238  07FB  0008               	return
 10239  07FC                     __end_ofPL6:	
 10240                           
 10241                           	psect	text24
 10242  10C6                     __ptext24:	
 10243 ;; *************** function _led_para_default *****************
 10244 ;; Defined at:
 10245 ;;		line 171 in file "src/app_led.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;		None
 10248 ;; Auto vars:     Size  Location     Type
 10249 ;;  j               1   21[BANK0 ] unsigned char 
 10250 ;;  i               1   23[BANK0 ] unsigned char 
 10251 ;;  i               1   22[BANK0 ] unsigned char 
 10252 ;;  i               1   20[BANK0 ] unsigned char 
 10253 ;; Return value:  Size  Location     Type
 10254 ;;                  1    wreg      void 
 10255 ;; Registers used:
 10256 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10257 ;; Tracked objects:
 10258 ;;		On entry : 1F/0
 10259 ;;		On exit  : 1F/0
 10260 ;;		Unchanged: 0/0
 10261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10263 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10266 ;;Total ram usage:       14 bytes
 10267 ;; Hardware stack levels used:    1
 10268 ;; Hardware stack levels required when called:   10
 10269 ;; This function calls:
 10270 ;;		_memset
 10271 ;; This function is called by:
 10272 ;;		_led_para_init
 10273 ;; This function uses a non-reentrant model
 10274 ;;
 10275                           
 10276                           
 10277                           ;psect for function _led_para_default
 10278  10C6                     _led_para_default:	
 10279                           
 10280                           ;app_led.c: 173: memset(&m_led_para, 0, sizeof(m_led_para));
 10281                           
 10282                           ;incstack = 0
 10283                           ; Regs used in _led_para_default: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10284  10C6  307F               	movlw	127
 10285  10C7  00A2               	movwf	memset@p1
 10286  10C8  3023               	movlw	35
 10287  10C9  00A3               	movwf	memset@p1+1
 10288  10CA  3071               	movlw	113
 10289  10CB  01A4               	clrf	memset@c
 10290  10CC  01A5               	clrf	memset@c+1
 10291  10CD  00A6               	movwf	memset@n
 10292  10CE  01A7               	clrf	memset@n+1
 10293  10CF  218C  3190         	fcall	_memset
 10294                           
 10295                           ;app_led.c: 177: m_led_para.last_mode = 1;
 10296  10D1  307F               	movlw	127
 10297  10D2  0086               	movwf	6
 10298  10D3  3023               	movlw	35
 10299  10D4  0087               	movwf	7
 10300  10D5  21C1  3190         	fcall	PL142	;call to abstracted procedure
 10301                           
 10302                           ;app_led.c: 178: m_led_para.all_bright = 1000;
 10303  10D7  21B4               	fcall	PL92	;call to abstracted procedure
 10304  10D8  318F  2785  3190   	fcall	PL32	;call to abstracted procedure
 10305  10DB  082A               	movf	??_led_para_default,w
 10306  10DC  3FC0               	movwi [0]fsr1
 10307  10DD  082B               	movf	??_led_para_default+1,w
 10308  10DE  3FC1               	movwi [1]fsr1
 10309                           
 10310                           ;app_led.c: 179: m_led_para.blue_bright = 1000;
 10311  10DF  21B4               	fcall	PL92	;call to abstracted procedure
 10312  10E0  3186  26D5  3190   	fcall	PL26	;call to abstracted procedure
 10313  10E3  082A               	movf	??_led_para_default,w
 10314  10E4  3FC0               	movwi [0]fsr1
 10315  10E5  082B               	movf	??_led_para_default+1,w
 10316  10E6  3FC1               	movwi [1]fsr1
 10317                           
 10318                           ;app_led.c: 184: m_led_para.ble_para.auto_para.sunrise_start_hour = 7;
 10319  10E7  30A0               	movlw	160
 10320  10E8  0086               	movwf	6
 10321  10E9  3023               	movlw	35
 10322  10EA  0087               	movwf	7
 10323  10EB  3007               	movlw	7
 10324  10EC  0081               	movwf	1
 10325                           
 10326                           ;app_led.c: 186: m_led_para.ble_para.auto_para.sunrise_end_hour = 8;
 10327  10ED  30A2               	movlw	162
 10328  10EE  0086               	movwf	6
 10329  10EF  3008               	movlw	8
 10330  10F0  0081               	movwf	1
 10331                           
 10332                           ;app_led.c: 188: for(uint8_t i = 0; i < 4; i++)
 10333  10F1  01B4               	clrf	led_para_default@i
 10334  10F2                     l4681:	
 10335                           
 10336                           ;app_led.c: 189: {
 10337                           ;app_led.c: 190: m_led_para.ble_para.auto_para.day_bright[i] = 100;
 10338  10F2  0834               	movf	led_para_default@i,w
 10339  10F3  00AA               	movwf	??_led_para_default
 10340  10F4  30A4               	movlw	164
 10341  10F5  21A3  3190         	fcall	PL12	;call to abstracted procedure
 10342  10F7  3004               	movlw	4
 10343  10F8  0AB4               	incf	led_para_default@i,f
 10344  10F9  0234               	subwf	led_para_default@i,w
 10345  10FA  1C03               	skipc
 10346  10FB  28F2               	goto	l4681
 10347                           
 10348                           ;app_led.c: 191: }
 10349                           ;app_led.c: 192: m_led_para.ble_para.auto_para.sunset_start_hour = 17;
 10350  10FC  30A8               	movlw	168
 10351  10FD  0086               	movwf	6
 10352  10FE  3023               	movlw	35
 10353  10FF  0087               	movwf	7
 10354  1100  3011               	movlw	17
 10355  1101  0081               	movwf	1
 10356                           
 10357                           ;app_led.c: 194: m_led_para.ble_para.auto_para.sunset_end_hour = 18;
 10358  1102  30AA               	movlw	170
 10359  1103  0086               	movwf	6
 10360  1104  3012               	movlw	18
 10361  1105  0081               	movwf	1
 10362                           
 10363                           ;app_led.c: 196: m_led_para.ble_para.auto_para.night_bright[3] = 5;
 10364  1106  30AF               	movlw	175
 10365  1107  0086               	movwf	6
 10366  1108  3005               	movlw	5
 10367  1109  0081               	movwf	1
 10368                           
 10369                           ;app_led.c: 197: m_led_para.ble_para.auto_para.turnoff_enabled = 1;
 10370  110A  30B0               	movlw	176
 10371  110B  0086               	movwf	6
 10372  110C  3001               	movlw	1
 10373  110D  0081               	movwf	1
 10374                           
 10375                           ;app_led.c: 198: m_led_para.ble_para.auto_para.turnoff_hour = 22;
 10376  110E  30B1               	movlw	177
 10377  110F  0086               	movwf	6
 10378  1110  3016               	movlw	22
 10379  1111  0081               	movwf	1
 10380                           
 10381                           ;app_led.c: 201: m_led_para.ble_para.manual_para.mOn = 1;
 10382  1112  307F               	movlw	127
 10383  1113  0086               	movwf	6
 10384  1114  3147               	addfsr 1,7
 10385  1115  1401               	bsf	1,0
 10386                           
 10387                           ;app_led.c: 202: for(uint8_t i = 0; i < 4; i++)
 10388  1116  01B6               	clrf	led_para_default@i_1199
 10389  1117                     l4695:	
 10390                           
 10391                           ;app_led.c: 203: {
 10392                           ;app_led.c: 204: m_led_para.ble_para.manual_para.mBright[i] = 1000;
 10393  1117  30E8               	movlw	232
 10394  1118  00AA               	movwf	??_led_para_default
 10395  1119  3003               	movlw	3
 10396  111A  00AB               	movwf	??_led_para_default+1
 10397  111B  0836               	movf	led_para_default@i_1199,w
 10398  111C  00AC               	movwf	??_led_para_default+2
 10399  111D  3088               	movlw	136
 10400  111E  01AD               	clrf	??_led_para_default+3
 10401  111F  21B9  3190         	fcall	PL102	;call to abstracted procedure
 10402  1121  0086               	movwf	6
 10403  1122  082D               	movf	??_led_para_default+3,w
 10404  1123  3D2F               	addwfc	??_led_para_default+5,w
 10405  1124  0087               	movwf	7
 10406  1125  082A               	movf	??_led_para_default,w
 10407  1126  3FC0               	movwi [0]fsr1
 10408  1127  082B               	movf	??_led_para_default+1,w
 10409  1128  3FC1               	movwi [1]fsr1
 10410                           
 10411                           ;app_led.c: 205: for(uint8_t j = 0; j < 4; j++)
 10412  1129  01B5               	clrf	led_para_default@j
 10413  112A                     l4703:	
 10414                           
 10415                           ;app_led.c: 206: {
 10416                           ;app_led.c: 207: m_led_para.ble_para.manual_para.mCustomBright[j][i] = 100;
 10417  112A  0836               	movf	led_para_default@i_1199,w
 10418  112B  00AA               	movwf	??_led_para_default
 10419  112C  01AB               	clrf	??_led_para_default+1
 10420  112D  0835               	movf	led_para_default@j,w
 10421  112E  00AC               	movwf	??_led_para_default+2
 10422  112F  3090               	movlw	144
 10423  1130  01AD               	clrf	??_led_para_default+3
 10424  1131  35AC               	lslf	??_led_para_default+2,f
 10425  1132  0DAD               	rlf	??_led_para_default+3,f
 10426  1133  21B9  3190         	fcall	PL102	;call to abstracted procedure
 10427  1135  00B0               	movwf	??_led_para_default+6
 10428  1136  082D               	movf	??_led_para_default+3,w
 10429  1137  3D2F               	addwfc	??_led_para_default+5,w
 10430  1138  00B1               	movwf	??_led_para_default+7
 10431  1139  082A               	movf	??_led_para_default,w
 10432  113A  0730               	addwf	??_led_para_default+6,w
 10433  113B  00B2               	movwf	??_led_para_default+8
 10434  113C  082B               	movf	??_led_para_default+1,w
 10435  113D  3D31               	addwfc	??_led_para_default+7,w
 10436  113E  00B3               	movwf	??_led_para_default+9
 10437  113F  0832               	movf	??_led_para_default+8,w
 10438  1140  0086               	movwf	6
 10439  1141  0833               	movf	??_led_para_default+9,w
 10440  1142  0087               	movwf	7
 10441  1143  3064               	movlw	100
 10442  1144  0081               	movwf	1
 10443  1145  3004               	movlw	4
 10444  1146  0AB5               	incf	led_para_default@j,f
 10445  1147  0235               	subwf	led_para_default@j,w
 10446  1148  1C03               	skipc
 10447  1149  292A               	goto	l4703
 10448  114A  3004               	movlw	4
 10449  114B  0AB6               	incf	led_para_default@i_1199,f
 10450  114C  0236               	subwf	led_para_default@i_1199,w
 10451  114D  1C03               	skipc
 10452  114E  2917               	goto	l4695
 10453                           
 10454                           ;app_led.c: 208: }
 10455                           ;app_led.c: 209: }
 10456                           ;app_led.c: 211: m_led_para.ble_para.pro_para.point_count = 6;
 10457  114F  30B3               	movlw	179
 10458  1150  0086               	movwf	6
 10459  1151  3023               	movlw	35
 10460  1152  0087               	movwf	7
 10461  1153  3006               	movlw	6
 10462  1154  0081               	movwf	1
 10463                           
 10464                           ;app_led.c: 212: m_led_para.ble_para.pro_para.points[0].hour = 7;
 10465  1155  30B4               	movlw	180
 10466  1156  0086               	movwf	6
 10467  1157  3007               	movlw	7
 10468  1158  0081               	movwf	1
 10469                           
 10470                           ;app_led.c: 214: m_led_para.ble_para.pro_para.points[1].hour = 8;
 10471  1159  30BA               	movlw	186
 10472  115A  0086               	movwf	6
 10473  115B  3008               	movlw	8
 10474  115C  0081               	movwf	1
 10475                           
 10476                           ;app_led.c: 216: m_led_para.ble_para.pro_para.points[2].hour = 17;
 10477  115D  30C0               	movlw	192
 10478  115E  0086               	movwf	6
 10479  115F  3011               	movlw	17
 10480  1160  0081               	movwf	1
 10481                           
 10482                           ;app_led.c: 218: m_led_para.ble_para.pro_para.points[3].hour = 18;
 10483  1161  30C6               	movlw	198
 10484  1162  0086               	movwf	6
 10485  1163  3012               	movlw	18
 10486  1164  0081               	movwf	1
 10487                           
 10488                           ;app_led.c: 220: m_led_para.ble_para.pro_para.points[4].hour = 22;
 10489  1165  30CC               	movlw	204
 10490  1166  0086               	movwf	6
 10491  1167  3016               	movlw	22
 10492  1168  0081               	movwf	1
 10493                           
 10494                           ;app_led.c: 222: m_led_para.ble_para.pro_para.points[5].hour = 22;
 10495  1169  30D2               	movlw	210
 10496  116A  0086               	movwf	6
 10497  116B  3016               	movlw	22
 10498  116C  0081               	movwf	1
 10499                           
 10500                           ;app_led.c: 223: m_led_para.ble_para.pro_para.points[5].minuite = 30;
 10501  116D  30D3               	movlw	211
 10502  116E  0086               	movwf	6
 10503  116F  301E               	movlw	30
 10504  1170  0081               	movwf	1
 10505                           
 10506                           ;app_led.c: 224: for(uint8_t i = 0; i < 4; i++)
 10507  1171  01B7               	clrf	led_para_default@i_1206
 10508  1172                     l4721:	
 10509                           
 10510                           ;app_led.c: 225: {
 10511                           ;app_led.c: 227: m_led_para.ble_para.pro_para.points[1].bright[i] = 100;
 10512  1172  0837               	movf	led_para_default@i_1206,w
 10513  1173  00AA               	movwf	??_led_para_default
 10514  1174  30BC               	movlw	188
 10515  1175  21A3  3190         	fcall	PL12	;call to abstracted procedure
 10516                           
 10517                           ;app_led.c: 228: m_led_para.ble_para.pro_para.points[2].bright[i] = 100;
 10518  1177  0837               	movf	led_para_default@i_1206,w
 10519  1178  00AA               	movwf	??_led_para_default
 10520  1179  30C2               	movlw	194
 10521  117A  21A3  3190         	fcall	PL12	;call to abstracted procedure
 10522  117C  3004               	movlw	4
 10523  117D  0AB7               	incf	led_para_default@i_1206,f
 10524  117E  0237               	subwf	led_para_default@i_1206,w
 10525  117F  1C03               	skipc
 10526  1180  2972               	goto	l4721
 10527                           
 10528                           ;app_led.c: 232: }
 10529                           ;app_led.c: 233: m_led_para.ble_para.pro_para.points[3].bright[3] = 5;
 10530  1181  30CB               	movlw	203
 10531  1182  0086               	movwf	6
 10532  1183  3023               	movlw	35
 10533  1184  0087               	movwf	7
 10534  1185  3005               	movlw	5
 10535  1186  0081               	movwf	1
 10536                           
 10537                           ;app_led.c: 234: m_led_para.ble_para.pro_para.points[4].bright[3] = 5;
 10538  1187  30D1               	movlw	209
 10539  1188  0086               	movwf	6
 10540  1189  3005               	movlw	5
 10541  118A  0081               	movwf	1
 10542  118B  0008               	return
 10543  118C                     __end_of_led_para_default:	
 10544  118C                     __ptext25:	
 10545 ;; *************** function _memset *****************
 10546 ;; Defined at:
 10547 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\memset.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;  p1              2    2[BANK0 ] PTR void 
 10550 ;;		 -> m_led_para(113), 
 10551 ;;  c               2    4[BANK0 ] int 
 10552 ;;  n               2    6[BANK0 ] unsigned int 
 10553 ;; Auto vars:     Size  Location     Type
 10554 ;;  p               2    8[BANK0 ] PTR unsigned char 
 10555 ;;		 -> m_led_para(113), 
 10556 ;; Return value:  Size  Location     Type
 10557 ;;                  2    2[BANK0 ] PTR void 
 10558 ;; Registers used:
 10559 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10560 ;; Tracked objects:
 10561 ;;		On entry : 1F/0
 10562 ;;		On exit  : 1F/0
 10563 ;;		Unchanged: 0/0
 10564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10565 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10566 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10568 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10569 ;;Total ram usage:        8 bytes
 10570 ;; Hardware stack levels used:    1
 10571 ;; Hardware stack levels required when called:    9
 10572 ;; This function calls:
 10573 ;;		Nothing
 10574 ;; This function is called by:
 10575 ;;		_led_para_default
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           
 10580                           ;psect for function _memset
 10581  118C                     _memset:	
 10582                           
 10583                           ;incstack = 0
 10584                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 10585  118C  0823               	movf	memset@p1+1,w
 10586  118D  00A9               	movwf	memset@p+1
 10587  118E  0822               	movf	memset@p1,w
 10588  118F  00A8               	movwf	memset@p
 10589  1190                     l4073:	
 10590  1190  3001               	movlw	1
 10591  1191  02A6               	subwf	memset@n,f
 10592  1192  3000               	movlw	0
 10593  1193  3BA7               	subwfb	memset@n+1,f
 10594  1194  0F26               	incfsz	memset@n,w
 10595  1195  2999               	goto	l4069
 10596  1196  0A27               	incf	memset@n+1,w
 10597  1197  1903               	btfsc	3,2
 10598  1198  0008               	return
 10599  1199                     l4069:	
 10600  1199  0828               	movf	memset@p,w
 10601  119A  0086               	movwf	6
 10602  119B  0829               	movf	memset@p+1,w
 10603  119C  0087               	movwf	7
 10604  119D  0824               	movf	memset@c,w
 10605  119E  0081               	movwf	1
 10606  119F  0AA8               	incf	memset@p,f
 10607  11A0  1903               	skipnz
 10608  11A1  0AA9               	incf	memset@p+1,f
 10609  11A2  2990               	goto	l4073
 10610  11A3                     __end_of_memset:	
 10611  11A3                     PL12:	
 10612  11A3  01AB               	clrf	??_led_para_default+1
 10613  11A4  00AC               	movwf	??_led_para_default+2
 10614  11A5  3023               	movlw	35
 10615  11A6  00AD               	movwf	??_led_para_default+3
 10616  11A7  082A               	movf	??_led_para_default,w
 10617  11A8  072C               	addwf	??_led_para_default+2,w
 10618  11A9  00AE               	movwf	??_led_para_default+4
 10619  11AA  082B               	movf	??_led_para_default+1,w
 10620  11AB  3D2D               	addwfc	??_led_para_default+3,w
 10621  11AC  00AF               	movwf	??_led_para_default+5
 10622  11AD  082E               	movf	??_led_para_default+4,w
 10623  11AE  0086               	movwf	6
 10624  11AF  082F               	movf	??_led_para_default+5,w
 10625  11B0  0087               	movwf	7
 10626  11B1  3064               	movlw	100
 10627  11B2  0081               	movwf	1
 10628  11B3  0008               	return
 10629  11B4                     __end_ofPL12:	
 10630  11B4                     PL92:	
 10631  11B4  30E8               	movlw	232
 10632  11B5  00AA               	movwf	??_led_para_default
 10633  11B6  3003               	movlw	3
 10634  11B7  00AB               	movwf	??_led_para_default+1
 10635  11B8  0008               	return
 10636  11B9                     __end_ofPL92:	
 10637  11B9                     PL102:	
 10638  11B9  35AC               	lslf	??_led_para_default+2,f
 10639  11BA  0DAD               	rlf	??_led_para_default+3,f
 10640  11BB  00AE               	movwf	??_led_para_default+4
 10641  11BC  3023               	movlw	35
 10642  11BD  00AF               	movwf	??_led_para_default+5
 10643  11BE  082C               	movf	??_led_para_default+2,w
 10644  11BF  072E               	addwf	??_led_para_default+4,w
 10645  11C0  0008               	return
 10646  11C1                     __end_ofPL102:	
 10647  11C1                     PL142:	
 10648  11C1  3141               	addfsr 1,1
 10649  11C2  0801               	movf	1,w
 10650  11C3  39F3               	andlw	-13
 10651  11C4  3804               	iorlw	4
 10652  11C5  0081               	movwf	1
 10653  11C6  0008               	return
 10654  11C7                     __end_ofPL142:	
 10655                           
 10656                           	psect	text36
 10657  0C2C                     __ptext36:	
 10658 ;; *************** function _ble_decode *****************
 10659 ;; Defined at:
 10660 ;;		line 284 in file "src/app_ble.c"
 10661 ;; Parameters:    Size  Location     Type
 10662 ;;		None
 10663 ;; Auto vars:     Size  Location     Type
 10664 ;;		None
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  1    wreg      void 
 10667 ;; Registers used:
 10668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10669 ;; Tracked objects:
 10670 ;;		On entry : 1F/2
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10677 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10678 ;;Total ram usage:        2 bytes
 10679 ;; Hardware stack levels used:    1
 10680 ;; Hardware stack levels required when called:   11
 10681 ;; This function calls:
 10682 ;;		___wmul
 10683 ;;		_ble_ota_ack
 10684 ;;		_ble_send_data
 10685 ;;		_led_decrease
 10686 ;;		_led_increase
 10687 ;;		_led_set_bright
 10688 ;;		_led_set_custom
 10689 ;;		_led_set_cycle
 10690 ;;		_led_set_mode
 10691 ;;		_led_set_power
 10692 ;;		_led_set_preview
 10693 ;;		_led_set_pro
 10694 ;;		_led_set_time
 10695 ;;		_led_start_flash
 10696 ;;		_led_start_preview
 10697 ;;		_led_stop_preview
 10698 ;; This function is called by:
 10699 ;;		_ble_process
 10700 ;; This function uses a non-reentrant model
 10701 ;;
 10702                           
 10703                           
 10704                           ;psect for function _ble_decode
 10705  0C2C                     _ble_decode:	
 10706  0C2C                     l6003:	
 10707                           ;incstack = 0
 10708                           ; Regs used in _ble_decode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10709                           
 10710                           
 10711                           ;app_ble.c: 286: if(rx_buf[0] != 0x68 || checksum != 0)
 10712  0C2C  3068               	movlw	104
 10713  0C2D  0023               	movlb	3	; select bank3
 10714  0C2E  0620               	xorwf	_rx_buf^(0+384),w
 10715  0C2F  1D03               	btfss	3,2
 10716  0C30  0008               	return
 10717  0C31  0020               	movlb	0	; select bank0
 10718  0C32  0863               	movf	_checksum,w
 10719  0C33  1D03               	btfss	3,2
 10720  0C34  0008               	return
 10721  0C35  2CF6               	goto	l6095
 10722  0C36                     l6007:	
 10723                           
 10724                           ;app_ble.c: 295: if(index == 4)
 10725  0C36  3004               	movlw	4
 10726  0C37  0020               	movlb	0	; select bank0
 10727  0C38  0664               	xorwf	_index,w
 10728  0C39  1D03               	btfss	3,2
 10729  0C3A  0008               	return
 10730                           
 10731                           ;app_ble.c: 296: {
 10732                           ;app_ble.c: 297: if(led_set_mode(rx_buf[2]))
 10733  0C3B  0023               	movlb	3	; select bank3
 10734  0C3C  0822               	movf	(_rx_buf^(0+384)+2),w
 10735  0C3D  2502  318C         	fcall	_led_set_mode
 10736  0C3F                     L16:	
 10737  0C3F  3A00               	xorlw	0
 10738  0C40  1903               	skipnz
 10739  0C41  0008               	return
 10740  0C42                     l6011:	
 10741                           
 10742                           ;app_ble.c: 298: {
 10743                           ;app_ble.c: 299: ble_send_data();
 10744  0C42  318A  2AAB         	ljmp	l4361
 10745  0C44                     l6013:	
 10746                           
 10747                           ;app_ble.c: 304: if(index == 4)
 10748  0C44  3004               	movlw	4
 10749  0C45  0020               	movlb	0	; select bank0
 10750  0C46  0664               	xorwf	_index,w
 10751  0C47  1D03               	btfss	3,2
 10752  0C48  0008               	return
 10753                           
 10754                           ;app_ble.c: 305: {
 10755                           ;app_ble.c: 306: if(led_set_power(rx_buf[2]))
 10756  0C49  0023               	movlb	3	; select bank3
 10757  0C4A  0822               	movf	(_rx_buf^(0+384)+2),w
 10758  0C4B  27E3  318C         	fcall	_led_set_power
 10759  0C4D  2C3F               	goto	L16
 10760  0C4E                     l6019:	
 10761                           
 10762                           ;app_ble.c: 313: if(index == 3 + 2 * 4)
 10763  0C4E  300B               	movlw	11
 10764  0C4F  0020               	movlb	0	; select bank0
 10765  0C50  0664               	xorwf	_index,w
 10766  0C51  1D03               	btfss	3,2
 10767  0C52  0008               	return
 10768                           
 10769                           ;app_ble.c: 314: {
 10770                           ;app_ble.c: 315: led_set_bright(&rx_buf[2]);
 10771  0C53  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
 10772  0C54  319E  2EC2         	ljmp	_led_set_bright
 10773  0C56                     l6023:	
 10774                           
 10775                           ;app_ble.c: 319: if(index == 3)
 10776  0C56  3003               	movlw	3
 10777  0C57  0020               	movlb	0	; select bank0
 10778  0C58  0664               	xorwf	_index,w
 10779  0C59  1D03               	btfss	3,2
 10780  0C5A  0008               	return
 10781  0C5B  2C42               	goto	l6011
 10782  0C5C                     l6027:	
 10783                           
 10784                           ;app_ble.c: 325: if(index == 4)
 10785  0C5C  3004               	movlw	4
 10786  0C5D  0020               	movlb	0	; select bank0
 10787  0C5E  0664               	xorwf	_index,w
 10788  0C5F  1D03               	btfss	3,2
 10789  0C60  0008               	return
 10790                           
 10791                           ;app_ble.c: 326: {
 10792                           ;app_ble.c: 327: if(led_set_custom(rx_buf[2]))
 10793  0C61  0023               	movlb	3	; select bank3
 10794  0C62  0822               	movf	(_rx_buf^(0+384)+2),w
 10795  0C63  2569  318C         	fcall	_led_set_custom
 10796  0C65  2C3F               	goto	L16
 10797  0C66                     l6033:	
 10798                           
 10799                           ;app_ble.c: 334: if(index == 2 * 4 + 14)
 10800  0C66  3016               	movlw	22
 10801  0C67  0020               	movlb	0	; select bank0
 10802  0C68  0664               	xorwf	_index,w
 10803  0C69  1D03               	btfss	3,2
 10804  0C6A  0008               	return
 10805                           
 10806                           ;app_ble.c: 335: {
 10807                           ;app_ble.c: 336: if(led_set_cycle(&rx_buf[2]))
 10808  0C6B  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
 10809  0C6C  25DA  318C         	fcall	_led_set_cycle
 10810  0C6E  2C3F               	goto	L16
 10811  0C6F                     l6039:	
 10812                           
 10813                           ;app_ble.c: 343: if(index == 5)
 10814  0C6F  3005               	movlw	5
 10815  0C70  0020               	movlb	0	; select bank0
 10816  0C71  0664               	xorwf	_index,w
 10817  0C72  1D03               	btfss	3,2
 10818  0C73  0008               	return
 10819                           
 10820                           ;app_ble.c: 344: {
 10821                           ;app_ble.c: 345: led_increase(rx_buf[2], rx_buf[3]);
 10822  0C74  0023               	movlb	3	; select bank3
 10823  0C75  0823               	movf	(_rx_buf^(0+384)+3),w
 10824  0C76  0020               	movlb	0	; select bank0
 10825  0C77  00AB               	movwf	led_increase@delt
 10826  0C78  0023               	movlb	3	; select bank3
 10827  0C79  0822               	movf	(_rx_buf^(0+384)+2),w
 10828  0C7A  3187  2F97         	ljmp	_led_increase
 10829  0C7C                     l6043:	
 10830                           
 10831                           ;app_ble.c: 349: if(index == 5)
 10832  0C7C  3005               	movlw	5
 10833  0C7D  0020               	movlb	0	; select bank0
 10834  0C7E  0664               	xorwf	_index,w
 10835  0C7F  1D03               	btfss	3,2
 10836  0C80  0008               	return
 10837                           
 10838                           ;app_ble.c: 350: {
 10839                           ;app_ble.c: 351: led_decrease(rx_buf[2], rx_buf[3]);
 10840  0C81  0023               	movlb	3	; select bank3
 10841  0C82  0823               	movf	(_rx_buf^(0+384)+3),w
 10842  0C83  0020               	movlb	0	; select bank0
 10843  0C84  00AB               	movwf	led_decrease@delt
 10844  0C85  0023               	movlb	3	; select bank3
 10845  0C86  0822               	movf	(_rx_buf^(0+384)+2),w
 10846  0C87  3188  2812         	ljmp	_led_decrease
 10847  0C89                     l6047:	
 10848                           
 10849                           ;app_ble.c: 355: if(index == 3 + 2 * 4)
 10850  0C89  300B               	movlw	11
 10851  0C8A  0020               	movlb	0	; select bank0
 10852  0C8B  0664               	xorwf	_index,w
 10853  0C8C  1D03               	btfss	3,2
 10854  0C8D  0008               	return
 10855                           
 10856                           ;app_ble.c: 356: {
 10857                           ;app_ble.c: 357: if(led_set_preview(&rx_buf[2]))
 10858  0C8E  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
 10859  0C8F  3190  2006  318C   	fcall	_led_set_preview
 10860  0C92  3A00               	xorlw	0
 10861  0C93  1903               	skipnz
 10862  0C94  0008               	return
 10863                           
 10864                           ;app_ble.c: 358: {
 10865                           ;app_ble.c: 359: led_start_preview();
 10866  0C95  2E05               	ljmp	l4619
 10867  0C96                     l6053:	
 10868                           
 10869                           ;app_ble.c: 364: if(index == 3)
 10870  0C96  3003               	movlw	3
 10871  0C97  0020               	movlb	0	; select bank0
 10872  0C98  0664               	xorwf	_index,w
 10873  0C99  1D03               	btfss	3,2
 10874  0C9A  0008               	return
 10875                           
 10876                           ;app_ble.c: 365: {
 10877                           ;app_ble.c: 366: led_stop_preview();
 10878  0C9B  2E09               	ljmp	l4623
 10879  0C9C                     l6057:	
 10880                           
 10881                           ;app_ble.c: 370: if(index == 10)
 10882  0C9C  300A               	movlw	10
 10883  0C9D  0020               	movlb	0	; select bank0
 10884  0C9E  0664               	xorwf	_index,w
 10885  0C9F  1D03               	btfss	3,2
 10886  0CA0  0008               	return
 10887                           
 10888                           ;app_ble.c: 371: {
 10889                           ;app_ble.c: 372: led_set_time(&rx_buf[2]);
 10890  0CA1  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
 10891  0CA2  2535  318C         	fcall	_led_set_time
 10892  0CA4  2C42               	goto	l6011
 10893  0CA5                     l6063:	
 10894                           
 10895                           ;app_ble.c: 377: if(index == 3)
 10896  0CA5  3003               	movlw	3
 10897  0CA6  0020               	movlb	0	; select bank0
 10898  0CA7  0664               	xorwf	_index,w
 10899  0CA8  1D03               	btfss	3,2
 10900  0CA9  0008               	return
 10901                           
 10902                           ;app_ble.c: 378: {
 10903                           ;app_ble.c: 379: led_start_flash();
 10904  0CAA  2E01               	ljmp	l4643
 10905  0CAB                     l6067:	
 10906                           
 10907                           ;app_ble.c: 383: if(rx_buf[2] >= 4 && rx_buf[2] <= 10 && index == rx_buf[2]*(2+4)+4)
 10908  0CAB  3004               	movlw	4
 10909  0CAC  0222               	subwf	(_rx_buf^(0+384)+2),w
 10910  0CAD  1C03               	skipc
 10911  0CAE  0008               	return
 10912  0CAF  300B               	movlw	11
 10913  0CB0  0222               	subwf	(_rx_buf^(0+384)+2),w
 10914  0CB1  1803               	skipnc
 10915  0CB2  0008               	return
 10916  0CB3  0822               	movf	(_rx_buf^(0+384)+2),w
 10917  0CB4  0020               	movlb	0	; select bank0
 10918  0CB5  3197  27BB  318C   	fcall	PL44	;call to abstracted procedure
 10919  0CB8  3196  26BF  318C   	fcall	___wmul
 10920  0CBB  0822               	movf	?___wmul,w
 10921  0CBC  3E04               	addlw	4
 10922  0CBD  00BA               	movwf	??_ble_decode
 10923  0CBE  3000               	movlw	0
 10924  0CBF  3D23               	addwfc	?___wmul+1,w
 10925  0CC0  00BB               	movwf	??_ble_decode+1
 10926  0CC1  0864               	movf	_index,w
 10927  0CC2  063A               	xorwf	??_ble_decode,w
 10928  0CC3  043B               	iorwf	??_ble_decode+1,w
 10929  0CC4  1D03               	skipz
 10930  0CC5  0008               	return
 10931                           
 10932                           ;app_ble.c: 384: {
 10933                           ;app_ble.c: 385: if(led_set_pro(&rx_buf[2]))
 10934  0CC6  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
 10935  0CC7  3188  2070  318C   	fcall	_led_set_pro
 10936  0CCA  2C3F               	goto	L16
 10937  0CCB                     l6077:	
 10938                           
 10939                           ;app_ble.c: 410: if(index == 5)
 10940  0CCB  3005               	movlw	5
 10941  0CCC  0020               	movlb	0	; select bank0
 10942  0CCD  0664               	xorwf	_index,w
 10943  0CCE  1D03               	btfss	3,2
 10944  0CCF  0008               	return
 10945                           
 10946                           ;app_ble.c: 411: {
 10947                           ;app_ble.c: 412: INTCONbits.GIE = 0;
 10948  0CD0  138B               	bcf	11,7	;volatile
 10949                           
 10950                           ;app_ble.c: 413: NVMADR = 8192 - 1;
 10951  0CD1  301F               	movlw	31
 10952  0CD2  0031               	movlb	17	; select bank17
 10953  0CD3  0092               	movwf	18	;volatile
 10954  0CD4  30FF               	movlw	255
 10955  0CD5  0091               	movwf	17	;volatile
 10956                           
 10957                           ;app_ble.c: 414: NVMCON1 = 0x94;
 10958  0CD6  3094               	movlw	148
 10959  0CD7  0095               	movwf	21	;volsfr
 10960                           
 10961                           ;app_ble.c: 415: NVMCON2 = 0x55;
 10962  0CD8  3055               	movlw	85
 10963  0CD9  0096               	movwf	22	;volsfr
 10964                           
 10965                           ;app_ble.c: 416: NVMCON2 = 0xAA;
 10966  0CDA  30AA               	movlw	170
 10967  0CDB  0096               	movwf	22	;volsfr
 10968                           
 10969                           ;app_ble.c: 417: NVMCON1bits.WR = 1;
 10970  0CDC  1495               	bsf	21,1	;volsfr
 10971                           
 10972                           ;app_ble.c: 418: __nop();
 10973  0CDD  0000               	nop
 10974                           
 10975                           ;app_ble.c: 419: __nop();
 10976  0CDE  0000               	nop
 10977  0CDF                     l509:	
 10978                           ;app_ble.c: 420: while(NVMCON1bits.WR);
 10979                           
 10980  0CDF  0031               	movlb	17	; select bank17
 10981  0CE0  1895               	btfsc	21,1	;volsfr
 10982  0CE1  2CDF               	goto	l509
 10983                           
 10984                           ;app_ble.c: 421: NVMCON1bits.WREN = 0;
 10985  0CE2  1115               	bcf	21,2	;volsfr
 10986                           
 10987                           ;app_ble.c: 422: INTCONbits.GIE = 1;
 10988  0CE3  178B               	bsf	11,7	;volatile
 10989                           
 10990                           ;app_ble.c: 423: ble_ota_ack();
 10991  0CE4  318A  2299  318C   	fcall	_ble_ota_ack
 10992                           
 10993                           ;app_ble.c: 424: _delay((unsigned long)((96)*(16000000/4000.0)));
 10994  0CE7  3002               	movlw	2
 10995  0CE8  0020               	movlb	0	; select bank0
 10996  0CE9  00BB               	movwf	??_ble_decode+1
 10997  0CEA  30F3               	movlw	243
 10998  0CEB  00BA               	movwf	??_ble_decode
 10999  0CEC  30B0               	movlw	176
 11000  0CED                     u6597:	
 11001  0CED  0B89               	decfsz	9,f
 11002  0CEE  2CED               	goto	u6597
 11003  0CEF  0BBA               	decfsz	??_ble_decode,f
 11004  0CF0  2CED               	goto	u6597
 11005  0CF1  0BBB               	decfsz	??_ble_decode+1,f
 11006  0CF2  2CED               	goto	u6597
 11007  0CF3  0000               	nop
 11008  0CF4  0001               	reset	;# 
 11009  0CF5  0008               	return
 11010  0CF6                     l6095:	
 11011  0CF6  0023               	movlb	3	; select bank3
 11012  0CF7  0821               	movf	(_rx_buf^(0+384)+1),w
 11013                           
 11014                           ; Switch size 1, requested type "space"
 11015                           ; Number of cases is 14, Range of values is 0 to 16
 11016                           ; switch strategies available:
 11017                           ; Name         Instructions Cycles
 11018                           ; direct_byte           40     6 (fixed)
 11019                           ; simple_byte           43    22 (average)
 11020                           ; jumptable            260     6 (fixed)
 11021                           ;	Chosen strategy is direct_byte
 11022  0CF8  0084               	movwf	4
 11023  0CF9  3011               	movlw	17
 11024  0CFA  0204               	subwf	4,w
 11025  0CFB  1803               	skipnc
 11026  0CFC  0008               	return
 11027  0CFD  3198               	movlp	high S6601
 11028  0CFE  3504               	lslf	4,w
 11029  0CFF  3E22               	addlw	low S6601
 11030  0D00  0082               	movwf	2
 11031  0D01                     l472:	
 11032  0D01  0008               	return
 11033  0D02                     __end_of_ble_decode:	
 11034  0D02                     __ptext46:	
 11035 ;; *************** function _led_set_mode *****************
 11036 ;; Defined at:
 11037 ;;		line 1995 in file "src/app_led.c"
 11038 ;; Parameters:    Size  Location     Type
 11039 ;;  m               1    wreg     unsigned char 
 11040 ;; Auto vars:     Size  Location     Type
 11041 ;;  m               1    8[BANK0 ] unsigned char 
 11042 ;; Return value:  Size  Location     Type
 11043 ;;                  1    wreg      unsigned char 
 11044 ;; Registers used:
 11045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11046 ;; Tracked objects:
 11047 ;;		On entry : 1F/3
 11048 ;;		On exit  : 1F/0
 11049 ;;		Unchanged: 0/0
 11050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11052 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11053 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11054 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11055 ;;Total ram usage:        2 bytes
 11056 ;; Hardware stack levels used:    1
 11057 ;; Hardware stack levels required when called:   10
 11058 ;; This function calls:
 11059 ;;		_led_prepare_to_save
 11060 ;;		_led_turnoff_ramp
 11061 ;;		_led_turnon_ramp
 11062 ;; This function is called by:
 11063 ;;		_ble_decode
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           
 11068                           ;psect for function _led_set_mode
 11069  0D02                     _led_set_mode:	
 11070                           
 11071                           ;incstack = 0
 11072                           ; Regs used in _led_set_mode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11073                           ;led_set_mode@m stored from wreg
 11074  0D02  0020               	movlb	0	; select bank0
 11075  0D03  00A8               	movwf	led_set_mode@m
 11076                           
 11077                           ;app_led.c: 1997: if(led_run_para.mFind || led_run_para.mPrev)
 11078  0D04  185D               	btfsc	_led_run_para,0
 11079  0D05  3400               	retlw	0
 11080  0D06  18DD               	btfsc	_led_run_para,1
 11081                           
 11082                           ;app_led.c: 1998: {
 11083                           ;app_led.c: 1999: return 0;
 11084  0D07  3400               	retlw	0
 11085                           
 11086                           ;app_led.c: 2000: }
 11087                           ;app_led.c: 2005: m_led_para.ble_para.mMode = m;
 11088  0D08  307F               	movlw	127
 11089  0D09  0086               	movwf	6
 11090  0D0A  3023               	movlw	35
 11091  0D0B  0087               	movwf	7
 11092  0D0C  3146               	addfsr 1,6
 11093  0D0D  0801               	movf	1,w
 11094  0D0E  0628               	xorwf	led_set_mode@m,w
 11095  0D0F  39FC               	andlw	-4
 11096  0D10  0628               	xorwf	led_set_mode@m,w
 11097  0D11  0081               	movwf	1
 11098                           
 11099                           ;app_led.c: 2006: if(m != 1 && m != 2)
 11100  0D12  0328               	decf	led_set_mode@m,w
 11101  0D13  1903               	btfsc	3,2
 11102  0D14  2D25               	goto	l4453
 11103  0D15  3002               	movlw	2
 11104  0D16  0628               	xorwf	led_set_mode@m,w
 11105  0D17  1903               	btfsc	3,2
 11106  0D18  2D25               	goto	l4453
 11107                           
 11108                           ;app_led.c: 2007: {
 11109                           ;app_led.c: 2008: if(m_led_para.ble_para.manual_para.mOn)
 11110  0D19  260C  318C         	fcall	PL54	;call to abstracted procedure
 11111  0D1B  1C01               	btfss	1,0
 11112  0D1C  2D21               	goto	l4451
 11113                           
 11114                           ;app_led.c: 2009: {
 11115                           ;app_led.c: 2018: led_turnon_ramp();
 11116  0D1D  3185  25F2  318C   	fcall	_led_turnon_ramp
 11117                           
 11118                           ;app_led.c: 2022: }
 11119  0D20  2D33               	goto	l4455
 11120  0D21                     l4451:	
 11121                           
 11122                           ;app_led.c: 2023: else
 11123                           ;app_led.c: 2024: {
 11124                           ;app_led.c: 2025: led_turnoff_ramp();
 11125  0D21  3186  2699  318C   	fcall	_led_turnoff_ramp
 11126  0D24  2D33               	goto	l4455
 11127  0D25                     l4453:	
 11128                           
 11129                           ;app_led.c: 2029: else
 11130                           ;app_led.c: 2030: {
 11131                           ;app_led.c: 2031: m_led_para.last_mode = m;
 11132  0D25  0828               	movf	led_set_mode@m,w
 11133  0D26  00A7               	movwf	??_led_set_mode
 11134  0D27  307F               	movlw	127
 11135  0D28  0086               	movwf	6
 11136  0D29  3023               	movlw	35
 11137  0D2A  0087               	movwf	7
 11138  0D2B  3141               	addfsr 1,1
 11139  0D2C  0DA7               	rlf	??_led_set_mode,f
 11140  0D2D  0DA7               	rlf	??_led_set_mode,f
 11141  0D2E  0801               	movf	1,w
 11142  0D2F  0627               	xorwf	??_led_set_mode,w
 11143  0D30  39F3               	andlw	-13
 11144  0D31  0627               	xorwf	??_led_set_mode,w
 11145  0D32  0081               	movwf	1
 11146  0D33                     l4455:	
 11147                           
 11148                           ;app_led.c: 2032: }
 11149                           ;app_led.c: 2034: led_prepare_to_save();
 11150  0D33  2568               	fcall	_led_prepare_to_save
 11151                           
 11152                           ;app_led.c: 2035: return 1;
 11153  0D34  3401               	retlw	1
 11154  0D35                     __end_of_led_set_mode:	
 11155  0D35                     __ptext40:	
 11156 ;; *************** function _led_set_time *****************
 11157 ;; Defined at:
 11158 ;;		line 2208 in file "src/app_led.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;  ptime           1    wreg     PTR const unsigned char 
 11161 ;;		 -> rx_buf(80), 
 11162 ;; Auto vars:     Size  Location     Type
 11163 ;;  ptime           1    7[BANK0 ] PTR const unsigned char 
 11164 ;;		 -> rx_buf(80), 
 11165 ;; Return value:  Size  Location     Type
 11166 ;;                  1    wreg      void 
 11167 ;; Registers used:
 11168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11169 ;; Tracked objects:
 11170 ;;		On entry : 1F/0
 11171 ;;		On exit  : 1F/0
 11172 ;;		Unchanged: 0/0
 11173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11175 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11177 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11178 ;;Total ram usage:        1 bytes
 11179 ;; Hardware stack levels used:    1
 11180 ;; Hardware stack levels required when called:   10
 11181 ;; This function calls:
 11182 ;;		_led_indicate_ble
 11183 ;;		_led_prepare_to_save
 11184 ;;		_led_turnoff_ramp
 11185 ;;		_led_turnon_ramp
 11186 ;;		_rtc_set
 11187 ;; This function is called by:
 11188 ;;		_ble_decode
 11189 ;; This function uses a non-reentrant model
 11190 ;;
 11191                           
 11192                           
 11193                           ;psect for function _led_set_time
 11194  0D35                     _led_set_time:	
 11195                           
 11196                           ;incstack = 0
 11197                           ; Regs used in _led_set_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11198                           ;led_set_time@ptime stored from wreg
 11199  0D35  00A7               	movwf	led_set_time@ptime
 11200                           
 11201                           ;app_led.c: 2210: rtc_set(ptime);
 11202  0D36  2553               	fcall	_rtc_set
 11203                           
 11204                           ;app_led.c: 2212: if(m_led_para.ble_para.mMode == 0)
 11205  0D37  3186  26AC  318C   	fcall	PL10	;call to abstracted procedure
 11206                           
 11207                           ;app_led.c: 2213: {
 11208                           ;app_led.c: 2214: if(m_led_para.ble_para.manual_para.mOn)
 11209  0D3A  3187  2747  318C   	fcall	PL118	;call to abstracted procedure
 11210  0D3D  1D03               	skipz
 11211  0D3E  2D4C               	goto	L17
 11212  0D3F  3147               	addfsr 1,7
 11213  0D40  1C01               	btfss	1,0
 11214  0D41  2D46               	goto	l4635
 11215                           
 11216                           ;app_led.c: 2215: {
 11217                           ;app_led.c: 2216: led_turnon_ramp();
 11218  0D42  3185  25F2  318C   	fcall	_led_turnon_ramp
 11219                           
 11220                           ;app_led.c: 2217: }
 11221  0D45  2D49               	goto	l4637
 11222  0D46                     l4635:	
 11223                           
 11224                           ;app_led.c: 2218: else
 11225                           ;app_led.c: 2219: {
 11226                           ;app_led.c: 2220: led_turnoff_ramp();
 11227  0D46  3186  2699  318C   	fcall	_led_turnoff_ramp
 11228  0D49                     l4637:	
 11229                           
 11230                           ;app_led.c: 2221: }
 11231                           ;app_led.c: 2222: }
 11232                           ;app_led.c: 2223: m_led_para.mState = 3;
 11233  0D49  3187  2747  318C   	fcall	PL118	;call to abstracted procedure
 11234  0D4C                     L17:	
 11235  0D4C  3003               	movlw	3
 11236  0D4D  3141               	addfsr 1,1
 11237  0D4E  0481               	iorwf	1,f
 11238                           
 11239                           ;app_led.c: 2224: led_indicate_ble();
 11240  0D4F  3186  26A5  318C   	fcall	_led_indicate_ble
 11241                           
 11242                           ;app_led.c: 2225: led_prepare_to_save();
 11243  0D52  2FD9               	ljmp	PL138
 11244  0D53                     __end_of_led_set_time:	
 11245  0D53                     __ptext41:	
 11246 ;; *************** function _rtc_set *****************
 11247 ;; Defined at:
 11248 ;;		line 110 in file "src/app_rtc.c"
 11249 ;; Parameters:    Size  Location     Type
 11250 ;;  ptime           1    wreg     PTR const unsigned char 
 11251 ;;		 -> rx_buf(80), 
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;  ptime           1    2[BANK0 ] PTR const unsigned char 
 11254 ;;		 -> rx_buf(80), 
 11255 ;;  i               1    3[BANK0 ] unsigned char 
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  1    wreg      void 
 11258 ;; Registers used:
 11259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11260 ;; Tracked objects:
 11261 ;;		On entry : 1F/0
 11262 ;;		On exit  : 1F/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11269 ;;Total ram usage:        2 bytes
 11270 ;; Hardware stack levels used:    1
 11271 ;; Hardware stack levels required when called:    9
 11272 ;; This function calls:
 11273 ;;		Nothing
 11274 ;; This function is called by:
 11275 ;;		_led_set_time
 11276 ;; This function uses a non-reentrant model
 11277 ;;
 11278                           
 11279                           
 11280                           ;psect for function _rtc_set
 11281  0D53                     _rtc_set:	
 11282                           
 11283                           ;incstack = 0
 11284                           ; Regs used in _rtc_set: [wreg-fsr1h+status,2+status,0]
 11285                           ;rtc_set@ptime stored from wreg
 11286  0D53  00A2               	movwf	rtc_set@ptime
 11287                           
 11288                           ;app_rtc.c: 112: (INTCONbits.GIE = 0);
 11289  0D54  138B               	bcf	11,7	;volatile
 11290                           
 11291                           ;app_rtc.c: 113: for(uint8_t i = 0; i < 7; i++)
 11292  0D55  01A3               	clrf	rtc_set@i
 11293  0D56                     l4027:	
 11294                           
 11295                           ;app_rtc.c: 114: {
 11296                           ;app_rtc.c: 115: m_current_time.array[i] = *ptime++;
 11297  0D56  0823               	movf	rtc_set@i,w
 11298  0D57  3EDF               	addlw	(low (_m_current_time| 0))& (0+255)
 11299  0D58  0086               	movwf	6
 11300  0D59  0187               	clrf	7
 11301  0D5A  0822               	movf	rtc_set@ptime,w
 11302  0D5B  0084               	movwf	4
 11303  0D5C  3001               	movlw	1	; select bank2/3
 11304  0D5D  0085               	movwf	5
 11305  0D5E  0800               	movf	0,w
 11306  0D5F  0081               	movwf	1
 11307  0D60  3007               	movlw	7
 11308  0D61  0AA2               	incf	rtc_set@ptime,f
 11309  0D62  0AA3               	incf	rtc_set@i,f
 11310  0D63  0223               	subwf	rtc_set@i,w
 11311  0D64  1C03               	skipc
 11312  0D65  2D56               	goto	l4027
 11313                           
 11314                           ;app_rtc.c: 116: }
 11315                           ;app_rtc.c: 117: (INTCONbits.GIE = 1);
 11316  0D66  178B               	bsf	11,7	;volatile
 11317  0D67  0008               	return
 11318  0D68                     __end_of_rtc_set:	
 11319  0D68                     __ptext56:	
 11320 ;; *************** function _led_prepare_to_save *****************
 11321 ;; Defined at:
 11322 ;;		line 1921 in file "src/app_led.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;		None
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;		None
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  1    wreg      void 
 11329 ;; Registers used:
 11330 ;;		wreg
 11331 ;; Tracked objects:
 11332 ;;		On entry : 1D/2
 11333 ;;		On exit  : 1F/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;Total ram usage:        0 bytes
 11341 ;; Hardware stack levels used:    1
 11342 ;; Hardware stack levels required when called:    9
 11343 ;; This function calls:
 11344 ;;		Nothing
 11345 ;; This function is called by:
 11346 ;;		_led_set_mode
 11347 ;;		_led_set_power
 11348 ;;		_led_set_bright
 11349 ;;		_led_set_custom
 11350 ;;		_led_set_cycle
 11351 ;;		_led_set_pro
 11352 ;;		_led_increase
 11353 ;;		_led_decrease
 11354 ;;		_led_set_time
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           
 11359                           ;psect for function _led_prepare_to_save
 11360  0D68                     _led_prepare_to_save:	
 11361                           
 11362                           ;app_led.c: 1923: led_run_para.mSave = 1;
 11363                           
 11364                           ;app_led.c: 1924: led_run_para.save_delay_count = 3;
 11365                           
 11366                           ;incstack = 0
 11367                           ; Regs used in _led_prepare_to_save: [wreg]
 11368  0D68  2FD9               	ljmp	PL138	;call to abstracted procedure
 11369  0D69                     __end_of_led_prepare_to_save:	
 11370  0D69                     __ptext50:	
 11371 ;; *************** function _led_set_custom *****************
 11372 ;; Defined at:
 11373 ;;		line 2096 in file "src/app_led.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;  idx             1    wreg     unsigned char 
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;  idx             1   24[BANK0 ] unsigned char 
 11378 ;;  i               1   25[BANK0 ] unsigned char 
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  1    wreg      unsigned char 
 11381 ;; Registers used:
 11382 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11383 ;; Tracked objects:
 11384 ;;		On entry : 1F/3
 11385 ;;		On exit  : 1F/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11389 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11390 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11391 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;Total ram usage:       17 bytes
 11393 ;; Hardware stack levels used:    1
 11394 ;; Hardware stack levels required when called:   10
 11395 ;; This function calls:
 11396 ;;		___lwdiv
 11397 ;;		_led_prepare_to_save
 11398 ;; This function is called by:
 11399 ;;		_ble_decode
 11400 ;; This function uses a non-reentrant model
 11401 ;;
 11402                           
 11403                           
 11404                           ;psect for function _led_set_custom
 11405  0D69                     _led_set_custom:	
 11406                           
 11407                           ;incstack = 0
 11408                           ; Regs used in _led_set_custom: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11409                           ;led_set_custom@idx stored from wreg
 11410  0D69  0020               	movlb	0	; select bank0
 11411  0D6A  00B8               	movwf	led_set_custom@idx
 11412                           
 11413                           ;app_led.c: 2108: if(m_led_para.ble_para.manual_para.mOn && idx < 4)
 11414  0D6B  260C  318C         	fcall	PL54	;call to abstracted procedure
 11415  0D6D  1C01               	btfss	1,0
 11416  0D6E  3400               	retlw	0
 11417  0D6F  3004               	movlw	4
 11418  0D70  0238               	subwf	led_set_custom@idx,w
 11419  0D71  1803               	skipnc
 11420  0D72  3400               	retlw	0
 11421                           
 11422                           ;app_led.c: 2109: {
 11423                           ;app_led.c: 2110: for(uint8_t i = 0; i < 4; i++)
 11424  0D73  01B9               	clrf	led_set_custom@i
 11425  0D74                     l4523:	
 11426                           
 11427                           ;app_led.c: 2111: {
 11428                           ;app_led.c: 2112: m_led_para.ble_para.manual_para.mCustomBright[idx][i] = m_led_para.ble
      +                          _para.manual_para.mBright[i]/10;
 11429  0D74  300A               	movlw	10
 11430  0D75  00A2               	movwf	___lwdiv@divisor
 11431  0D76  01A3               	clrf	___lwdiv@divisor+1
 11432  0D77  0839               	movf	led_set_custom@i,w
 11433  0D78  00A9               	movwf	??_led_set_custom
 11434  0D79  3088               	movlw	136
 11435  0D7A  01AA               	clrf	??_led_set_custom+1
 11436  0D7B  35A9               	lslf	??_led_set_custom,f
 11437  0D7C  0DAA               	rlf	??_led_set_custom+1,f
 11438  0D7D  00AB               	movwf	??_led_set_custom+2
 11439  0D7E  3023               	movlw	35
 11440  0D7F  00AC               	movwf	??_led_set_custom+3
 11441  0D80  0829               	movf	??_led_set_custom,w
 11442  0D81  072B               	addwf	??_led_set_custom+2,w
 11443  0D82  0086               	movwf	6
 11444  0D83  082A               	movf	??_led_set_custom+1,w
 11445  0D84  3D2C               	addwfc	??_led_set_custom+3,w
 11446  0D85  0087               	movwf	7
 11447  0D86  3F40               	moviw [0]fsr1
 11448  0D87  00A4               	movwf	___lwdiv@dividend
 11449  0D88  3F41               	moviw [1]fsr1
 11450  0D89  00A5               	movwf	___lwdiv@dividend+1
 11451  0D8A  25B5  318C         	fcall	___lwdiv
 11452  0D8C  0822               	movf	?___lwdiv,w
 11453  0D8D  00AD               	movwf	??_led_set_custom+4
 11454  0D8E  0839               	movf	led_set_custom@i,w
 11455  0D8F  00AE               	movwf	??_led_set_custom+5
 11456  0D90  01AF               	clrf	??_led_set_custom+6
 11457  0D91  0838               	movf	led_set_custom@idx,w
 11458  0D92  00B0               	movwf	??_led_set_custom+7
 11459  0D93  3090               	movlw	144
 11460  0D94  01B1               	clrf	??_led_set_custom+8
 11461  0D95  35B0               	lslf	??_led_set_custom+7,f
 11462  0D96  0DB1               	rlf	??_led_set_custom+8,f
 11463  0D97  35B0               	lslf	??_led_set_custom+7,f
 11464  0D98  0DB1               	rlf	??_led_set_custom+8,f
 11465  0D99  00B2               	movwf	??_led_set_custom+9
 11466  0D9A  3023               	movlw	35
 11467  0D9B  00B3               	movwf	??_led_set_custom+10
 11468  0D9C  0830               	movf	??_led_set_custom+7,w
 11469  0D9D  0732               	addwf	??_led_set_custom+9,w
 11470  0D9E  00B4               	movwf	??_led_set_custom+11
 11471  0D9F  0831               	movf	??_led_set_custom+8,w
 11472  0DA0  3D33               	addwfc	??_led_set_custom+10,w
 11473  0DA1  00B5               	movwf	??_led_set_custom+12
 11474  0DA2  082E               	movf	??_led_set_custom+5,w
 11475  0DA3  0734               	addwf	??_led_set_custom+11,w
 11476  0DA4  00B6               	movwf	??_led_set_custom+13
 11477  0DA5  082F               	movf	??_led_set_custom+6,w
 11478  0DA6  3D35               	addwfc	??_led_set_custom+12,w
 11479  0DA7  00B7               	movwf	??_led_set_custom+14
 11480  0DA8  0836               	movf	??_led_set_custom+13,w
 11481  0DA9  0086               	movwf	6
 11482  0DAA  0837               	movf	??_led_set_custom+14,w
 11483  0DAB  0087               	movwf	7
 11484  0DAC  082D               	movf	??_led_set_custom+4,w
 11485  0DAD  0081               	movwf	1
 11486  0DAE  3004               	movlw	4
 11487  0DAF  0AB9               	incf	led_set_custom@i,f
 11488  0DB0  0239               	subwf	led_set_custom@i,w
 11489  0DB1  1C03               	skipc
 11490  0DB2  2D74               	goto	l4523
 11491                           
 11492                           ;app_led.c: 2113: }
 11493                           ;app_led.c: 2114: led_prepare_to_save();
 11494  0DB3  2568               	fcall	_led_prepare_to_save
 11495                           
 11496                           ;app_led.c: 2115: return 1;
 11497  0DB4  3401               	retlw	1
 11498  0DB5                     __end_of_led_set_custom:	
 11499                           ;app_led.c: 2116: }
 11500                           ;app_led.c: 2117: return 0;
 11501                           
 11502  0DB5                     __ptext51:	
 11503 ;; *************** function ___lwdiv *****************
 11504 ;; Defined at:
 11505 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 11506 ;; Parameters:    Size  Location     Type
 11507 ;;  divisor         2    2[BANK0 ] unsigned int 
 11508 ;;  dividend        2    4[BANK0 ] unsigned int 
 11509 ;; Auto vars:     Size  Location     Type
 11510 ;;  quotient        2    6[BANK0 ] unsigned int 
 11511 ;;  counter         1    8[BANK0 ] unsigned char 
 11512 ;; Return value:  Size  Location     Type
 11513 ;;                  2    2[BANK0 ] unsigned int 
 11514 ;; Registers used:
 11515 ;;		wreg, status,2, status,0
 11516 ;; Tracked objects:
 11517 ;;		On entry : 1F/0
 11518 ;;		On exit  : 1F/0
 11519 ;;		Unchanged: 0/0
 11520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11521 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11522 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11524 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11525 ;;Total ram usage:        7 bytes
 11526 ;; Hardware stack levels used:    1
 11527 ;; Hardware stack levels required when called:    9
 11528 ;; This function calls:
 11529 ;;		Nothing
 11530 ;; This function is called by:
 11531 ;;		_led_set_custom
 11532 ;; This function uses a non-reentrant model
 11533 ;;
 11534                           
 11535                           
 11536                           ;psect for function ___lwdiv
 11537  0DB5                     ___lwdiv:	
 11538                           
 11539                           ;incstack = 0
 11540                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11541  0DB5  01A6               	clrf	___lwdiv@quotient
 11542  0DB6  01A7               	clrf	___lwdiv@quotient+1
 11543  0DB7  0822               	movf	___lwdiv@divisor,w
 11544  0DB8  0423               	iorwf	___lwdiv@divisor+1,w
 11545  0DB9  1903               	btfsc	3,2
 11546  0DBA  2DD5               	goto	l4217
 11547  0DBB  01A8               	clrf	___lwdiv@counter
 11548  0DBC                     L18:	
 11549  0DBC  0AA8               	incf	___lwdiv@counter,f
 11550  0DBD  1BA3               	btfsc	___lwdiv@divisor+1,7
 11551  0DBE  2DC2               	goto	l4205
 11552  0DBF  35A2               	lslf	___lwdiv@divisor,f
 11553  0DC0  0DA3               	rlf	___lwdiv@divisor+1,f
 11554  0DC1  2DBC               	goto	L18
 11555  0DC2                     l4205:	
 11556  0DC2  35A6               	lslf	___lwdiv@quotient,f
 11557  0DC3  0DA7               	rlf	___lwdiv@quotient+1,f
 11558  0DC4  0823               	movf	___lwdiv@divisor+1,w
 11559  0DC5  0225               	subwf	___lwdiv@dividend+1,w
 11560  0DC6  1D03               	skipz
 11561  0DC7  2DCA               	goto	u3145
 11562  0DC8  0822               	movf	___lwdiv@divisor,w
 11563  0DC9  0224               	subwf	___lwdiv@dividend,w
 11564  0DCA                     u3145:	
 11565  0DCA  1C03               	skipc
 11566  0DCB  2DD1               	goto	l4213
 11567  0DCC  0822               	movf	___lwdiv@divisor,w
 11568  0DCD  02A4               	subwf	___lwdiv@dividend,f
 11569  0DCE  0823               	movf	___lwdiv@divisor+1,w
 11570  0DCF  3BA5               	subwfb	___lwdiv@dividend+1,f
 11571  0DD0  1426               	bsf	___lwdiv@quotient,0
 11572  0DD1                     l4213:	
 11573  0DD1  36A3               	lsrf	___lwdiv@divisor+1,f
 11574  0DD2  0CA2               	rrf	___lwdiv@divisor,f
 11575  0DD3  0BA8               	decfsz	___lwdiv@counter,f
 11576  0DD4  2DC2               	goto	l4205
 11577  0DD5                     l4217:	
 11578  0DD5  0827               	movf	___lwdiv@quotient+1,w
 11579  0DD6  00A3               	movwf	?___lwdiv+1
 11580  0DD7  0826               	movf	___lwdiv@quotient,w
 11581  0DD8  00A2               	movwf	?___lwdiv
 11582  0DD9  0008               	return
 11583  0DDA                     __end_of___lwdiv:	
 11584  0DDA                     __ptext49:	
 11585 ;; *************** function _led_set_cycle *****************
 11586 ;; Defined at:
 11587 ;;		line 2120 in file "src/app_led.c"
 11588 ;; Parameters:    Size  Location     Type
 11589 ;;  pbuf            1    wreg     const PTR const unsigned
 11590 ;;		 -> rx_buf(80), 
 11591 ;; Auto vars:     Size  Location     Type
 11592 ;;  pbuf            1   11[BANK0 ] const PTR const unsigned
 11593 ;;		 -> rx_buf(80), 
 11594 ;;  i               1   12[BANK0 ] unsigned char 
 11595 ;;  len             1   10[BANK0 ] unsigned char 
 11596 ;; Return value:  Size  Location     Type
 11597 ;;                  1    wreg      unsigned char 
 11598 ;; Registers used:
 11599 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11600 ;; Tracked objects:
 11601 ;;		On entry : 1F/0
 11602 ;;		On exit  : 1F/0
 11603 ;;		Unchanged: 0/0
 11604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11606 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11607 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11608 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11609 ;;Total ram usage:       11 bytes
 11610 ;; Hardware stack levels used:    1
 11611 ;; Hardware stack levels required when called:   10
 11612 ;; This function calls:
 11613 ;;		_led_prepare_to_save
 11614 ;; This function is called by:
 11615 ;;		_ble_decode
 11616 ;; This function uses a non-reentrant model
 11617 ;;
 11618                           
 11619                           
 11620                           ;psect for function _led_set_cycle
 11621  0DDA                     _led_set_cycle:	
 11622                           
 11623                           ;incstack = 0
 11624                           ; Regs used in _led_set_cycle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11625                           ;led_set_cycle@pbuf stored from wreg
 11626  0DDA  00AB               	movwf	led_set_cycle@pbuf
 11627                           
 11628                           ;app_led.c: 2126: uint8_t len = sizeof(m_led_para.ble_para.auto_para.array);
 11629  0DDB  3013               	movlw	19
 11630  0DDC  00AA               	movwf	led_set_cycle@len
 11631                           
 11632                           ;app_led.c: 2127: for(uint8_t i = 0; i < len; i++)
 11633  0DDD  01AC               	clrf	led_set_cycle@i
 11634  0DDE                     l4547:	
 11635  0DDE  082A               	movf	led_set_cycle@len,w
 11636  0DDF  022C               	subwf	led_set_cycle@i,w
 11637  0DE0  1803               	btfsc	3,0
 11638  0DE1  2DFF               	goto	l4549
 11639                           
 11640                           ;app_led.c: 2128: {
 11641                           ;app_led.c: 2129: m_led_para.ble_para.auto_para.array[i] = *(pbuf+i);
 11642  0DE2  082C               	movf	led_set_cycle@i,w
 11643  0DE3  072B               	addwf	led_set_cycle@pbuf,w
 11644  0DE4  00A2               	movwf	??_led_set_cycle
 11645  0DE5  0086               	movwf	6
 11646  0DE6  3001               	movlw	1	; select bank2/3
 11647  0DE7  0087               	movwf	7
 11648  0DE8  0801               	movf	1,w
 11649  0DE9  00A3               	movwf	??_led_set_cycle+1
 11650  0DEA  082C               	movf	led_set_cycle@i,w
 11651  0DEB  00A4               	movwf	??_led_set_cycle+2
 11652  0DEC  30A0               	movlw	160
 11653  0DED  01A5               	clrf	??_led_set_cycle+3
 11654  0DEE  00A6               	movwf	??_led_set_cycle+4
 11655  0DEF  3023               	movlw	35
 11656  0DF0  00A7               	movwf	??_led_set_cycle+5
 11657  0DF1  0824               	movf	??_led_set_cycle+2,w
 11658  0DF2  0726               	addwf	??_led_set_cycle+4,w
 11659  0DF3  00A8               	movwf	??_led_set_cycle+6
 11660  0DF4  0825               	movf	??_led_set_cycle+3,w
 11661  0DF5  3D27               	addwfc	??_led_set_cycle+5,w
 11662  0DF6  00A9               	movwf	??_led_set_cycle+7
 11663  0DF7  0828               	movf	??_led_set_cycle+6,w
 11664  0DF8  0086               	movwf	6
 11665  0DF9  0829               	movf	??_led_set_cycle+7,w
 11666  0DFA  0087               	movwf	7
 11667  0DFB  0823               	movf	??_led_set_cycle+1,w
 11668  0DFC  0081               	movwf	1
 11669  0DFD  0AAC               	incf	led_set_cycle@i,f
 11670  0DFE  2DDE               	goto	l4547
 11671  0DFF                     l4549:	
 11672                           
 11673                           ;app_led.c: 2130: }
 11674                           ;app_led.c: 2131: led_prepare_to_save();
 11675  0DFF  2568               	fcall	_led_prepare_to_save
 11676                           
 11677                           ;app_led.c: 2132: return 1;
 11678  0E00  3401               	retlw	1
 11679  0E01                     __end_of_led_set_cycle:	
 11680  0E01                     __ptext39:	
 11681 ;; *************** function _led_start_flash *****************
 11682 ;; Defined at:
 11683 ;;		line 1864 in file "src/app_led.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;		None
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;		None
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  1    wreg      void 
 11690 ;; Registers used:
 11691 ;;		wreg
 11692 ;; Tracked objects:
 11693 ;;		On entry : 1F/0
 11694 ;;		On exit  : 1F/0
 11695 ;;		Unchanged: 0/0
 11696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11701 ;;Total ram usage:        0 bytes
 11702 ;; Hardware stack levels used:    1
 11703 ;; Hardware stack levels required when called:    9
 11704 ;; This function calls:
 11705 ;;		Nothing
 11706 ;; This function is called by:
 11707 ;;		_ble_decode
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           
 11712                           ;psect for function _led_start_flash
 11713  0E01                     _led_start_flash:	
 11714  0E01                     l4643:	
 11715                           ;incstack = 0
 11716                           ; Regs used in _led_start_flash: [wreg]
 11717                           
 11718  0E01  3003               	movlw	3
 11719                           
 11720                           ;app_led.c: 1866: led_run_para.mFind = 1;
 11721  0E02  145D               	bsf	_led_run_para,0
 11722                           
 11723                           ;app_led.c: 1867: led_run_para.flash_count = 3;
 11724  0E03  00DE               	movwf	_led_run_para+1
 11725  0E04  0008               	return
 11726  0E05                     __end_of_led_start_flash:	
 11727  0E05                     __ptext38:	
 11728 ;; *************** function _led_start_preview *****************
 11729 ;; Defined at:
 11730 ;;		line 1895 in file "src/app_led.c"
 11731 ;; Parameters:    Size  Location     Type
 11732 ;;		None
 11733 ;; Auto vars:     Size  Location     Type
 11734 ;;		None
 11735 ;; Return value:  Size  Location     Type
 11736 ;;                  1    wreg      void 
 11737 ;; Registers used:
 11738 ;;		wreg
 11739 ;; Tracked objects:
 11740 ;;		On entry : 1F/0
 11741 ;;		On exit  : 1F/0
 11742 ;;		Unchanged: 0/0
 11743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11748 ;;Total ram usage:        0 bytes
 11749 ;; Hardware stack levels used:    1
 11750 ;; Hardware stack levels required when called:    9
 11751 ;; This function calls:
 11752 ;;		Nothing
 11753 ;; This function is called by:
 11754 ;;		_ble_decode
 11755 ;; This function uses a non-reentrant model
 11756 ;;
 11757                           
 11758                           
 11759                           ;psect for function _led_start_preview
 11760  0E05                     _led_start_preview:	
 11761  0E05                     l4619:	
 11762                           ;incstack = 0
 11763                           ; Regs used in _led_start_preview: [wreg]
 11764                           
 11765  0E05  3003               	movlw	3
 11766                           
 11767                           ;app_led.c: 1897: led_run_para.mPrev = 1;
 11768  0E06  14DD               	bsf	_led_run_para,1
 11769                           
 11770                           ;app_led.c: 1898: led_run_para.prev_count = 3;
 11771  0E07  00DF               	movwf	_led_run_para+2
 11772  0E08  0008               	return
 11773  0E09                     __end_of_led_start_preview:	
 11774  0E09                     __ptext37:	
 11775 ;; *************** function _led_stop_preview *****************
 11776 ;; Defined at:
 11777 ;;		line 1901 in file "src/app_led.c"
 11778 ;; Parameters:    Size  Location     Type
 11779 ;;		None
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;		None
 11782 ;; Return value:  Size  Location     Type
 11783 ;;                  1    wreg      void 
 11784 ;; Registers used:
 11785 ;;		status,2
 11786 ;; Tracked objects:
 11787 ;;		On entry : 1F/0
 11788 ;;		On exit  : 1F/0
 11789 ;;		Unchanged: 0/0
 11790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11795 ;;Total ram usage:        0 bytes
 11796 ;; Hardware stack levels used:    1
 11797 ;; Hardware stack levels required when called:    9
 11798 ;; This function calls:
 11799 ;;		Nothing
 11800 ;; This function is called by:
 11801 ;;		_ble_decode
 11802 ;; This function uses a non-reentrant model
 11803 ;;
 11804                           
 11805                           
 11806                           ;psect for function _led_stop_preview
 11807  0E09                     _led_stop_preview:	
 11808  0E09                     l4623:	
 11809                           ;incstack = 0
 11810                           ; Regs used in _led_stop_preview: [status,2]
 11811                           
 11812                           
 11813                           ;app_led.c: 1903: led_run_para.mPrev = 0;
 11814  0E09  10DD               	bcf	_led_run_para,1
 11815                           
 11816                           ;app_led.c: 1904: led_run_para.prev_count = 0;
 11817  0E0A  01DF               	clrf	_led_run_para+2
 11818  0E0B  0008               	return
 11819  0E0C                     __end_of_led_stop_preview:	
 11820  0E0C                     PL54:	
 11821  0E0C  307F               	movlw	127
 11822  0E0D  0086               	movwf	6
 11823  0E0E  3023               	movlw	35
 11824  0E0F  0087               	movwf	7
 11825  0E10  3147               	addfsr 1,7
 11826  0E11  0008               	return
 11827  0E12                     __end_ofPL54:	
 11828  0E12                     __ptext103:	
 11829 ;; *************** function _led_state_night_short_press_cb *****************
 11830 ;; Defined at:
 11831 ;;		line 899 in file "src/app_led.c"
 11832 ;; Parameters:    Size  Location     Type
 11833 ;;		None
 11834 ;; Auto vars:     Size  Location     Type
 11835 ;;		None
 11836 ;; Return value:  Size  Location     Type
 11837 ;;                  1    wreg      void 
 11838 ;; Registers used:
 11839 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11840 ;; Tracked objects:
 11841 ;;		On entry : 1F/1
 11842 ;;		On exit  : 1F/0
 11843 ;;		Unchanged: 0/0
 11844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11849 ;;Total ram usage:        1 bytes
 11850 ;; Hardware stack levels used:    1
 11851 ;; Hardware stack levels required when called:    1
 11852 ;; This function calls:
 11853 ;;		i1_led_indicate_ble
 11854 ;;		i1_led_prepare_to_save
 11855 ;; This function is called by:
 11856 ;;		_led_state_night_cb
 11857 ;; This function uses a non-reentrant model
 11858 ;;
 11859                           
 11860                           
 11861                           ;psect for function _led_state_night_short_press_cb
 11862  0E12                     _led_state_night_short_press_cb:	
 11863  0E12                     i1l3841:	
 11864                           ;incstack = 0
 11865                           ; Regs used in _led_state_night_short_press_cb: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 11866                           
 11867                           
 11868                           ;app_led.c: 901: m_led_para.mState++;
 11869  0E12  277D  318C         	fcall	PL14	;call to abstracted procedure
 11870  0E14  00F0               	movwf	??_led_state_night_short_press_cb
 11871  0E15  0AF0               	incf	??_led_state_night_short_press_cb,f
 11872  0E16  0801               	movf	1,w
 11873  0E17  0670               	xorwf	??_led_state_night_short_press_cb,w
 11874  0E18  39FC               	andlw	-4
 11875  0E19  0670               	xorwf	??_led_state_night_short_press_cb,w
 11876  0E1A  0081               	movwf	1
 11877                           
 11878                           ;app_led.c: 902: if(m_led_para.last_mode == 2)
 11879  0E1B  307F               	movlw	127
 11880  0E1C  0086               	movwf	6
 11881  0E1D  3023               	movlw	35
 11882  0E1E  0087               	movwf	7
 11883                           
 11884                           ;app_led.c: 903: {
 11885                           ;app_led.c: 904: m_led_para.ble_para.mMode = 2;
 11886  0E1F  2797  318C         	fcall	PL78	;call to abstracted procedure
 11887  0E21  3146               	addfsr 1,6
 11888  0E22  1D03               	skipz
 11889  0E23  2E28               	goto	L25
 11890  0E24  0801               	movf	1,w
 11891  0E25  39FC               	andlw	-4
 11892  0E26  3802               	iorlw	2
 11893  0E27  2E2B               	goto	L24
 11894  0E28                     L25:	
 11895                           ;app_led.c: 906: else
 11896                           ;app_led.c: 907: {
 11897                           ;app_led.c: 908: m_led_para.ble_para.mMode = 1;
 11898                           
 11899                           ;app_led.c: 905: }
 11900                           
 11901  0E28  0801               	movf	1,w
 11902  0E29  39FC               	andlw	-4
 11903  0E2A  3801               	iorlw	1
 11904  0E2B                     L24:	
 11905  0E2B  0081               	movwf	1
 11906                           
 11907                           ;app_led.c: 909: }
 11908                           ;app_led.c: 910: led_indicate_ble();
 11909  0E2C  2630  318C         	fcall	i1_led_indicate_ble
 11910                           
 11911                           ;app_led.c: 911: led_prepare_to_save();
 11912  0E2E  274C               	fcall	i1_led_prepare_to_save
 11913  0E2F  0008               	return
 11914  0E30                     __end_of_led_state_night_short_press_cb:	
 11915  0E30                     __ptext104:	
 11916 ;; *************** function i1_led_indicate_ble *****************
 11917 ;; Defined at:
 11918 ;;		line 733 in file "src/app_led.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;		None
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;		None
 11923 ;; Return value:  Size  Location     Type
 11924 ;;                  1    wreg      void 
 11925 ;; Registers used:
 11926 ;;		None
 11927 ;; Tracked objects:
 11928 ;;		On entry : 1F/1
 11929 ;;		On exit  : 1F/2
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11936 ;;Total ram usage:        0 bytes
 11937 ;; Hardware stack levels used:    1
 11938 ;; This function calls:
 11939 ;;		Nothing
 11940 ;; This function is called by:
 11941 ;;		_led_state_night_short_press_cb
 11942 ;; This function uses a non-reentrant model
 11943 ;;
 11944                           
 11945                           
 11946                           ;psect for function i1_led_indicate_ble
 11947  0E30                     i1_led_indicate_ble:	
 11948                           
 11949                           ;app_led.c: 735: (LATBbits.LATB6 = 1);
 11950                           
 11951                           ;incstack = 0
 11952                           ; Regs used in i1_led_indicate_ble: []
 11953                           
 11954                           ;app_led.c: 736: (LATAbits.LATA1 = 0);
 11955                           
 11956                           ;app_led.c: 737: (LATBbits.LATB7 = 1);
 11957  0E30  2FD4               	ljmp	PL136	;call to abstracted procedure
 11958  0E31                     __end_ofi1_led_indicate_ble:	
 11959  0E31                     __ptext96:	
 11960 ;; *************** function _led_state_day_cb *****************
 11961 ;; Defined at:
 11962 ;;		line 873 in file "src/app_led.c"
 11963 ;; Parameters:    Size  Location     Type
 11964 ;;  key             1    9[COMMON] unsigned char 
 11965 ;;  state           1   10[COMMON] enum E8242
 11966 ;; Auto vars:     Size  Location     Type
 11967 ;;		None
 11968 ;; Return value:  Size  Location     Type
 11969 ;;                  1    wreg      void 
 11970 ;; Registers used:
 11971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11972 ;; Tracked objects:
 11973 ;;		On entry : 1F/1
 11974 ;;		On exit  : 1E/0
 11975 ;;		Unchanged: 0/0
 11976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11981 ;;Total ram usage:        2 bytes
 11982 ;; Hardware stack levels used:    1
 11983 ;; Hardware stack levels required when called:    2
 11984 ;; This function calls:
 11985 ;;		_led_state_day_cont_press_cb
 11986 ;;		_led_state_day_long_press_cb
 11987 ;;		_led_state_day_release_cb
 11988 ;;		_led_state_day_short_press_cb
 11989 ;; This function is called by:
 11990 ;;		_led_touch_cb
 11991 ;; This function uses a non-reentrant model
 11992 ;;
 11993                           
 11994                           
 11995                           ;psect for function _led_state_day_cb
 11996  0E31                     _led_state_day_cb:	
 11997                           
 11998                           ;app_led.c: 875: if(key == 0x01)
 11999                           
 12000                           ;incstack = 0
 12001                           ; Regs used in _led_state_day_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12002  0E31  0B79               	decfsz	led_state_day_cb@key,w
 12003  0E32  0008               	return
 12004                           
 12005                           ;app_led.c: 890: break;
 12006  0E33  087A               	movf	led_state_day_cb@state,w
 12007                           
 12008                           ; Switch size 1, requested type "space"
 12009                           ; Number of cases is 4, Range of values is 0 to 3
 12010                           ; switch strategies available:
 12011                           ; Name         Instructions Cycles
 12012                           ; simple_byte           13     7 (average)
 12013                           ; direct_byte           14     6 (fixed)
 12014                           ; jumptable            260     6 (fixed)
 12015                           ;	Chosen strategy is simple_byte
 12016  0E34  3A00               	xorlw	0	; case 0
 12017  0E35  1903               	skipnz
 12018  0E36  2E41               	goto	i1l3891
 12019  0E37  3A01               	xorlw	1	; case 1
 12020  0E38  1903               	skipnz
 12021  0E39  2E42               	goto	i1l3893
 12022  0E3A  3A03               	xorlw	3	; case 2
 12023  0E3B  1903               	skipnz
 12024  0E3C  2E43               	goto	i1l3895
 12025  0E3D  3A01               	xorlw	1	; case 3
 12026  0E3E  1903               	skipnz
 12027  0E3F  2E44               	goto	i1l3897
 12028  0E40  2E45               	goto	i1l816
 12029  0E41                     i1l3891:	
 12030                           
 12031                           ;app_led.c: 880: led_state_day_short_press_cb();
 12032  0E41  2EAA               	ljmp	i1l3821
 12033  0E42                     i1l3893:	
 12034                           ;app_led.c: 881: break;
 12035                           
 12036                           
 12037                           ;app_led.c: 883: led_state_day_long_press_cb();
 12038  0E42  2F50               	ljmp	i1l3723
 12039  0E43                     i1l3895:	
 12040                           ;app_led.c: 884: break;
 12041                           
 12042                           
 12043                           ;app_led.c: 886: led_state_day_cont_press_cb();
 12044  0E43  2E56               	ljmp	i1l3831
 12045  0E44                     i1l3897:	
 12046                           ;app_led.c: 887: break;
 12047                           
 12048                           
 12049                           ;app_led.c: 889: led_state_day_release_cb();
 12050  0E44  2F70               	ljmp	i1l3839
 12051  0E45                     i1l816:	
 12052  0E45  0008               	return
 12053  0E46                     __end_of_led_state_day_cb:	
 12054  0E46                     __ptext108:	
 12055 ;; *************** function _led_state_night_cont_press_cb *****************
 12056 ;; Defined at:
 12057 ;;		line 919 in file "src/app_led.c"
 12058 ;; Parameters:    Size  Location     Type
 12059 ;;		None
 12060 ;; Auto vars:     Size  Location     Type
 12061 ;;		None
 12062 ;; Return value:  Size  Location     Type
 12063 ;;                  1    wreg      void 
 12064 ;; Registers used:
 12065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12066 ;; Tracked objects:
 12067 ;;		On entry : 1F/1
 12068 ;;		On exit  : 1E/0
 12069 ;;		Unchanged: 0/0
 12070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12075 ;;Total ram usage:        0 bytes
 12076 ;; Hardware stack levels used:    1
 12077 ;; Hardware stack levels required when called:    1
 12078 ;; This function calls:
 12079 ;;		i1_decrease
 12080 ;;		i1_increase
 12081 ;;		i1_led_update_night_bright
 12082 ;; This function is called by:
 12083 ;;		_led_state_night_cb
 12084 ;; This function uses a non-reentrant model
 12085 ;;
 12086                           
 12087                           
 12088                           ;psect for function _led_state_night_cont_press_cb
 12089  0E46                     _led_state_night_cont_press_cb:	
 12090  0E46                     i1l3853:	
 12091                           ;incstack = 0
 12092                           ; Regs used in _led_state_night_cont_press_cb: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12093                           
 12094                           
 12095                           ;app_led.c: 921: if(led_run_para.mNr)
 12096  0E46  0020               	movlb	0	; select bank0
 12097  0E47  1E5D               	btfss	_led_run_para,4
 12098  0E48  2E4F               	goto	i1l3857
 12099                           
 12100                           ;app_led.c: 922: {
 12101                           ;app_led.c: 923: increase(&m_led_para.blue_bright, 10, 1000);
 12102  0E49  3083               	movlw	131
 12103  0E4A  27A1  318C         	fcall	PL80	;call to abstracted procedure
 12104  0E4C  2688  318C         	fcall	i1_increase
 12105                           
 12106                           ;app_led.c: 924: }
 12107  0E4E  2E54               	goto	i1l3859
 12108  0E4F                     i1l3857:	
 12109                           
 12110                           ;app_led.c: 925: else
 12111                           ;app_led.c: 926: {
 12112                           ;app_led.c: 927: decrease(&m_led_para.blue_bright, 10, 10);
 12113  0E4F  3083               	movlw	131
 12114  0E50  27B1  318C         	fcall	PL94	;call to abstracted procedure
 12115  0E52  2666  318C         	fcall	i1_decrease
 12116  0E54                     i1l3859:	
 12117                           
 12118                           ;app_led.c: 928: }
 12119                           ;app_led.c: 929: led_update_night_bright();
 12120  0E54  26BA               	fcall	i1_led_update_night_bright
 12121  0E55  0008               	return
 12122  0E56                     __end_of_led_state_night_cont_press_cb:	
 12123  0E56                     __ptext115:	
 12124 ;; *************** function _led_state_day_cont_press_cb *****************
 12125 ;; Defined at:
 12126 ;;		line 855 in file "src/app_led.c"
 12127 ;; Parameters:    Size  Location     Type
 12128 ;;		None
 12129 ;; Auto vars:     Size  Location     Type
 12130 ;;		None
 12131 ;; Return value:  Size  Location     Type
 12132 ;;                  1    wreg      void 
 12133 ;; Registers used:
 12134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12135 ;; Tracked objects:
 12136 ;;		On entry : 1F/1
 12137 ;;		On exit  : 1E/0
 12138 ;;		Unchanged: 0/0
 12139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12144 ;;Total ram usage:        0 bytes
 12145 ;; Hardware stack levels used:    1
 12146 ;; Hardware stack levels required when called:    1
 12147 ;; This function calls:
 12148 ;;		i1_decrease
 12149 ;;		i1_increase
 12150 ;;		i1_led_update_day_bright
 12151 ;; This function is called by:
 12152 ;;		_led_state_day_cb
 12153 ;; This function uses a non-reentrant model
 12154 ;;
 12155                           
 12156                           
 12157                           ;psect for function _led_state_day_cont_press_cb
 12158  0E56                     _led_state_day_cont_press_cb:	
 12159  0E56                     i1l3831:	
 12160                           ;incstack = 0
 12161                           ; Regs used in _led_state_day_cont_press_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12162                           
 12163                           
 12164                           ;app_led.c: 857: if(led_run_para.mDr)
 12165  0E56  0020               	movlb	0	; select bank0
 12166  0E57  1DDD               	btfss	_led_run_para,3
 12167  0E58  2E5F               	goto	i1l3835
 12168                           
 12169                           ;app_led.c: 858: {
 12170                           ;app_led.c: 859: increase(&m_led_para.all_bright, 10, 1000);
 12171  0E59  3081               	movlw	129
 12172  0E5A  27A1  318C         	fcall	PL80	;call to abstracted procedure
 12173  0E5C  2688  318C         	fcall	i1_increase
 12174                           
 12175                           ;app_led.c: 860: }
 12176  0E5E  2E64               	goto	i1l3837
 12177  0E5F                     i1l3835:	
 12178                           
 12179                           ;app_led.c: 861: else
 12180                           ;app_led.c: 862: {
 12181                           ;app_led.c: 863: decrease(&m_led_para.all_bright, 10, 10);
 12182  0E5F  3081               	movlw	129
 12183  0E60  27B1  318C         	fcall	PL94	;call to abstracted procedure
 12184  0E62  2666  318C         	fcall	i1_decrease
 12185  0E64                     i1l3837:	
 12186                           
 12187                           ;app_led.c: 864: }
 12188                           ;app_led.c: 865: led_update_day_bright();
 12189  0E64  2729               	fcall	i1_led_update_day_bright
 12190  0E65  0008               	return
 12191  0E66                     __end_of_led_state_day_cont_press_cb:	
 12192  0E66                     __ptext118:	
 12193 ;; *************** function i1_decrease *****************
 12194 ;; Defined at:
 12195 ;;		line 15 in file "src/app_util.c"
 12196 ;; Parameters:    Size  Location     Type
 12197 ;;  psrc            2    0[COMMON] const PTR unsigned int 
 12198 ;;		 -> m_led_para.ble_para.manual_para.mBright(8), m_led_para.ble_para.manual_para(26), m_led_para(113), 
 12199 ;;  delt            1    2[COMMON] const unsigned char 
 12200 ;;  min             2    3[COMMON] const unsigned int 
 12201 ;; Auto vars:     Size  Location     Type
 12202 ;;		None
 12203 ;; Return value:  Size  Location     Type
 12204 ;;                  1    wreg      void 
 12205 ;; Registers used:
 12206 ;;		wreg, fsr1l, fsr1h
 12207 ;; Tracked objects:
 12208 ;;		On entry : 1F/0
 12209 ;;		On exit  : 1F/0
 12210 ;;		Unchanged: 1F/0
 12211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12212 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12214 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;Total ram usage:        9 bytes
 12217 ;; Hardware stack levels used:    1
 12218 ;; This function calls:
 12219 ;;		Nothing
 12220 ;; This function is called by:
 12221 ;;		_led_state_day_cont_press_cb
 12222 ;;		_led_state_night_cont_press_cb
 12223 ;; This function uses a non-reentrant model
 12224 ;;
 12225                           
 12226                           
 12227                           ;psect for function i1_decrease
 12228  0E66                     i1_decrease:	
 12229                           
 12230                           ;app_util.c: 17: if((*psrc) > min + delt)
 12231                           
 12232                           ;incstack = 0
 12233                           ; Regs used in i1_decrease: [wregfsr1]
 12234  0E66  0870               	movf	i1decrease@psrc,w
 12235  0E67  0086               	movwf	6
 12236  0E68  0871               	movf	i1decrease@psrc+1,w
 12237  0E69  0087               	movwf	7
 12238  0E6A  3F40               	moviw [0]fsr1
 12239  0E6B  00F5               	movwf	??i1_decrease
 12240  0E6C  3F41               	moviw [1]fsr1
 12241  0E6D  00F6               	movwf	??i1_decrease+1
 12242  0E6E  0872               	movf	i1decrease@delt,w
 12243  0E6F  0773               	addwf	i1decrease@min,w
 12244  0E70  00F7               	movwf	??i1_decrease+2
 12245  0E71  0874               	movf	i1decrease@min+1,w
 12246  0E72  1803               	skipnc
 12247  0E73  0A74               	incf	i1decrease@min+1,w
 12248  0E74  00F8               	movwf	??i1_decrease+3
 12249  0E75  0876               	movf	??i1_decrease+1,w
 12250  0E76  0278               	subwf	??i1_decrease+3,w
 12251  0E77  1D03               	skipz
 12252  0E78  2E7B               	goto	u274_25
 12253  0E79  0875               	movf	??i1_decrease,w
 12254  0E7A  0277               	subwf	??i1_decrease+2,w
 12255  0E7B                     u274_25:	
 12256                           
 12257                           ;app_util.c: 18: {
 12258                           ;app_util.c: 19: (*psrc) -= delt;
 12259  0E7B  0870               	movf	i1decrease@psrc,w
 12260  0E7C  0086               	movwf	6
 12261  0E7D  0871               	movf	i1decrease@psrc+1,w
 12262  0E7E  0087               	movwf	7
 12263  0E7F  1803               	skipnc
 12264  0E80  2E83               	goto	L27
 12265  0E81  0872               	movf	i1decrease@delt,w
 12266                           
 12267                           ;app_util.c: 20: }
 12268  0E82  2FB9               	ljmp	PL112	;call to abstracted procedure
 12269  0E83                     L27:	
 12270                           ;app_util.c: 21: else
 12271                           ;app_util.c: 22: {
 12272                           ;app_util.c: 23: (*psrc) = min;
 12273                           
 12274  0E83  0873               	movf	i1decrease@min,w
 12275  0E84  3FC0               	movwi [0]fsr1
 12276  0E85  0874               	movf	i1decrease@min+1,w
 12277  0E86  3FC1               	movwi [1]fsr1
 12278  0E87  0008               	return
 12279  0E88                     __end_ofi1_decrease:	
 12280  0E88                     __ptext117:	
 12281 ;; *************** function i1_increase *****************
 12282 ;; Defined at:
 12283 ;;		line 3 in file "src/app_util.c"
 12284 ;; Parameters:    Size  Location     Type
 12285 ;;  psrc            2    0[COMMON] const PTR unsigned int 
 12286 ;;		 -> m_led_para.ble_para.manual_para.mBright(8), m_led_para.ble_para.manual_para(26), m_led_para(113), 
 12287 ;;  delt            1    2[COMMON] const unsigned char 
 12288 ;;  max             2    3[COMMON] const unsigned int 
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;		None
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  1    wreg      void 
 12293 ;; Registers used:
 12294 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12295 ;; Tracked objects:
 12296 ;;		On entry : 1F/0
 12297 ;;		On exit  : 1F/0
 12298 ;;		Unchanged: 1F/0
 12299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12300 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12302 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12303 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12304 ;;Total ram usage:        9 bytes
 12305 ;; Hardware stack levels used:    1
 12306 ;; This function calls:
 12307 ;;		Nothing
 12308 ;; This function is called by:
 12309 ;;		_led_state_day_cont_press_cb
 12310 ;;		_led_state_night_cont_press_cb
 12311 ;; This function uses a non-reentrant model
 12312 ;;
 12313                           
 12314                           
 12315                           ;psect for function i1_increase
 12316  0E88                     i1_increase:	
 12317                           
 12318                           ;app_util.c: 5: if((*psrc) + delt < max)
 12319                           
 12320                           ;incstack = 0
 12321                           ; Regs used in i1_increase: [wreg+fsr1l+fsr1h+status,2+status,0]
 12322  0E88  0870               	movf	i1increase@psrc,w
 12323  0E89  0086               	movwf	6
 12324  0E8A  0871               	movf	i1increase@psrc+1,w
 12325  0E8B  0087               	movwf	7
 12326  0E8C  3F40               	moviw [0]fsr1
 12327  0E8D  00F5               	movwf	??i1_increase
 12328  0E8E  3F41               	moviw [1]fsr1
 12329  0E8F  00F6               	movwf	??i1_increase+1
 12330  0E90  0872               	movf	i1increase@delt,w
 12331  0E91  0775               	addwf	??i1_increase,w
 12332  0E92  00F7               	movwf	??i1_increase+2
 12333  0E93  0876               	movf	??i1_increase+1,w
 12334  0E94  1803               	skipnc
 12335  0E95  0A76               	incf	??i1_increase+1,w
 12336  0E96  00F8               	movwf	??i1_increase+3
 12337  0E97  0874               	movf	i1increase@max+1,w
 12338  0E98  0278               	subwf	??i1_increase+3,w
 12339  0E99  1D03               	skipz
 12340  0E9A  2E9D               	goto	u273_25
 12341  0E9B  0873               	movf	i1increase@max,w
 12342  0E9C  0277               	subwf	??i1_increase+2,w
 12343  0E9D                     u273_25:	
 12344                           
 12345                           ;app_util.c: 6: {
 12346                           ;app_util.c: 7: (*psrc) += delt;
 12347  0E9D  0870               	movf	i1increase@psrc,w
 12348  0E9E  0086               	movwf	6
 12349  0E9F  0871               	movf	i1increase@psrc+1,w
 12350  0EA0  0087               	movwf	7
 12351  0EA1  1803               	skipnc
 12352  0EA2  2EA5               	goto	L26
 12353  0EA3  0872               	movf	i1increase@delt,w
 12354                           
 12355                           ;app_util.c: 8: }
 12356  0EA4  2FBF               	ljmp	PL122	;call to abstracted procedure
 12357  0EA5                     L26:	
 12358                           ;app_util.c: 9: else
 12359                           ;app_util.c: 10: {
 12360                           ;app_util.c: 11: (*psrc) = max;
 12361                           
 12362  0EA5  0873               	movf	i1increase@max,w
 12363  0EA6  3FC0               	movwi [0]fsr1
 12364  0EA7  0874               	movf	i1increase@max+1,w
 12365  0EA8  3FC1               	movwi [1]fsr1
 12366  0EA9  0008               	return
 12367  0EAA                     __end_ofi1_increase:	
 12368  0EAA                     __ptext109:	
 12369 ;; *************** function _led_state_day_short_press_cb *****************
 12370 ;; Defined at:
 12371 ;;		line 842 in file "src/app_led.c"
 12372 ;; Parameters:    Size  Location     Type
 12373 ;;		None
 12374 ;; Auto vars:     Size  Location     Type
 12375 ;;		None
 12376 ;; Return value:  Size  Location     Type
 12377 ;;                  1    wreg      void 
 12378 ;; Registers used:
 12379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12380 ;; Tracked objects:
 12381 ;;		On entry : 1F/1
 12382 ;;		On exit  : 1F/0
 12383 ;;		Unchanged: 0/0
 12384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12387 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12389 ;;Total ram usage:        1 bytes
 12390 ;; Hardware stack levels used:    1
 12391 ;; Hardware stack levels required when called:    1
 12392 ;; This function calls:
 12393 ;;		i1_led_indicate_night
 12394 ;;		i1_led_prepare_to_save
 12395 ;;		i1_led_update_night_bright
 12396 ;; This function is called by:
 12397 ;;		_led_state_day_cb
 12398 ;; This function uses a non-reentrant model
 12399 ;;
 12400                           
 12401                           
 12402                           ;psect for function _led_state_day_short_press_cb
 12403  0EAA                     _led_state_day_short_press_cb:	
 12404  0EAA                     i1l3821:	
 12405                           ;incstack = 0
 12406                           ; Regs used in _led_state_day_short_press_cb: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 12407                           
 12408                           
 12409                           ;app_led.c: 844: m_led_para.mState++;
 12410  0EAA  277D  318C         	fcall	PL14	;call to abstracted procedure
 12411  0EAC  00F5               	movwf	??_led_state_day_short_press_cb
 12412  0EAD  0AF5               	incf	??_led_state_day_short_press_cb,f
 12413  0EAE  0801               	movf	1,w
 12414  0EAF  0675               	xorwf	??_led_state_day_short_press_cb,w
 12415  0EB0  39FC               	andlw	-4
 12416  0EB1  0675               	xorwf	??_led_state_day_short_press_cb,w
 12417  0EB2  0081               	movwf	1
 12418                           
 12419                           ;app_led.c: 845: led_update_night_bright();
 12420  0EB3  26BA  318C         	fcall	i1_led_update_night_bright
 12421                           
 12422                           ;app_led.c: 846: led_indicate_night();
 12423  0EB5  26B9  318C         	fcall	i1_led_indicate_night
 12424                           
 12425                           ;app_led.c: 847: led_prepare_to_save();
 12426  0EB7  274C               	fcall	i1_led_prepare_to_save
 12427  0EB8  0008               	return
 12428  0EB9                     __end_of_led_state_day_short_press_cb:	
 12429  0EB9                     __ptext111:	
 12430 ;; *************** function i1_led_indicate_night *****************
 12431 ;; Defined at:
 12432 ;;		line 726 in file "src/app_led.c"
 12433 ;; Parameters:    Size  Location     Type
 12434 ;;		None
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;		None
 12437 ;; Return value:  Size  Location     Type
 12438 ;;                  1    wreg      void 
 12439 ;; Registers used:
 12440 ;;		None
 12441 ;; Tracked objects:
 12442 ;;		On entry : 1E/1
 12443 ;;		On exit  : 1F/2
 12444 ;;		Unchanged: 0/0
 12445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;Total ram usage:        0 bytes
 12451 ;; Hardware stack levels used:    1
 12452 ;; This function calls:
 12453 ;;		Nothing
 12454 ;; This function is called by:
 12455 ;;		_led_state_day_short_press_cb
 12456 ;; This function uses a non-reentrant model
 12457 ;;
 12458                           
 12459                           
 12460                           ;psect for function i1_led_indicate_night
 12461  0EB9                     i1_led_indicate_night:	
 12462                           
 12463                           ;app_led.c: 728: (LATBbits.LATB6 = 1);
 12464                           
 12465                           ;incstack = 0
 12466                           ; Regs used in i1_led_indicate_night: []
 12467                           
 12468                           ;app_led.c: 729: (LATAbits.LATA1 = 1);
 12469                           
 12470                           ;app_led.c: 730: (LATBbits.LATB7 = 0);
 12471  0EB9  2FC9               	ljmp	PL132	;call to abstracted procedure
 12472  0EBA                     __end_ofi1_led_indicate_night:	
 12473  0EBA                     __ptext110:	
 12474 ;; *************** function i1_led_update_night_bright *****************
 12475 ;; Defined at:
 12476 ;;		line 762 in file "src/app_led.c"
 12477 ;; Parameters:    Size  Location     Type
 12478 ;;		None
 12479 ;; Auto vars:     Size  Location     Type
 12480 ;;  led_update_n    1    4[COMMON] unsigned char 
 12481 ;; Return value:  Size  Location     Type
 12482 ;;                  1    wreg      void 
 12483 ;; Registers used:
 12484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12485 ;; Tracked objects:
 12486 ;;		On entry : 1E/0
 12487 ;;		On exit  : 1E/0
 12488 ;;		Unchanged: 1E/0
 12489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12492 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12493 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12494 ;;Total ram usage:        5 bytes
 12495 ;; Hardware stack levels used:    1
 12496 ;; This function calls:
 12497 ;;		Nothing
 12498 ;; This function is called by:
 12499 ;;		_led_state_day_short_press_cb
 12500 ;;		_led_state_night_cont_press_cb
 12501 ;; This function uses a non-reentrant model
 12502 ;;
 12503                           
 12504                           
 12505                           ;psect for function i1_led_update_night_bright
 12506  0EBA                     i1_led_update_night_bright:	
 12507                           
 12508                           ;app_led.c: 764: for(uint8_t i = 0; i < 4; i++)
 12509                           
 12510                           ;incstack = 0
 12511                           ; Regs used in i1_led_update_night_bright: [wreg-fsr1h+status,2+status,0]
 12512  0EBA  01F4               	clrf	i1led_update_night_bright@i
 12513  0EBB                     i1l3789:	
 12514                           
 12515                           ;app_led.c: 765: {
 12516                           ;app_led.c: 766: if(i == 3)
 12517  0EBB  3003               	movlw	3
 12518  0EBC  0674               	xorwf	i1led_update_night_bright@i,w
 12519  0EBD  1D03               	btfss	3,2
 12520  0EBE  2ED4               	goto	i1l3793
 12521                           
 12522                           ;app_led.c: 767: {
 12523                           ;app_led.c: 768: current_bright[i] = m_led_para.blue_bright;
 12524  0EBF  3186  26D5  318C   	fcall	PL26	;call to abstracted procedure
 12525  0EC2  3574               	lslf	i1led_update_night_bright@i,w
 12526  0EC3  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 12527                           
 12528                           ;app_led.c: 769: target_bright[i] = m_led_para.blue_bright;
 12529  0EC4  2772  318C         	fcall	PL4	;call to abstracted procedure
 12530  0EC6  3144               	addfsr 1,4
 12531  0EC7  3574               	lslf	i1led_update_night_bright@i,w
 12532  0EC8  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 12533                           
 12534                           ;app_led.c: 770: m_led_para.ble_para.manual_para.mBright[i] = m_led_para.blue_bright;
 12535  0EC9  2772  318C         	fcall	PL4	;call to abstracted procedure
 12536  0ECB  3144               	addfsr 1,4
 12537  0ECC  278B  318C         	fcall	PL60	;call to abstracted procedure
 12538  0ECE  0084               	movwf	4
 12539  0ECF  0871               	movf	??i1_led_update_night_bright+1,w
 12540  0ED0  3D73               	addwfc	??i1_led_update_night_bright+3,w
 12541  0ED1  27AB  318C         	fcall	PL90	;call to abstracted procedure
 12542                           
 12543                           ;app_led.c: 771: }
 12544  0ED3  2EE3               	goto	i1l3795
 12545  0ED4                     i1l3793:	
 12546                           
 12547                           ;app_led.c: 772: else
 12548                           ;app_led.c: 773: {
 12549                           ;app_led.c: 774: current_bright[i] = 0;
 12550  0ED4  3574               	lslf	i1led_update_night_bright@i,w
 12551  0ED5  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 12552  0ED6  3187  271F  318C   	fcall	PL72	;call to abstracted procedure
 12553                           
 12554                           ;app_led.c: 775: target_bright[i] = 0;
 12555  0ED9  3574               	lslf	i1led_update_night_bright@i,w
 12556  0EDA  27CE  318C         	fcall	PL134	;call to abstracted procedure
 12557                           
 12558                           ;app_led.c: 776: m_led_para.ble_para.manual_para.mBright[i] = 0;
 12559  0EDC  278B  318C         	fcall	PL60	;call to abstracted procedure
 12560  0EDE  0086               	movwf	6
 12561  0EDF  0871               	movf	??i1_led_update_night_bright+1,w
 12562  0EE0  3D73               	addwfc	??i1_led_update_night_bright+3,w
 12563  0EE1  27DE  318C         	fcall	PL154	;call to abstracted procedure
 12564  0EE3                     i1l3795:	
 12565  0EE3  3004               	movlw	4
 12566  0EE4  0AF4               	incf	i1led_update_night_bright@i,f
 12567  0EE5  0274               	subwf	i1led_update_night_bright@i,w
 12568  0EE6  1803               	btfsc	3,0
 12569  0EE7  0008               	return
 12570  0EE8  2EBB               	goto	i1l3789
 12571  0EE9                     __end_ofi1_led_update_night_bright:	
 12572  0EE9                     __ptext97:	
 12573 ;; *************** function _led_state_off_cb *****************
 12574 ;; Defined at:
 12575 ;;		line 816 in file "src/app_led.c"
 12576 ;; Parameters:    Size  Location     Type
 12577 ;;  key             1    9[COMMON] unsigned char 
 12578 ;;  state           1   10[COMMON] enum E8242
 12579 ;; Auto vars:     Size  Location     Type
 12580 ;;		None
 12581 ;; Return value:  Size  Location     Type
 12582 ;;                  1    wreg      void 
 12583 ;; Registers used:
 12584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12585 ;; Tracked objects:
 12586 ;;		On entry : 1F/1
 12587 ;;		On exit  : 1E/0
 12588 ;;		Unchanged: 0/0
 12589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12594 ;;Total ram usage:        2 bytes
 12595 ;; Hardware stack levels used:    1
 12596 ;; Hardware stack levels required when called:    2
 12597 ;; This function calls:
 12598 ;;		_led_state_off_cont_press_cb
 12599 ;;		_led_state_off_long_press_cb
 12600 ;;		_led_state_off_release_cb
 12601 ;;		_led_state_off_short_press_cb
 12602 ;; This function is called by:
 12603 ;;		_led_touch_cb
 12604 ;; This function uses a non-reentrant model
 12605 ;;
 12606                           
 12607                           
 12608                           ;psect for function _led_state_off_cb
 12609  0EE9                     _led_state_off_cb:	
 12610                           
 12611                           ;app_led.c: 818: if(key == 0x01)
 12612                           
 12613                           ;incstack = 0
 12614                           ; Regs used in _led_state_off_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12615  0EE9  0B79               	decfsz	led_state_off_cb@key,w
 12616  0EEA  0008               	return
 12617                           
 12618                           ;app_led.c: 833: break;
 12619  0EEB  087A               	movf	led_state_off_cb@state,w
 12620                           
 12621                           ; Switch size 1, requested type "space"
 12622                           ; Number of cases is 4, Range of values is 0 to 3
 12623                           ; switch strategies available:
 12624                           ; Name         Instructions Cycles
 12625                           ; simple_byte           13     7 (average)
 12626                           ; direct_byte           14     6 (fixed)
 12627                           ; jumptable            260     6 (fixed)
 12628                           ;	Chosen strategy is simple_byte
 12629  0EEC  3A00               	xorlw	0	; case 0
 12630  0EED  1903               	skipnz
 12631  0EEE  2EF9               	goto	i1l3875
 12632  0EEF  3A01               	xorlw	1	; case 1
 12633  0EF0  1903               	skipnz
 12634  0EF1  2EFA               	goto	i1l3877
 12635  0EF2  3A03               	xorlw	3	; case 2
 12636  0EF3  1903               	skipnz
 12637  0EF4  2EFB               	goto	i1l3879
 12638  0EF5  3A01               	xorlw	1	; case 3
 12639  0EF6  1903               	skipnz
 12640  0EF7  2EFC               	goto	i1l3881
 12641  0EF8  2EFD               	goto	i1l791
 12642  0EF9                     i1l3875:	
 12643                           
 12644                           ;app_led.c: 823: led_state_off_short_press_cb();
 12645  0EF9  2EFE               	ljmp	i1l3803
 12646  0EFA                     i1l3877:	
 12647                           ;app_led.c: 824: break;
 12648                           
 12649                           
 12650                           ;app_led.c: 826: led_state_off_long_press_cb();
 12651  0EFA  2F0E               	ljmp	i1l3811
 12652  0EFB                     i1l3879:	
 12653                           ;app_led.c: 827: break;
 12654                           
 12655                           
 12656                           ;app_led.c: 829: led_state_off_cont_press_cb();
 12657  0EFB  2F4D               	ljmp	i1l777
 12658  0EFC                     i1l3881:	
 12659                           ;app_led.c: 830: break;
 12660                           
 12661                           
 12662                           ;app_led.c: 832: led_state_off_release_cb();
 12663  0EFC  2F4E               	ljmp	i1l780
 12664  0EFD                     i1l791:	
 12665  0EFD  0008               	return
 12666  0EFE                     __end_of_led_state_off_cb:	
 12667  0EFE                     __ptext98:	
 12668 ;; *************** function _led_state_off_short_press_cb *****************
 12669 ;; Defined at:
 12670 ;;		line 795 in file "src/app_led.c"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;		None
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;		None
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  1    wreg      void 
 12677 ;; Registers used:
 12678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12679 ;; Tracked objects:
 12680 ;;		On entry : 1F/1
 12681 ;;		On exit  : 1F/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12686 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12688 ;;Total ram usage:        1 bytes
 12689 ;; Hardware stack levels used:    1
 12690 ;; Hardware stack levels required when called:    1
 12691 ;; This function calls:
 12692 ;;		i1_led_indicate_day
 12693 ;;		i1_led_prepare_to_save
 12694 ;;		i1_led_update_day_bright
 12695 ;; This function is called by:
 12696 ;;		_led_state_off_cb
 12697 ;; This function uses a non-reentrant model
 12698 ;;
 12699                           
 12700                           
 12701                           ;psect for function _led_state_off_short_press_cb
 12702  0EFE                     _led_state_off_short_press_cb:	
 12703  0EFE                     i1l3803:	
 12704                           ;incstack = 0
 12705                           ; Regs used in _led_state_off_short_press_cb: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 12706                           
 12707                           
 12708                           ;app_led.c: 797: m_led_para.mState++;
 12709  0EFE  277D  318C         	fcall	PL14	;call to abstracted procedure
 12710  0F00  00F5               	movwf	??_led_state_off_short_press_cb
 12711  0F01  0AF5               	incf	??_led_state_off_short_press_cb,f
 12712  0F02  0801               	movf	1,w
 12713  0F03  0675               	xorwf	??_led_state_off_short_press_cb,w
 12714  0F04  39FC               	andlw	-4
 12715  0F05  0675               	xorwf	??_led_state_off_short_press_cb,w
 12716  0F06  0081               	movwf	1
 12717                           
 12718                           ;app_led.c: 798: led_update_day_bright();
 12719  0F07  2729  318C         	fcall	i1_led_update_day_bright
 12720                           
 12721                           ;app_led.c: 799: led_indicate_day();
 12722  0F09  270D  318C         	fcall	i1_led_indicate_day
 12723                           
 12724                           ;app_led.c: 800: led_prepare_to_save();
 12725  0F0B  274C               	fcall	i1_led_prepare_to_save
 12726  0F0C  0008               	return
 12727  0F0D                     __end_of_led_state_off_short_press_cb:	
 12728  0F0D                     __ptext101:	
 12729 ;; *************** function i1_led_indicate_day *****************
 12730 ;; Defined at:
 12731 ;;		line 719 in file "src/app_led.c"
 12732 ;; Parameters:    Size  Location     Type
 12733 ;;		None
 12734 ;; Auto vars:     Size  Location     Type
 12735 ;;		None
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  1    wreg      void 
 12738 ;; Registers used:
 12739 ;;		None
 12740 ;; Tracked objects:
 12741 ;;		On entry : 1E/1
 12742 ;;		On exit  : 1F/2
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12749 ;;Total ram usage:        0 bytes
 12750 ;; Hardware stack levels used:    1
 12751 ;; This function calls:
 12752 ;;		Nothing
 12753 ;; This function is called by:
 12754 ;;		_led_state_off_short_press_cb
 12755 ;;		_led_state_off_long_press_cb
 12756 ;; This function uses a non-reentrant model
 12757 ;;
 12758                           
 12759                           
 12760                           ;psect for function i1_led_indicate_day
 12761  0F0D                     i1_led_indicate_day:	
 12762                           
 12763                           ;app_led.c: 721: (LATBbits.LATB6 = 0);
 12764                           
 12765                           ;incstack = 0
 12766                           ; Regs used in i1_led_indicate_day: []
 12767                           
 12768                           ;app_led.c: 722: (LATAbits.LATA1 = 0);
 12769                           
 12770                           ;app_led.c: 723: (LATBbits.LATB7 = 0);
 12771  0F0D  2FC4               	ljmp	PL130	;call to abstracted procedure
 12772  0F0E                     __end_ofi1_led_indicate_day:	
 12773  0F0E                     __ptext100:	
 12774 ;; *************** function _led_state_off_long_press_cb *****************
 12775 ;; Defined at:
 12776 ;;		line 803 in file "src/app_led.c"
 12777 ;; Parameters:    Size  Location     Type
 12778 ;;		None
 12779 ;; Auto vars:     Size  Location     Type
 12780 ;;		None
 12781 ;; Return value:  Size  Location     Type
 12782 ;;                  1    wreg      void 
 12783 ;; Registers used:
 12784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12785 ;; Tracked objects:
 12786 ;;		On entry : 1F/1
 12787 ;;		On exit  : 1F/0
 12788 ;;		Unchanged: 0/0
 12789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12794 ;;Total ram usage:        2 bytes
 12795 ;; Hardware stack levels used:    1
 12796 ;; Hardware stack levels required when called:    1
 12797 ;; This function calls:
 12798 ;;		i1_led_indicate_day
 12799 ;;		i1_led_update_day_bright
 12800 ;; This function is called by:
 12801 ;;		_led_state_off_cb
 12802 ;; This function uses a non-reentrant model
 12803 ;;
 12804                           
 12805                           
 12806                           ;psect for function _led_state_off_long_press_cb
 12807  0F0E                     _led_state_off_long_press_cb:	
 12808  0F0E                     i1l3811:	
 12809                           ;incstack = 0
 12810                           ; Regs used in _led_state_off_long_press_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12811                           
 12812                           
 12813                           ;app_led.c: 805: m_led_para.mState++;
 12814  0F0E  277D  318C         	fcall	PL14	;call to abstracted procedure
 12815  0F10  00F5               	movwf	??_led_state_off_long_press_cb
 12816  0F11  0AF5               	incf	??_led_state_off_long_press_cb,f
 12817  0F12  0801               	movf	1,w
 12818  0F13  0675               	xorwf	??_led_state_off_long_press_cb,w
 12819  0F14  39FC               	andlw	-4
 12820  0F15  0675               	xorwf	??_led_state_off_long_press_cb,w
 12821  0F16  0081               	movwf	1
 12822                           
 12823                           ;app_led.c: 806: m_led_para.all_bright = 10;
 12824  0F17  300A               	movlw	10
 12825  0F18  00F5               	movwf	??_led_state_off_long_press_cb
 12826  0F19  307F               	movlw	127
 12827  0F1A  01F6               	clrf	??_led_state_off_long_press_cb+1
 12828  0F1B  0086               	movwf	6
 12829  0F1C  3023               	movlw	35
 12830  0F1D  0087               	movwf	7
 12831  0F1E  3142               	addfsr 1,2
 12832  0F1F  0875               	movf	??_led_state_off_long_press_cb,w
 12833  0F20  3FC0               	movwi [0]fsr1
 12834  0F21  0876               	movf	??_led_state_off_long_press_cb+1,w
 12835  0F22  3FC1               	movwi [1]fsr1
 12836                           
 12837                           ;app_led.c: 807: led_update_day_bright();
 12838  0F23  2729  318C         	fcall	i1_led_update_day_bright
 12839                           
 12840                           ;app_led.c: 808: led_indicate_day();
 12841  0F25  270D               	fcall	i1_led_indicate_day
 12842                           
 12843                           ;app_led.c: 809: led_run_para.mDr = 1;
 12844  0F26  0020               	movlb	0	; select bank0
 12845  0F27  15DD               	bsf	_led_run_para,3
 12846  0F28  0008               	return
 12847  0F29                     __end_of_led_state_off_long_press_cb:	
 12848  0F29                     __ptext116:	
 12849 ;; *************** function i1_led_update_day_bright *****************
 12850 ;; Defined at:
 12851 ;;		line 740 in file "src/app_led.c"
 12852 ;; Parameters:    Size  Location     Type
 12853 ;;		None
 12854 ;; Auto vars:     Size  Location     Type
 12855 ;;  led_update_d    1    4[COMMON] unsigned char 
 12856 ;; Return value:  Size  Location     Type
 12857 ;;                  1    wreg      void 
 12858 ;; Registers used:
 12859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12860 ;; Tracked objects:
 12861 ;;		On entry : 1E/1
 12862 ;;		On exit  : 1E/0
 12863 ;;		Unchanged: 1E/0
 12864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12867 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12868 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;Total ram usage:        5 bytes
 12870 ;; Hardware stack levels used:    1
 12871 ;; This function calls:
 12872 ;;		Nothing
 12873 ;; This function is called by:
 12874 ;;		_led_state_off_short_press_cb
 12875 ;;		_led_state_off_long_press_cb
 12876 ;;		_led_state_day_cont_press_cb
 12877 ;; This function uses a non-reentrant model
 12878 ;;
 12879                           
 12880                           
 12881                           ;psect for function i1_led_update_day_bright
 12882  0F29                     i1_led_update_day_bright:	
 12883                           
 12884                           ;app_led.c: 742: for(uint8_t i = 0; i < 4; i++)
 12885                           
 12886                           ;incstack = 0
 12887                           ; Regs used in i1_led_update_day_bright: [wreg-fsr1h+status,2+status,0]
 12888  0F29  01F4               	clrf	i1led_update_day_bright@i
 12889  0F2A                     i1l3777:	
 12890                           
 12891                           ;app_led.c: 743: {
 12892                           ;app_led.c: 744: current_bright[i] = m_led_para.all_bright;
 12893  0F2A  2785  318C         	fcall	PL32	;call to abstracted procedure
 12894  0F2C  3574               	lslf	i1led_update_day_bright@i,w
 12895  0F2D  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 12896                           
 12897                           ;app_led.c: 745: target_bright[i] = m_led_para.all_bright;
 12898  0F2E  2772  318C         	fcall	PL4	;call to abstracted procedure
 12899  0F30  3142               	addfsr 1,2
 12900  0F31  3574               	lslf	i1led_update_day_bright@i,w
 12901  0F32  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 12902                           
 12903                           ;app_led.c: 746: m_led_para.ble_para.manual_para.mBright[i] = m_led_para.all_bright;
 12904  0F33  2772  318C         	fcall	PL4	;call to abstracted procedure
 12905  0F35  3142               	addfsr 1,2
 12906  0F36  0874               	movf	i1led_update_day_bright@i,w
 12907  0F37  00F0               	movwf	??i1_led_update_day_bright
 12908  0F38  3088               	movlw	136
 12909  0F39  01F1               	clrf	??i1_led_update_day_bright+1
 12910  0F3A  35F0               	lslf	??i1_led_update_day_bright,f
 12911  0F3B  0DF1               	rlf	??i1_led_update_day_bright+1,f
 12912  0F3C  00F2               	movwf	??i1_led_update_day_bright+2
 12913  0F3D  3023               	movlw	35
 12914  0F3E  00F3               	movwf	??i1_led_update_day_bright+3
 12915  0F3F  0870               	movf	??i1_led_update_day_bright,w
 12916  0F40  0772               	addwf	??i1_led_update_day_bright+2,w
 12917  0F41  0084               	movwf	4
 12918  0F42  0871               	movf	??i1_led_update_day_bright+1,w
 12919  0F43  3D73               	addwfc	??i1_led_update_day_bright+3,w
 12920  0F44  27AB  318C         	fcall	PL90	;call to abstracted procedure
 12921  0F46  3004               	movlw	4
 12922  0F47  0AF4               	incf	i1led_update_day_bright@i,f
 12923  0F48  0274               	subwf	i1led_update_day_bright@i,w
 12924  0F49  1803               	btfsc	3,0
 12925  0F4A  0008               	return
 12926  0F4B  2F2A               	goto	i1l3777
 12927  0F4C                     __end_ofi1_led_update_day_bright:	
 12928  0F4C                     __ptext121:	
 12929 ;; *************** function i1_led_prepare_to_save *****************
 12930 ;; Defined at:
 12931 ;;		line 1921 in file "src/app_led.c"
 12932 ;; Parameters:    Size  Location     Type
 12933 ;;		None
 12934 ;; Auto vars:     Size  Location     Type
 12935 ;;		None
 12936 ;; Return value:  Size  Location     Type
 12937 ;;                  1    wreg      void 
 12938 ;; Registers used:
 12939 ;;		wreg
 12940 ;; Tracked objects:
 12941 ;;		On entry : 1C/2
 12942 ;;		On exit  : 1F/0
 12943 ;;		Unchanged: 0/0
 12944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12949 ;;Total ram usage:        0 bytes
 12950 ;; Hardware stack levels used:    1
 12951 ;; This function calls:
 12952 ;;		Nothing
 12953 ;; This function is called by:
 12954 ;;		_led_state_off_short_press_cb
 12955 ;;		_led_state_day_short_press_cb
 12956 ;;		_led_state_day_release_cb
 12957 ;;		_led_state_night_short_press_cb
 12958 ;;		_led_state_night_release_cb
 12959 ;;		_led_state_ble_short_press_cb
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963                           
 12964                           ;psect for function i1_led_prepare_to_save
 12965  0F4C                     i1_led_prepare_to_save:	
 12966                           
 12967                           ;app_led.c: 1923: led_run_para.mSave = 1;
 12968                           
 12969                           ;incstack = 0
 12970                           ; Regs used in i1_led_prepare_to_save: [wreg]
 12971                           
 12972                           ;app_led.c: 1924: led_run_para.save_delay_count = 3;
 12973  0F4C  2FD9               	ljmp	PL138	;call to abstracted procedure
 12974  0F4D                     __end_ofi1_led_prepare_to_save:	
 12975  0F4D                     __ptext102:	
 12976 ;; *************** function _led_state_off_cont_press_cb *****************
 12977 ;; Defined at:
 12978 ;;		line 812 in file "src/app_led.c"
 12979 ;; Parameters:    Size  Location     Type
 12980 ;;		None
 12981 ;; Auto vars:     Size  Location     Type
 12982 ;;		None
 12983 ;; Return value:  Size  Location     Type
 12984 ;;                  1    wreg      void 
 12985 ;; Registers used:
 12986 ;;		None
 12987 ;; Tracked objects:
 12988 ;;		On entry : 1F/1
 12989 ;;		On exit  : 1F/1
 12990 ;;		Unchanged: 1F/0
 12991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12996 ;;Total ram usage:        0 bytes
 12997 ;; Hardware stack levels used:    1
 12998 ;; This function calls:
 12999 ;;		Nothing
 13000 ;; This function is called by:
 13001 ;;		_led_state_off_cb
 13002 ;; This function uses a non-reentrant model
 13003 ;;
 13004                           
 13005                           
 13006                           ;psect for function _led_state_off_cont_press_cb
 13007  0F4D                     _led_state_off_cont_press_cb:	
 13008  0F4D                     i1l777:	
 13009                           ;incstack = 0
 13010                           ; Regs used in _led_state_off_cont_press_cb: []
 13011                           
 13012  0F4D  0008               	return
 13013  0F4E                     __end_of_led_state_off_cont_press_cb:	
 13014  0F4E                     __ptext99:	
 13015 ;; *************** function _led_state_off_release_cb *****************
 13016 ;; Defined at:
 13017 ;;		line 814 in file "src/app_led.c"
 13018 ;; Parameters:    Size  Location     Type
 13019 ;;		None
 13020 ;; Auto vars:     Size  Location     Type
 13021 ;;		None
 13022 ;; Return value:  Size  Location     Type
 13023 ;;                  1    wreg      void 
 13024 ;; Registers used:
 13025 ;;		None
 13026 ;; Tracked objects:
 13027 ;;		On entry : 1F/1
 13028 ;;		On exit  : 1F/1
 13029 ;;		Unchanged: 1F/0
 13030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13035 ;;Total ram usage:        0 bytes
 13036 ;; Hardware stack levels used:    1
 13037 ;; This function calls:
 13038 ;;		Nothing
 13039 ;; This function is called by:
 13040 ;;		_led_state_off_cb
 13041 ;; This function uses a non-reentrant model
 13042 ;;
 13043                           
 13044                           
 13045                           ;psect for function _led_state_off_release_cb
 13046  0F4E                     _led_state_off_release_cb:	
 13047  0F4E                     i1l780:	
 13048                           ;incstack = 0
 13049                           ; Regs used in _led_state_off_release_cb: []
 13050                           
 13051  0F4E  0008               	return
 13052  0F4F                     __end_of_led_state_off_release_cb:	
 13053  0F4F                     __ptext113:	
 13054 ;; *************** function _led_state_day_long_press_cb *****************
 13055 ;; Defined at:
 13056 ;;		line 850 in file "src/app_led.c"
 13057 ;; Parameters:    Size  Location     Type
 13058 ;;		None
 13059 ;; Auto vars:     Size  Location     Type
 13060 ;;		None
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  1    wreg      void 
 13063 ;; Registers used:
 13064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13065 ;; Tracked objects:
 13066 ;;		On entry : 1F/1
 13067 ;;		On exit  : 1E/0
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13074 ;;Total ram usage:        0 bytes
 13075 ;; Hardware stack levels used:    1
 13076 ;; Hardware stack levels required when called:    1
 13077 ;; This function calls:
 13078 ;;		_led_update_day_status
 13079 ;; This function is called by:
 13080 ;;		_led_state_day_cb
 13081 ;; This function uses a non-reentrant model
 13082 ;;
 13083                           
 13084                           
 13085                           ;psect for function _led_state_day_long_press_cb
 13086  0F4F                     _led_state_day_long_press_cb:	
 13087                           
 13088                           ;app_led.c: 852: led_update_day_status();
 13089                           
 13090                           ;incstack = 0
 13091                           ; Regs used in _led_state_day_long_press_cb: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 13092  0F4F  2F50               	ljmp	i1l3723
 13093  0F50                     __end_of_led_state_day_long_press_cb:	
 13094  0F50                     __ptext114:	
 13095 ;; *************** function _led_update_day_status *****************
 13096 ;; Defined at:
 13097 ;;		line 750 in file "src/app_led.c"
 13098 ;; Parameters:    Size  Location     Type
 13099 ;;		None
 13100 ;; Auto vars:     Size  Location     Type
 13101 ;;		None
 13102 ;; Return value:  Size  Location     Type
 13103 ;;                  1    wreg      void 
 13104 ;; Registers used:
 13105 ;;		wreg, fsr1l, fsr1h
 13106 ;; Tracked objects:
 13107 ;;		On entry : 1F/1
 13108 ;;		On exit  : 1E/0
 13109 ;;		Unchanged: 0/0
 13110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13115 ;;Total ram usage:        2 bytes
 13116 ;; Hardware stack levels used:    1
 13117 ;; This function calls:
 13118 ;;		Nothing
 13119 ;; This function is called by:
 13120 ;;		_led_state_day_long_press_cb
 13121 ;; This function uses a non-reentrant model
 13122 ;;
 13123                           
 13124                           
 13125                           ;psect for function _led_update_day_status
 13126  0F50                     _led_update_day_status:	
 13127  0F50                     i1l3723:	
 13128                           ;incstack = 0
 13129                           ; Regs used in _led_update_day_status: [wregfsr1]
 13130                           
 13131                           
 13132                           ;app_led.c: 752: if(m_led_para.all_bright > 1000 - 200)
 13133  0F50  2785  318C         	fcall	PL32	;call to abstracted procedure
 13134  0F52  3F40               	moviw [0]fsr1
 13135  0F53  00F0               	movwf	??_led_update_day_status
 13136  0F54  3F41               	moviw [1]fsr1
 13137  0F55  00F1               	movwf	??_led_update_day_status+1
 13138  0F56  3003               	movlw	3
 13139  0F57  0271               	subwf	??_led_update_day_status+1,w
 13140  0F58  3021               	movlw	33
 13141  0F59  1903               	skipnz
 13142  0F5A  0270               	subwf	??_led_update_day_status,w
 13143  0F5B  1C03               	skipc
 13144  0F5C  2F60               	goto	i1l3727
 13145                           
 13146                           ;app_led.c: 753: {
 13147                           ;app_led.c: 754: led_run_para.mDr = 0;
 13148  0F5D  0020               	movlb	0	; select bank0
 13149  0F5E  11DD               	bcf	_led_run_para,3
 13150                           
 13151                           ;app_led.c: 755: }
 13152  0F5F  0008               	return
 13153  0F60                     i1l3727:	
 13154                           
 13155                           ;app_led.c: 756: else if(m_led_para.all_bright < 200)
 13156  0F60  2785  318C         	fcall	PL32	;call to abstracted procedure
 13157  0F62  3F40               	moviw [0]fsr1
 13158  0F63  00F0               	movwf	??_led_update_day_status
 13159  0F64  3F41               	moviw [1]fsr1
 13160  0F65  00F1               	movwf	??_led_update_day_status+1
 13161  0F66  3000               	movlw	0
 13162  0F67  0271               	subwf	??_led_update_day_status+1,w
 13163  0F68  30C8               	movlw	200
 13164  0F69  1903               	skipnz
 13165  0F6A  0270               	subwf	??_led_update_day_status,w
 13166  0F6B  1803               	skipnc
 13167  0F6C  0008               	return
 13168                           
 13169                           ;app_led.c: 757: {
 13170                           ;app_led.c: 758: led_run_para.mDr = 1;
 13171  0F6D  0020               	movlb	0	; select bank0
 13172  0F6E  15DD               	bsf	_led_run_para,3
 13173  0F6F  0008               	return
 13174  0F70                     __end_of_led_update_day_status:	
 13175  0F70                     __ptext112:	
 13176 ;; *************** function _led_state_day_release_cb *****************
 13177 ;; Defined at:
 13178 ;;		line 868 in file "src/app_led.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;		None
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;		None
 13183 ;; Return value:  Size  Location     Type
 13184 ;;                  1    wreg      void 
 13185 ;; Registers used:
 13186 ;;		wreg, status,2, status,0, pclath, cstack
 13187 ;; Tracked objects:
 13188 ;;		On entry : 1F/1
 13189 ;;		On exit  : 1F/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13196 ;;Total ram usage:        0 bytes
 13197 ;; Hardware stack levels used:    1
 13198 ;; Hardware stack levels required when called:    1
 13199 ;; This function calls:
 13200 ;;		i1_led_prepare_to_save
 13201 ;; This function is called by:
 13202 ;;		_led_state_day_cb
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           
 13207                           ;psect for function _led_state_day_release_cb
 13208  0F70                     _led_state_day_release_cb:	
 13209  0F70                     i1l3839:	
 13210                           ;incstack = 0
 13211                           ; Regs used in _led_state_day_release_cb: [wreg+status,2+status,0+pclath+cstack]
 13212                           
 13213                           
 13214                           ;app_led.c: 870: led_prepare_to_save();
 13215  0F70  274C               	fcall	i1_led_prepare_to_save
 13216  0F71  0008               	return
 13217  0F72                     __end_of_led_state_day_release_cb:	
 13218  0F72                     PL4:	
 13219  0F72  0084               	movwf	4
 13220  0F73  0185               	clrf	5
 13221  0F74  3F40               	moviw [0]fsr1
 13222  0F75  3F80               	movwi [0]fsr0
 13223  0F76  3F41               	moviw [1]fsr1
 13224  0F77  3F81               	movwi [1]fsr0
 13225  0F78  307F               	movlw	127
 13226  0F79  0086               	movwf	6
 13227  0F7A  3023               	movlw	35
 13228  0F7B  0087               	movwf	7
 13229  0F7C  0008               	return
 13230  0F7D                     __end_ofPL4:	
 13231  0F7D                     PL14:	
 13232  0F7D  307F               	movlw	127
 13233  0F7E  0086               	movwf	6
 13234  0F7F  3023               	movlw	35
 13235  0F80  0087               	movwf	7
 13236  0F81  3141               	addfsr 1,1
 13237  0F82  0801               	movf	1,w
 13238  0F83  3903               	andlw	3
 13239  0F84  0008               	return
 13240  0F85                     __end_ofPL14:	
 13241  0F85                     PL32:	
 13242  0F85  307F               	movlw	127
 13243  0F86  0086               	movwf	6
 13244  0F87  3023               	movlw	35
 13245  0F88  0087               	movwf	7
 13246  0F89  3142               	addfsr 1,2
 13247  0F8A  0008               	return
 13248  0F8B                     __end_ofPL32:	
 13249  0F8B                     PL60:	
 13250  0F8B  0874               	movf	i1led_update_night_bright@i,w
 13251  0F8C  00F0               	movwf	??i1_led_update_night_bright
 13252  0F8D  3088               	movlw	136
 13253  0F8E  01F1               	clrf	??i1_led_update_night_bright+1
 13254  0F8F  35F0               	lslf	??i1_led_update_night_bright,f
 13255  0F90  0DF1               	rlf	??i1_led_update_night_bright+1,f
 13256  0F91  00F2               	movwf	??i1_led_update_night_bright+2
 13257  0F92  3023               	movlw	35
 13258  0F93  00F3               	movwf	??i1_led_update_night_bright+3
 13259  0F94  0870               	movf	??i1_led_update_night_bright,w
 13260  0F95  0772               	addwf	??i1_led_update_night_bright+2,w
 13261  0F96  0008               	return
 13262  0F97                     __end_ofPL60:	
 13263  0F97                     PL78:	
 13264  0F97  3141               	addfsr 1,1
 13265  0F98  0C01               	rrf	1,w
 13266  0F99  0C89               	rrf	9,f
 13267  0F9A  3903               	andlw	3
 13268  0F9B  3A02               	xorlw	2
 13269  0F9C  307F               	movlw	127
 13270  0F9D  0086               	movwf	6
 13271  0F9E  3023               	movlw	35
 13272  0F9F  0087               	movwf	7
 13273  0FA0  0008               	return
 13274  0FA1                     __end_ofPL78:	
 13275  0FA1                     PL80:	
 13276  0FA1  00F0               	movwf	i1increase@psrc
 13277  0FA2  3023               	movlw	35
 13278  0FA3  00F1               	movwf	i1increase@psrc+1
 13279  0FA4  300A               	movlw	10
 13280  0FA5  00F2               	movwf	i1increase@delt
 13281  0FA6  30E8               	movlw	232
 13282  0FA7  00F3               	movwf	i1increase@max
 13283  0FA8  3003               	movlw	3
 13284  0FA9  00F4               	movwf	i1increase@max+1
 13285  0FAA  0008               	return
 13286  0FAB                     __end_ofPL80:	
 13287  0FAB                     PL90:	
 13288  0FAB  0085               	movwf	5
 13289  0FAC  3F40               	moviw [0]fsr1
 13290  0FAD  3F80               	movwi [0]fsr0
 13291  0FAE  3F41               	moviw [1]fsr1
 13292  0FAF  3F81               	movwi [1]fsr0
 13293  0FB0  0008               	return
 13294  0FB1                     __end_ofPL90:	
 13295  0FB1                     PL94:	
 13296  0FB1  00F0               	movwf	i1decrease@psrc
 13297  0FB2  3023               	movlw	35
 13298  0FB3  00F1               	movwf	i1decrease@psrc+1
 13299  0FB4  300A               	movlw	10
 13300  0FB5  00F2               	movwf	i1decrease@delt
 13301  0FB6  00F3               	movwf	i1decrease@min
 13302  0FB7  01F4               	clrf	i1decrease@min+1
 13303  0FB8  0008               	return
 13304  0FB9                     __end_ofPL94:	
 13305  0FB9                     PL112:	
 13306  0FB9  0281               	subwf	1,f
 13307  0FBA  3141               	addfsr 1,1
 13308  0FBB  1C03               	skipc
 13309  0FBC  0381               	decf	1,f
 13310  0FBD  317F               	addfsr 1,-1
 13311  0FBE  0008               	return
 13312  0FBF                     __end_ofPL112:	
 13313  0FBF                     PL122:	
 13314  0FBF  0781               	addwf	1,f
 13315  0FC0  3141               	addfsr 1,1
 13316  0FC1  1803               	skipnc
 13317  0FC2  0A81               	incf	1,f
 13318  0FC3  0008               	return
 13319  0FC4                     __end_ofPL122:	
 13320  0FC4                     PL130:	
 13321  0FC4  0022               	movlb	2	; select bank2
 13322  0FC5  130D               	bcf	13,6	;volatile
 13323  0FC6  108C               	bcf	12,1	;volatile
 13324  0FC7  138D               	bcf	13,7	;volatile
 13325  0FC8  0008               	return
 13326  0FC9                     __end_ofPL130:	
 13327  0FC9                     PL132:	
 13328  0FC9  0022               	movlb	2	; select bank2
 13329  0FCA  170D               	bsf	13,6	;volatile
 13330  0FCB  148C               	bsf	12,1	;volatile
 13331  0FCC  138D               	bcf	13,7	;volatile
 13332  0FCD  0008               	return
 13333  0FCE                     __end_ofPL132:	
 13334  0FCE                     PL134:	
 13335  0FCE  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 13336  0FCF  0086               	movwf	6
 13337  0FD0  3000               	movlw	0
 13338  0FD1  3FC0               	movwi [0]fsr1
 13339  0FD2  3FC1               	movwi [1]fsr1
 13340  0FD3  0008               	return
 13341  0FD4                     __end_ofPL134:	
 13342  0FD4                     PL136:	
 13343  0FD4  0022               	movlb	2	; select bank2
 13344  0FD5  170D               	bsf	13,6	;volatile
 13345  0FD6  108C               	bcf	12,1	;volatile
 13346  0FD7  178D               	bsf	13,7	;volatile
 13347  0FD8  0008               	return
 13348  0FD9                     __end_ofPL136:	
 13349  0FD9                     PL138:	
 13350  0FD9  0020               	movlb	0	; select bank0
 13351  0FDA  3003               	movlw	3
 13352  0FDB  155D               	bsf	_led_run_para,2
 13353  0FDC  00E0               	movwf	_led_run_para+3
 13354  0FDD  0008               	return
 13355  0FDE                     __end_ofPL138:	
 13356  0FDE                     PL154:	
 13357  0FDE  0087               	movwf	7
 13358  0FDF  3000               	movlw	0
 13359  0FE0  3FC0               	movwi [0]fsr1
 13360  0FE1  3FC1               	movwi [1]fsr1
 13361  0FE2  0008               	return
 13362  0FE3                     __end_ofPL154:	
 13363  0FE3                     __ptext45:	
 13364 ;; *************** function _led_set_power *****************
 13365 ;; Defined at:
 13366 ;;		line 2038 in file "src/app_led.c"
 13367 ;; Parameters:    Size  Location     Type
 13368 ;;  on              1    wreg     unsigned char 
 13369 ;; Auto vars:     Size  Location     Type
 13370 ;;  on              1    7[BANK0 ] unsigned char 
 13371 ;; Return value:  Size  Location     Type
 13372 ;;                  1    wreg      unsigned char 
 13373 ;; Registers used:
 13374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13375 ;; Tracked objects:
 13376 ;;		On entry : 1F/3
 13377 ;;		On exit  : 1F/0
 13378 ;;		Unchanged: 0/0
 13379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13381 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13383 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13384 ;;Total ram usage:        1 bytes
 13385 ;; Hardware stack levels used:    1
 13386 ;; Hardware stack levels required when called:   10
 13387 ;; This function calls:
 13388 ;;		_led_prepare_to_save
 13389 ;;		_led_turnoff_ramp
 13390 ;;		_led_turnon_ramp
 13391 ;; This function is called by:
 13392 ;;		_ble_decode
 13393 ;; This function uses a non-reentrant model
 13394 ;;
 13395                           
 13396                           
 13397                           ;psect for function _led_set_power
 13398  0FE3                     _led_set_power:	
 13399                           
 13400                           ;incstack = 0
 13401                           ; Regs used in _led_set_power: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13402                           ;led_set_power@on stored from wreg
 13403  0FE3  0020               	movlb	0	; select bank0
 13404  0FE4  00A7               	movwf	led_set_power@on
 13405                           
 13406                           ;app_led.c: 2040: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0)
 13407  0FE5  1C5D               	btfss	_led_run_para,0
 13408  0FE6  18DD               	btfsc	_led_run_para,1
 13409  0FE7  3400               	retlw	0
 13410  0FE8  3186  26AC  318C   	fcall	PL10	;call to abstracted procedure
 13411  0FEB  1D03               	btfss	3,2
 13412                           
 13413                           ;app_led.c: 2041: {
 13414                           ;app_led.c: 2042: return 0;
 13415  0FEC  3400               	retlw	0
 13416                           
 13417                           ;app_led.c: 2043: }
 13418                           ;app_led.c: 2048: m_led_para.ble_para.manual_para.mOn = on;
 13419  0FED  260C  318C         	fcall	PL54	;call to abstracted procedure
 13420  0FEF  0C27               	rrf	led_set_power@on,w
 13421  0FF0  1C03               	skipc
 13422  0FF1  1001               	bcf	1,0
 13423  0FF2  1803               	skipnc
 13424  0FF3  1401               	bsf	1,0
 13425                           
 13426                           ;app_led.c: 2049: if(on)
 13427  0FF4  0827               	movf	led_set_power@on,w
 13428  0FF5  1903               	btfsc	3,2
 13429  0FF6  2FFB               	goto	l4477
 13430                           
 13431                           ;app_led.c: 2050: {
 13432                           ;app_led.c: 2059: led_turnon_ramp();
 13433  0FF7  3185  25F2  318C   	fcall	_led_turnon_ramp
 13434                           
 13435                           ;app_led.c: 2063: }
 13436  0FFA  2FFE               	goto	l4479
 13437  0FFB                     l4477:	
 13438                           
 13439                           ;app_led.c: 2064: else
 13440                           ;app_led.c: 2065: {
 13441                           ;app_led.c: 2066: led_turnoff_ramp();
 13442  0FFB  3186  2699  318C   	fcall	_led_turnoff_ramp
 13443  0FFE                     l4479:	
 13444                           
 13445                           ;app_led.c: 2067: }
 13446                           ;app_led.c: 2068: led_prepare_to_save();
 13447  0FFE  2568               	fcall	_led_prepare_to_save
 13448                           
 13449                           ;app_led.c: 2069: return 1;
 13450  0FFF  3401               	retlw	1
 13451  1000                     __end_of_led_set_power:	
 13452                           
 13453                           	psect	swtext1
 13454  1822                     __pswtext1:	
 13455  1822                     S6601:	
 13456  1822  318C  2CCB         	ljmp	l6077
 13457  1824  318D  2D01         	ljmp	l472
 13458  1826  318C  2C36         	ljmp	l6007
 13459  1828  318C  2C44         	ljmp	l6013
 13460  182A  318C  2C4E         	ljmp	l6019
 13461  182C  318C  2C56         	ljmp	l6023
 13462  182E  318C  2C5C         	ljmp	l6027
 13463  1830  318C  2C66         	ljmp	l6033
 13464  1832  318C  2C6F         	ljmp	l6039
 13465  1834  318C  2C7C         	ljmp	l6043
 13466  1836  318D  2D01         	ljmp	l472
 13467  1838  318C  2C89         	ljmp	l6047
 13468  183A  318C  2C96         	ljmp	l6053
 13469  183C  318D  2D01         	ljmp	l472
 13470  183E  318C  2C9C         	ljmp	l6057
 13471  1840  318C  2CA5         	ljmp	l6063
 13472  1842  318C  2CAB         	ljmp	l6067
 13473                           
 13474                           	psect	text43
 13475  0870                     __ptext43:	
 13476 ;; *************** function _led_set_pro *****************
 13477 ;; Defined at:
 13478 ;;		line 2135 in file "src/app_led.c"
 13479 ;; Parameters:    Size  Location     Type
 13480 ;;  pbuf            1    wreg     const PTR const unsigned
 13481 ;;		 -> rx_buf(80), 
 13482 ;; Auto vars:     Size  Location     Type
 13483 ;;  pbuf            1   14[BANK0 ] const PTR const unsigned
 13484 ;;		 -> rx_buf(80), 
 13485 ;;  i               1   15[BANK0 ] unsigned char 
 13486 ;;  len             1   13[BANK0 ] unsigned char 
 13487 ;; Return value:  Size  Location     Type
 13488 ;;                  1    wreg      unsigned char 
 13489 ;; Registers used:
 13490 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13491 ;; Tracked objects:
 13492 ;;		On entry : 1F/0
 13493 ;;		On exit  : 1F/0
 13494 ;;		Unchanged: 0/0
 13495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13497 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13498 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13499 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13500 ;;Total ram usage:       11 bytes
 13501 ;; Hardware stack levels used:    1
 13502 ;; Hardware stack levels required when called:   10
 13503 ;; This function calls:
 13504 ;;		___bmul
 13505 ;;		_led_prepare_to_save
 13506 ;; This function is called by:
 13507 ;;		_ble_decode
 13508 ;; This function uses a non-reentrant model
 13509 ;;
 13510                           
 13511                           
 13512                           ;psect for function _led_set_pro
 13513  0870                     _led_set_pro:	
 13514                           
 13515                           ;incstack = 0
 13516                           ; Regs used in _led_set_pro: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13517                           ;led_set_pro@pbuf stored from wreg
 13518  0870  00AE               	movwf	led_set_pro@pbuf
 13519                           
 13520                           ;app_led.c: 2141: uint8_t len = (*pbuf)*(2+4)+1;
 13521  0871  3006               	movlw	6
 13522  0872  00A2               	movwf	___bmul@multiplicand
 13523  0873  082E               	movf	led_set_pro@pbuf,w
 13524  0874  0086               	movwf	6
 13525  0875  3001               	movlw	1	; select bank2/3
 13526  0876  0087               	movwf	7
 13527  0877  0801               	movf	1,w
 13528  0878  235E  3188         	fcall	___bmul
 13529  087A  3E01               	addlw	1
 13530  087B  00AD               	movwf	led_set_pro@len
 13531                           
 13532                           ;app_led.c: 2142: for(uint8_t i = 0; i < len; i++)
 13533  087C  01AF               	clrf	led_set_pro@i
 13534  087D                     l4655:	
 13535  087D  082D               	movf	led_set_pro@len,w
 13536  087E  022F               	subwf	led_set_pro@i,w
 13537  087F  1803               	btfsc	3,0
 13538  0880  289E               	goto	l4657
 13539                           
 13540                           ;app_led.c: 2143: {
 13541                           ;app_led.c: 2144: m_led_para.ble_para.pro_para.array[i] = *(pbuf+i);
 13542  0881  082F               	movf	led_set_pro@i,w
 13543  0882  072E               	addwf	led_set_pro@pbuf,w
 13544  0883  00A5               	movwf	??_led_set_pro
 13545  0884  0086               	movwf	6
 13546  0885  3001               	movlw	1	; select bank2/3
 13547  0886  0087               	movwf	7
 13548  0887  0801               	movf	1,w
 13549  0888  00A6               	movwf	??_led_set_pro+1
 13550  0889  082F               	movf	led_set_pro@i,w
 13551  088A  00A7               	movwf	??_led_set_pro+2
 13552  088B  30B3               	movlw	179
 13553  088C  01A8               	clrf	??_led_set_pro+3
 13554  088D  00A9               	movwf	??_led_set_pro+4
 13555  088E  3023               	movlw	35
 13556  088F  00AA               	movwf	??_led_set_pro+5
 13557  0890  0827               	movf	??_led_set_pro+2,w
 13558  0891  0729               	addwf	??_led_set_pro+4,w
 13559  0892  00AB               	movwf	??_led_set_pro+6
 13560  0893  0828               	movf	??_led_set_pro+3,w
 13561  0894  3D2A               	addwfc	??_led_set_pro+5,w
 13562  0895  00AC               	movwf	??_led_set_pro+7
 13563  0896  082B               	movf	??_led_set_pro+6,w
 13564  0897  0086               	movwf	6
 13565  0898  082C               	movf	??_led_set_pro+7,w
 13566  0899  0087               	movwf	7
 13567  089A  0826               	movf	??_led_set_pro+1,w
 13568  089B  0081               	movwf	1
 13569  089C  0AAF               	incf	led_set_pro@i,f
 13570  089D  287D               	goto	l4655
 13571  089E                     l4657:	
 13572                           
 13573                           ;app_led.c: 2145: }
 13574                           ;app_led.c: 2146: led_prepare_to_save();
 13575  089E  318D  2568         	fcall	_led_prepare_to_save
 13576                           
 13577                           ;app_led.c: 2147: return 1;
 13578  08A0  3401               	retlw	1
 13579  08A1                     __end_of_led_set_pro:	
 13580  08A1                     start_initialization:	
 13581                           ; #config settings
 13582                           
 13583  08A1                     __initialization:		;BIGRAM
 13584                           
 13585                           ; Initialize objects allocated to BANK2
 13586  08A1  3050               	movlw	low __pidataBANK2
 13587  08A2  0084               	movwf	4
 13588  08A3  309E               	movlw	(high __pidataBANK2)| (0+128)
 13589  08A4  0085               	movwf	5
 13590  08A5  3020               	movlw	low __pdataBANK2
 13591  08A6  0086               	movwf	6
 13592  08A7  3001               	movlw	high __pdataBANK2
 13593  08A8  0087               	movwf	7
 13594  08A9  3000               	movlw	0
 13595  08AA  00FF               	movwf	127
 13596  08AB  3035               	movlw	53
 13597  08AC  319E  2604  3188   	fcall	init_ram
 13598                           
 13599                           ; Clear objects allocated to BIGRAM
 13600  08AF  307F               	movlw	127
 13601  08B0  0084               	movwf	4
 13602  08B1  3023               	movlw	35
 13603  08B2  0085               	movwf	5
 13604  08B3  3071               	movlw	113
 13605  08B4  00FE               	movwf	126
 13606  08B5  3000               	movlw	0
 13607  08B6  00FF               	movwf	127
 13608  08B7  319D  25F8  3188   	fcall	clear_ram0
 13609                           
 13610                           ; Clear objects allocated to BANK0
 13611  08BA  3055               	movlw	low __pbssBANK0
 13612  08BB  0084               	movwf	4
 13613  08BC  3000               	movlw	high __pbssBANK0
 13614  08BD  0085               	movwf	5
 13615  08BE  3017               	movlw	23
 13616  08BF  00FE               	movwf	126
 13617  08C0  3000               	movlw	0
 13618  08C1  00FF               	movwf	127
 13619  08C2  319D  25F8  3188   	fcall	clear_ram0
 13620                           
 13621                           ; Clear objects allocated to BANK1
 13622  08C5  30D7               	movlw	low __pbssBANK1
 13623  08C6  0084               	movwf	4
 13624  08C7  3000               	movlw	high __pbssBANK1
 13625  08C8  0085               	movwf	5
 13626  08C9  300F               	movlw	15
 13627  08CA  00FE               	movwf	126
 13628  08CB  3000               	movlw	0
 13629  08CC  00FF               	movwf	127
 13630  08CD  319D  25F8  3188   	fcall	clear_ram0
 13631                           
 13632                           ; Clear objects allocated to BANK3
 13633  08D0  30A0               	movlw	low __pbssBANK3
 13634  08D1  0084               	movwf	4
 13635  08D2  3001               	movlw	high __pbssBANK3
 13636  08D3  0085               	movwf	5
 13637  08D4  3050               	movlw	80
 13638  08D5  00FE               	movwf	126
 13639  08D6  3000               	movlw	0
 13640  08D7  00FF               	movwf	127
 13641  08D8  319D  25F8  3188   	fcall	clear_ram0
 13642                           
 13643                           ; Clear objects allocated to BANK4
 13644  08DB  3020               	movlw	low __pbssBANK4
 13645  08DC  0084               	movwf	4
 13646  08DD  3002               	movlw	high __pbssBANK4
 13647  08DE  0085               	movwf	5
 13648  08DF  3040               	movlw	64
 13649  08E0  00FE               	movwf	126
 13650  08E1  3000               	movlw	0
 13651  08E2  00FF               	movwf	127
 13652  08E3  319D  25F8  3188   	fcall	clear_ram0
 13653  08E6                     end_of_initialization:	
 13654                           ;End of C runtime variable initialization code
 13655                           
 13656  08E6                     __end_of__initialization:	
 13657  08E6  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 13658  08E7  0020               	movlb	0
 13659  08E8  28E9               	ljmp	_main	;jump to C main() function
 13660  08E9                     __pmaintext:	
 13661                           ; 1 bytes @ 0x35
 13662 ;;
 13663 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 13664 ;;
 13665 ;; *************** function _main *****************
 13666 ;; Defined at:
 13667 ;;		line 149 in file "src/app_main.c"
 13668 ;; Parameters:    Size  Location     Type
 13669 ;;		None
 13670 ;; Auto vars:     Size  Location     Type
 13671 ;;		None
 13672 ;; Return value:  Size  Location     Type
 13673 ;;                  1    wreg      void 
 13674 ;; Registers used:
 13675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13676 ;; Tracked objects:
 13677 ;;		On entry : B1F/0
 13678 ;;		On exit  : 1F/0
 13679 ;;		Unchanged: 0/0
 13680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13685 ;;Total ram usage:        0 bytes
 13686 ;; Hardware stack levels required when called:   13
 13687 ;; This function calls:
 13688 ;;		_app_init
 13689 ;;		_ble_init
 13690 ;;		_ble_process
 13691 ;;		_led_init
 13692 ;;		_led_second_cb
 13693 ;;		_rtc_init
 13694 ;;		_rtc_second_ready
 13695 ;; This function is called by:
 13696 ;;		Startup code after reset
 13697 ;; This function uses a non-reentrant model
 13698 ;;
 13699                           
 13700                           
 13701                           ;psect for function _main
 13702  08E9                     _main:	
 13703                           
 13704                           ;app_main.c: 151: app_init();
 13705                           
 13706                           ;incstack = 0
 13707                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13708  08E9  2102  3188         	fcall	_app_init
 13709                           
 13710                           ;app_main.c: 152: ble_init();
 13711  08EB  21ED  3188         	fcall	_ble_init
 13712                           
 13713                           ;app_main.c: 153: rtc_init();
 13714  08ED  23EB  3188         	fcall	_rtc_init
 13715                           
 13716                           ;app_main.c: 154: led_init();
 13717  08EF  2297  3188         	fcall	_led_init
 13718                           
 13719                           ;app_main.c: 155: (PIE1bits.RCIE = 1);
 13720  08F1  0021               	movlb	1	; select bank1
 13721  08F2  1691               	bsf	17,5	;volatile
 13722                           
 13723                           ;app_main.c: 156: (T0CON0bits.T0EN = 1);
 13724  08F3  0020               	movlb	0	; select bank0
 13725  08F4  1797               	bsf	23,7	;volatile
 13726                           
 13727                           ;app_main.c: 157: (T2CONbits.TMR2ON = 1);
 13728  08F5  151F               	bsf	31,2	;volatile
 13729  08F6                     l1137:	
 13730                           ;app_main.c: 159: while(1)
 13731                           
 13732  08F6  0064               	clrwdt	;# 
 13733                           
 13734                           ;app_main.c: 163: ble_process();
 13735  08F7  23BF  3188         	fcall	_ble_process
 13736                           
 13737                           ;app_main.c: 164: if(rtc_second_ready())
 13738  08F9  23F6  3188         	fcall	_rtc_second_ready
 13739  08FB  3A00               	xorlw	0
 13740  08FC  1903               	skipnz
 13741  08FD  28F6               	goto	l1137
 13742                           
 13743                           ;app_main.c: 165: {
 13744                           ;app_main.c: 166: led_second_cb();
 13745  08FE  3194  24B9  3188   	fcall	_led_second_cb
 13746  0901  28F6               	goto	l1137
 13747  0902                     __end_of_main:	
 13748  0902                     __ptext69:	
 13749 ;; *************** function _app_init *****************
 13750 ;; Defined at:
 13751 ;;		line 109 in file "src/app_main.c"
 13752 ;; Parameters:    Size  Location     Type
 13753 ;;		None
 13754 ;; Auto vars:     Size  Location     Type
 13755 ;;		None
 13756 ;; Return value:  Size  Location     Type
 13757 ;;                  1    wreg      void 
 13758 ;; Registers used:
 13759 ;;		wreg, status,2, status,0, pclath, cstack
 13760 ;; Tracked objects:
 13761 ;;		On entry : B1F/0
 13762 ;;		On exit  : B1F/1
 13763 ;;		Unchanged: B00/0
 13764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13769 ;;Total ram usage:        0 bytes
 13770 ;; Hardware stack levels used:    1
 13771 ;; Hardware stack levels required when called:   10
 13772 ;; This function calls:
 13773 ;;		_eusart_init
 13774 ;;		_gpio_init
 13775 ;;		_key_init
 13776 ;;		_osc_init
 13777 ;;		_pwm1_init
 13778 ;;		_pwm2_init
 13779 ;;		_pwm3_init
 13780 ;;		_pwm4_init
 13781 ;;		_pwm5_init
 13782 ;;		_tmr0_init
 13783 ;;		_tmr2_init
 13784 ;; This function is called by:
 13785 ;;		_main
 13786 ;; This function uses a non-reentrant model
 13787 ;;
 13788                           
 13789                           
 13790                           ;psect for function _app_init
 13791  0902                     _app_init:	
 13792                           
 13793                           ;app_main.c: 111: gpio_init();
 13794                           
 13795                           ;incstack = 0
 13796                           ; Regs used in _app_init: [wreg+status,2+status,0+pclath+cstack]
 13797  0902  2149  3188         	fcall	_gpio_init
 13798                           
 13799                           ;app_main.c: 112: osc_init();
 13800  0904  218D  3188         	fcall	_osc_init
 13801                           
 13802                           ;app_main.c: 113: pwm1_init();
 13803  0906  2197  3188         	fcall	_pwm1_init
 13804                           
 13805                           ;app_main.c: 114: pwm2_init();
 13806  0908  21A1  3188         	fcall	_pwm2_init
 13807                           
 13808                           ;app_main.c: 115: pwm3_init();
 13809  090A  21AA  3188         	fcall	_pwm3_init
 13810                           
 13811                           ;app_main.c: 116: pwm4_init();
 13812  090C  21B5  3188         	fcall	_pwm4_init
 13813                           
 13814                           ;app_main.c: 117: pwm5_init();
 13815  090E  21C0  3188         	fcall	_pwm5_init
 13816                           
 13817                           ;app_main.c: 118: tmr0_init(rtc_process);
 13818  0910  303C               	movlw	low _rtc_process
 13819  0911  0020               	movlb	0	; select bank0
 13820  0912  00A2               	movwf	tmr0_init@cb
 13821  0913  3010               	movlw	high _rtc_process
 13822  0914  00A3               	movwf	tmr0_init@cb+1
 13823  0915  21CA  3188         	fcall	_tmr0_init
 13824                           
 13825                           ;app_main.c: 119: tmr2_init(tmr2_isr_callback);
 13826  0917  300B               	movlw	low _tmr2_isr_callback
 13827  0918  0020               	movlb	0	; select bank0
 13828  0919  00A2               	movwf	tmr2_init@cb
 13829  091A  301F               	movlw	high _tmr2_isr_callback
 13830  091B  00A3               	movwf	tmr2_init@cb+1
 13831  091C  21DC  3188         	fcall	_tmr2_init
 13832                           
 13833                           ;app_main.c: 120: eusart_init(ble_receive);
 13834  091E  3000               	movlw	low _ble_receive
 13835  091F  0020               	movlb	0	; select bank0
 13836  0920  00A2               	movwf	eusart_init@cb
 13837  0921  3008               	movlw	high _ble_receive
 13838  0922  00A3               	movwf	eusart_init@cb+1
 13839  0923  212E  3188         	fcall	_eusart_init
 13840                           
 13841                           ;app_main.c: 122: key_init(led_touch_cb);
 13842  0925  30CC               	movlw	low _led_touch_cb
 13843  0926  0020               	movlb	0	; select bank0
 13844  0927  00A2               	movwf	key_init@cb
 13845  0928  301F               	movlw	high _led_touch_cb
 13846  0929  00A3               	movwf	key_init@cb+1
 13847  092A  23FC               	fcall	_key_init
 13848                           
 13849                           ;app_main.c: 125: (INTCONbits.GIE = 1);
 13850  092B  178B               	bsf	11,7	;volatile
 13851                           
 13852                           ;app_main.c: 126: (INTCONbits.PEIE = 1);
 13853  092C  170B               	bsf	11,6	;volatile
 13854  092D  0008               	return
 13855  092E                     __end_of_app_init:	
 13856  092E                     __ptext80:	
 13857 ;; *************** function _eusart_init *****************
 13858 ;; Defined at:
 13859 ;;		line 12 in file "src/drv_eusart.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;  cb              2    2[BANK0 ] PTR FTN(unsigned char ,)
 13862 ;;		 -> ble_receive(1), 
 13863 ;; Auto vars:     Size  Location     Type
 13864 ;;		None
 13865 ;; Return value:  Size  Location     Type
 13866 ;;                  1    wreg      void 
 13867 ;; Registers used:
 13868 ;;		wreg, status,2
 13869 ;; Tracked objects:
 13870 ;;		On entry : B1F/0
 13871 ;;		On exit  : B1F/1
 13872 ;;		Unchanged: B00/0
 13873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13874 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13877 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13878 ;;Total ram usage:        2 bytes
 13879 ;; Hardware stack levels used:    1
 13880 ;; Hardware stack levels required when called:    9
 13881 ;; This function calls:
 13882 ;;		Nothing
 13883 ;; This function is called by:
 13884 ;;		_app_init
 13885 ;; This function uses a non-reentrant model
 13886 ;;
 13887                           
 13888                           
 13889                           ;psect for function _eusart_init
 13890  092E                     _eusart_init:	
 13891                           
 13892                           ;drv_eusart.c: 14: PIE1bits.RCIE = 0;
 13893                           
 13894                           ;incstack = 0
 13895                           ; Regs used in _eusart_init: [wreg+status,2]
 13896  092E  0021               	movlb	1	; select bank1
 13897  092F  1291               	bcf	17,5	;volatile
 13898                           
 13899                           ;drv_eusart.c: 15: PIE1bits.TXIE = 0;
 13900  0930  1211               	bcf	17,4	;volatile
 13901                           
 13902                           ;drv_eusart.c: 17: BAUD1CON = 0x08;
 13903  0931  3008               	movlw	8
 13904  0932  0023               	movlb	3	; select bank3
 13905  0933  009F               	movwf	31	;volatile
 13906                           
 13907                           ;drv_eusart.c: 18: RC1STA = 0x90;
 13908  0934  3090               	movlw	144
 13909  0935  009D               	movwf	29	;volatile
 13910                           
 13911                           ;drv_eusart.c: 19: TX1STA = 0x24;
 13912  0936  3024               	movlw	36
 13913  0937  009E               	movwf	30	;volatile
 13914                           
 13915                           ;drv_eusart.c: 20: SP1BRGL = 0xA0;
 13916  0938  30A0               	movlw	160
 13917  0939  009B               	movwf	27	;volatile
 13918                           
 13919                           ;drv_eusart.c: 21: SP1BRGH = 0x01;
 13920  093A  3001               	movlw	1
 13921  093B  009C               	movwf	28	;volatile
 13922                           
 13923                           ;drv_eusart.c: 24: tx_tail = 0;
 13924  093C  0020               	movlb	0	; select bank0
 13925  093D  3040               	movlw	64
 13926  093E  01EB               	clrf	_tx_tail
 13927  093F  01EA               	clrf	_tx_head
 13928                           
 13929                           ;drv_eusart.c: 26: tx_remain = sizeof(tx_buf);
 13930  0940  00EC               	movwf	_tx_remain
 13931                           
 13932                           ;drv_eusart.c: 27: eusart_rcv_cb = cb;
 13933  0941  0823               	movf	eusart_init@cb+1,w
 13934  0942  0021               	movlb	1	; select bank1
 13935  0943  00E9               	movwf	(_eusart_rcv_cb+1)^(0+128)
 13936  0944  0020               	movlb	0	; select bank0
 13937  0945  0822               	movf	eusart_init@cb,w
 13938  0946  0021               	movlb	1	; select bank1
 13939  0947  00E8               	movwf	_eusart_rcv_cb^(0+128)
 13940  0948  0008               	return
 13941  0949                     __end_of_eusart_init:	
 13942  0949                     __ptext79:	
 13943 ;; *************** function _gpio_init *****************
 13944 ;; Defined at:
 13945 ;;		line 38 in file "src/app_main.c"
 13946 ;; Parameters:    Size  Location     Type
 13947 ;;		None
 13948 ;; Auto vars:     Size  Location     Type
 13949 ;;		None
 13950 ;; Return value:  Size  Location     Type
 13951 ;;                  1    wreg      void 
 13952 ;; Registers used:
 13953 ;;		wreg, status,2, status,0
 13954 ;; Tracked objects:
 13955 ;;		On entry : B1F/0
 13956 ;;		On exit  : B1F/1C
 13957 ;;		Unchanged: B00/0
 13958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13963 ;;Total ram usage:        0 bytes
 13964 ;; Hardware stack levels used:    1
 13965 ;; Hardware stack levels required when called:    9
 13966 ;; This function calls:
 13967 ;;		Nothing
 13968 ;; This function is called by:
 13969 ;;		_app_init
 13970 ;; This function uses a non-reentrant model
 13971 ;;
 13972                           
 13973                           
 13974                           ;psect for function _gpio_init
 13975  0949                     _gpio_init:	
 13976                           
 13977                           ;app_main.c: 43: LATA = 0x02;
 13978                           
 13979                           ;incstack = 0
 13980                           ; Regs used in _gpio_init: [wreg+status,2+status,0]
 13981  0949  3002               	movlw	2
 13982  094A  0022               	movlb	2	; select bank2
 13983  094B  008C               	movwf	12	;volatile
 13984                           
 13985                           ;app_main.c: 44: LATB = 0xD0;
 13986  094C  30D0               	movlw	208
 13987  094D  008D               	movwf	13	;volatile
 13988                           
 13989                           ;app_main.c: 45: LATC = 0x00;
 13990  094E  018E               	clrf	14	;volatile
 13991                           
 13992                           ;app_main.c: 50: TRISA = 0x34;
 13993  094F  3034               	movlw	52
 13994  0950  0021               	movlb	1	; select bank1
 13995  0951  008C               	movwf	12	;volatile
 13996                           
 13997                           ;app_main.c: 51: TRISB = 0x00;
 13998  0952  018D               	clrf	13	;volatile
 13999                           
 14000                           ;app_main.c: 52: TRISC = 0x05;
 14001  0953  3005               	movlw	5
 14002  0954  008E               	movwf	14	;volatile
 14003                           
 14004                           ;app_main.c: 57: ANSELC = 0x00;
 14005  0955  0023               	movlb	3	; select bank3
 14006  0956  018E               	clrf	14	;volatile
 14007                           
 14008                           ;app_main.c: 58: ANSELB = 0x00;
 14009  0957  018D               	clrf	13	;volatile
 14010                           
 14011                           ;app_main.c: 59: ANSELA = 0x00;
 14012  0958  018C               	clrf	12	;volatile
 14013                           
 14014                           ;app_main.c: 64: WPUB = 0x00;
 14015  0959  0024               	movlb	4	; select bank4
 14016  095A  018D               	clrf	13	;volatile
 14017                           
 14018                           ;app_main.c: 65: WPUA = 0x04;
 14019  095B  3004               	movlw	4
 14020  095C  008C               	movwf	12	;volatile
 14021                           
 14022                           ;app_main.c: 66: WPUC = 0x01;
 14023  095D  3001               	movlw	1
 14024  095E  008E               	movwf	14	;volatile
 14025                           
 14026                           ;app_main.c: 71: ODCONA = 0x00;
 14027  095F  0025               	movlb	5	; select bank5
 14028  0960  018C               	clrf	12	;volatile
 14029                           
 14030                           ;app_main.c: 72: ODCONB = 0x00;
 14031  0961  018D               	clrf	13	;volatile
 14032                           
 14033                           ;app_main.c: 73: ODCONC = 0x00;
 14034  0962  018E               	clrf	14	;volatile
 14035                           
 14036                           ;app_main.c: 75: PPSLOCK = 0x55;
 14037  0963  3055               	movlw	85
 14038  0964  003C               	movlb	28	; select bank28
 14039  0965  008F               	movwf	15	;volsfr
 14040                           
 14041                           ;app_main.c: 76: PPSLOCK = 0xAA;
 14042  0966  30AA               	movlw	170
 14043  0967  008F               	movwf	15	;volsfr
 14044                           
 14045                           ;app_main.c: 77: PPSLOCKbits.PPSLOCKED = 0x00;
 14046  0968  100F               	bcf	15,0	;volsfr
 14047                           
 14048                           ;app_main.c: 79: RXPPSbits.RXPPS = 0x12;
 14049  0969  0824               	movf	36,w	;volatile
 14050  096A  39E0               	andlw	-32
 14051  096B  3812               	iorlw	18
 14052  096C  00A4               	movwf	36	;volatile
 14053                           
 14054                           ;app_main.c: 80: RB4PPSbits.RB4PPS = 0x14;
 14055  096D  003D               	movlb	29	; select bank29
 14056  096E  081C               	movf	28,w	;volatile
 14057  096F  39E0               	andlw	-32
 14058  0970  3814               	iorlw	20
 14059  0971  009C               	movwf	28	;volatile
 14060                           
 14061                           ;app_main.c: 81: RC5PPSbits.RC5PPS = 0x0C;
 14062  0972  0825               	movf	37,w	;volatile
 14063  0973  39E0               	andlw	-32
 14064  0974  380C               	iorlw	12
 14065  0975  00A5               	movwf	37	;volatile
 14066                           
 14067                           ;app_main.c: 82: RC4PPSbits.RC4PPS = 0x0D;
 14068  0976  0824               	movf	36,w	;volatile
 14069  0977  39E0               	andlw	-32
 14070  0978  380D               	iorlw	13
 14071  0979  00A4               	movwf	36	;volatile
 14072                           
 14073                           ;app_main.c: 83: RC3PPSbits.RC3PPS = 0x0E;
 14074  097A  0823               	movf	35,w	;volatile
 14075  097B  39E0               	andlw	-32
 14076  097C  380E               	iorlw	14
 14077  097D  00A3               	movwf	35	;volatile
 14078                           
 14079                           ;app_main.c: 84: RC6PPSbits.RC6PPS = 0x0F;
 14080  097E  0826               	movf	38,w	;volatile
 14081  097F  39E0               	andlw	-32
 14082  0980  380F               	iorlw	15
 14083  0981  00A6               	movwf	38	;volatile
 14084                           
 14085                           ;app_main.c: 85: RC7PPSbits.RC7PPS = 0x02;
 14086  0982  0827               	movf	39,w	;volatile
 14087  0983  39E0               	andlw	-32
 14088  0984  3802               	iorlw	2
 14089  0985  00A7               	movwf	39	;volatile
 14090                           
 14091                           ;app_main.c: 87: PPSLOCK = 0x55;
 14092  0986  3055               	movlw	85
 14093  0987  003C               	movlb	28	; select bank28
 14094  0988  008F               	movwf	15	;volsfr
 14095                           
 14096                           ;app_main.c: 88: PPSLOCK = 0xAA;
 14097  0989  30AA               	movlw	170
 14098  098A  008F               	movwf	15	;volsfr
 14099                           
 14100                           ;app_main.c: 89: PPSLOCKbits.PPSLOCKED = 0x01;
 14101  098B  140F               	bsf	15,0	;volsfr
 14102  098C  0008               	return
 14103  098D                     __end_of_gpio_init:	
 14104  098D                     __ptext77:	
 14105 ;; *************** function _osc_init *****************
 14106 ;; Defined at:
 14107 ;;		line 23 in file "src/app_main.c"
 14108 ;; Parameters:    Size  Location     Type
 14109 ;;		None
 14110 ;; Auto vars:     Size  Location     Type
 14111 ;;		None
 14112 ;; Return value:  Size  Location     Type
 14113 ;;                  1    wreg      void 
 14114 ;; Registers used:
 14115 ;;		wreg, status,2
 14116 ;; Tracked objects:
 14117 ;;		On entry : B1F/1C
 14118 ;;		On exit  : B1F/12
 14119 ;;		Unchanged: B00/0
 14120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14125 ;;Total ram usage:        0 bytes
 14126 ;; Hardware stack levels used:    1
 14127 ;; Hardware stack levels required when called:    9
 14128 ;; This function calls:
 14129 ;;		Nothing
 14130 ;; This function is called by:
 14131 ;;		_app_init
 14132 ;; This function uses a non-reentrant model
 14133 ;;
 14134                           
 14135                           
 14136                           ;psect for function _osc_init
 14137  098D                     _osc_init:	
 14138                           
 14139                           ;app_main.c: 26: OSCCON1 = 0x60;
 14140                           
 14141                           ;incstack = 0
 14142                           ; Regs used in _osc_init: [wreg+status,2]
 14143  098D  3060               	movlw	96
 14144  098E  0032               	movlb	18	; select bank18
 14145  098F  0099               	movwf	25	;volatile
 14146                           
 14147                           ;app_main.c: 28: OSCCON3 = 0x00;
 14148  0990  019B               	clrf	27	;volatile
 14149                           
 14150                           ;app_main.c: 30: OSCEN = 0x48;
 14151  0991  3048               	movlw	72
 14152  0992  009D               	movwf	29	;volatile
 14153                           
 14154                           ;app_main.c: 32: OSCFRQ = 0x06;
 14155  0993  3006               	movlw	6
 14156  0994  009F               	movwf	31	;volatile
 14157                           
 14158                           ;app_main.c: 34: OSCTUNE = 0x00;
 14159  0995  019E               	clrf	30	;volatile
 14160  0996  0008               	return
 14161  0997                     __end_of_osc_init:	
 14162  0997                     __ptext76:	
 14163 ;; *************** function _pwm1_init *****************
 14164 ;; Defined at:
 14165 ;;		line 3 in file "src/drv_pwm.c"
 14166 ;; Parameters:    Size  Location     Type
 14167 ;;		None
 14168 ;; Auto vars:     Size  Location     Type
 14169 ;;		None
 14170 ;; Return value:  Size  Location     Type
 14171 ;;                  1    wreg      void 
 14172 ;; Registers used:
 14173 ;;		wreg, status,2, status,0
 14174 ;; Tracked objects:
 14175 ;;		On entry : B1F/12
 14176 ;;		On exit  : B1F/5
 14177 ;;		Unchanged: B00/0
 14178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14183 ;;Total ram usage:        0 bytes
 14184 ;; Hardware stack levels used:    1
 14185 ;; Hardware stack levels required when called:    9
 14186 ;; This function calls:
 14187 ;;		Nothing
 14188 ;; This function is called by:
 14189 ;;		_app_init
 14190 ;; This function uses a non-reentrant model
 14191 ;;
 14192                           
 14193                           
 14194                           ;psect for function _pwm1_init
 14195  0997                     _pwm1_init:	
 14196                           
 14197                           ;drv_pwm.c: 6: CCP1CON = 0x8F;
 14198                           
 14199                           ;incstack = 0
 14200                           ; Regs used in _pwm1_init: [wreg+status,2+status,0]
 14201  0997  308F               	movlw	143
 14202  0998  0025               	movlb	5	; select bank5
 14203  0999  0093               	movwf	19	;volatile
 14204                           
 14205                           ;drv_pwm.c: 9: CCPR1H = 0x00;
 14206  099A  0192               	clrf	18	;volatile
 14207                           
 14208                           ;drv_pwm.c: 12: CCPR1L = 0x00;
 14209  099B  0191               	clrf	17	;volatile
 14210                           
 14211                           ;drv_pwm.c: 15: CCPTMRSbits.C1TSEL = 0x1;
 14212  099C  081F               	movf	31,w	;volatile
 14213  099D  39FC               	andlw	-4
 14214  099E  3801               	iorlw	1
 14215  099F  009F               	movwf	31	;volatile
 14216  09A0  0008               	return
 14217  09A1                     __end_of_pwm1_init:	
 14218  09A1                     __ptext75:	
 14219 ;; *************** function _pwm2_init *****************
 14220 ;; Defined at:
 14221 ;;		line 25 in file "src/drv_pwm.c"
 14222 ;; Parameters:    Size  Location     Type
 14223 ;;		None
 14224 ;; Auto vars:     Size  Location     Type
 14225 ;;		None
 14226 ;; Return value:  Size  Location     Type
 14227 ;;                  1    wreg      void 
 14228 ;; Registers used:
 14229 ;;		wreg, status,2, status,0
 14230 ;; Tracked objects:
 14231 ;;		On entry : B1F/5
 14232 ;;		On exit  : B1F/5
 14233 ;;		Unchanged: B00/0
 14234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14239 ;;Total ram usage:        0 bytes
 14240 ;; Hardware stack levels used:    1
 14241 ;; Hardware stack levels required when called:    9
 14242 ;; This function calls:
 14243 ;;		Nothing
 14244 ;; This function is called by:
 14245 ;;		_app_init
 14246 ;; This function uses a non-reentrant model
 14247 ;;
 14248                           
 14249                           
 14250                           ;psect for function _pwm2_init
 14251  09A1                     _pwm2_init:	
 14252                           
 14253                           ;drv_pwm.c: 28: CCP2CON = 0x8F;
 14254                           
 14255                           ;incstack = 0
 14256                           ; Regs used in _pwm2_init: [wreg+status,2+status,0]
 14257  09A1  308F               	movlw	143
 14258  09A2  0097               	movwf	23	;volatile
 14259                           
 14260                           ;drv_pwm.c: 31: CCPR2H = 0x00;
 14261  09A3  0196               	clrf	22	;volatile
 14262                           
 14263                           ;drv_pwm.c: 34: CCPR2L = 0x00;
 14264  09A4  0195               	clrf	21	;volatile
 14265                           
 14266                           ;drv_pwm.c: 37: CCPTMRSbits.C2TSEL = 0x1;
 14267  09A5  081F               	movf	31,w	;volatile
 14268  09A6  39F3               	andlw	-13
 14269  09A7  3804               	iorlw	4
 14270  09A8  009F               	movwf	31	;volatile
 14271  09A9  0008               	return
 14272  09AA                     __end_of_pwm2_init:	
 14273  09AA                     __ptext74:	
 14274 ;; *************** function _pwm3_init *****************
 14275 ;; Defined at:
 14276 ;;		line 47 in file "src/drv_pwm.c"
 14277 ;; Parameters:    Size  Location     Type
 14278 ;;		None
 14279 ;; Auto vars:     Size  Location     Type
 14280 ;;		None
 14281 ;; Return value:  Size  Location     Type
 14282 ;;                  1    wreg      void 
 14283 ;; Registers used:
 14284 ;;		wreg, status,2, status,0
 14285 ;; Tracked objects:
 14286 ;;		On entry : B1F/5
 14287 ;;		On exit  : B1F/5
 14288 ;;		Unchanged: B00/0
 14289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14294 ;;Total ram usage:        0 bytes
 14295 ;; Hardware stack levels used:    1
 14296 ;; Hardware stack levels required when called:    9
 14297 ;; This function calls:
 14298 ;;		Nothing
 14299 ;; This function is called by:
 14300 ;;		_app_init
 14301 ;; This function uses a non-reentrant model
 14302 ;;
 14303                           
 14304                           
 14305                           ;psect for function _pwm3_init
 14306  09AA                     _pwm3_init:	
 14307                           
 14308                           ;drv_pwm.c: 50: CCP3CON = 0x8F;
 14309                           
 14310                           ;incstack = 0
 14311                           ; Regs used in _pwm3_init: [wreg+status,2+status,0]
 14312  09AA  308F               	movlw	143
 14313  09AB  0026               	movlb	6	; select bank6
 14314  09AC  0093               	movwf	19	;volatile
 14315                           
 14316                           ;drv_pwm.c: 53: CCPR3H = 0x00;
 14317  09AD  0192               	clrf	18	;volatile
 14318                           
 14319                           ;drv_pwm.c: 56: CCPR3L = 0x00;
 14320  09AE  0191               	clrf	17	;volatile
 14321                           
 14322                           ;drv_pwm.c: 59: CCPTMRSbits.C3TSEL = 0x1;
 14323  09AF  0025               	movlb	5	; select bank5
 14324  09B0  081F               	movf	31,w	;volatile
 14325  09B1  39CF               	andlw	-49
 14326  09B2  3810               	iorlw	16
 14327  09B3  009F               	movwf	31	;volatile
 14328  09B4  0008               	return
 14329  09B5                     __end_of_pwm3_init:	
 14330  09B5                     __ptext73:	
 14331 ;; *************** function _pwm4_init *****************
 14332 ;; Defined at:
 14333 ;;		line 69 in file "src/drv_pwm.c"
 14334 ;; Parameters:    Size  Location     Type
 14335 ;;		None
 14336 ;; Auto vars:     Size  Location     Type
 14337 ;;		None
 14338 ;; Return value:  Size  Location     Type
 14339 ;;                  1    wreg      void 
 14340 ;; Registers used:
 14341 ;;		wreg, status,2, status,0
 14342 ;; Tracked objects:
 14343 ;;		On entry : B1F/5
 14344 ;;		On exit  : B1F/5
 14345 ;;		Unchanged: B00/0
 14346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14351 ;;Total ram usage:        0 bytes
 14352 ;; Hardware stack levels used:    1
 14353 ;; Hardware stack levels required when called:    9
 14354 ;; This function calls:
 14355 ;;		Nothing
 14356 ;; This function is called by:
 14357 ;;		_app_init
 14358 ;; This function uses a non-reentrant model
 14359 ;;
 14360                           
 14361                           
 14362                           ;psect for function _pwm4_init
 14363  09B5                     _pwm4_init:	
 14364                           
 14365                           ;drv_pwm.c: 72: CCP4CON = 0x8F;
 14366                           
 14367                           ;incstack = 0
 14368                           ; Regs used in _pwm4_init: [wreg+status,2+status,0]
 14369  09B5  308F               	movlw	143
 14370  09B6  0026               	movlb	6	; select bank6
 14371  09B7  0097               	movwf	23	;volatile
 14372                           
 14373                           ;drv_pwm.c: 75: CCPR4H = 0x00;
 14374  09B8  0196               	clrf	22	;volatile
 14375                           
 14376                           ;drv_pwm.c: 78: CCPR4L = 0x00;
 14377  09B9  0195               	clrf	21	;volatile
 14378                           
 14379                           ;drv_pwm.c: 81: CCPTMRSbits.C4TSEL = 0x1;
 14380  09BA  0025               	movlb	5	; select bank5
 14381  09BB  081F               	movf	31,w	;volatile
 14382  09BC  393F               	andlw	-193
 14383  09BD  3840               	iorlw	64
 14384  09BE  009F               	movwf	31	;volatile
 14385  09BF  0008               	return
 14386  09C0                     __end_of_pwm4_init:	
 14387  09C0                     __ptext72:	
 14388 ;; *************** function _pwm5_init *****************
 14389 ;; Defined at:
 14390 ;;		line 91 in file "src/drv_pwm.c"
 14391 ;; Parameters:    Size  Location     Type
 14392 ;;		None
 14393 ;; Auto vars:     Size  Location     Type
 14394 ;;		None
 14395 ;; Return value:  Size  Location     Type
 14396 ;;                  1    wreg      void 
 14397 ;; Registers used:
 14398 ;;		wreg, status,2, status,0
 14399 ;; Tracked objects:
 14400 ;;		On entry : B1F/5
 14401 ;;		On exit  : B1F/C
 14402 ;;		Unchanged: B00/0
 14403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14408 ;;Total ram usage:        0 bytes
 14409 ;; Hardware stack levels used:    1
 14410 ;; Hardware stack levels required when called:    9
 14411 ;; This function calls:
 14412 ;;		Nothing
 14413 ;; This function is called by:
 14414 ;;		_app_init
 14415 ;; This function uses a non-reentrant model
 14416 ;;
 14417                           
 14418                           
 14419                           ;psect for function _pwm5_init
 14420  09C0                     _pwm5_init:	
 14421                           
 14422                           ;drv_pwm.c: 93: PWM5DCH = 0;
 14423                           
 14424                           ;incstack = 0
 14425                           ; Regs used in _pwm5_init: [wreg+status,2+status,0]
 14426  09C0  002C               	movlb	12	; select bank12
 14427  09C1  0198               	clrf	24	;volatile
 14428                           
 14429                           ;drv_pwm.c: 94: PWM5DCL = 0;
 14430  09C2  0197               	clrf	23	;volatile
 14431                           
 14432                           ;drv_pwm.c: 95: PWMTMRSbits.P5TSEL = 0X01;
 14433  09C3  081F               	movf	31,w	;volatile
 14434  09C4  39FC               	andlw	-4
 14435  09C5  3801               	iorlw	1
 14436  09C6  009F               	movwf	31	;volatile
 14437                           
 14438                           ;drv_pwm.c: 96: PWM5CON = 0X80;
 14439  09C7  3080               	movlw	128
 14440  09C8  0099               	movwf	25	;volatile
 14441  09C9  0008               	return
 14442  09CA                     __end_of_pwm5_init:	
 14443  09CA                     __ptext71:	
 14444 ;; *************** function _tmr0_init *****************
 14445 ;; Defined at:
 14446 ;;		line 6 in file "src/drv_tmr.c"
 14447 ;; Parameters:    Size  Location     Type
 14448 ;;  cb              2    2[BANK0 ] PTR FTN()void 
 14449 ;;		 -> rtc_process(1), 
 14450 ;; Auto vars:     Size  Location     Type
 14451 ;;		None
 14452 ;; Return value:  Size  Location     Type
 14453 ;;                  1    wreg      void 
 14454 ;; Registers used:
 14455 ;;		wreg, status,2
 14456 ;; Tracked objects:
 14457 ;;		On entry : B1F/0
 14458 ;;		On exit  : B1F/1
 14459 ;;		Unchanged: B00/0
 14460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14464 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14465 ;;Total ram usage:        2 bytes
 14466 ;; Hardware stack levels used:    1
 14467 ;; Hardware stack levels required when called:    9
 14468 ;; This function calls:
 14469 ;;		Nothing
 14470 ;; This function is called by:
 14471 ;;		_app_init
 14472 ;; This function uses a non-reentrant model
 14473 ;;
 14474                           
 14475                           
 14476                           ;psect for function _tmr0_init
 14477  09CA                     _tmr0_init:	
 14478                           
 14479                           ;drv_tmr.c: 9: T0CON0 = 0x00;
 14480                           
 14481                           ;incstack = 0
 14482                           ; Regs used in _tmr0_init: [wreg+status,2]
 14483  09CA  0197               	clrf	23	;volatile
 14484                           
 14485                           ;drv_tmr.c: 12: T0CON1 = 0xD7;
 14486  09CB  30D7               	movlw	215
 14487  09CC  0098               	movwf	24	;volatile
 14488                           
 14489                           ;drv_tmr.c: 15: TMR0H = 0xFF;
 14490  09CD  30FF               	movlw	255
 14491  09CE  0096               	movwf	22	;volatile
 14492                           
 14493                           ;drv_tmr.c: 18: TMR0L = 0x00;
 14494  09CF  0195               	clrf	21	;volatile
 14495                           
 14496                           ;drv_tmr.c: 21: PIR0bits.TMR0IF = 0;
 14497  09D0  1290               	bcf	16,5	;volatile
 14498                           
 14499                           ;drv_tmr.c: 24: PIE0bits.TMR0IE = 1;
 14500  09D1  0021               	movlb	1	; select bank1
 14501  09D2  1690               	bsf	16,5	;volatile
 14502                           
 14503                           ;drv_tmr.c: 26: tmr0_isr_cb = cb;
 14504  09D3  0020               	movlb	0	; select bank0
 14505  09D4  0823               	movf	tmr0_init@cb+1,w
 14506  09D5  0021               	movlb	1	; select bank1
 14507  09D6  00ED               	movwf	(_tmr0_isr_cb+1)^(0+128)
 14508  09D7  0020               	movlb	0	; select bank0
 14509  09D8  0822               	movf	tmr0_init@cb,w
 14510  09D9  0021               	movlb	1	; select bank1
 14511  09DA  00EC               	movwf	_tmr0_isr_cb^(0+128)
 14512  09DB  0008               	return
 14513  09DC                     __end_of_tmr0_init:	
 14514  09DC                     __ptext70:	
 14515 ;; *************** function _tmr2_init *****************
 14516 ;; Defined at:
 14517 ;;		line 38 in file "src/drv_tmr.c"
 14518 ;; Parameters:    Size  Location     Type
 14519 ;;  cb              2    2[BANK0 ] PTR FTN()void 
 14520 ;;		 -> tmr2_isr_callback(1), 
 14521 ;; Auto vars:     Size  Location     Type
 14522 ;;		None
 14523 ;; Return value:  Size  Location     Type
 14524 ;;                  1    wreg      void 
 14525 ;; Registers used:
 14526 ;;		wreg, status,2
 14527 ;; Tracked objects:
 14528 ;;		On entry : B1F/0
 14529 ;;		On exit  : B1F/1
 14530 ;;		Unchanged: B00/0
 14531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14532 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14535 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14536 ;;Total ram usage:        2 bytes
 14537 ;; Hardware stack levels used:    1
 14538 ;; Hardware stack levels required when called:    9
 14539 ;; This function calls:
 14540 ;;		Nothing
 14541 ;; This function is called by:
 14542 ;;		_app_init
 14543 ;; This function uses a non-reentrant model
 14544 ;;
 14545                           
 14546                           
 14547                           ;psect for function _tmr2_init
 14548  09DC                     _tmr2_init:	
 14549                           
 14550                           ;drv_tmr.c: 41: T2CON = 0x78;
 14551                           
 14552                           ;incstack = 0
 14553                           ; Regs used in _tmr2_init: [wreg+status,2]
 14554  09DC  3078               	movlw	120
 14555  09DD  009F               	movwf	31	;volatile
 14556                           
 14557                           ;drv_tmr.c: 44: PR2 = 0xF9;
 14558  09DE  30F9               	movlw	249
 14559  09DF  009E               	movwf	30	;volatile
 14560                           
 14561                           ;drv_tmr.c: 47: TMR2 = 0x00;
 14562  09E0  019D               	clrf	29	;volatile
 14563                           
 14564                           ;drv_tmr.c: 50: PIR1bits.TMR2IF = 0;
 14565  09E1  1091               	bcf	17,1	;volatile
 14566                           
 14567                           ;drv_tmr.c: 53: PIE1bits.TMR2IE = 1;
 14568  09E2  0021               	movlb	1	; select bank1
 14569  09E3  1491               	bsf	17,1	;volatile
 14570                           
 14571                           ;drv_tmr.c: 55: tmr2_isr_cb = cb;
 14572  09E4  0020               	movlb	0	; select bank0
 14573  09E5  0823               	movf	tmr2_init@cb+1,w
 14574  09E6  0021               	movlb	1	; select bank1
 14575  09E7  00EB               	movwf	(_tmr2_isr_cb+1)^(0+128)
 14576  09E8  0020               	movlb	0	; select bank0
 14577  09E9  0822               	movf	tmr2_init@cb,w
 14578  09EA  0021               	movlb	1	; select bank1
 14579  09EB  00EA               	movwf	_tmr2_isr_cb^(0+128)
 14580  09EC  0008               	return
 14581  09ED                     __end_of_tmr2_init:	
 14582  09ED                     __ptext64:	
 14583 ;; *************** function _ble_init *****************
 14584 ;; Defined at:
 14585 ;;		line 180 in file "src/app_ble.c"
 14586 ;; Parameters:    Size  Location     Type
 14587 ;;		None
 14588 ;; Auto vars:     Size  Location     Type
 14589 ;;		None
 14590 ;; Return value:  Size  Location     Type
 14591 ;;                  1    wreg      void 
 14592 ;; Registers used:
 14593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14594 ;; Tracked objects:
 14595 ;;		On entry : B1F/1
 14596 ;;		On exit  : 1F/2
 14597 ;;		Unchanged: 0/0
 14598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14601 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14602 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14603 ;;Total ram usage:        2 bytes
 14604 ;; Hardware stack levels used:    1
 14605 ;; Hardware stack levels required when called:   12
 14606 ;; This function calls:
 14607 ;;		_ble_check_devid
 14608 ;;		_ble_send_cmd
 14609 ;; This function is called by:
 14610 ;;		_main
 14611 ;; This function uses a non-reentrant model
 14612 ;;
 14613                           
 14614                           
 14615                           ;psect for function _ble_init
 14616  09ED                     _ble_init:	
 14617                           
 14618                           ;app_ble.c: 182: LATCbits.LATC1 = 0;
 14619                           
 14620                           ;incstack = 0
 14621                           ; Regs used in _ble_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14622  09ED  0022               	movlb	2	; select bank2
 14623  09EE  108E               	bcf	14,1	;volatile
 14624                           
 14625                           ;app_ble.c: 183: LATBbits.LATB5 = 0;
 14626  09EF  128D               	bcf	13,5	;volatile
 14627                           
 14628                           ;app_ble.c: 184: _delay((unsigned long)((20)*(16000000/4000.0)));
 14629  09F0  3068               	movlw	104
 14630  09F1  0020               	movlb	0	; select bank0
 14631  09F2  00CD               	movwf	??_ble_init
 14632  09F3  30E4               	movlw	228
 14633  09F4                     u6627:	
 14634  09F4  0B89               	decfsz	9,f
 14635  09F5  29F4               	goto	u6627
 14636  09F6  0BCD               	decfsz	??_ble_init,f
 14637  09F7  29F4               	goto	u6627
 14638  09F8  0000               	nop
 14639                           
 14640                           ;app_ble.c: 185: LATBbits.LATB5 = 1;
 14641  09F9  0022               	movlb	2	; select bank2
 14642  09FA  168D               	bsf	13,5	;volatile
 14643                           
 14644                           ;app_ble.c: 186: _delay((unsigned long)((240)*(16000000/4000.0)));
 14645  09FB  3005               	movlw	5
 14646  09FC  0020               	movlb	0	; select bank0
 14647  09FD  00CE               	movwf	??_ble_init+1
 14648  09FE  30DF               	movlw	223
 14649  09FF  00CD               	movwf	??_ble_init
 14650  0A00  30BB               	movlw	187
 14651  0A01                     u6637:	
 14652  0A01  0B89               	decfsz	9,f
 14653  0A02  2A01               	goto	u6637
 14654  0A03  0BCD               	decfsz	??_ble_init,f
 14655  0A04  2A01               	goto	u6637
 14656  0A05  0BCE               	decfsz	??_ble_init+1,f
 14657  0A06  2A01               	goto	u6637
 14658  0A07  3200               	nop2
 14659                           
 14660                           ;app_ble.c: 189: if(ble_check_devid() == 0)
 14661  0A08  237B  3188         	fcall	_ble_check_devid
 14662  0A0A  3A00               	xorlw	0
 14663  0A0B  1D03               	skipz
 14664  0A0C  2A1D               	goto	l5717
 14665                           
 14666                           ;app_ble.c: 190: {
 14667                           ;app_ble.c: 191: _delay((unsigned long)((40)*(16000000/4000.0)));
 14668  0A0D  30D0               	movlw	208
 14669  0A0E  0020               	movlb	0	; select bank0
 14670  0A0F  00CD               	movwf	??_ble_init
 14671  0A10  30C9               	movlw	201
 14672  0A11                     u6647:	
 14673  0A11  0B89               	decfsz	9,f
 14674  0A12  2A11               	goto	u6647
 14675  0A13  0BCD               	decfsz	??_ble_init,f
 14676  0A14  2A11               	goto	u6647
 14677  0A15  3200               	nop2
 14678                           
 14679                           ;app_ble.c: 192: ble_send_cmd("AT+ADV_MFR_SPC=" "30313633" "30313033" "\r\n");
 14680  0A16  3000               	movlw	low (STR_2| (0+32768))
 14681  0A17  0020               	movlb	0	; select bank0
 14682  0A18  00A7               	movwf	ble_send_cmd@cmd
 14683  0A19  3098               	movlw	high (STR_2| (0+32768))
 14684  0A1A  00A8               	movwf	ble_send_cmd@cmd+1
 14685  0A1B  2249  3188         	fcall	_ble_send_cmd
 14686  0A1D                     l5717:	
 14687                           
 14688                           ;app_ble.c: 193: }
 14689                           ;app_ble.c: 194: _delay((unsigned long)((40)*(16000000/4000.0)));
 14690  0A1D  30D0               	movlw	208
 14691  0A1E  0020               	movlb	0	; select bank0
 14692  0A1F  00CD               	movwf	??_ble_init
 14693  0A20  30C9               	movlw	201
 14694  0A21                     u6657:	
 14695  0A21  0B89               	decfsz	9,f
 14696  0A22  2A21               	goto	u6657
 14697  0A23  0BCD               	decfsz	??_ble_init,f
 14698  0A24  2A21               	goto	u6657
 14699  0A25  3200               	nop2
 14700                           
 14701                           ;app_ble.c: 196: ble_send_cmd("AT+SET=1\r\n");
 14702  0A26  3066               	movlw	low (STR_3| (0+32768))
 14703  0A27  0020               	movlb	0	; select bank0
 14704  0A28  00A7               	movwf	ble_send_cmd@cmd
 14705  0A29  3098               	movlw	high (STR_3| (0+32768))
 14706  0A2A  00A8               	movwf	ble_send_cmd@cmd+1
 14707  0A2B  2249  3188         	fcall	_ble_send_cmd
 14708                           
 14709                           ;app_ble.c: 197: _delay((unsigned long)((40)*(16000000/4000.0)));
 14710  0A2D  30D0               	movlw	208
 14711  0A2E  0020               	movlb	0	; select bank0
 14712  0A2F  00CD               	movwf	??_ble_init
 14713  0A30  30C9               	movlw	201
 14714  0A31                     u6667:	
 14715  0A31  0B89               	decfsz	9,f
 14716  0A32  2A31               	goto	u6667
 14717  0A33  0BCD               	decfsz	??_ble_init,f
 14718  0A34  2A31               	goto	u6667
 14719  0A35  3200               	nop2
 14720                           
 14721                           ;app_ble.c: 199: ble_send_cmd("AT+MODE=DATA\r\n");
 14722  0A36  3057               	movlw	low (STR_4| (0+32768))
 14723  0A37  0020               	movlb	0	; select bank0
 14724  0A38  00A7               	movwf	ble_send_cmd@cmd
 14725  0A39  3098               	movlw	high (STR_4| (0+32768))
 14726  0A3A  00A8               	movwf	ble_send_cmd@cmd+1
 14727  0A3B  2249  3188         	fcall	_ble_send_cmd
 14728                           
 14729                           ;app_ble.c: 200: _delay((unsigned long)((40)*(16000000/4000.0)));
 14730  0A3D  30D0               	movlw	208
 14731  0A3E  0020               	movlb	0	; select bank0
 14732  0A3F  00CD               	movwf	??_ble_init
 14733  0A40  30C9               	movlw	201
 14734  0A41                     u6677:	
 14735  0A41  0B89               	decfsz	9,f
 14736  0A42  2A41               	goto	u6677
 14737  0A43  0BCD               	decfsz	??_ble_init,f
 14738  0A44  2A41               	goto	u6677
 14739  0A45  3200               	nop2
 14740                           
 14741                           ;app_ble.c: 201: LATCbits.LATC1 = 1;
 14742  0A46  0022               	movlb	2	; select bank2
 14743  0A47  148E               	bsf	14,1	;volatile
 14744  0A48  0008               	return
 14745  0A49                     __end_of_ble_init:	
 14746  0A49                     __ptext66:	
 14747 ;; *************** function _ble_send_cmd *****************
 14748 ;; Defined at:
 14749 ;;		line 44 in file "src/app_ble.c"
 14750 ;; Parameters:    Size  Location     Type
 14751 ;;  cmd             2    7[BANK0 ] PTR const unsigned char 
 14752 ;;		 -> STR_4(15), STR_3(11), STR_2(34), STR_1(19), 
 14753 ;; Auto vars:     Size  Location     Type
 14754 ;;  ack             8   10[BANK0 ] unsigned char [8]
 14755 ;;  idx             1   21[BANK0 ] unsigned char 
 14756 ;;  rev             1   20[BANK0 ] unsigned char 
 14757 ;;  cnt             1   19[BANK0 ] unsigned char 
 14758 ;;  len             1   18[BANK0 ] unsigned char 
 14759 ;; Return value:  Size  Location     Type
 14760 ;;                  1    wreg      unsigned char 
 14761 ;; Registers used:
 14762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14763 ;; Tracked objects:
 14764 ;;		On entry : 1F/0
 14765 ;;		On exit  : 1F/0
 14766 ;;		Unchanged: 0/0
 14767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14768 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14769 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14770 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14771 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14772 ;;Total ram usage:       15 bytes
 14773 ;; Hardware stack levels used:    1
 14774 ;; Hardware stack levels required when called:   10
 14775 ;; This function calls:
 14776 ;;		_eusart_write
 14777 ;;		_strlen
 14778 ;; This function is called by:
 14779 ;;		_ble_check_devid
 14780 ;;		_ble_init
 14781 ;; This function uses a non-reentrant model
 14782 ;;
 14783                           
 14784                           
 14785                           ;psect for function _ble_send_cmd
 14786  0A49                     _ble_send_cmd:	
 14787                           
 14788                           ;app_ble.c: 46: char ack[] = "AT+OK\r\n";
 14789                           
 14790                           ;incstack = 0
 14791                           ; Regs used in _ble_send_cmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14792  0A49  304D               	movlw	low ble_send_cmd@F8334
 14793  0A4A  0086               	movwf	6
 14794  0A4B  3001               	movlw	high ble_send_cmd@F8334
 14795  0A4C  0087               	movwf	7
 14796  0A4D  302A               	movlw	low ble_send_cmd@ack
 14797  0A4E  0084               	movwf	4
 14798  0A4F  3000               	movlw	high ble_send_cmd@ack
 14799  0A50  0085               	movwf	5
 14800  0A51  3008               	movlw	8
 14801  0A52  00A9               	movwf	??_ble_send_cmd
 14802  0A53                     u3310:	
 14803  0A53  0016               	moviw fsr1++
 14804  0A54  001A               	movwi fsr0++
 14805  0A55  0BA9               	decfsz	??_ble_send_cmd,f
 14806  0A56  2A53               	goto	u3310
 14807                           
 14808                           ;app_ble.c: 47: uint8_t len = strlen(ack);
 14809  0A57  302A               	movlw	(low (ble_send_cmd@ack| 0))& (0+255)
 14810  0A58  236A  3188         	fcall	_strlen
 14811  0A5A  0822               	movf	?_strlen,w
 14812  0A5B  00B2               	movwf	ble_send_cmd@len
 14813                           
 14814                           ;app_ble.c: 48: uint8_t idx = 0;
 14815  0A5C  01B5               	clrf	ble_send_cmd@idx
 14816                           
 14817                           ;app_ble.c: 49: uint8_t cnt = 0;
 14818  0A5D  01B3               	clrf	ble_send_cmd@cnt
 14819  0A5E  0023               	movlb	3	; select bank3
 14820  0A5F  0819               	movf	25,w	;volatile
 14821  0A60                     l4337:	
 14822                           ;app_ble.c: 51: while(*cmd != '\0')
 14823                           
 14824  0A60  0020               	movlb	0	; select bank0
 14825  0A61  0827               	movf	ble_send_cmd@cmd,w
 14826  0A62  0084               	movwf	4
 14827  0A63  0828               	movf	ble_send_cmd@cmd+1,w
 14828  0A64  0085               	movwf	5
 14829  0A65  0012               	moviw fsr0++
 14830  0A66  1903               	btfsc	3,2
 14831  0A67  2A92               	goto	l4359
 14832                           
 14833                           ;app_ble.c: 52: {
 14834                           ;app_ble.c: 53: eusart_write(*cmd++);
 14835  0A68  0827               	movf	ble_send_cmd@cmd,w
 14836  0A69  0084               	movwf	4
 14837  0A6A  0828               	movf	ble_send_cmd@cmd+1,w
 14838  0A6B  0085               	movwf	5
 14839  0A6C  0800               	movf	0,w	;code access
 14840  0A6D  2327  3188         	fcall	_eusart_write
 14841  0A6F  0AA7               	incf	ble_send_cmd@cmd,f
 14842  0A70  1903               	skipnz
 14843  0A71  0AA8               	incf	ble_send_cmd@cmd+1,f
 14844  0A72  2A60               	goto	l4337
 14845  0A73                     l388:	
 14846                           
 14847                           ;app_ble.c: 57: {
 14848                           ;app_ble.c: 58: if(PIR1bits.RCIF)
 14849  0A73  1E91               	btfss	17,5	;volatile
 14850  0A74  2A88               	goto	l4351
 14851                           
 14852                           ;app_ble.c: 59: {
 14853                           ;app_ble.c: 60: if(RCSTAbits.OERR)
 14854  0A75  0023               	movlb	3	; select bank3
 14855  0A76  1C9D               	btfss	29,1	;volatile
 14856  0A77  2A7A               	goto	l4343
 14857                           
 14858                           ;app_ble.c: 61: {
 14859                           ;app_ble.c: 62: RCSTAbits.CREN = 0;
 14860  0A78  121D               	bcf	29,4	;volatile
 14861                           
 14862                           ;app_ble.c: 63: RCSTAbits.CREN = 1;
 14863  0A79  161D               	bsf	29,4	;volatile
 14864  0A7A                     l4343:	
 14865                           
 14866                           ;app_ble.c: 64: }
 14867                           ;app_ble.c: 65: rev = RCREG;
 14868  0A7A  0819               	movf	25,w	;volatile
 14869  0A7B  0020               	movlb	0	; select bank0
 14870  0A7C  00B4               	movwf	ble_send_cmd@rev
 14871                           
 14872                           ;app_ble.c: 66: if(rev == ack[idx])
 14873  0A7D  0835               	movf	ble_send_cmd@idx,w
 14874  0A7E  3E2A               	addlw	(low (ble_send_cmd@ack| 0))& (0+255)
 14875  0A7F  0086               	movwf	6
 14876  0A80  0187               	clrf	7
 14877  0A81  0801               	movf	1,w
 14878  0A82  0634               	xorwf	ble_send_cmd@rev,w
 14879  0A83  1D03               	skipz
 14880  0A84  2A87               	goto	l4349
 14881                           
 14882                           ;app_ble.c: 67: {
 14883                           ;app_ble.c: 68: idx++;
 14884  0A85  0AB5               	incf	ble_send_cmd@idx,f
 14885                           
 14886                           ;app_ble.c: 69: }
 14887  0A86  2A88               	goto	l4351
 14888  0A87                     l4349:	
 14889                           
 14890                           ;app_ble.c: 70: else
 14891                           ;app_ble.c: 71: {
 14892                           ;app_ble.c: 72: idx = 0;
 14893  0A87  01B5               	clrf	ble_send_cmd@idx
 14894  0A88                     l4351:	
 14895                           
 14896                           ;app_ble.c: 73: }
 14897                           ;app_ble.c: 74: }
 14898                           ;app_ble.c: 75: _delay((unsigned long)((250)*(16000000/4000000.0)));
 14899  0A88  30C8               	movlw	200
 14900  0A89                     u6697:	
 14901  0A89  3200               	nop2
 14902  0A8A  0B89               	decfsz	9,f
 14903  0A8B  2A89               	goto	u6697
 14904                           
 14905                           ;app_ble.c: 76: cnt++;
 14906  0A8C  0020               	movlb	0	; select bank0
 14907  0A8D  30FB               	movlw	251
 14908  0A8E  0AB3               	incf	ble_send_cmd@cnt,f
 14909                           
 14910                           ;app_ble.c: 77: if(cnt > 250)
 14911  0A8F  0233               	subwf	ble_send_cmd@cnt,w
 14912  0A90  1803               	btfsc	3,0
 14913  0A91  0008               	return
 14914  0A92                     l4359:	
 14915  0A92  0832               	movf	ble_send_cmd@len,w
 14916  0A93  0235               	subwf	ble_send_cmd@idx,w
 14917  0A94  1803               	btfsc	3,0
 14918  0A95  0008               	return
 14919  0A96  2A73               	goto	l388
 14920  0A97                     __end_of_ble_send_cmd:	
 14921  0A97                     __ptext19:	
 14922 ;; *************** function _led_init *****************
 14923 ;; Defined at:
 14924 ;;		line 455 in file "src/app_led.c"
 14925 ;; Parameters:    Size  Location     Type
 14926 ;;		None
 14927 ;; Auto vars:     Size  Location     Type
 14928 ;;		None
 14929 ;; Return value:  Size  Location     Type
 14930 ;;                  1    wreg      void 
 14931 ;; Registers used:
 14932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14933 ;; Tracked objects:
 14934 ;;		On entry : 1F/1
 14935 ;;		On exit  : 1D/0
 14936 ;;		Unchanged: 0/0
 14937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14942 ;;Total ram usage:        0 bytes
 14943 ;; Hardware stack levels used:    1
 14944 ;; Hardware stack levels required when called:   12
 14945 ;; This function calls:
 14946 ;;		_led_para_init
 14947 ;; This function is called by:
 14948 ;;		_main
 14949 ;; This function uses a non-reentrant model
 14950 ;;
 14951                           
 14952                           
 14953                           ;psect for function _led_init
 14954  0A97                     _led_init:	
 14955                           
 14956                           ;app_led.c: 457: led_para_init();
 14957                           
 14958                           ;incstack = 0
 14959                           ; Regs used in _led_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14960  0A97  3184  2C30         	ljmp	l6101
 14961  0A99                     __end_of_led_init:	
 14962  0A99                     __ptext60:	
 14963 ;; *************** function _ble_ota_ack *****************
 14964 ;; Defined at:
 14965 ;;		line 262 in file "src/app_ble.c"
 14966 ;; Parameters:    Size  Location     Type
 14967 ;;		None
 14968 ;; Auto vars:     Size  Location     Type
 14969 ;;		None
 14970 ;; Return value:  Size  Location     Type
 14971 ;;                  1    wreg      void 
 14972 ;; Registers used:
 14973 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14974 ;; Tracked objects:
 14975 ;;		On entry : 1F/11
 14976 ;;		On exit  : 1F/2
 14977 ;;		Unchanged: 0/0
 14978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14983 ;;Total ram usage:        0 bytes
 14984 ;; Hardware stack levels used:    1
 14985 ;; Hardware stack levels required when called:   10
 14986 ;; This function calls:
 14987 ;;		_ble_transmit_start
 14988 ;;		_ble_transmit_stop
 14989 ;;		_eusart_write
 14990 ;; This function is called by:
 14991 ;;		_ble_decode
 14992 ;; This function uses a non-reentrant model
 14993 ;;
 14994                           
 14995                           
 14996                           ;psect for function _ble_ota_ack
 14997  0A99                     _ble_ota_ack:	
 14998                           
 14999                           ;app_ble.c: 264: ble_transmit_start();
 15000                           
 15001                           ;incstack = 0
 15002                           ; Regs used in _ble_ota_ack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15003  0A99  2348  3188         	fcall	_ble_transmit_start
 15004                           
 15005                           ;app_ble.c: 265: eusart_write(0x68);
 15006  0A9B  3068               	movlw	104
 15007  0A9C  2327  3188         	fcall	_eusart_write
 15008                           
 15009                           ;app_ble.c: 266: eusart_write(0x00);
 15010  0A9E  3000               	movlw	0
 15011  0A9F  2327  3188         	fcall	_eusart_write
 15012                           
 15013                           ;app_ble.c: 267: eusart_write(0x00);
 15014  0AA1  3000               	movlw	0
 15015  0AA2  2327  3188         	fcall	_eusart_write
 15016                           
 15017                           ;app_ble.c: 268: eusart_write(0x00);
 15018  0AA4  3000               	movlw	0
 15019  0AA5  2327  3188         	fcall	_eusart_write
 15020                           
 15021                           ;app_ble.c: 269: eusart_write(0x68);
 15022  0AA7  3068               	movlw	104
 15023  0AA8  2327  3188         	fcall	_eusart_write
 15024                           
 15025                           ;app_ble.c: 270: ble_transmit_stop();
 15026  0AAA  2B54               	ljmp	l414
 15027  0AAB                     __end_of_ble_ota_ack:	
 15028  0AAB                     __ptext58:	
 15029 ;; *************** function _ble_send_data *****************
 15030 ;; Defined at:
 15031 ;;		line 204 in file "src/app_ble.c"
 15032 ;; Parameters:    Size  Location     Type
 15033 ;;		None
 15034 ;; Auto vars:     Size  Location     Type
 15035 ;;  p               2   12[BANK0 ] PTR struct .
 15036 ;;		 -> m_led_para.ble_para(107), m_led_para(113), 
 15037 ;;  i               1   11[BANK0 ] unsigned char 
 15038 ;;  len             1   10[BANK0 ] unsigned char 
 15039 ;;  xor             1    9[BANK0 ] unsigned char 
 15040 ;; Return value:  Size  Location     Type
 15041 ;;                  1    wreg      void 
 15042 ;; Registers used:
 15043 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15044 ;; Tracked objects:
 15045 ;;		On entry : 1D/0
 15046 ;;		On exit  : 1F/2
 15047 ;;		Unchanged: 0/0
 15048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15050 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15051 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15052 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15053 ;;Total ram usage:        9 bytes
 15054 ;; Hardware stack levels used:    1
 15055 ;; Hardware stack levels required when called:   10
 15056 ;; This function calls:
 15057 ;;		___bmul
 15058 ;;		_ble_transmit_start
 15059 ;;		_ble_transmit_stop
 15060 ;;		_eusart_write
 15061 ;; This function is called by:
 15062 ;;		_ble_decode
 15063 ;; This function uses a non-reentrant model
 15064 ;;
 15065                           
 15066                           
 15067                           ;psect for function _ble_send_data
 15068  0AAB                     _ble_send_data:	
 15069  0AAB                     l4361:	
 15070                           ;incstack = 0
 15071                           ; Regs used in _ble_send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15072                           
 15073                           
 15074                           ;app_ble.c: 206: uint8_t i;
 15075                           ;app_ble.c: 207: uint8_t len;
 15076                           ;app_ble.c: 208: uint8_t xor = 0;
 15077  0AAB  0020               	movlb	0	; select bank0
 15078  0AAC  3023               	movlw	35
 15079  0AAD  01A9               	clrf	ble_send_data@xor
 15080                           
 15081                           ;app_ble.c: 209: ble_para_t *p = &m_led_para.ble_para;
 15082  0AAE  00AD               	movwf	ble_send_data@p+1
 15083  0AAF  3085               	movlw	133
 15084  0AB0  00AC               	movwf	ble_send_data@p
 15085                           
 15086                           ;app_ble.c: 210: ble_transmit_start();
 15087  0AB1  2348  3188         	fcall	_ble_transmit_start
 15088                           
 15089                           ;app_ble.c: 211: xor ^= eusart_write(0x68);
 15090  0AB3  3068               	movlw	104
 15091  0AB4  2327  3188         	fcall	_eusart_write
 15092  0AB6  06A9               	xorwf	ble_send_data@xor,f
 15093                           
 15094                           ;app_ble.c: 212: xor ^= eusart_write(0x05);
 15095  0AB7  3005               	movlw	5
 15096  0AB8  2327  3188         	fcall	_eusart_write
 15097  0ABA  06A9               	xorwf	ble_send_data@xor,f
 15098                           
 15099                           ;app_ble.c: 213: xor ^= eusart_write(p->mMode);
 15100  0ABB  241F  3188         	fcall	PL82	;call to abstracted procedure
 15101  0ABD  2327  3188         	fcall	_eusart_write
 15102  0ABF  06A9               	xorwf	ble_send_data@xor,f
 15103                           
 15104                           ;app_ble.c: 214: if(p->mMode == 1)
 15105  0AC0  241F  3188         	fcall	PL82	;call to abstracted procedure
 15106  0AC2  3A01               	xorlw	1
 15107  0AC3  1D03               	skipz
 15108  0AC4  2AD8               	goto	l4385
 15109                           
 15110                           ;app_ble.c: 215: {
 15111                           ;app_ble.c: 216: len = sizeof(p->auto_para.array);
 15112  0AC5  3013               	movlw	19
 15113  0AC6  00AA               	movwf	ble_send_data@len
 15114                           
 15115                           ;app_ble.c: 217: for(i = 0; i < len; i++)
 15116  0AC7  01AB               	clrf	ble_send_data@i
 15117  0AC8                     l4383:	
 15118  0AC8  082A               	movf	ble_send_data@len,w
 15119  0AC9  022B               	subwf	ble_send_data@i,w
 15120  0ACA  1803               	btfsc	3,0
 15121  0ACB  2B23               	goto	l4415
 15122                           
 15123                           ;app_ble.c: 218: {
 15124                           ;app_ble.c: 219: xor ^= eusart_write(p->auto_para.array[i]);
 15125  0ACC  240B  3188         	fcall	PL46	;call to abstracted procedure
 15126  0ACE  0086               	movwf	6
 15127  0ACF  0828               	movf	??_ble_send_data+3,w
 15128  0AD0  0087               	movwf	7
 15129  0AD1  315B               	addfsr 1,27
 15130  0AD2  0801               	movf	1,w
 15131  0AD3  2327  3188         	fcall	_eusart_write
 15132  0AD5  06A9               	xorwf	ble_send_data@xor,f
 15133  0AD6  0AAB               	incf	ble_send_data@i,f
 15134  0AD7  2AC8               	goto	l4383
 15135  0AD8                     l4385:	
 15136                           
 15137                           ;app_ble.c: 228: else if(p->mMode == 2)
 15138  0AD8  241F  3188         	fcall	PL82	;call to abstracted procedure
 15139  0ADA  3A02               	xorlw	2
 15140  0ADB  1D03               	skipz
 15141  0ADC  2B10               	goto	l4405
 15142                           
 15143                           ;app_ble.c: 229: {
 15144                           ;app_ble.c: 230: if(p->pro_para.point_count < 4)
 15145  0ADD  082C               	movf	ble_send_data@p,w
 15146  0ADE  2426  3188         	fcall	PL106	;call to abstracted procedure
 15147  0AE0  3004               	movlw	4
 15148  0AE1  0201               	subwf	1,w
 15149                           
 15150                           ;app_ble.c: 231: {
 15151                           ;app_ble.c: 232: p->pro_para.point_count = 4;
 15152  0AE2  082C               	movf	ble_send_data@p,w
 15153  0AE3  1803               	skipnc
 15154  0AE4  2AE9               	goto	L22
 15155  0AE5  2415  3188         	fcall	PL74	;call to abstracted procedure
 15156  0AE7  3004               	movlw	4
 15157  0AE8  2AF3               	goto	L21
 15158  0AE9                     L22:	
 15159                           ;app_ble.c: 234: else if(p->pro_para.point_count > 10)
 15160                           
 15161                           ;app_ble.c: 233: }
 15162                           
 15163  0AE9  2426  3188         	fcall	PL106	;call to abstracted procedure
 15164  0AEB  300B               	movlw	11
 15165  0AEC  0201               	subwf	1,w
 15166  0AED  1C03               	skipc
 15167  0AEE  2AF4               	goto	l4395
 15168                           
 15169                           ;app_ble.c: 235: {
 15170                           ;app_ble.c: 236: p->pro_para.point_count = 10;
 15171  0AEF  082C               	movf	ble_send_data@p,w
 15172  0AF0  2415  3188         	fcall	PL74	;call to abstracted procedure
 15173  0AF2  300A               	movlw	10
 15174  0AF3                     L21:	
 15175  0AF3  0081               	movwf	1
 15176  0AF4                     l4395:	
 15177                           
 15178                           ;app_ble.c: 237: }
 15179                           ;app_ble.c: 238: len = p->pro_para.point_count*(2+4)+1;
 15180  0AF4  3006               	movlw	6
 15181  0AF5  00A2               	movwf	___bmul@multiplicand
 15182  0AF6  082C               	movf	ble_send_data@p,w
 15183  0AF7  2426  3188         	fcall	PL106	;call to abstracted procedure
 15184  0AF9  0801               	movf	1,w
 15185  0AFA  235E  3188         	fcall	___bmul
 15186  0AFC  3E01               	addlw	1
 15187  0AFD  00AA               	movwf	ble_send_data@len
 15188                           
 15189                           ;app_ble.c: 239: for(i = 0; i < len; i++)
 15190  0AFE  01AB               	clrf	ble_send_data@i
 15191  0AFF                     l4403:	
 15192  0AFF  082A               	movf	ble_send_data@len,w
 15193  0B00  022B               	subwf	ble_send_data@i,w
 15194  0B01  1803               	btfsc	3,0
 15195  0B02  2B23               	goto	l4415
 15196                           
 15197                           ;app_ble.c: 240: {
 15198                           ;app_ble.c: 241: xor ^= eusart_write(p->pro_para.array[i]);
 15199  0B03  240B  3188         	fcall	PL46	;call to abstracted procedure
 15200  0B05  3E2E               	addlw	46
 15201  0B06  0086               	movwf	6
 15202  0B07  3000               	movlw	0
 15203  0B08  3D28               	addwfc	??_ble_send_data+3,w
 15204  0B09  0087               	movwf	7
 15205  0B0A  0801               	movf	1,w
 15206  0B0B  2327  3188         	fcall	_eusart_write
 15207  0B0D  06A9               	xorwf	ble_send_data@xor,f
 15208  0B0E  0AAB               	incf	ble_send_data@i,f
 15209  0B0F  2AFF               	goto	l4403
 15210  0B10                     l4405:	
 15211                           
 15212                           ;app_ble.c: 250: else
 15213                           ;app_ble.c: 251: {
 15214                           ;app_ble.c: 252: len = sizeof(p->manual_para.array);
 15215  0B10  301A               	movlw	26
 15216  0B11  00AA               	movwf	ble_send_data@len
 15217                           
 15218                           ;app_ble.c: 253: for(i = 0; i < len; i++)
 15219  0B12  01AB               	clrf	ble_send_data@i
 15220  0B13                     l4413:	
 15221  0B13  082A               	movf	ble_send_data@len,w
 15222  0B14  022B               	subwf	ble_send_data@i,w
 15223  0B15  1803               	btfsc	3,0
 15224  0B16  2B23               	goto	l4415
 15225                           
 15226                           ;app_ble.c: 254: {
 15227                           ;app_ble.c: 255: xor ^= eusart_write(p->manual_para.array[i]);
 15228  0B17  240B  3188         	fcall	PL46	;call to abstracted procedure
 15229  0B19  0086               	movwf	6
 15230  0B1A  0828               	movf	??_ble_send_data+3,w
 15231  0B1B  0087               	movwf	7
 15232  0B1C  3141               	addfsr 1,1
 15233  0B1D  0801               	movf	1,w
 15234  0B1E  2327  3188         	fcall	_eusart_write
 15235  0B20  06A9               	xorwf	ble_send_data@xor,f
 15236  0B21  0AAB               	incf	ble_send_data@i,f
 15237  0B22  2B13               	goto	l4413
 15238  0B23                     l4415:	
 15239                           
 15240                           ;app_ble.c: 256: }
 15241                           ;app_ble.c: 257: }
 15242                           ;app_ble.c: 258: eusart_write(xor);
 15243  0B23  0829               	movf	ble_send_data@xor,w
 15244  0B24  2327  3188         	fcall	_eusart_write
 15245                           
 15246                           ;app_ble.c: 259: ble_transmit_stop();
 15247  0B26  2B54               	ljmp	l414
 15248  0B27                     __end_of_ble_send_data:	
 15249  0B27                     __ptext68:	
 15250 ;; *************** function _eusart_write *****************
 15251 ;; Defined at:
 15252 ;;		line 30 in file "src/drv_eusart.c"
 15253 ;; Parameters:    Size  Location     Type
 15254 ;;  byte            1    wreg     unsigned char 
 15255 ;; Auto vars:     Size  Location     Type
 15256 ;;  byte            1    2[BANK0 ] unsigned char 
 15257 ;; Return value:  Size  Location     Type
 15258 ;;                  1    wreg      unsigned char 
 15259 ;; Registers used:
 15260 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15261 ;; Tracked objects:
 15262 ;;		On entry : 0/0
 15263 ;;		On exit  : 1F/0
 15264 ;;		Unchanged: 0/0
 15265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15267 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15269 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15270 ;;Total ram usage:        1 bytes
 15271 ;; Hardware stack levels used:    1
 15272 ;; Hardware stack levels required when called:    9
 15273 ;; This function calls:
 15274 ;;		Nothing
 15275 ;; This function is called by:
 15276 ;;		_ble_send_cmd
 15277 ;;		_ble_send_data
 15278 ;;		_ble_ota_ack
 15279 ;; This function uses a non-reentrant model
 15280 ;;
 15281                           
 15282                           
 15283                           ;psect for function _eusart_write
 15284  0B27                     _eusart_write:	
 15285                           
 15286                           ;incstack = 0
 15287                           ; Regs used in _eusart_write: [wreg+fsr1l+fsr1h+status,2+status,0]
 15288                           ;eusart_write@byte stored from wreg
 15289  0B27  0020               	movlb	0	; select bank0
 15290  0B28  00A2               	movwf	eusart_write@byte
 15291  0B29                     l3981:	
 15292                           ;drv_eusart.c: 32: while(0 == tx_remain);
 15293                           
 15294  0B29  086C               	movf	_tx_remain,w
 15295  0B2A  1903               	btfsc	3,2
 15296  0B2B  2B29               	goto	l3981
 15297                           
 15298                           ;drv_eusart.c: 34: if(!PIE1bits.TXIE)
 15299  0B2C  0021               	movlb	1	; select bank1
 15300  0B2D  1A11               	btfsc	17,4	;volatile
 15301  0B2E  2B34               	goto	l186
 15302                           
 15303                           ;drv_eusart.c: 35: {
 15304                           ;drv_eusart.c: 36: TXREG = byte;
 15305  0B2F  0020               	movlb	0	; select bank0
 15306  0B30  0822               	movf	eusart_write@byte,w
 15307  0B31  0023               	movlb	3	; select bank3
 15308  0B32  009A               	movwf	26	;volatile
 15309                           
 15310                           ;drv_eusart.c: 37: }
 15311  0B33  2B43               	goto	l3995
 15312  0B34                     l186:	
 15313                           
 15314                           ;drv_eusart.c: 38: else
 15315                           ;drv_eusart.c: 39: {
 15316                           ;drv_eusart.c: 40: PIE1bits.TXIE = 0;
 15317  0B34  1211               	bcf	17,4	;volatile
 15318                           
 15319                           ;drv_eusart.c: 41: tx_buf[tx_head++] = byte;
 15320  0B35  0020               	movlb	0	; select bank0
 15321  0B36  086A               	movf	_tx_head,w
 15322  0B37  3E20               	addlw	(low (_tx_buf| (0+512)))& (0+255)
 15323  0B38  0086               	movwf	6
 15324  0B39  3002               	movlw	2	; select bank4/5
 15325  0B3A  0087               	movwf	7
 15326  0B3B  0822               	movf	eusart_write@byte,w
 15327  0B3C  0081               	movwf	1
 15328  0B3D  3040               	movlw	64
 15329  0B3E  0AEA               	incf	_tx_head,f
 15330                           
 15331                           ;drv_eusart.c: 42: if(sizeof( tx_buf) <= tx_head)
 15332  0B3F  026A               	subwf	_tx_head,w
 15333  0B40  1803               	btfsc	3,0
 15334                           
 15335                           ;drv_eusart.c: 43: {
 15336                           ;drv_eusart.c: 44: tx_head = 0;
 15337  0B41  01EA               	clrf	_tx_head
 15338                           
 15339                           ;drv_eusart.c: 45: }
 15340                           ;drv_eusart.c: 46: tx_remain--;
 15341  0B42  03EC               	decf	_tx_remain,f
 15342  0B43                     l3995:	
 15343                           
 15344                           ;drv_eusart.c: 47: }
 15345                           ;drv_eusart.c: 48: PIE1bits.TXIE = 1;
 15346  0B43  0021               	movlb	1	; select bank1
 15347  0B44  1611               	bsf	17,4	;volatile
 15348                           
 15349                           ;drv_eusart.c: 49: return byte;
 15350  0B45  0020               	movlb	0	; select bank0
 15351  0B46  0822               	movf	eusart_write@byte,w
 15352  0B47  0008               	return
 15353  0B48                     __end_of_eusart_write:	
 15354  0B48                     __ptext62:	
 15355 ;; *************** function _ble_transmit_start *****************
 15356 ;; Defined at:
 15357 ;;		line 122 in file "src/app_ble.c"
 15358 ;; Parameters:    Size  Location     Type
 15359 ;;		None
 15360 ;; Auto vars:     Size  Location     Type
 15361 ;;		None
 15362 ;; Return value:  Size  Location     Type
 15363 ;;                  1    wreg      void 
 15364 ;; Registers used:
 15365 ;;		wreg
 15366 ;; Tracked objects:
 15367 ;;		On entry : E/0
 15368 ;;		On exit  : 0/0
 15369 ;;		Unchanged: 0/0
 15370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15373 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15374 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15375 ;;Total ram usage:        1 bytes
 15376 ;; Hardware stack levels used:    1
 15377 ;; Hardware stack levels required when called:    9
 15378 ;; This function calls:
 15379 ;;		Nothing
 15380 ;; This function is called by:
 15381 ;;		_ble_send_data
 15382 ;;		_ble_ota_ack
 15383 ;; This function uses a non-reentrant model
 15384 ;;
 15385                           
 15386                           
 15387                           ;psect for function _ble_transmit_start
 15388  0B48                     _ble_transmit_start:	
 15389                           
 15390                           ;app_ble.c: 124: LATCbits.LATC1 = 0;
 15391                           
 15392                           ;incstack = 0
 15393                           ; Regs used in _ble_transmit_start: [wreg]
 15394  0B48  0022               	movlb	2	; select bank2
 15395  0B49  108E               	bcf	14,1	;volatile
 15396                           
 15397                           ;app_ble.c: 125: _delay((unsigned long)((800)*(16000000/4000000.0)));
 15398  0B4A  3005               	movlw	5
 15399  0B4B  0020               	movlb	0	; select bank0
 15400  0B4C  00A2               	movwf	??_ble_transmit_start
 15401  0B4D  3026               	movlw	38
 15402  0B4E                     u6617:	
 15403  0B4E  0B89               	decfsz	9,f
 15404  0B4F  2B4E               	goto	u6617
 15405  0B50  0BA2               	decfsz	??_ble_transmit_start,f
 15406  0B51  2B4E               	goto	u6617
 15407  0B52  0000               	nop
 15408  0B53  0008               	return
 15409  0B54                     __end_of_ble_transmit_start:	
 15410  0B54                     __ptext61:	
 15411 ;; *************** function _ble_transmit_stop *****************
 15412 ;; Defined at:
 15413 ;;		line 128 in file "src/app_ble.c"
 15414 ;; Parameters:    Size  Location     Type
 15415 ;;		None
 15416 ;; Auto vars:     Size  Location     Type
 15417 ;;		None
 15418 ;; Return value:  Size  Location     Type
 15419 ;;                  1    wreg      void 
 15420 ;; Registers used:
 15421 ;;		wreg
 15422 ;; Tracked objects:
 15423 ;;		On entry : 1F/0
 15424 ;;		On exit  : 1F/2
 15425 ;;		Unchanged: 0/0
 15426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15431 ;;Total ram usage:        0 bytes
 15432 ;; Hardware stack levels used:    1
 15433 ;; Hardware stack levels required when called:    9
 15434 ;; This function calls:
 15435 ;;		Nothing
 15436 ;; This function is called by:
 15437 ;;		_ble_send_data
 15438 ;;		_ble_ota_ack
 15439 ;; This function uses a non-reentrant model
 15440 ;;
 15441                           
 15442                           
 15443                           ;psect for function _ble_transmit_stop
 15444  0B54                     _ble_transmit_stop:	
 15445  0B54                     l414:	
 15446                           ;app_ble.c: 130: while(!TXSTAbits.TRMT);
 15447                           
 15448                           ;incstack = 0
 15449                           ; Regs used in _ble_transmit_stop: [wreg]
 15450                           
 15451  0B54  0023               	movlb	3	; select bank3
 15452  0B55  1C9E               	btfss	30,1	;volatile
 15453  0B56  2B54               	goto	l414
 15454                           
 15455                           ;app_ble.c: 131: _delay((unsigned long)((200)*(16000000/4000000.0)));
 15456  0B57  30A0               	movlw	160
 15457  0B58                     u6607:	
 15458  0B58  3200               	nop2
 15459  0B59  0B89               	decfsz	9,f
 15460  0B5A  2B58               	goto	u6607
 15461                           
 15462                           ;app_ble.c: 132: LATCbits.LATC1 = 1;
 15463  0B5B  0022               	movlb	2	; select bank2
 15464  0B5C  148E               	bsf	14,1	;volatile
 15465  0B5D  0008               	return
 15466  0B5E                     __end_of_ble_transmit_stop:	
 15467  0B5E                     __ptext59:	
 15468 ;; *************** function ___bmul *****************
 15469 ;; Defined at:
 15470 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul8.c"
 15471 ;; Parameters:    Size  Location     Type
 15472 ;;  multiplier      1    wreg     unsigned char 
 15473 ;;  multiplicand    1    2[BANK0 ] unsigned char 
 15474 ;; Auto vars:     Size  Location     Type
 15475 ;;  multiplier      1    4[BANK0 ] unsigned char 
 15476 ;;  product         1    3[BANK0 ] unsigned char 
 15477 ;; Return value:  Size  Location     Type
 15478 ;;                  1    wreg      unsigned char 
 15479 ;; Registers used:
 15480 ;;		wreg, status,2, status,0
 15481 ;; Tracked objects:
 15482 ;;		On entry : 1F/0
 15483 ;;		On exit  : 1F/0
 15484 ;;		Unchanged: 0/0
 15485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15486 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15487 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15489 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15490 ;;Total ram usage:        3 bytes
 15491 ;; Hardware stack levels used:    1
 15492 ;; Hardware stack levels required when called:    9
 15493 ;; This function calls:
 15494 ;;		Nothing
 15495 ;; This function is called by:
 15496 ;;		_ble_send_data
 15497 ;;		_led_set_pro
 15498 ;; This function uses a non-reentrant model
 15499 ;;
 15500                           
 15501                           
 15502                           ;psect for function ___bmul
 15503  0B5E                     ___bmul:	
 15504                           
 15505                           ;incstack = 0
 15506                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 15507                           ;___bmul@multiplier stored from wreg
 15508  0B5E  00A4               	movwf	___bmul@multiplier
 15509  0B5F  01A3               	clrf	___bmul@product
 15510  0B60                     l4157:	
 15511  0B60  0822               	movf	___bmul@multiplicand,w
 15512  0B61  1824               	btfsc	___bmul@multiplier,0
 15513  0B62  07A3               	addwf	___bmul@product,f
 15514  0B63  35A2               	lslf	___bmul@multiplicand,f
 15515  0B64  36A4               	lsrf	___bmul@multiplier,f
 15516  0B65  0824               	movf	___bmul@multiplier,w
 15517  0B66  1D03               	btfss	3,2
 15518  0B67  2B60               	goto	l4157
 15519  0B68  0823               	movf	___bmul@product,w
 15520  0B69  0008               	return
 15521  0B6A                     __end_of___bmul:	
 15522  0B6A                     __ptext67:	
 15523 ;; *************** function _strlen *****************
 15524 ;; Defined at:
 15525 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\strlen.c"
 15526 ;; Parameters:    Size  Location     Type
 15527 ;;  s               1    wreg     PTR const unsigned char 
 15528 ;;		 -> ble_check_devid@dev(17), ble_send_cmd@ack(8), 
 15529 ;; Auto vars:     Size  Location     Type
 15530 ;;  s               1    6[BANK0 ] PTR const unsigned char 
 15531 ;;		 -> ble_check_devid@dev(17), ble_send_cmd@ack(8), 
 15532 ;;  cp              1    5[BANK0 ] PTR const unsigned char 
 15533 ;;		 -> ble_check_devid@dev(17), ble_send_cmd@ack(8), 
 15534 ;; Return value:  Size  Location     Type
 15535 ;;                  2    2[BANK0 ] unsigned int 
 15536 ;; Registers used:
 15537 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15538 ;; Tracked objects:
 15539 ;;		On entry : 1F/0
 15540 ;;		On exit  : 1F/0
 15541 ;;		Unchanged: 0/0
 15542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15543 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15544 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15546 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15547 ;;Total ram usage:        5 bytes
 15548 ;; Hardware stack levels used:    1
 15549 ;; Hardware stack levels required when called:    9
 15550 ;; This function calls:
 15551 ;;		Nothing
 15552 ;; This function is called by:
 15553 ;;		_ble_send_cmd
 15554 ;;		_ble_check_devid
 15555 ;; This function uses a non-reentrant model
 15556 ;;
 15557                           
 15558                           
 15559                           ;psect for function _strlen
 15560  0B6A                     _strlen:	
 15561                           
 15562                           ;incstack = 0
 15563                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 15564                           ;strlen@s stored from wreg
 15565  0B6A  00A6               	movwf	strlen@s
 15566  0B6B  00A5               	movwf	strlen@cp
 15567  0B6C                     l4051:	
 15568  0B6C  0825               	movf	strlen@cp,w
 15569  0B6D  0086               	movwf	6
 15570  0B6E  0187               	clrf	7
 15571  0B6F  0801               	movf	1,w
 15572  0B70  1903               	btfsc	3,2
 15573  0B71  2B74               	goto	l4053
 15574  0B72  0AA5               	incf	strlen@cp,f
 15575  0B73  2B6C               	goto	l4051
 15576  0B74                     l4053:	
 15577  0B74  0826               	movf	strlen@s,w
 15578  0B75  0225               	subwf	strlen@cp,w
 15579  0B76  00A2               	movwf	?_strlen
 15580  0B77  01A3               	clrf	?_strlen+1
 15581  0B78  1BA2               	btfsc	?_strlen,7
 15582  0B79  03A3               	decf	?_strlen+1,f
 15583  0B7A  0008               	return
 15584  0B7B                     __end_of_strlen:	
 15585  0B7B                     __ptext65:	
 15586 ;; *************** function _ble_check_devid *****************
 15587 ;; Defined at:
 15588 ;;		line 85 in file "src/app_ble.c"
 15589 ;; Parameters:    Size  Location     Type
 15590 ;;		None
 15591 ;; Auto vars:     Size  Location     Type
 15592 ;;  dev            17   23[BANK0 ] unsigned char [17]
 15593 ;;  cnt             2   40[BANK0 ] unsigned int 
 15594 ;;  idx             1   44[BANK0 ] unsigned char 
 15595 ;;  rev             1   43[BANK0 ] unsigned char 
 15596 ;;  len             1   42[BANK0 ] unsigned char 
 15597 ;; Return value:  Size  Location     Type
 15598 ;;                  1    wreg      unsigned char 
 15599 ;; Registers used:
 15600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15601 ;; Tracked objects:
 15602 ;;		On entry : 0/2
 15603 ;;		On exit  : 1F/0
 15604 ;;		Unchanged: 0/0
 15605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15607 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15608 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15609 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15610 ;;Total ram usage:       23 bytes
 15611 ;; Hardware stack levels used:    1
 15612 ;; Hardware stack levels required when called:   11
 15613 ;; This function calls:
 15614 ;;		_ble_send_cmd
 15615 ;;		_strlen
 15616 ;; This function is called by:
 15617 ;;		_ble_init
 15618 ;; This function uses a non-reentrant model
 15619 ;;
 15620                           
 15621                           
 15622                           ;psect for function _ble_check_devid
 15623  0B7B                     _ble_check_devid:	
 15624                           
 15625                           ;app_ble.c: 87: char dev[] = "30313633" "30313033";
 15626                           
 15627                           ;incstack = 0
 15628                           ; Regs used in _ble_check_devid: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15629  0B7B  3020               	movlw	low ble_check_devid@F8342
 15630  0B7C  0086               	movwf	6
 15631  0B7D  3001               	movlw	high ble_check_devid@F8342
 15632  0B7E  0087               	movwf	7
 15633  0B7F  3037               	movlw	low ble_check_devid@dev
 15634  0B80  0084               	movwf	4
 15635  0B81  3000               	movlw	high ble_check_devid@dev
 15636  0B82  0085               	movwf	5
 15637  0B83  3011               	movlw	17
 15638  0B84  0020               	movlb	0	; select bank0
 15639  0B85  00B6               	movwf	??_ble_check_devid
 15640  0B86                     u4070:	
 15641  0B86  0016               	moviw fsr1++
 15642  0B87  001A               	movwi fsr0++
 15643  0B88  0BB6               	decfsz	??_ble_check_devid,f
 15644  0B89  2B86               	goto	u4070
 15645                           
 15646                           ;app_ble.c: 88: uint8_t len = strlen(dev);
 15647  0B8A  3037               	movlw	(low (ble_check_devid@dev| 0))& (0+255)
 15648  0B8B  236A  3188         	fcall	_strlen
 15649  0B8D  0822               	movf	?_strlen,w
 15650  0B8E  00CA               	movwf	ble_check_devid@len
 15651  0B8F  3044               	movlw	low (STR_1| (0+32768))
 15652                           
 15653                           ;app_ble.c: 89: uint8_t idx = 0;
 15654  0B90  01CC               	clrf	ble_check_devid@idx
 15655                           
 15656                           ;app_ble.c: 90: uint16_t cnt = 0;
 15657  0B91  01C8               	clrf	ble_check_devid@cnt
 15658  0B92  01C9               	clrf	ble_check_devid@cnt+1
 15659                           
 15660                           ;app_ble.c: 91: uint8_t rev;
 15661                           ;app_ble.c: 92: ble_send_cmd("AT+ADV_MFR_SPC=?\r\n");
 15662  0B93  00A7               	movwf	ble_send_cmd@cmd
 15663  0B94  3098               	movlw	high (STR_1| (0+32768))
 15664  0B95  00A8               	movwf	ble_send_cmd@cmd+1
 15665  0B96  2249  3188         	fcall	_ble_send_cmd
 15666  0B98                     l5009:	
 15667                           ;app_ble.c: 93: while(idx < len)
 15668                           
 15669  0B98  084A               	movf	ble_check_devid@len,w
 15670  0B99  024C               	subwf	ble_check_devid@idx,w
 15671  0B9A  1803               	btfsc	3,0
 15672  0B9B  3401               	retlw	1
 15673                           
 15674                           ;app_ble.c: 94: {
 15675                           ;app_ble.c: 95: if(PIR1bits.RCIF)
 15676  0B9C  1E91               	btfss	17,5	;volatile
 15677  0B9D  2BAF               	goto	l4999
 15678                           
 15679                           ;app_ble.c: 96: {
 15680                           ;app_ble.c: 97: if(RC1STAbits.OERR)
 15681  0B9E  0023               	movlb	3	; select bank3
 15682  0B9F  1C9D               	btfss	29,1	;volatile
 15683  0BA0  2BA3               	goto	l4989
 15684                           
 15685                           ;app_ble.c: 98: {
 15686                           ;app_ble.c: 99: RC1STAbits.CREN = 0;
 15687  0BA1  121D               	bcf	29,4	;volatile
 15688                           
 15689                           ;app_ble.c: 100: RC1STAbits.CREN = 1;
 15690  0BA2  161D               	bsf	29,4	;volatile
 15691  0BA3                     l4989:	
 15692                           
 15693                           ;app_ble.c: 101: }
 15694                           ;app_ble.c: 102: rev = RCREG;
 15695  0BA3  0819               	movf	25,w	;volatile
 15696  0BA4  0020               	movlb	0	; select bank0
 15697  0BA5  00CB               	movwf	ble_check_devid@rev
 15698                           
 15699                           ;app_ble.c: 103: if(rev == dev[idx])
 15700  0BA6  084C               	movf	ble_check_devid@idx,w
 15701  0BA7  3E37               	addlw	(low (ble_check_devid@dev| 0))& (0+255)
 15702  0BA8  0086               	movwf	6
 15703  0BA9  0187               	clrf	7
 15704  0BAA  0801               	movf	1,w
 15705  0BAB  064B               	xorwf	ble_check_devid@rev,w
 15706  0BAC  1D03               	skipz
 15707  0BAD  3400               	retlw	0
 15708                           
 15709                           ;app_ble.c: 104: {
 15710                           ;app_ble.c: 105: idx++;
 15711  0BAE  0ACC               	incf	ble_check_devid@idx,f
 15712  0BAF                     l4999:	
 15713                           ;app_ble.c: 107: else
 15714                           ;app_ble.c: 108: {
 15715                           ;app_ble.c: 109: return 0;
 15716                           
 15717                           ;app_ble.c: 106: }
 15718                           
 15719                           
 15720                           ;app_ble.c: 110: }
 15721                           ;app_ble.c: 111: }
 15722                           ;app_ble.c: 112: _delay((unsigned long)((100)*(16000000/4000000.0)));
 15723  0BAF  3085               	movlw	133
 15724  0BB0                     u6687:	
 15725  0BB0  0B89               	decfsz	9,f
 15726  0BB1  2BB0               	goto	u6687
 15727  0BB2  0000               	nop
 15728                           
 15729                           ;app_ble.c: 113: cnt++;
 15730  0BB3  0020               	movlb	0	; select bank0
 15731  0BB4  0AC8               	incf	ble_check_devid@cnt,f
 15732  0BB5  1903               	skipnz
 15733  0BB6  0AC9               	incf	ble_check_devid@cnt+1,f
 15734                           
 15735                           ;app_ble.c: 114: if(cnt > 1000)
 15736  0BB7  3003               	movlw	3
 15737  0BB8  0249               	subwf	ble_check_devid@cnt+1,w
 15738  0BB9  30E9               	movlw	233
 15739  0BBA  1903               	skipnz
 15740  0BBB  0248               	subwf	ble_check_devid@cnt,w
 15741  0BBC  1803               	btfsc	3,0
 15742  0BBD  3400               	retlw	0
 15743  0BBE  2B98               	goto	l5009
 15744  0BBF                     __end_of_ble_check_devid:	
 15745                           ;app_ble.c: 117: }
 15746                           ;app_ble.c: 118: }
 15747                           ;app_ble.c: 119: return 1;
 15748                           
 15749  0BBF                     __ptext31:	
 15750 ;; *************** function _ble_process *****************
 15751 ;; Defined at:
 15752 ;;		line 167 in file "src/app_ble.c"
 15753 ;; Parameters:    Size  Location     Type
 15754 ;;		None
 15755 ;; Auto vars:     Size  Location     Type
 15756 ;;		None
 15757 ;; Return value:  Size  Location     Type
 15758 ;;                  1    wreg      void 
 15759 ;; Registers used:
 15760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15761 ;; Tracked objects:
 15762 ;;		On entry : 0/0
 15763 ;;		On exit  : 0/0
 15764 ;;		Unchanged: 0/0
 15765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15770 ;;Total ram usage:        0 bytes
 15771 ;; Hardware stack levels used:    1
 15772 ;; Hardware stack levels required when called:   12
 15773 ;; This function calls:
 15774 ;;		_ble_decode
 15775 ;;		_ble_ready_to_receive
 15776 ;;		_ble_receive_complete
 15777 ;;		_ble_receive_start
 15778 ;;		_ble_receive_stop
 15779 ;; This function is called by:
 15780 ;;		_main
 15781 ;; This function uses a non-reentrant model
 15782 ;;
 15783                           
 15784                           
 15785                           ;psect for function _ble_process
 15786  0BBF                     _ble_process:	
 15787                           
 15788                           ;app_ble.c: 169: if(ble_ready_to_receive())
 15789                           
 15790                           ;incstack = 0
 15791                           ; Regs used in _ble_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15792  0BBF  23CE  3188         	fcall	_ble_ready_to_receive
 15793  0BC1  3A00               	xorlw	0
 15794  0BC2  1903               	skipnz
 15795  0BC3  2BC6               	goto	l6525
 15796                           
 15797                           ;app_ble.c: 170: {
 15798                           ;app_ble.c: 171: ble_receive_start();
 15799  0BC4  23DC  3188         	fcall	_ble_receive_start
 15800  0BC6                     l6525:	
 15801                           
 15802                           ;app_ble.c: 172: }
 15803                           ;app_ble.c: 173: if(ble_receive_complete())
 15804  0BC6  23D5  3188         	fcall	_ble_receive_complete
 15805  0BC8  3A00               	xorlw	0
 15806  0BC9  1903               	skipnz
 15807  0BCA  0008               	return
 15808                           
 15809                           ;app_ble.c: 174: {
 15810                           ;app_ble.c: 175: ble_receive_stop();
 15811  0BCB  2404               	fcall	_ble_receive_stop
 15812                           
 15813                           ;app_ble.c: 176: ble_decode();
 15814  0BCC  318C  2C2C         	ljmp	l6003
 15815  0BCE                     __end_of_ble_process:	
 15816  0BCE                     __ptext35:	
 15817 ;; *************** function _ble_ready_to_receive *****************
 15818 ;; Defined at:
 15819 ;;		line 135 in file "src/app_ble.c"
 15820 ;; Parameters:    Size  Location     Type
 15821 ;;		None
 15822 ;; Auto vars:     Size  Location     Type
 15823 ;;		None
 15824 ;; Return value:  Size  Location     Type
 15825 ;;                  1    wreg      unsigned char 
 15826 ;; Registers used:
 15827 ;;		wreg
 15828 ;; Tracked objects:
 15829 ;;		On entry : 0/0
 15830 ;;		On exit  : 1D/0
 15831 ;;		Unchanged: 0/0
 15832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15837 ;;Total ram usage:        0 bytes
 15838 ;; Hardware stack levels used:    1
 15839 ;; Hardware stack levels required when called:    9
 15840 ;; This function calls:
 15841 ;;		Nothing
 15842 ;; This function is called by:
 15843 ;;		_ble_process
 15844 ;; This function uses a non-reentrant model
 15845 ;;
 15846                           
 15847                           
 15848                           ;psect for function _ble_ready_to_receive
 15849  0BCE                     _ble_ready_to_receive:	
 15850                           
 15851                           ;app_ble.c: 137: if((PORTAbits.RA2 == 0) && LATCbits.LATC1)
 15852                           
 15853                           ;incstack = 0
 15854                           ; Regs used in _ble_ready_to_receive: [wreg]
 15855  0BCE  0020               	movlb	0	; select bank0
 15856  0BCF  190C               	btfsc	12,2	;volatile
 15857  0BD0  3400               	retlw	0
 15858  0BD1  0022               	movlb	2	; select bank2
 15859  0BD2  188E               	btfsc	14,1	;volatile
 15860                           
 15861                           ;app_ble.c: 138: {
 15862                           ;app_ble.c: 139: return 1;
 15863  0BD3  3401               	retlw	1
 15864                           
 15865                           ;app_ble.c: 140: }
 15866                           ;app_ble.c: 141: return 0;
 15867  0BD4  3400               	retlw	0
 15868  0BD5                     __end_of_ble_ready_to_receive:	
 15869  0BD5                     __ptext34:	
 15870 ;; *************** function _ble_receive_complete *****************
 15871 ;; Defined at:
 15872 ;;		line 152 in file "src/app_ble.c"
 15873 ;; Parameters:    Size  Location     Type
 15874 ;;		None
 15875 ;; Auto vars:     Size  Location     Type
 15876 ;;		None
 15877 ;; Return value:  Size  Location     Type
 15878 ;;                  1    wreg      unsigned char 
 15879 ;; Registers used:
 15880 ;;		wreg
 15881 ;; Tracked objects:
 15882 ;;		On entry : 1D/0
 15883 ;;		On exit  : 1D/0
 15884 ;;		Unchanged: 0/0
 15885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15890 ;;Total ram usage:        0 bytes
 15891 ;; Hardware stack levels used:    1
 15892 ;; Hardware stack levels required when called:    9
 15893 ;; This function calls:
 15894 ;;		Nothing
 15895 ;; This function is called by:
 15896 ;;		_ble_process
 15897 ;; This function uses a non-reentrant model
 15898 ;;
 15899                           
 15900                           
 15901                           ;psect for function _ble_receive_complete
 15902  0BD5                     _ble_receive_complete:	
 15903                           
 15904                           ;app_ble.c: 154: if(PORTAbits.RA2 && (LATCbits.LATC1 == 0))
 15905                           
 15906                           ;incstack = 0
 15907                           ; Regs used in _ble_receive_complete: [wreg]
 15908  0BD5  0020               	movlb	0	; select bank0
 15909  0BD6  1D0C               	btfss	12,2	;volatile
 15910  0BD7  3400               	retlw	0
 15911  0BD8  0022               	movlb	2	; select bank2
 15912  0BD9  1C8E               	btfss	14,1	;volatile
 15913                           
 15914                           ;app_ble.c: 155: {
 15915                           ;app_ble.c: 156: return 1;
 15916  0BDA  3401               	retlw	1
 15917                           
 15918                           ;app_ble.c: 157: }
 15919                           ;app_ble.c: 158: return 0;
 15920  0BDB  3400               	retlw	0
 15921  0BDC                     __end_of_ble_receive_complete:	
 15922  0BDC                     __ptext33:	
 15923 ;; *************** function _ble_receive_start *****************
 15924 ;; Defined at:
 15925 ;;		line 144 in file "src/app_ble.c"
 15926 ;; Parameters:    Size  Location     Type
 15927 ;;		None
 15928 ;; Auto vars:     Size  Location     Type
 15929 ;;		None
 15930 ;; Return value:  Size  Location     Type
 15931 ;;                  1    wreg      void 
 15932 ;; Registers used:
 15933 ;;		wreg, status,2
 15934 ;; Tracked objects:
 15935 ;;		On entry : 1D/0
 15936 ;;		On exit  : 1F/2
 15937 ;;		Unchanged: 0/0
 15938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15942 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15943 ;;Total ram usage:        1 bytes
 15944 ;; Hardware stack levels used:    1
 15945 ;; Hardware stack levels required when called:    9
 15946 ;; This function calls:
 15947 ;;		Nothing
 15948 ;; This function is called by:
 15949 ;;		_ble_process
 15950 ;; This function uses a non-reentrant model
 15951 ;;
 15952                           
 15953                           
 15954                           ;psect for function _ble_receive_start
 15955  0BDC                     _ble_receive_start:	
 15956                           
 15957                           ;app_ble.c: 146: index = 0;
 15958                           
 15959                           ;incstack = 0
 15960                           ; Regs used in _ble_receive_start: [wreg+status,2]
 15961  0BDC  0020               	movlb	0	; select bank0
 15962  0BDD  3005               	movlw	5
 15963  0BDE  01E4               	clrf	_index
 15964                           
 15965                           ;app_ble.c: 147: checksum = 0;
 15966  0BDF  01E3               	clrf	_checksum
 15967                           
 15968                           ;app_ble.c: 148: _delay((unsigned long)((800)*(16000000/4000000.0)));
 15969  0BE0  0020               	movlb	0	; select bank0
 15970  0BE1  00A2               	movwf	??_ble_receive_start
 15971  0BE2  3026               	movlw	38
 15972  0BE3                     u6587:	
 15973  0BE3  0B89               	decfsz	9,f
 15974  0BE4  2BE3               	goto	u6587
 15975  0BE5  0BA2               	decfsz	??_ble_receive_start,f
 15976  0BE6  2BE3               	goto	u6587
 15977  0BE7  0000               	nop
 15978                           
 15979                           ;app_ble.c: 149: LATCbits.LATC1 = 0;
 15980  0BE8  0022               	movlb	2	; select bank2
 15981  0BE9  108E               	bcf	14,1	;volatile
 15982  0BEA  0008               	return
 15983  0BEB                     __end_of_ble_receive_start:	
 15984  0BEB                     __ptext2:	
 15985 ;; *************** function _rtc_init *****************
 15986 ;; Defined at:
 15987 ;;		line 41 in file "src/app_rtc.c"
 15988 ;; Parameters:    Size  Location     Type
 15989 ;;		None
 15990 ;; Auto vars:     Size  Location     Type
 15991 ;;		None
 15992 ;; Return value:  Size  Location     Type
 15993 ;;                  1    wreg      void 
 15994 ;; Registers used:
 15995 ;;		status,2
 15996 ;; Tracked objects:
 15997 ;;		On entry : 1F/2
 15998 ;;		On exit  : 1F/1
 15999 ;;		Unchanged: 0/0
 16000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16005 ;;Total ram usage:        0 bytes
 16006 ;; Hardware stack levels used:    1
 16007 ;; Hardware stack levels required when called:    9
 16008 ;; This function calls:
 16009 ;;		Nothing
 16010 ;; This function is called by:
 16011 ;;		_main
 16012 ;; This function uses a non-reentrant model
 16013 ;;
 16014                           
 16015                           
 16016                           ;psect for function _rtc_init
 16017  0BEB                     _rtc_init:	
 16018                           
 16019                           ;app_rtc.c: 43: m_current_time.year = 0;
 16020                           
 16021                           ;incstack = 0
 16022                           ; Regs used in _rtc_init: [status,2]
 16023  0BEB  0021               	movlb	1	; select bank1
 16024  0BEC  01DF               	clrf	_m_current_time^(0+128)
 16025                           
 16026                           ;app_rtc.c: 44: m_current_time.month = 1;
 16027  0BED  01E0               	clrf	(_m_current_time^(0+128)+1)
 16028  0BEE  0AE0               	incf	(_m_current_time^(0+128)+1),f
 16029                           
 16030                           ;app_rtc.c: 45: m_current_time.day = 1;
 16031  0BEF  01E1               	clrf	(_m_current_time^(0+128)+2)
 16032  0BF0  0AE1               	incf	(_m_current_time^(0+128)+2),f
 16033                           
 16034                           ;app_rtc.c: 46: m_current_time.week = 0;
 16035  0BF1  01E2               	clrf	(_m_current_time^(0+128)+3)
 16036                           
 16037                           ;app_rtc.c: 47: m_current_time.hour = 0;
 16038  0BF2  01E3               	clrf	(_m_current_time^(0+128)+4)
 16039                           
 16040                           ;app_rtc.c: 48: m_current_time.minute = 0;
 16041  0BF3  01E4               	clrf	(_m_current_time^(0+128)+5)
 16042                           
 16043                           ;app_rtc.c: 49: m_current_time.second = 0;
 16044  0BF4  01E5               	clrf	(_m_current_time^(0+128)+6)
 16045  0BF5  0008               	return
 16046  0BF6                     __end_of_rtc_init:	
 16047  0BF6                     __ptext1:	
 16048 ;; *************** function _rtc_second_ready *****************
 16049 ;; Defined at:
 16050 ;;		line 100 in file "src/app_rtc.c"
 16051 ;; Parameters:    Size  Location     Type
 16052 ;;		None
 16053 ;; Auto vars:     Size  Location     Type
 16054 ;;		None
 16055 ;; Return value:  Size  Location     Type
 16056 ;;                  1    wreg      unsigned char 
 16057 ;; Registers used:
 16058 ;;		wreg
 16059 ;; Tracked objects:
 16060 ;;		On entry : 0/0
 16061 ;;		On exit  : 1F/0
 16062 ;;		Unchanged: 0/0
 16063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16068 ;;Total ram usage:        0 bytes
 16069 ;; Hardware stack levels used:    1
 16070 ;; Hardware stack levels required when called:    9
 16071 ;; This function calls:
 16072 ;;		Nothing
 16073 ;; This function is called by:
 16074 ;;		_main
 16075 ;; This function uses a non-reentrant model
 16076 ;;
 16077                           
 16078                           
 16079                           ;psect for function _rtc_second_ready
 16080  0BF6                     _rtc_second_ready:	
 16081                           
 16082                           ;app_rtc.c: 102: if(rtc_status.fSec)
 16083                           
 16084                           ;incstack = 0
 16085                           ; Regs used in _rtc_second_ready: [wreg]
 16086  0BF6  0020               	movlb	0	; select bank0
 16087  0BF7  1C65               	btfss	_rtc_status,0
 16088  0BF8  3400               	retlw	0
 16089  0BF9  3001               	movlw	1
 16090                           
 16091                           ;app_rtc.c: 103: {
 16092                           ;app_rtc.c: 104: rtc_status.fSec = 0;
 16093  0BFA  1065               	bcf	_rtc_status,0
 16094                           
 16095                           ;app_rtc.c: 105: return 1;
 16096  0BFB  0008               	return
 16097  0BFC                     __end_of_rtc_second_ready:	
 16098                           ;app_rtc.c: 106: }
 16099                           ;app_rtc.c: 107: return 0;
 16100                           
 16101  0BFC                     __ptext78:	
 16102 ;; *************** function _key_init *****************
 16103 ;; Defined at:
 16104 ;;		line 5 in file "src/app_key.c"
 16105 ;; Parameters:    Size  Location     Type
 16106 ;;  cb              2    2[BANK0 ] PTR FTN(unsigned char ,e
 16107 ;;		 -> led_touch_cb(1), 
 16108 ;; Auto vars:     Size  Location     Type
 16109 ;;		None
 16110 ;; Return value:  Size  Location     Type
 16111 ;;                  1    wreg      void 
 16112 ;; Registers used:
 16113 ;;		wreg
 16114 ;; Tracked objects:
 16115 ;;		On entry : B1F/0
 16116 ;;		On exit  : B1F/1
 16117 ;;		Unchanged: B00/0
 16118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16119 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16122 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16123 ;;Total ram usage:        2 bytes
 16124 ;; Hardware stack levels used:    1
 16125 ;; Hardware stack levels required when called:    9
 16126 ;; This function calls:
 16127 ;;		Nothing
 16128 ;; This function is called by:
 16129 ;;		_app_init
 16130 ;; This function uses a non-reentrant model
 16131 ;;
 16132                           
 16133                           
 16134                           ;psect for function _key_init
 16135  0BFC                     _key_init:	
 16136                           
 16137                           ;app_key.c: 7: key_func = cb;
 16138                           
 16139                           ;incstack = 0
 16140                           ; Regs used in _key_init: [wreg]
 16141  0BFC  0823               	movf	key_init@cb+1,w
 16142  0BFD  0021               	movlb	1	; select bank1
 16143  0BFE  00E7               	movwf	(_key_func+1)^(0+128)
 16144  0BFF  0020               	movlb	0	; select bank0
 16145  0C00  0822               	movf	key_init@cb,w
 16146  0C01  0021               	movlb	1	; select bank1
 16147  0C02  00E6               	movwf	_key_func^(0+128)
 16148  0C03  0008               	return
 16149  0C04                     __end_of_key_init:	
 16150  0C04                     __ptext32:	
 16151 ;; *************** function _ble_receive_stop *****************
 16152 ;; Defined at:
 16153 ;;		line 161 in file "src/app_ble.c"
 16154 ;; Parameters:    Size  Location     Type
 16155 ;;		None
 16156 ;; Auto vars:     Size  Location     Type
 16157 ;;		None
 16158 ;; Return value:  Size  Location     Type
 16159 ;;                  1    wreg      void 
 16160 ;; Registers used:
 16161 ;;		wreg
 16162 ;; Tracked objects:
 16163 ;;		On entry : 1D/0
 16164 ;;		On exit  : 1F/2
 16165 ;;		Unchanged: 0/0
 16166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16171 ;;Total ram usage:        0 bytes
 16172 ;; Hardware stack levels used:    1
 16173 ;; Hardware stack levels required when called:    9
 16174 ;; This function calls:
 16175 ;;		Nothing
 16176 ;; This function is called by:
 16177 ;;		_ble_process
 16178 ;; This function uses a non-reentrant model
 16179 ;;
 16180                           
 16181                           
 16182                           ;psect for function _ble_receive_stop
 16183  0C04                     _ble_receive_stop:	
 16184                           
 16185                           ;app_ble.c: 163: _delay((unsigned long)((100)*(16000000/4000000.0)));
 16186                           
 16187                           ;incstack = 0
 16188                           ; Regs used in _ble_receive_stop: [wreg]
 16189  0C04  3085               	movlw	133
 16190  0C05                     u6577:	
 16191  0C05  0B89               	decfsz	9,f
 16192  0C06  2C05               	goto	u6577
 16193  0C07  0000               	nop
 16194                           
 16195                           ;app_ble.c: 164: LATCbits.LATC1 = 1;
 16196  0C08  0022               	movlb	2	; select bank2
 16197  0C09  148E               	bsf	14,1	;volatile
 16198  0C0A  0008               	return
 16199  0C0B                     __end_of_ble_receive_stop:	
 16200  0C0B                     PL46:	
 16201  0C0B  082B               	movf	ble_send_data@i,w
 16202  0C0C  00A5               	movwf	??_ble_send_data
 16203  0C0D  01A6               	clrf	??_ble_send_data+1
 16204  0C0E  072C               	addwf	ble_send_data@p,w
 16205  0C0F  00A7               	movwf	??_ble_send_data+2
 16206  0C10  0826               	movf	??_ble_send_data+1,w
 16207  0C11  3D2D               	addwfc	ble_send_data@p+1,w
 16208  0C12  00A8               	movwf	??_ble_send_data+3
 16209  0C13  0827               	movf	??_ble_send_data+2,w
 16210  0C14  0008               	return
 16211  0C15                     __end_ofPL46:	
 16212  0C15                     PL74:	
 16213  0C15  3E2E               	addlw	46
 16214  0C16  00A5               	movwf	??_ble_send_data
 16215  0C17  3000               	movlw	0
 16216  0C18  3D2D               	addwfc	ble_send_data@p+1,w
 16217  0C19  00A6               	movwf	??_ble_send_data+1
 16218  0C1A  0825               	movf	??_ble_send_data,w
 16219  0C1B  0086               	movwf	6
 16220  0C1C  0826               	movf	??_ble_send_data+1,w
 16221  0C1D  0087               	movwf	7
 16222  0C1E  0008               	return
 16223  0C1F                     __end_ofPL74:	
 16224  0C1F                     PL82:	
 16225  0C1F  082C               	movf	ble_send_data@p,w
 16226  0C20  0086               	movwf	6
 16227  0C21  082D               	movf	ble_send_data@p+1,w
 16228  0C22  0087               	movwf	7
 16229  0C23  0801               	movf	1,w
 16230  0C24  3903               	andlw	3
 16231  0C25  0008               	return
 16232  0C26                     __end_ofPL82:	
 16233  0C26                     PL106:	
 16234  0C26  3E2E               	addlw	46
 16235  0C27  0086               	movwf	6
 16236  0C28  3000               	movlw	0
 16237  0C29  3D2D               	addwfc	ble_send_data@p+1,w
 16238  0C2A  0087               	movwf	7
 16239  0C2B  0008               	return
 16240  0C2C                     __end_ofPL106:	
 16241                           
 16242                           	psect	text44
 16243  1006                     __ptext44:	
 16244 ;; *************** function _led_set_preview *****************
 16245 ;; Defined at:
 16246 ;;		line 2186 in file "src/app_led.c"
 16247 ;; Parameters:    Size  Location     Type
 16248 ;;  pbuf            1    wreg     const PTR const unsigned
 16249 ;;		 -> rx_buf(80), 
 16250 ;; Auto vars:     Size  Location     Type
 16251 ;;  pbuf            1    4[BANK0 ] const PTR const unsigned
 16252 ;;		 -> rx_buf(80), 
 16253 ;;  val             2    5[BANK0 ] unsigned int 
 16254 ;;  i               1    7[BANK0 ] unsigned char 
 16255 ;; Return value:  Size  Location     Type
 16256 ;;                  1    wreg      unsigned char 
 16257 ;; Registers used:
 16258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 16259 ;; Tracked objects:
 16260 ;;		On entry : 1F/0
 16261 ;;		On exit  : 1F/0
 16262 ;;		Unchanged: 0/0
 16263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16265 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16266 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16267 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16268 ;;Total ram usage:        6 bytes
 16269 ;; Hardware stack levels used:    1
 16270 ;; Hardware stack levels required when called:    9
 16271 ;; This function calls:
 16272 ;;		Nothing
 16273 ;; This function is called by:
 16274 ;;		_ble_decode
 16275 ;; This function uses a non-reentrant model
 16276 ;;
 16277                           
 16278                           
 16279                           ;psect for function _led_set_preview
 16280  1006                     _led_set_preview:	
 16281                           
 16282                           ;incstack = 0
 16283                           ; Regs used in _led_set_preview: [wreg-fsr1h+status,2+status,0]
 16284                           ;led_set_preview@pbuf stored from wreg
 16285  1006  00A4               	movwf	led_set_preview@pbuf
 16286                           
 16287                           ;app_led.c: 2188: if(led_run_para.mFind || m_led_para.ble_para.mMode == 0)
 16288  1007  185D               	btfsc	_led_run_para,0
 16289  1008  3400               	retlw	0
 16290  1009  3186  26AC  3190   	fcall	PL10	;call to abstracted procedure
 16291  100C  1903               	btfsc	3,2
 16292                           
 16293                           ;app_led.c: 2189: {
 16294                           ;app_led.c: 2190: return 0;
 16295  100D  3400               	retlw	0
 16296                           
 16297                           ;app_led.c: 2191: }
 16298                           ;app_led.c: 2196: for(uint8_t i = 0; i < 4; i++)
 16299  100E  01A7               	clrf	led_set_preview@i
 16300  100F                     l4605:	
 16301                           
 16302                           ;app_led.c: 2197: {
 16303                           ;app_led.c: 2198: uint16_t val = (*(pbuf + 2 * i)) << 8 | (*(pbuf + 2 * i + 1));
 16304  100F  3527               	lslf	led_set_preview@i,w
 16305  1010  0724               	addwf	led_set_preview@pbuf,w
 16306  1011  00A2               	movwf	??_led_set_preview
 16307  1012  0A22               	incf	??_led_set_preview,w
 16308  1013  0086               	movwf	6
 16309  1014  3001               	movlw	1	; select bank2/3
 16310  1015  0087               	movwf	7
 16311  1016  3527               	lslf	led_set_preview@i,w
 16312  1017  0724               	addwf	led_set_preview@pbuf,w
 16313  1018  00A3               	movwf	??_led_set_preview+1
 16314  1019  0084               	movwf	4
 16315  101A  3001               	movlw	1	; select bank2/3
 16316  101B  0085               	movwf	5
 16317  101C  0800               	movf	0,w
 16318  101D  00A6               	movwf	led_set_preview@val+1
 16319  101E  0801               	movf	1,w
 16320  101F  00A5               	movwf	led_set_preview@val
 16321                           
 16322                           ;app_led.c: 2199: if(val <= 1000)
 16323  1020  3003               	movlw	3
 16324  1021  0226               	subwf	led_set_preview@val+1,w
 16325  1022  30E9               	movlw	233
 16326  1023  1903               	skipnz
 16327  1024  0225               	subwf	led_set_preview@val,w
 16328  1025  1803               	skipnc
 16329  1026  2836               	goto	l4611
 16330                           
 16331                           ;app_led.c: 2200: {
 16332                           ;app_led.c: 2201: target_bright[i] = val;
 16333  1027  3527               	lslf	led_set_preview@i,w
 16334  1028  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 16335  1029  0086               	movwf	6
 16336  102A  0187               	clrf	7
 16337  102B  0825               	movf	led_set_preview@val,w
 16338  102C  3FC0               	movwi [0]fsr1
 16339  102D  0826               	movf	led_set_preview@val+1,w
 16340  102E  3FC1               	movwi [1]fsr1
 16341                           
 16342                           ;app_led.c: 2202: current_bright[i] = val;
 16343  102F  3527               	lslf	led_set_preview@i,w
 16344  1030  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 16345  1031  0086               	movwf	6
 16346  1032  0825               	movf	led_set_preview@val,w
 16347  1033  3FC0               	movwi [0]fsr1
 16348  1034  0826               	movf	led_set_preview@val+1,w
 16349  1035  3FC1               	movwi [1]fsr1
 16350  1036                     l4611:	
 16351  1036  3004               	movlw	4
 16352  1037  0AA7               	incf	led_set_preview@i,f
 16353  1038  0227               	subwf	led_set_preview@i,w
 16354  1039  1803               	btfsc	3,0
 16355                           
 16356                           ;app_led.c: 2203: }
 16357                           ;app_led.c: 2204: }
 16358                           ;app_led.c: 2205: return 1;
 16359  103A  3401               	retlw	1
 16360  103B  280F               	goto	l4605
 16361  103C                     __end_of_led_set_preview:	
 16362                           
 16363                           	psect	text52
 16364  1EC2                     __ptext52:	
 16365 ;; *************** function _led_set_bright *****************
 16366 ;; Defined at:
 16367 ;;		line 2072 in file "src/app_led.c"
 16368 ;; Parameters:    Size  Location     Type
 16369 ;;  pbuf            1    wreg     const PTR const unsigned
 16370 ;;		 -> rx_buf(80), 
 16371 ;; Auto vars:     Size  Location     Type
 16372 ;;  pbuf            1    6[BANK0 ] const PTR const unsigned
 16373 ;;		 -> rx_buf(80), 
 16374 ;;  val             2    7[BANK0 ] unsigned int 
 16375 ;;  i               1    9[BANK0 ] unsigned char 
 16376 ;; Return value:  Size  Location     Type
 16377 ;;                  1    wreg      unsigned char 
 16378 ;; Registers used:
 16379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16380 ;; Tracked objects:
 16381 ;;		On entry : 1F/0
 16382 ;;		On exit  : 1F/0
 16383 ;;		Unchanged: 0/0
 16384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16386 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16387 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16388 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16389 ;;Total ram usage:        8 bytes
 16390 ;; Hardware stack levels used:    1
 16391 ;; Hardware stack levels required when called:   10
 16392 ;; This function calls:
 16393 ;;		_led_prepare_to_save
 16394 ;; This function is called by:
 16395 ;;		_ble_decode
 16396 ;; This function uses a non-reentrant model
 16397 ;;
 16398                           
 16399                           
 16400                           ;psect for function _led_set_bright
 16401  1EC2                     _led_set_bright:	
 16402                           
 16403                           ;incstack = 0
 16404                           ; Regs used in _led_set_bright: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16405                           ;led_set_bright@pbuf stored from wreg
 16406  1EC2  00A6               	movwf	led_set_bright@pbuf
 16407                           
 16408                           ;app_led.c: 2074: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0 || m_led_para.ble_para.manual_para.mOn == 0)
 16409  1EC3  1C5D               	btfss	_led_run_para,0
 16410  1EC4  18DD               	btfsc	_led_run_para,1
 16411  1EC5  0008               	return
 16412  1EC6  3186  26AC  319E   	fcall	PL10	;call to abstracted procedure
 16413  1EC9  1D03               	skipz
 16414  1ECA  0008               	return
 16415  1ECB  318E  260C  319E   	fcall	PL54	;call to abstracted procedure
 16416  1ECE  1C01               	btfss	1,0
 16417  1ECF  0008               	return
 16418                           
 16419                           ;app_led.c: 2077: }
 16420                           ;app_led.c: 2083: for(uint8_t i = 0; i < 4; i++)
 16421  1ED0  01A9               	clrf	led_set_bright@i
 16422  1ED1                     l4499:	
 16423                           
 16424                           ;app_led.c: 2084: {
 16425                           ;app_led.c: 2085: uint16_t val = (*(pbuf + 2 * i)) << 8 | (*(pbuf + 2 * i + 1));
 16426  1ED1  3529               	lslf	led_set_bright@i,w
 16427  1ED2  0726               	addwf	led_set_bright@pbuf,w
 16428  1ED3  00A2               	movwf	??_led_set_bright
 16429  1ED4  0A22               	incf	??_led_set_bright,w
 16430  1ED5  0086               	movwf	6
 16431  1ED6  3001               	movlw	1	; select bank2/3
 16432  1ED7  0087               	movwf	7
 16433  1ED8  3529               	lslf	led_set_bright@i,w
 16434  1ED9  0726               	addwf	led_set_bright@pbuf,w
 16435  1EDA  00A3               	movwf	??_led_set_bright+1
 16436  1EDB  0084               	movwf	4
 16437  1EDC  3001               	movlw	1	; select bank2/3
 16438  1EDD  0085               	movwf	5
 16439  1EDE  0800               	movf	0,w
 16440  1EDF  00A8               	movwf	led_set_bright@val+1
 16441  1EE0  0801               	movf	1,w
 16442  1EE1  00A7               	movwf	led_set_bright@val
 16443                           
 16444                           ;app_led.c: 2086: if(val <= 1000)
 16445  1EE2  3003               	movlw	3
 16446  1EE3  0228               	subwf	led_set_bright@val+1,w
 16447  1EE4  30E9               	movlw	233
 16448  1EE5  1903               	skipnz
 16449  1EE6  0227               	subwf	led_set_bright@val,w
 16450  1EE7  1803               	skipnc
 16451  1EE8  2F04               	goto	l4505
 16452                           
 16453                           ;app_led.c: 2087: {
 16454                           ;app_led.c: 2088: m_led_para.ble_para.manual_para.mBright[i] = val;
 16455  1EE9  0829               	movf	led_set_bright@i,w
 16456  1EEA  00A2               	movwf	??_led_set_bright
 16457  1EEB  3088               	movlw	136
 16458  1EEC  01A3               	clrf	??_led_set_bright+1
 16459  1EED  35A2               	lslf	??_led_set_bright,f
 16460  1EEE  0DA3               	rlf	??_led_set_bright+1,f
 16461  1EEF  00A4               	movwf	??_led_set_bright+2
 16462  1EF0  3023               	movlw	35
 16463  1EF1  00A5               	movwf	??_led_set_bright+3
 16464  1EF2  0822               	movf	??_led_set_bright,w
 16465  1EF3  0724               	addwf	??_led_set_bright+2,w
 16466  1EF4  0086               	movwf	6
 16467  1EF5  0823               	movf	??_led_set_bright+1,w
 16468  1EF6  3D25               	addwfc	??_led_set_bright+3,w
 16469  1EF7  0087               	movwf	7
 16470  1EF8  0827               	movf	led_set_bright@val,w
 16471  1EF9  3FC0               	movwi [0]fsr1
 16472  1EFA  0828               	movf	led_set_bright@val+1,w
 16473  1EFB  3FC1               	movwi [1]fsr1
 16474                           
 16475                           ;app_led.c: 2089: target_bright[i] = val;
 16476  1EFC  3529               	lslf	led_set_bright@i,w
 16477  1EFD  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 16478  1EFE  0086               	movwf	6
 16479  1EFF  0187               	clrf	7
 16480  1F00  0827               	movf	led_set_bright@val,w
 16481  1F01  3FC0               	movwi [0]fsr1
 16482  1F02  0828               	movf	led_set_bright@val+1,w
 16483  1F03  3FC1               	movwi [1]fsr1
 16484  1F04                     l4505:	
 16485  1F04  3004               	movlw	4
 16486  1F05  0AA9               	incf	led_set_bright@i,f
 16487  1F06  0229               	subwf	led_set_bright@i,w
 16488  1F07  1C03               	skipc
 16489  1F08  2ED1               	goto	l4499
 16490                           
 16491                           ;app_led.c: 2090: }
 16492                           ;app_led.c: 2091: }
 16493                           ;app_led.c: 2092: led_prepare_to_save();
 16494  1F09  318F  2FD9         	ljmp	PL138
 16495  1F0B                     __end_of_led_set_bright:	
 16496                           
 16497                           	psect	text55
 16498  0812                     __ptext55:	
 16499 ;; *************** function _led_decrease *****************
 16500 ;; Defined at:
 16501 ;;		line 2168 in file "src/app_led.c"
 16502 ;; Parameters:    Size  Location     Type
 16503 ;;  chn             1    wreg     unsigned char 
 16504 ;;  delt            1   11[BANK0 ] unsigned char 
 16505 ;; Auto vars:     Size  Location     Type
 16506 ;;  chn             1   16[BANK0 ] unsigned char 
 16507 ;; Return value:  Size  Location     Type
 16508 ;;                  1    wreg      unsigned char 
 16509 ;; Registers used:
 16510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16511 ;; Tracked objects:
 16512 ;;		On entry : 1F/3
 16513 ;;		On exit  : 1F/0
 16514 ;;		Unchanged: 0/0
 16515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16516 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16517 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16518 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16519 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16520 ;;Total ram usage:        6 bytes
 16521 ;; Hardware stack levels used:    1
 16522 ;; Hardware stack levels required when called:   10
 16523 ;; This function calls:
 16524 ;;		_decrease
 16525 ;;		_led_prepare_to_save
 16526 ;; This function is called by:
 16527 ;;		_ble_decode
 16528 ;; This function uses a non-reentrant model
 16529 ;;
 16530                           
 16531                           
 16532                           ;psect for function _led_decrease
 16533  0812                     _led_decrease:	
 16534                           
 16535                           ;incstack = 0
 16536                           ; Regs used in _led_decrease: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16537                           ;led_decrease@chn stored from wreg
 16538  0812  0020               	movlb	0	; select bank0
 16539  0813  00B0               	movwf	led_decrease@chn
 16540                           
 16541                           ;app_led.c: 2170: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0 || m_led_para.ble_para.manual_para.mOn == 0 || chn >= 4)
 16542  0814  1C5D               	btfss	_led_run_para,0
 16543  0815  18DD               	btfsc	_led_run_para,1
 16544  0816  0008               	return
 16545  0817  3186  26AC  3188   	fcall	PL10	;call to abstracted procedure
 16546  081A  1D03               	skipz
 16547  081B  0008               	return
 16548  081C  318E  260C  3188   	fcall	PL54	;call to abstracted procedure
 16549  081F  1C01               	btfss	1,0
 16550  0820  0008               	return
 16551  0821  3004               	movlw	4
 16552  0822  0230               	subwf	led_decrease@chn,w
 16553  0823  1803               	btfsc	3,0
 16554  0824  0008               	return
 16555                           
 16556                           ;app_led.c: 2173: }
 16557                           ;app_led.c: 2180: decrease(&m_led_para.ble_para.manual_para.mBright[chn], delt, 0);
 16558  0825  3088               	movlw	136
 16559  0826  00A2               	movwf	decrease@psrc
 16560  0827  3023               	movlw	35
 16561  0828  00A3               	movwf	decrease@psrc+1
 16562  0829  0830               	movf	led_decrease@chn,w
 16563  082A  00AC               	movwf	??_led_decrease
 16564  082B  01AD               	clrf	??_led_decrease+1
 16565  082C  35AC               	lslf	??_led_decrease,f
 16566  082D  0DAD               	rlf	??_led_decrease+1,f
 16567  082E  082C               	movf	??_led_decrease,w
 16568  082F  07A2               	addwf	decrease@psrc,f
 16569  0830  082D               	movf	??_led_decrease+1,w
 16570  0831  3DA3               	addwfc	decrease@psrc+1,f
 16571  0832  082B               	movf	led_decrease@delt,w
 16572  0833  00A4               	movwf	decrease@delt
 16573  0834  01A5               	clrf	decrease@min
 16574  0835  01A6               	clrf	decrease@min+1
 16575  0836  204D               	fcall	_decrease
 16576                           
 16577                           ;app_led.c: 2181: target_bright[chn] = m_led_para.ble_para.manual_para.mBright[chn];
 16578  0837  0830               	movf	led_decrease@chn,w
 16579  0838  00AC               	movwf	??_led_decrease
 16580  0839  3088               	movlw	136
 16581  083A  01AD               	clrf	??_led_decrease+1
 16582  083B  35AC               	lslf	??_led_decrease,f
 16583  083C  0DAD               	rlf	??_led_decrease+1,f
 16584  083D  00AE               	movwf	??_led_decrease+2
 16585  083E  3023               	movlw	35
 16586  083F  00AF               	movwf	??_led_decrease+3
 16587  0840  082C               	movf	??_led_decrease,w
 16588  0841  072E               	addwf	??_led_decrease+2,w
 16589  0842  0086               	movwf	6
 16590  0843  082D               	movf	??_led_decrease+1,w
 16591  0844  3D2F               	addwfc	??_led_decrease+3,w
 16592  0845  0087               	movwf	7
 16593  0846  3530               	lslf	led_decrease@chn,w
 16594  0847  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 16595  0848  0084               	movwf	4
 16596  0849  3187  27F6         	fcall	PL6	;call to abstracted procedure
 16597                           
 16598                           ;app_led.c: 2182: led_prepare_to_save();
 16599  084B  318F  2FD9         	ljmp	PL138
 16600  084D                     __end_of_led_decrease:	
 16601  084D                     __ptext57:	
 16602 ;; *************** function _decrease *****************
 16603 ;; Defined at:
 16604 ;;		line 15 in file "src/app_util.c"
 16605 ;; Parameters:    Size  Location     Type
 16606 ;;  psrc            2    2[BANK0 ] const PTR unsigned int 
 16607 ;;		 -> m_led_para.ble_para.manual_para.mBright(8), m_led_para.ble_para.manual_para(26), m_led_para(113), 
 16608 ;;  delt            1    4[BANK0 ] const unsigned char 
 16609 ;;  min             2    5[BANK0 ] const unsigned int 
 16610 ;; Auto vars:     Size  Location     Type
 16611 ;;		None
 16612 ;; Return value:  Size  Location     Type
 16613 ;;                  1    wreg      void 
 16614 ;; Registers used:
 16615 ;;		wreg, fsr1l, fsr1h
 16616 ;; Tracked objects:
 16617 ;;		On entry : 1F/0
 16618 ;;		On exit  : 1F/0
 16619 ;;		Unchanged: 0/0
 16620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16621 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16623 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16624 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16625 ;;Total ram usage:        9 bytes
 16626 ;; Hardware stack levels used:    1
 16627 ;; Hardware stack levels required when called:    9
 16628 ;; This function calls:
 16629 ;;		Nothing
 16630 ;; This function is called by:
 16631 ;;		_led_decrease
 16632 ;; This function uses a non-reentrant model
 16633 ;;
 16634                           
 16635                           
 16636                           ;psect for function _decrease
 16637  084D                     _decrease:	
 16638                           
 16639                           ;app_util.c: 17: if((*psrc) > min + delt)
 16640                           
 16641                           ;incstack = 0
 16642                           ; Regs used in _decrease: [wregfsr1]
 16643  084D  0822               	movf	decrease@psrc,w
 16644  084E  0086               	movwf	6
 16645  084F  0823               	movf	decrease@psrc+1,w
 16646  0850  0087               	movwf	7
 16647  0851  3F40               	moviw [0]fsr1
 16648  0852  00A7               	movwf	??_decrease
 16649  0853  3F41               	moviw [1]fsr1
 16650  0854  00A8               	movwf	??_decrease+1
 16651  0855  0824               	movf	decrease@delt,w
 16652  0856  0725               	addwf	decrease@min,w
 16653  0857  00A9               	movwf	??_decrease+2
 16654  0858  0826               	movf	decrease@min+1,w
 16655  0859  1803               	skipnc
 16656  085A  0A26               	incf	decrease@min+1,w
 16657  085B  00AA               	movwf	??_decrease+3
 16658  085C  0828               	movf	??_decrease+1,w
 16659  085D  022A               	subwf	??_decrease+3,w
 16660  085E  1D03               	skipz
 16661  085F  2862               	goto	u2935
 16662  0860  0827               	movf	??_decrease,w
 16663  0861  0229               	subwf	??_decrease+2,w
 16664  0862                     u2935:	
 16665                           
 16666                           ;app_util.c: 18: {
 16667                           ;app_util.c: 19: (*psrc) -= delt;
 16668  0862  0822               	movf	decrease@psrc,w
 16669  0863  0086               	movwf	6
 16670  0864  0823               	movf	decrease@psrc+1,w
 16671  0865  0087               	movwf	7
 16672  0866  1803               	skipnc
 16673  0867  286B               	goto	L20
 16674  0868  0824               	movf	decrease@delt,w
 16675                           
 16676                           ;app_util.c: 20: }
 16677  0869  318F  2FB9         	ljmp	PL112	;call to abstracted procedure
 16678  086B                     L20:	
 16679                           ;app_util.c: 21: else
 16680                           ;app_util.c: 22: {
 16681                           ;app_util.c: 23: (*psrc) = min;
 16682                           
 16683  086B  0825               	movf	decrease@min,w
 16684  086C  3FC0               	movwi [0]fsr1
 16685  086D  0826               	movf	decrease@min+1,w
 16686  086E  3FC1               	movwi [1]fsr1
 16687  086F  0008               	return
 16688  0870                     __end_of_decrease:	
 16689                           
 16690                           	psect	intentry
 16691  0404                     __pintentry:	
 16692 ;; *************** function _app_isr *****************
 16693 ;; Defined at:
 16694 ;;		line 129 in file "src/app_main.c"
 16695 ;; Parameters:    Size  Location     Type
 16696 ;;		None
 16697 ;; Auto vars:     Size  Location     Type
 16698 ;;		None
 16699 ;; Return value:  Size  Location     Type
 16700 ;;                  1    wreg      void 
 16701 ;; Registers used:
 16702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16703 ;; Tracked objects:
 16704 ;;		On entry : 0/0
 16705 ;;		On exit  : 0/0
 16706 ;;		Unchanged: 0/0
 16707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16712 ;;Total ram usage:        0 bytes
 16713 ;; Hardware stack levels used:    1
 16714 ;; Hardware stack levels required when called:    8
 16715 ;; This function calls:
 16716 ;;		_eusart_receive_isr
 16717 ;;		_eusart_transmit_isr
 16718 ;;		_tmr0_isr
 16719 ;;		_tmr2_isr
 16720 ;; This function is called by:
 16721 ;;		Interrupt level 1
 16722 ;; This function uses a non-reentrant model
 16723 ;;
 16724                           
 16725  0404                     _app_isr:	
 16726                           
 16727                           ;incstack = 0
 16728  0404  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 16729                           
 16730                           ; Regs used in _app_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16731  0405  3184               	pagesel	$
 16732                           
 16733                           ;app_main.c: 131: if(PIE1bits.RCIE && PIR1bits.RCIF)
 16734  0406  0021               	movlb	1	; select bank1
 16735  0407  1E91               	btfss	17,5	;volatile
 16736  0408  2C10               	goto	i1l1125
 16737  0409  0020               	movlb	0	; select bank0
 16738  040A  1E91               	btfss	17,5	;volatile
 16739  040B  2C10               	goto	i1l1125
 16740                           
 16741                           ;app_main.c: 132: {
 16742                           ;app_main.c: 133: eusart_receive_isr();
 16743  040C  319E  2623  3184   	fcall	_eusart_receive_isr
 16744                           
 16745                           ;app_main.c: 134: }
 16746  040F  2C2C               	goto	i1l1132
 16747  0410                     i1l1125:	
 16748                           
 16749                           ;app_main.c: 135: else if(PIE0bits.TMR0IE && PIR0bits.TMR0IF)
 16750  0410  0021               	movlb	1	; select bank1
 16751  0411  1E90               	btfss	16,5	;volatile
 16752  0412  2C1A               	goto	i1l1127
 16753  0413  0020               	movlb	0	; select bank0
 16754  0414  1E90               	btfss	16,5	;volatile
 16755  0415  2C1A               	goto	i1l1127
 16756                           
 16757                           ;app_main.c: 136: {
 16758                           ;app_main.c: 137: tmr0_isr();
 16759  0416  319D  25E0  3184   	fcall	_tmr0_isr
 16760                           
 16761                           ;app_main.c: 138: }
 16762  0419  2C2C               	goto	i1l1132
 16763  041A                     i1l1127:	
 16764                           
 16765                           ;app_main.c: 139: else if(PIE1bits.TMR2IE && PIR1bits.TMR2IF)
 16766  041A  0021               	movlb	1	; select bank1
 16767  041B  1C91               	btfss	17,1	;volatile
 16768  041C  2C24               	goto	i1l1129
 16769  041D  0020               	movlb	0	; select bank0
 16770  041E  1C91               	btfss	17,1	;volatile
 16771  041F  2C24               	goto	i1l1129
 16772                           
 16773                           ;app_main.c: 140: {
 16774                           ;app_main.c: 141: tmr2_isr();
 16775  0420  319D  25EC  3184   	fcall	_tmr2_isr
 16776                           
 16777                           ;app_main.c: 142: }
 16778  0423  2C2C               	goto	i1l1132
 16779  0424                     i1l1129:	
 16780                           
 16781                           ;app_main.c: 143: else if(PIE1bits.TXIE && PIR1bits.TXIF)
 16782  0424  0021               	movlb	1	; select bank1
 16783  0425  1E11               	btfss	17,4	;volatile
 16784  0426  2C2C               	goto	i1l1132
 16785  0427  0020               	movlb	0	; select bank0
 16786  0428  1E11               	btfss	17,4	;volatile
 16787  0429  2C2C               	goto	i1l1132
 16788                           
 16789                           ;app_main.c: 144: {
 16790                           ;app_main.c: 145: eusart_transmit_isr();
 16791  042A  319E  2639         	fcall	_eusart_transmit_isr
 16792  042C                     i1l1132:	
 16793  042C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 16794  042D  0009               	retfie
 16795  042E                     __end_of_app_isr:	
 16796                           
 16797                           	psect	text82
 16798  1DEC                     __ptext82:	
 16799 ;; *************** function _tmr2_isr *****************
 16800 ;; Defined at:
 16801 ;;		line 58 in file "src/drv_tmr.c"
 16802 ;; Parameters:    Size  Location     Type
 16803 ;;		None
 16804 ;; Auto vars:     Size  Location     Type
 16805 ;;		None
 16806 ;; Return value:  Size  Location     Type
 16807 ;;                  1    wreg      void 
 16808 ;; Registers used:
 16809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16810 ;; Tracked objects:
 16811 ;;		On entry : 1F/0
 16812 ;;		On exit  : 0/0
 16813 ;;		Unchanged: 0/0
 16814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16819 ;;Total ram usage:        0 bytes
 16820 ;; Hardware stack levels used:    1
 16821 ;; Hardware stack levels required when called:    7
 16822 ;; This function calls:
 16823 ;;		Absolute function
 16824 ;;		_tmr2_isr_callback
 16825 ;; This function is called by:
 16826 ;;		_app_isr
 16827 ;; This function uses a non-reentrant model
 16828 ;;
 16829                           
 16830                           
 16831                           ;psect for function _tmr2_isr
 16832  1DEC                     _tmr2_isr:	
 16833                           
 16834                           ;drv_tmr.c: 60: PIR1bits.TMR2IF = 0;
 16835                           
 16836                           ;incstack = 0
 16837                           ; Regs used in _tmr2_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16838  1DEC  1091               	bcf	17,1	;volatile
 16839                           
 16840                           ;drv_tmr.c: 61: if(tmr2_isr_cb != (0))
 16841  1DED  0021               	movlb	1	; select bank1
 16842  1DEE  086A               	movf	_tmr2_isr_cb^(0+128),w
 16843  1DEF  046B               	iorwf	(_tmr2_isr_cb+1)^(0+128),w
 16844  1DF0  1903               	btfsc	3,2
 16845  1DF1  0008               	return
 16846                           
 16847                           ;drv_tmr.c: 62: {
 16848                           ;drv_tmr.c: 63: tmr2_isr_cb();
 16849  1DF2  086B               	movf	(_tmr2_isr_cb+1)^(0+128),w
 16850  1DF3  008A               	movwf	10
 16851  1DF4  086A               	movf	_tmr2_isr_cb^(0+128),w
 16852  1DF5  000A               	callw
 16853  1DF6  319D               	pagesel	$
 16854  1DF7  0008               	return
 16855  1DF8                     __end_of_tmr2_isr:	
 16856                           
 16857                           	psect	text83
 16858  1F0B                     __ptext83:	
 16859 ;; *************** function _tmr2_isr_callback *****************
 16860 ;; Defined at:
 16861 ;;		line 92 in file "src/app_main.c"
 16862 ;; Parameters:    Size  Location     Type
 16863 ;;		None
 16864 ;; Auto vars:     Size  Location     Type
 16865 ;;		None
 16866 ;; Return value:  Size  Location     Type
 16867 ;;                  1    wreg      void 
 16868 ;; Registers used:
 16869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16870 ;; Tracked objects:
 16871 ;;		On entry : 1F/1
 16872 ;;		On exit  : 10/0
 16873 ;;		Unchanged: 0/0
 16874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16879 ;;Total ram usage:        0 bytes
 16880 ;; Hardware stack levels used:    1
 16881 ;; Hardware stack levels required when called:    6
 16882 ;; This function calls:
 16883 ;;		_key_scan
 16884 ;;		_led_process
 16885 ;; This function is called by:
 16886 ;;		_app_init
 16887 ;;		_tmr2_isr
 16888 ;; This function uses a non-reentrant model
 16889 ;;
 16890                           
 16891                           
 16892                           ;psect for function _tmr2_isr_callback
 16893  1F0B                     _tmr2_isr_callback:	
 16894                           
 16895                           ;app_main.c: 94: static uint8_t cnt = 0;
 16896                           ;app_main.c: 96: cnt++;
 16897                           
 16898                           ;incstack = 0
 16899                           ; Regs used in _tmr2_isr_callback: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16900  1F0B  0020               	movlb	0	; select bank0
 16901  1F0C  0AE1               	incf	tmr2_isr_callback@cnt,f
 16902                           
 16903                           ;app_main.c: 97: if((cnt&0x03) == 0)
 16904  1F0D  0861               	movf	tmr2_isr_callback@cnt,w
 16905  1F0E  3903               	andlw	3
 16906  1F0F  1D03               	btfss	3,2
 16907  1F10  0008               	return
 16908                           
 16909                           ;app_main.c: 98: {
 16910                           ;app_main.c: 100: if((cnt&0x0F) == 0)
 16911  1F11  0861               	movf	tmr2_isr_callback@cnt,w
 16912  1F12  390F               	andlw	15
 16913  1F13  1D03               	btfss	3,2
 16914  1F14  2F17               	goto	i1l1116
 16915                           
 16916                           ;app_main.c: 101: {
 16917                           ;app_main.c: 102: key_scan();
 16918  1F15  2718  319F         	fcall	_key_scan
 16919  1F17                     i1l1116:	
 16920                           
 16921                           ;app_main.c: 103: }
 16922                           ;app_main.c: 105: led_process();
 16923  1F17  2F6B               	ljmp	i1l4101
 16924  1F18                     __end_of_tmr2_isr_callback:	
 16925  1F18                     __ptext90:	
 16926 ;; *************** function _key_scan *****************
 16927 ;; Defined at:
 16928 ;;		line 28 in file "src/app_key.c"
 16929 ;; Parameters:    Size  Location     Type
 16930 ;;		None
 16931 ;; Auto vars:     Size  Location     Type
 16932 ;;  key_value       1    1[BANK0 ] unsigned char 
 16933 ;; Return value:  Size  Location     Type
 16934 ;;                  1    wreg      void 
 16935 ;; Registers used:
 16936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16937 ;; Tracked objects:
 16938 ;;		On entry : 1F/0
 16939 ;;		On exit  : 1F/0
 16940 ;;		Unchanged: 0/0
 16941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16943 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16945 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16946 ;;Total ram usage:        1 bytes
 16947 ;; Hardware stack levels used:    1
 16948 ;; Hardware stack levels required when called:    5
 16949 ;; This function calls:
 16950 ;;		_key_action
 16951 ;;		_key_read
 16952 ;; This function is called by:
 16953 ;;		_tmr2_isr_callback
 16954 ;; This function uses a non-reentrant model
 16955 ;;
 16956                           
 16957                           
 16958                           ;psect for function _key_scan
 16959  1F18                     _key_scan:	
 16960                           
 16961                           ;app_key.c: 30: static key_value_t last_key = 0x00;
 16962                           ;app_key.c: 31: static uint8_t repeat = 0;
 16963                           ;app_key.c: 32: key_value_t key_value = key_read();
 16964                           
 16965                           ;incstack = 0
 16966                           ; Regs used in _key_scan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16967  1F18  275E  319F         	fcall	_key_read
 16968  1F1A  00A1               	movwf	key_scan@key_value
 16969                           
 16970                           ;app_key.c: 33: if(key_value != 0x00)
 16971  1F1B  0821               	movf	key_scan@key_value,w
 16972  1F1C  1903               	btfsc	3,2
 16973  1F1D  2F39               	goto	i1l4293
 16974                           
 16975                           ;app_key.c: 34: {
 16976                           ;app_key.c: 35: if(key_value == last_key)
 16977  1F1E  0821               	movf	key_scan@key_value,w
 16978  1F1F  0667               	xorwf	key_scan@last_key,w
 16979  1F20  1D03               	skipz
 16980  1F21  2F46               	goto	i1l4291
 16981  1F22  3020               	movlw	32
 16982                           
 16983                           ;app_key.c: 36: {
 16984                           ;app_key.c: 37: repeat++;
 16985  1F23  0AE6               	incf	key_scan@repeat,f
 16986                           
 16987                           ;app_key.c: 38: if(repeat == 32)
 16988  1F24  0666               	xorwf	key_scan@repeat,w
 16989  1F25  1D03               	btfss	3,2
 16990  1F26  2F2D               	goto	i1l4285
 16991                           
 16992                           ;app_key.c: 39: {
 16993                           ;app_key.c: 40: key_action(key_value, KEY_STATE_LONG_PRESS);
 16994  1F27  01FD               	clrf	key_action@state
 16995  1F28  0AFD               	incf	key_action@state,f
 16996  1F29  0821               	movf	key_scan@key_value,w
 16997  1F2A  274C  319F         	fcall	_key_action
 16998                           
 16999                           ;app_key.c: 41: }
 17000  1F2C  2F48               	goto	i1l4303
 17001  1F2D                     i1l4285:	
 17002                           
 17003                           ;app_key.c: 42: else if(repeat >= 32 + 1)
 17004  1F2D  3021               	movlw	33
 17005  1F2E  0266               	subwf	key_scan@repeat,w
 17006  1F2F  1C03               	skipc
 17007  1F30  2F48               	goto	i1l4303
 17008                           
 17009                           ;app_key.c: 43: {
 17010                           ;app_key.c: 44: repeat = 32;
 17011  1F31  3020               	movlw	32
 17012  1F32  00E6               	movwf	key_scan@repeat
 17013                           
 17014                           ;app_key.c: 45: key_action(key_value, KEY_STATE_CONT_PRESS);
 17015  1F33  3002               	movlw	2
 17016  1F34  00FD               	movwf	key_action@state
 17017  1F35  0821               	movf	key_scan@key_value,w
 17018  1F36  274C  319F         	fcall	_key_action
 17019  1F38  2F48               	goto	i1l4303
 17020  1F39                     i1l4293:	
 17021                           ;app_key.c: 51: }
 17022                           ;app_key.c: 52: }
 17023                           
 17024                           
 17025                           ;app_key.c: 53: else
 17026                           ;app_key.c: 54: {
 17027                           ;app_key.c: 55: if(last_key != 0x00)
 17028  1F39  0867               	movf	key_scan@last_key,w
 17029  1F3A  1903               	btfsc	3,2
 17030  1F3B  2F46               	goto	i1l4291
 17031                           
 17032                           ;app_key.c: 56: {
 17033                           ;app_key.c: 57: if(repeat >= 32)
 17034  1F3C  3020               	movlw	32
 17035  1F3D  0266               	subwf	key_scan@repeat,w
 17036  1F3E  1C03               	skipc
 17037  1F3F  2F43               	goto	i1l4299
 17038                           
 17039                           ;app_key.c: 58: {
 17040                           ;app_key.c: 59: key_action(last_key, KEY_STATE_RELEASE);
 17041  1F40  3003               	movlw	3
 17042  1F41  00FD               	movwf	key_action@state
 17043  1F42  2F44               	goto	L23
 17044  1F43                     i1l4299:	
 17045                           ;app_key.c: 60: }
 17046                           
 17047                           
 17048                           ;app_key.c: 61: else
 17049                           ;app_key.c: 62: {
 17050                           ;app_key.c: 63: key_action(last_key, KEY_STATE_SHORT_PRESS);
 17051  1F43  01FD               	clrf	key_action@state
 17052  1F44                     L23:	
 17053  1F44  0867               	movf	key_scan@last_key,w
 17054  1F45  274C               	fcall	_key_action
 17055  1F46                     i1l4291:	
 17056                           
 17057                           ;app_key.c: 48: else
 17058                           ;app_key.c: 49: {
 17059                           ;app_key.c: 50: repeat = 0;
 17060  1F46  0020               	movlb	0	; select bank0
 17061  1F47  01E6               	clrf	key_scan@repeat
 17062  1F48                     i1l4303:	
 17063                           
 17064                           ;app_key.c: 67: }
 17065                           ;app_key.c: 68: last_key = key_value;
 17066  1F48  0020               	movlb	0	; select bank0
 17067  1F49  0821               	movf	key_scan@key_value,w
 17068  1F4A  00E7               	movwf	key_scan@last_key
 17069  1F4B  0008               	return
 17070  1F4C                     __end_of_key_scan:	
 17071  1F4C                     __ptext92:	
 17072 ;; *************** function _key_action *****************
 17073 ;; Defined at:
 17074 ;;		line 20 in file "src/app_key.c"
 17075 ;; Parameters:    Size  Location     Type
 17076 ;;  key             1    wreg     unsigned char 
 17077 ;;  state           1   13[COMMON] enum E8166
 17078 ;; Auto vars:     Size  Location     Type
 17079 ;;  key             1    0[BANK0 ] unsigned char 
 17080 ;; Return value:  Size  Location     Type
 17081 ;;                  1    wreg      void 
 17082 ;; Registers used:
 17083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17084 ;; Tracked objects:
 17085 ;;		On entry : 1F/0
 17086 ;;		On exit  : 0/0
 17087 ;;		Unchanged: 0/0
 17088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17089 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17092 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17093 ;;Total ram usage:        2 bytes
 17094 ;; Hardware stack levels used:    1
 17095 ;; Hardware stack levels required when called:    4
 17096 ;; This function calls:
 17097 ;;		Absolute function
 17098 ;;		_led_touch_cb
 17099 ;; This function is called by:
 17100 ;;		_key_scan
 17101 ;; This function uses a non-reentrant model
 17102 ;;
 17103                           
 17104                           
 17105                           ;psect for function _key_action
 17106  1F4C                     _key_action:	
 17107                           
 17108                           ;incstack = 0
 17109                           ; Regs used in _key_action: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17110                           ;key_action@key stored from wreg
 17111  1F4C  00A0               	movwf	key_action@key
 17112                           
 17113                           ;app_key.c: 22: if(key_func != (0))
 17114  1F4D  0021               	movlb	1	; select bank1
 17115  1F4E  0866               	movf	_key_func^(0+128),w
 17116  1F4F  0467               	iorwf	(_key_func+1)^(0+128),w
 17117  1F50  1903               	btfsc	3,2
 17118  1F51  0008               	return
 17119                           
 17120                           ;app_key.c: 23: {
 17121                           ;app_key.c: 24: key_func(key, state);
 17122  1F52  0020               	movlb	0	; select bank0
 17123  1F53  0820               	movf	key_action@key,w
 17124  1F54  00FB               	movwf	led_touch_cb@key
 17125  1F55  087D               	movf	key_action@state,w
 17126  1F56  00FC               	movwf	led_touch_cb@state
 17127  1F57  0021               	movlb	1	; select bank1
 17128  1F58  0867               	movf	(_key_func+1)^(0+128),w
 17129  1F59  008A               	movwf	10
 17130  1F5A  0866               	movf	_key_func^(0+128),w
 17131  1F5B  000A               	callw
 17132  1F5C  319F               	pagesel	$
 17133  1F5D  0008               	return
 17134  1F5E                     __end_of_key_action:	
 17135  1F5E                     __ptext91:	
 17136 ;; *************** function _key_read *****************
 17137 ;; Defined at:
 17138 ;;		line 10 in file "src/app_key.c"
 17139 ;; Parameters:    Size  Location     Type
 17140 ;;		None
 17141 ;; Auto vars:     Size  Location     Type
 17142 ;;  dat             1    0[COMMON] unsigned char 
 17143 ;; Return value:  Size  Location     Type
 17144 ;;                  1    wreg      unsigned char 
 17145 ;; Registers used:
 17146 ;;		wreg, status,2, status,0
 17147 ;; Tracked objects:
 17148 ;;		On entry : 1F/0
 17149 ;;		On exit  : 1F/0
 17150 ;;		Unchanged: 0/0
 17151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17156 ;;Total ram usage:        1 bytes
 17157 ;; Hardware stack levels used:    1
 17158 ;; This function calls:
 17159 ;;		Nothing
 17160 ;; This function is called by:
 17161 ;;		_key_scan
 17162 ;; This function uses a non-reentrant model
 17163 ;;
 17164                           
 17165                           
 17166                           ;psect for function _key_read
 17167  1F5E                     _key_read:	
 17168                           
 17169                           ;app_key.c: 12: static uint8_t trg;
 17170                           ;app_key.c: 13: static uint8_t cont;
 17171                           ;app_key.c: 14: uint8_t dat = (PORTC^0xFF) & 0x01;
 17172                           
 17173                           ;incstack = 0
 17174                           ; Regs used in _key_read: [wreg+status,2+status,0]
 17175  1F5E  090E               	comf	14,w	;volatile
 17176  1F5F  00F0               	movwf	key_read@dat
 17177  1F60  3001               	movlw	1
 17178  1F61  05F0               	andwf	key_read@dat,f
 17179                           
 17180                           ;app_key.c: 15: trg = dat & (dat ^ cont);
 17181  1F62  0870               	movf	key_read@dat,w
 17182  1F63  0668               	xorwf	key_read@cont,w
 17183  1F64  00E9               	movwf	key_read@trg
 17184  1F65  0870               	movf	key_read@dat,w
 17185  1F66  05E9               	andwf	key_read@trg,f
 17186                           
 17187                           ;app_key.c: 16: cont = dat;
 17188  1F67  00E8               	movwf	key_read@cont
 17189                           
 17190                           ;app_key.c: 17: return( trg ^ cont);
 17191  1F68  0669               	xorwf	key_read@trg,w
 17192  1F69  0008               	return
 17193  1F6A                     __end_of_key_read:	
 17194  1F6A                     __ptext84:	
 17195 ;; *************** function _led_process *****************
 17196 ;; Defined at:
 17197 ;;		line 499 in file "src/app_led.c"
 17198 ;; Parameters:    Size  Location     Type
 17199 ;;		None
 17200 ;; Auto vars:     Size  Location     Type
 17201 ;;		None
 17202 ;; Return value:  Size  Location     Type
 17203 ;;                  1    wreg      void 
 17204 ;; Registers used:
 17205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17206 ;; Tracked objects:
 17207 ;;		On entry : 1F/0
 17208 ;;		On exit  : 14/4
 17209 ;;		Unchanged: 0/0
 17210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17215 ;;Total ram usage:        0 bytes
 17216 ;; Hardware stack levels used:    1
 17217 ;; Hardware stack levels required when called:    2
 17218 ;; This function calls:
 17219 ;;		_led_ramp
 17220 ;; This function is called by:
 17221 ;;		_tmr2_isr_callback
 17222 ;; This function uses a non-reentrant model
 17223 ;;
 17224                           
 17225                           
 17226                           ;psect for function _led_process
 17227  1F6A                     _led_process:	
 17228                           
 17229                           ;app_led.c: 509: led_ramp();
 17230                           
 17231                           ;incstack = 0
 17232                           ; Regs used in _led_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17233  1F6A  2F6B               	ljmp	i1l4101
 17234  1F6B                     __end_of_led_process:	
 17235  1F6B                     __ptext85:	
 17236 ;; *************** function _led_ramp *****************
 17237 ;; Defined at:
 17238 ;;		line 479 in file "src/app_led.c"
 17239 ;; Parameters:    Size  Location     Type
 17240 ;;		None
 17241 ;; Auto vars:     Size  Location     Type
 17242 ;;  i               1   10[COMMON] unsigned char 
 17243 ;; Return value:  Size  Location     Type
 17244 ;;                  1    wreg      void 
 17245 ;; Registers used:
 17246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17247 ;; Tracked objects:
 17248 ;;		On entry : 1F/0
 17249 ;;		On exit  : 14/4
 17250 ;;		Unchanged: 0/0
 17251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17254 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17255 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17256 ;;Total ram usage:        7 bytes
 17257 ;; Hardware stack levels used:    1
 17258 ;; Hardware stack levels required when called:    1
 17259 ;; This function calls:
 17260 ;;		_pwm1_load_duty
 17261 ;;		_pwm3_load_duty
 17262 ;;		_pwm4_load_duty
 17263 ;;		_pwm5_load_duty
 17264 ;; This function is called by:
 17265 ;;		_led_process
 17266 ;; This function uses a non-reentrant model
 17267 ;;
 17268                           
 17269                           
 17270                           ;psect for function _led_ramp
 17271  1F6B                     _led_ramp:	
 17272  1F6B                     i1l4101:	
 17273                           ;incstack = 0
 17274                           ; Regs used in _led_ramp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17275                           
 17276                           
 17277                           ;app_led.c: 481: for(uint8_t i = 0; i < 4; i++)
 17278  1F6B  01FA               	clrf	led_ramp@i
 17279  1F6C                     i1l4107:	
 17280                           
 17281                           ;app_led.c: 482: {
 17282                           ;app_led.c: 483: if(current_bright[i] + 4 < target_bright[i])
 17283  1F6C  357A               	lslf	led_ramp@i,w
 17284  1F6D  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 17285  1F6E  27BE  319F         	fcall	PL96	;call to abstracted procedure
 17286  1F70  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 17287  1F71  27AC  319F         	fcall	PL36	;call to abstracted procedure
 17288  1F73  1803               	skipnc
 17289  1F74  2F7C               	goto	i1l4111
 17290                           
 17291                           ;app_led.c: 484: {
 17292                           ;app_led.c: 485: current_bright[i] += 4;
 17293  1F75  27C6  319F         	fcall	PL126	;call to abstracted procedure
 17294  1F77  0781               	addwf	1,f
 17295  1F78  3141               	addfsr 1,1
 17296  1F79  1803               	skipnc
 17297  1F7A  0A81               	incf	1,f
 17298                           
 17299                           ;app_led.c: 486: }
 17300  1F7B  2F97               	goto	i1l4117
 17301  1F7C                     i1l4111:	
 17302                           
 17303                           ;app_led.c: 487: else if(current_bright[i] > target_bright[i] + 4)
 17304  1F7C  357A               	lslf	led_ramp@i,w
 17305  1F7D  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 17306  1F7E  27BE  319F         	fcall	PL96	;call to abstracted procedure
 17307  1F80  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 17308  1F81  27AC  319F         	fcall	PL36	;call to abstracted procedure
 17309  1F83  1803               	skipnc
 17310  1F84  2F8D               	goto	i1l4115
 17311                           
 17312                           ;app_led.c: 488: {
 17313                           ;app_led.c: 489: current_bright[i] -= 4;
 17314  1F85  27C6  319F         	fcall	PL126	;call to abstracted procedure
 17315  1F87  0281               	subwf	1,f
 17316  1F88  3000               	movlw	0
 17317  1F89  3141               	addfsr 1,1
 17318  1F8A  3B81               	subwfb	1,f
 17319  1F8B  317F               	addfsr 1,-1
 17320                           
 17321                           ;app_led.c: 490: }
 17322  1F8C  2F97               	goto	i1l4117
 17323  1F8D                     i1l4115:	
 17324                           
 17325                           ;app_led.c: 491: else
 17326                           ;app_led.c: 492: {
 17327                           ;app_led.c: 493: current_bright[i] = target_bright[i];
 17328  1F8D  357A               	lslf	led_ramp@i,w
 17329  1F8E  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 17330  1F8F  0086               	movwf	6
 17331  1F90  0187               	clrf	7
 17332  1F91  357A               	lslf	led_ramp@i,w
 17333  1F92  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 17334  1F93  0084               	movwf	4
 17335  1F94  3187  27F6  319F   	fcall	PL6	;call to abstracted procedure
 17336  1F97                     i1l4117:	
 17337                           
 17338                           ;app_led.c: 494: }
 17339                           ;app_led.c: 495: led_load_duty[i](current_bright[i]);
 17340  1F97  357A               	lslf	led_ramp@i,w
 17341  1F98  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 17342  1F99  0086               	movwf	6
 17343  1F9A  0187               	clrf	7
 17344  1F9B  3F40               	moviw [0]fsr1
 17345  1F9C  00F0               	movwf	pwm5_load_duty@value
 17346  1F9D  3F41               	moviw [1]fsr1
 17347  1F9E  00F1               	movwf	pwm5_load_duty@value+1
 17348  1F9F  357A               	lslf	led_ramp@i,w
 17349  1FA0  3E3D               	addlw	(low (_led_load_duty| (0+256)))& (0+255)
 17350  1FA1  27DB               	fcall	PL150	;call to abstracted procedure
 17351  1FA2  008A               	movwf	10
 17352  1FA3  3F40               	moviw [0]fsr1
 17353  1FA4  000A               	callw
 17354  1FA5  3004               	movlw	4
 17355  1FA6  319F               	pagesel	$
 17356  1FA7  0AFA               	incf	led_ramp@i,f
 17357  1FA8  027A               	subwf	led_ramp@i,w
 17358  1FA9  1803               	btfsc	3,0
 17359  1FAA  0008               	return
 17360  1FAB  2F6C               	goto	i1l4107
 17361  1FAC                     __end_of_led_ramp:	
 17362  1FAC                     PL36:	
 17363  1FAC  0086               	movwf	6
 17364  1FAD  3F40               	moviw [0]fsr1
 17365  1FAE  00F6               	movwf	??_led_ramp+2
 17366  1FAF  3F41               	moviw [1]fsr1
 17367  1FB0  00F7               	movwf	??_led_ramp+3
 17368  1FB1  0876               	movf	??_led_ramp+2,w
 17369  1FB2  3E04               	addlw	4
 17370  1FB3  00F8               	movwf	??_led_ramp+4
 17371  1FB4  3000               	movlw	0
 17372  1FB5  3D77               	addwfc	??_led_ramp+3,w
 17373  1FB6  00F9               	movwf	??_led_ramp+5
 17374  1FB7  0875               	movf	??_led_ramp+1,w
 17375  1FB8  0279               	subwf	??_led_ramp+5,w
 17376  1FB9  1D03               	skipz
 17377  1FBA  0008               	return
 17378  1FBB  0874               	movf	??_led_ramp,w
 17379  1FBC  0278               	subwf	??_led_ramp+4,w
 17380  1FBD  0008               	return
 17381  1FBE                     __end_ofPL36:	
 17382  1FBE                     PL96:	
 17383  1FBE  0086               	movwf	6
 17384  1FBF  0187               	clrf	7
 17385  1FC0  3F40               	moviw [0]fsr1
 17386  1FC1  00F4               	movwf	??_led_ramp
 17387  1FC2  3F41               	moviw [1]fsr1
 17388  1FC3  00F5               	movwf	??_led_ramp+1
 17389  1FC4  357A               	lslf	led_ramp@i,w
 17390  1FC5  0008               	return
 17391  1FC6                     __end_ofPL96:	
 17392  1FC6                     PL126:	
 17393  1FC6  357A               	lslf	led_ramp@i,w
 17394  1FC7  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 17395  1FC8  0086               	movwf	6
 17396  1FC9  3004               	movlw	4
 17397  1FCA  0187               	clrf	7
 17398  1FCB  0008               	return
 17399  1FCC                     __end_ofPL126:	
 17400  1FCC                     __ptext93:	
 17401 ;; *************** function _led_touch_cb *****************
 17402 ;; Defined at:
 17403 ;;		line 999 in file "src/app_led.c"
 17404 ;; Parameters:    Size  Location     Type
 17405 ;;  key             1   11[COMMON] unsigned char 
 17406 ;;  state           1   12[COMMON] enum E8242
 17407 ;; Auto vars:     Size  Location     Type
 17408 ;;		None
 17409 ;; Return value:  Size  Location     Type
 17410 ;;                  1    wreg      void 
 17411 ;; Registers used:
 17412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17413 ;; Tracked objects:
 17414 ;;		On entry : 1F/1
 17415 ;;		On exit  : 1E/0
 17416 ;;		Unchanged: 0/0
 17417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17422 ;;Total ram usage:        2 bytes
 17423 ;; Hardware stack levels used:    1
 17424 ;; Hardware stack levels required when called:    3
 17425 ;; This function calls:
 17426 ;;		_led_state_ble_cb
 17427 ;;		_led_state_day_cb
 17428 ;;		_led_state_night_cb
 17429 ;;		_led_state_off_cb
 17430 ;; This function is called by:
 17431 ;;		_app_init
 17432 ;;		_key_action
 17433 ;; This function uses a non-reentrant model
 17434 ;;
 17435                           
 17436                           
 17437                           ;psect for function _led_touch_cb
 17438  1FCC                     _led_touch_cb:	
 17439                           
 17440                           ;app_led.c: 1001: led_state_cb[m_led_para.mState](key, state);
 17441                           
 17442                           ;incstack = 0
 17443                           ; Regs used in _led_touch_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17444  1FCC  087B               	movf	led_touch_cb@key,w
 17445  1FCD  00F9               	movwf	led_state_ble_cb@key
 17446  1FCE  087C               	movf	led_touch_cb@state,w
 17447  1FCF  00FA               	movwf	led_state_ble_cb@state
 17448  1FD0  318F  277D  319F   	fcall	PL14	;call to abstracted procedure
 17449  1FD3  0709               	addwf	9,w
 17450  1FD4  3E45               	addlw	(low (_led_state_cb| (0+256)))& (0+255)
 17451  1FD5  27DB               	fcall	PL150	;call to abstracted procedure
 17452  1FD6  008A               	movwf	10
 17453  1FD7  3F40               	moviw [0]fsr1
 17454  1FD8  000A               	callw
 17455  1FD9  319F               	pagesel	$
 17456  1FDA  0008               	return
 17457  1FDB                     __end_of_led_touch_cb:	
 17458  1FDB                     PL150:	
 17459  1FDB  0086               	movwf	6
 17460  1FDC  3001               	movlw	1	; select bank2/3
 17461  1FDD  0087               	movwf	7
 17462  1FDE  3F41               	moviw [1]fsr1
 17463  1FDF  0008               	return
 17464  1FE0                     __end_ofPL150:	
 17465                           
 17466                           	psect	text86
 17467  1000                     __ptext86:	
 17468 ;; *************** function _pwm4_load_duty *****************
 17469 ;; Defined at:
 17470 ;;		line 84 in file "src/drv_pwm.c"
 17471 ;; Parameters:    Size  Location     Type
 17472 ;;  value           2    0[COMMON] unsigned int 
 17473 ;; Auto vars:     Size  Location     Type
 17474 ;;		None
 17475 ;; Return value:  Size  Location     Type
 17476 ;;                  1    wreg      void 
 17477 ;; Registers used:
 17478 ;;		wreg
 17479 ;; Tracked objects:
 17480 ;;		On entry : 10/0
 17481 ;;		On exit  : 1F/6
 17482 ;;		Unchanged: 0/0
 17483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17487 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17488 ;;Total ram usage:        2 bytes
 17489 ;; Hardware stack levels used:    1
 17490 ;; This function calls:
 17491 ;;		Nothing
 17492 ;; This function is called by:
 17493 ;;		_led_ramp
 17494 ;; This function uses a non-reentrant model
 17495 ;;
 17496                           
 17497                           
 17498                           ;psect for function _pwm4_load_duty
 17499  1000                     _pwm4_load_duty:	
 17500                           
 17501                           ;drv_pwm.c: 87: CCPR4H = value >> 8;
 17502                           
 17503                           ;incstack = 0
 17504                           ; Regs used in _pwm4_load_duty: [wreg]
 17505  1000  0871               	movf	pwm4_load_duty@value+1,w
 17506  1001  0026               	movlb	6	; select bank6
 17507  1002  0096               	movwf	22	;volatile
 17508                           
 17509                           ;drv_pwm.c: 88: CCPR4L = value;
 17510  1003  0870               	movf	pwm4_load_duty@value,w
 17511  1004  0095               	movwf	21	;volatile
 17512  1005  0008               	return
 17513  1006                     __end_of_pwm4_load_duty:	
 17514                           
 17515                           	psect	text87
 17516  1DDA                     __ptext87:	
 17517 ;; *************** function _pwm3_load_duty *****************
 17518 ;; Defined at:
 17519 ;;		line 62 in file "src/drv_pwm.c"
 17520 ;; Parameters:    Size  Location     Type
 17521 ;;  value           2    0[COMMON] unsigned int 
 17522 ;; Auto vars:     Size  Location     Type
 17523 ;;		None
 17524 ;; Return value:  Size  Location     Type
 17525 ;;                  1    wreg      void 
 17526 ;; Registers used:
 17527 ;;		wreg
 17528 ;; Tracked objects:
 17529 ;;		On entry : 10/0
 17530 ;;		On exit  : 1F/6
 17531 ;;		Unchanged: 0/0
 17532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17537 ;;Total ram usage:        2 bytes
 17538 ;; Hardware stack levels used:    1
 17539 ;; This function calls:
 17540 ;;		Nothing
 17541 ;; This function is called by:
 17542 ;;		_led_ramp
 17543 ;; This function uses a non-reentrant model
 17544 ;;
 17545                           
 17546                           
 17547                           ;psect for function _pwm3_load_duty
 17548  1DDA                     _pwm3_load_duty:	
 17549                           
 17550                           ;drv_pwm.c: 65: CCPR3H = value >> 8;
 17551                           
 17552                           ;incstack = 0
 17553                           ; Regs used in _pwm3_load_duty: [wreg]
 17554  1DDA  0871               	movf	pwm3_load_duty@value+1,w
 17555  1DDB  0026               	movlb	6	; select bank6
 17556  1DDC  0092               	movwf	18	;volatile
 17557                           
 17558                           ;drv_pwm.c: 66: CCPR3L = value;
 17559  1DDD  0870               	movf	pwm3_load_duty@value,w
 17560  1DDE  0091               	movwf	17	;volatile
 17561  1DDF  0008               	return
 17562  1DE0                     __end_of_pwm3_load_duty:	
 17563                           
 17564                           	psect	text88
 17565  1DD4                     __ptext88:	
 17566 ;; *************** function _pwm1_load_duty *****************
 17567 ;; Defined at:
 17568 ;;		line 18 in file "src/drv_pwm.c"
 17569 ;; Parameters:    Size  Location     Type
 17570 ;;  value           2    0[COMMON] unsigned int 
 17571 ;; Auto vars:     Size  Location     Type
 17572 ;;		None
 17573 ;; Return value:  Size  Location     Type
 17574 ;;                  1    wreg      void 
 17575 ;; Registers used:
 17576 ;;		wreg
 17577 ;; Tracked objects:
 17578 ;;		On entry : 10/0
 17579 ;;		On exit  : 1F/5
 17580 ;;		Unchanged: 0/0
 17581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17586 ;;Total ram usage:        2 bytes
 17587 ;; Hardware stack levels used:    1
 17588 ;; This function calls:
 17589 ;;		Nothing
 17590 ;; This function is called by:
 17591 ;;		_led_ramp
 17592 ;; This function uses a non-reentrant model
 17593 ;;
 17594                           
 17595                           
 17596                           ;psect for function _pwm1_load_duty
 17597  1DD4                     _pwm1_load_duty:	
 17598                           
 17599                           ;drv_pwm.c: 21: CCPR1H = value>>8;
 17600                           
 17601                           ;incstack = 0
 17602                           ; Regs used in _pwm1_load_duty: [wreg]
 17603  1DD4  0871               	movf	pwm1_load_duty@value+1,w
 17604  1DD5  0025               	movlb	5	; select bank5
 17605  1DD6  0092               	movwf	18	;volatile
 17606                           
 17607                           ;drv_pwm.c: 22: CCPR1L = value;
 17608  1DD7  0870               	movf	pwm1_load_duty@value,w
 17609  1DD8  0091               	movwf	17	;volatile
 17610  1DD9  0008               	return
 17611  1DDA                     __end_of_pwm1_load_duty:	
 17612                           
 17613                           	psect	text89
 17614  1E10                     __ptext89:	
 17615 ;; *************** function _pwm5_load_duty *****************
 17616 ;; Defined at:
 17617 ;;		line 99 in file "src/drv_pwm.c"
 17618 ;; Parameters:    Size  Location     Type
 17619 ;;  value           2    0[COMMON] unsigned int 
 17620 ;; Auto vars:     Size  Location     Type
 17621 ;;		None
 17622 ;; Return value:  Size  Location     Type
 17623 ;;                  1    wreg      void 
 17624 ;; Registers used:
 17625 ;;		wreg, status,2, status,0
 17626 ;; Tracked objects:
 17627 ;;		On entry : 10/0
 17628 ;;		On exit  : 1F/C
 17629 ;;		Unchanged: 0/0
 17630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17633 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17635 ;;Total ram usage:        4 bytes
 17636 ;; Hardware stack levels used:    1
 17637 ;; This function calls:
 17638 ;;		Nothing
 17639 ;; This function is called by:
 17640 ;;		_led_ramp
 17641 ;; This function uses a non-reentrant model
 17642 ;;
 17643                           
 17644                           
 17645                           ;psect for function _pwm5_load_duty
 17646  1E10                     _pwm5_load_duty:	
 17647                           
 17648                           ;drv_pwm.c: 102: PWM5DCH = value >> 2;
 17649                           
 17650                           ;incstack = 0
 17651                           ; Regs used in _pwm5_load_duty: [wreg+status,2+status,0]
 17652  1E10  0871               	movf	pwm5_load_duty@value+1,w
 17653  1E11  00F3               	movwf	??_pwm5_load_duty+1
 17654  1E12  0870               	movf	pwm5_load_duty@value,w
 17655  1E13  00F2               	movwf	??_pwm5_load_duty
 17656  1E14  36F3               	lsrf	??_pwm5_load_duty+1,f
 17657  1E15  0CF2               	rrf	??_pwm5_load_duty,f
 17658  1E16  36F3               	lsrf	??_pwm5_load_duty+1,f
 17659  1E17  0CF2               	rrf	??_pwm5_load_duty,f
 17660  1E18  0872               	movf	??_pwm5_load_duty,w
 17661  1E19  002C               	movlb	12	; select bank12
 17662  1E1A  0098               	movwf	24	;volatile
 17663                           
 17664                           ;drv_pwm.c: 103: PWM5DCL = value << 6;
 17665  1E1B  0870               	movf	pwm5_load_duty@value,w
 17666  1E1C  00F2               	movwf	??_pwm5_load_duty
 17667  1E1D  0CF2               	rrf	??_pwm5_load_duty,f
 17668  1E1E  0CF2               	rrf	??_pwm5_load_duty,f
 17669  1E1F  0C72               	rrf	??_pwm5_load_duty,w
 17670  1E20  39C0               	andlw	192
 17671  1E21  0097               	movwf	23	;volatile
 17672  1E22  0008               	return
 17673  1E23                     __end_of_pwm5_load_duty:	
 17674                           
 17675                           	psect	text95
 17676  1E85                     __ptext95:	
 17677 ;; *************** function _led_state_night_cb *****************
 17678 ;; Defined at:
 17679 ;;		line 937 in file "src/app_led.c"
 17680 ;; Parameters:    Size  Location     Type
 17681 ;;  key             1    9[COMMON] unsigned char 
 17682 ;;  state           1   10[COMMON] enum E8242
 17683 ;; Auto vars:     Size  Location     Type
 17684 ;;		None
 17685 ;; Return value:  Size  Location     Type
 17686 ;;                  1    wreg      void 
 17687 ;; Registers used:
 17688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17689 ;; Tracked objects:
 17690 ;;		On entry : 1F/1
 17691 ;;		On exit  : 1E/0
 17692 ;;		Unchanged: 0/0
 17693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17698 ;;Total ram usage:        2 bytes
 17699 ;; Hardware stack levels used:    1
 17700 ;; Hardware stack levels required when called:    2
 17701 ;; This function calls:
 17702 ;;		_led_state_night_cont_press_cb
 17703 ;;		_led_state_night_long_press_cb
 17704 ;;		_led_state_night_release_cb
 17705 ;;		_led_state_night_short_press_cb
 17706 ;; This function is called by:
 17707 ;;		_led_touch_cb
 17708 ;; This function uses a non-reentrant model
 17709 ;;
 17710                           
 17711                           
 17712                           ;psect for function _led_state_night_cb
 17713  1E85                     _led_state_night_cb:	
 17714                           
 17715                           ;app_led.c: 939: if(key == 0x01)
 17716                           
 17717                           ;incstack = 0
 17718                           ; Regs used in _led_state_night_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17719  1E85  0B79               	decfsz	led_state_night_cb@key,w
 17720  1E86  0008               	return
 17721  1E87  087A               	movf	led_state_night_cb@state,w
 17722                           
 17723                           ; Switch size 1, requested type "space"
 17724                           ; Number of cases is 4, Range of values is 0 to 3
 17725                           ; switch strategies available:
 17726                           ; Name         Instructions Cycles
 17727                           ; simple_byte           13     7 (average)
 17728                           ; direct_byte           14     6 (fixed)
 17729                           ; jumptable            260     6 (fixed)
 17730                           ;	Chosen strategy is simple_byte
 17731  1E88  3A00               	xorlw	0	; case 0
 17732  1E89  1903               	skipnz
 17733  1E8A  2E95               	goto	i1l3907
 17734  1E8B  3A01               	xorlw	1	; case 1
 17735  1E8C  1903               	skipnz
 17736  1E8D  2E97               	goto	i1l3909
 17737  1E8E  3A03               	xorlw	3	; case 2
 17738  1E8F  1903               	skipnz
 17739  1E90  2E98               	goto	i1l3911
 17740  1E91  3A01               	xorlw	1	; case 3
 17741  1E92  1903               	skipnz
 17742  1E93  2E9A               	goto	i1l3913
 17743  1E94  2E9B               	goto	i1l843
 17744  1E95                     i1l3907:	
 17745                           
 17746                           ;app_led.c: 944: led_state_night_short_press_cb();
 17747  1E95  318E  2E12         	ljmp	i1l3841
 17748  1E97                     i1l3909:	
 17749                           ;app_led.c: 945: break;
 17750                           
 17751                           
 17752                           ;app_led.c: 947: led_state_night_long_press_cb();
 17753  1E97  2E9D               	ljmp	i1l3731
 17754  1E98                     i1l3911:	
 17755                           ;app_led.c: 948: break;
 17756                           
 17757                           
 17758                           ;app_led.c: 950: led_state_night_cont_press_cb();
 17759  1E98  318E  2E46         	ljmp	i1l3853
 17760  1E9A                     i1l3913:	
 17761                           ;app_led.c: 951: break;
 17762                           
 17763                           
 17764                           ;app_led.c: 953: led_state_night_release_cb();
 17765  1E9A  2EBF               	ljmp	i1l3861
 17766  1E9B                     i1l843:	
 17767  1E9B  0008               	return
 17768  1E9C                     __end_of_led_state_night_cb:	
 17769  1E9C                     __ptext106:	
 17770 ;; *************** function _led_state_night_long_press_cb *****************
 17771 ;; Defined at:
 17772 ;;		line 914 in file "src/app_led.c"
 17773 ;; Parameters:    Size  Location     Type
 17774 ;;		None
 17775 ;; Auto vars:     Size  Location     Type
 17776 ;;		None
 17777 ;; Return value:  Size  Location     Type
 17778 ;;                  1    wreg      void 
 17779 ;; Registers used:
 17780 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17781 ;; Tracked objects:
 17782 ;;		On entry : 1F/1
 17783 ;;		On exit  : 1E/0
 17784 ;;		Unchanged: 0/0
 17785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17790 ;;Total ram usage:        0 bytes
 17791 ;; Hardware stack levels used:    1
 17792 ;; Hardware stack levels required when called:    1
 17793 ;; This function calls:
 17794 ;;		_led_update_night_status
 17795 ;; This function is called by:
 17796 ;;		_led_state_night_cb
 17797 ;; This function uses a non-reentrant model
 17798 ;;
 17799                           
 17800                           
 17801                           ;psect for function _led_state_night_long_press_cb
 17802  1E9C                     _led_state_night_long_press_cb:	
 17803                           
 17804                           ;app_led.c: 916: led_update_night_status();
 17805                           
 17806                           ;incstack = 0
 17807                           ; Regs used in _led_state_night_long_press_cb: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
 17808  1E9C  2E9D               	ljmp	i1l3731
 17809  1E9D                     __end_of_led_state_night_long_press_cb:	
 17810  1E9D                     __ptext107:	
 17811 ;; *************** function _led_update_night_status *****************
 17812 ;; Defined at:
 17813 ;;		line 781 in file "src/app_led.c"
 17814 ;; Parameters:    Size  Location     Type
 17815 ;;		None
 17816 ;; Auto vars:     Size  Location     Type
 17817 ;;		None
 17818 ;; Return value:  Size  Location     Type
 17819 ;;                  1    wreg      void 
 17820 ;; Registers used:
 17821 ;;		wreg, fsr1l, fsr1h
 17822 ;; Tracked objects:
 17823 ;;		On entry : 1F/1
 17824 ;;		On exit  : 1E/0
 17825 ;;		Unchanged: 0/0
 17826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17829 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17830 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17831 ;;Total ram usage:        2 bytes
 17832 ;; Hardware stack levels used:    1
 17833 ;; This function calls:
 17834 ;;		Nothing
 17835 ;; This function is called by:
 17836 ;;		_led_state_night_long_press_cb
 17837 ;; This function uses a non-reentrant model
 17838 ;;
 17839                           
 17840                           
 17841                           ;psect for function _led_update_night_status
 17842  1E9D                     _led_update_night_status:	
 17843  1E9D                     i1l3731:	
 17844                           ;incstack = 0
 17845                           ; Regs used in _led_update_night_status: [wregfsr1]
 17846                           
 17847                           
 17848                           ;app_led.c: 783: if(m_led_para.blue_bright > 1000 - 200)
 17849  1E9D  3186  26D5  319E   	fcall	PL26	;call to abstracted procedure
 17850  1EA0  3F40               	moviw [0]fsr1
 17851  1EA1  00F0               	movwf	??_led_update_night_status
 17852  1EA2  3F41               	moviw [1]fsr1
 17853  1EA3  00F1               	movwf	??_led_update_night_status+1
 17854  1EA4  3003               	movlw	3
 17855  1EA5  0271               	subwf	??_led_update_night_status+1,w
 17856  1EA6  3021               	movlw	33
 17857  1EA7  1903               	skipnz
 17858  1EA8  0270               	subwf	??_led_update_night_status,w
 17859  1EA9  1C03               	skipc
 17860  1EAA  2EAE               	goto	i1l3735
 17861                           
 17862                           ;app_led.c: 784: {
 17863                           ;app_led.c: 785: led_run_para.mNr = 0;
 17864  1EAB  0020               	movlb	0	; select bank0
 17865  1EAC  125D               	bcf	_led_run_para,4
 17866                           
 17867                           ;app_led.c: 786: }
 17868  1EAD  0008               	return
 17869  1EAE                     i1l3735:	
 17870                           
 17871                           ;app_led.c: 787: else if(m_led_para.blue_bright < 200)
 17872  1EAE  3186  26D5  319E   	fcall	PL26	;call to abstracted procedure
 17873  1EB1  3F40               	moviw [0]fsr1
 17874  1EB2  00F0               	movwf	??_led_update_night_status
 17875  1EB3  3F41               	moviw [1]fsr1
 17876  1EB4  00F1               	movwf	??_led_update_night_status+1
 17877  1EB5  3000               	movlw	0
 17878  1EB6  0271               	subwf	??_led_update_night_status+1,w
 17879  1EB7  30C8               	movlw	200
 17880  1EB8  1903               	skipnz
 17881  1EB9  0270               	subwf	??_led_update_night_status,w
 17882  1EBA  1803               	skipnc
 17883  1EBB  0008               	return
 17884                           
 17885                           ;app_led.c: 788: {
 17886                           ;app_led.c: 789: led_run_para.mNr = 1;
 17887  1EBC  0020               	movlb	0	; select bank0
 17888  1EBD  165D               	bsf	_led_run_para,4
 17889  1EBE  0008               	return
 17890  1EBF                     __end_of_led_update_night_status:	
 17891  1EBF                     __ptext105:	
 17892 ;; *************** function _led_state_night_release_cb *****************
 17893 ;; Defined at:
 17894 ;;		line 932 in file "src/app_led.c"
 17895 ;; Parameters:    Size  Location     Type
 17896 ;;		None
 17897 ;; Auto vars:     Size  Location     Type
 17898 ;;		None
 17899 ;; Return value:  Size  Location     Type
 17900 ;;                  1    wreg      void 
 17901 ;; Registers used:
 17902 ;;		wreg, status,2, status,0, pclath, cstack
 17903 ;; Tracked objects:
 17904 ;;		On entry : 1F/1
 17905 ;;		On exit  : 1F/0
 17906 ;;		Unchanged: 0/0
 17907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17912 ;;Total ram usage:        0 bytes
 17913 ;; Hardware stack levels used:    1
 17914 ;; Hardware stack levels required when called:    1
 17915 ;; This function calls:
 17916 ;;		i1_led_prepare_to_save
 17917 ;; This function is called by:
 17918 ;;		_led_state_night_cb
 17919 ;; This function uses a non-reentrant model
 17920 ;;
 17921                           
 17922                           
 17923                           ;psect for function _led_state_night_release_cb
 17924  1EBF                     _led_state_night_release_cb:	
 17925  1EBF                     i1l3861:	
 17926                           ;incstack = 0
 17927                           ; Regs used in _led_state_night_release_cb: [wreg+status,2+status,0+pclath+cstack]
 17928                           
 17929                           
 17930                           ;app_led.c: 934: led_prepare_to_save();
 17931  1EBF  318F  274C         	fcall	i1_led_prepare_to_save
 17932  1EC1  0008               	return
 17933  1EC2                     __end_of_led_state_night_release_cb:	
 17934                           
 17935                           	psect	text126
 17936  1DE0                     __ptext126:	
 17937 ;; *************** function _tmr0_isr *****************
 17938 ;; Defined at:
 17939 ;;		line 29 in file "src/drv_tmr.c"
 17940 ;; Parameters:    Size  Location     Type
 17941 ;;		None
 17942 ;; Auto vars:     Size  Location     Type
 17943 ;;		None
 17944 ;; Return value:  Size  Location     Type
 17945 ;;                  1    wreg      void 
 17946 ;; Registers used:
 17947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17948 ;; Tracked objects:
 17949 ;;		On entry : 1F/0
 17950 ;;		On exit  : 0/0
 17951 ;;		Unchanged: 0/0
 17952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17957 ;;Total ram usage:        0 bytes
 17958 ;; Hardware stack levels used:    1
 17959 ;; Hardware stack levels required when called:    3
 17960 ;; This function calls:
 17961 ;;		Absolute function
 17962 ;;		_rtc_process
 17963 ;; This function is called by:
 17964 ;;		_app_isr
 17965 ;; This function uses a non-reentrant model
 17966 ;;
 17967                           
 17968                           
 17969                           ;psect for function _tmr0_isr
 17970  1DE0                     _tmr0_isr:	
 17971                           
 17972                           ;drv_tmr.c: 31: PIR0bits.TMR0IF = 0;
 17973                           
 17974                           ;incstack = 0
 17975                           ; Regs used in _tmr0_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17976  1DE0  1290               	bcf	16,5	;volatile
 17977                           
 17978                           ;drv_tmr.c: 32: if(tmr0_isr_cb != (0))
 17979  1DE1  0021               	movlb	1	; select bank1
 17980  1DE2  086C               	movf	_tmr0_isr_cb^(0+128),w
 17981  1DE3  046D               	iorwf	(_tmr0_isr_cb+1)^(0+128),w
 17982  1DE4  1903               	btfsc	3,2
 17983  1DE5  0008               	return
 17984                           
 17985                           ;drv_tmr.c: 33: {
 17986                           ;drv_tmr.c: 34: tmr0_isr_cb();
 17987  1DE6  086D               	movf	(_tmr0_isr_cb+1)^(0+128),w
 17988  1DE7  008A               	movwf	10
 17989  1DE8  086C               	movf	_tmr0_isr_cb^(0+128),w
 17990  1DE9  000A               	callw
 17991  1DEA  319D               	pagesel	$
 17992  1DEB  0008               	return
 17993  1DEC                     __end_of_tmr0_isr:	
 17994                           
 17995                           	psect	text127
 17996  103C                     __ptext127:	
 17997 ;; *************** function _rtc_process *****************
 17998 ;; Defined at:
 17999 ;;		line 52 in file "src/app_rtc.c"
 18000 ;; Parameters:    Size  Location     Type
 18001 ;;		None
 18002 ;; Auto vars:     Size  Location     Type
 18003 ;;		None
 18004 ;; Return value:  Size  Location     Type
 18005 ;;                  1    wreg      void 
 18006 ;; Registers used:
 18007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18008 ;; Tracked objects:
 18009 ;;		On entry : 1F/1
 18010 ;;		On exit  : 1F/0
 18011 ;;		Unchanged: 0/0
 18012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18017 ;;Total ram usage:        0 bytes
 18018 ;; Hardware stack levels used:    1
 18019 ;; Hardware stack levels required when called:    2
 18020 ;; This function calls:
 18021 ;;		_rtc_is_leap_year
 18022 ;; This function is called by:
 18023 ;;		_app_init
 18024 ;;		_tmr0_isr
 18025 ;; This function uses a non-reentrant model
 18026 ;;
 18027                           
 18028                           
 18029                           ;psect for function _rtc_process
 18030  103C                     _rtc_process:	
 18031  103C  303C               	movlw	60
 18032                           
 18033                           ;app_rtc.c: 54: m_current_time.second++;
 18034                           
 18035                           ;incstack = 0
 18036                           ; Regs used in _rtc_process: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18037  103D  0AE5               	incf	(_m_current_time^(0+128)+6),f
 18038                           
 18039                           ;app_rtc.c: 55: if(m_current_time.second >= 60)
 18040  103E  0265               	subwf	(_m_current_time^(0+128)+6),w
 18041  103F  1C03               	skipc
 18042  1040  2882               	goto	i1l4961
 18043  1041  303C               	movlw	60
 18044                           
 18045                           ;app_rtc.c: 56: {
 18046                           ;app_rtc.c: 57: m_current_time.second = 0;
 18047  1042  01E5               	clrf	(_m_current_time^(0+128)+6)
 18048                           
 18049                           ;app_rtc.c: 58: m_current_time.minute++;
 18050  1043  0AE4               	incf	(_m_current_time^(0+128)+5),f
 18051                           
 18052                           ;app_rtc.c: 59: if(m_current_time.minute >= 60)
 18053  1044  0264               	subwf	(_m_current_time^(0+128)+5),w
 18054  1045  1C03               	skipc
 18055  1046  2882               	goto	i1l4961
 18056  1047  3018               	movlw	24
 18057                           
 18058                           ;app_rtc.c: 60: {
 18059                           ;app_rtc.c: 61: m_current_time.minute = 0;
 18060  1048  01E4               	clrf	(_m_current_time^(0+128)+5)
 18061                           
 18062                           ;app_rtc.c: 62: m_current_time.hour++;
 18063  1049  0AE3               	incf	(_m_current_time^(0+128)+4),f
 18064                           
 18065                           ;app_rtc.c: 63: if(m_current_time.hour >= 24)
 18066  104A  0263               	subwf	(_m_current_time^(0+128)+4),w
 18067  104B  1C03               	skipc
 18068  104C  2882               	goto	i1l4961
 18069  104D  3007               	movlw	7
 18070                           
 18071                           ;app_rtc.c: 64: {
 18072                           ;app_rtc.c: 65: m_current_time.hour = 0;
 18073  104E  01E3               	clrf	(_m_current_time^(0+128)+4)
 18074                           
 18075                           ;app_rtc.c: 66: m_current_time.day++;
 18076  104F  0AE1               	incf	(_m_current_time^(0+128)+2),f
 18077                           
 18078                           ;app_rtc.c: 67: m_current_time.week++;
 18079  1050  0AE2               	incf	(_m_current_time^(0+128)+3),f
 18080                           
 18081                           ;app_rtc.c: 68: if(m_current_time.week > 6)
 18082  1051  0262               	subwf	(_m_current_time^(0+128)+3),w
 18083  1052  1803               	btfsc	3,0
 18084                           
 18085                           ;app_rtc.c: 69: {
 18086                           ;app_rtc.c: 70: m_current_time.week = 0;
 18087  1053  01E2               	clrf	(_m_current_time^(0+128)+3)
 18088                           
 18089                           ;app_rtc.c: 71: }
 18090                           ;app_rtc.c: 72: if(rtc_is_leap_year(m_current_time.year + 2000))
 18091  1054  085F               	movf	_m_current_time^(0+128),w
 18092  1055  00F5               	movwf	rtc_is_leap_year@year
 18093  1056  30D0               	movlw	208
 18094  1057  01F6               	clrf	rtc_is_leap_year@year+1
 18095  1058  07F5               	addwf	rtc_is_leap_year@year,f
 18096  1059  3007               	movlw	7
 18097  105A  3DF6               	addwfc	rtc_is_leap_year@year+1,f
 18098  105B  2085  3190         	fcall	_rtc_is_leap_year
 18099  105D  3A00               	xorlw	0
 18100  105E  1903               	skipnz
 18101  105F  2862               	goto	i1l4945
 18102                           
 18103                           ;app_rtc.c: 73: {
 18104                           ;app_rtc.c: 74: MONTH_DAY[1] = 29;
 18105  1060  301D               	movlw	29
 18106  1061  2863               	goto	L28
 18107  1062                     i1l4945:	
 18108                           ;app_rtc.c: 75: }
 18109                           
 18110                           
 18111                           ;app_rtc.c: 76: else
 18112                           ;app_rtc.c: 77: {
 18113                           ;app_rtc.c: 78: MONTH_DAY[1] = 28;
 18114  1062  301C               	movlw	28
 18115  1063                     L28:	
 18116  1063  0022               	movlb	2	; select bank2
 18117  1064  00B2               	movwf	(_MONTH_DAY^(0+256)+1)
 18118                           
 18119                           ;app_rtc.c: 79: }
 18120                           ;app_rtc.c: 80: if(m_current_time.month > 12 || m_current_time.month == 0)
 18121  1065  300D               	movlw	13
 18122  1066  0021               	movlb	1	; select bank1
 18123  1067  0260               	subwf	(_m_current_time^(0+128)+1),w
 18124  1068  1803               	skipnc
 18125  1069  286D               	goto	i1l266
 18126  106A  0860               	movf	(_m_current_time^(0+128)+1),w
 18127  106B  1D03               	btfss	3,2
 18128  106C  286F               	goto	i1l4949
 18129  106D                     i1l266:	
 18130                           
 18131                           ;app_rtc.c: 81: {
 18132                           ;app_rtc.c: 82: m_current_time.month = 1;
 18133  106D  01E0               	clrf	(_m_current_time^(0+128)+1)
 18134  106E  0AE0               	incf	(_m_current_time^(0+128)+1),f
 18135  106F                     i1l4949:	
 18136                           
 18137                           ;app_rtc.c: 83: }
 18138                           ;app_rtc.c: 84: if(m_current_time.day > MONTH_DAY[m_current_time.month - 1])
 18139  106F  0860               	movf	(_m_current_time^(0+128)+1),w
 18140  1070  3E30               	addlw	(low ((_MONTH_DAY| (0+256)+255)))& (0+255)
 18141  1071  0086               	movwf	6
 18142  1072  3001               	movlw	1	; select bank2/3
 18143  1073  0087               	movwf	7
 18144  1074  0861               	movf	(_m_current_time^(0+128)+2),w
 18145  1075  0201               	subwf	1,w
 18146  1076  1803               	skipnc
 18147  1077  2882               	goto	i1l4961
 18148  1078  300D               	movlw	13
 18149                           
 18150                           ;app_rtc.c: 85: {
 18151                           ;app_rtc.c: 86: m_current_time.day = 1;
 18152  1079  01E1               	clrf	(_m_current_time^(0+128)+2)
 18153  107A  0AE1               	incf	(_m_current_time^(0+128)+2),f
 18154                           
 18155                           ;app_rtc.c: 87: m_current_time.month++;
 18156  107B  0AE0               	incf	(_m_current_time^(0+128)+1),f
 18157                           
 18158                           ;app_rtc.c: 88: if(m_current_time.month > 12)
 18159  107C  0260               	subwf	(_m_current_time^(0+128)+1),w
 18160  107D  1C03               	skipc
 18161  107E  2882               	goto	i1l4961
 18162                           
 18163                           ;app_rtc.c: 89: {
 18164                           ;app_rtc.c: 90: m_current_time.month = 1;
 18165  107F  01E0               	clrf	(_m_current_time^(0+128)+1)
 18166  1080  0AE0               	incf	(_m_current_time^(0+128)+1),f
 18167                           
 18168                           ;app_rtc.c: 91: m_current_time.year++;
 18169  1081  0ADF               	incf	_m_current_time^(0+128),f
 18170  1082                     i1l4961:	
 18171                           
 18172                           ;app_rtc.c: 92: }
 18173                           ;app_rtc.c: 93: }
 18174                           ;app_rtc.c: 94: }
 18175                           ;app_rtc.c: 95: }
 18176                           ;app_rtc.c: 96: }
 18177                           ;app_rtc.c: 97: rtc_status.fSec = 1;
 18178  1082  0020               	movlb	0	; select bank0
 18179  1083  1465               	bsf	_rtc_status,0
 18180  1084  0008               	return
 18181  1085                     __end_of_rtc_process:	
 18182  1085                     __ptext128:	
 18183 ;; *************** function _rtc_is_leap_year *****************
 18184 ;; Defined at:
 18185 ;;		line 22 in file "src/app_rtc.c"
 18186 ;; Parameters:    Size  Location     Type
 18187 ;;  year            2    5[COMMON] unsigned int 
 18188 ;; Auto vars:     Size  Location     Type
 18189 ;;		None
 18190 ;; Return value:  Size  Location     Type
 18191 ;;                  1    wreg      unsigned char 
 18192 ;; Registers used:
 18193 ;;		wreg, status,2, status,0, pclath, cstack
 18194 ;; Tracked objects:
 18195 ;;		On entry : 1F/1
 18196 ;;		On exit  : 0/0
 18197 ;;		Unchanged: 0/0
 18198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18202 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18203 ;;Total ram usage:        2 bytes
 18204 ;; Hardware stack levels used:    1
 18205 ;; Hardware stack levels required when called:    1
 18206 ;; This function calls:
 18207 ;;		___lwmod
 18208 ;; This function is called by:
 18209 ;;		_rtc_process
 18210 ;; This function uses a non-reentrant model
 18211 ;;
 18212                           
 18213                           
 18214                           ;psect for function _rtc_is_leap_year
 18215  1085                     _rtc_is_leap_year:	
 18216                           
 18217                           ;app_rtc.c: 24: if((year & 0x03) == 0)
 18218                           
 18219                           ;incstack = 0
 18220                           ; Regs used in _rtc_is_leap_year: [wreg+status,2+status,0+pclath+cstack]
 18221  1085  0875               	movf	rtc_is_leap_year@year,w
 18222  1086  3903               	andlw	3
 18223  1087  1D03               	btfss	3,2
 18224  1088  3400               	retlw	0
 18225                           
 18226                           ;app_rtc.c: 25: {
 18227                           ;app_rtc.c: 26: if(year % 100 == 0)
 18228  1089  3064               	movlw	100
 18229  108A  00F0               	movwf	___lwmod@divisor
 18230  108B  01F1               	clrf	___lwmod@divisor+1
 18231  108C  20C1  3190         	fcall	PL160	;call to abstracted procedure
 18232  108E  20A1  3190         	fcall	___lwmod
 18233  1090  0870               	movf	?___lwmod,w
 18234  1091  0471               	iorwf	?___lwmod+1,w
 18235  1092  1D03               	btfss	3,2
 18236  1093  3401               	retlw	1
 18237                           
 18238                           ;app_rtc.c: 27: {
 18239                           ;app_rtc.c: 28: if(year % 400 == 0)
 18240  1094  3090               	movlw	144
 18241  1095  00F0               	movwf	___lwmod@divisor
 18242  1096  3001               	movlw	1
 18243  1097  00F1               	movwf	___lwmod@divisor+1
 18244  1098  20C1  3190         	fcall	PL160	;call to abstracted procedure
 18245  109A  20A1  3190         	fcall	___lwmod
 18246  109C  0870               	movf	?___lwmod,w
 18247  109D  0471               	iorwf	?___lwmod+1,w
 18248  109E  1903               	btfsc	3,2
 18249                           
 18250                           ;app_rtc.c: 29: {
 18251                           ;app_rtc.c: 30: return 1;
 18252  109F  3401               	retlw	1
 18253                           
 18254                           ;app_rtc.c: 36: }
 18255                           ;app_rtc.c: 37: }
 18256                           ;app_rtc.c: 38: return 0;
 18257  10A0  3400               	retlw	0
 18258  10A1                     __end_of_rtc_is_leap_year:	
 18259  10A1                     __ptext129:	
 18260 ;; *************** function ___lwmod *****************
 18261 ;; Defined at:
 18262 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwmod.c"
 18263 ;; Parameters:    Size  Location     Type
 18264 ;;  divisor         2    0[COMMON] unsigned int 
 18265 ;;  dividend        2    2[COMMON] unsigned int 
 18266 ;; Auto vars:     Size  Location     Type
 18267 ;;  counter         1    4[COMMON] unsigned char 
 18268 ;; Return value:  Size  Location     Type
 18269 ;;                  2    0[COMMON] unsigned int 
 18270 ;; Registers used:
 18271 ;;		wreg, status,2, status,0
 18272 ;; Tracked objects:
 18273 ;;		On entry : 0/1
 18274 ;;		On exit  : 0/0
 18275 ;;		Unchanged: 0/0
 18276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18280 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18281 ;;Total ram usage:        5 bytes
 18282 ;; Hardware stack levels used:    1
 18283 ;; This function calls:
 18284 ;;		Nothing
 18285 ;; This function is called by:
 18286 ;;		_rtc_is_leap_year
 18287 ;; This function uses a non-reentrant model
 18288 ;;
 18289                           
 18290                           
 18291                           ;psect for function ___lwmod
 18292  10A1                     ___lwmod:	
 18293                           
 18294                           ;incstack = 0
 18295                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 18296  10A1  0870               	movf	___lwmod@divisor,w
 18297  10A2  0471               	iorwf	___lwmod@divisor+1,w
 18298  10A3  1903               	btfsc	3,2
 18299  10A4  28BC               	goto	i1l4237
 18300  10A5  01F4               	clrf	___lwmod@counter
 18301  10A6                     L29:	
 18302  10A6  0AF4               	incf	___lwmod@counter,f
 18303  10A7  1BF1               	btfsc	___lwmod@divisor+1,7
 18304  10A8  28AC               	goto	i1l4229
 18305  10A9  35F0               	lslf	___lwmod@divisor,f
 18306  10AA  0DF1               	rlf	___lwmod@divisor+1,f
 18307  10AB  28A6               	goto	L29
 18308  10AC                     i1l4229:	
 18309  10AC  0871               	movf	___lwmod@divisor+1,w
 18310  10AD  0273               	subwf	___lwmod@dividend+1,w
 18311  10AE  1D03               	skipz
 18312  10AF  28B2               	goto	u318_25
 18313  10B0  0870               	movf	___lwmod@divisor,w
 18314  10B1  0272               	subwf	___lwmod@dividend,w
 18315  10B2                     u318_25:	
 18316  10B2  1C03               	skipc
 18317  10B3  28B8               	goto	i1l4233
 18318  10B4  0870               	movf	___lwmod@divisor,w
 18319  10B5  02F2               	subwf	___lwmod@dividend,f
 18320  10B6  0871               	movf	___lwmod@divisor+1,w
 18321  10B7  3BF3               	subwfb	___lwmod@dividend+1,f
 18322  10B8                     i1l4233:	
 18323  10B8  36F1               	lsrf	___lwmod@divisor+1,f
 18324  10B9  0CF0               	rrf	___lwmod@divisor,f
 18325  10BA  0BF4               	decfsz	___lwmod@counter,f
 18326  10BB  28AC               	goto	i1l4229
 18327  10BC                     i1l4237:	
 18328  10BC  0873               	movf	___lwmod@dividend+1,w
 18329  10BD  00F1               	movwf	?___lwmod+1
 18330  10BE  0872               	movf	___lwmod@dividend,w
 18331  10BF  00F0               	movwf	?___lwmod
 18332  10C0  0008               	return
 18333  10C1                     __end_of___lwmod:	
 18334  10C1                     PL160:	
 18335  10C1  0876               	movf	rtc_is_leap_year@year+1,w
 18336  10C2  00F3               	movwf	___lwmod@dividend+1
 18337  10C3  0875               	movf	rtc_is_leap_year@year,w
 18338  10C4  00F2               	movwf	___lwmod@dividend
 18339  10C5  0008               	return
 18340  10C6                     __end_ofPL160:	
 18341                           
 18342                           	psect	text130
 18343  1E39                     __ptext130:	
 18344 ;; *************** function _eusart_transmit_isr *****************
 18345 ;; Defined at:
 18346 ;;		line 52 in file "src/drv_eusart.c"
 18347 ;; Parameters:    Size  Location     Type
 18348 ;;		None
 18349 ;; Auto vars:     Size  Location     Type
 18350 ;;		None
 18351 ;; Return value:  Size  Location     Type
 18352 ;;                  1    wreg      void 
 18353 ;; Registers used:
 18354 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18355 ;; Tracked objects:
 18356 ;;		On entry : 1F/0
 18357 ;;		On exit  : 1E/0
 18358 ;;		Unchanged: 0/0
 18359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18364 ;;Total ram usage:        0 bytes
 18365 ;; Hardware stack levels used:    1
 18366 ;; This function calls:
 18367 ;;		Nothing
 18368 ;; This function is called by:
 18369 ;;		_app_isr
 18370 ;; This function uses a non-reentrant model
 18371 ;;
 18372                           
 18373                           
 18374                           ;psect for function _eusart_transmit_isr
 18375  1E39                     _eusart_transmit_isr:	
 18376                           
 18377                           ;drv_eusart.c: 54: if(sizeof(tx_buf) > tx_remain)
 18378                           
 18379                           ;incstack = 0
 18380                           ; Regs used in _eusart_transmit_isr: [wreg+fsr1l+fsr1h+status,2+status,0]
 18381  1E39  3040               	movlw	64
 18382  1E3A  026C               	subwf	_tx_remain,w
 18383  1E3B  1803               	skipnc
 18384  1E3C  2E4D               	goto	i1l192
 18385                           
 18386                           ;drv_eusart.c: 55: {
 18387                           ;drv_eusart.c: 56: TXREG = tx_buf[tx_tail++];
 18388  1E3D  086B               	movf	_tx_tail,w
 18389  1E3E  3E20               	addlw	(low (_tx_buf| (0+512)))& (0+255)
 18390  1E3F  0086               	movwf	6
 18391  1E40  3002               	movlw	2	; select bank4/5
 18392  1E41  0087               	movwf	7
 18393  1E42  0801               	movf	1,w
 18394  1E43  0023               	movlb	3	; select bank3
 18395  1E44  009A               	movwf	26	;volatile
 18396  1E45  0020               	movlb	0	; select bank0
 18397  1E46  3040               	movlw	64
 18398  1E47  0AEB               	incf	_tx_tail,f
 18399                           
 18400                           ;drv_eusart.c: 57: if(sizeof(tx_buf) <= tx_tail)
 18401  1E48  026B               	subwf	_tx_tail,w
 18402  1E49  1803               	btfsc	3,0
 18403                           
 18404                           ;drv_eusart.c: 58: {
 18405                           ;drv_eusart.c: 59: tx_tail = 0;
 18406  1E4A  01EB               	clrf	_tx_tail
 18407                           
 18408                           ;drv_eusart.c: 60: }
 18409                           ;drv_eusart.c: 61: tx_remain++;
 18410  1E4B  0AEC               	incf	_tx_remain,f
 18411                           
 18412                           ;drv_eusart.c: 62: }
 18413  1E4C  0008               	return
 18414  1E4D                     i1l192:	
 18415                           
 18416                           ;drv_eusart.c: 63: else
 18417                           ;drv_eusart.c: 64: {
 18418                           ;drv_eusart.c: 65: PIE1bits.TXIE = 0;
 18419  1E4D  0021               	movlb	1	; select bank1
 18420  1E4E  1211               	bcf	17,4	;volatile
 18421  1E4F  0008               	return
 18422  1E50                     __end_of_eusart_transmit_isr:	
 18423                           
 18424                           	psect	text131
 18425  1E23                     __ptext131:	
 18426 ;; *************** function _eusart_receive_isr *****************
 18427 ;; Defined at:
 18428 ;;		line 69 in file "src/drv_eusart.c"
 18429 ;; Parameters:    Size  Location     Type
 18430 ;;		None
 18431 ;; Auto vars:     Size  Location     Type
 18432 ;;  rcv             1    1[COMMON] unsigned char 
 18433 ;; Return value:  Size  Location     Type
 18434 ;;                  1    wreg      void 
 18435 ;; Registers used:
 18436 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18437 ;; Tracked objects:
 18438 ;;		On entry : 1F/0
 18439 ;;		On exit  : 0/0
 18440 ;;		Unchanged: 0/0
 18441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18446 ;;Total ram usage:        1 bytes
 18447 ;; Hardware stack levels used:    1
 18448 ;; Hardware stack levels required when called:    1
 18449 ;; This function calls:
 18450 ;;		Absolute function
 18451 ;;		_ble_receive
 18452 ;; This function is called by:
 18453 ;;		_app_isr
 18454 ;; This function uses a non-reentrant model
 18455 ;;
 18456                           
 18457                           
 18458                           ;psect for function _eusart_receive_isr
 18459  1E23                     _eusart_receive_isr:	
 18460                           
 18461                           ;drv_eusart.c: 71: if(RC1STAbits.FERR || RC1STAbits.OERR)
 18462                           
 18463                           ;incstack = 0
 18464                           ; Regs used in _eusart_receive_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18465  1E23  0023               	movlb	3	; select bank3
 18466  1E24  191D               	btfsc	29,2	;volatile
 18467  1E25  2E28               	goto	i1l200
 18468  1E26  1C9D               	btfss	29,1	;volatile
 18469  1E27  2E2A               	goto	i1l5671
 18470  1E28                     i1l200:	
 18471                           
 18472                           ;drv_eusart.c: 72: {
 18473                           ;drv_eusart.c: 73: RC1STAbits.SPEN = 0;
 18474  1E28  139D               	bcf	29,7	;volatile
 18475                           
 18476                           ;drv_eusart.c: 74: RC1STAbits.SPEN = 1;
 18477  1E29  179D               	bsf	29,7	;volatile
 18478  1E2A                     i1l5671:	
 18479                           
 18480                           ;drv_eusart.c: 75: }
 18481                           ;drv_eusart.c: 76: uint8_t rcv = RCREG;
 18482  1E2A  0819               	movf	25,w	;volatile
 18483  1E2B  00F1               	movwf	eusart_receive_isr@rcv
 18484                           
 18485                           ;drv_eusart.c: 77: if(eusart_rcv_cb != (0))
 18486  1E2C  0021               	movlb	1	; select bank1
 18487  1E2D  0868               	movf	_eusart_rcv_cb^(0+128),w
 18488  1E2E  0469               	iorwf	(_eusart_rcv_cb+1)^(0+128),w
 18489  1E2F  1903               	btfsc	3,2
 18490  1E30  0008               	return
 18491                           
 18492                           ;drv_eusart.c: 78: {
 18493                           ;drv_eusart.c: 79: eusart_rcv_cb(rcv);
 18494  1E31  0871               	movf	eusart_receive_isr@rcv,w
 18495  1E32  00F0               	movwf	ble_receive@rcv
 18496  1E33  0869               	movf	(_eusart_rcv_cb+1)^(0+128),w
 18497  1E34  008A               	movwf	10
 18498  1E35  0868               	movf	_eusart_rcv_cb^(0+128),w
 18499  1E36  000A               	callw
 18500  1E37  319E               	pagesel	$
 18501  1E38  0008               	return
 18502  1E39                     __end_of_eusart_receive_isr:	
 18503                           
 18504                           	psect	text132
 18505  0800                     __ptext132:	
 18506 ;; *************** function _ble_receive *****************
 18507 ;; Defined at:
 18508 ;;		line 273 in file "src/app_ble.c"
 18509 ;; Parameters:    Size  Location     Type
 18510 ;;  rcv             1    0[COMMON] unsigned char 
 18511 ;; Auto vars:     Size  Location     Type
 18512 ;;		None
 18513 ;; Return value:  Size  Location     Type
 18514 ;;                  1    wreg      void 
 18515 ;; Registers used:
 18516 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18517 ;; Tracked objects:
 18518 ;;		On entry : 1F/1
 18519 ;;		On exit  : 1F/0
 18520 ;;		Unchanged: 0/0
 18521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18522 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18526 ;;Total ram usage:        1 bytes
 18527 ;; Hardware stack levels used:    1
 18528 ;; This function calls:
 18529 ;;		Nothing
 18530 ;; This function is called by:
 18531 ;;		_app_init
 18532 ;;		_eusart_receive_isr
 18533 ;; This function uses a non-reentrant model
 18534 ;;
 18535                           
 18536                           
 18537                           ;psect for function _ble_receive
 18538  0800                     _ble_receive:	
 18539                           
 18540                           ;app_ble.c: 275: rx_buf[index++] = rcv;
 18541                           
 18542                           ;incstack = 0
 18543                           ; Regs used in _ble_receive: [wreg+fsr1l+fsr1h+status,2+status,0]
 18544  0800  0020               	movlb	0	; select bank0
 18545  0801  0864               	movf	_index,w
 18546  0802  3EA0               	addlw	(low (_rx_buf| (0+256)))& (0+255)
 18547  0803  0086               	movwf	6
 18548  0804  3001               	movlw	1	; select bank3/4
 18549  0805  0087               	movwf	7
 18550  0806  0870               	movf	ble_receive@rcv,w
 18551  0807  0081               	movwf	1
 18552  0808  0AE4               	incf	_index,f
 18553                           
 18554                           ;app_ble.c: 276: checksum ^= rcv;
 18555  0809  0870               	movf	ble_receive@rcv,w
 18556  080A  06E3               	xorwf	_checksum,f
 18557                           
 18558                           ;app_ble.c: 277: if(index >= sizeof(rx_buf))
 18559  080B  3050               	movlw	80
 18560  080C  0264               	subwf	_index,w
 18561  080D  1C03               	skipc
 18562  080E  0008               	return
 18563                           
 18564                           ;app_ble.c: 278: {
 18565                           ;app_ble.c: 279: index = 0;
 18566  080F  01E4               	clrf	_index
 18567                           
 18568                           ;app_ble.c: 280: checksum = 0;
 18569  0810  01E3               	clrf	_checksum
 18570  0811  0008               	return
 18571  0812                     __end_of_ble_receive:	
 18572  007E                     btemp	set	126	;btemp
 18573  007E                     int$flags	set	126
 18574  007E                     wtemp0	set	126


Data Sizes:
    Strings     79
    Constant    0
    Data        53
    BSS         182
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      77
    BANK1            80     55      78
    BANK2            80      0      53
    BANK3            80      0      80
    BANK4            80      0      64
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           15      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 17
		 -> ble_check_devid@dev(BANK0[17]), ble_send_cmd@ack(BANK0[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 17
		 -> ble_check_devid@dev(BANK0[17]), ble_send_cmd@ack(BANK0[8]), 

    memset@p1	PTR void  size(2) Largest target is 113
		 -> m_led_para(BIGRAM[113]), 

    memset@p	PTR unsigned char  size(2) Largest target is 113
		 -> m_led_para(BIGRAM[113]), 

    led_set_time@ptime	PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_set_preview@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_set_pro@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_set_cycle@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_set_bright@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_pro_process@ep	PTR struct . size(2) Largest target is 61
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_pro_process@sp	PTR struct . size(2) Largest target is 61
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_pro_process@p2	PTR struct . size(2) Largest target is 61
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_pro_process@p1	PTR struct . size(2) Largest target is 61
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_auto_process@p	PTR struct . size(2) Largest target is 107
		 -> m_led_para.ble_para.auto_para(UNKNOWN), m_led_para.ble_para(UNKNOWN), 

    sp__memset	PTR void  size(2) Largest target is 113
		 -> m_led_para(BIGRAM[113]), 

    led_load_duty	PTR FTN(unsigned int ,)void [4] size(2) Largest target is 1
		 -> pwm5_load_duty(), pwm4_load_duty(), pwm3_load_duty(), pwm1_load_duty(), 

    led_state_cb	PTR FTN(unsigned char ,enum E8242,)void [4] size(2) Largest target is 1
		 -> led_state_ble_cb(), led_state_night_cb(), led_state_day_cb(), led_state_off_cb(), 

    ble_send_data@p	PTR struct . size(2) Largest target is 113
		 -> m_led_para.ble_para(UNKNOWN), m_led_para(BIGRAM[113]), 

    ble_send_cmd@cmd	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_4(CODE[15]), STR_3(CODE[11]), STR_2(CODE[34]), STR_1(CODE[19]), 

    decrease@psrc	const PTR unsigned int  size(2) Largest target is 113
		 -> m_led_para.ble_para.manual_para.mBright(UNKNOWN), m_led_para.ble_para.manual_para(UNKNOWN), m_led_para(BIGRAM[113]), 

    increase@psrc	const PTR unsigned int  size(2) Largest target is 113
		 -> m_led_para.ble_para.manual_para.mBright(UNKNOWN), m_led_para.ble_para.manual_para(UNKNOWN), m_led_para(BIGRAM[113]), 

    rtc_set@ptime	PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    key_init@cb	PTR FTN(unsigned char ,enum E8166,)void  size(2) Largest target is 1
		 -> led_touch_cb(), 

    key_func	PTR FTN(unsigned char ,enum E8166,)void  size(2) Largest target is 1
		 -> led_touch_cb(), Absolute function(), 

    eusart_init@cb	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> ble_receive(), 

    eusart_rcv_cb	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> ble_receive(), Absolute function(), 

    eeprom_read_buffer@pbuf	PTR unsigned char  size(2) Largest target is 113
		 -> m_led_para(BIGRAM[113]), 

    eeprom_write_buffer@pbuf	PTR unsigned char  size(2) Largest target is 113
		 -> m_led_para(BIGRAM[113]), 

    tmr2_init@cb	PTR FTN()void  size(2) Largest target is 1
		 -> tmr2_isr_callback(), 

    tmr2_isr_cb	PTR FTN()void  size(2) Largest target is 1
		 -> tmr2_isr_callback(), Absolute function(), 

    tmr0_init@cb	PTR FTN()void  size(2) Largest target is 1
		 -> rtc_process(), 

    tmr0_isr_cb	PTR FTN()void  size(2) Largest target is 1
		 -> rtc_process(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _app_isr in COMMON

    _led_process->_led_ramp
    _led_ramp->_pwm5_load_duty
    _key_scan->_key_action
    _key_action->_led_touch_cb
    _led_touch_cb->_led_state_ble_cb
    _led_touch_cb->_led_state_day_cb
    _led_touch_cb->_led_state_night_cb
    _led_touch_cb->_led_state_off_cb
    _led_state_off_short_press_cb->i1_led_update_day_bright
    _led_state_off_long_press_cb->i1_led_update_day_bright
    _led_state_night_long_press_cb->_led_update_night_status
    _led_state_night_cont_press_cb->i1_decrease
    _led_state_night_cont_press_cb->i1_increase
    _led_state_day_short_press_cb->i1_led_update_night_bright
    _led_state_day_long_press_cb->_led_update_day_status
    _led_state_day_cont_press_cb->i1_decrease
    _led_state_day_cont_press_cb->i1_increase
    _led_state_ble_short_press_cb->i1_led_turnoff
    _rtc_process->_rtc_is_leap_year
    _rtc_is_leap_year->___lwmod
    _eusart_receive_isr->_ble_receive

Critical Paths under _main in BANK0

    _led_second_cb->_led_pro_process
    _led_save_para->_eeprom_write_buffer
    _eeprom_write_buffer->_eeprom_write
    _led_pro_process->_led_calc_bright
    _led_find_device->_led_turnoff
    _led_find_device->_led_turnon_max
    _led_auto_process->_led_calc_bright
    _led_calc_bright->___lldiv
    ___lldiv->___lmul
    _led_init->_led_para_init
    _led_para_init->_led_para_default
    _led_para_default->_memset
    _eeprom_read_buffer->_eeprom_read
    _ble_process->_ble_decode
    _ble_decode->_led_set_custom
    _led_set_time->_led_turnon_ramp
    _led_set_pro->___bmul
    _led_set_power->_led_turnon_ramp
    _led_set_mode->_led_turnon_ramp
    _led_set_custom->___lwdiv
    _led_increase->_increase
    _led_decrease->_decrease
    _ble_send_data->___bmul
    _ble_ota_ack->_ble_transmit_start
    _ble_ota_ack->_eusart_write
    _ble_init->_ble_check_devid
    _ble_check_devid->_ble_send_cmd
    _ble_send_cmd->_strlen
    _app_init->_eusart_init
    _app_init->_key_init
    _app_init->_tmr0_init
    _app_init->_tmr2_init

Critical Paths under _app_isr in BANK0

    _tmr2_isr_callback->_key_scan
    _key_scan->_key_action

Critical Paths under _main in BANK1

    _main->_led_second_cb
    _led_second_cb->_led_auto_process

Critical Paths under _app_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _app_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _app_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _app_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _app_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _app_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _app_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _app_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _app_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _app_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _app_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _app_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   59995
                           _app_init
                           _ble_init
                        _ble_process
                           _led_init
                      _led_second_cb
                           _rtc_init
                   _rtc_second_ready
 ---------------------------------------------------------------------------------
 (1) _rtc_second_ready                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rtc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_second_cb                                        3     3      0   40184
                                             52 BANK1      3     3      0
                             ___wmul
                   _led_auto_process
                    _led_find_device
                        _led_preview
                    _led_pro_process
                      _led_save_para
                       _rtc_get_hour
                     _rtc_get_minute
                     _rtc_get_second
 ---------------------------------------------------------------------------------
 (2) _rtc_get_second                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_get_minute                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_get_hour                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _led_save_para                                        0     0      0     494
                _eeprom_write_buffer
 ---------------------------------------------------------------------------------
 (3) _eeprom_write_buffer                                  5     2      3     494
                                              5 BANK0      5     2      3
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         3     2      1     173
                                              2 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _led_pro_process                                     52    49      3   16100
                                             42 BANK0     11     8      3
                                              0 BANK1     41    41      0
                             ___wmul
                    _led_calc_bright
 ---------------------------------------------------------------------------------
 (2) _led_preview                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _led_find_device                                      0     0      0     260
                        _led_turnoff
                     _led_turnon_max
 ---------------------------------------------------------------------------------
 (3) _led_turnon_max                                       1     1      0     130
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _led_auto_process                                    61    58      3   17811
                                             42 BANK0      9     6      3
                                              0 BANK1     52    52      0
                            ___awmod
                             ___lmul
                             ___wmul
                    _led_calc_bright
 ---------------------------------------------------------------------------------
 (3) _led_calc_bright                                     15     8      7    7854
                                             27 BANK0     15     8      7
                            ___lldiv
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     906
                                              2 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     549
                                             14 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     618
                                              2 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _led_init                                             0     0      0    7752
                      _led_para_init
 ---------------------------------------------------------------------------------
 (2) _led_para_init                                       12    12      0    7752
                                             24 BANK0     12    12      0
                             ___wmul
                 _eeprom_read_buffer
                   _led_indicate_ble
                   _led_indicate_day
                 _led_indicate_night
                   _led_indicate_off
                   _led_para_default
                        _led_turnoff
                   _led_turnoff_ramp
                    _led_turnon_ramp
              _led_update_day_bright
            _led_update_night_bright
 ---------------------------------------------------------------------------------
 (3) _led_update_night_bright                              5     5      0     200
                                              2 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _led_update_day_bright                                5     5      0     112
                                              2 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _led_turnoff                                          1     1      0     130
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _led_para_default                                    14    14      0     604
                                             10 BANK0     14    14      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     288
                                              2 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _led_indicate_off                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_indicate_night                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_indicate_day                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _eeprom_read_buffer                                   6     3      3     264
                                              3 BANK0      6     3      3
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          1     1      0      22
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ble_process                                          0     0      0   10038
                         _ble_decode
               _ble_ready_to_receive
               _ble_receive_complete
                  _ble_receive_start
                   _ble_receive_stop
 ---------------------------------------------------------------------------------
 (2) _ble_receive_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ble_receive_start                                    1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ble_receive_complete                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ble_ready_to_receive                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ble_decode                                           2     2      0   10038
                                             26 BANK0      2     2      0
                             ___wmul
                        _ble_ota_ack
                      _ble_send_data
                       _led_decrease
                       _led_increase
                     _led_set_bright
                     _led_set_custom
                      _led_set_cycle
                       _led_set_mode
                      _led_set_power
                    _led_set_preview
                        _led_set_pro
                       _led_set_time
                    _led_start_flash
                  _led_start_preview
                   _led_stop_preview
 ---------------------------------------------------------------------------------
 (3) _led_stop_preview                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_start_preview                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_start_flash                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_set_time                                         1     1      0     331
                                              7 BANK0      1     1      0
                   _led_indicate_ble
                _led_prepare_to_save
                   _led_turnoff_ramp
                    _led_turnon_ramp
                            _rtc_set
 ---------------------------------------------------------------------------------
 (4) _rtc_set                                              2     2      0     121
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _led_indicate_ble                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_set_pro                                         11    11      0     385
                                              5 BANK0     11    11      0
                             ___bmul
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (3) _led_set_preview                                      6     6      0     275
                                              2 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) _led_set_power                                        1     1      0     202
                                              7 BANK0      1     1      0
                _led_prepare_to_save
                   _led_turnoff_ramp
                    _led_turnon_ramp
 ---------------------------------------------------------------------------------
 (3) _led_set_mode                                         2     2      0     246
                                              7 BANK0      2     2      0
                _led_prepare_to_save
                   _led_turnoff_ramp
                    _led_turnon_ramp
 ---------------------------------------------------------------------------------
 (3) _led_turnon_ramp                                      5     5      0      90
                                              2 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _led_turnoff_ramp                                     1     1      0      68
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _led_set_cycle                                       11    11      0     143
                                              2 BANK0     11    11      0
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (3) _led_set_custom                                      17    17      0     424
                                              9 BANK0     17    17      0
                            ___lwdiv
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              2 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _led_set_bright                                       8     8      0     275
                                              2 BANK0      8     8      0
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (3) _led_increase                                         6     5      1     770
                                             11 BANK0      6     5      1
                           _increase
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (4) _increase                                             9     4      5     596
                                              2 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (3) _led_decrease                                         6     5      1     770
                                             11 BANK0      6     5      1
                           _decrease
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (4) _led_prepare_to_save                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _decrease                                             9     4      5     596
                                              2 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (3) _ble_send_data                                        9     9      0     765
                                              5 BANK0      9     9      0
                             ___bmul
                 _ble_transmit_start
                  _ble_transmit_stop
                       _eusart_write
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               3     2      1     220
                                              2 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _ble_ota_ack                                          0     0      0      66
                 _ble_transmit_start
                  _ble_transmit_stop
                       _eusart_write
 ---------------------------------------------------------------------------------
 (4) _ble_transmit_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ble_transmit_start                                   1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    5386
                                              2 BANK0      6     2      4
                       _rtc_get_hour (ARG)
 ---------------------------------------------------------------------------------
 (1) _ble_init                                             2     2      0    1677
                                             45 BANK0      2     2      0
                    _ble_check_devid
                       _ble_send_cmd
 ---------------------------------------------------------------------------------
 (2) _ble_check_devid                                     23    23      0     995
                                             22 BANK0     23    23      0
                       _ble_send_cmd
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ble_send_cmd                                        15    13      2     682
                                              7 BANK0     15    13      2
                       _eusart_write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     2      3     150
                                              2 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (4) _eusart_write                                         1     1      0      66
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0     344
                        _eusart_init
                          _gpio_init
                           _key_init
                           _osc_init
                          _pwm1_init
                          _pwm2_init
                          _pwm3_init
                          _pwm4_init
                          _pwm5_init
                          _tmr0_init
                          _tmr2_init
 ---------------------------------------------------------------------------------
 (2) _tmr2_init                                            2     0      2      86
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            2     0      2      86
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _pwm5_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm4_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm3_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _osc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _key_init                                             2     0      2      86
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_init                                          2     0      2      86
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _app_isr                                              0     0      0    4102
                 _eusart_receive_isr
                _eusart_transmit_isr
                           _tmr0_isr
                           _tmr2_isr
 ---------------------------------------------------------------------------------
 (6) _tmr2_isr                                             0     0      0    3425
                   Absolute function *
                  _tmr2_isr_callback *
 ---------------------------------------------------------------------------------
 (7) _tmr2_isr_callback                                    0     0      0    3425
                           _key_scan
                        _led_process
 ---------------------------------------------------------------------------------
 (8) _led_process                                          0     0      0     488
                           _led_ramp
 ---------------------------------------------------------------------------------
 (9) _led_ramp                                             7     7      0     488
                                              4 COMMON     7     7      0
                     _pwm1_load_duty *
                     _pwm3_load_duty *
                     _pwm4_load_duty *
                     _pwm5_load_duty *
 ---------------------------------------------------------------------------------
 (10) _pwm5_load_duty                                      4     2      2      87
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _pwm4_load_duty                                      2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _pwm3_load_duty                                      2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _pwm1_load_duty                                      2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _key_scan                                             1     1      0    2937
                                              1 BANK0      1     1      0
                         _key_action
                           _key_read
 ---------------------------------------------------------------------------------
 (9) _key_read                                             1     1      0      68
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _key_action                                           2     1      1    2758
                                             13 COMMON     1     0      1
                                              0 BANK0      1     1      0
                   Absolute function *
                       _led_touch_cb *
 ---------------------------------------------------------------------------------
 (10) _led_touch_cb                                        2     0      2    2458
                                             11 COMMON     2     0      2
                   _led_state_ble_cb *
                   _led_state_day_cb *
                 _led_state_night_cb *
                   _led_state_off_cb *
 ---------------------------------------------------------------------------------
 (11) _led_state_off_cb                                    2     0      2     268
                                              9 COMMON     2     0      2
        _led_state_off_cont_press_cb
        _led_state_off_long_press_cb
           _led_state_off_release_cb
       _led_state_off_short_press_cb
 ---------------------------------------------------------------------------------
 (12) _led_state_off_short_press_cb                        1     1      0     112
                                              5 COMMON     1     1      0
                 i1_led_indicate_day
              i1_led_prepare_to_save
            i1_led_update_day_bright
 ---------------------------------------------------------------------------------
 (12) _led_state_off_release_cb                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_off_long_press_cb                         2     2      0     112
                                              5 COMMON     2     2      0
                 i1_led_indicate_day
            i1_led_update_day_bright
 ---------------------------------------------------------------------------------
 (13) i1_led_indicate_day                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_off_cont_press_cb                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _led_state_night_cb                                  2     0      2     864
                                              9 COMMON     2     0      2
      _led_state_night_cont_press_cb
      _led_state_night_long_press_cb
         _led_state_night_release_cb
     _led_state_night_short_press_cb
 ---------------------------------------------------------------------------------
 (12) _led_state_night_short_press_cb                      1     1      0       0
                                              0 COMMON     1     1      0
                 i1_led_indicate_ble
              i1_led_prepare_to_save
 ---------------------------------------------------------------------------------
 (13) i1_led_indicate_ble                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_night_release_cb                          0     0      0       0
              i1_led_prepare_to_save
 ---------------------------------------------------------------------------------
 (12) _led_state_night_long_press_cb                       0     0      0       0
            _led_update_night_status
 ---------------------------------------------------------------------------------
 (13) _led_update_night_status                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _led_state_night_cont_press_cb                       0     0      0     820
                         i1_decrease
                         i1_increase
          i1_led_update_night_bright
 ---------------------------------------------------------------------------------
 (11) _led_state_day_cb                                    2     0      2     976
                                              9 COMMON     2     0      2
        _led_state_day_cont_press_cb
        _led_state_day_long_press_cb
           _led_state_day_release_cb
       _led_state_day_short_press_cb
 ---------------------------------------------------------------------------------
 (12) _led_state_day_short_press_cb                        1     1      0     200
                                              5 COMMON     1     1      0
               i1_led_indicate_night
              i1_led_prepare_to_save
          i1_led_update_night_bright
 ---------------------------------------------------------------------------------
 (13) i1_led_update_night_bright                           5     5      0     200
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (13) i1_led_indicate_night                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_day_release_cb                            0     0      0       0
              i1_led_prepare_to_save
 ---------------------------------------------------------------------------------
 (12) _led_state_day_long_press_cb                         0     0      0       0
              _led_update_day_status
 ---------------------------------------------------------------------------------
 (13) _led_update_day_status                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _led_state_day_cont_press_cb                         0     0      0     732
                         i1_decrease
                         i1_increase
            i1_led_update_day_bright
 ---------------------------------------------------------------------------------
 (13) i1_led_update_day_bright                             5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (13) i1_increase                                          9     4      5     310
                                              0 COMMON     9     4      5
 ---------------------------------------------------------------------------------
 (13) i1_decrease                                          9     4      5     310
                                              0 COMMON     9     4      5
 ---------------------------------------------------------------------------------
 (11) _led_state_ble_cb                                    2     0      2     220
                                              9 COMMON     2     0      2
        _led_state_ble_cont_press_cb
        _led_state_ble_long_press_cb
           _led_state_ble_release_cb
       _led_state_ble_short_press_cb
 ---------------------------------------------------------------------------------
 (12) _led_state_ble_short_press_cb                        1     1      0      90
                                              1 COMMON     1     1      0
                 i1_led_indicate_off
              i1_led_prepare_to_save
                      i1_led_turnoff
 ---------------------------------------------------------------------------------
 (13) i1_led_turnoff                                       1     1      0      90
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_led_prepare_to_save                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_led_indicate_off                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_ble_release_cb                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_ble_long_press_cb                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_ble_cont_press_cb                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _tmr0_isr                                             0     0      0     567
                   Absolute function *
                        _rtc_process *
 ---------------------------------------------------------------------------------
 (7) _rtc_process                                          0     0      0     567
                   _rtc_is_leap_year
 ---------------------------------------------------------------------------------
 (8) _rtc_is_leap_year                                     2     0      2     567
                                              5 COMMON     2     0      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     415
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (6) _eusart_transmit_isr                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _eusart_receive_isr                                   1     1      0     110
                                              1 COMMON     1     1      0
                   Absolute function *
                        _ble_receive *
 ---------------------------------------------------------------------------------
 (7) _ble_receive                                          1     0      1      87
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _eusart_init
     _gpio_init
     _key_init
     _osc_init
     _pwm1_init
     _pwm2_init
     _pwm3_init
     _pwm4_init
     _pwm5_init
     _tmr0_init
     _tmr2_init
   _ble_init
     _ble_check_devid
       _ble_send_cmd
         _eusart_write
         _strlen
       _strlen
     _ble_send_cmd
       _eusart_write
       _strlen
   _ble_process
     _ble_decode
       ___wmul
         _rtc_get_hour (ARG)
       _ble_ota_ack
         _ble_transmit_start
         _ble_transmit_stop
         _eusart_write
       _ble_send_data
         ___bmul
         _ble_transmit_start
         _ble_transmit_stop
         _eusart_write
       _led_decrease
         _decrease
         _led_prepare_to_save
       _led_increase
         _increase
         _led_prepare_to_save
       _led_set_bright
         _led_prepare_to_save
       _led_set_custom
         ___lwdiv
         _led_prepare_to_save
       _led_set_cycle
         _led_prepare_to_save
       _led_set_mode
         _led_prepare_to_save
         _led_turnoff_ramp
         _led_turnon_ramp
       _led_set_power
         _led_prepare_to_save
         _led_turnoff_ramp
         _led_turnon_ramp
       _led_set_preview
       _led_set_pro
         ___bmul
         _led_prepare_to_save
       _led_set_time
         _led_indicate_ble
         _led_prepare_to_save
         _led_turnoff_ramp
         _led_turnon_ramp
         _rtc_set
       _led_start_flash
       _led_start_preview
       _led_stop_preview
     _ble_ready_to_receive
     _ble_receive_complete
     _ble_receive_start
     _ble_receive_stop
   _led_init
     _led_para_init
       ___wmul
         _rtc_get_hour (ARG)
       _eeprom_read_buffer
         _eeprom_read
       _led_indicate_ble
       _led_indicate_day
       _led_indicate_night
       _led_indicate_off
       _led_para_default
         _memset
       _led_turnoff
       _led_turnoff_ramp
       _led_turnon_ramp
       _led_update_day_bright
       _led_update_night_bright
   _led_second_cb
     ___wmul
       _rtc_get_hour (ARG)
     _led_auto_process
       ___awmod
       ___lmul
       ___wmul
         _rtc_get_hour (ARG)
       _led_calc_bright
         ___lldiv
           ___lmul (ARG)
         ___lmul
         ___wmul
           _rtc_get_hour (ARG)
     _led_find_device
       _led_turnoff
       _led_turnon_max
     _led_preview
     _led_pro_process
       ___wmul
         _rtc_get_hour (ARG)
       _led_calc_bright
         ___lldiv
           ___lmul (ARG)
         ___lmul
         ___wmul
           _rtc_get_hour (ARG)
     _led_save_para
       _eeprom_write_buffer
         _eeprom_write
     _rtc_get_hour
     _rtc_get_minute
     _rtc_get_second
   _rtc_init
   _rtc_second_ready

 _app_isr (ROOT)
   _eusart_receive_isr
     Absolute function(Fake) *
     _ble_receive *
   _eusart_transmit_isr
   _tmr0_isr
     Absolute function(Fake) *
     _rtc_process *
       _rtc_is_leap_year
         ___lwmod
   _tmr2_isr
     Absolute function(Fake) *
     _tmr2_isr_callback *
       _key_scan
         _key_action
           Absolute function(Fake) *
           _led_touch_cb *
             _led_state_ble_cb *
               _led_state_ble_cont_press_cb
               _led_state_ble_long_press_cb
               _led_state_ble_release_cb
               _led_state_ble_short_press_cb
                 i1_led_indicate_off
                 i1_led_prepare_to_save
                 i1_led_turnoff
             _led_state_day_cb *
               _led_state_day_cont_press_cb
                 i1_decrease
                 i1_increase
                 i1_led_update_day_bright
               _led_state_day_long_press_cb
                 _led_update_day_status
               _led_state_day_release_cb
                 i1_led_prepare_to_save
               _led_state_day_short_press_cb
                 i1_led_indicate_night
                 i1_led_prepare_to_save
                 i1_led_update_night_bright
             _led_state_night_cb *
               _led_state_night_cont_press_cb
                 i1_decrease
                 i1_increase
                 i1_led_update_night_bright
               _led_state_night_long_press_cb
                 _led_update_night_status
               _led_state_night_release_cb
                 i1_led_prepare_to_save
               _led_state_night_short_press_cb
                 i1_led_indicate_ble
                 i1_led_prepare_to_save
             _led_state_off_cb *
               _led_state_off_cont_press_cb
               _led_state_off_long_press_cb
                 i1_led_indicate_day
                 i1_led_update_day_bright
               _led_state_off_release_cb
               _led_state_off_short_press_cb
                 i1_led_indicate_day
                 i1_led_prepare_to_save
                 i1_led_update_day_bright
         _key_read
       _led_process
         _led_ramp
           _pwm1_load_duty *
           _pwm3_load_duty *
           _pwm4_load_duty *
           _pwm5_load_duty *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     35      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     37      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      35       9       66.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     16E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11               F      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     16E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 10 16:03:02 2018

          __end_ofi1_led_prepare_to_save 0F4D                      ?_eusart_receive_isr 0070  
                          ?_led_decrease 002B                                        pc 0002  
                         ___bmul@product 0023                                       PL2 144C  
                                     PL4 0F72                                       PL6 07F6  
                                     PL8 1753                            _led_second_cb 14B9  
                    ___wmul@multiplicand 0024                            eusart_init@cb 0022  
                __size_of_pwm3_load_duty 0006                     ?_eeprom_write_buffer 0025  
                          _led_save_para 1708                                      PL10 06AC  
                                    PL20 06B4                                      PL12 11A3  
                                    PL30 1779                                      PL22 1461  
                                    PL14 0F7D                                      PL40 17B1  
                                    PL32 0F85                                      PL24 06CB  
                                    PL16 175B                                      PL50 06E2  
                                    PL42 06DB                                      PL34 178D  
                                    PL26 06D5                                      PL18 1770  
                                    PL60 0F8B                                      PL52 06F1  
                                    PL44 17BB                                      PL36 1FAC  
                                    PL28 146B                                      PL70 0719  
                                    PL62 17D0                                      PL54 0E0C  
                                    PL46 0C0B                                      PL38 17A0  
                                    PL80 0FA1                                      PL72 071F  
                                    PL64 17DB                                      PL56 06FA  
                                    PL48 17C1                                      PL90 0FAB  
                                    PL82 0C1F                                      PL74 0C15  
                                    PL66 147F                                      PL58 0707  
                                    PL92 11B4                                      PL84 17E1  
                                    PL76 1489                                      PL68 0713  
                                    PL94 0FB1                                      PL86 0725  
                                    PL78 0F97                                      PL96 1FBE  
                                    PL88 1493                                      PL98 072A  
              __end_of_ble_transmit_stop 0B5E                                      l133 1749  
                                    l414 0B54                                      l600 0481  
                                    l186 0B34                                      l610 04FA  
                                    l611 0502                                      l612 050A  
                                    l509 0CDF                                      l613 0512  
                                    l614 051A                                      l615 0522  
                                    l472 0D01                                      l616 052A  
                             i1_decrease 0E66                                      l617 0532  
                                    l609 04F2                                      l643 05F1  
                                    l388 0A73                             ?_led_set_pro 0070  
                                    l669 1258                                      l598 0465  
                                    l599 0473                                      l877 16E1  
                          _led_set_cycle 0DDA                                      _PR2 001E  
                      led_set_bright@val 0027                             ?_led_preview 0070  
                 led_para_default@i_1206 0037                             ?_led_process 0070  
                 led_para_default@i_1199 0036                   eeprom_write_buffer@len 0027  
                          _led_set_power 0FE3                            ?_led_increase 002B  
                           ___awmod@sign 0027                        ??_led_turnon_ramp 0022  
                                    wreg 0009                             ?_led_turnoff 0070  
                __size_of_pwm4_load_duty 0006     __size_of_led_state_off_long_press_cb 001B  
                                   S6601 1822                     ??_eusart_receive_isr 0071  
                                   PL100 0731                                     PL110 149C  
                                   PL102 11B9                                     PL120 074C  
                                   PL112 0FB9                                     PL104 0739  
                                   PL130 0FC4                                     PL122 0FBF  
                                   PL114 0740                                     PL106 0C26  
                                   PL140 14A9                                     PL132 0FC9  
                                   PL124 14A3                                     PL116 078C  
                                   PL108 17EA                                     PL150 1FDB  
                                   PL142 11C1                                     PL134 0FCE  
                                   PL126 1FC6                                     PL118 0747  
                                   PL160 10C1                                     PL152 14B4  
                                   PL144 0751                                     PL136 0FD4  
                                   PL128 0792                                     PL154 0FDE  
                                   PL146 14AF                                     PL138 0FD9  
                                   PL156 17F6                                     PL148 17F1  
                                   PL158 17FB                             rtc_set@ptime 0022  
                             i1_increase 0E88                                     l1137 08F6  
                                   l1234 13A2                                     l4051 0B6C  
                                   l4027 0D56                                     l4053 0B74  
                                   l4213 0DD1                                     l4205 0DC2  
                                   l5009 0B98                                     l4217 0DD5  
                                   l4081 05F4                                     l4073 1190  
                                   l4403 0AFF                                     l6011 0C42  
                                   l6003 0C2C                                     l4157 0B60  
                                   l4413 0B13                                     l4405 0B10  
                                   l4093 069B                                     l6013 0C44  
                                   l4069 1199                                     l6101 0430  
               led_update_night_bright@i 0026                                     l4343 0A7A  
                                   l4351 0A88                                     l4415 0B23  
                                   l6023 0C56                                     l6007 0C36  
                                   l4337 0A60                                     l4361 0AAB  
                                   l4505 1F04                                     l6033 0C66  
                                   l4523 0D74                                     l4451 0D21  
                                   l4611 1036                                     l6043 0C7C  
                                   l6027 0C5C                                     l6019 0C4E  
                                   l4259 0611                                     l6211 059A  
                                   l6123 048E                                     l6107 0442  
                                   l4349 0A87                                     l4453 0D25  
                                   l4605 100F                                     l6053 0C96  
                                   l6221 05BF                                     l6205 0573  
                                   l6133 04A0                                     l4359 0A92  
                                   l4383 0AC8                                     l4455 0D33  
                                   l4623 0E09                                     l6063 0CA5  
                                   l6047 0C89                                     l6039 0C6F  
                                   l4703 112A                                     l6143 04CA  
                                   l6311 12C0                                     l4385 0AD8  
                                   l6057 0C9C                                     l4721 1172  
                                   l6241 05D3                                     l6233 05CD  
                                   l6217 059B                                     l6137 04C9  
                                   l4395 0AF4                                     l4547 0DDE  
                                   l4635 0D46                                     l4643 0E01  
                                   l4619 0E05                                     l6067 0CAB  
                                   l6147 04E0                                     l4549 0DFF  
                                   l4477 0FFB                                     l4637 0D49  
                                   l6077 0CCB                                     l6237 05D0  
                                   l6229 05CA                                     l6253 05E2  
                                   l6341 1362                                     l4479 0FFE  
                                   l4655 087D                                     l6095 0CF6  
                                   l6247 05DF                                     l6183 053B  
                                   l6335 131F                                     l6319 12DC  
                                   l6343 127F                                     l6431 15FB  
                                   l4657 089E                                     l4681 10F2  
                                   l6249 05E0                                     l6177 053A  
                                   l6361 1526                                     l4499 1ED1  
                                   l4763 066C                                     l6283 1252  
                                   l6427 15E4                                     l6371 1537  
                                   l3981 0B29                                     l5717 0A1D  
                                   l6525 0BC6                                     l4749 0644  
                                   l6189 055F                                     l6437 161B  
                                   l6509 1708                                     l4695 1117  
                                   l4767 0685                                     l6199 0572  
                                   l6295 127E                                     l6471 166D  
                                   l6391 1538                                     l6543 14D8  
                                   l4769 0693                                     l6393 15B1  
                                   l6553 14F9                        ?_led_turnoff_ramp 0070  
                                   l3995 0B43                                     l5843 16C1  
                                   l6467 166A                            ?_led_set_mode 0070  
                                   l5917 0636                                     l5861 13AC  
                                   l5933 13F6                                     l6469 161D  
                                   l6389 15AF                                     l6397 15B3  
                                   l6549 14E3                                     l6557 150D  
                                   l5847 16C7                                     l5943 16F2  
                                   l6479 1672                                     l5963 136F  
                                   l5891 1443                                     l5939 1408  
                                   l4989 0BA3                                     l5949 16F3  
                                   l4999 0BAF                                     l5975 1381  
                                   l5983 1391                                     l5967 1376  
                                   l5887 143D                                     l5879 1420  
                                   l5897 171F                                     l5987 1399  
                                   l5979 138D                                     STR_1 1844  
                                   STR_2 1800                                     STR_3 1866  
                                   STR_4 1857                           _led_set_bright 1EC2  
                          ?_led_set_time 0070                        led_set_cycle@pbuf 002B  
                                   _LATA 010C                                     _LATB 010D  
                                   _LATC 010E                                     u3310 0A53  
                                   u3145 0DCA                                     u4070 0B86  
                                   u2925 07E8                                     u6205 12B2  
                                   u2935 0862                                     u6215 12BC  
                                   u6225 12D0                                     u6235 12DA  
                                   u6315 1597                                     u5445 1432  
                                   u6245 12E9                                     u5545 1387  
                                   u6345 15E2                                     u6195 12A9  
                                   u6355 1603                                     u6365 165A  
                                   u6607 0B58                                     u6375 1664  
                                   u6617 0B4E                                     u6385 162C  
                                   u6627 09F4                                     u6637 0A01  
                                   u6647 0A11                                     u6657 0A21  
                                   u6577 0C05                                     u6667 0A31  
                                   u6587 0BE3                                     u6677 0A41  
                                   u6597 0CED                                     u6687 0BB0  
                                   u6697 0A89                                     _TMR2 001D  
                                   _WPUA 020C                                     _WPUB 020D  
                                   _WPUC 020E                       led_set_bright@pbuf 0026  
                         ??_eeprom_write 0023                           _led_set_custom 0D69  
                eeprom_write_buffer@addr 0028                  __size_of_pwm5_load_duty 0013  
                eeprom_write_buffer@pbuf 0025                       ??_led_turnoff_ramp 0022  
                                   _main 08E9                                     fsr0h 0005  
                                   fsr1h 0007                                     indf0 0000  
                                   fsr0l 0004                                     indf1 0001  
                                   fsr1l 0006                                     btemp 007E  
                          ?_led_touch_cb 007B               led_pro_process@point_count 00BE  
   __size_of_led_state_day_cont_press_cb 0010                                     start 042E  
                   __end_of_ble_send_cmd 0A97                           ?_led_para_init 0070  
                      ___bmul@multiplier 0024                       i1_led_indicate_ble 0E30  
                     i1_led_indicate_day 0F0D                       i1_led_indicate_off 077E  
                         ??_led_decrease 002C             __size_of_eusart_transmit_isr 0017  
                         ?_led_second_cb 0070                      pwm5_load_duty@value 0070  
                  ??_eeprom_write_buffer 0028                           ?_led_save_para 0070  
                      led_set_custom@idx 0038                      ?i1_led_indicate_ble 0070  
                    ?i1_led_indicate_day 0070                      ?i1_led_indicate_off 0070  
              __size_of_rtc_second_ready 0006                           ?_led_set_cycle 0070  
                                  ?_main 0070                          __end_of___awmod 139E  
                        __end_of___lldiv 144C                                    _T2CON 001F  
                         ?_led_set_power 0070                           ??_led_increase 002C  
                        __end_of___lwdiv 0DDA                                    i1l200 1E28  
                                  i1l192 1E4D                          __end_of___lwmod 10C1  
                                  i1l266 106D                                    i1l816 0E45  
                                  i1l843 1E9B                                    i1l852 076B  
                                  i1l780 0F4E                                    i1l855 076D  
                                  i1l791 0EFD                                    i1l849 076C  
                                  i1l777 0F4D                                    i1l866 076A  
                                  _RCREG 0199               i1led_update_night_bright@i 0074  
                                  _OSCEN 091D                                    _TMR0H 0016  
                                  _TMR0L 0015                                    _PORTC 000E  
                        _ble_check_devid 0B7B                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
                                  _TXREG 019A               __end_of_led_state_night_cb 1E9C  
                    ___lmul@multiplicand 0026                          __end_of_app_isr 042E  
       ??_led_state_night_short_press_cb 0070          ?_led_state_night_short_press_cb 0070  
               i1led_update_day_bright@i 0074                   __end_of_led_set_bright 1F0B  
           __end_ofi1_led_indicate_night 0EBA                          _led_set_preview 1006  
                                  _index 0064                   __end_of_led_set_custom 0DB5  
                         ??_led_set_mode 0027                           ??_led_set_time 0027  
                           ?_eusart_init 0022              __size_of_eeprom_read_buffer 0017  
                                  pclath 000A                     ??i1_led_indicate_ble 0070  
                   ??i1_led_indicate_day 0070                     ??i1_led_indicate_off 0070  
             __size_of_tmr2_isr_callback 000D                          __end_of_rtc_set 0D68  
               __end_of_led_indicate_ble 06A7                 __end_of_led_indicate_day 06A9  
                         ??_led_touch_cb 007D                 __end_of_led_indicate_off 06AC  
                                  status 0003                         ??_rtc_get_minute 0022  
                       ??_rtc_get_second 0022                                    wtemp0 007E  
                   __size_of_ble_receive 0012                         _rtc_is_leap_year 1085  
                  __end_of_ble_send_data 0B27                     __size_of_ble_ota_ack 0012  
                           __end_ofPL100 0739                             __end_ofPL110 14A3  
                           __end_ofPL102 11C1                             __end_ofPL120 0751  
                           __end_ofPL112 0FBF                             __end_ofPL104 0740  
                           __end_ofPL130 0FC9                             __end_ofPL122 0FC4  
                           __end_ofPL114 0747                             __end_ofPL106 0C2C  
                           __end_ofPL140 14AF                             __end_ofPL132 0FCE  
                           __end_ofPL124 14A9                             __end_ofPL116 0792  
                           __end_ofPL108 17F1                             __end_ofPL150 1FE0  
                           __end_ofPL142 11C7                             __end_ofPL134 0FD4  
                           __end_ofPL126 1FCC                             __end_ofPL118 074C  
                           __end_ofPL160 10C6                             __end_ofPL152 14B9  
                           __end_ofPL144 0756                             __end_ofPL136 0FD9  
                           __end_ofPL128 0797                             __end_ofPL154 0FE3  
                           __end_ofPL146 14B4                             __end_ofPL138 0FDE  
                           __end_ofPL156 17FB                             __end_ofPL148 17F6  
                           __end_ofPL158 1800                     __size_of_ble_process 000F  
                      led_set_time@ptime 0027                         ?_led_find_device 0070  
                        __initialization 08A1                       ble_check_devid@dev 0037  
                i1_led_update_day_bright 0F29                       ble_check_devid@cnt 0048  
                     ble_check_devid@idx 004C                       ble_check_devid@len 004A  
                     ble_check_devid@rev 004B                           _led_turnon_max 16F2  
               __end_of_led_auto_process 1365                             __end_of_main 0902  
             ?i1_led_update_night_bright 0070                __size_of_led_state_ble_cb 0015  
              __size_of_led_state_day_cb 0015                          _led_pro_process 1511  
              __size_of_led_state_off_cb 0015          ??_led_state_night_long_press_cb 0072  
                         _m_current_time 00DF        __size_of_led_state_day_release_cb 0002  
              ?_led_state_day_release_cb 0070                                   ??_main 0055  
             __size_of_ble_transmit_stop 000A                              ?i1_decrease 0070  
                      ?_ble_receive_stop 0070                             led_set_pro@i 002F  
                            increase@max 0025                       ??_ble_receive_stop 0022  
       __end_of_led_state_off_release_cb 0F4F                          ?_led_set_bright 0070  
                        ?_led_set_custom 0070                                   _CCPR1H 0292  
                                 _CCPR2H 0296                                   _CCPR3H 0312  
                                 _CCPR1L 0291                                   _CCPR4H 0316  
                                 _CCPR2L 0295                                   _CCPR3L 0311  
                                 _CCPR4L 0315                              ?i1_increase 0070  
                                 _ANSELA 018C                                   _ANSELB 018D  
                                 _ANSELC 018E                                   _T0CON0 0017  
                                 _T0CON1 0018                                   _RC1STA 019D  
                         _pwm1_load_duty 1DD4                                   i1l1116 1F17  
                                 i1l1132 042C                                   i1l1125 0410  
                                 i1l1127 041A                                   i1l1129 0424  
                                 _ODCONA 028C                                   _ODCONB 028D  
                                 _ODCONC 028E                                   i1l4101 1F6B  
                                 i1l4111 1F7C                                   i1l4115 1F8D  
                                 i1l4107 1F6C                                   i1l4117 1F97  
                                 i1l4303 1F48                                   i1l4233 10B8  
                                 i1l4229 10AC                                   i1l4237 10BC  
                                 i1l3723 0F50                                   i1l3731 1E9D  
                                 i1l3811 0F0E                                   i1l3803 0EFE  
                                 i1l4291 1F46                                   i1l3821 0EAA  
                                 i1l4285 1F2D                                   i1l4293 1F39  
                                 i1l3831 0E56                                   i1l3727 0F60  
                                 i1l3735 1EAE                                   i1l3911 1E98  
                                 i1l3841 0E12                                   i1l3913 1E9A  
                                 i1l3835 0E5F                                   i1l3907 1E95  
                                 i1l3923 0766                                   i1l4299 1F43  
                                 i1l3757 0780                                   i1l3837 0E64  
                                 i1l3853 0E46                                   i1l3861 1EBF  
                                 i1l3909 1E97                                   i1l3925 0767  
                                 i1l3863 076E                                   i1l3839 0F70  
                                 i1l3927 0768                                   i1l3777 0F2A  
                                 i1l3793 0ED4                                   i1l3857 0E4F  
                                 i1l3881 0EFC                                   i1l3929 0769  
                                 i1l3795 0EE3                                   i1l3859 0E54  
                                 i1l3875 0EF9                                   i1l3891 0E41  
                                 i1l3789 0EBB                                   i1l3877 0EFA  
                                 i1l3893 0E42                                   i1l5671 1E2A  
                                 i1l3879 0EFB                                   i1l3895 0E43  
                                 i1l4945 1062                                   i1l4961 1082  
                                 i1l3897 0E44                                   i1l4949 106F  
                        led_second_cb@ct 00D5                                   u318_25 10B2  
                                 u273_25 0E9D                                   u274_25 0E7B  
                                 _OSCFRQ 091F                          _led_start_flash 0E01  
                                 _NVMADR 0891                                   _TX1STA 019E  
                        ??_led_para_init 0038                         __end_of_decrease 0870  
                       __end_of_ble_init 0A49                   __end_of_led_turnon_max 1708  
                    eeprom_read_buffer@i 0028                         __end_of_app_init 092E  
                   __size_of_eeprom_read 000F                             led_turnoff@i 0022  
                        ??_led_second_cb 0055                                   ___bmul 0B5E  
                       __end_of_led_init 0A99                         __end_of_led_ramp 1FAC  
                                 ___lmul 139E                   __size_ofi1_led_turnoff 000D  
  __end_of_led_state_night_cont_press_cb 0E56   __size_of_led_state_night_cont_press_cb 0010  
          _led_state_night_cont_press_cb 0E46                              key_read@dat 0070  
                                 ___wmul 16BF                          ??_led_save_para 002A  
                              ??___awmod 0026                              key_read@trg 0069  
                              ??___lldiv 0036        __end_ofi1_led_update_night_bright 0EE9  
               __end_of_led_para_default 118C                                ??___lwdiv 0026  
                              ??___lwmod 0074                         __end_of_increase 07F6  
                __end_of_ble_check_devid 0BBF                          ??_led_set_cycle 0022  
                       __end_of_key_init 0C04                         __end_of_key_read 1F6A  
                       __end_of_key_scan 1F4C                           _pwm3_load_duty 1DDA  
                                 _memset 118C                          ??_led_set_power 0027  
                        ___awmod@divisor 0022                     __end_of_eeprom_write 1753  
                        ___awmod@counter 0026                                   _rx_buf 01A0  
                              ??_app_isr 007E                                   _tx_buf 0220  
                      led_para_default@i 0034                        led_para_default@j 0035  
                __end_of_led_set_preview 103C                                   _strlen 0B6A  
                          ?_eusart_write 0070                         __end_of_tmr0_isr 1DEC  
                       __end_of_tmr2_isr 1DF8                         __end_of_osc_init 0997  
    __end_of_led_state_ble_long_press_cb 076D              _led_state_ble_long_press_cb 076C  
                         _pwm4_load_duty 1000                     __size_of_led_set_pro 0031  
                       __end_of_rtc_init 0BF6                     __size_of_led_preview 0007  
                   __size_of_led_process 0001                                ??_rtc_set 0022  
                 __end_of_pwm1_load_duty 1DDA                        ble_send_cmd@F8334 014D  
                   __end_of_led_decrease 084D                     __size_of_led_turnoff 000E  
                    led_calc_bright@dbrt 0048                      led_calc_bright@ebrt 003B  
                    led_calc_bright@sbrt 0049                    __size_of_ble_send_cmd 004E  
                         _pwm5_load_duty 1E10               __end_of_led_indicate_night 06AB  
                           ?_rtc_process 0070                  __end_of__initialization 08E6  
                        eeprom_read@addr 0022                         led_turnon_ramp@i 0026  
                        led_set_bright@i 0029                ??i1_led_update_day_bright 0070  
   __end_of_led_state_ble_short_press_cb 077E    __size_of_led_state_ble_short_press_cb 0010  
           _led_state_ble_short_press_cb 076E                __size_of_led_stop_preview 0003  
                __end_of_led_pro_process 16BF                     __end_of_led_increase 07D3  
                    __size_ofi1_decrease 0022                          ?_led_turnon_max 0070  
                    ___bmul@multiplicand 0022             ?_led_state_ble_cont_press_cb 0070  
                       eusart_write@byte 0022                           __pcstackCOMMON 0070  
                led_pro_process@duration 00B4                    led_state_off_cb@state 007A  
                        led_set_custom@i 0039                   __end_of_pwm3_load_duty 1DE0  
                           __pidataBANK2 1E50             __end_of_ble_ready_to_receive 0BD5  
                        _led_turnon_ramp 05F2                     i1_led_indicate_night 0EB9  
                         i1led_turnoff@i 0070                    _led_update_day_bright 0642  
                   __end_of_led_set_mode 0D35                     __end_of_led_set_time 0D53  
           __end_of_ble_receive_complete 0BDC                      __size_ofi1_increase 0022  
                        led_set_pro@pbuf 002E                               __end_ofPL2 1461  
                             __end_ofPL4 0F7D                               __end_ofPL6 07FC  
                             __end_ofPL8 175B                         _rtc_second_ready 0BF6  
       __size_of_led_update_night_bright 002F                    _led_update_day_status 0F50  
                         ??_eusart_write 0022                   __end_of_pwm4_load_duty 1006  
                        led_set_power@on 0027                     __end_of_led_touch_cb 1FDB  
       __size_of_led_update_night_status 0022              __end_of_led_prepare_to_save 0D69  
                           _ble_send_cmd 0A49                  __end_of_led_start_flash 0E05  
                     led_set_preview@val 0025                        eeprom_write@state 0024  
                          i1_led_turnoff 077F                          ?_pwm1_load_duty 0070  
                 __end_of_pwm5_load_duty 1E23                      _eusart_transmit_isr 1E39  
            __size_of_ble_transmit_start 000C                        _ble_receive_start 0BDC  
                      led_calc_bright@dt 003E                        led_calc_bright@vs 0044  
                             __pbssBANK0 0055                               __pbssBANK1 00D7  
                             __pbssBANK3 01A0                               __pbssBANK4 0220  
                             _ble_decode 0C2C                            led_set_mode@m 0028  
                     ?_ble_receive_start 0070                     __size_of_eusart_init 001B  
                     __size_of_gpio_init 0044                             increase@delt 0024  
                           increase@psrc 0022      __end_of_led_state_off_long_press_cb 0F29  
            _led_state_off_long_press_cb 0F0E            ?_led_state_ble_short_press_cb 0070  
                             __pmaintext 08E9                      ??_ble_receive_start 0022  
      __size_of_led_state_off_release_cb 0001                                  ?___bmul 0022  
               _led_state_ble_release_cb 076D                ?_led_state_off_release_cb 0070  
                  ?i1_led_indicate_night 0070                                  ?___lmul 0022  
          ??_led_state_ble_cont_press_cb 0070                     ?_eusart_transmit_isr 0070  
                        ?_pwm3_load_duty 0070                                  ?___wmul 0022  
              __size_of_led_turnoff_ramp 000C                         _led_state_ble_cb 0756  
                       _led_state_day_cb 0E31                               __pintentry 0404  
                     __size_of_pwm1_init 000A                       __size_of_pwm2_init 0009  
                     __size_of_tmr0_init 0012                       __size_of_pwm3_init 000B  
                     __size_of_pwm4_init 000B                       __size_of_tmr2_init 0011  
                                _CCP1CON 0293                                  _CCP2CON 0297  
                  i1_led_prepare_to_save 0F4C                                  _CCP3CON 0313  
                       led_decrease@delt 002B                       __size_of_pwm5_init 000A  
                                _CCP4CON 0317                         ?_ble_check_devid 0070  
                       _led_state_off_cb 0EE9                                  ?_memset 0022  
                         ___lmul@product 002A      __end_of_led_state_day_cont_press_cb 0E66  
            _led_state_day_cont_press_cb 0E56           ?_led_state_night_cont_press_cb 0070  
               __size_of_led_calc_bright 004A                                  ?_strlen 0022  
               __end_of_rtc_is_leap_year 10A1                         ?_led_set_preview 0070  
                        ?_pwm4_load_duty 0070                     tmr2_isr_callback@cnt 0061  
                       led_second_cb@sec 00D4                                ?_decrease 0022  
                                _SP1BRGH 019C                                  _SP1BRGL 019B  
                              ?_ble_init 0070                              tmr0_init@cb 0022  
                                _OSCCON1 0919                                  _OSCCON3 091B  
                         ?i1_led_turnoff 0070                                  _NVMADRH 0892  
                                _NVMADRL 0891                                  _OSCTUNE 091E  
                                _NVMDATL 0893                                  _NVMCON1 0895  
                                _NVMCON2 0896                                  _PWM5DCH 0618  
                                _PWM5DCL 0617             ?_led_state_off_cont_press_cb 0070  
              __end_of_ble_receive_start 0BEB                                  _PWM5CON 0619  
                                _PPSLOCK 0E0F                                ?_app_init 0070  
                            tmr2_init@cb 0022                          ?_pwm5_load_duty 0070  
                  led_state_night_cb@key 0079              __size_of_eusart_receive_isr 0016  
                             _m_led_para 237F                            _eusart_rcv_cb 00E8  
                              ?_led_init 0070                                ?_led_ramp 0070  
                          i1decrease@min 0073                                ?_increase 0022  
                 led_update_day_bright@i 0026                                ?_key_init 0022  
                              ?_key_read 0070                                ?_key_scan 0070  
                  led_find_device@toggle 0062                        ?_led_indicate_ble 0070  
                      ?_led_indicate_day 0070             ?_led_state_day_long_press_cb 0070  
                      ?_led_indicate_off 0070                       _led_state_night_cb 1E85  
                __end_of_led_turnon_ramp 060E                         ?_led_pro_process 004A  
                              ?_tmr0_isr 0070                                ?_tmr2_isr 0070  
                     ??_led_indicate_ble 0022                       ??_led_indicate_day 0022  
                     ??_led_indicate_off 0022                                ?_osc_init 0070  
            __end_of_eeprom_write_buffer 1731                           i1increase@delt 0072  
                      key_scan@key_value 0021                           i1increase@psrc 0070  
                  ??_eusart_transmit_isr 0070                   ?_led_update_day_bright 0070  
                  __size_of_eeprom_write 0022                               _key_action 1F4C  
                              ?_rtc_init 0070                          __size_of___bmul 000C  
                    ?_led_state_night_cb 0079              ??i1_led_update_night_bright 0070  
                        __size_of___lmul 0025                        ?_led_auto_process 004A  
                                ___awmod 1365                                  ___lldiv 140D  
                        __size_of___wmul 0015                                  ___lwdiv 0DB5  
                                ___lwmod 10A1                             key_read@cont 0068  
                 ?_led_update_day_status 0070                       ??_led_auto_process 004D  
                        __size_of_memset 0017                                  __ptext1 0BF6  
                                __ptext2 0BEB                                  __ptext3 14B9  
                                __ptext4 16F0                                  __ptext5 16EE  
                                __ptext6 16EB                                  __ptext7 1708  
                                __ptext8 171C                                  __ptext9 1731  
                                _app_isr 0404                        __end_of_gpio_init 098D  
                           ??i1_decrease 0075                         ??_led_set_bright 0022  
                        __size_of_strlen 0011                    __size_of_led_decrease 003B  
                       ??_led_set_custom 0029                                _T2CONbits 001F  
                       ___awmod@dividend 0024                               ??_decrease 0027  
                             ??_ble_init 004D                     rtc_is_leap_year@year 0075  
   __size_of_led_state_ble_cont_press_cb 0001               __end_of_eeprom_read_buffer 0625  
                       ?_led_start_flash 0070                                  _rtc_set 0D53  
                   ??_led_state_night_cb 007B                               ??_app_init 0024  
                                _tx_head 006A                             ??i1_increase 0075  
                                clrloop0 1DF9                                  _tx_tail 006B  
          ??_led_state_off_cont_press_cb 0070                            ??_ble_receive 0071  
                             ??_led_init 0044                     end_of_initialization 08E6  
                             ??_led_ramp 0074                     _ble_ready_to_receive 0BCE  
                      __end_of_pwm1_init 09A1                            ??_ble_ota_ack 0023  
               led_auto_process@duration 00C4                        __end_of_pwm2_init 09AA  
                      __end_of_tmr0_init 09DC                    __size_of_led_increase 003C  
                      __end_of_pwm3_init 09B5                        __end_of_pwm4_init 09C0  
                      __end_of_tmr2_init 09ED                        __end_of_pwm5_init 09CA  
                            ?_ble_decode 0070                               ??_increase 0027  
                   _ble_receive_complete 0BD5                            ??_ble_process 003C  
            __size_ofi1_led_indicate_ble 0001              __size_ofi1_led_indicate_day 0001  
                                init_ram 1E04              __size_ofi1_led_indicate_off 0001  
                                memset@c 0024                                  memset@n 0026  
                                memset@p 0028                               ??_key_init 0024  
                             ??_key_read 0070                               ??_key_scan 007E  
                           _eeprom_write 1731                                  initloop 1E05  
                   __end_of_eusart_write 0B48                __size_of_ble_receive_stop 0007  
                      led_pro_process@p1 00B6                        led_pro_process@p2 00B8  
                      led_pro_process@t1 00AB                        led_pro_process@t2 00AD  
                      led_pro_process@ct 004A                        led_pro_process@ep 00C3  
                      led_pro_process@dt 00AF                        led_pro_process@et 00BF  
                       _led_stop_preview 0E09                        led_pro_process@sp 00C1  
                      led_pro_process@st 00C6                     __size_of_rtc_process 0049  
                        ___lldiv@divisor 002E                               ??_tmr0_isr 0077  
          ??_led_state_day_long_press_cb 0072                    __size_of_led_set_mode 0033  
                             ??_tmr2_isr 007E                       __end_ofi1_decrease 0E88  
                  __size_of_led_set_time 001E                          ___lldiv@counter 003A  
                             ??_osc_init 0022                                _MONTH_DAY 0131  
                 ??i1_led_indicate_night 0070                            ?_rtc_get_hour 0070  
   __end_of_led_state_off_short_press_cb 0F0D    __size_of_led_state_off_short_press_cb 000F  
           _led_state_off_short_press_cb 0EFE                          led_touch_cb@key 007B  
                              _RCSTAbits 019D                               ??_rtc_init 0022  
                 ?i1_led_prepare_to_save 0070                             _led_decrease 0812  
                  __size_of_led_touch_cb 000F                        led_turnoff_ramp@i 0022  
                      ?_led_para_default 0070           ??_led_state_ble_short_press_cb 0071  
                _led_update_night_bright 066A                                  strlen@s 0026  
               __size_of_led_find_device 0010                       __end_ofi1_increase 0EAA  
                              _PORTAbits 000C                       ??_led_para_default 002A  
                _led_update_night_status 1E9D                          ??i1_led_turnoff 0070  
                             _rtc_status 0065                   __size_of_ble_send_data 007C  
                           _led_increase 0797                  led_state_night_cb@state 007A  
             __size_of_ble_receive_start 000F                i1_led_update_night_bright 0EBA  
                      ??_led_calc_bright 0042                     eeprom_write_buffer@i 0029  
   __end_of_led_state_day_short_press_cb 0EB9    __size_of_led_state_day_short_press_cb 000F  
           _led_state_day_short_press_cb 0EAA                    ?_ble_ready_to_receive 0070  
                           _led_set_mode 0D02                             _led_set_time 0D35  
                              _RXPPSbits 0E24                    ?_ble_receive_complete 0070  
                       ??_led_turnon_max 0022                     ble_check_devid@F8342 0120  
               __end_of_rtc_second_ready 0BFC             ??_led_state_night_release_cb 0070  
                           _led_state_cb 0145                            ??_eeprom_read 0022  
                       led_set_cycle@len 002A                                _TXSTAbits 019E  
                           _led_run_para 005D                             _led_touch_cb 1FCC  
                       ?_led_turnon_ramp 0070                    __end_of_led_para_init 05F2  
                    __end_of_ble_receive 0812                           ??_rtc_get_hour 0022  
                    __end_of_ble_ota_ack 0AAB                           led_para_init@i 0043  
                         led_para_init@j 0042                      __end_of_ble_process 0BCE  
   __size_of_led_state_off_cont_press_cb 0001                              ?_key_action 007D  
                       _led_turnoff_ramp 0699                 _led_state_day_release_cb 0F70  
          ?_led_state_off_short_press_cb 0070                       _led_indicate_night 06A9  
                  __end_of_led_second_cb 1511                           __end_of___bmul 0B6A  
                __size_of_rtc_get_minute 0002                  __size_of_rtc_get_second 0002  
                         __end_of___lmul 13C3                           __end_of___wmul 16D4  
                  __end_of_led_save_para 171C                    __end_of_led_set_cycle 0E01  
                    __size_of_ble_decode 00D6                            ??_led_set_pro 0025  
                         __end_of_memset 11A3                    __end_of_led_set_power 1000  
                          ??_led_preview 0022                            ??_led_process 007B  
   __size_of_led_state_day_long_press_cb 0001                         ??_pwm1_load_duty 0072  
                    ?_led_indicate_night 0070                           __end_of_strlen 0B7B  
                            __end_ofPL10 06B4                              __end_ofPL20 06CB  
                            __end_ofPL12 11B4                              __end_ofPL30 178D  
                            __end_ofPL22 146B                              __end_ofPL14 0F85  
                            __end_ofPL40 17BB                              __end_ofPL32 0F8B  
                            __end_ofPL24 06D5                              __end_ofPL16 1770  
                            __end_ofPL50 06F1                              __end_ofPL42 06E2  
                            __end_ofPL34 17A0                              __end_ofPL26 06DB  
                            __end_ofPL18 1779                              __end_ofPL60 0F97  
                            __end_ofPL52 06FA                              __end_ofPL44 17C1  
                            __end_ofPL36 1FBE                              __end_ofPL28 147F  
                            __end_ofPL70 071F                              __end_ofPL62 17DB  
                            __end_ofPL54 0E12                              __end_ofPL46 0C15  
                            __end_ofPL38 17B1                              __end_ofPL80 0FAB  
                            __end_ofPL72 0725                              __end_ofPL64 17E1  
                            __end_ofPL56 0707                              __end_ofPL48 17D0  
                            __end_ofPL90 0FB1                              __end_ofPL82 0C26  
                            __end_ofPL74 0C1F                              __end_ofPL66 1489  
                            __end_ofPL58 0713                              __end_ofPL92 11B9  
                            __end_ofPL84 17EA                              __end_ofPL76 1493  
                            __end_ofPL68 0719                              __end_ofPL94 0FB9  
                            __end_ofPL86 072A                              __end_ofPL78 0FA1  
                            __end_ofPL96 1FC6                              __end_ofPL88 149C  
                            __end_ofPL98 0731                      start_initialization 08A1  
                          ??_led_turnoff 0022      __size_of_led_state_night_release_cb 0003  
                 eeprom_read_buffer@addr 0027                   eeprom_read_buffer@pbuf 0023  
               __end_of_led_state_ble_cb 076B                         led_set_preview@i 0027  
               __end_of_led_state_day_cb 0E46                 __end_of_led_state_off_cb 0EFE  
          ?_led_state_day_short_press_cb 0070               ??_led_state_ble_release_cb 0070  
                   ??_led_indicate_night 0022                         ??_pwm3_load_duty 0072  
                          _ble_send_data 0AAB                               key_init@cb 0022  
                    led_set_preview@pbuf 0024                ??_led_update_night_bright 0022  
                               ??___bmul 0023                                 ??___lmul 002A  
                               ??___wmul 0026                      __end_of_eeprom_read 0634  
                            _CCPTMRSbits 029F                         ??_pwm4_load_duty 0072  
                            __pdataBANK2 0120                ??_led_update_night_status 0070  
                               ??_memset 0028                                 ??_strlen 0025  
                         _current_bright 00D7                        ?_rtc_is_leap_year 0075  
                       ??_pwm5_load_duty 0072                          led_turnon_max@i 0022  
                            __pbssBIGRAM 237F                           led_set_cycle@i 002C  
                              ___latbits 0002                         ble_send_data@len 002A  
             __end_of_ble_transmit_start 0B54                            __pcstackBANK0 0020  
                          __pcstackBANK1 00A0                         ble_send_data@xor 0029  
                     ??_rtc_is_leap_year 0077                        ??_led_find_device 0023  
                 ??_ble_ready_to_receive 0022                      __end_of_led_set_pro 08A1  
                      __size_of_decrease 0023                           led_set_pro@len 002D  
                      __size_of_ble_init 005C                            ??_eusart_init 0024  
                    __end_of_led_preview 16EB                      __end_of_led_process 1F6B  
                 ??_ble_receive_complete 0022                    __size_of_eusart_write 0021  
                    __size_of_key_action 0012                 ?i1_led_update_day_bright 0070  
                            _ble_receive 0800             __size_of_led_prepare_to_save 0001  
                       eeprom_write@addr 0023                        __size_of_app_init 002C  
                            _ble_ota_ack 0A99          ??_led_state_night_cont_press_cb 0079  
                    __end_of_led_turnoff 0642                         eeprom_write@byte 0022  
                            _ble_process 0BBF                        __size_of_led_init 0002  
                      __size_of_led_ramp 0041                           ?_ble_send_data 0070  
                       _ble_receive_stop 0C04                                __pnvBANK0 006C  
                              __pnvBANK1 00E6                     led_pro_process@index 00A0  
                ??_led_update_day_bright 0022                        __size_of_increase 0023  
                   led_pro_process@start 00BA                        __size_of_key_init 0008  
                      __size_of_key_read 000C                        __size_of_key_scan 0034  
                       ___lwdiv@dividend 0024                  ??_led_update_day_status 0070  
                      __size_of_tmr0_isr 000C                          led_decrease@chn 0030  
                      __size_of_tmr2_isr 000C                                __ptext100 0F0E  
                              __ptext101 0F0D                                __ptext110 0EBA  
                              __ptext102 0F4D                                __ptext111 0EB9  
                              __ptext103 0E12                                __ptext120 077F  
                              __ptext112 0F70                                __ptext104 0E30  
                              __ptext121 0F4C                                __ptext113 0F4F  
                              __ptext105 1EBF                                __ptext130 1E39  
                              __ptext122 077E                                __ptext114 0F50  
                              __ptext106 1E9C                        __size_of_osc_init 000A  
                              __ptext131 1E23                                __ptext123 076D  
                              __ptext115 0E56                                __ptext107 1E9D  
                              __ptext132 0800                                __ptext124 076C  
                              __ptext116 0F29                                __ptext108 0E46  
                              __ptext125 076B                                __ptext117 0E88  
                              __ptext109 0EAA                                __ptext126 1DE0  
                              __ptext118 0E66                                __ptext127 103C  
                              __ptext119 076E                                __ptext128 1085  
                              __ptext129 10A1                                 ?___awmod 0022  
                               ?___lldiv 002E                                 ?___lwdiv 0022  
                               ?___lwmod 0070                           key_scan@repeat 0066  
                      __size_of_rtc_init 000B                             decrease@delt 0024  
              __size_of_led_indicate_ble 0002                             decrease@psrc 0022  
              __size_of_led_indicate_day 0002                __size_of_led_indicate_off 0001  
                              __pswtext1 1822                                 ?_app_isr 0070  
                          _target_bright 0055           ??_led_state_off_short_press_cb 0075  
                               _BAUD1CON 019F                             _eusart_write 0B27  
               __end_of_led_stop_preview 0E0C               __end_of_eusart_receive_isr 1E39  
                       key_scan@last_key 0067                 __size_of_ble_check_devid 0044  
                   __end_of_rtc_get_hour 16EE                                _gpio_init 0949  
                          i1increase@max 0073          __end_of_led_update_night_bright 0699  
                               ?_rtc_set 0070                __size_of_led_auto_process 019E  
                       ___lwdiv@quotient 0026    __end_of_led_state_night_long_press_cb 1E9D  
 __size_of_led_state_night_long_press_cb 0001            _led_state_night_long_press_cb 1E9C  
               __size_of_led_set_preview 0036          __end_of_led_update_night_status 1EBF  
                           ??_ble_decode 003A       __end_of_led_state_night_release_cb 1EC2  
             _led_state_night_release_cb 1EBF                           ___wmul@product 0026  
                               _LATAbits 010C                                 _LATBbits 010D  
                               _LATCbits 010E              __end_of_eusart_transmit_isr 1E50  
                              clear_ram0 1DF8                                _pwm1_init 0997  
                            _eeprom_read 0625                 _led_state_off_release_cb 0F4E  
                              _tmr0_init 09CA                                _pwm2_init 09A1  
                               _PIE0bits 0090                                 _PIE1bits 0091  
     __size_ofi1_led_update_night_bright 002F                                _pwm3_init 09AA  
                    __end_of_eusart_init 0949                                _tmr2_init 09DC  
                              _pwm4_init 09B5                                _pwm5_init 09C0  
    __end_of_led_state_ble_cont_press_cb 076C              _led_state_ble_cont_press_cb 076B  
                     _eeprom_read_buffer 060E                  ??i1_led_prepare_to_save 0070  
                       led_pro_process@i 00C8                         led_pro_process@j 00C5  
         ??_led_state_day_short_press_cb 0075                      led_state_ble_cb@key 0079  
                               _PIR0bits 0010                                 _PIR1bits 0011  
                    led_auto_process@sec 004C                      led_auto_process@val 00A0  
                          key_action@key 0020                           _rtc_get_minute 16EE  
                         _rtc_get_second 16F0                      led_state_day_cb@key 0079  
                    ?_eeprom_read_buffer 0023                      pwm1_load_duty@value 0070  
               __size_of_led_pro_process 01AE                          _led_calc_bright 13C3  
                      _led_start_preview 0E05             __size_of_eeprom_write_buffer 0015  
                      ___wmul@multiplier 0022                              _led_set_pro 0870  
                     __end_of_ble_decode 0D02                           i1decrease@delt 0072  
                     ?_led_start_preview 0070                              _led_preview 16E4  
                            _led_process 1F6A                           i1decrease@psrc 0070  
           ?_led_state_ble_long_press_cb 0070                                _tx_remain 006C  
        __end_ofi1_led_update_day_bright 0F4C                               ?_gpio_init 0070  
                            _led_turnoff 0634                                led_ramp@i 007A  
            __size_of_led_state_night_cb 0017                      ??_led_start_preview 0022  
               __end_of_led_turnoff_ramp 06A5                        ___lmul@multiplier 0022  
             __end_ofi1_led_indicate_ble 0E31               __end_ofi1_led_indicate_day 0F0E  
             __end_ofi1_led_indicate_off 077F                __size_of_led_para_default 00C6  
                   ??_eeprom_read_buffer 0026         __end_of_led_state_ble_release_cb 076E  
                          ??_rtc_process 0077                          ??_ble_send_data 0025  
                  eeprom_read_buffer@len 0025               ??_led_state_day_release_cb 0070  
                      ?_rtc_second_ready 0070                 __size_of_led_start_flash 0004  
                             ?_pwm1_init 0070                               ?_tmr0_init 0022  
                             ?_pwm2_init 0070                               ?_pwm3_init 0070  
                             ?_tmr2_init 0022                               ?_pwm4_init 0070  
                             ?_pwm5_init 0070                       ??_rtc_second_ready 0022  
                 __end_of_rtc_get_minute 16F0                   __end_of_rtc_get_second 16F2  
                           ??_key_action 007E   __end_of_led_state_night_short_press_cb 0E30  
__size_of_led_state_night_short_press_cb 001E           _led_state_night_short_press_cb 0E12  
          __size_ofi1_led_indicate_night 0001                __end_of_led_start_preview 0E09  
                       __size_of___awmod 0039                         __size_of___lldiv 003F  
                        ble_send_cmd@ack 002A                         __size_of___lwdiv 0025  
                        ble_send_cmd@cmd 0027                         __size_of___lwmod 0020  
                        ble_send_cmd@cnt 0033                          ble_send_cmd@idx 0035  
                        ble_send_cmd@len 0032                          ble_send_cmd@rev 0034  
                    led_state_off_cb@key 0079                         __size_of_app_isr 002A  
                          ?_ble_send_cmd 0027                      led_pro_process@flag 00B3  
                             _T0CON0bits 0017                                 _decrease 084D  
                               _checksum 0063                                 _ble_init 09ED  
    __end_of_led_state_off_cont_press_cb 0F4E              _led_state_off_cont_press_cb 0F4D  
                  __end_ofi1_led_turnoff 078C                          ___lwdiv@divisor 0022  
                        ___lwdiv@counter 0028                                 __ptext10 1511  
                               __ptext11 16E4                                 __ptext20 0430  
                               __ptext12 16D4                                 __ptext21 066A  
                               __ptext13 16F2                                 __ptext30 0625  
                               __ptext22 0642                                 __ptext14 11C7  
                               __ptext31 0BBF                                 __ptext23 0634  
                               __ptext15 13C3                                 __ptext40 0D35  
                               __ptext32 0C04                                 __ptext24 10C6  
                               __ptext16 139E                                 __ptext41 0D53  
                               __ptext33 0BDC                                 __ptext25 118C  
                               __ptext17 140D                                 __ptext50 0D69  
                               __ptext42 06A5                                 __ptext34 0BD5  
                               __ptext26 06AB                                 __ptext18 1365  
                               __ptext51 0DB5                                 __ptext43 0870  
                               __ptext35 0BCE                                 __ptext27 06A9  
                               __ptext19 0A97                                 __ptext60 0A99  
                               __ptext52 1EC2                                 __ptext44 1006  
                               __ptext36 0C2C                                 __ptext28 06A7  
                               __ptext61 0B54                                 __ptext53 0797  
                               __ptext45 0FE3                                 __ptext37 0E09  
                               __ptext29 060E                                 __ptext70 09DC  
                               __ptext62 0B48                                 __ptext54 07D3  
                               __ptext46 0D02                                 __ptext38 0E05  
                               __ptext71 09CA                                 __ptext63 16BF  
                               __ptext55 0812                                 __ptext47 05F2  
                               __ptext39 0E01                                 __ptext80 092E  
                               __ptext72 09C0                                 __ptext64 09ED  
                               __ptext56 0D68                                 __ptext48 0699  
                               __ptext73 09B5                                 __ptext65 0B7B  
                               __ptext57 084D                                 __ptext49 0DDA  
                               __ptext90 1F18                                 __ptext82 1DEC  
                               __ptext74 09AA                                 __ptext66 0A49  
                               __ptext58 0AAB                                 __ptext91 1F5E  
                               __ptext83 1F0B                                 __ptext75 09A1  
                               __ptext67 0B6A                                 __ptext59 0B5E  
          ??_led_state_ble_long_press_cb 0070                                 __ptext92 1F4C  
                               __ptext84 1F6A                                 __ptext76 0997  
                               __ptext68 0B27                                 __ptext93 1FCC  
                               __ptext85 1F6B                                 __ptext77 098D  
                               __ptext69 0902                                 __ptext94 0756  
                               __ptext86 1000                                 __ptext78 0BFC  
                               __ptext95 1E85                                 __ptext87 1DDA  
                               __ptext79 0949                                 __ptext96 0E31  
                               __ptext88 1DD4                                 __ptext97 0EE9  
                               __ptext89 1E10                                 __ptext98 0EFE  
                               __ptext99 0F4E                                 _app_init 0902  
                       __size_of_rtc_set 0015                              decrease@min 0025  
                            _eusart_init 092E                                 _led_init 0A97  
                               _led_ramp 1F6B                        ?_led_state_ble_cb 0079  
                      ?_led_state_day_cb 0079                       __end_of_key_action 1F5E  
                __size_of_led_set_bright 0049                        ??_ble_check_devid 0036  
                      ?_led_state_off_cb 0079                                 _increase 07D3  
                __size_of_led_set_custom 004C      __end_of_led_state_day_long_press_cb 0F50  
            _led_state_day_long_press_cb 0F4F                       ??_led_state_ble_cb 007B  
                               _key_func 00E6                                 _key_init 0BFC  
                               _key_read 1F5E           ?_led_state_night_long_press_cb 0070  
                               _key_scan 1F18                       ??_led_state_day_cb 007B  
                          __size_of_main 0019                       ??_led_state_off_cb 007B  
                      ??_led_set_preview 0022                                 _tmr0_isr 1DE0  
                               _tmr2_isr 1DEC                           ble_receive@rcv 0070  
                               _osc_init 098D                      __end_of_rtc_process 1085  
                __end_of_led_calc_bright 140D                               _RC1STAbits 019D  
                     led_auto_process@ct 004A                       led_auto_process@dt 00C7  
                     led_auto_process@et 00CC                       led_auto_process@st 00CF  
                     led_auto_process@tr 00B8                               _RB4PPSbits 0E9C  
                        ?_rtc_get_minute 0070                          ?_rtc_get_second 0070  
           ?_led_state_off_long_press_cb 0070                               _RC3PPSbits 0EA3  
                               _rtc_init 0BEB                               _RC4PPSbits 0EA4  
                               int$flags 007E                               _RC5PPSbits 0EA5  
                      led_touch_cb@state 007C                               _RC6PPSbits 0EA6  
                        _led_find_device 16D4                               _RC7PPSbits 0EA7  
               __size_of_led_turnon_ramp 001C                      _led_prepare_to_save 0D68  
                       _led_indicate_ble 06A5                         _led_indicate_day 06A7  
                       _led_indicate_off 06AB                    __size_of_rtc_get_hour 0003  
           ?_led_state_day_cont_press_cb 0070                 __end_of_ble_receive_stop 0C0B  
                         ??_ble_send_cmd 0029                               _INTCONbits 000B  
                            _NVMCON1bits 0895                        ??_led_pro_process 004D  
                            ??_gpio_init 0022                   __size_of_led_para_init 01C2  
                            _tmr0_isr_cb 00EC                         _led_auto_process 11C7  
                               memset@p1 0022                              _tmr2_isr_cb 00EA  
                         ble_send_data@i 002B                           ble_send_data@p 002C  
                           ?_ble_receive 0070                                 intlevel1 0000  
                   ?_led_prepare_to_save 0070                      pwm3_load_duty@value 0070  
                           ?_ble_ota_ack 0070                   __size_of_led_second_cb 0058  
                     led_pro_process@end 00BC                       led_pro_process@sec 004C  
                     led_pro_process@tmp 00AA                         ___lwmod@dividend 0072  
                           ?_ble_process 0070                   __size_of_led_save_para 0014  
                       ___lldiv@dividend 0032                __size_of_rtc_is_leap_year 001C  
                  led_state_ble_cb@state 007A                              ??_pwm1_init 0022  
                led_calc_bright@duration 003C                   __size_of_led_set_cycle 0027  
                            ??_tmr0_init 0024                              ??_pwm2_init 0022  
                     _ble_transmit_start 0B48                        _tmr2_isr_callback 1F0B  
                            ??_pwm3_init 0022              __size_of_led_indicate_night 0002  
                            ??_tmr2_init 0024                              ??_pwm4_init 0022  
                            _PPSLOCKbits 0E0F                              ??_pwm5_init 0022  
                 __size_of_led_set_power 001D                    led_auto_process@count 00CB  
   __size_of_led_state_ble_long_press_cb 0001           __size_of_led_update_day_bright 0028  
                     ?_tmr2_isr_callback 0070                        led_auto_process@i 00D3  
                      led_auto_process@j 00C6                        led_auto_process@k 00CE  
                      led_auto_process@p 00D1            __end_of_led_update_day_bright 066A  
                           _rtc_get_hour 16EB                  __size_of_led_turnon_max 0016  
                      ??_led_start_flash 0022         __size_ofi1_led_update_day_bright 0023  
                               rtc_set@i 0023                      ?_ble_transmit_start 0070  
             __size_of_led_start_preview 0004           __size_of_led_update_day_status 0020  
          ??_led_state_off_long_press_cb 0075            __end_of_led_update_day_status 0F70  
      __size_of_led_state_ble_release_cb 0001                      ??_tmr2_isr_callback 007E  
              ?_led_state_ble_release_cb 0070                            __pstringtext1 1800  
                          __pstringtext2 1844                            __pstringtext3 1857  
                          __pstringtext4 1866                            __pstringtext5 0000  
                       ___lldiv@quotient 0036                          ___lwmod@divisor 0070  
                      ?_led_stop_preview 0070                                 strlen@cp 0025  
                      _ble_transmit_stop 0B54                          ___lwmod@counter 0074  
          ??_led_state_day_cont_press_cb 0079                          key_action@state 007D  
                     ??_led_stop_preview 0022                       ?_ble_transmit_stop 0070  
             ??_led_state_off_release_cb 0070                     ??_ble_transmit_start 0022  
                  led_state_day_cb@state 007A                         _led_para_default 10C6  
                  ??_led_prepare_to_save 0022            __size_of_ble_ready_to_receive 0007  
                  eusart_receive_isr@rcv 0071                  __size_of_pwm1_load_duty 0006  
       __end_of_led_state_day_release_cb 0F72            __size_of_ble_receive_complete 0007  
            ?_led_state_night_release_cb 0070                              _rtc_process 103C  
                  led_calc_bright@period 0046                __end_of_tmr2_isr_callback 1F18  
                    _eeprom_write_buffer 171C                              _PWMTMRSbits 061F  
                          ?_eeprom_write 0022                    led_calc_bright@result 0042  
                    ??_ble_transmit_stop 0022                         led_increase@delt 002B  
                     _eusart_receive_isr 1E23                             ?_eeprom_read 0070  
               ?_led_update_night_bright 0070                  __end_of_led_find_device 16E4  
                        led_increase@chn 0030                            _led_load_duty 013D  
                    pwm4_load_duty@value 0070                            _led_para_init 0430  
               ?_led_update_night_status 0070                         ?_led_calc_bright 003B  
         __size_ofi1_led_prepare_to_save 0001  

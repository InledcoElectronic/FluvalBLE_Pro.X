

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 10 13:50:10 2018

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text24,local,class=CODE,merge=1,delta=2
    25                           	psect	text36,local,class=CODE,merge=1,delta=2
    26                           	psect	swtext1,local,class=CONST,delta=2
    27                           	psect	text43,local,class=CODE,merge=1,delta=2
    28                           	psect	text44,local,class=CODE,merge=1,delta=2
    29                           	psect	text52,local,class=CODE,merge=1,delta=2
    30                           	psect	text55,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text82,local,class=CODE,merge=1,delta=2
    33                           	psect	text83,local,class=CODE,merge=1,delta=2
    34                           	psect	text86,local,class=CODE,merge=1,delta=2
    35                           	psect	text87,local,class=CODE,merge=1,delta=2
    36                           	psect	text88,local,class=CODE,merge=1,delta=2
    37                           	psect	text89,local,class=CODE,merge=1,delta=2
    38                           	psect	text95,local,class=CODE,merge=1,delta=2
    39                           	psect	text126,local,class=CODE,merge=1,delta=2
    40                           	psect	text127,local,class=CODE,merge=1,delta=2
    41                           	psect	text130,local,class=CODE,merge=1,delta=2
    42                           	psect	text131,local,class=CODE,merge=1,delta=2
    43                           	psect	text132,local,class=CODE,merge=1,delta=2
    44                           	psect	pa_nodes0,global,class=CODE,delta=2
    45                           	dabs	1,0x620,48
    46                           	dabs	1,0x5AF,65
    47                           	dabs	1,0x237F,0,_m_led_para
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 1.45
    51                           ; Generated 16/11/2017 GMT
    52                           ; 
    53                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F18345 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0097                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  018E                     	;# 
   148  0197                     	;# 
   149  0199                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  019A                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019E                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  020C                     	;# 
   175  020D                     	;# 
   176  020E                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0216                     	;# 
   190  0216                     	;# 
   191  0217                     	;# 
   192  0217                     	;# 
   193  0219                     	;# 
   194  021A                     	;# 
   195  021B                     	;# 
   196  021C                     	;# 
   197  021D                     	;# 
   198  021D                     	;# 
   199  021E                     	;# 
   200  021F                     	;# 
   201  028C                     	;# 
   202  028D                     	;# 
   203  028E                     	;# 
   204  0291                     	;# 
   205  0291                     	;# 
   206  0292                     	;# 
   207  0293                     	;# 
   208  0294                     	;# 
   209  0295                     	;# 
   210  0295                     	;# 
   211  0296                     	;# 
   212  0297                     	;# 
   213  0298                     	;# 
   214  029F                     	;# 
   215  030C                     	;# 
   216  030D                     	;# 
   217  030E                     	;# 
   218  0311                     	;# 
   219  0311                     	;# 
   220  0312                     	;# 
   221  0313                     	;# 
   222  0314                     	;# 
   223  0315                     	;# 
   224  0315                     	;# 
   225  0316                     	;# 
   226  0317                     	;# 
   227  0318                     	;# 
   228  038C                     	;# 
   229  038D                     	;# 
   230  038E                     	;# 
   231  0391                     	;# 
   232  0392                     	;# 
   233  0393                     	;# 
   234  0394                     	;# 
   235  0395                     	;# 
   236  0396                     	;# 
   237  0397                     	;# 
   238  0398                     	;# 
   239  0399                     	;# 
   240  039A                     	;# 
   241  039C                     	;# 
   242  039D                     	;# 
   243  039E                     	;# 
   244  039F                     	;# 
   245  0411                     	;# 
   246  0411                     	;# 
   247  0412                     	;# 
   248  0413                     	;# 
   249  0414                     	;# 
   250  0415                     	;# 
   251  0416                     	;# 
   252  0417                     	;# 
   253  0418                     	;# 
   254  0418                     	;# 
   255  0419                     	;# 
   256  041A                     	;# 
   257  041B                     	;# 
   258  041C                     	;# 
   259  041D                     	;# 
   260  041E                     	;# 
   261  041F                     	;# 
   262  0498                     	;# 
   263  0498                     	;# 
   264  0499                     	;# 
   265  049A                     	;# 
   266  049B                     	;# 
   267  049B                     	;# 
   268  049C                     	;# 
   269  049D                     	;# 
   270  049E                     	;# 
   271  049F                     	;# 
   272  0617                     	;# 
   273  0618                     	;# 
   274  0619                     	;# 
   275  0619                     	;# 
   276  061A                     	;# 
   277  061B                     	;# 
   278  061C                     	;# 
   279  061C                     	;# 
   280  061F                     	;# 
   281  0691                     	;# 
   282  0692                     	;# 
   283  0693                     	;# 
   284  0694                     	;# 
   285  0695                     	;# 
   286  0696                     	;# 
   287  0697                     	;# 
   288  0698                     	;# 
   289  0699                     	;# 
   290  0711                     	;# 
   291  0712                     	;# 
   292  0713                     	;# 
   293  0714                     	;# 
   294  0715                     	;# 
   295  0716                     	;# 
   296  0717                     	;# 
   297  0718                     	;# 
   298  0719                     	;# 
   299  0891                     	;# 
   300  0891                     	;# 
   301  0891                     	;# 
   302  0891                     	;# 
   303  0891                     	;# 
   304  0891                     	;# 
   305  0892                     	;# 
   306  0892                     	;# 
   307  0892                     	;# 
   308  0893                     	;# 
   309  0893                     	;# 
   310  0893                     	;# 
   311  0893                     	;# 
   312  0893                     	;# 
   313  0893                     	;# 
   314  0894                     	;# 
   315  0894                     	;# 
   316  0894                     	;# 
   317  0895                     	;# 
   318  0895                     	;# 
   319  0895                     	;# 
   320  0896                     	;# 
   321  0896                     	;# 
   322  0896                     	;# 
   323  089B                     	;# 
   324  0911                     	;# 
   325  0912                     	;# 
   326  0913                     	;# 
   327  0914                     	;# 
   328  0915                     	;# 
   329  0916                     	;# 
   330  0918                     	;# 
   331  0919                     	;# 
   332  091A                     	;# 
   333  091B                     	;# 
   334  091C                     	;# 
   335  091D                     	;# 
   336  091E                     	;# 
   337  091F                     	;# 
   338  0E0F                     	;# 
   339  0E10                     	;# 
   340  0E11                     	;# 
   341  0E12                     	;# 
   342  0E13                     	;# 
   343  0E14                     	;# 
   344  0E15                     	;# 
   345  0E16                     	;# 
   346  0E17                     	;# 
   347  0E18                     	;# 
   348  0E19                     	;# 
   349  0E1A                     	;# 
   350  0E1B                     	;# 
   351  0E1C                     	;# 
   352  0E1D                     	;# 
   353  0E1E                     	;# 
   354  0E1F                     	;# 
   355  0E20                     	;# 
   356  0E21                     	;# 
   357  0E22                     	;# 
   358  0E24                     	;# 
   359  0E25                     	;# 
   360  0E28                     	;# 
   361  0E29                     	;# 
   362  0E2A                     	;# 
   363  0E2B                     	;# 
   364  0E2C                     	;# 
   365  0E2D                     	;# 
   366  0E2E                     	;# 
   367  0E2F                     	;# 
   368  0E90                     	;# 
   369  0E91                     	;# 
   370  0E92                     	;# 
   371  0E94                     	;# 
   372  0E95                     	;# 
   373  0E9C                     	;# 
   374  0E9D                     	;# 
   375  0E9E                     	;# 
   376  0E9F                     	;# 
   377  0EA0                     	;# 
   378  0EA1                     	;# 
   379  0EA2                     	;# 
   380  0EA3                     	;# 
   381  0EA4                     	;# 
   382  0EA5                     	;# 
   383  0EA6                     	;# 
   384  0EA7                     	;# 
   385  0F0F                     	;# 
   386  0F10                     	;# 
   387  0F11                     	;# 
   388  0F12                     	;# 
   389  0F13                     	;# 
   390  0F14                     	;# 
   391  0F15                     	;# 
   392  0F16                     	;# 
   393  0F17                     	;# 
   394  0F18                     	;# 
   395  0F19                     	;# 
   396  0F1A                     	;# 
   397  0F1B                     	;# 
   398  0F1C                     	;# 
   399  0F1D                     	;# 
   400  0F1E                     	;# 
   401  0F1F                     	;# 
   402  0F20                     	;# 
   403  0F21                     	;# 
   404  0F22                     	;# 
   405  0F23                     	;# 
   406  0F24                     	;# 
   407  0F25                     	;# 
   408  0F26                     	;# 
   409  0F27                     	;# 
   410  0F28                     	;# 
   411  0F29                     	;# 
   412  0F2A                     	;# 
   413  0F2B                     	;# 
   414  0F2C                     	;# 
   415  0F2D                     	;# 
   416  0F2E                     	;# 
   417  0F2F                     	;# 
   418  0F30                     	;# 
   419  0F31                     	;# 
   420  0F32                     	;# 
   421  0F33                     	;# 
   422  0F34                     	;# 
   423  0F35                     	;# 
   424  0F36                     	;# 
   425  0F37                     	;# 
   426  0FE4                     	;# 
   427  0FE5                     	;# 
   428  0FE6                     	;# 
   429  0FE7                     	;# 
   430  0FE8                     	;# 
   431  0FE9                     	;# 
   432  0FEA                     	;# 
   433  0FEB                     	;# 
   434  0FED                     	;# 
   435  0FEE                     	;# 
   436  0FEF                     	;# 
   437  0000                     	;# 
   438  0001                     	;# 
   439  0002                     	;# 
   440  0003                     	;# 
   441  0004                     	;# 
   442  0005                     	;# 
   443  0006                     	;# 
   444  0007                     	;# 
   445  0008                     	;# 
   446  0009                     	;# 
   447  000A                     	;# 
   448  000B                     	;# 
   449  000C                     	;# 
   450  000D                     	;# 
   451  000E                     	;# 
   452  0010                     	;# 
   453  0011                     	;# 
   454  0012                     	;# 
   455  0013                     	;# 
   456  0014                     	;# 
   457  0015                     	;# 
   458  0015                     	;# 
   459  0016                     	;# 
   460  0016                     	;# 
   461  0017                     	;# 
   462  0018                     	;# 
   463  0019                     	;# 
   464  0019                     	;# 
   465  001A                     	;# 
   466  001B                     	;# 
   467  001C                     	;# 
   468  001D                     	;# 
   469  001E                     	;# 
   470  001F                     	;# 
   471  008C                     	;# 
   472  008D                     	;# 
   473  008E                     	;# 
   474  0090                     	;# 
   475  0091                     	;# 
   476  0092                     	;# 
   477  0093                     	;# 
   478  0094                     	;# 
   479  0097                     	;# 
   480  009B                     	;# 
   481  009B                     	;# 
   482  009C                     	;# 
   483  009D                     	;# 
   484  009E                     	;# 
   485  009F                     	;# 
   486  010C                     	;# 
   487  010D                     	;# 
   488  010E                     	;# 
   489  0111                     	;# 
   490  0112                     	;# 
   491  0113                     	;# 
   492  0114                     	;# 
   493  0115                     	;# 
   494  0116                     	;# 
   495  0117                     	;# 
   496  0118                     	;# 
   497  0119                     	;# 
   498  018C                     	;# 
   499  018D                     	;# 
   500  018E                     	;# 
   501  0197                     	;# 
   502  0199                     	;# 
   503  0199                     	;# 
   504  0199                     	;# 
   505  019A                     	;# 
   506  019A                     	;# 
   507  019A                     	;# 
   508  019B                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019C                     	;# 
   514  019C                     	;# 
   515  019C                     	;# 
   516  019D                     	;# 
   517  019D                     	;# 
   518  019D                     	;# 
   519  019E                     	;# 
   520  019E                     	;# 
   521  019E                     	;# 
   522  019F                     	;# 
   523  019F                     	;# 
   524  019F                     	;# 
   525  019F                     	;# 
   526  019F                     	;# 
   527  020C                     	;# 
   528  020D                     	;# 
   529  020E                     	;# 
   530  0211                     	;# 
   531  0211                     	;# 
   532  0212                     	;# 
   533  0212                     	;# 
   534  0213                     	;# 
   535  0213                     	;# 
   536  0214                     	;# 
   537  0214                     	;# 
   538  0215                     	;# 
   539  0215                     	;# 
   540  0215                     	;# 
   541  0215                     	;# 
   542  0216                     	;# 
   543  0216                     	;# 
   544  0217                     	;# 
   545  0217                     	;# 
   546  0219                     	;# 
   547  021A                     	;# 
   548  021B                     	;# 
   549  021C                     	;# 
   550  021D                     	;# 
   551  021D                     	;# 
   552  021E                     	;# 
   553  021F                     	;# 
   554  028C                     	;# 
   555  028D                     	;# 
   556  028E                     	;# 
   557  0291                     	;# 
   558  0291                     	;# 
   559  0292                     	;# 
   560  0293                     	;# 
   561  0294                     	;# 
   562  0295                     	;# 
   563  0295                     	;# 
   564  0296                     	;# 
   565  0297                     	;# 
   566  0298                     	;# 
   567  029F                     	;# 
   568  030C                     	;# 
   569  030D                     	;# 
   570  030E                     	;# 
   571  0311                     	;# 
   572  0311                     	;# 
   573  0312                     	;# 
   574  0313                     	;# 
   575  0314                     	;# 
   576  0315                     	;# 
   577  0315                     	;# 
   578  0316                     	;# 
   579  0317                     	;# 
   580  0318                     	;# 
   581  038C                     	;# 
   582  038D                     	;# 
   583  038E                     	;# 
   584  0391                     	;# 
   585  0392                     	;# 
   586  0393                     	;# 
   587  0394                     	;# 
   588  0395                     	;# 
   589  0396                     	;# 
   590  0397                     	;# 
   591  0398                     	;# 
   592  0399                     	;# 
   593  039A                     	;# 
   594  039C                     	;# 
   595  039D                     	;# 
   596  039E                     	;# 
   597  039F                     	;# 
   598  0411                     	;# 
   599  0411                     	;# 
   600  0412                     	;# 
   601  0413                     	;# 
   602  0414                     	;# 
   603  0415                     	;# 
   604  0416                     	;# 
   605  0417                     	;# 
   606  0418                     	;# 
   607  0418                     	;# 
   608  0419                     	;# 
   609  041A                     	;# 
   610  041B                     	;# 
   611  041C                     	;# 
   612  041D                     	;# 
   613  041E                     	;# 
   614  041F                     	;# 
   615  0498                     	;# 
   616  0498                     	;# 
   617  0499                     	;# 
   618  049A                     	;# 
   619  049B                     	;# 
   620  049B                     	;# 
   621  049C                     	;# 
   622  049D                     	;# 
   623  049E                     	;# 
   624  049F                     	;# 
   625  0617                     	;# 
   626  0618                     	;# 
   627  0619                     	;# 
   628  0619                     	;# 
   629  061A                     	;# 
   630  061B                     	;# 
   631  061C                     	;# 
   632  061C                     	;# 
   633  061F                     	;# 
   634  0691                     	;# 
   635  0692                     	;# 
   636  0693                     	;# 
   637  0694                     	;# 
   638  0695                     	;# 
   639  0696                     	;# 
   640  0697                     	;# 
   641  0698                     	;# 
   642  0699                     	;# 
   643  0711                     	;# 
   644  0712                     	;# 
   645  0713                     	;# 
   646  0714                     	;# 
   647  0715                     	;# 
   648  0716                     	;# 
   649  0717                     	;# 
   650  0718                     	;# 
   651  0719                     	;# 
   652  0891                     	;# 
   653  0891                     	;# 
   654  0891                     	;# 
   655  0891                     	;# 
   656  0891                     	;# 
   657  0891                     	;# 
   658  0892                     	;# 
   659  0892                     	;# 
   660  0892                     	;# 
   661  0893                     	;# 
   662  0893                     	;# 
   663  0893                     	;# 
   664  0893                     	;# 
   665  0893                     	;# 
   666  0893                     	;# 
   667  0894                     	;# 
   668  0894                     	;# 
   669  0894                     	;# 
   670  0895                     	;# 
   671  0895                     	;# 
   672  0895                     	;# 
   673  0896                     	;# 
   674  0896                     	;# 
   675  0896                     	;# 
   676  089B                     	;# 
   677  0911                     	;# 
   678  0912                     	;# 
   679  0913                     	;# 
   680  0914                     	;# 
   681  0915                     	;# 
   682  0916                     	;# 
   683  0918                     	;# 
   684  0919                     	;# 
   685  091A                     	;# 
   686  091B                     	;# 
   687  091C                     	;# 
   688  091D                     	;# 
   689  091E                     	;# 
   690  091F                     	;# 
   691  0E0F                     	;# 
   692  0E10                     	;# 
   693  0E11                     	;# 
   694  0E12                     	;# 
   695  0E13                     	;# 
   696  0E14                     	;# 
   697  0E15                     	;# 
   698  0E16                     	;# 
   699  0E17                     	;# 
   700  0E18                     	;# 
   701  0E19                     	;# 
   702  0E1A                     	;# 
   703  0E1B                     	;# 
   704  0E1C                     	;# 
   705  0E1D                     	;# 
   706  0E1E                     	;# 
   707  0E1F                     	;# 
   708  0E20                     	;# 
   709  0E21                     	;# 
   710  0E22                     	;# 
   711  0E24                     	;# 
   712  0E25                     	;# 
   713  0E28                     	;# 
   714  0E29                     	;# 
   715  0E2A                     	;# 
   716  0E2B                     	;# 
   717  0E2C                     	;# 
   718  0E2D                     	;# 
   719  0E2E                     	;# 
   720  0E2F                     	;# 
   721  0E90                     	;# 
   722  0E91                     	;# 
   723  0E92                     	;# 
   724  0E94                     	;# 
   725  0E95                     	;# 
   726  0E9C                     	;# 
   727  0E9D                     	;# 
   728  0E9E                     	;# 
   729  0E9F                     	;# 
   730  0EA0                     	;# 
   731  0EA1                     	;# 
   732  0EA2                     	;# 
   733  0EA3                     	;# 
   734  0EA4                     	;# 
   735  0EA5                     	;# 
   736  0EA6                     	;# 
   737  0EA7                     	;# 
   738  0F0F                     	;# 
   739  0F10                     	;# 
   740  0F11                     	;# 
   741  0F12                     	;# 
   742  0F13                     	;# 
   743  0F14                     	;# 
   744  0F15                     	;# 
   745  0F16                     	;# 
   746  0F17                     	;# 
   747  0F18                     	;# 
   748  0F19                     	;# 
   749  0F1A                     	;# 
   750  0F1B                     	;# 
   751  0F1C                     	;# 
   752  0F1D                     	;# 
   753  0F1E                     	;# 
   754  0F1F                     	;# 
   755  0F20                     	;# 
   756  0F21                     	;# 
   757  0F22                     	;# 
   758  0F23                     	;# 
   759  0F24                     	;# 
   760  0F25                     	;# 
   761  0F26                     	;# 
   762  0F27                     	;# 
   763  0F28                     	;# 
   764  0F29                     	;# 
   765  0F2A                     	;# 
   766  0F2B                     	;# 
   767  0F2C                     	;# 
   768  0F2D                     	;# 
   769  0F2E                     	;# 
   770  0F2F                     	;# 
   771  0F30                     	;# 
   772  0F31                     	;# 
   773  0F32                     	;# 
   774  0F33                     	;# 
   775  0F34                     	;# 
   776  0F35                     	;# 
   777  0F36                     	;# 
   778  0F37                     	;# 
   779  0FE4                     	;# 
   780  0FE5                     	;# 
   781  0FE6                     	;# 
   782  0FE7                     	;# 
   783  0FE8                     	;# 
   784  0FE9                     	;# 
   785  0FEA                     	;# 
   786  0FEB                     	;# 
   787  0FED                     	;# 
   788  0FEE                     	;# 
   789  0FEF                     	;# 
   790  0000                     	;# 
   791  0001                     	;# 
   792  0002                     	;# 
   793  0003                     	;# 
   794  0004                     	;# 
   795  0005                     	;# 
   796  0006                     	;# 
   797  0007                     	;# 
   798  0008                     	;# 
   799  0009                     	;# 
   800  000A                     	;# 
   801  000B                     	;# 
   802  000C                     	;# 
   803  000D                     	;# 
   804  000E                     	;# 
   805  0010                     	;# 
   806  0011                     	;# 
   807  0012                     	;# 
   808  0013                     	;# 
   809  0014                     	;# 
   810  0015                     	;# 
   811  0015                     	;# 
   812  0016                     	;# 
   813  0016                     	;# 
   814  0017                     	;# 
   815  0018                     	;# 
   816  0019                     	;# 
   817  0019                     	;# 
   818  001A                     	;# 
   819  001B                     	;# 
   820  001C                     	;# 
   821  001D                     	;# 
   822  001E                     	;# 
   823  001F                     	;# 
   824  008C                     	;# 
   825  008D                     	;# 
   826  008E                     	;# 
   827  0090                     	;# 
   828  0091                     	;# 
   829  0092                     	;# 
   830  0093                     	;# 
   831  0094                     	;# 
   832  0097                     	;# 
   833  009B                     	;# 
   834  009B                     	;# 
   835  009C                     	;# 
   836  009D                     	;# 
   837  009E                     	;# 
   838  009F                     	;# 
   839  010C                     	;# 
   840  010D                     	;# 
   841  010E                     	;# 
   842  0111                     	;# 
   843  0112                     	;# 
   844  0113                     	;# 
   845  0114                     	;# 
   846  0115                     	;# 
   847  0116                     	;# 
   848  0117                     	;# 
   849  0118                     	;# 
   850  0119                     	;# 
   851  018C                     	;# 
   852  018D                     	;# 
   853  018E                     	;# 
   854  0197                     	;# 
   855  0199                     	;# 
   856  0199                     	;# 
   857  0199                     	;# 
   858  019A                     	;# 
   859  019A                     	;# 
   860  019A                     	;# 
   861  019B                     	;# 
   862  019B                     	;# 
   863  019B                     	;# 
   864  019B                     	;# 
   865  019B                     	;# 
   866  019C                     	;# 
   867  019C                     	;# 
   868  019C                     	;# 
   869  019D                     	;# 
   870  019D                     	;# 
   871  019D                     	;# 
   872  019E                     	;# 
   873  019E                     	;# 
   874  019E                     	;# 
   875  019F                     	;# 
   876  019F                     	;# 
   877  019F                     	;# 
   878  019F                     	;# 
   879  019F                     	;# 
   880  020C                     	;# 
   881  020D                     	;# 
   882  020E                     	;# 
   883  0211                     	;# 
   884  0211                     	;# 
   885  0212                     	;# 
   886  0212                     	;# 
   887  0213                     	;# 
   888  0213                     	;# 
   889  0214                     	;# 
   890  0214                     	;# 
   891  0215                     	;# 
   892  0215                     	;# 
   893  0215                     	;# 
   894  0215                     	;# 
   895  0216                     	;# 
   896  0216                     	;# 
   897  0217                     	;# 
   898  0217                     	;# 
   899  0219                     	;# 
   900  021A                     	;# 
   901  021B                     	;# 
   902  021C                     	;# 
   903  021D                     	;# 
   904  021D                     	;# 
   905  021E                     	;# 
   906  021F                     	;# 
   907  028C                     	;# 
   908  028D                     	;# 
   909  028E                     	;# 
   910  0291                     	;# 
   911  0291                     	;# 
   912  0292                     	;# 
   913  0293                     	;# 
   914  0294                     	;# 
   915  0295                     	;# 
   916  0295                     	;# 
   917  0296                     	;# 
   918  0297                     	;# 
   919  0298                     	;# 
   920  029F                     	;# 
   921  030C                     	;# 
   922  030D                     	;# 
   923  030E                     	;# 
   924  0311                     	;# 
   925  0311                     	;# 
   926  0312                     	;# 
   927  0313                     	;# 
   928  0314                     	;# 
   929  0315                     	;# 
   930  0315                     	;# 
   931  0316                     	;# 
   932  0317                     	;# 
   933  0318                     	;# 
   934  038C                     	;# 
   935  038D                     	;# 
   936  038E                     	;# 
   937  0391                     	;# 
   938  0392                     	;# 
   939  0393                     	;# 
   940  0394                     	;# 
   941  0395                     	;# 
   942  0396                     	;# 
   943  0397                     	;# 
   944  0398                     	;# 
   945  0399                     	;# 
   946  039A                     	;# 
   947  039C                     	;# 
   948  039D                     	;# 
   949  039E                     	;# 
   950  039F                     	;# 
   951  0411                     	;# 
   952  0411                     	;# 
   953  0412                     	;# 
   954  0413                     	;# 
   955  0414                     	;# 
   956  0415                     	;# 
   957  0416                     	;# 
   958  0417                     	;# 
   959  0418                     	;# 
   960  0418                     	;# 
   961  0419                     	;# 
   962  041A                     	;# 
   963  041B                     	;# 
   964  041C                     	;# 
   965  041D                     	;# 
   966  041E                     	;# 
   967  041F                     	;# 
   968  0498                     	;# 
   969  0498                     	;# 
   970  0499                     	;# 
   971  049A                     	;# 
   972  049B                     	;# 
   973  049B                     	;# 
   974  049C                     	;# 
   975  049D                     	;# 
   976  049E                     	;# 
   977  049F                     	;# 
   978  0617                     	;# 
   979  0618                     	;# 
   980  0619                     	;# 
   981  0619                     	;# 
   982  061A                     	;# 
   983  061B                     	;# 
   984  061C                     	;# 
   985  061C                     	;# 
   986  061F                     	;# 
   987  0691                     	;# 
   988  0692                     	;# 
   989  0693                     	;# 
   990  0694                     	;# 
   991  0695                     	;# 
   992  0696                     	;# 
   993  0697                     	;# 
   994  0698                     	;# 
   995  0699                     	;# 
   996  0711                     	;# 
   997  0712                     	;# 
   998  0713                     	;# 
   999  0714                     	;# 
  1000  0715                     	;# 
  1001  0716                     	;# 
  1002  0717                     	;# 
  1003  0718                     	;# 
  1004  0719                     	;# 
  1005  0891                     	;# 
  1006  0891                     	;# 
  1007  0891                     	;# 
  1008  0891                     	;# 
  1009  0891                     	;# 
  1010  0891                     	;# 
  1011  0892                     	;# 
  1012  0892                     	;# 
  1013  0892                     	;# 
  1014  0893                     	;# 
  1015  0893                     	;# 
  1016  0893                     	;# 
  1017  0893                     	;# 
  1018  0893                     	;# 
  1019  0893                     	;# 
  1020  0894                     	;# 
  1021  0894                     	;# 
  1022  0894                     	;# 
  1023  0895                     	;# 
  1024  0895                     	;# 
  1025  0895                     	;# 
  1026  0896                     	;# 
  1027  0896                     	;# 
  1028  0896                     	;# 
  1029  089B                     	;# 
  1030  0911                     	;# 
  1031  0912                     	;# 
  1032  0913                     	;# 
  1033  0914                     	;# 
  1034  0915                     	;# 
  1035  0916                     	;# 
  1036  0918                     	;# 
  1037  0919                     	;# 
  1038  091A                     	;# 
  1039  091B                     	;# 
  1040  091C                     	;# 
  1041  091D                     	;# 
  1042  091E                     	;# 
  1043  091F                     	;# 
  1044  0E0F                     	;# 
  1045  0E10                     	;# 
  1046  0E11                     	;# 
  1047  0E12                     	;# 
  1048  0E13                     	;# 
  1049  0E14                     	;# 
  1050  0E15                     	;# 
  1051  0E16                     	;# 
  1052  0E17                     	;# 
  1053  0E18                     	;# 
  1054  0E19                     	;# 
  1055  0E1A                     	;# 
  1056  0E1B                     	;# 
  1057  0E1C                     	;# 
  1058  0E1D                     	;# 
  1059  0E1E                     	;# 
  1060  0E1F                     	;# 
  1061  0E20                     	;# 
  1062  0E21                     	;# 
  1063  0E22                     	;# 
  1064  0E24                     	;# 
  1065  0E25                     	;# 
  1066  0E28                     	;# 
  1067  0E29                     	;# 
  1068  0E2A                     	;# 
  1069  0E2B                     	;# 
  1070  0E2C                     	;# 
  1071  0E2D                     	;# 
  1072  0E2E                     	;# 
  1073  0E2F                     	;# 
  1074  0E90                     	;# 
  1075  0E91                     	;# 
  1076  0E92                     	;# 
  1077  0E94                     	;# 
  1078  0E95                     	;# 
  1079  0E9C                     	;# 
  1080  0E9D                     	;# 
  1081  0E9E                     	;# 
  1082  0E9F                     	;# 
  1083  0EA0                     	;# 
  1084  0EA1                     	;# 
  1085  0EA2                     	;# 
  1086  0EA3                     	;# 
  1087  0EA4                     	;# 
  1088  0EA5                     	;# 
  1089  0EA6                     	;# 
  1090  0EA7                     	;# 
  1091  0F0F                     	;# 
  1092  0F10                     	;# 
  1093  0F11                     	;# 
  1094  0F12                     	;# 
  1095  0F13                     	;# 
  1096  0F14                     	;# 
  1097  0F15                     	;# 
  1098  0F16                     	;# 
  1099  0F17                     	;# 
  1100  0F18                     	;# 
  1101  0F19                     	;# 
  1102  0F1A                     	;# 
  1103  0F1B                     	;# 
  1104  0F1C                     	;# 
  1105  0F1D                     	;# 
  1106  0F1E                     	;# 
  1107  0F1F                     	;# 
  1108  0F20                     	;# 
  1109  0F21                     	;# 
  1110  0F22                     	;# 
  1111  0F23                     	;# 
  1112  0F24                     	;# 
  1113  0F25                     	;# 
  1114  0F26                     	;# 
  1115  0F27                     	;# 
  1116  0F28                     	;# 
  1117  0F29                     	;# 
  1118  0F2A                     	;# 
  1119  0F2B                     	;# 
  1120  0F2C                     	;# 
  1121  0F2D                     	;# 
  1122  0F2E                     	;# 
  1123  0F2F                     	;# 
  1124  0F30                     	;# 
  1125  0F31                     	;# 
  1126  0F32                     	;# 
  1127  0F33                     	;# 
  1128  0F34                     	;# 
  1129  0F35                     	;# 
  1130  0F36                     	;# 
  1131  0F37                     	;# 
  1132  0FE4                     	;# 
  1133  0FE5                     	;# 
  1134  0FE6                     	;# 
  1135  0FE7                     	;# 
  1136  0FE8                     	;# 
  1137  0FE9                     	;# 
  1138  0FEA                     	;# 
  1139  0FEB                     	;# 
  1140  0FED                     	;# 
  1141  0FEE                     	;# 
  1142  0FEF                     	;# 
  1143  0000                     	;# 
  1144  0001                     	;# 
  1145  0002                     	;# 
  1146  0003                     	;# 
  1147  0004                     	;# 
  1148  0005                     	;# 
  1149  0006                     	;# 
  1150  0007                     	;# 
  1151  0008                     	;# 
  1152  0009                     	;# 
  1153  000A                     	;# 
  1154  000B                     	;# 
  1155  000C                     	;# 
  1156  000D                     	;# 
  1157  000E                     	;# 
  1158  0010                     	;# 
  1159  0011                     	;# 
  1160  0012                     	;# 
  1161  0013                     	;# 
  1162  0014                     	;# 
  1163  0015                     	;# 
  1164  0015                     	;# 
  1165  0016                     	;# 
  1166  0016                     	;# 
  1167  0017                     	;# 
  1168  0018                     	;# 
  1169  0019                     	;# 
  1170  0019                     	;# 
  1171  001A                     	;# 
  1172  001B                     	;# 
  1173  001C                     	;# 
  1174  001D                     	;# 
  1175  001E                     	;# 
  1176  001F                     	;# 
  1177  008C                     	;# 
  1178  008D                     	;# 
  1179  008E                     	;# 
  1180  0090                     	;# 
  1181  0091                     	;# 
  1182  0092                     	;# 
  1183  0093                     	;# 
  1184  0094                     	;# 
  1185  0097                     	;# 
  1186  009B                     	;# 
  1187  009B                     	;# 
  1188  009C                     	;# 
  1189  009D                     	;# 
  1190  009E                     	;# 
  1191  009F                     	;# 
  1192  010C                     	;# 
  1193  010D                     	;# 
  1194  010E                     	;# 
  1195  0111                     	;# 
  1196  0112                     	;# 
  1197  0113                     	;# 
  1198  0114                     	;# 
  1199  0115                     	;# 
  1200  0116                     	;# 
  1201  0117                     	;# 
  1202  0118                     	;# 
  1203  0119                     	;# 
  1204  018C                     	;# 
  1205  018D                     	;# 
  1206  018E                     	;# 
  1207  0197                     	;# 
  1208  0199                     	;# 
  1209  0199                     	;# 
  1210  0199                     	;# 
  1211  019A                     	;# 
  1212  019A                     	;# 
  1213  019A                     	;# 
  1214  019B                     	;# 
  1215  019B                     	;# 
  1216  019B                     	;# 
  1217  019B                     	;# 
  1218  019B                     	;# 
  1219  019C                     	;# 
  1220  019C                     	;# 
  1221  019C                     	;# 
  1222  019D                     	;# 
  1223  019D                     	;# 
  1224  019D                     	;# 
  1225  019E                     	;# 
  1226  019E                     	;# 
  1227  019E                     	;# 
  1228  019F                     	;# 
  1229  019F                     	;# 
  1230  019F                     	;# 
  1231  019F                     	;# 
  1232  019F                     	;# 
  1233  020C                     	;# 
  1234  020D                     	;# 
  1235  020E                     	;# 
  1236  0211                     	;# 
  1237  0211                     	;# 
  1238  0212                     	;# 
  1239  0212                     	;# 
  1240  0213                     	;# 
  1241  0213                     	;# 
  1242  0214                     	;# 
  1243  0214                     	;# 
  1244  0215                     	;# 
  1245  0215                     	;# 
  1246  0215                     	;# 
  1247  0215                     	;# 
  1248  0216                     	;# 
  1249  0216                     	;# 
  1250  0217                     	;# 
  1251  0217                     	;# 
  1252  0219                     	;# 
  1253  021A                     	;# 
  1254  021B                     	;# 
  1255  021C                     	;# 
  1256  021D                     	;# 
  1257  021D                     	;# 
  1258  021E                     	;# 
  1259  021F                     	;# 
  1260  028C                     	;# 
  1261  028D                     	;# 
  1262  028E                     	;# 
  1263  0291                     	;# 
  1264  0291                     	;# 
  1265  0292                     	;# 
  1266  0293                     	;# 
  1267  0294                     	;# 
  1268  0295                     	;# 
  1269  0295                     	;# 
  1270  0296                     	;# 
  1271  0297                     	;# 
  1272  0298                     	;# 
  1273  029F                     	;# 
  1274  030C                     	;# 
  1275  030D                     	;# 
  1276  030E                     	;# 
  1277  0311                     	;# 
  1278  0311                     	;# 
  1279  0312                     	;# 
  1280  0313                     	;# 
  1281  0314                     	;# 
  1282  0315                     	;# 
  1283  0315                     	;# 
  1284  0316                     	;# 
  1285  0317                     	;# 
  1286  0318                     	;# 
  1287  038C                     	;# 
  1288  038D                     	;# 
  1289  038E                     	;# 
  1290  0391                     	;# 
  1291  0392                     	;# 
  1292  0393                     	;# 
  1293  0394                     	;# 
  1294  0395                     	;# 
  1295  0396                     	;# 
  1296  0397                     	;# 
  1297  0398                     	;# 
  1298  0399                     	;# 
  1299  039A                     	;# 
  1300  039C                     	;# 
  1301  039D                     	;# 
  1302  039E                     	;# 
  1303  039F                     	;# 
  1304  0411                     	;# 
  1305  0411                     	;# 
  1306  0412                     	;# 
  1307  0413                     	;# 
  1308  0414                     	;# 
  1309  0415                     	;# 
  1310  0416                     	;# 
  1311  0417                     	;# 
  1312  0418                     	;# 
  1313  0418                     	;# 
  1314  0419                     	;# 
  1315  041A                     	;# 
  1316  041B                     	;# 
  1317  041C                     	;# 
  1318  041D                     	;# 
  1319  041E                     	;# 
  1320  041F                     	;# 
  1321  0498                     	;# 
  1322  0498                     	;# 
  1323  0499                     	;# 
  1324  049A                     	;# 
  1325  049B                     	;# 
  1326  049B                     	;# 
  1327  049C                     	;# 
  1328  049D                     	;# 
  1329  049E                     	;# 
  1330  049F                     	;# 
  1331  0617                     	;# 
  1332  0618                     	;# 
  1333  0619                     	;# 
  1334  0619                     	;# 
  1335  061A                     	;# 
  1336  061B                     	;# 
  1337  061C                     	;# 
  1338  061C                     	;# 
  1339  061F                     	;# 
  1340  0691                     	;# 
  1341  0692                     	;# 
  1342  0693                     	;# 
  1343  0694                     	;# 
  1344  0695                     	;# 
  1345  0696                     	;# 
  1346  0697                     	;# 
  1347  0698                     	;# 
  1348  0699                     	;# 
  1349  0711                     	;# 
  1350  0712                     	;# 
  1351  0713                     	;# 
  1352  0714                     	;# 
  1353  0715                     	;# 
  1354  0716                     	;# 
  1355  0717                     	;# 
  1356  0718                     	;# 
  1357  0719                     	;# 
  1358  0891                     	;# 
  1359  0891                     	;# 
  1360  0891                     	;# 
  1361  0891                     	;# 
  1362  0891                     	;# 
  1363  0891                     	;# 
  1364  0892                     	;# 
  1365  0892                     	;# 
  1366  0892                     	;# 
  1367  0893                     	;# 
  1368  0893                     	;# 
  1369  0893                     	;# 
  1370  0893                     	;# 
  1371  0893                     	;# 
  1372  0893                     	;# 
  1373  0894                     	;# 
  1374  0894                     	;# 
  1375  0894                     	;# 
  1376  0895                     	;# 
  1377  0895                     	;# 
  1378  0895                     	;# 
  1379  0896                     	;# 
  1380  0896                     	;# 
  1381  0896                     	;# 
  1382  089B                     	;# 
  1383  0911                     	;# 
  1384  0912                     	;# 
  1385  0913                     	;# 
  1386  0914                     	;# 
  1387  0915                     	;# 
  1388  0916                     	;# 
  1389  0918                     	;# 
  1390  0919                     	;# 
  1391  091A                     	;# 
  1392  091B                     	;# 
  1393  091C                     	;# 
  1394  091D                     	;# 
  1395  091E                     	;# 
  1396  091F                     	;# 
  1397  0E0F                     	;# 
  1398  0E10                     	;# 
  1399  0E11                     	;# 
  1400  0E12                     	;# 
  1401  0E13                     	;# 
  1402  0E14                     	;# 
  1403  0E15                     	;# 
  1404  0E16                     	;# 
  1405  0E17                     	;# 
  1406  0E18                     	;# 
  1407  0E19                     	;# 
  1408  0E1A                     	;# 
  1409  0E1B                     	;# 
  1410  0E1C                     	;# 
  1411  0E1D                     	;# 
  1412  0E1E                     	;# 
  1413  0E1F                     	;# 
  1414  0E20                     	;# 
  1415  0E21                     	;# 
  1416  0E22                     	;# 
  1417  0E24                     	;# 
  1418  0E25                     	;# 
  1419  0E28                     	;# 
  1420  0E29                     	;# 
  1421  0E2A                     	;# 
  1422  0E2B                     	;# 
  1423  0E2C                     	;# 
  1424  0E2D                     	;# 
  1425  0E2E                     	;# 
  1426  0E2F                     	;# 
  1427  0E90                     	;# 
  1428  0E91                     	;# 
  1429  0E92                     	;# 
  1430  0E94                     	;# 
  1431  0E95                     	;# 
  1432  0E9C                     	;# 
  1433  0E9D                     	;# 
  1434  0E9E                     	;# 
  1435  0E9F                     	;# 
  1436  0EA0                     	;# 
  1437  0EA1                     	;# 
  1438  0EA2                     	;# 
  1439  0EA3                     	;# 
  1440  0EA4                     	;# 
  1441  0EA5                     	;# 
  1442  0EA6                     	;# 
  1443  0EA7                     	;# 
  1444  0F0F                     	;# 
  1445  0F10                     	;# 
  1446  0F11                     	;# 
  1447  0F12                     	;# 
  1448  0F13                     	;# 
  1449  0F14                     	;# 
  1450  0F15                     	;# 
  1451  0F16                     	;# 
  1452  0F17                     	;# 
  1453  0F18                     	;# 
  1454  0F19                     	;# 
  1455  0F1A                     	;# 
  1456  0F1B                     	;# 
  1457  0F1C                     	;# 
  1458  0F1D                     	;# 
  1459  0F1E                     	;# 
  1460  0F1F                     	;# 
  1461  0F20                     	;# 
  1462  0F21                     	;# 
  1463  0F22                     	;# 
  1464  0F23                     	;# 
  1465  0F24                     	;# 
  1466  0F25                     	;# 
  1467  0F26                     	;# 
  1468  0F27                     	;# 
  1469  0F28                     	;# 
  1470  0F29                     	;# 
  1471  0F2A                     	;# 
  1472  0F2B                     	;# 
  1473  0F2C                     	;# 
  1474  0F2D                     	;# 
  1475  0F2E                     	;# 
  1476  0F2F                     	;# 
  1477  0F30                     	;# 
  1478  0F31                     	;# 
  1479  0F32                     	;# 
  1480  0F33                     	;# 
  1481  0F34                     	;# 
  1482  0F35                     	;# 
  1483  0F36                     	;# 
  1484  0F37                     	;# 
  1485  0FE4                     	;# 
  1486  0FE5                     	;# 
  1487  0FE6                     	;# 
  1488  0FE7                     	;# 
  1489  0FE8                     	;# 
  1490  0FE9                     	;# 
  1491  0FEA                     	;# 
  1492  0FEB                     	;# 
  1493  0FED                     	;# 
  1494  0FEE                     	;# 
  1495  0FEF                     	;# 
  1496  0000                     	;# 
  1497  0001                     	;# 
  1498  0002                     	;# 
  1499  0003                     	;# 
  1500  0004                     	;# 
  1501  0005                     	;# 
  1502  0006                     	;# 
  1503  0007                     	;# 
  1504  0008                     	;# 
  1505  0009                     	;# 
  1506  000A                     	;# 
  1507  000B                     	;# 
  1508  000C                     	;# 
  1509  000D                     	;# 
  1510  000E                     	;# 
  1511  0010                     	;# 
  1512  0011                     	;# 
  1513  0012                     	;# 
  1514  0013                     	;# 
  1515  0014                     	;# 
  1516  0015                     	;# 
  1517  0015                     	;# 
  1518  0016                     	;# 
  1519  0016                     	;# 
  1520  0017                     	;# 
  1521  0018                     	;# 
  1522  0019                     	;# 
  1523  0019                     	;# 
  1524  001A                     	;# 
  1525  001B                     	;# 
  1526  001C                     	;# 
  1527  001D                     	;# 
  1528  001E                     	;# 
  1529  001F                     	;# 
  1530  008C                     	;# 
  1531  008D                     	;# 
  1532  008E                     	;# 
  1533  0090                     	;# 
  1534  0091                     	;# 
  1535  0092                     	;# 
  1536  0093                     	;# 
  1537  0094                     	;# 
  1538  0097                     	;# 
  1539  009B                     	;# 
  1540  009B                     	;# 
  1541  009C                     	;# 
  1542  009D                     	;# 
  1543  009E                     	;# 
  1544  009F                     	;# 
  1545  010C                     	;# 
  1546  010D                     	;# 
  1547  010E                     	;# 
  1548  0111                     	;# 
  1549  0112                     	;# 
  1550  0113                     	;# 
  1551  0114                     	;# 
  1552  0115                     	;# 
  1553  0116                     	;# 
  1554  0117                     	;# 
  1555  0118                     	;# 
  1556  0119                     	;# 
  1557  018C                     	;# 
  1558  018D                     	;# 
  1559  018E                     	;# 
  1560  0197                     	;# 
  1561  0199                     	;# 
  1562  0199                     	;# 
  1563  0199                     	;# 
  1564  019A                     	;# 
  1565  019A                     	;# 
  1566  019A                     	;# 
  1567  019B                     	;# 
  1568  019B                     	;# 
  1569  019B                     	;# 
  1570  019B                     	;# 
  1571  019B                     	;# 
  1572  019C                     	;# 
  1573  019C                     	;# 
  1574  019C                     	;# 
  1575  019D                     	;# 
  1576  019D                     	;# 
  1577  019D                     	;# 
  1578  019E                     	;# 
  1579  019E                     	;# 
  1580  019E                     	;# 
  1581  019F                     	;# 
  1582  019F                     	;# 
  1583  019F                     	;# 
  1584  019F                     	;# 
  1585  019F                     	;# 
  1586  020C                     	;# 
  1587  020D                     	;# 
  1588  020E                     	;# 
  1589  0211                     	;# 
  1590  0211                     	;# 
  1591  0212                     	;# 
  1592  0212                     	;# 
  1593  0213                     	;# 
  1594  0213                     	;# 
  1595  0214                     	;# 
  1596  0214                     	;# 
  1597  0215                     	;# 
  1598  0215                     	;# 
  1599  0215                     	;# 
  1600  0215                     	;# 
  1601  0216                     	;# 
  1602  0216                     	;# 
  1603  0217                     	;# 
  1604  0217                     	;# 
  1605  0219                     	;# 
  1606  021A                     	;# 
  1607  021B                     	;# 
  1608  021C                     	;# 
  1609  021D                     	;# 
  1610  021D                     	;# 
  1611  021E                     	;# 
  1612  021F                     	;# 
  1613  028C                     	;# 
  1614  028D                     	;# 
  1615  028E                     	;# 
  1616  0291                     	;# 
  1617  0291                     	;# 
  1618  0292                     	;# 
  1619  0293                     	;# 
  1620  0294                     	;# 
  1621  0295                     	;# 
  1622  0295                     	;# 
  1623  0296                     	;# 
  1624  0297                     	;# 
  1625  0298                     	;# 
  1626  029F                     	;# 
  1627  030C                     	;# 
  1628  030D                     	;# 
  1629  030E                     	;# 
  1630  0311                     	;# 
  1631  0311                     	;# 
  1632  0312                     	;# 
  1633  0313                     	;# 
  1634  0314                     	;# 
  1635  0315                     	;# 
  1636  0315                     	;# 
  1637  0316                     	;# 
  1638  0317                     	;# 
  1639  0318                     	;# 
  1640  038C                     	;# 
  1641  038D                     	;# 
  1642  038E                     	;# 
  1643  0391                     	;# 
  1644  0392                     	;# 
  1645  0393                     	;# 
  1646  0394                     	;# 
  1647  0395                     	;# 
  1648  0396                     	;# 
  1649  0397                     	;# 
  1650  0398                     	;# 
  1651  0399                     	;# 
  1652  039A                     	;# 
  1653  039C                     	;# 
  1654  039D                     	;# 
  1655  039E                     	;# 
  1656  039F                     	;# 
  1657  0411                     	;# 
  1658  0411                     	;# 
  1659  0412                     	;# 
  1660  0413                     	;# 
  1661  0414                     	;# 
  1662  0415                     	;# 
  1663  0416                     	;# 
  1664  0417                     	;# 
  1665  0418                     	;# 
  1666  0418                     	;# 
  1667  0419                     	;# 
  1668  041A                     	;# 
  1669  041B                     	;# 
  1670  041C                     	;# 
  1671  041D                     	;# 
  1672  041E                     	;# 
  1673  041F                     	;# 
  1674  0498                     	;# 
  1675  0498                     	;# 
  1676  0499                     	;# 
  1677  049A                     	;# 
  1678  049B                     	;# 
  1679  049B                     	;# 
  1680  049C                     	;# 
  1681  049D                     	;# 
  1682  049E                     	;# 
  1683  049F                     	;# 
  1684  0617                     	;# 
  1685  0618                     	;# 
  1686  0619                     	;# 
  1687  0619                     	;# 
  1688  061A                     	;# 
  1689  061B                     	;# 
  1690  061C                     	;# 
  1691  061C                     	;# 
  1692  061F                     	;# 
  1693  0691                     	;# 
  1694  0692                     	;# 
  1695  0693                     	;# 
  1696  0694                     	;# 
  1697  0695                     	;# 
  1698  0696                     	;# 
  1699  0697                     	;# 
  1700  0698                     	;# 
  1701  0699                     	;# 
  1702  0711                     	;# 
  1703  0712                     	;# 
  1704  0713                     	;# 
  1705  0714                     	;# 
  1706  0715                     	;# 
  1707  0716                     	;# 
  1708  0717                     	;# 
  1709  0718                     	;# 
  1710  0719                     	;# 
  1711  0891                     	;# 
  1712  0891                     	;# 
  1713  0891                     	;# 
  1714  0891                     	;# 
  1715  0891                     	;# 
  1716  0891                     	;# 
  1717  0892                     	;# 
  1718  0892                     	;# 
  1719  0892                     	;# 
  1720  0893                     	;# 
  1721  0893                     	;# 
  1722  0893                     	;# 
  1723  0893                     	;# 
  1724  0893                     	;# 
  1725  0893                     	;# 
  1726  0894                     	;# 
  1727  0894                     	;# 
  1728  0894                     	;# 
  1729  0895                     	;# 
  1730  0895                     	;# 
  1731  0895                     	;# 
  1732  0896                     	;# 
  1733  0896                     	;# 
  1734  0896                     	;# 
  1735  089B                     	;# 
  1736  0911                     	;# 
  1737  0912                     	;# 
  1738  0913                     	;# 
  1739  0914                     	;# 
  1740  0915                     	;# 
  1741  0916                     	;# 
  1742  0918                     	;# 
  1743  0919                     	;# 
  1744  091A                     	;# 
  1745  091B                     	;# 
  1746  091C                     	;# 
  1747  091D                     	;# 
  1748  091E                     	;# 
  1749  091F                     	;# 
  1750  0E0F                     	;# 
  1751  0E10                     	;# 
  1752  0E11                     	;# 
  1753  0E12                     	;# 
  1754  0E13                     	;# 
  1755  0E14                     	;# 
  1756  0E15                     	;# 
  1757  0E16                     	;# 
  1758  0E17                     	;# 
  1759  0E18                     	;# 
  1760  0E19                     	;# 
  1761  0E1A                     	;# 
  1762  0E1B                     	;# 
  1763  0E1C                     	;# 
  1764  0E1D                     	;# 
  1765  0E1E                     	;# 
  1766  0E1F                     	;# 
  1767  0E20                     	;# 
  1768  0E21                     	;# 
  1769  0E22                     	;# 
  1770  0E24                     	;# 
  1771  0E25                     	;# 
  1772  0E28                     	;# 
  1773  0E29                     	;# 
  1774  0E2A                     	;# 
  1775  0E2B                     	;# 
  1776  0E2C                     	;# 
  1777  0E2D                     	;# 
  1778  0E2E                     	;# 
  1779  0E2F                     	;# 
  1780  0E90                     	;# 
  1781  0E91                     	;# 
  1782  0E92                     	;# 
  1783  0E94                     	;# 
  1784  0E95                     	;# 
  1785  0E9C                     	;# 
  1786  0E9D                     	;# 
  1787  0E9E                     	;# 
  1788  0E9F                     	;# 
  1789  0EA0                     	;# 
  1790  0EA1                     	;# 
  1791  0EA2                     	;# 
  1792  0EA3                     	;# 
  1793  0EA4                     	;# 
  1794  0EA5                     	;# 
  1795  0EA6                     	;# 
  1796  0EA7                     	;# 
  1797  0F0F                     	;# 
  1798  0F10                     	;# 
  1799  0F11                     	;# 
  1800  0F12                     	;# 
  1801  0F13                     	;# 
  1802  0F14                     	;# 
  1803  0F15                     	;# 
  1804  0F16                     	;# 
  1805  0F17                     	;# 
  1806  0F18                     	;# 
  1807  0F19                     	;# 
  1808  0F1A                     	;# 
  1809  0F1B                     	;# 
  1810  0F1C                     	;# 
  1811  0F1D                     	;# 
  1812  0F1E                     	;# 
  1813  0F1F                     	;# 
  1814  0F20                     	;# 
  1815  0F21                     	;# 
  1816  0F22                     	;# 
  1817  0F23                     	;# 
  1818  0F24                     	;# 
  1819  0F25                     	;# 
  1820  0F26                     	;# 
  1821  0F27                     	;# 
  1822  0F28                     	;# 
  1823  0F29                     	;# 
  1824  0F2A                     	;# 
  1825  0F2B                     	;# 
  1826  0F2C                     	;# 
  1827  0F2D                     	;# 
  1828  0F2E                     	;# 
  1829  0F2F                     	;# 
  1830  0F30                     	;# 
  1831  0F31                     	;# 
  1832  0F32                     	;# 
  1833  0F33                     	;# 
  1834  0F34                     	;# 
  1835  0F35                     	;# 
  1836  0F36                     	;# 
  1837  0F37                     	;# 
  1838  0FE4                     	;# 
  1839  0FE5                     	;# 
  1840  0FE6                     	;# 
  1841  0FE7                     	;# 
  1842  0FE8                     	;# 
  1843  0FE9                     	;# 
  1844  0FEA                     	;# 
  1845  0FEB                     	;# 
  1846  0FED                     	;# 
  1847  0FEE                     	;# 
  1848  0FEF                     	;# 
  1849  0000                     	;# 
  1850  0001                     	;# 
  1851  0002                     	;# 
  1852  0003                     	;# 
  1853  0004                     	;# 
  1854  0005                     	;# 
  1855  0006                     	;# 
  1856  0007                     	;# 
  1857  0008                     	;# 
  1858  0009                     	;# 
  1859  000A                     	;# 
  1860  000B                     	;# 
  1861  000C                     	;# 
  1862  000D                     	;# 
  1863  000E                     	;# 
  1864  0010                     	;# 
  1865  0011                     	;# 
  1866  0012                     	;# 
  1867  0013                     	;# 
  1868  0014                     	;# 
  1869  0015                     	;# 
  1870  0015                     	;# 
  1871  0016                     	;# 
  1872  0016                     	;# 
  1873  0017                     	;# 
  1874  0018                     	;# 
  1875  0019                     	;# 
  1876  0019                     	;# 
  1877  001A                     	;# 
  1878  001B                     	;# 
  1879  001C                     	;# 
  1880  001D                     	;# 
  1881  001E                     	;# 
  1882  001F                     	;# 
  1883  008C                     	;# 
  1884  008D                     	;# 
  1885  008E                     	;# 
  1886  0090                     	;# 
  1887  0091                     	;# 
  1888  0092                     	;# 
  1889  0093                     	;# 
  1890  0094                     	;# 
  1891  0097                     	;# 
  1892  009B                     	;# 
  1893  009B                     	;# 
  1894  009C                     	;# 
  1895  009D                     	;# 
  1896  009E                     	;# 
  1897  009F                     	;# 
  1898  010C                     	;# 
  1899  010D                     	;# 
  1900  010E                     	;# 
  1901  0111                     	;# 
  1902  0112                     	;# 
  1903  0113                     	;# 
  1904  0114                     	;# 
  1905  0115                     	;# 
  1906  0116                     	;# 
  1907  0117                     	;# 
  1908  0118                     	;# 
  1909  0119                     	;# 
  1910  018C                     	;# 
  1911  018D                     	;# 
  1912  018E                     	;# 
  1913  0197                     	;# 
  1914  0199                     	;# 
  1915  0199                     	;# 
  1916  0199                     	;# 
  1917  019A                     	;# 
  1918  019A                     	;# 
  1919  019A                     	;# 
  1920  019B                     	;# 
  1921  019B                     	;# 
  1922  019B                     	;# 
  1923  019B                     	;# 
  1924  019B                     	;# 
  1925  019C                     	;# 
  1926  019C                     	;# 
  1927  019C                     	;# 
  1928  019D                     	;# 
  1929  019D                     	;# 
  1930  019D                     	;# 
  1931  019E                     	;# 
  1932  019E                     	;# 
  1933  019E                     	;# 
  1934  019F                     	;# 
  1935  019F                     	;# 
  1936  019F                     	;# 
  1937  019F                     	;# 
  1938  019F                     	;# 
  1939  020C                     	;# 
  1940  020D                     	;# 
  1941  020E                     	;# 
  1942  0211                     	;# 
  1943  0211                     	;# 
  1944  0212                     	;# 
  1945  0212                     	;# 
  1946  0213                     	;# 
  1947  0213                     	;# 
  1948  0214                     	;# 
  1949  0214                     	;# 
  1950  0215                     	;# 
  1951  0215                     	;# 
  1952  0215                     	;# 
  1953  0215                     	;# 
  1954  0216                     	;# 
  1955  0216                     	;# 
  1956  0217                     	;# 
  1957  0217                     	;# 
  1958  0219                     	;# 
  1959  021A                     	;# 
  1960  021B                     	;# 
  1961  021C                     	;# 
  1962  021D                     	;# 
  1963  021D                     	;# 
  1964  021E                     	;# 
  1965  021F                     	;# 
  1966  028C                     	;# 
  1967  028D                     	;# 
  1968  028E                     	;# 
  1969  0291                     	;# 
  1970  0291                     	;# 
  1971  0292                     	;# 
  1972  0293                     	;# 
  1973  0294                     	;# 
  1974  0295                     	;# 
  1975  0295                     	;# 
  1976  0296                     	;# 
  1977  0297                     	;# 
  1978  0298                     	;# 
  1979  029F                     	;# 
  1980  030C                     	;# 
  1981  030D                     	;# 
  1982  030E                     	;# 
  1983  0311                     	;# 
  1984  0311                     	;# 
  1985  0312                     	;# 
  1986  0313                     	;# 
  1987  0314                     	;# 
  1988  0315                     	;# 
  1989  0315                     	;# 
  1990  0316                     	;# 
  1991  0317                     	;# 
  1992  0318                     	;# 
  1993  038C                     	;# 
  1994  038D                     	;# 
  1995  038E                     	;# 
  1996  0391                     	;# 
  1997  0392                     	;# 
  1998  0393                     	;# 
  1999  0394                     	;# 
  2000  0395                     	;# 
  2001  0396                     	;# 
  2002  0397                     	;# 
  2003  0398                     	;# 
  2004  0399                     	;# 
  2005  039A                     	;# 
  2006  039C                     	;# 
  2007  039D                     	;# 
  2008  039E                     	;# 
  2009  039F                     	;# 
  2010  0411                     	;# 
  2011  0411                     	;# 
  2012  0412                     	;# 
  2013  0413                     	;# 
  2014  0414                     	;# 
  2015  0415                     	;# 
  2016  0416                     	;# 
  2017  0417                     	;# 
  2018  0418                     	;# 
  2019  0418                     	;# 
  2020  0419                     	;# 
  2021  041A                     	;# 
  2022  041B                     	;# 
  2023  041C                     	;# 
  2024  041D                     	;# 
  2025  041E                     	;# 
  2026  041F                     	;# 
  2027  0498                     	;# 
  2028  0498                     	;# 
  2029  0499                     	;# 
  2030  049A                     	;# 
  2031  049B                     	;# 
  2032  049B                     	;# 
  2033  049C                     	;# 
  2034  049D                     	;# 
  2035  049E                     	;# 
  2036  049F                     	;# 
  2037  0617                     	;# 
  2038  0618                     	;# 
  2039  0619                     	;# 
  2040  0619                     	;# 
  2041  061A                     	;# 
  2042  061B                     	;# 
  2043  061C                     	;# 
  2044  061C                     	;# 
  2045  061F                     	;# 
  2046  0691                     	;# 
  2047  0692                     	;# 
  2048  0693                     	;# 
  2049  0694                     	;# 
  2050  0695                     	;# 
  2051  0696                     	;# 
  2052  0697                     	;# 
  2053  0698                     	;# 
  2054  0699                     	;# 
  2055  0711                     	;# 
  2056  0712                     	;# 
  2057  0713                     	;# 
  2058  0714                     	;# 
  2059  0715                     	;# 
  2060  0716                     	;# 
  2061  0717                     	;# 
  2062  0718                     	;# 
  2063  0719                     	;# 
  2064  0891                     	;# 
  2065  0891                     	;# 
  2066  0891                     	;# 
  2067  0891                     	;# 
  2068  0891                     	;# 
  2069  0891                     	;# 
  2070  0892                     	;# 
  2071  0892                     	;# 
  2072  0892                     	;# 
  2073  0893                     	;# 
  2074  0893                     	;# 
  2075  0893                     	;# 
  2076  0893                     	;# 
  2077  0893                     	;# 
  2078  0893                     	;# 
  2079  0894                     	;# 
  2080  0894                     	;# 
  2081  0894                     	;# 
  2082  0895                     	;# 
  2083  0895                     	;# 
  2084  0895                     	;# 
  2085  0896                     	;# 
  2086  0896                     	;# 
  2087  0896                     	;# 
  2088  089B                     	;# 
  2089  0911                     	;# 
  2090  0912                     	;# 
  2091  0913                     	;# 
  2092  0914                     	;# 
  2093  0915                     	;# 
  2094  0916                     	;# 
  2095  0918                     	;# 
  2096  0919                     	;# 
  2097  091A                     	;# 
  2098  091B                     	;# 
  2099  091C                     	;# 
  2100  091D                     	;# 
  2101  091E                     	;# 
  2102  091F                     	;# 
  2103  0E0F                     	;# 
  2104  0E10                     	;# 
  2105  0E11                     	;# 
  2106  0E12                     	;# 
  2107  0E13                     	;# 
  2108  0E14                     	;# 
  2109  0E15                     	;# 
  2110  0E16                     	;# 
  2111  0E17                     	;# 
  2112  0E18                     	;# 
  2113  0E19                     	;# 
  2114  0E1A                     	;# 
  2115  0E1B                     	;# 
  2116  0E1C                     	;# 
  2117  0E1D                     	;# 
  2118  0E1E                     	;# 
  2119  0E1F                     	;# 
  2120  0E20                     	;# 
  2121  0E21                     	;# 
  2122  0E22                     	;# 
  2123  0E24                     	;# 
  2124  0E25                     	;# 
  2125  0E28                     	;# 
  2126  0E29                     	;# 
  2127  0E2A                     	;# 
  2128  0E2B                     	;# 
  2129  0E2C                     	;# 
  2130  0E2D                     	;# 
  2131  0E2E                     	;# 
  2132  0E2F                     	;# 
  2133  0E90                     	;# 
  2134  0E91                     	;# 
  2135  0E92                     	;# 
  2136  0E94                     	;# 
  2137  0E95                     	;# 
  2138  0E9C                     	;# 
  2139  0E9D                     	;# 
  2140  0E9E                     	;# 
  2141  0E9F                     	;# 
  2142  0EA0                     	;# 
  2143  0EA1                     	;# 
  2144  0EA2                     	;# 
  2145  0EA3                     	;# 
  2146  0EA4                     	;# 
  2147  0EA5                     	;# 
  2148  0EA6                     	;# 
  2149  0EA7                     	;# 
  2150  0F0F                     	;# 
  2151  0F10                     	;# 
  2152  0F11                     	;# 
  2153  0F12                     	;# 
  2154  0F13                     	;# 
  2155  0F14                     	;# 
  2156  0F15                     	;# 
  2157  0F16                     	;# 
  2158  0F17                     	;# 
  2159  0F18                     	;# 
  2160  0F19                     	;# 
  2161  0F1A                     	;# 
  2162  0F1B                     	;# 
  2163  0F1C                     	;# 
  2164  0F1D                     	;# 
  2165  0F1E                     	;# 
  2166  0F1F                     	;# 
  2167  0F20                     	;# 
  2168  0F21                     	;# 
  2169  0F22                     	;# 
  2170  0F23                     	;# 
  2171  0F24                     	;# 
  2172  0F25                     	;# 
  2173  0F26                     	;# 
  2174  0F27                     	;# 
  2175  0F28                     	;# 
  2176  0F29                     	;# 
  2177  0F2A                     	;# 
  2178  0F2B                     	;# 
  2179  0F2C                     	;# 
  2180  0F2D                     	;# 
  2181  0F2E                     	;# 
  2182  0F2F                     	;# 
  2183  0F30                     	;# 
  2184  0F31                     	;# 
  2185  0F32                     	;# 
  2186  0F33                     	;# 
  2187  0F34                     	;# 
  2188  0F35                     	;# 
  2189  0F36                     	;# 
  2190  0F37                     	;# 
  2191  0FE4                     	;# 
  2192  0FE5                     	;# 
  2193  0FE6                     	;# 
  2194  0FE7                     	;# 
  2195  0FE8                     	;# 
  2196  0FE9                     	;# 
  2197  0FEA                     	;# 
  2198  0FEB                     	;# 
  2199  0FED                     	;# 
  2200  0FEE                     	;# 
  2201  0FEF                     	;# 
  2202  0000                     	;# 
  2203  0001                     	;# 
  2204  0002                     	;# 
  2205  0003                     	;# 
  2206  0004                     	;# 
  2207  0005                     	;# 
  2208  0006                     	;# 
  2209  0007                     	;# 
  2210  0008                     	;# 
  2211  0009                     	;# 
  2212  000A                     	;# 
  2213  000B                     	;# 
  2214  000C                     	;# 
  2215  000D                     	;# 
  2216  000E                     	;# 
  2217  0010                     	;# 
  2218  0011                     	;# 
  2219  0012                     	;# 
  2220  0013                     	;# 
  2221  0014                     	;# 
  2222  0015                     	;# 
  2223  0015                     	;# 
  2224  0016                     	;# 
  2225  0016                     	;# 
  2226  0017                     	;# 
  2227  0018                     	;# 
  2228  0019                     	;# 
  2229  0019                     	;# 
  2230  001A                     	;# 
  2231  001B                     	;# 
  2232  001C                     	;# 
  2233  001D                     	;# 
  2234  001E                     	;# 
  2235  001F                     	;# 
  2236  008C                     	;# 
  2237  008D                     	;# 
  2238  008E                     	;# 
  2239  0090                     	;# 
  2240  0091                     	;# 
  2241  0092                     	;# 
  2242  0093                     	;# 
  2243  0094                     	;# 
  2244  0097                     	;# 
  2245  009B                     	;# 
  2246  009B                     	;# 
  2247  009C                     	;# 
  2248  009D                     	;# 
  2249  009E                     	;# 
  2250  009F                     	;# 
  2251  010C                     	;# 
  2252  010D                     	;# 
  2253  010E                     	;# 
  2254  0111                     	;# 
  2255  0112                     	;# 
  2256  0113                     	;# 
  2257  0114                     	;# 
  2258  0115                     	;# 
  2259  0116                     	;# 
  2260  0117                     	;# 
  2261  0118                     	;# 
  2262  0119                     	;# 
  2263  018C                     	;# 
  2264  018D                     	;# 
  2265  018E                     	;# 
  2266  0197                     	;# 
  2267  0199                     	;# 
  2268  0199                     	;# 
  2269  0199                     	;# 
  2270  019A                     	;# 
  2271  019A                     	;# 
  2272  019A                     	;# 
  2273  019B                     	;# 
  2274  019B                     	;# 
  2275  019B                     	;# 
  2276  019B                     	;# 
  2277  019B                     	;# 
  2278  019C                     	;# 
  2279  019C                     	;# 
  2280  019C                     	;# 
  2281  019D                     	;# 
  2282  019D                     	;# 
  2283  019D                     	;# 
  2284  019E                     	;# 
  2285  019E                     	;# 
  2286  019E                     	;# 
  2287  019F                     	;# 
  2288  019F                     	;# 
  2289  019F                     	;# 
  2290  019F                     	;# 
  2291  019F                     	;# 
  2292  020C                     	;# 
  2293  020D                     	;# 
  2294  020E                     	;# 
  2295  0211                     	;# 
  2296  0211                     	;# 
  2297  0212                     	;# 
  2298  0212                     	;# 
  2299  0213                     	;# 
  2300  0213                     	;# 
  2301  0214                     	;# 
  2302  0214                     	;# 
  2303  0215                     	;# 
  2304  0215                     	;# 
  2305  0215                     	;# 
  2306  0215                     	;# 
  2307  0216                     	;# 
  2308  0216                     	;# 
  2309  0217                     	;# 
  2310  0217                     	;# 
  2311  0219                     	;# 
  2312  021A                     	;# 
  2313  021B                     	;# 
  2314  021C                     	;# 
  2315  021D                     	;# 
  2316  021D                     	;# 
  2317  021E                     	;# 
  2318  021F                     	;# 
  2319  028C                     	;# 
  2320  028D                     	;# 
  2321  028E                     	;# 
  2322  0291                     	;# 
  2323  0291                     	;# 
  2324  0292                     	;# 
  2325  0293                     	;# 
  2326  0294                     	;# 
  2327  0295                     	;# 
  2328  0295                     	;# 
  2329  0296                     	;# 
  2330  0297                     	;# 
  2331  0298                     	;# 
  2332  029F                     	;# 
  2333  030C                     	;# 
  2334  030D                     	;# 
  2335  030E                     	;# 
  2336  0311                     	;# 
  2337  0311                     	;# 
  2338  0312                     	;# 
  2339  0313                     	;# 
  2340  0314                     	;# 
  2341  0315                     	;# 
  2342  0315                     	;# 
  2343  0316                     	;# 
  2344  0317                     	;# 
  2345  0318                     	;# 
  2346  038C                     	;# 
  2347  038D                     	;# 
  2348  038E                     	;# 
  2349  0391                     	;# 
  2350  0392                     	;# 
  2351  0393                     	;# 
  2352  0394                     	;# 
  2353  0395                     	;# 
  2354  0396                     	;# 
  2355  0397                     	;# 
  2356  0398                     	;# 
  2357  0399                     	;# 
  2358  039A                     	;# 
  2359  039C                     	;# 
  2360  039D                     	;# 
  2361  039E                     	;# 
  2362  039F                     	;# 
  2363  0411                     	;# 
  2364  0411                     	;# 
  2365  0412                     	;# 
  2366  0413                     	;# 
  2367  0414                     	;# 
  2368  0415                     	;# 
  2369  0416                     	;# 
  2370  0417                     	;# 
  2371  0418                     	;# 
  2372  0418                     	;# 
  2373  0419                     	;# 
  2374  041A                     	;# 
  2375  041B                     	;# 
  2376  041C                     	;# 
  2377  041D                     	;# 
  2378  041E                     	;# 
  2379  041F                     	;# 
  2380  0498                     	;# 
  2381  0498                     	;# 
  2382  0499                     	;# 
  2383  049A                     	;# 
  2384  049B                     	;# 
  2385  049B                     	;# 
  2386  049C                     	;# 
  2387  049D                     	;# 
  2388  049E                     	;# 
  2389  049F                     	;# 
  2390  0617                     	;# 
  2391  0618                     	;# 
  2392  0619                     	;# 
  2393  0619                     	;# 
  2394  061A                     	;# 
  2395  061B                     	;# 
  2396  061C                     	;# 
  2397  061C                     	;# 
  2398  061F                     	;# 
  2399  0691                     	;# 
  2400  0692                     	;# 
  2401  0693                     	;# 
  2402  0694                     	;# 
  2403  0695                     	;# 
  2404  0696                     	;# 
  2405  0697                     	;# 
  2406  0698                     	;# 
  2407  0699                     	;# 
  2408  0711                     	;# 
  2409  0712                     	;# 
  2410  0713                     	;# 
  2411  0714                     	;# 
  2412  0715                     	;# 
  2413  0716                     	;# 
  2414  0717                     	;# 
  2415  0718                     	;# 
  2416  0719                     	;# 
  2417  0891                     	;# 
  2418  0891                     	;# 
  2419  0891                     	;# 
  2420  0891                     	;# 
  2421  0891                     	;# 
  2422  0891                     	;# 
  2423  0892                     	;# 
  2424  0892                     	;# 
  2425  0892                     	;# 
  2426  0893                     	;# 
  2427  0893                     	;# 
  2428  0893                     	;# 
  2429  0893                     	;# 
  2430  0893                     	;# 
  2431  0893                     	;# 
  2432  0894                     	;# 
  2433  0894                     	;# 
  2434  0894                     	;# 
  2435  0895                     	;# 
  2436  0895                     	;# 
  2437  0895                     	;# 
  2438  0896                     	;# 
  2439  0896                     	;# 
  2440  0896                     	;# 
  2441  089B                     	;# 
  2442  0911                     	;# 
  2443  0912                     	;# 
  2444  0913                     	;# 
  2445  0914                     	;# 
  2446  0915                     	;# 
  2447  0916                     	;# 
  2448  0918                     	;# 
  2449  0919                     	;# 
  2450  091A                     	;# 
  2451  091B                     	;# 
  2452  091C                     	;# 
  2453  091D                     	;# 
  2454  091E                     	;# 
  2455  091F                     	;# 
  2456  0E0F                     	;# 
  2457  0E10                     	;# 
  2458  0E11                     	;# 
  2459  0E12                     	;# 
  2460  0E13                     	;# 
  2461  0E14                     	;# 
  2462  0E15                     	;# 
  2463  0E16                     	;# 
  2464  0E17                     	;# 
  2465  0E18                     	;# 
  2466  0E19                     	;# 
  2467  0E1A                     	;# 
  2468  0E1B                     	;# 
  2469  0E1C                     	;# 
  2470  0E1D                     	;# 
  2471  0E1E                     	;# 
  2472  0E1F                     	;# 
  2473  0E20                     	;# 
  2474  0E21                     	;# 
  2475  0E22                     	;# 
  2476  0E24                     	;# 
  2477  0E25                     	;# 
  2478  0E28                     	;# 
  2479  0E29                     	;# 
  2480  0E2A                     	;# 
  2481  0E2B                     	;# 
  2482  0E2C                     	;# 
  2483  0E2D                     	;# 
  2484  0E2E                     	;# 
  2485  0E2F                     	;# 
  2486  0E90                     	;# 
  2487  0E91                     	;# 
  2488  0E92                     	;# 
  2489  0E94                     	;# 
  2490  0E95                     	;# 
  2491  0E9C                     	;# 
  2492  0E9D                     	;# 
  2493  0E9E                     	;# 
  2494  0E9F                     	;# 
  2495  0EA0                     	;# 
  2496  0EA1                     	;# 
  2497  0EA2                     	;# 
  2498  0EA3                     	;# 
  2499  0EA4                     	;# 
  2500  0EA5                     	;# 
  2501  0EA6                     	;# 
  2502  0EA7                     	;# 
  2503  0F0F                     	;# 
  2504  0F10                     	;# 
  2505  0F11                     	;# 
  2506  0F12                     	;# 
  2507  0F13                     	;# 
  2508  0F14                     	;# 
  2509  0F15                     	;# 
  2510  0F16                     	;# 
  2511  0F17                     	;# 
  2512  0F18                     	;# 
  2513  0F19                     	;# 
  2514  0F1A                     	;# 
  2515  0F1B                     	;# 
  2516  0F1C                     	;# 
  2517  0F1D                     	;# 
  2518  0F1E                     	;# 
  2519  0F1F                     	;# 
  2520  0F20                     	;# 
  2521  0F21                     	;# 
  2522  0F22                     	;# 
  2523  0F23                     	;# 
  2524  0F24                     	;# 
  2525  0F25                     	;# 
  2526  0F26                     	;# 
  2527  0F27                     	;# 
  2528  0F28                     	;# 
  2529  0F29                     	;# 
  2530  0F2A                     	;# 
  2531  0F2B                     	;# 
  2532  0F2C                     	;# 
  2533  0F2D                     	;# 
  2534  0F2E                     	;# 
  2535  0F2F                     	;# 
  2536  0F30                     	;# 
  2537  0F31                     	;# 
  2538  0F32                     	;# 
  2539  0F33                     	;# 
  2540  0F34                     	;# 
  2541  0F35                     	;# 
  2542  0F36                     	;# 
  2543  0F37                     	;# 
  2544  0FE4                     	;# 
  2545  0FE5                     	;# 
  2546  0FE6                     	;# 
  2547  0FE7                     	;# 
  2548  0FE8                     	;# 
  2549  0FE9                     	;# 
  2550  0FEA                     	;# 
  2551  0FEB                     	;# 
  2552  0FED                     	;# 
  2553  0FEE                     	;# 
  2554  0FEF                     	;# 
  2555  0000                     	;# 
  2556  0001                     	;# 
  2557  0002                     	;# 
  2558  0003                     	;# 
  2559  0004                     	;# 
  2560  0005                     	;# 
  2561  0006                     	;# 
  2562  0007                     	;# 
  2563  0008                     	;# 
  2564  0009                     	;# 
  2565  000A                     	;# 
  2566  000B                     	;# 
  2567  000C                     	;# 
  2568  000D                     	;# 
  2569  000E                     	;# 
  2570  0010                     	;# 
  2571  0011                     	;# 
  2572  0012                     	;# 
  2573  0013                     	;# 
  2574  0014                     	;# 
  2575  0015                     	;# 
  2576  0015                     	;# 
  2577  0016                     	;# 
  2578  0016                     	;# 
  2579  0017                     	;# 
  2580  0018                     	;# 
  2581  0019                     	;# 
  2582  0019                     	;# 
  2583  001A                     	;# 
  2584  001B                     	;# 
  2585  001C                     	;# 
  2586  001D                     	;# 
  2587  001E                     	;# 
  2588  001F                     	;# 
  2589  008C                     	;# 
  2590  008D                     	;# 
  2591  008E                     	;# 
  2592  0090                     	;# 
  2593  0091                     	;# 
  2594  0092                     	;# 
  2595  0093                     	;# 
  2596  0094                     	;# 
  2597  0097                     	;# 
  2598  009B                     	;# 
  2599  009B                     	;# 
  2600  009C                     	;# 
  2601  009D                     	;# 
  2602  009E                     	;# 
  2603  009F                     	;# 
  2604  010C                     	;# 
  2605  010D                     	;# 
  2606  010E                     	;# 
  2607  0111                     	;# 
  2608  0112                     	;# 
  2609  0113                     	;# 
  2610  0114                     	;# 
  2611  0115                     	;# 
  2612  0116                     	;# 
  2613  0117                     	;# 
  2614  0118                     	;# 
  2615  0119                     	;# 
  2616  018C                     	;# 
  2617  018D                     	;# 
  2618  018E                     	;# 
  2619  0197                     	;# 
  2620  0199                     	;# 
  2621  0199                     	;# 
  2622  0199                     	;# 
  2623  019A                     	;# 
  2624  019A                     	;# 
  2625  019A                     	;# 
  2626  019B                     	;# 
  2627  019B                     	;# 
  2628  019B                     	;# 
  2629  019B                     	;# 
  2630  019B                     	;# 
  2631  019C                     	;# 
  2632  019C                     	;# 
  2633  019C                     	;# 
  2634  019D                     	;# 
  2635  019D                     	;# 
  2636  019D                     	;# 
  2637  019E                     	;# 
  2638  019E                     	;# 
  2639  019E                     	;# 
  2640  019F                     	;# 
  2641  019F                     	;# 
  2642  019F                     	;# 
  2643  019F                     	;# 
  2644  019F                     	;# 
  2645  020C                     	;# 
  2646  020D                     	;# 
  2647  020E                     	;# 
  2648  0211                     	;# 
  2649  0211                     	;# 
  2650  0212                     	;# 
  2651  0212                     	;# 
  2652  0213                     	;# 
  2653  0213                     	;# 
  2654  0214                     	;# 
  2655  0214                     	;# 
  2656  0215                     	;# 
  2657  0215                     	;# 
  2658  0215                     	;# 
  2659  0215                     	;# 
  2660  0216                     	;# 
  2661  0216                     	;# 
  2662  0217                     	;# 
  2663  0217                     	;# 
  2664  0219                     	;# 
  2665  021A                     	;# 
  2666  021B                     	;# 
  2667  021C                     	;# 
  2668  021D                     	;# 
  2669  021D                     	;# 
  2670  021E                     	;# 
  2671  021F                     	;# 
  2672  028C                     	;# 
  2673  028D                     	;# 
  2674  028E                     	;# 
  2675  0291                     	;# 
  2676  0291                     	;# 
  2677  0292                     	;# 
  2678  0293                     	;# 
  2679  0294                     	;# 
  2680  0295                     	;# 
  2681  0295                     	;# 
  2682  0296                     	;# 
  2683  0297                     	;# 
  2684  0298                     	;# 
  2685  029F                     	;# 
  2686  030C                     	;# 
  2687  030D                     	;# 
  2688  030E                     	;# 
  2689  0311                     	;# 
  2690  0311                     	;# 
  2691  0312                     	;# 
  2692  0313                     	;# 
  2693  0314                     	;# 
  2694  0315                     	;# 
  2695  0315                     	;# 
  2696  0316                     	;# 
  2697  0317                     	;# 
  2698  0318                     	;# 
  2699  038C                     	;# 
  2700  038D                     	;# 
  2701  038E                     	;# 
  2702  0391                     	;# 
  2703  0392                     	;# 
  2704  0393                     	;# 
  2705  0394                     	;# 
  2706  0395                     	;# 
  2707  0396                     	;# 
  2708  0397                     	;# 
  2709  0398                     	;# 
  2710  0399                     	;# 
  2711  039A                     	;# 
  2712  039C                     	;# 
  2713  039D                     	;# 
  2714  039E                     	;# 
  2715  039F                     	;# 
  2716  0411                     	;# 
  2717  0411                     	;# 
  2718  0412                     	;# 
  2719  0413                     	;# 
  2720  0414                     	;# 
  2721  0415                     	;# 
  2722  0416                     	;# 
  2723  0417                     	;# 
  2724  0418                     	;# 
  2725  0418                     	;# 
  2726  0419                     	;# 
  2727  041A                     	;# 
  2728  041B                     	;# 
  2729  041C                     	;# 
  2730  041D                     	;# 
  2731  041E                     	;# 
  2732  041F                     	;# 
  2733  0498                     	;# 
  2734  0498                     	;# 
  2735  0499                     	;# 
  2736  049A                     	;# 
  2737  049B                     	;# 
  2738  049B                     	;# 
  2739  049C                     	;# 
  2740  049D                     	;# 
  2741  049E                     	;# 
  2742  049F                     	;# 
  2743  0617                     	;# 
  2744  0618                     	;# 
  2745  0619                     	;# 
  2746  0619                     	;# 
  2747  061A                     	;# 
  2748  061B                     	;# 
  2749  061C                     	;# 
  2750  061C                     	;# 
  2751  061F                     	;# 
  2752  0691                     	;# 
  2753  0692                     	;# 
  2754  0693                     	;# 
  2755  0694                     	;# 
  2756  0695                     	;# 
  2757  0696                     	;# 
  2758  0697                     	;# 
  2759  0698                     	;# 
  2760  0699                     	;# 
  2761  0711                     	;# 
  2762  0712                     	;# 
  2763  0713                     	;# 
  2764  0714                     	;# 
  2765  0715                     	;# 
  2766  0716                     	;# 
  2767  0717                     	;# 
  2768  0718                     	;# 
  2769  0719                     	;# 
  2770  0891                     	;# 
  2771  0891                     	;# 
  2772  0891                     	;# 
  2773  0891                     	;# 
  2774  0891                     	;# 
  2775  0891                     	;# 
  2776  0892                     	;# 
  2777  0892                     	;# 
  2778  0892                     	;# 
  2779  0893                     	;# 
  2780  0893                     	;# 
  2781  0893                     	;# 
  2782  0893                     	;# 
  2783  0893                     	;# 
  2784  0893                     	;# 
  2785  0894                     	;# 
  2786  0894                     	;# 
  2787  0894                     	;# 
  2788  0895                     	;# 
  2789  0895                     	;# 
  2790  0895                     	;# 
  2791  0896                     	;# 
  2792  0896                     	;# 
  2793  0896                     	;# 
  2794  089B                     	;# 
  2795  0911                     	;# 
  2796  0912                     	;# 
  2797  0913                     	;# 
  2798  0914                     	;# 
  2799  0915                     	;# 
  2800  0916                     	;# 
  2801  0918                     	;# 
  2802  0919                     	;# 
  2803  091A                     	;# 
  2804  091B                     	;# 
  2805  091C                     	;# 
  2806  091D                     	;# 
  2807  091E                     	;# 
  2808  091F                     	;# 
  2809  0E0F                     	;# 
  2810  0E10                     	;# 
  2811  0E11                     	;# 
  2812  0E12                     	;# 
  2813  0E13                     	;# 
  2814  0E14                     	;# 
  2815  0E15                     	;# 
  2816  0E16                     	;# 
  2817  0E17                     	;# 
  2818  0E18                     	;# 
  2819  0E19                     	;# 
  2820  0E1A                     	;# 
  2821  0E1B                     	;# 
  2822  0E1C                     	;# 
  2823  0E1D                     	;# 
  2824  0E1E                     	;# 
  2825  0E1F                     	;# 
  2826  0E20                     	;# 
  2827  0E21                     	;# 
  2828  0E22                     	;# 
  2829  0E24                     	;# 
  2830  0E25                     	;# 
  2831  0E28                     	;# 
  2832  0E29                     	;# 
  2833  0E2A                     	;# 
  2834  0E2B                     	;# 
  2835  0E2C                     	;# 
  2836  0E2D                     	;# 
  2837  0E2E                     	;# 
  2838  0E2F                     	;# 
  2839  0E90                     	;# 
  2840  0E91                     	;# 
  2841  0E92                     	;# 
  2842  0E94                     	;# 
  2843  0E95                     	;# 
  2844  0E9C                     	;# 
  2845  0E9D                     	;# 
  2846  0E9E                     	;# 
  2847  0E9F                     	;# 
  2848  0EA0                     	;# 
  2849  0EA1                     	;# 
  2850  0EA2                     	;# 
  2851  0EA3                     	;# 
  2852  0EA4                     	;# 
  2853  0EA5                     	;# 
  2854  0EA6                     	;# 
  2855  0EA7                     	;# 
  2856  0F0F                     	;# 
  2857  0F10                     	;# 
  2858  0F11                     	;# 
  2859  0F12                     	;# 
  2860  0F13                     	;# 
  2861  0F14                     	;# 
  2862  0F15                     	;# 
  2863  0F16                     	;# 
  2864  0F17                     	;# 
  2865  0F18                     	;# 
  2866  0F19                     	;# 
  2867  0F1A                     	;# 
  2868  0F1B                     	;# 
  2869  0F1C                     	;# 
  2870  0F1D                     	;# 
  2871  0F1E                     	;# 
  2872  0F1F                     	;# 
  2873  0F20                     	;# 
  2874  0F21                     	;# 
  2875  0F22                     	;# 
  2876  0F23                     	;# 
  2877  0F24                     	;# 
  2878  0F25                     	;# 
  2879  0F26                     	;# 
  2880  0F27                     	;# 
  2881  0F28                     	;# 
  2882  0F29                     	;# 
  2883  0F2A                     	;# 
  2884  0F2B                     	;# 
  2885  0F2C                     	;# 
  2886  0F2D                     	;# 
  2887  0F2E                     	;# 
  2888  0F2F                     	;# 
  2889  0F30                     	;# 
  2890  0F31                     	;# 
  2891  0F32                     	;# 
  2892  0F33                     	;# 
  2893  0F34                     	;# 
  2894  0F35                     	;# 
  2895  0F36                     	;# 
  2896  0F37                     	;# 
  2897  0FE4                     	;# 
  2898  0FE5                     	;# 
  2899  0FE6                     	;# 
  2900  0FE7                     	;# 
  2901  0FE8                     	;# 
  2902  0FE9                     	;# 
  2903  0FEA                     	;# 
  2904  0FEB                     	;# 
  2905  0FED                     	;# 
  2906  0FEE                     	;# 
  2907  0FEF                     	;# 
  2908  0000                     	;# 
  2909  0001                     	;# 
  2910  0002                     	;# 
  2911  0003                     	;# 
  2912  0004                     	;# 
  2913  0005                     	;# 
  2914  0006                     	;# 
  2915  0007                     	;# 
  2916  0008                     	;# 
  2917  0009                     	;# 
  2918  000A                     	;# 
  2919  000B                     	;# 
  2920  000C                     	;# 
  2921  000D                     	;# 
  2922  000E                     	;# 
  2923  0010                     	;# 
  2924  0011                     	;# 
  2925  0012                     	;# 
  2926  0013                     	;# 
  2927  0014                     	;# 
  2928  0015                     	;# 
  2929  0015                     	;# 
  2930  0016                     	;# 
  2931  0016                     	;# 
  2932  0017                     	;# 
  2933  0018                     	;# 
  2934  0019                     	;# 
  2935  0019                     	;# 
  2936  001A                     	;# 
  2937  001B                     	;# 
  2938  001C                     	;# 
  2939  001D                     	;# 
  2940  001E                     	;# 
  2941  001F                     	;# 
  2942  008C                     	;# 
  2943  008D                     	;# 
  2944  008E                     	;# 
  2945  0090                     	;# 
  2946  0091                     	;# 
  2947  0092                     	;# 
  2948  0093                     	;# 
  2949  0094                     	;# 
  2950  0097                     	;# 
  2951  009B                     	;# 
  2952  009B                     	;# 
  2953  009C                     	;# 
  2954  009D                     	;# 
  2955  009E                     	;# 
  2956  009F                     	;# 
  2957  010C                     	;# 
  2958  010D                     	;# 
  2959  010E                     	;# 
  2960  0111                     	;# 
  2961  0112                     	;# 
  2962  0113                     	;# 
  2963  0114                     	;# 
  2964  0115                     	;# 
  2965  0116                     	;# 
  2966  0117                     	;# 
  2967  0118                     	;# 
  2968  0119                     	;# 
  2969  018C                     	;# 
  2970  018D                     	;# 
  2971  018E                     	;# 
  2972  0197                     	;# 
  2973  0199                     	;# 
  2974  0199                     	;# 
  2975  0199                     	;# 
  2976  019A                     	;# 
  2977  019A                     	;# 
  2978  019A                     	;# 
  2979  019B                     	;# 
  2980  019B                     	;# 
  2981  019B                     	;# 
  2982  019B                     	;# 
  2983  019B                     	;# 
  2984  019C                     	;# 
  2985  019C                     	;# 
  2986  019C                     	;# 
  2987  019D                     	;# 
  2988  019D                     	;# 
  2989  019D                     	;# 
  2990  019E                     	;# 
  2991  019E                     	;# 
  2992  019E                     	;# 
  2993  019F                     	;# 
  2994  019F                     	;# 
  2995  019F                     	;# 
  2996  019F                     	;# 
  2997  019F                     	;# 
  2998  020C                     	;# 
  2999  020D                     	;# 
  3000  020E                     	;# 
  3001  0211                     	;# 
  3002  0211                     	;# 
  3003  0212                     	;# 
  3004  0212                     	;# 
  3005  0213                     	;# 
  3006  0213                     	;# 
  3007  0214                     	;# 
  3008  0214                     	;# 
  3009  0215                     	;# 
  3010  0215                     	;# 
  3011  0215                     	;# 
  3012  0215                     	;# 
  3013  0216                     	;# 
  3014  0216                     	;# 
  3015  0217                     	;# 
  3016  0217                     	;# 
  3017  0219                     	;# 
  3018  021A                     	;# 
  3019  021B                     	;# 
  3020  021C                     	;# 
  3021  021D                     	;# 
  3022  021D                     	;# 
  3023  021E                     	;# 
  3024  021F                     	;# 
  3025  028C                     	;# 
  3026  028D                     	;# 
  3027  028E                     	;# 
  3028  0291                     	;# 
  3029  0291                     	;# 
  3030  0292                     	;# 
  3031  0293                     	;# 
  3032  0294                     	;# 
  3033  0295                     	;# 
  3034  0295                     	;# 
  3035  0296                     	;# 
  3036  0297                     	;# 
  3037  0298                     	;# 
  3038  029F                     	;# 
  3039  030C                     	;# 
  3040  030D                     	;# 
  3041  030E                     	;# 
  3042  0311                     	;# 
  3043  0311                     	;# 
  3044  0312                     	;# 
  3045  0313                     	;# 
  3046  0314                     	;# 
  3047  0315                     	;# 
  3048  0315                     	;# 
  3049  0316                     	;# 
  3050  0317                     	;# 
  3051  0318                     	;# 
  3052  038C                     	;# 
  3053  038D                     	;# 
  3054  038E                     	;# 
  3055  0391                     	;# 
  3056  0392                     	;# 
  3057  0393                     	;# 
  3058  0394                     	;# 
  3059  0395                     	;# 
  3060  0396                     	;# 
  3061  0397                     	;# 
  3062  0398                     	;# 
  3063  0399                     	;# 
  3064  039A                     	;# 
  3065  039C                     	;# 
  3066  039D                     	;# 
  3067  039E                     	;# 
  3068  039F                     	;# 
  3069  0411                     	;# 
  3070  0411                     	;# 
  3071  0412                     	;# 
  3072  0413                     	;# 
  3073  0414                     	;# 
  3074  0415                     	;# 
  3075  0416                     	;# 
  3076  0417                     	;# 
  3077  0418                     	;# 
  3078  0418                     	;# 
  3079  0419                     	;# 
  3080  041A                     	;# 
  3081  041B                     	;# 
  3082  041C                     	;# 
  3083  041D                     	;# 
  3084  041E                     	;# 
  3085  041F                     	;# 
  3086  0498                     	;# 
  3087  0498                     	;# 
  3088  0499                     	;# 
  3089  049A                     	;# 
  3090  049B                     	;# 
  3091  049B                     	;# 
  3092  049C                     	;# 
  3093  049D                     	;# 
  3094  049E                     	;# 
  3095  049F                     	;# 
  3096  0617                     	;# 
  3097  0618                     	;# 
  3098  0619                     	;# 
  3099  0619                     	;# 
  3100  061A                     	;# 
  3101  061B                     	;# 
  3102  061C                     	;# 
  3103  061C                     	;# 
  3104  061F                     	;# 
  3105  0691                     	;# 
  3106  0692                     	;# 
  3107  0693                     	;# 
  3108  0694                     	;# 
  3109  0695                     	;# 
  3110  0696                     	;# 
  3111  0697                     	;# 
  3112  0698                     	;# 
  3113  0699                     	;# 
  3114  0711                     	;# 
  3115  0712                     	;# 
  3116  0713                     	;# 
  3117  0714                     	;# 
  3118  0715                     	;# 
  3119  0716                     	;# 
  3120  0717                     	;# 
  3121  0718                     	;# 
  3122  0719                     	;# 
  3123  0891                     	;# 
  3124  0891                     	;# 
  3125  0891                     	;# 
  3126  0891                     	;# 
  3127  0891                     	;# 
  3128  0891                     	;# 
  3129  0892                     	;# 
  3130  0892                     	;# 
  3131  0892                     	;# 
  3132  0893                     	;# 
  3133  0893                     	;# 
  3134  0893                     	;# 
  3135  0893                     	;# 
  3136  0893                     	;# 
  3137  0893                     	;# 
  3138  0894                     	;# 
  3139  0894                     	;# 
  3140  0894                     	;# 
  3141  0895                     	;# 
  3142  0895                     	;# 
  3143  0895                     	;# 
  3144  0896                     	;# 
  3145  0896                     	;# 
  3146  0896                     	;# 
  3147  089B                     	;# 
  3148  0911                     	;# 
  3149  0912                     	;# 
  3150  0913                     	;# 
  3151  0914                     	;# 
  3152  0915                     	;# 
  3153  0916                     	;# 
  3154  0918                     	;# 
  3155  0919                     	;# 
  3156  091A                     	;# 
  3157  091B                     	;# 
  3158  091C                     	;# 
  3159  091D                     	;# 
  3160  091E                     	;# 
  3161  091F                     	;# 
  3162  0E0F                     	;# 
  3163  0E10                     	;# 
  3164  0E11                     	;# 
  3165  0E12                     	;# 
  3166  0E13                     	;# 
  3167  0E14                     	;# 
  3168  0E15                     	;# 
  3169  0E16                     	;# 
  3170  0E17                     	;# 
  3171  0E18                     	;# 
  3172  0E19                     	;# 
  3173  0E1A                     	;# 
  3174  0E1B                     	;# 
  3175  0E1C                     	;# 
  3176  0E1D                     	;# 
  3177  0E1E                     	;# 
  3178  0E1F                     	;# 
  3179  0E20                     	;# 
  3180  0E21                     	;# 
  3181  0E22                     	;# 
  3182  0E24                     	;# 
  3183  0E25                     	;# 
  3184  0E28                     	;# 
  3185  0E29                     	;# 
  3186  0E2A                     	;# 
  3187  0E2B                     	;# 
  3188  0E2C                     	;# 
  3189  0E2D                     	;# 
  3190  0E2E                     	;# 
  3191  0E2F                     	;# 
  3192  0E90                     	;# 
  3193  0E91                     	;# 
  3194  0E92                     	;# 
  3195  0E94                     	;# 
  3196  0E95                     	;# 
  3197  0E9C                     	;# 
  3198  0E9D                     	;# 
  3199  0E9E                     	;# 
  3200  0E9F                     	;# 
  3201  0EA0                     	;# 
  3202  0EA1                     	;# 
  3203  0EA2                     	;# 
  3204  0EA3                     	;# 
  3205  0EA4                     	;# 
  3206  0EA5                     	;# 
  3207  0EA6                     	;# 
  3208  0EA7                     	;# 
  3209  0F0F                     	;# 
  3210  0F10                     	;# 
  3211  0F11                     	;# 
  3212  0F12                     	;# 
  3213  0F13                     	;# 
  3214  0F14                     	;# 
  3215  0F15                     	;# 
  3216  0F16                     	;# 
  3217  0F17                     	;# 
  3218  0F18                     	;# 
  3219  0F19                     	;# 
  3220  0F1A                     	;# 
  3221  0F1B                     	;# 
  3222  0F1C                     	;# 
  3223  0F1D                     	;# 
  3224  0F1E                     	;# 
  3225  0F1F                     	;# 
  3226  0F20                     	;# 
  3227  0F21                     	;# 
  3228  0F22                     	;# 
  3229  0F23                     	;# 
  3230  0F24                     	;# 
  3231  0F25                     	;# 
  3232  0F26                     	;# 
  3233  0F27                     	;# 
  3234  0F28                     	;# 
  3235  0F29                     	;# 
  3236  0F2A                     	;# 
  3237  0F2B                     	;# 
  3238  0F2C                     	;# 
  3239  0F2D                     	;# 
  3240  0F2E                     	;# 
  3241  0F2F                     	;# 
  3242  0F30                     	;# 
  3243  0F31                     	;# 
  3244  0F32                     	;# 
  3245  0F33                     	;# 
  3246  0F34                     	;# 
  3247  0F35                     	;# 
  3248  0F36                     	;# 
  3249  0F37                     	;# 
  3250  0FE4                     	;# 
  3251  0FE5                     	;# 
  3252  0FE6                     	;# 
  3253  0FE7                     	;# 
  3254  0FE8                     	;# 
  3255  0FE9                     	;# 
  3256  0FEA                     	;# 
  3257  0FEB                     	;# 
  3258  0FED                     	;# 
  3259  0FEE                     	;# 
  3260  0FEF                     	;# 
  3261  0000                     	;# 
  3262  0001                     	;# 
  3263  0002                     	;# 
  3264  0003                     	;# 
  3265  0004                     	;# 
  3266  0005                     	;# 
  3267  0006                     	;# 
  3268  0007                     	;# 
  3269  0008                     	;# 
  3270  0009                     	;# 
  3271  000A                     	;# 
  3272  000B                     	;# 
  3273  000C                     	;# 
  3274  000D                     	;# 
  3275  000E                     	;# 
  3276  0010                     	;# 
  3277  0011                     	;# 
  3278  0012                     	;# 
  3279  0013                     	;# 
  3280  0014                     	;# 
  3281  0015                     	;# 
  3282  0015                     	;# 
  3283  0016                     	;# 
  3284  0016                     	;# 
  3285  0017                     	;# 
  3286  0018                     	;# 
  3287  0019                     	;# 
  3288  0019                     	;# 
  3289  001A                     	;# 
  3290  001B                     	;# 
  3291  001C                     	;# 
  3292  001D                     	;# 
  3293  001E                     	;# 
  3294  001F                     	;# 
  3295  008C                     	;# 
  3296  008D                     	;# 
  3297  008E                     	;# 
  3298  0090                     	;# 
  3299  0091                     	;# 
  3300  0092                     	;# 
  3301  0093                     	;# 
  3302  0094                     	;# 
  3303  0097                     	;# 
  3304  009B                     	;# 
  3305  009B                     	;# 
  3306  009C                     	;# 
  3307  009D                     	;# 
  3308  009E                     	;# 
  3309  009F                     	;# 
  3310  010C                     	;# 
  3311  010D                     	;# 
  3312  010E                     	;# 
  3313  0111                     	;# 
  3314  0112                     	;# 
  3315  0113                     	;# 
  3316  0114                     	;# 
  3317  0115                     	;# 
  3318  0116                     	;# 
  3319  0117                     	;# 
  3320  0118                     	;# 
  3321  0119                     	;# 
  3322  018C                     	;# 
  3323  018D                     	;# 
  3324  018E                     	;# 
  3325  0197                     	;# 
  3326  0199                     	;# 
  3327  0199                     	;# 
  3328  0199                     	;# 
  3329  019A                     	;# 
  3330  019A                     	;# 
  3331  019A                     	;# 
  3332  019B                     	;# 
  3333  019B                     	;# 
  3334  019B                     	;# 
  3335  019B                     	;# 
  3336  019B                     	;# 
  3337  019C                     	;# 
  3338  019C                     	;# 
  3339  019C                     	;# 
  3340  019D                     	;# 
  3341  019D                     	;# 
  3342  019D                     	;# 
  3343  019E                     	;# 
  3344  019E                     	;# 
  3345  019E                     	;# 
  3346  019F                     	;# 
  3347  019F                     	;# 
  3348  019F                     	;# 
  3349  019F                     	;# 
  3350  019F                     	;# 
  3351  020C                     	;# 
  3352  020D                     	;# 
  3353  020E                     	;# 
  3354  0211                     	;# 
  3355  0211                     	;# 
  3356  0212                     	;# 
  3357  0212                     	;# 
  3358  0213                     	;# 
  3359  0213                     	;# 
  3360  0214                     	;# 
  3361  0214                     	;# 
  3362  0215                     	;# 
  3363  0215                     	;# 
  3364  0215                     	;# 
  3365  0215                     	;# 
  3366  0216                     	;# 
  3367  0216                     	;# 
  3368  0217                     	;# 
  3369  0217                     	;# 
  3370  0219                     	;# 
  3371  021A                     	;# 
  3372  021B                     	;# 
  3373  021C                     	;# 
  3374  021D                     	;# 
  3375  021D                     	;# 
  3376  021E                     	;# 
  3377  021F                     	;# 
  3378  028C                     	;# 
  3379  028D                     	;# 
  3380  028E                     	;# 
  3381  0291                     	;# 
  3382  0291                     	;# 
  3383  0292                     	;# 
  3384  0293                     	;# 
  3385  0294                     	;# 
  3386  0295                     	;# 
  3387  0295                     	;# 
  3388  0296                     	;# 
  3389  0297                     	;# 
  3390  0298                     	;# 
  3391  029F                     	;# 
  3392  030C                     	;# 
  3393  030D                     	;# 
  3394  030E                     	;# 
  3395  0311                     	;# 
  3396  0311                     	;# 
  3397  0312                     	;# 
  3398  0313                     	;# 
  3399  0314                     	;# 
  3400  0315                     	;# 
  3401  0315                     	;# 
  3402  0316                     	;# 
  3403  0317                     	;# 
  3404  0318                     	;# 
  3405  038C                     	;# 
  3406  038D                     	;# 
  3407  038E                     	;# 
  3408  0391                     	;# 
  3409  0392                     	;# 
  3410  0393                     	;# 
  3411  0394                     	;# 
  3412  0395                     	;# 
  3413  0396                     	;# 
  3414  0397                     	;# 
  3415  0398                     	;# 
  3416  0399                     	;# 
  3417  039A                     	;# 
  3418  039C                     	;# 
  3419  039D                     	;# 
  3420  039E                     	;# 
  3421  039F                     	;# 
  3422  0411                     	;# 
  3423  0411                     	;# 
  3424  0412                     	;# 
  3425  0413                     	;# 
  3426  0414                     	;# 
  3427  0415                     	;# 
  3428  0416                     	;# 
  3429  0417                     	;# 
  3430  0418                     	;# 
  3431  0418                     	;# 
  3432  0419                     	;# 
  3433  041A                     	;# 
  3434  041B                     	;# 
  3435  041C                     	;# 
  3436  041D                     	;# 
  3437  041E                     	;# 
  3438  041F                     	;# 
  3439  0498                     	;# 
  3440  0498                     	;# 
  3441  0499                     	;# 
  3442  049A                     	;# 
  3443  049B                     	;# 
  3444  049B                     	;# 
  3445  049C                     	;# 
  3446  049D                     	;# 
  3447  049E                     	;# 
  3448  049F                     	;# 
  3449  0617                     	;# 
  3450  0618                     	;# 
  3451  0619                     	;# 
  3452  0619                     	;# 
  3453  061A                     	;# 
  3454  061B                     	;# 
  3455  061C                     	;# 
  3456  061C                     	;# 
  3457  061F                     	;# 
  3458  0691                     	;# 
  3459  0692                     	;# 
  3460  0693                     	;# 
  3461  0694                     	;# 
  3462  0695                     	;# 
  3463  0696                     	;# 
  3464  0697                     	;# 
  3465  0698                     	;# 
  3466  0699                     	;# 
  3467  0711                     	;# 
  3468  0712                     	;# 
  3469  0713                     	;# 
  3470  0714                     	;# 
  3471  0715                     	;# 
  3472  0716                     	;# 
  3473  0717                     	;# 
  3474  0718                     	;# 
  3475  0719                     	;# 
  3476  0891                     	;# 
  3477  0891                     	;# 
  3478  0891                     	;# 
  3479  0891                     	;# 
  3480  0891                     	;# 
  3481  0891                     	;# 
  3482  0892                     	;# 
  3483  0892                     	;# 
  3484  0892                     	;# 
  3485  0893                     	;# 
  3486  0893                     	;# 
  3487  0893                     	;# 
  3488  0893                     	;# 
  3489  0893                     	;# 
  3490  0893                     	;# 
  3491  0894                     	;# 
  3492  0894                     	;# 
  3493  0894                     	;# 
  3494  0895                     	;# 
  3495  0895                     	;# 
  3496  0895                     	;# 
  3497  0896                     	;# 
  3498  0896                     	;# 
  3499  0896                     	;# 
  3500  089B                     	;# 
  3501  0911                     	;# 
  3502  0912                     	;# 
  3503  0913                     	;# 
  3504  0914                     	;# 
  3505  0915                     	;# 
  3506  0916                     	;# 
  3507  0918                     	;# 
  3508  0919                     	;# 
  3509  091A                     	;# 
  3510  091B                     	;# 
  3511  091C                     	;# 
  3512  091D                     	;# 
  3513  091E                     	;# 
  3514  091F                     	;# 
  3515  0E0F                     	;# 
  3516  0E10                     	;# 
  3517  0E11                     	;# 
  3518  0E12                     	;# 
  3519  0E13                     	;# 
  3520  0E14                     	;# 
  3521  0E15                     	;# 
  3522  0E16                     	;# 
  3523  0E17                     	;# 
  3524  0E18                     	;# 
  3525  0E19                     	;# 
  3526  0E1A                     	;# 
  3527  0E1B                     	;# 
  3528  0E1C                     	;# 
  3529  0E1D                     	;# 
  3530  0E1E                     	;# 
  3531  0E1F                     	;# 
  3532  0E20                     	;# 
  3533  0E21                     	;# 
  3534  0E22                     	;# 
  3535  0E24                     	;# 
  3536  0E25                     	;# 
  3537  0E28                     	;# 
  3538  0E29                     	;# 
  3539  0E2A                     	;# 
  3540  0E2B                     	;# 
  3541  0E2C                     	;# 
  3542  0E2D                     	;# 
  3543  0E2E                     	;# 
  3544  0E2F                     	;# 
  3545  0E90                     	;# 
  3546  0E91                     	;# 
  3547  0E92                     	;# 
  3548  0E94                     	;# 
  3549  0E95                     	;# 
  3550  0E9C                     	;# 
  3551  0E9D                     	;# 
  3552  0E9E                     	;# 
  3553  0E9F                     	;# 
  3554  0EA0                     	;# 
  3555  0EA1                     	;# 
  3556  0EA2                     	;# 
  3557  0EA3                     	;# 
  3558  0EA4                     	;# 
  3559  0EA5                     	;# 
  3560  0EA6                     	;# 
  3561  0EA7                     	;# 
  3562  0F0F                     	;# 
  3563  0F10                     	;# 
  3564  0F11                     	;# 
  3565  0F12                     	;# 
  3566  0F13                     	;# 
  3567  0F14                     	;# 
  3568  0F15                     	;# 
  3569  0F16                     	;# 
  3570  0F17                     	;# 
  3571  0F18                     	;# 
  3572  0F19                     	;# 
  3573  0F1A                     	;# 
  3574  0F1B                     	;# 
  3575  0F1C                     	;# 
  3576  0F1D                     	;# 
  3577  0F1E                     	;# 
  3578  0F1F                     	;# 
  3579  0F20                     	;# 
  3580  0F21                     	;# 
  3581  0F22                     	;# 
  3582  0F23                     	;# 
  3583  0F24                     	;# 
  3584  0F25                     	;# 
  3585  0F26                     	;# 
  3586  0F27                     	;# 
  3587  0F28                     	;# 
  3588  0F29                     	;# 
  3589  0F2A                     	;# 
  3590  0F2B                     	;# 
  3591  0F2C                     	;# 
  3592  0F2D                     	;# 
  3593  0F2E                     	;# 
  3594  0F2F                     	;# 
  3595  0F30                     	;# 
  3596  0F31                     	;# 
  3597  0F32                     	;# 
  3598  0F33                     	;# 
  3599  0F34                     	;# 
  3600  0F35                     	;# 
  3601  0F36                     	;# 
  3602  0F37                     	;# 
  3603  0FE4                     	;# 
  3604  0FE5                     	;# 
  3605  0FE6                     	;# 
  3606  0FE7                     	;# 
  3607  0FE8                     	;# 
  3608  0FE9                     	;# 
  3609  0FEA                     	;# 
  3610  0FEB                     	;# 
  3611  0FED                     	;# 
  3612  0FEE                     	;# 
  3613  0FEF                     	;_m_led_para
  3614                           
  3615                           	psect	idataBANK2
  3616  1007                     __pidataBANK2:	
  3617                           
  3618                           ;initializer for ble_check_devid@F8342
  3619  1007  3433               	retlw	51
  3620  1008  3430               	retlw	48
  3621  1009  3433               	retlw	51
  3622  100A  3431               	retlw	49
  3623  100B  3433               	retlw	51
  3624  100C  3436               	retlw	54
  3625  100D  3433               	retlw	51
  3626  100E  3431               	retlw	49
  3627  100F  3433               	retlw	51
  3628  1010  3430               	retlw	48
  3629  1011  3433               	retlw	51
  3630  1012  3431               	retlw	49
  3631  1013  3433               	retlw	51
  3632  1014  3430               	retlw	48
  3633  1015  3433               	retlw	51
  3634  1016  3433               	retlw	51
  3635  1017  3400               	retlw	0
  3636                           
  3637                           ;initializer for _MONTH_DAY
  3638  1018  341F               	retlw	31
  3639  1019  341C               	retlw	28
  3640  101A  341F               	retlw	31
  3641  101B  341E               	retlw	30
  3642  101C  341F               	retlw	31
  3643  101D  341E               	retlw	30
  3644  101E  341F               	retlw	31
  3645  101F  341F               	retlw	31
  3646  1020  341E               	retlw	30
  3647  1021  341F               	retlw	31
  3648  1022  341E               	retlw	30
  3649  1023  341F               	retlw	31
  3650                           
  3651                           ;initializer for _led_load_duty
  3652  1024  3401               	retlw	low _pwm4_load_duty
  3653  1025  3410               	retlw	high _pwm4_load_duty
  3654  1026  34B8               	retlw	low _pwm1_load_duty
  3655  1027  341D               	retlw	high _pwm1_load_duty
  3656  1028  34BE               	retlw	low _pwm3_load_duty
  3657  1029  341D               	retlw	high _pwm3_load_duty
  3658  102A  34EC               	retlw	low _pwm5_load_duty
  3659  102B  3407               	retlw	high _pwm5_load_duty
  3660                           
  3661                           ;initializer for _led_state_cb
  3662  102C  34ED               	retlw	low _led_state_off_cb
  3663  102D  340A               	retlw	high _led_state_off_cb
  3664  102E  3435               	retlw	low _led_state_day_cb
  3665  102F  340A               	retlw	high _led_state_day_cb
  3666  1030  3427               	retlw	low _led_state_night_cb
  3667  1031  341E               	retlw	high _led_state_night_cb
  3668  1032  345A               	retlw	low _led_state_ble_cb
  3669  1033  340F               	retlw	high _led_state_ble_cb
  3670                           
  3671                           ;initializer for ble_send_cmd@F8334
  3672  1034  3441               	retlw	65
  3673  1035  3454               	retlw	84
  3674  1036  342B               	retlw	43
  3675  1037  344F               	retlw	79
  3676  1038  344B               	retlw	75
  3677  1039  340D               	retlw	13
  3678  103A  340A               	retlw	10
  3679  103B  3400               	retlw	0
  3680                           
  3681                           	psect	nvBANK0
  3682  006C                     __pnvBANK0:	
  3683  006C                     _tx_remain:	
  3684  006C                     	ds	1
  3685                           
  3686                           	psect	nvBANK1
  3687  00E6                     __pnvBANK1:	
  3688  00E6                     _key_func:	
  3689  00E6                     	ds	2
  3690  00E8                     _eusart_rcv_cb:	
  3691  00E8                     	ds	2
  3692  00EA                     _tmr2_isr_cb:	
  3693  00EA                     	ds	2
  3694  00EC                     _tmr0_isr_cb:	
  3695  00EC                     	ds	2
  3696  001F                     _T2CONbits	set	31
  3697  0017                     _T0CON0bits	set	23
  3698  000C                     _PORTAbits	set	12
  3699  000E                     _PORTC	set	14
  3700  000B                     _INTCONbits	set	11
  3701  0011                     _PIR1bits	set	17
  3702  001D                     _TMR2	set	29
  3703  001E                     _PR2	set	30
  3704  001F                     _T2CON	set	31
  3705  0010                     _PIR0bits	set	16
  3706  0015                     _TMR0L	set	21
  3707  0016                     _TMR0H	set	22
  3708  0018                     _T0CON1	set	24
  3709  0017                     _T0CON0	set	23
  3710  008E                     _TRISC	set	142
  3711  008D                     _TRISB	set	141
  3712  008C                     _TRISA	set	140
  3713  0091                     _PIE1bits	set	145
  3714  0090                     _PIE0bits	set	144
  3715  010E                     _LATC	set	270
  3716  010D                     _LATB	set	269
  3717  010C                     _LATA	set	268
  3718  010C                     _LATAbits	set	268
  3719  010D                     _LATBbits	set	269
  3720  010E                     _LATCbits	set	270
  3721  018C                     _ANSELA	set	396
  3722  018D                     _ANSELB	set	397
  3723  018E                     _ANSELC	set	398
  3724  019E                     _TXSTAbits	set	414
  3725  019D                     _RCSTAbits	set	413
  3726  0199                     _RCREG	set	409
  3727  019D                     _RC1STAbits	set	413
  3728  019A                     _TXREG	set	410
  3729  019C                     _SP1BRGH	set	412
  3730  019B                     _SP1BRGL	set	411
  3731  019E                     _TX1STA	set	414
  3732  019D                     _RC1STA	set	413
  3733  019F                     _BAUD1CON	set	415
  3734  020E                     _WPUC	set	526
  3735  020C                     _WPUA	set	524
  3736  020D                     _WPUB	set	525
  3737  028E                     _ODCONC	set	654
  3738  028D                     _ODCONB	set	653
  3739  028C                     _ODCONA	set	652
  3740  0295                     _CCPR2L	set	661
  3741  0296                     _CCPR2H	set	662
  3742  0297                     _CCP2CON	set	663
  3743  029F                     _CCPTMRSbits	set	671
  3744  0291                     _CCPR1L	set	657
  3745  0292                     _CCPR1H	set	658
  3746  0293                     _CCP1CON	set	659
  3747  0315                     _CCPR4L	set	789
  3748  0316                     _CCPR4H	set	790
  3749  0317                     _CCP4CON	set	791
  3750  0311                     _CCPR3L	set	785
  3751  0312                     _CCPR3H	set	786
  3752  0313                     _CCP3CON	set	787
  3753  0619                     _PWM5CON	set	1561
  3754  061F                     _PWMTMRSbits	set	1567
  3755  0617                     _PWM5DCL	set	1559
  3756  0618                     _PWM5DCH	set	1560
  3757  0891                     _NVMADR	set	2193
  3758  0895                     _NVMCON1	set	2197
  3759  0896                     _NVMCON2	set	2198
  3760  0895                     _NVMCON1bits	set	2197
  3761  0893                     _NVMDATL	set	2195
  3762  0891                     _NVMADRL	set	2193
  3763  0892                     _NVMADRH	set	2194
  3764  091E                     _OSCTUNE	set	2334
  3765  091F                     _OSCFRQ	set	2335
  3766  091D                     _OSCEN	set	2333
  3767  091B                     _OSCCON3	set	2331
  3768  0919                     _OSCCON1	set	2329
  3769  0E24                     _RXPPSbits	set	3620
  3770  0E0F                     _PPSLOCKbits	set	3599
  3771  0E0F                     _PPSLOCK	set	3599
  3772  0EA7                     _RC7PPSbits	set	3751
  3773  0EA6                     _RC6PPSbits	set	3750
  3774  0EA3                     _RC3PPSbits	set	3747
  3775  0EA4                     _RC4PPSbits	set	3748
  3776  0EA5                     _RC5PPSbits	set	3749
  3777  0E9C                     _RB4PPSbits	set	3740
  3778                           
  3779                           	psect	stringtext1
  3780  1800                     __pstringtext1:	
  3781  1800                     STR_2:	
  3782  1800  3441               	retlw	65	;'A'
  3783  1801  3454               	retlw	84	;'T'
  3784  1802  342B               	retlw	43	;'+'
  3785  1803  3441               	retlw	65	;'A'
  3786  1804  3444               	retlw	68	;'D'
  3787  1805  3456               	retlw	86	;'V'
  3788  1806  345F               	retlw	95	;'_'
  3789  1807  344D               	retlw	77	;'M'
  3790  1808  3446               	retlw	70	;'F'
  3791  1809  3452               	retlw	82	;'R'
  3792  180A  345F               	retlw	95	;'_'
  3793  180B  3453               	retlw	83	;'S'
  3794  180C  3450               	retlw	80	;'P'
  3795  180D  3443               	retlw	67	;'C'
  3796  180E  343D               	retlw	61	;'='
  3797  180F  3433               	retlw	51	;'3'
  3798  1810  3430               	retlw	48	;'0'
  3799  1811  3433               	retlw	51	;'3'
  3800  1812  3431               	retlw	49	;'1'
  3801  1813  3433               	retlw	51	;'3'
  3802  1814  3436               	retlw	54	;'6'
  3803  1815  3433               	retlw	51	;'3'
  3804  1816  3431               	retlw	49	;'1'
  3805  1817  3433               	retlw	51	;'3'
  3806  1818  3430               	retlw	48	;'0'
  3807  1819  3433               	retlw	51	;'3'
  3808  181A  3431               	retlw	49	;'1'
  3809  181B  3433               	retlw	51	;'3'
  3810  181C  3430               	retlw	48	;'0'
  3811  181D  3433               	retlw	51	;'3'
  3812  181E  3433               	retlw	51	;'3'
  3813  181F  340D               	retlw	13
  3814  1820  340A               	retlw	10
  3815  1821  3400               	retlw	0
  3816                           
  3817                           	psect	stringtext2
  3818  1822                     __pstringtext2:	
  3819  1822                     STR_1:	
  3820  1822  3441               	retlw	65	;'A'
  3821  1823  3454               	retlw	84	;'T'
  3822  1824  342B               	retlw	43	;'+'
  3823  1825  3441               	retlw	65	;'A'
  3824  1826  3444               	retlw	68	;'D'
  3825  1827  3456               	retlw	86	;'V'
  3826  1828  345F               	retlw	95	;'_'
  3827  1829  344D               	retlw	77	;'M'
  3828  182A  3446               	retlw	70	;'F'
  3829  182B  3452               	retlw	82	;'R'
  3830  182C  345F               	retlw	95	;'_'
  3831  182D  3453               	retlw	83	;'S'
  3832  182E  3450               	retlw	80	;'P'
  3833  182F  3443               	retlw	67	;'C'
  3834  1830  343D               	retlw	61	;'='
  3835  1831  343F               	retlw	63	;'?'
  3836  1832  340D               	retlw	13
  3837  1833  340A               	retlw	10
  3838  1834  3400               	retlw	0
  3839                           
  3840                           	psect	stringtext3
  3841  1835                     __pstringtext3:	
  3842  1835                     STR_4:	
  3843  1835  3441               	retlw	65	;'A'
  3844  1836  3454               	retlw	84	;'T'
  3845  1837  342B               	retlw	43	;'+'
  3846  1838  344D               	retlw	77	;'M'
  3847  1839  344F               	retlw	79	;'O'
  3848  183A  3444               	retlw	68	;'D'
  3849  183B  3445               	retlw	69	;'E'
  3850  183C  343D               	retlw	61	;'='
  3851  183D  3444               	retlw	68	;'D'
  3852  183E  3441               	retlw	65	;'A'
  3853  183F  3454               	retlw	84	;'T'
  3854  1840  3441               	retlw	65	;'A'
  3855  1841  340D               	retlw	13
  3856  1842  340A               	retlw	10
  3857  1843  3400               	retlw	0
  3858                           
  3859                           	psect	stringtext4
  3860  1844                     __pstringtext4:	
  3861  1844                     STR_3:	
  3862  1844  3441               	retlw	65	;'A'
  3863  1845  3454               	retlw	84	;'T'
  3864  1846  342B               	retlw	43	;'+'
  3865  1847  3453               	retlw	83	;'S'
  3866  1848  3445               	retlw	69	;'E'
  3867  1849  3454               	retlw	84	;'T'
  3868  184A  343D               	retlw	61	;'='
  3869  184B  3431               	retlw	49	;'1'
  3870  184C  340D               	retlw	13
  3871  184D  340A               	retlw	10
  3872  184E  3400               	retlw	0
  3873                           
  3874                           	psect	stringtext5
  3875  0000                     __pstringtext5:	
  3876                           
  3877                           	psect	bssBANK0
  3878  0055                     __pbssBANK0:	
  3879  0055                     _target_bright:	
  3880  0055                     	ds	8
  3881  005D                     _led_run_para:	
  3882  005D                     	ds	4
  3883  0061                     tmr2_isr_callback@cnt:	
  3884  0061                     	ds	1
  3885  0062                     led_find_device@toggle:	
  3886  0062                     	ds	1
  3887  0063                     _checksum:	
  3888  0063                     	ds	1
  3889  0064                     _index:	
  3890  0064                     	ds	1
  3891  0065                     _rtc_status:	
  3892  0065                     	ds	1
  3893  0066                     key_scan@repeat:	
  3894  0066                     	ds	1
  3895  0067                     key_scan@last_key:	
  3896  0067                     	ds	1
  3897  0068                     key_read@cont:	
  3898  0068                     	ds	1
  3899  0069                     key_read@trg:	
  3900  0069                     	ds	1
  3901  006A                     _tx_head:	
  3902  006A                     	ds	1
  3903  006B                     _tx_tail:	
  3904  006B                     	ds	1
  3905                           
  3906                           	psect	bssBANK1
  3907  00D7                     __pbssBANK1:	
  3908  00D7                     _current_bright:	
  3909  00D7                     	ds	8
  3910  00DF                     _m_current_time:	
  3911  00DF                     	ds	7
  3912                           
  3913                           	psect	dataBANK2
  3914  0120                     __pdataBANK2:	
  3915  0120                     ble_check_devid@F8342:	
  3916  0120                     	ds	17
  3917  0131                     _MONTH_DAY:	
  3918  0131                     	ds	12
  3919  013D                     _led_load_duty:	
  3920  013D                     	ds	8
  3921  0145                     _led_state_cb:	
  3922  0145                     	ds	8
  3923  014D                     ble_send_cmd@F8334:	
  3924  014D                     	ds	8
  3925                           
  3926                           	psect	bssBANK3
  3927  01A0                     __pbssBANK3:	
  3928  01A0                     _rx_buf:	
  3929  01A0                     	ds	80
  3930                           
  3931                           	psect	bssBANK4
  3932  0220                     __pbssBANK4:	
  3933  0220                     _tx_buf:	
  3934  0220                     	ds	64
  3935                           
  3936                           	psect	inittext
  3937  0824                     init_ram:	
  3938  0824  00FE               	movwf	126
  3939  0825                     initloop:	
  3940  0825  0012               	moviw fsr0++
  3941  0826  001E               	movwi fsr1++
  3942  0827  3001               	movlw	1
  3943  0828  02FE               	subwf	126,f
  3944  0829  3000               	movlw	0
  3945  082A  3BFF               	subwfb	127,f
  3946  082B  087F               	movf	127,w
  3947  082C  047E               	iorwf	126,w
  3948  082D  1903               	btfsc	3,2
  3949  082E  3400               	retlw	0
  3950  082F  2825               	goto	initloop
  3951                           
  3952                           	psect	clrtext
  3953  1DDC                     clear_ram0:	
  3954                           ;	Called with FSR0 containing the base address, and
  3955                           ;	btemp/btemp+1 has the size to clear
  3956                           
  3957  1DDC  0064               	clrwdt	;clear the watchdog before getting into this loop
  3958  1DDD                     clrloop0:	
  3959  1DDD  3001               	movlw	1
  3960  1DDE  0180               	clrf	0	;clear RAM location pointed to by FSR
  3961  1DDF  3101               	addfsr 0,1
  3962  1DE0  02FE               	subwf	126,f
  3963  1DE1  3000               	movlw	0
  3964  1DE2  3BFF               	subwfb	127,f
  3965  1DE3  087F               	movf	127,w
  3966  1DE4  047E               	iorwf	126,w
  3967  1DE5  1903               	btfsc	3,2
  3968  1DE6  3400               	retlw	0	;all done for this memory range, return
  3969  1DE7  2DDD               	goto	clrloop0	;have we reached the end yet?
  3970                           
  3971                           	psect	cstackBANK1
  3972  00A0                     __pcstackBANK1:	
  3973  00A0                     led_pro_process@index:	
  3974  00A0                     led_auto_process@val:	
  3975                           ; 10 bytes @ 0x0
  3976                           
  3977                           
  3978                           ; 24 bytes @ 0x0
  3979  00A0                     	ds	10
  3980  00AA                     led_pro_process@tmp:	
  3981                           
  3982                           ; 1 bytes @ 0xA
  3983  00AA                     	ds	1
  3984  00AB                     led_pro_process@t1:	
  3985                           
  3986                           ; 2 bytes @ 0xB
  3987  00AB                     	ds	2
  3988  00AD                     led_pro_process@t2:	
  3989                           
  3990                           ; 2 bytes @ 0xD
  3991  00AD                     	ds	2
  3992  00AF                     led_pro_process@dt:	
  3993                           
  3994                           ; 4 bytes @ 0xF
  3995  00AF                     	ds	4
  3996  00B3                     led_pro_process@flag:	
  3997                           
  3998                           ; 1 bytes @ 0x13
  3999  00B3                     	ds	1
  4000  00B4                     led_pro_process@duration:	
  4001                           
  4002                           ; 2 bytes @ 0x14
  4003  00B4                     	ds	2
  4004  00B6                     led_pro_process@p1:	
  4005                           
  4006                           ; 2 bytes @ 0x16
  4007  00B6                     	ds	2
  4008  00B8                     led_pro_process@p2:	
  4009  00B8                     led_auto_process@tr:	
  4010                           ; 2 bytes @ 0x18
  4011                           
  4012                           
  4013                           ; 12 bytes @ 0x18
  4014  00B8                     	ds	2
  4015  00BA                     led_pro_process@start:	
  4016                           
  4017                           ; 2 bytes @ 0x1A
  4018  00BA                     	ds	2
  4019  00BC                     led_pro_process@end:	
  4020                           
  4021                           ; 2 bytes @ 0x1C
  4022  00BC                     	ds	2
  4023  00BE                     led_pro_process@point_count:	
  4024                           
  4025                           ; 1 bytes @ 0x1E
  4026  00BE                     	ds	1
  4027  00BF                     led_pro_process@et:	
  4028                           
  4029                           ; 2 bytes @ 0x1F
  4030  00BF                     	ds	2
  4031  00C1                     led_pro_process@sp:	
  4032                           
  4033                           ; 2 bytes @ 0x21
  4034  00C1                     	ds	2
  4035  00C3                     led_pro_process@ep:	
  4036                           
  4037                           ; 2 bytes @ 0x23
  4038  00C3                     	ds	1
  4039  00C4                     led_auto_process@duration:	
  4040                           
  4041                           ; 2 bytes @ 0x24
  4042  00C4                     	ds	1
  4043  00C5                     led_pro_process@j:	
  4044                           
  4045                           ; 1 bytes @ 0x25
  4046  00C5                     	ds	1
  4047  00C6                     led_auto_process@j:	
  4048  00C6                     led_pro_process@st:	
  4049                           ; 1 bytes @ 0x26
  4050                           
  4051                           
  4052                           ; 2 bytes @ 0x26
  4053  00C6                     	ds	1
  4054  00C7                     led_auto_process@dt:	
  4055                           
  4056                           ; 4 bytes @ 0x27
  4057  00C7                     	ds	1
  4058  00C8                     led_pro_process@i:	
  4059                           
  4060                           ; 1 bytes @ 0x28
  4061  00C8                     	ds	3
  4062  00CB                     led_auto_process@count:	
  4063                           
  4064                           ; 1 bytes @ 0x2B
  4065  00CB                     	ds	1
  4066  00CC                     led_auto_process@et:	
  4067                           
  4068                           ; 2 bytes @ 0x2C
  4069  00CC                     	ds	2
  4070  00CE                     led_auto_process@k:	
  4071                           
  4072                           ; 1 bytes @ 0x2E
  4073  00CE                     	ds	1
  4074  00CF                     led_auto_process@st:	
  4075                           
  4076                           ; 2 bytes @ 0x2F
  4077  00CF                     	ds	2
  4078  00D1                     led_auto_process@p:	
  4079                           
  4080                           ; 2 bytes @ 0x31
  4081  00D1                     	ds	2
  4082  00D3                     led_auto_process@i:	
  4083                           
  4084                           ; 1 bytes @ 0x33
  4085  00D3                     	ds	1
  4086  00D4                     led_second_cb@sec:	
  4087                           
  4088                           ; 1 bytes @ 0x34
  4089  00D4                     	ds	1
  4090  00D5                     led_second_cb@ct:	
  4091                           
  4092                           ; 2 bytes @ 0x35
  4093  00D5                     	ds	2
  4094                           
  4095                           	psect	cstackCOMMON
  4096  0070                     __pcstackCOMMON:	
  4097  0070                     ?_ble_decode:	
  4098  0070                     ?_led_set_mode:	
  4099                           ; 1 bytes @ 0x0
  4100                           
  4101  0070                     ?_led_set_power:	
  4102                           ; 1 bytes @ 0x0
  4103                           
  4104  0070                     ?_led_set_bright:	
  4105                           ; 1 bytes @ 0x0
  4106                           
  4107  0070                     ?_led_set_custom:	
  4108                           ; 1 bytes @ 0x0
  4109                           
  4110  0070                     ?_led_set_cycle:	
  4111                           ; 1 bytes @ 0x0
  4112                           
  4113  0070                     ?_led_set_preview:	
  4114                           ; 1 bytes @ 0x0
  4115                           
  4116  0070                     ?_led_start_preview:	
  4117                           ; 1 bytes @ 0x0
  4118                           
  4119  0070                     ?_led_stop_preview:	
  4120                           ; 1 bytes @ 0x0
  4121                           
  4122  0070                     ?_led_set_time:	
  4123                           ; 1 bytes @ 0x0
  4124                           
  4125  0070                     ?_led_start_flash:	
  4126                           ; 1 bytes @ 0x0
  4127                           
  4128  0070                     ?_led_set_pro:	
  4129                           ; 1 bytes @ 0x0
  4130                           
  4131  0070                     ?_led_turnoff:	
  4132                           ; 1 bytes @ 0x0
  4133                           
  4134  0070                     ?_led_indicate_off:	
  4135                           ; 1 bytes @ 0x0
  4136                           
  4137  0070                     ?_led_update_day_bright:	
  4138                           ; 1 bytes @ 0x0
  4139                           
  4140  0070                     ?_led_indicate_day:	
  4141                           ; 1 bytes @ 0x0
  4142                           
  4143  0070                     ?_led_update_night_bright:	
  4144                           ; 1 bytes @ 0x0
  4145                           
  4146  0070                     ?_led_indicate_night:	
  4147                           ; 1 bytes @ 0x0
  4148                           
  4149  0070                     ?_led_turnon_ramp:	
  4150                           ; 1 bytes @ 0x0
  4151                           
  4152  0070                     ?_led_turnoff_ramp:	
  4153                           ; 1 bytes @ 0x0
  4154                           
  4155  0070                     ?_led_indicate_ble:	
  4156                           ; 1 bytes @ 0x0
  4157                           
  4158  0070                     ?_led_prepare_to_save:	
  4159                           ; 1 bytes @ 0x0
  4160                           
  4161  0070                     ?_tmr0_isr:	
  4162                           ; 1 bytes @ 0x0
  4163                           
  4164  0070                     ?_tmr2_isr:	
  4165                           ; 1 bytes @ 0x0
  4166                           
  4167  0070                     ?_pwm1_init:	
  4168                           ; 1 bytes @ 0x0
  4169                           
  4170  0070                     ?_pwm1_load_duty:	
  4171                           ; 1 bytes @ 0x0
  4172                           
  4173  0070                     ?_pwm2_init:	
  4174                           ; 1 bytes @ 0x0
  4175                           
  4176  0070                     ?_pwm3_init:	
  4177                           ; 1 bytes @ 0x0
  4178                           
  4179  0070                     ?_pwm3_load_duty:	
  4180                           ; 1 bytes @ 0x0
  4181                           
  4182  0070                     ?_pwm4_init:	
  4183                           ; 1 bytes @ 0x0
  4184                           
  4185  0070                     ?_pwm4_load_duty:	
  4186                           ; 1 bytes @ 0x0
  4187                           
  4188  0070                     ?_pwm5_init:	
  4189                           ; 1 bytes @ 0x0
  4190                           
  4191  0070                     ?_pwm5_load_duty:	
  4192                           ; 1 bytes @ 0x0
  4193                           
  4194  0070                     ?_eeprom_read:	
  4195                           ; 1 bytes @ 0x0
  4196                           
  4197  0070                     ?_eusart_write:	
  4198                           ; 1 bytes @ 0x0
  4199                           
  4200  0070                     ?_eusart_transmit_isr:	
  4201                           ; 1 bytes @ 0x0
  4202                           
  4203  0070                     ??_eusart_transmit_isr:	
  4204                           ; 1 bytes @ 0x0
  4205                           
  4206  0070                     ?_eusart_receive_isr:	
  4207                           ; 1 bytes @ 0x0
  4208                           
  4209  0070                     ?_key_read:	
  4210                           ; 1 bytes @ 0x0
  4211                           
  4212  0070                     ??_key_read:	
  4213                           ; 1 bytes @ 0x0
  4214                           
  4215  0070                     ?_key_scan:	
  4216                           ; 1 bytes @ 0x0
  4217                           
  4218  0070                     ?_rtc_init:	
  4219                           ; 1 bytes @ 0x0
  4220                           
  4221  0070                     ?_rtc_process:	
  4222                           ; 1 bytes @ 0x0
  4223                           
  4224  0070                     ?_rtc_second_ready:	
  4225                           ; 1 bytes @ 0x0
  4226                           
  4227  0070                     ?_rtc_set:	
  4228                           ; 1 bytes @ 0x0
  4229                           
  4230  0070                     ?_rtc_get_hour:	
  4231                           ; 1 bytes @ 0x0
  4232                           
  4233  0070                     ?_rtc_get_minute:	
  4234                           ; 1 bytes @ 0x0
  4235                           
  4236  0070                     ?_rtc_get_second:	
  4237                           ; 1 bytes @ 0x0
  4238                           
  4239  0070                     ?_ble_check_devid:	
  4240                           ; 1 bytes @ 0x0
  4241                           
  4242  0070                     ?_ble_transmit_start:	
  4243                           ; 1 bytes @ 0x0
  4244                           
  4245  0070                     ?_ble_transmit_stop:	
  4246                           ; 1 bytes @ 0x0
  4247                           
  4248  0070                     ?_ble_ready_to_receive:	
  4249                           ; 1 bytes @ 0x0
  4250                           
  4251  0070                     ?_ble_receive_start:	
  4252                           ; 1 bytes @ 0x0
  4253                           
  4254  0070                     ?_ble_receive_complete:	
  4255                           ; 1 bytes @ 0x0
  4256                           
  4257  0070                     ?_ble_receive_stop:	
  4258                           ; 1 bytes @ 0x0
  4259                           
  4260  0070                     ?_ble_process:	
  4261                           ; 1 bytes @ 0x0
  4262                           
  4263  0070                     ?_ble_init:	
  4264                           ; 1 bytes @ 0x0
  4265                           
  4266  0070                     ?_ble_send_data:	
  4267                           ; 1 bytes @ 0x0
  4268                           
  4269  0070                     ?_ble_ota_ack:	
  4270                           ; 1 bytes @ 0x0
  4271                           
  4272  0070                     ?_ble_receive:	
  4273                           ; 1 bytes @ 0x0
  4274                           
  4275  0070                     ?_led_para_default:	
  4276                           ; 1 bytes @ 0x0
  4277                           
  4278  0070                     ?_led_para_init:	
  4279                           ; 1 bytes @ 0x0
  4280                           
  4281  0070                     ?_led_init:	
  4282                           ; 1 bytes @ 0x0
  4283                           
  4284  0070                     ?_led_ramp:	
  4285                           ; 1 bytes @ 0x0
  4286                           
  4287  0070                     ?_led_process:	
  4288                           ; 1 bytes @ 0x0
  4289                           
  4290  0070                     ?_led_turnon_max:	
  4291                           ; 1 bytes @ 0x0
  4292                           
  4293  0070                     ?_led_update_day_status:	
  4294                           ; 1 bytes @ 0x0
  4295                           
  4296  0070                     ??_led_update_day_status:	
  4297                           ; 1 bytes @ 0x0
  4298                           
  4299  0070                     ?_led_update_night_status:	
  4300                           ; 1 bytes @ 0x0
  4301                           
  4302  0070                     ??_led_update_night_status:	
  4303                           ; 1 bytes @ 0x0
  4304                           
  4305  0070                     ?_led_state_off_short_press_cb:	
  4306                           ; 1 bytes @ 0x0
  4307                           
  4308  0070                     ?_led_state_off_long_press_cb:	
  4309                           ; 1 bytes @ 0x0
  4310                           
  4311  0070                     ?_led_state_off_cont_press_cb:	
  4312                           ; 1 bytes @ 0x0
  4313                           
  4314  0070                     ??_led_state_off_cont_press_cb:	
  4315                           ; 1 bytes @ 0x0
  4316                           
  4317  0070                     ?_led_state_off_release_cb:	
  4318                           ; 1 bytes @ 0x0
  4319                           
  4320  0070                     ??_led_state_off_release_cb:	
  4321                           ; 1 bytes @ 0x0
  4322                           
  4323  0070                     ?_led_state_day_short_press_cb:	
  4324                           ; 1 bytes @ 0x0
  4325                           
  4326  0070                     ?_led_state_day_long_press_cb:	
  4327                           ; 1 bytes @ 0x0
  4328                           
  4329  0070                     ?_led_state_day_cont_press_cb:	
  4330                           ; 1 bytes @ 0x0
  4331                           
  4332  0070                     ?_led_state_day_release_cb:	
  4333                           ; 1 bytes @ 0x0
  4334                           
  4335  0070                     ??_led_state_day_release_cb:	
  4336                           ; 1 bytes @ 0x0
  4337                           
  4338  0070                     ?_led_state_night_short_press_cb:	
  4339                           ; 1 bytes @ 0x0
  4340                           
  4341  0070                     ??_led_state_night_short_press_cb:	
  4342                           ; 1 bytes @ 0x0
  4343                           
  4344  0070                     ?_led_state_night_long_press_cb:	
  4345                           ; 1 bytes @ 0x0
  4346                           
  4347  0070                     ?_led_state_night_cont_press_cb:	
  4348                           ; 1 bytes @ 0x0
  4349                           
  4350  0070                     ?_led_state_night_release_cb:	
  4351                           ; 1 bytes @ 0x0
  4352                           
  4353  0070                     ??_led_state_night_release_cb:	
  4354                           ; 1 bytes @ 0x0
  4355                           
  4356  0070                     ?_led_state_ble_short_press_cb:	
  4357                           ; 1 bytes @ 0x0
  4358                           
  4359  0070                     ?_led_state_ble_long_press_cb:	
  4360                           ; 1 bytes @ 0x0
  4361                           
  4362  0070                     ??_led_state_ble_long_press_cb:	
  4363                           ; 1 bytes @ 0x0
  4364                           
  4365  0070                     ?_led_state_ble_cont_press_cb:	
  4366                           ; 1 bytes @ 0x0
  4367                           
  4368  0070                     ??_led_state_ble_cont_press_cb:	
  4369                           ; 1 bytes @ 0x0
  4370                           
  4371  0070                     ?_led_state_ble_release_cb:	
  4372                           ; 1 bytes @ 0x0
  4373                           
  4374  0070                     ??_led_state_ble_release_cb:	
  4375                           ; 1 bytes @ 0x0
  4376                           
  4377  0070                     ?_led_find_device:	
  4378                           ; 1 bytes @ 0x0
  4379                           
  4380  0070                     ?_led_preview:	
  4381                           ; 1 bytes @ 0x0
  4382                           
  4383  0070                     ?_led_save_para:	
  4384                           ; 1 bytes @ 0x0
  4385                           
  4386  0070                     ?_led_second_cb:	
  4387                           ; 1 bytes @ 0x0
  4388                           
  4389  0070                     ?_osc_init:	
  4390                           ; 1 bytes @ 0x0
  4391                           
  4392  0070                     ?_gpio_init:	
  4393                           ; 1 bytes @ 0x0
  4394                           
  4395  0070                     ?_tmr2_isr_callback:	
  4396                           ; 1 bytes @ 0x0
  4397                           
  4398  0070                     ?_app_init:	
  4399                           ; 1 bytes @ 0x0
  4400                           
  4401  0070                     ?_app_isr:	
  4402                           ; 1 bytes @ 0x0
  4403                           
  4404  0070                     ?_main:	
  4405                           ; 1 bytes @ 0x0
  4406                           
  4407  0070                     ?i1_increase:	
  4408                           ; 1 bytes @ 0x0
  4409                           
  4410  0070                     ?i1_decrease:	
  4411                           ; 1 bytes @ 0x0
  4412                           
  4413  0070                     ?i1_led_turnoff:	
  4414                           ; 1 bytes @ 0x0
  4415                           
  4416  0070                     ??i1_led_turnoff:	
  4417                           ; 1 bytes @ 0x0
  4418                           
  4419  0070                     ?i1_led_indicate_off:	
  4420                           ; 1 bytes @ 0x0
  4421                           
  4422  0070                     ??i1_led_indicate_off:	
  4423                           ; 1 bytes @ 0x0
  4424                           
  4425  0070                     ?i1_led_indicate_day:	
  4426                           ; 1 bytes @ 0x0
  4427                           
  4428  0070                     ??i1_led_indicate_day:	
  4429                           ; 1 bytes @ 0x0
  4430                           
  4431  0070                     ?i1_led_indicate_night:	
  4432                           ; 1 bytes @ 0x0
  4433                           
  4434  0070                     ??i1_led_indicate_night:	
  4435                           ; 1 bytes @ 0x0
  4436                           
  4437  0070                     ?i1_led_indicate_ble:	
  4438                           ; 1 bytes @ 0x0
  4439                           
  4440  0070                     ??i1_led_indicate_ble:	
  4441                           ; 1 bytes @ 0x0
  4442                           
  4443  0070                     ?i1_led_update_day_bright:	
  4444                           ; 1 bytes @ 0x0
  4445                           
  4446  0070                     ??i1_led_update_day_bright:	
  4447                           ; 1 bytes @ 0x0
  4448                           
  4449  0070                     ?i1_led_update_night_bright:	
  4450                           ; 1 bytes @ 0x0
  4451                           
  4452  0070                     ??i1_led_update_night_bright:	
  4453                           ; 1 bytes @ 0x0
  4454                           
  4455  0070                     ?i1_led_prepare_to_save:	
  4456                           ; 1 bytes @ 0x0
  4457                           
  4458  0070                     ??i1_led_prepare_to_save:	
  4459                           ; 1 bytes @ 0x0
  4460                           
  4461  0070                     ?___lwmod:	
  4462                           ; 1 bytes @ 0x0
  4463                           
  4464  0070                     key_read@dat:	
  4465                           ; 2 bytes @ 0x0
  4466                           
  4467  0070                     ble_receive@rcv:	
  4468                           ; 1 bytes @ 0x0
  4469                           
  4470  0070                     i1led_turnoff@i:	
  4471                           ; 1 bytes @ 0x0
  4472                           
  4473  0070                     pwm1_load_duty@value:	
  4474                           ; 1 bytes @ 0x0
  4475                           
  4476  0070                     pwm3_load_duty@value:	
  4477                           ; 2 bytes @ 0x0
  4478                           
  4479  0070                     pwm4_load_duty@value:	
  4480                           ; 2 bytes @ 0x0
  4481                           
  4482  0070                     pwm5_load_duty@value:	
  4483                           ; 2 bytes @ 0x0
  4484                           
  4485  0070                     ___lwmod@divisor:	
  4486                           ; 2 bytes @ 0x0
  4487                           
  4488  0070                     i1increase@psrc:	
  4489                           ; 2 bytes @ 0x0
  4490                           
  4491  0070                     i1decrease@psrc:	
  4492                           ; 2 bytes @ 0x0
  4493                           
  4494                           
  4495                           ; 2 bytes @ 0x0
  4496  0070                     	ds	1
  4497  0071                     ??_eusart_receive_isr:	
  4498  0071                     ??_ble_receive:	
  4499                           ; 1 bytes @ 0x1
  4500                           
  4501  0071                     ??_led_state_ble_short_press_cb:	
  4502                           ; 1 bytes @ 0x1
  4503                           
  4504  0071                     eusart_receive_isr@rcv:	
  4505                           ; 1 bytes @ 0x1
  4506                           
  4507                           
  4508                           ; 1 bytes @ 0x1
  4509  0071                     	ds	1
  4510  0072                     ??_pwm1_load_duty:	
  4511  0072                     ??_pwm3_load_duty:	
  4512                           ; 1 bytes @ 0x2
  4513                           
  4514  0072                     ??_pwm4_load_duty:	
  4515                           ; 1 bytes @ 0x2
  4516                           
  4517  0072                     ??_pwm5_load_duty:	
  4518                           ; 1 bytes @ 0x2
  4519                           
  4520  0072                     ??_led_state_day_long_press_cb:	
  4521                           ; 1 bytes @ 0x2
  4522                           
  4523  0072                     ??_led_state_night_long_press_cb:	
  4524                           ; 1 bytes @ 0x2
  4525                           
  4526  0072                     i1increase@delt:	
  4527                           ; 1 bytes @ 0x2
  4528                           
  4529  0072                     i1decrease@delt:	
  4530                           ; 1 bytes @ 0x2
  4531                           
  4532  0072                     ___lwmod@dividend:	
  4533                           ; 1 bytes @ 0x2
  4534                           
  4535                           
  4536                           ; 2 bytes @ 0x2
  4537  0072                     	ds	1
  4538  0073                     i1increase@max:	
  4539  0073                     i1decrease@min:	
  4540                           ; 2 bytes @ 0x3
  4541                           
  4542                           
  4543                           ; 2 bytes @ 0x3
  4544  0073                     	ds	1
  4545  0074                     ??_led_ramp:	
  4546  0074                     ??___lwmod:	
  4547                           ; 1 bytes @ 0x4
  4548                           
  4549  0074                     ___lwmod@counter:	
  4550                           ; 1 bytes @ 0x4
  4551                           
  4552  0074                     i1led_update_day_bright@i:	
  4553                           ; 1 bytes @ 0x4
  4554                           
  4555  0074                     i1led_update_night_bright@i:	
  4556                           ; 1 bytes @ 0x4
  4557                           
  4558                           
  4559                           ; 1 bytes @ 0x4
  4560  0074                     	ds	1
  4561  0075                     ?_rtc_is_leap_year:	
  4562  0075                     ??_led_state_off_short_press_cb:	
  4563                           ; 1 bytes @ 0x5
  4564                           
  4565  0075                     ??_led_state_off_long_press_cb:	
  4566                           ; 1 bytes @ 0x5
  4567                           
  4568  0075                     ??_led_state_day_short_press_cb:	
  4569                           ; 1 bytes @ 0x5
  4570                           
  4571  0075                     ??i1_increase:	
  4572                           ; 1 bytes @ 0x5
  4573                           
  4574  0075                     ??i1_decrease:	
  4575                           ; 1 bytes @ 0x5
  4576                           
  4577  0075                     rtc_is_leap_year@year:	
  4578                           ; 1 bytes @ 0x5
  4579                           
  4580                           
  4581                           ; 2 bytes @ 0x5
  4582  0075                     	ds	2
  4583  0077                     ??_tmr0_isr:	
  4584  0077                     ??_rtc_is_leap_year:	
  4585                           ; 1 bytes @ 0x7
  4586                           
  4587  0077                     ??_rtc_process:	
  4588                           ; 1 bytes @ 0x7
  4589                           
  4590                           
  4591                           ; 1 bytes @ 0x7
  4592  0077                     	ds	2
  4593  0079                     ?_led_state_off_cb:	
  4594  0079                     ?_led_state_day_cb:	
  4595                           ; 1 bytes @ 0x9
  4596                           
  4597  0079                     ?_led_state_night_cb:	
  4598                           ; 1 bytes @ 0x9
  4599                           
  4600  0079                     ?_led_state_ble_cb:	
  4601                           ; 1 bytes @ 0x9
  4602                           
  4603  0079                     ??_led_state_day_cont_press_cb:	
  4604                           ; 1 bytes @ 0x9
  4605                           
  4606  0079                     ??_led_state_night_cont_press_cb:	
  4607                           ; 1 bytes @ 0x9
  4608                           
  4609  0079                     led_state_off_cb@key:	
  4610                           ; 1 bytes @ 0x9
  4611                           
  4612  0079                     led_state_day_cb@key:	
  4613                           ; 1 bytes @ 0x9
  4614                           
  4615  0079                     led_state_night_cb@key:	
  4616                           ; 1 bytes @ 0x9
  4617                           
  4618  0079                     led_state_ble_cb@key:	
  4619                           ; 1 bytes @ 0x9
  4620                           
  4621                           
  4622                           ; 1 bytes @ 0x9
  4623  0079                     	ds	1
  4624  007A                     led_ramp@i:	
  4625  007A                     led_state_off_cb@state:	
  4626                           ; 1 bytes @ 0xA
  4627                           
  4628  007A                     led_state_day_cb@state:	
  4629                           ; 1 bytes @ 0xA
  4630                           
  4631  007A                     led_state_night_cb@state:	
  4632                           ; 1 bytes @ 0xA
  4633                           
  4634  007A                     led_state_ble_cb@state:	
  4635                           ; 1 bytes @ 0xA
  4636                           
  4637                           
  4638                           ; 1 bytes @ 0xA
  4639  007A                     	ds	1
  4640  007B                     ??_led_state_off_cb:	
  4641  007B                     ??_led_state_day_cb:	
  4642                           ; 1 bytes @ 0xB
  4643                           
  4644  007B                     ??_led_state_night_cb:	
  4645                           ; 1 bytes @ 0xB
  4646                           
  4647  007B                     ??_led_state_ble_cb:	
  4648                           ; 1 bytes @ 0xB
  4649                           
  4650  007B                     ??_led_process:	
  4651                           ; 1 bytes @ 0xB
  4652                           
  4653  007B                     ?_led_touch_cb:	
  4654                           ; 1 bytes @ 0xB
  4655                           
  4656  007B                     led_touch_cb@key:	
  4657                           ; 1 bytes @ 0xB
  4658                           
  4659                           
  4660                           ; 1 bytes @ 0xB
  4661  007B                     	ds	1
  4662  007C                     led_touch_cb@state:	
  4663                           
  4664                           ; 1 bytes @ 0xC
  4665  007C                     	ds	1
  4666  007D                     ?_key_action:	
  4667  007D                     ??_led_touch_cb:	
  4668                           ; 1 bytes @ 0xD
  4669                           
  4670  007D                     key_action@state:	
  4671                           ; 1 bytes @ 0xD
  4672                           
  4673                           
  4674                           ; 1 bytes @ 0xD
  4675  007D                     	ds	1
  4676  007E                     ??_tmr2_isr:	
  4677  007E                     ??_key_action:	
  4678                           ; 1 bytes @ 0xE
  4679                           
  4680  007E                     ??_key_scan:	
  4681                           ; 1 bytes @ 0xE
  4682                           
  4683  007E                     ??_tmr2_isr_callback:	
  4684                           ; 1 bytes @ 0xE
  4685                           
  4686  007E                     ??_app_isr:	
  4687                           ; 1 bytes @ 0xE
  4688                           
  4689                           
  4690                           	psect	cstackBANK0
  4691  0020                     __pcstackBANK0:	
  4692                           ; 1 bytes @ 0xE
  4693                           
  4694  0020                     key_action@key:	
  4695                           
  4696                           ; 1 bytes @ 0x0
  4697  0020                     	ds	1
  4698  0021                     key_scan@key_value:	
  4699                           
  4700                           ; 1 bytes @ 0x1
  4701  0021                     	ds	1
  4702  0022                     ??_led_set_bright:	
  4703  0022                     ??_led_set_cycle:	
  4704                           ; 1 bytes @ 0x2
  4705                           
  4706  0022                     ??_led_set_preview:	
  4707                           ; 1 bytes @ 0x2
  4708                           
  4709  0022                     ??_led_start_preview:	
  4710                           ; 1 bytes @ 0x2
  4711                           
  4712  0022                     ??_led_stop_preview:	
  4713                           ; 1 bytes @ 0x2
  4714                           
  4715  0022                     ??_led_start_flash:	
  4716                           ; 1 bytes @ 0x2
  4717                           
  4718  0022                     ??_led_turnoff:	
  4719                           ; 1 bytes @ 0x2
  4720                           
  4721  0022                     ??_led_indicate_off:	
  4722                           ; 1 bytes @ 0x2
  4723                           
  4724  0022                     ??_led_update_day_bright:	
  4725                           ; 1 bytes @ 0x2
  4726                           
  4727  0022                     ??_led_indicate_day:	
  4728                           ; 1 bytes @ 0x2
  4729                           
  4730  0022                     ??_led_update_night_bright:	
  4731                           ; 1 bytes @ 0x2
  4732                           
  4733  0022                     ??_led_indicate_night:	
  4734                           ; 1 bytes @ 0x2
  4735                           
  4736  0022                     ??_led_turnon_ramp:	
  4737                           ; 1 bytes @ 0x2
  4738                           
  4739  0022                     ??_led_turnoff_ramp:	
  4740                           ; 1 bytes @ 0x2
  4741                           
  4742  0022                     ??_led_indicate_ble:	
  4743                           ; 1 bytes @ 0x2
  4744                           
  4745  0022                     ??_led_prepare_to_save:	
  4746                           ; 1 bytes @ 0x2
  4747                           
  4748  0022                     ?_tmr0_init:	
  4749                           ; 1 bytes @ 0x2
  4750                           
  4751  0022                     ?_tmr2_init:	
  4752                           ; 1 bytes @ 0x2
  4753                           
  4754  0022                     ??_pwm1_init:	
  4755                           ; 1 bytes @ 0x2
  4756                           
  4757  0022                     ??_pwm2_init:	
  4758                           ; 1 bytes @ 0x2
  4759                           
  4760  0022                     ??_pwm3_init:	
  4761                           ; 1 bytes @ 0x2
  4762                           
  4763  0022                     ??_pwm4_init:	
  4764                           ; 1 bytes @ 0x2
  4765                           
  4766  0022                     ??_pwm5_init:	
  4767                           ; 1 bytes @ 0x2
  4768                           
  4769  0022                     ?_eeprom_write:	
  4770                           ; 1 bytes @ 0x2
  4771                           
  4772  0022                     ??_eeprom_read:	
  4773                           ; 1 bytes @ 0x2
  4774                           
  4775  0022                     ?_eusart_init:	
  4776                           ; 1 bytes @ 0x2
  4777                           
  4778  0022                     ??_eusart_write:	
  4779                           ; 1 bytes @ 0x2
  4780                           
  4781  0022                     ?_key_init:	
  4782                           ; 1 bytes @ 0x2
  4783                           
  4784  0022                     ??_rtc_init:	
  4785                           ; 1 bytes @ 0x2
  4786                           
  4787  0022                     ??_rtc_second_ready:	
  4788                           ; 1 bytes @ 0x2
  4789                           
  4790  0022                     ??_rtc_set:	
  4791                           ; 1 bytes @ 0x2
  4792                           
  4793  0022                     ??_rtc_get_hour:	
  4794                           ; 1 bytes @ 0x2
  4795                           
  4796  0022                     ??_rtc_get_minute:	
  4797                           ; 1 bytes @ 0x2
  4798                           
  4799  0022                     ??_rtc_get_second:	
  4800                           ; 1 bytes @ 0x2
  4801                           
  4802  0022                     ?_increase:	
  4803                           ; 1 bytes @ 0x2
  4804                           
  4805  0022                     ?_decrease:	
  4806                           ; 1 bytes @ 0x2
  4807                           
  4808  0022                     ??_ble_transmit_start:	
  4809                           ; 1 bytes @ 0x2
  4810                           
  4811  0022                     ??_ble_transmit_stop:	
  4812                           ; 1 bytes @ 0x2
  4813                           
  4814  0022                     ??_ble_ready_to_receive:	
  4815                           ; 1 bytes @ 0x2
  4816                           
  4817  0022                     ??_ble_receive_start:	
  4818                           ; 1 bytes @ 0x2
  4819                           
  4820  0022                     ??_ble_receive_complete:	
  4821                           ; 1 bytes @ 0x2
  4822                           
  4823  0022                     ??_ble_receive_stop:	
  4824                           ; 1 bytes @ 0x2
  4825                           
  4826  0022                     ??_led_turnon_max:	
  4827                           ; 1 bytes @ 0x2
  4828                           
  4829  0022                     ??_led_preview:	
  4830                           ; 1 bytes @ 0x2
  4831                           
  4832  0022                     ??_osc_init:	
  4833                           ; 1 bytes @ 0x2
  4834                           
  4835  0022                     ??_gpio_init:	
  4836                           ; 1 bytes @ 0x2
  4837                           
  4838  0022                     ?___bmul:	
  4839                           ; 1 bytes @ 0x2
  4840                           
  4841  0022                     ?_strlen:	
  4842                           ; 1 bytes @ 0x2
  4843                           
  4844  0022                     ?_memset:	
  4845                           ; 2 bytes @ 0x2
  4846                           
  4847  0022                     ?___wmul:	
  4848                           ; 2 bytes @ 0x2
  4849                           
  4850  0022                     ?___awmod:	
  4851                           ; 2 bytes @ 0x2
  4852                           
  4853  0022                     ?___lwdiv:	
  4854                           ; 2 bytes @ 0x2
  4855                           
  4856  0022                     ?___lmul:	
  4857                           ; 2 bytes @ 0x2
  4858                           
  4859  0022                     eeprom_write@byte:	
  4860                           ; 4 bytes @ 0x2
  4861                           
  4862  0022                     eeprom_read@addr:	
  4863                           ; 1 bytes @ 0x2
  4864                           
  4865  0022                     eusart_write@byte:	
  4866                           ; 1 bytes @ 0x2
  4867                           
  4868  0022                     rtc_set@ptime:	
  4869                           ; 1 bytes @ 0x2
  4870                           
  4871  0022                     led_turnoff_ramp@i:	
  4872                           ; 1 bytes @ 0x2
  4873                           
  4874  0022                     led_turnon_max@i:	
  4875                           ; 1 bytes @ 0x2
  4876                           
  4877  0022                     led_turnoff@i:	
  4878                           ; 1 bytes @ 0x2
  4879                           
  4880  0022                     ___bmul@multiplicand:	
  4881                           ; 1 bytes @ 0x2
  4882                           
  4883  0022                     tmr0_init@cb:	
  4884                           ; 1 bytes @ 0x2
  4885                           
  4886  0022                     tmr2_init@cb:	
  4887                           ; 2 bytes @ 0x2
  4888                           
  4889  0022                     eusart_init@cb:	
  4890                           ; 2 bytes @ 0x2
  4891                           
  4892  0022                     key_init@cb:	
  4893                           ; 2 bytes @ 0x2
  4894                           
  4895  0022                     increase@psrc:	
  4896                           ; 2 bytes @ 0x2
  4897                           
  4898  0022                     decrease@psrc:	
  4899                           ; 2 bytes @ 0x2
  4900                           
  4901  0022                     ___wmul@multiplier:	
  4902                           ; 2 bytes @ 0x2
  4903                           
  4904  0022                     ___awmod@divisor:	
  4905                           ; 2 bytes @ 0x2
  4906                           
  4907  0022                     ___lwdiv@divisor:	
  4908                           ; 2 bytes @ 0x2
  4909                           
  4910  0022                     memset@p1:	
  4911                           ; 2 bytes @ 0x2
  4912                           
  4913  0022                     ___lmul@multiplier:	
  4914                           ; 2 bytes @ 0x2
  4915                           
  4916                           
  4917                           ; 4 bytes @ 0x2
  4918  0022                     	ds	1
  4919  0023                     ??_eeprom_write:	
  4920  0023                     ?_eeprom_read_buffer:	
  4921                           ; 1 bytes @ 0x3
  4922                           
  4923  0023                     ??_ble_ota_ack:	
  4924                           ; 1 bytes @ 0x3
  4925                           
  4926  0023                     ??_led_find_device:	
  4927                           ; 1 bytes @ 0x3
  4928                           
  4929  0023                     ??___bmul:	
  4930                           ; 1 bytes @ 0x3
  4931                           
  4932  0023                     eeprom_write@addr:	
  4933                           ; 1 bytes @ 0x3
  4934                           
  4935  0023                     rtc_set@i:	
  4936                           ; 1 bytes @ 0x3
  4937                           
  4938  0023                     ___bmul@product:	
  4939                           ; 1 bytes @ 0x3
  4940                           
  4941  0023                     eeprom_read_buffer@pbuf:	
  4942                           ; 1 bytes @ 0x3
  4943                           
  4944                           
  4945                           ; 2 bytes @ 0x3
  4946  0023                     	ds	1
  4947  0024                     ??_tmr0_init:	
  4948  0024                     ??_tmr2_init:	
  4949                           ; 1 bytes @ 0x4
  4950                           
  4951  0024                     ??_eusart_init:	
  4952                           ; 1 bytes @ 0x4
  4953                           
  4954  0024                     ??_key_init:	
  4955                           ; 1 bytes @ 0x4
  4956                           
  4957  0024                     ??_app_init:	
  4958                           ; 1 bytes @ 0x4
  4959                           
  4960  0024                     eeprom_write@state:	
  4961                           ; 1 bytes @ 0x4
  4962                           
  4963  0024                     increase@delt:	
  4964                           ; 1 bytes @ 0x4
  4965                           
  4966  0024                     decrease@delt:	
  4967                           ; 1 bytes @ 0x4
  4968                           
  4969  0024                     led_set_preview@pbuf:	
  4970                           ; 1 bytes @ 0x4
  4971                           
  4972  0024                     ___bmul@multiplier:	
  4973                           ; 1 bytes @ 0x4
  4974                           
  4975  0024                     ___wmul@multiplicand:	
  4976                           ; 1 bytes @ 0x4
  4977                           
  4978  0024                     ___awmod@dividend:	
  4979                           ; 2 bytes @ 0x4
  4980                           
  4981  0024                     ___lwdiv@dividend:	
  4982                           ; 2 bytes @ 0x4
  4983                           
  4984  0024                     memset@c:	
  4985                           ; 2 bytes @ 0x4
  4986                           
  4987                           
  4988                           ; 2 bytes @ 0x4
  4989  0024                     	ds	1
  4990  0025                     ??_strlen:	
  4991  0025                     ??_led_set_pro:	
  4992                           ; 1 bytes @ 0x5
  4993                           
  4994  0025                     ?_eeprom_write_buffer:	
  4995                           ; 1 bytes @ 0x5
  4996                           
  4997  0025                     ??_ble_send_data:	
  4998                           ; 1 bytes @ 0x5
  4999                           
  5000  0025                     eeprom_read_buffer@len:	
  5001                           ; 1 bytes @ 0x5
  5002                           
  5003  0025                     strlen@cp:	
  5004                           ; 1 bytes @ 0x5
  5005                           
  5006  0025                     eeprom_write_buffer@pbuf:	
  5007                           ; 1 bytes @ 0x5
  5008                           
  5009  0025                     increase@max:	
  5010                           ; 2 bytes @ 0x5
  5011                           
  5012  0025                     decrease@min:	
  5013                           ; 2 bytes @ 0x5
  5014                           
  5015  0025                     led_set_preview@val:	
  5016                           ; 2 bytes @ 0x5
  5017                           
  5018                           
  5019                           ; 2 bytes @ 0x5
  5020  0025                     	ds	1
  5021  0026                     ??_eeprom_read_buffer:	
  5022  0026                     ??___wmul:	
  5023                           ; 1 bytes @ 0x6
  5024                           
  5025  0026                     ??___awmod:	
  5026                           ; 1 bytes @ 0x6
  5027                           
  5028  0026                     ??___lwdiv:	
  5029                           ; 1 bytes @ 0x6
  5030                           
  5031  0026                     led_turnon_ramp@i:	
  5032                           ; 1 bytes @ 0x6
  5033                           
  5034  0026                     led_update_day_bright@i:	
  5035                           ; 1 bytes @ 0x6
  5036                           
  5037  0026                     led_update_night_bright@i:	
  5038                           ; 1 bytes @ 0x6
  5039                           
  5040  0026                     led_set_bright@pbuf:	
  5041                           ; 1 bytes @ 0x6
  5042                           
  5043  0026                     ___awmod@counter:	
  5044                           ; 1 bytes @ 0x6
  5045                           
  5046  0026                     strlen@s:	
  5047                           ; 1 bytes @ 0x6
  5048                           
  5049  0026                     ___wmul@product:	
  5050                           ; 1 bytes @ 0x6
  5051                           
  5052  0026                     ___lwdiv@quotient:	
  5053                           ; 2 bytes @ 0x6
  5054                           
  5055  0026                     memset@n:	
  5056                           ; 2 bytes @ 0x6
  5057                           
  5058  0026                     ___lmul@multiplicand:	
  5059                           ; 2 bytes @ 0x6
  5060                           
  5061                           
  5062                           ; 4 bytes @ 0x6
  5063  0026                     	ds	1
  5064  0027                     ??_led_set_mode:	
  5065  0027                     ??_led_set_power:	
  5066                           ; 1 bytes @ 0x7
  5067                           
  5068  0027                     ??_led_set_time:	
  5069                           ; 1 bytes @ 0x7
  5070                           
  5071  0027                     ??_increase:	
  5072                           ; 1 bytes @ 0x7
  5073                           
  5074  0027                     ??_decrease:	
  5075                           ; 1 bytes @ 0x7
  5076                           
  5077  0027                     ?_ble_send_cmd:	
  5078                           ; 1 bytes @ 0x7
  5079                           
  5080  0027                     eeprom_write_buffer@len:	
  5081                           ; 1 bytes @ 0x7
  5082                           
  5083  0027                     eeprom_read_buffer@addr:	
  5084                           ; 1 bytes @ 0x7
  5085                           
  5086  0027                     led_set_power@on:	
  5087                           ; 1 bytes @ 0x7
  5088                           
  5089  0027                     led_set_preview@i:	
  5090                           ; 1 bytes @ 0x7
  5091                           
  5092  0027                     led_set_time@ptime:	
  5093                           ; 1 bytes @ 0x7
  5094                           
  5095  0027                     ___awmod@sign:	
  5096                           ; 1 bytes @ 0x7
  5097                           
  5098  0027                     ble_send_cmd@cmd:	
  5099                           ; 1 bytes @ 0x7
  5100                           
  5101  0027                     led_set_bright@val:	
  5102                           ; 2 bytes @ 0x7
  5103                           
  5104                           
  5105                           ; 2 bytes @ 0x7
  5106  0027                     	ds	1
  5107  0028                     ??_memset:	
  5108  0028                     ??_eeprom_write_buffer:	
  5109                           ; 1 bytes @ 0x8
  5110                           
  5111  0028                     eeprom_write_buffer@addr:	
  5112                           ; 1 bytes @ 0x8
  5113                           
  5114  0028                     eeprom_read_buffer@i:	
  5115                           ; 1 bytes @ 0x8
  5116                           
  5117  0028                     led_set_mode@m:	
  5118                           ; 1 bytes @ 0x8
  5119                           
  5120  0028                     ___lwdiv@counter:	
  5121                           ; 1 bytes @ 0x8
  5122                           
  5123  0028                     memset@p:	
  5124                           ; 1 bytes @ 0x8
  5125                           
  5126                           
  5127                           ; 2 bytes @ 0x8
  5128  0028                     	ds	1
  5129  0029                     ??_led_set_custom:	
  5130  0029                     ??_ble_send_cmd:	
  5131                           ; 1 bytes @ 0x9
  5132                           
  5133  0029                     eeprom_write_buffer@i:	
  5134                           ; 1 bytes @ 0x9
  5135                           
  5136  0029                     ble_send_data@xor:	
  5137                           ; 1 bytes @ 0x9
  5138                           
  5139  0029                     led_set_bright@i:	
  5140                           ; 1 bytes @ 0x9
  5141                           
  5142                           
  5143                           ; 1 bytes @ 0x9
  5144  0029                     	ds	1
  5145  002A                     ??_led_para_default:	
  5146  002A                     ??_led_save_para:	
  5147                           ; 1 bytes @ 0xA
  5148                           
  5149  002A                     ??___lmul:	
  5150                           ; 1 bytes @ 0xA
  5151                           
  5152  002A                     ble_send_data@len:	
  5153                           ; 1 bytes @ 0xA
  5154                           
  5155  002A                     led_set_cycle@len:	
  5156                           ; 1 bytes @ 0xA
  5157                           
  5158  002A                     ___lmul@product:	
  5159                           ; 1 bytes @ 0xA
  5160                           
  5161  002A                     ble_send_cmd@ack:	
  5162                           ; 4 bytes @ 0xA
  5163                           
  5164                           
  5165                           ; 8 bytes @ 0xA
  5166  002A                     	ds	1
  5167  002B                     ?_led_increase:	
  5168  002B                     ?_led_decrease:	
  5169                           ; 1 bytes @ 0xB
  5170                           
  5171  002B                     ble_send_data@i:	
  5172                           ; 1 bytes @ 0xB
  5173                           
  5174  002B                     led_set_cycle@pbuf:	
  5175                           ; 1 bytes @ 0xB
  5176                           
  5177  002B                     led_increase@delt:	
  5178                           ; 1 bytes @ 0xB
  5179                           
  5180  002B                     led_decrease@delt:	
  5181                           ; 1 bytes @ 0xB
  5182                           
  5183                           
  5184                           ; 1 bytes @ 0xB
  5185  002B                     	ds	1
  5186  002C                     ??_led_increase:	
  5187  002C                     ??_led_decrease:	
  5188                           ; 1 bytes @ 0xC
  5189                           
  5190  002C                     led_set_cycle@i:	
  5191                           ; 1 bytes @ 0xC
  5192                           
  5193  002C                     ble_send_data@p:	
  5194                           ; 1 bytes @ 0xC
  5195                           
  5196                           
  5197                           ; 2 bytes @ 0xC
  5198  002C                     	ds	1
  5199  002D                     led_set_pro@len:	
  5200                           
  5201                           ; 1 bytes @ 0xD
  5202  002D                     	ds	1
  5203  002E                     ?___lldiv:	
  5204  002E                     led_set_pro@pbuf:	
  5205                           ; 4 bytes @ 0xE
  5206                           
  5207  002E                     ___lldiv@divisor:	
  5208                           ; 1 bytes @ 0xE
  5209                           
  5210                           
  5211                           ; 4 bytes @ 0xE
  5212  002E                     	ds	1
  5213  002F                     led_set_pro@i:	
  5214                           
  5215                           ; 1 bytes @ 0xF
  5216  002F                     	ds	1
  5217  0030                     led_increase@chn:	
  5218  0030                     led_decrease@chn:	
  5219                           ; 1 bytes @ 0x10
  5220                           
  5221                           
  5222                           ; 1 bytes @ 0x10
  5223  0030                     	ds	2
  5224  0032                     ble_send_cmd@len:	
  5225  0032                     ___lldiv@dividend:	
  5226                           ; 1 bytes @ 0x12
  5227                           
  5228                           
  5229                           ; 4 bytes @ 0x12
  5230  0032                     	ds	1
  5231  0033                     ble_send_cmd@cnt:	
  5232                           
  5233                           ; 1 bytes @ 0x13
  5234  0033                     	ds	1
  5235  0034                     ble_send_cmd@rev:	
  5236  0034                     led_para_default@i:	
  5237                           ; 1 bytes @ 0x14
  5238                           
  5239                           
  5240                           ; 1 bytes @ 0x14
  5241  0034                     	ds	1
  5242  0035                     ble_send_cmd@idx:	
  5243  0035                     led_para_default@j:	
  5244                           ; 1 bytes @ 0x15
  5245                           
  5246                           
  5247                           ; 1 bytes @ 0x15
  5248  0035                     	ds	1
  5249  0036                     ??_ble_check_devid:	
  5250  0036                     ??___lldiv:	
  5251                           ; 1 bytes @ 0x16
  5252                           
  5253  0036                     led_para_default@i_1199:	
  5254                           ; 1 bytes @ 0x16
  5255                           
  5256  0036                     ___lldiv@quotient:	
  5257                           ; 1 bytes @ 0x16
  5258                           
  5259                           
  5260                           ; 4 bytes @ 0x16
  5261  0036                     	ds	1
  5262  0037                     led_para_default@i_1206:	
  5263  0037                     ble_check_devid@dev:	
  5264                           ; 1 bytes @ 0x17
  5265                           
  5266                           
  5267                           ; 17 bytes @ 0x17
  5268  0037                     	ds	1
  5269  0038                     ??_led_para_init:	
  5270  0038                     led_set_custom@idx:	
  5271                           ; 1 bytes @ 0x18
  5272                           
  5273                           
  5274                           ; 1 bytes @ 0x18
  5275  0038                     	ds	1
  5276  0039                     led_set_custom@i:	
  5277                           
  5278                           ; 1 bytes @ 0x19
  5279  0039                     	ds	1
  5280  003A                     ??_ble_decode:	
  5281  003A                     ___lldiv@counter:	
  5282                           ; 1 bytes @ 0x1A
  5283                           
  5284                           
  5285                           ; 1 bytes @ 0x1A
  5286  003A                     	ds	1
  5287  003B                     ?_led_calc_bright:	
  5288  003B                     led_calc_bright@ebrt:	
  5289                           ; 2 bytes @ 0x1B
  5290                           
  5291                           
  5292                           ; 1 bytes @ 0x1B
  5293  003B                     	ds	1
  5294  003C                     ??_ble_process:	
  5295  003C                     led_calc_bright@duration:	
  5296                           ; 1 bytes @ 0x1C
  5297                           
  5298                           
  5299                           ; 2 bytes @ 0x1C
  5300  003C                     	ds	2
  5301  003E                     led_calc_bright@dt:	
  5302                           
  5303                           ; 4 bytes @ 0x1E
  5304  003E                     	ds	4
  5305  0042                     ??_led_calc_bright:	
  5306  0042                     led_para_init@j:	
  5307                           ; 1 bytes @ 0x22
  5308                           
  5309  0042                     led_calc_bright@result:	
  5310                           ; 1 bytes @ 0x22
  5311                           
  5312                           
  5313                           ; 2 bytes @ 0x22
  5314  0042                     	ds	1
  5315  0043                     led_para_init@i:	
  5316                           
  5317                           ; 1 bytes @ 0x23
  5318  0043                     	ds	1
  5319  0044                     ??_led_init:	
  5320  0044                     led_calc_bright@vs:	
  5321                           ; 1 bytes @ 0x24
  5322                           
  5323                           
  5324                           ; 2 bytes @ 0x24
  5325  0044                     	ds	2
  5326  0046                     led_calc_bright@period:	
  5327                           
  5328                           ; 2 bytes @ 0x26
  5329  0046                     	ds	2
  5330  0048                     led_calc_bright@dbrt:	
  5331  0048                     ble_check_devid@cnt:	
  5332                           ; 1 bytes @ 0x28
  5333                           
  5334                           
  5335                           ; 2 bytes @ 0x28
  5336  0048                     	ds	1
  5337  0049                     led_calc_bright@sbrt:	
  5338                           
  5339                           ; 1 bytes @ 0x29
  5340  0049                     	ds	1
  5341  004A                     ?_led_auto_process:	
  5342  004A                     ?_led_pro_process:	
  5343                           ; 1 bytes @ 0x2A
  5344                           
  5345  004A                     ble_check_devid@len:	
  5346                           ; 1 bytes @ 0x2A
  5347                           
  5348  004A                     led_auto_process@ct:	
  5349                           ; 1 bytes @ 0x2A
  5350                           
  5351  004A                     led_pro_process@ct:	
  5352                           ; 2 bytes @ 0x2A
  5353                           
  5354                           
  5355                           ; 2 bytes @ 0x2A
  5356  004A                     	ds	1
  5357  004B                     ble_check_devid@rev:	
  5358                           
  5359                           ; 1 bytes @ 0x2B
  5360  004B                     	ds	1
  5361  004C                     ble_check_devid@idx:	
  5362  004C                     led_auto_process@sec:	
  5363                           ; 1 bytes @ 0x2C
  5364                           
  5365  004C                     led_pro_process@sec:	
  5366                           ; 1 bytes @ 0x2C
  5367                           
  5368                           
  5369                           ; 1 bytes @ 0x2C
  5370  004C                     	ds	1
  5371  004D                     ??_ble_init:	
  5372  004D                     ??_led_auto_process:	
  5373                           ; 1 bytes @ 0x2D
  5374                           
  5375  004D                     ??_led_pro_process:	
  5376                           ; 1 bytes @ 0x2D
  5377                           
  5378                           
  5379                           ; 1 bytes @ 0x2D
  5380  004D                     	ds	8
  5381  0055                     ??_led_second_cb:	
  5382  0055                     ??_main:	
  5383                           ; 1 bytes @ 0x35
  5384                           
  5385                           
  5386                           	psect	text3
  5387  14B9                     __ptext3:	
  5388 ;; *************** function _led_second_cb *****************
  5389 ;; Defined at:
  5390 ;;		line 1940 in file "src/app_led.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;		None
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  ct              2   53[BANK1 ] unsigned int 
  5395 ;;  sec             1   52[BANK1 ] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 1F/0
  5402 ;;		On exit  : 1F/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5406 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5408 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5409 ;;Total ram usage:        3 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:   12
  5412 ;; This function calls:
  5413 ;;		___wmul
  5414 ;;		_led_auto_process
  5415 ;;		_led_find_device
  5416 ;;		_led_preview
  5417 ;;		_led_pro_process
  5418 ;;		_led_save_para
  5419 ;;		_rtc_get_hour
  5420 ;;		_rtc_get_minute
  5421 ;;		_rtc_get_second
  5422 ;; This function is called by:
  5423 ;;		_main
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           
  5428                           ;psect for function _led_second_cb
  5429  14B9                     _led_second_cb:	
  5430                           
  5431                           ;app_led.c: 1942: uint16_t ct = rtc_get_hour()*60u + rtc_get_minute();
  5432                           
  5433                           ;incstack = 0
  5434                           ; Regs used in _led_second_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5435  14B9  26EB  3194         	fcall	_rtc_get_hour
  5436  14BB  0020               	movlb	0	; select bank0
  5437  14BC  00A2               	movwf	___wmul@multiplier
  5438  14BD  303C               	movlw	60
  5439  14BE  01A3               	clrf	___wmul@multiplier+1
  5440  14BF  00A4               	movwf	___wmul@multiplicand
  5441  14C0  01A5               	clrf	___wmul@multiplicand+1
  5442  14C1  26BF  3194         	fcall	___wmul
  5443  14C3  0823               	movf	?___wmul+1,w
  5444  14C4  0021               	movlb	1	; select bank1
  5445  14C5  00D6               	movwf	(led_second_cb@ct+1)^(0+128)
  5446  14C6  0020               	movlb	0	; select bank0
  5447  14C7  0822               	movf	?___wmul,w
  5448  14C8  0021               	movlb	1	; select bank1
  5449  14C9  00D5               	movwf	led_second_cb@ct^(0+128)
  5450  14CA  26EE  3194         	fcall	_rtc_get_minute
  5451  14CC  07D5               	addwf	led_second_cb@ct^(0+128),f
  5452  14CD  1803               	skipnc
  5453  14CE  0AD6               	incf	(led_second_cb@ct+1)^(0+128),f
  5454                           
  5455                           ;app_led.c: 1943: uint8_t sec = rtc_get_second();
  5456  14CF  26F0  3194         	fcall	_rtc_get_second
  5457  14D1  00D4               	movwf	led_second_cb@sec^(0+128)
  5458                           
  5459                           ;app_led.c: 1944: if(led_run_para.mFind)
  5460  14D2  0020               	movlb	0	; select bank0
  5461  14D3  1C5D               	btfss	_led_run_para,0
  5462  14D4  2CD8               	goto	l6543
  5463                           
  5464                           ;app_led.c: 1945: {
  5465                           ;app_led.c: 1946: led_find_device();
  5466  14D5  26D4  3194         	fcall	_led_find_device
  5467                           
  5468                           ;app_led.c: 1947: }
  5469  14D7  2D0D               	goto	l6557
  5470  14D8                     l6543:	
  5471                           
  5472                           ;app_led.c: 1948: else
  5473                           ;app_led.c: 1949: {
  5474                           ;app_led.c: 1951: if(m_led_para.mState == 3)
  5475  14D8  318B  2381  3194   	fcall	PL14	;call to abstracted procedure
  5476  14DB  3A03               	xorlw	3
  5477  14DC  1D03               	skipz
  5478  14DD  2D0D               	goto	l6557
  5479                           
  5480                           ;app_led.c: 1952: {
  5481                           ;app_led.c: 1954: if(led_run_para.mPrev)
  5482  14DE  1CDD               	btfss	_led_run_para,1
  5483  14DF  2CE3               	goto	l6549
  5484                           
  5485                           ;app_led.c: 1955: {
  5486                           ;app_led.c: 1956: led_preview();
  5487  14E0  26E4  3194         	fcall	_led_preview
  5488                           
  5489                           ;app_led.c: 1957: }
  5490  14E2  2D0D               	goto	l6557
  5491  14E3                     l6549:	
  5492                           
  5493                           ;app_led.c: 1974: else if(m_led_para.ble_para.mMode == 1)
  5494  14E3  318E  26B0  3194   	fcall	PL10	;call to abstracted procedure
  5495  14E6  3A01               	xorlw	1
  5496  14E7  1D03               	skipz
  5497  14E8  2CF9               	goto	l6553
  5498                           
  5499                           ;app_led.c: 1975: {
  5500                           ;app_led.c: 1976: led_auto_process(ct, sec);
  5501  14E9  0021               	movlb	1	; select bank1
  5502  14EA  0856               	movf	(led_second_cb@ct+1)^(0+128),w
  5503  14EB  0020               	movlb	0	; select bank0
  5504  14EC  00CB               	movwf	led_auto_process@ct+1
  5505  14ED  0021               	movlb	1	; select bank1
  5506  14EE  0855               	movf	led_second_cb@ct^(0+128),w
  5507  14EF  0020               	movlb	0	; select bank0
  5508  14F0  00CA               	movwf	led_auto_process@ct
  5509  14F1  0021               	movlb	1	; select bank1
  5510  14F2  0854               	movf	led_second_cb@sec^(0+128),w
  5511  14F3  0020               	movlb	0	; select bank0
  5512  14F4  00CC               	movwf	led_auto_process@sec
  5513  14F5  3191  21C7  3194   	fcall	_led_auto_process
  5514                           
  5515                           ;app_led.c: 1977: }
  5516  14F8  2D0D               	goto	l6557
  5517  14F9                     l6553:	
  5518                           
  5519                           ;app_led.c: 1978: else if(m_led_para.ble_para.mMode == 2)
  5520  14F9  318E  26B0  3194   	fcall	PL10	;call to abstracted procedure
  5521  14FC  3A02               	xorlw	2
  5522  14FD  1D03               	skipz
  5523  14FE  2D0D               	goto	l6557
  5524                           
  5525                           ;app_led.c: 1979: {
  5526                           ;app_led.c: 1980: led_pro_process(ct, sec);
  5527  14FF  0021               	movlb	1	; select bank1
  5528  1500  0856               	movf	(led_second_cb@ct+1)^(0+128),w
  5529  1501  0020               	movlb	0	; select bank0
  5530  1502  00CB               	movwf	led_pro_process@ct+1
  5531  1503  0021               	movlb	1	; select bank1
  5532  1504  0855               	movf	led_second_cb@ct^(0+128),w
  5533  1505  0020               	movlb	0	; select bank0
  5534  1506  00CA               	movwf	led_pro_process@ct
  5535  1507  0021               	movlb	1	; select bank1
  5536  1508  0854               	movf	led_second_cb@sec^(0+128),w
  5537  1509  0020               	movlb	0	; select bank0
  5538  150A  00CC               	movwf	led_pro_process@sec
  5539  150B  2511  3194         	fcall	_led_pro_process
  5540  150D                     l6557:	
  5541                           
  5542                           ;app_led.c: 1981: }
  5543                           ;app_led.c: 1984: }
  5544                           ;app_led.c: 1986: }
  5545                           ;app_led.c: 1988: if(led_run_para.mSave)
  5546  150D  0020               	movlb	0	; select bank0
  5547  150E  1D5D               	btfss	_led_run_para,2
  5548  150F  0008               	return
  5549                           
  5550                           ;app_led.c: 1989: {
  5551                           ;app_led.c: 1990: led_save_para();
  5552  1510  2F08               	ljmp	l6509
  5553  1511                     __end_of_led_second_cb:	
  5554  1511                     __ptext10:	
  5555 ;; *************** function _led_pro_process *****************
  5556 ;; Defined at:
  5557 ;;		line 595 in file "src/app_led.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  ct              2   42[BANK0 ] unsigned int 
  5560 ;;  sec             1   44[BANK0 ] unsigned char 
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;  tmp             1   10[BANK1 ] unsigned char 
  5563 ;;  p2              2   24[BANK1 ] PTR struct .
  5564 ;;		 -> m_led_para.ble_para.pro_para.points(60), m_led_para.ble_para.pro_para(61), 
  5565 ;;  p1              2   22[BANK1 ] PTR struct .
  5566 ;;		 -> m_led_para.ble_para.pro_para.points(60), m_led_para.ble_para.pro_para(61), 
  5567 ;;  t2              2   13[BANK1 ] unsigned int 
  5568 ;;  t1              2   11[BANK1 ] unsigned int 
  5569 ;;  index          10    0[BANK1 ] unsigned char [10]
  5570 ;;  dt              4   15[BANK1 ] unsigned long 
  5571 ;;  st              2   38[BANK1 ] unsigned int 
  5572 ;;  ep              2   35[BANK1 ] PTR struct .
  5573 ;;		 -> m_led_para.ble_para.pro_para.points(60), m_led_para.ble_para.pro_para(61), 
  5574 ;;  sp              2   33[BANK1 ] PTR struct .
  5575 ;;		 -> m_led_para.ble_para.pro_para.points(60), m_led_para.ble_para.pro_para(61), 
  5576 ;;  et              2   31[BANK1 ] unsigned int 
  5577 ;;  end             2   28[BANK1 ] unsigned int 
  5578 ;;  start           2   26[BANK1 ] unsigned int 
  5579 ;;  duration        2   20[BANK1 ] unsigned int 
  5580 ;;  i               1   40[BANK1 ] unsigned char 
  5581 ;;  j               1   37[BANK1 ] unsigned char 
  5582 ;;  point_count     1   30[BANK1 ] unsigned char 
  5583 ;;  flag            1   19[BANK1 ] unsigned char 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 1F/0
  5590 ;;		On exit  : 1F/1
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5593 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5594 ;;      Locals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;      Totals:         0      11      41       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;Total ram usage:       52 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:   11
  5600 ;; This function calls:
  5601 ;;		___wmul
  5602 ;;		_led_calc_bright
  5603 ;; This function is called by:
  5604 ;;		_led_second_cb
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           
  5609                           ;psect for function _led_pro_process
  5610  1511                     _led_pro_process:	
  5611                           
  5612                           ;app_led.c: 597: if(m_led_para.ble_para.pro_para.point_count < 4)
  5613                           
  5614                           ;incstack = 0
  5615                           ; Regs used in _led_pro_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5616  1511  318F  2744  3194   	fcall	PL112	;call to abstracted procedure
  5617                           
  5618                           ;app_led.c: 598: {
  5619                           ;app_led.c: 599: m_led_para.ble_para.pro_para.point_count = 4;
  5620  1514  1803               	skipnc
  5621  1515  2D18               	goto	L3
  5622  1516  3004               	movlw	4
  5623  1517  2D1F               	goto	L1
  5624  1518                     L3:	
  5625                           ;app_led.c: 601: else if(m_led_para.ble_para.pro_para.point_count > 10)
  5626                           
  5627                           ;app_led.c: 600: }
  5628                           
  5629  1518  300B               	movlw	11
  5630  1519  0201               	subwf	1,w
  5631                           
  5632                           ;app_led.c: 602: {
  5633                           ;app_led.c: 603: m_led_para.ble_para.pro_para.point_count = 10;
  5634  151A  27F1  3194         	fcall	PL148	;call to abstracted procedure
  5635  151C  1C03               	skipc
  5636  151D  2D22               	goto	L4
  5637  151E  300A               	movlw	10
  5638  151F                     L1:	
  5639  151F  0081               	movwf	1
  5640                           
  5641                           ;app_led.c: 604: }
  5642                           ;app_led.c: 605: uint8_t point_count = m_led_para.ble_para.pro_para.point_count;
  5643  1520  27F1  3194         	fcall	PL148	;call to abstracted procedure
  5644  1522                     L4:	
  5645  1522  0801               	movf	1,w
  5646  1523  0021               	movlb	1	; select bank1
  5647  1524  00BE               	movwf	led_pro_process@point_count^(0+128)
  5648                           
  5649                           ;app_led.c: 606: uint8_t i, j;
  5650                           ;app_led.c: 607: uint8_t index[10];
  5651                           ;app_led.c: 608: for(i = 0; i < 10; i++)
  5652  1525  01C8               	clrf	led_pro_process@i^(0+128)
  5653  1526                     l6361:	
  5654                           
  5655                           ;app_led.c: 609: {
  5656                           ;app_led.c: 610: index[i] = i;
  5657  1526  0848               	movf	led_pro_process@i^(0+128),w
  5658  1527  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  5659  1528  0086               	movwf	6
  5660  1529  0187               	clrf	7
  5661  152A  0848               	movf	led_pro_process@i^(0+128),w
  5662  152B  0081               	movwf	1
  5663  152C  300A               	movlw	10
  5664  152D  0AC8               	incf	led_pro_process@i^(0+128),f
  5665  152E  0248               	subwf	led_pro_process@i^(0+128),w
  5666  152F  1C03               	skipc
  5667  1530  2D26               	goto	l6361
  5668                           
  5669                           ;app_led.c: 611: }
  5670                           ;app_led.c: 612: for(i = point_count - 1; i > 0; i--)
  5671  1531  083E               	movf	led_pro_process@point_count^(0+128),w
  5672  1532  3EFF               	addlw	255
  5673  1533  00C8               	movwf	led_pro_process@i^(0+128)
  5674  1534  0848               	movf	led_pro_process@i^(0+128),w
  5675  1535  1903               	btfsc	3,2
  5676  1536  2DB3               	goto	l6397
  5677  1537                     l6371:	
  5678                           
  5679                           ;app_led.c: 613: {
  5680                           ;app_led.c: 614: for(j = 0; j < i; j++)
  5681  1537  01C5               	clrf	led_pro_process@j^(0+128)
  5682  1538                     l6391:	
  5683  1538  0848               	movf	led_pro_process@i^(0+128),w
  5684  1539  0245               	subwf	led_pro_process@j^(0+128),w
  5685  153A  1803               	btfsc	3,0
  5686  153B  2DB1               	goto	l6393
  5687                           
  5688                           ;app_led.c: 615: {
  5689                           ;app_led.c: 616: timer_bright_point_t *p1 = &m_led_para.ble_para.pro_para.points[index[j
      +                          ]];
  5690  153C  3023               	movlw	35
  5691  153D  00B7               	movwf	(led_pro_process@p1+1)^(0+128)
  5692  153E  30B3               	movlw	179
  5693  153F  00B6               	movwf	led_pro_process@p1^(0+128)
  5694  1540  0845               	movf	led_pro_process@j^(0+128),w
  5695  1541  27D0  3194         	fcall	PL62	;call to abstracted procedure
  5696  1543  27BB  3194         	fcall	PL44	;call to abstracted procedure
  5697  1545  26BF  3194         	fcall	___wmul
  5698  1547  2770  3194         	fcall	PL18	;call to abstracted procedure
  5699  1549  07B6               	addwf	led_pro_process@p1^(0+128),f
  5700  154A  0020               	movlb	0	; select bank0
  5701  154B  084E               	movf	??_led_pro_process+1,w
  5702  154C  0021               	movlb	1	; select bank1
  5703  154D  3DB7               	addwfc	(led_pro_process@p1+1)^(0+128),f
  5704                           
  5705                           ;app_led.c: 617: timer_bright_point_t *p2 = &m_led_para.ble_para.pro_para.points[index[j
      +                          +1]];
  5706  154E  3023               	movlw	35
  5707  154F  00B9               	movwf	(led_pro_process@p2+1)^(0+128)
  5708  1550  30B3               	movlw	179
  5709  1551  00B8               	movwf	led_pro_process@p2^(0+128)
  5710  1552  0845               	movf	led_pro_process@j^(0+128),w
  5711  1553  3E01               	addlw	1
  5712  1554  27D0  3194         	fcall	PL62	;call to abstracted procedure
  5713  1556  27BB  3194         	fcall	PL44	;call to abstracted procedure
  5714  1558  26BF  3194         	fcall	___wmul
  5715  155A  2770  3194         	fcall	PL18	;call to abstracted procedure
  5716  155C  07B8               	addwf	led_pro_process@p2^(0+128),f
  5717  155D  0020               	movlb	0	; select bank0
  5718  155E  084E               	movf	??_led_pro_process+1,w
  5719  155F  0021               	movlb	1	; select bank1
  5720  1560  3DB9               	addwfc	(led_pro_process@p2+1)^(0+128),f
  5721                           
  5722                           ;app_led.c: 618: uint16_t t1 = p1->hour*60u + p1->minuite;
  5723  1561  0836               	movf	led_pro_process@p1^(0+128),w
  5724  1562  0086               	movwf	6
  5725  1563  0837               	movf	(led_pro_process@p1+1)^(0+128),w
  5726  1564  0087               	movwf	7
  5727  1565  2753  3194         	fcall	PL8	;call to abstracted procedure
  5728  1567  26BF  3194         	fcall	___wmul
  5729  1569  0823               	movf	?___wmul+1,w
  5730  156A  0021               	movlb	1	; select bank1
  5731  156B  00AC               	movwf	(led_pro_process@t1+1)^(0+128)
  5732  156C  0020               	movlb	0	; select bank0
  5733  156D  0822               	movf	?___wmul,w
  5734  156E  0021               	movlb	1	; select bank1
  5735  156F  00AB               	movwf	led_pro_process@t1^(0+128)
  5736  1570  0836               	movf	led_pro_process@p1^(0+128),w
  5737  1571  0086               	movwf	6
  5738  1572  0837               	movf	(led_pro_process@p1+1)^(0+128),w
  5739  1573  0087               	movwf	7
  5740  1574  3141               	addfsr 1,1
  5741  1575  0801               	movf	1,w
  5742  1576  07AB               	addwf	led_pro_process@t1^(0+128),f
  5743  1577  1803               	skipnc
  5744  1578  0AAC               	incf	(led_pro_process@t1+1)^(0+128),f
  5745                           
  5746                           ;app_led.c: 619: uint16_t t2 = p2->hour*60u + p2->minuite;
  5747  1579  0838               	movf	led_pro_process@p2^(0+128),w
  5748  157A  0086               	movwf	6
  5749  157B  0839               	movf	(led_pro_process@p2+1)^(0+128),w
  5750  157C  0087               	movwf	7
  5751  157D  2753  3194         	fcall	PL8	;call to abstracted procedure
  5752  157F  26BF  3194         	fcall	___wmul
  5753  1581  0823               	movf	?___wmul+1,w
  5754  1582  0021               	movlb	1	; select bank1
  5755  1583  00AE               	movwf	(led_pro_process@t2+1)^(0+128)
  5756  1584  0020               	movlb	0	; select bank0
  5757  1585  0822               	movf	?___wmul,w
  5758  1586  0021               	movlb	1	; select bank1
  5759  1587  00AD               	movwf	led_pro_process@t2^(0+128)
  5760  1588  0838               	movf	led_pro_process@p2^(0+128),w
  5761  1589  0086               	movwf	6
  5762  158A  0839               	movf	(led_pro_process@p2+1)^(0+128),w
  5763  158B  0087               	movwf	7
  5764  158C  3141               	addfsr 1,1
  5765  158D  0801               	movf	1,w
  5766  158E  07AD               	addwf	led_pro_process@t2^(0+128),f
  5767  158F  1803               	skipnc
  5768  1590  0AAE               	incf	(led_pro_process@t2+1)^(0+128),f
  5769                           
  5770                           ;app_led.c: 620: if(t1 > t2)
  5771  1591  082C               	movf	(led_pro_process@t1+1)^(0+128),w
  5772  1592  022E               	subwf	(led_pro_process@t2+1)^(0+128),w
  5773  1593  1D03               	skipz
  5774  1594  2D97               	goto	u6315
  5775  1595  082B               	movf	led_pro_process@t1^(0+128),w
  5776  1596  022D               	subwf	led_pro_process@t2^(0+128),w
  5777  1597                     u6315:	
  5778  1597  1803               	skipnc
  5779  1598  2DAF               	goto	l6389
  5780                           
  5781                           ;app_led.c: 621: {
  5782                           ;app_led.c: 622: uint8_t tmp = index[j];
  5783  1599  0845               	movf	led_pro_process@j^(0+128),w
  5784  159A  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  5785  159B  0086               	movwf	6
  5786  159C  0187               	clrf	7
  5787  159D  0801               	movf	1,w
  5788  159E  00AA               	movwf	led_pro_process@tmp^(0+128)
  5789                           
  5790                           ;app_led.c: 623: index[j] = index[j+1];
  5791  159F  0845               	movf	led_pro_process@j^(0+128),w
  5792  15A0  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  5793  15A1  0086               	movwf	6
  5794  15A2  0845               	movf	led_pro_process@j^(0+128),w
  5795  15A3  3E01               	addlw	1
  5796  15A4  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  5797  15A5  0084               	movwf	4
  5798  15A6  0185               	clrf	5
  5799  15A7  0800               	movf	0,w
  5800  15A8  0081               	movwf	1
  5801                           
  5802                           ;app_led.c: 624: index[j+1] = tmp;
  5803  15A9  0845               	movf	led_pro_process@j^(0+128),w
  5804  15AA  3E01               	addlw	1
  5805  15AB  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  5806  15AC  0086               	movwf	6
  5807  15AD  082A               	movf	led_pro_process@tmp^(0+128),w
  5808  15AE  0081               	movwf	1
  5809  15AF                     l6389:	
  5810  15AF  0AC5               	incf	led_pro_process@j^(0+128),f
  5811  15B0  2D38               	goto	l6391
  5812  15B1                     l6393:	
  5813  15B1  0BC8               	decfsz	led_pro_process@i^(0+128),f
  5814  15B2  2D37               	goto	l6371
  5815  15B3                     l6397:	
  5816                           
  5817                           ;app_led.c: 625: }
  5818                           ;app_led.c: 626: }
  5819                           ;app_led.c: 627: }
  5820                           ;app_led.c: 628: uint16_t start = index[point_count-1];
  5821  15B3  083E               	movf	led_pro_process@point_count^(0+128),w
  5822  15B4  3EFF               	addlw	255
  5823  15B5  27EA  3194         	fcall	PL116	;call to abstracted procedure
  5824                           
  5825                           ;app_led.c: 629: uint16_t end = index[0];
  5826  15B7  0820               	movf	led_pro_process@index^(0+128),w
  5827                           
  5828                           ;app_led.c: 630: timer_bright_point_t *sp = &m_led_para.ble_para.pro_para.points[start];
  5829  15B8  27AA  3194         	fcall	PL42	;call to abstracted procedure
  5830  15BA  26BF  3194         	fcall	___wmul
  5831  15BC  2770  3194         	fcall	PL18	;call to abstracted procedure
  5832                           
  5833                           ;app_led.c: 631: timer_bright_point_t *ep = &m_led_para.ble_para.pro_para.points[end];
  5834  15BE  2779  3194         	fcall	PL30	;call to abstracted procedure
  5835  15C0  26BF  3194         	fcall	___wmul
  5836  15C2  2770  3194         	fcall	PL18	;call to abstracted procedure
  5837                           
  5838                           ;app_led.c: 632: uint16_t st = sp->hour * 60u + sp->minuite;
  5839  15C4  27A0  3194         	fcall	PL38	;call to abstracted procedure
  5840  15C6  2753  3194         	fcall	PL8	;call to abstracted procedure
  5841  15C8  26BF  3194         	fcall	___wmul
  5842                           
  5843                           ;app_led.c: 633: uint16_t et = ep->hour * 60u + ep->minuite;
  5844  15CA  275B  3194         	fcall	PL16	;call to abstracted procedure
  5845  15CC  2753  3194         	fcall	PL8	;call to abstracted procedure
  5846  15CE  26BF  3194         	fcall	___wmul
  5847  15D0  27C1  3194         	fcall	PL50	;call to abstracted procedure
  5848  15D2  1803               	skipnc
  5849  15D3  0AC0               	incf	(led_pro_process@et+1)^(0+128),f
  5850                           
  5851                           ;app_led.c: 634: uint16_t duration = 1440u - st + et;
  5852  15D4  27E1  3194         	fcall	PL92	;call to abstracted procedure
  5853  15D6  30A0               	movlw	160
  5854  15D7  07B4               	addwf	led_pro_process@duration^(0+128),f
  5855  15D8  3005               	movlw	5
  5856  15D9  3DB5               	addwfc	(led_pro_process@duration+1)^(0+128),f
  5857                           
  5858                           ;app_led.c: 635: uint32_t dt;
  5859                           ;app_led.c: 636: bool flag = 0;
  5860  15DA  01B3               	clrf	led_pro_process@flag^(0+128)
  5861                           
  5862                           ;app_led.c: 637: if(ct >= st)
  5863  15DB  0847               	movf	(led_pro_process@st+1)^(0+128),w
  5864  15DC  0020               	movlb	0	; select bank0
  5865  15DD  024B               	subwf	led_pro_process@ct+1,w
  5866  15DE  1D03               	skipz
  5867  15DF  2DE2               	goto	u6345
  5868  15E0  27F6  3194         	fcall	PL156	;call to abstracted procedure
  5869  15E2                     u6345:	
  5870  15E2  1C03               	skipc
  5871  15E3  2DFB               	goto	l6431
  5872  15E4                     l6427:	
  5873                           
  5874                           ;app_led.c: 638: {
  5875                           ;app_led.c: 639: dt = (ct-st)*60u + sec;
  5876  15E4  0020               	movlb	0	; select bank0
  5877  15E5  27D6  3194         	fcall	PL66	;call to abstracted procedure
  5878  15E7  26BF  3194         	fcall	___wmul
  5879  15E9  278D  3194         	fcall	PL34	;call to abstracted procedure
  5880  15EB  26BF  3194         	fcall	___wmul
  5881  15ED  0822               	movf	?___wmul,w
  5882  15EE  074F               	addwf	??_led_pro_process+2,w
  5883  15EF  0021               	movlb	1	; select bank1
  5884  15F0  00AF               	movwf	led_pro_process@dt^(0+128)
  5885  15F1  0020               	movlb	0	; select bank0
  5886  15F2  0823               	movf	?___wmul+1,w
  5887  15F3  3D50               	addwfc	??_led_pro_process+3,w
  5888  15F4                     L2:	
  5889  15F4  0021               	movlb	1	; select bank1
  5890  15F5  00B0               	movwf	(led_pro_process@dt+1)^(0+128)
  5891  15F6  01B1               	clrf	(led_pro_process@dt+2)^(0+128)
  5892  15F7  01B2               	clrf	(led_pro_process@dt+3)^(0+128)
  5893                           
  5894                           ;app_led.c: 640: flag = 1;
  5895  15F8  01B3               	clrf	led_pro_process@flag^(0+128)
  5896  15F9  0AB3               	incf	led_pro_process@flag^(0+128),f
  5897                           
  5898                           ;app_led.c: 641: }
  5899  15FA  2E6D               	goto	l6471
  5900  15FB                     l6431:	
  5901                           
  5902                           ;app_led.c: 642: else if(ct < et)
  5903  15FB  0021               	movlb	1	; select bank1
  5904  15FC  0840               	movf	(led_pro_process@et+1)^(0+128),w
  5905  15FD  0020               	movlb	0	; select bank0
  5906  15FE  024B               	subwf	led_pro_process@ct+1,w
  5907  15FF  1D03               	skipz
  5908  1600  2E03               	goto	u6355
  5909  1601  27FB  3194         	fcall	PL158	;call to abstracted procedure
  5910  1603                     u6355:	
  5911  1603  1803               	skipnc
  5912  1604  2E1B               	goto	l6437
  5913                           
  5914                           ;app_led.c: 643: {
  5915                           ;app_led.c: 644: dt = (1440u-st+ct)*60u + sec;
  5916  1605  27D6  3194         	fcall	PL66	;call to abstracted procedure
  5917  1607  26BF  3194         	fcall	___wmul
  5918  1609  278D  3194         	fcall	PL34	;call to abstracted procedure
  5919  160B  26BF  3194         	fcall	___wmul
  5920  160D  0822               	movf	?___wmul,w
  5921  160E  074F               	addwf	??_led_pro_process+2,w
  5922  160F  00D1               	movwf	??_led_pro_process+4
  5923  1610  0823               	movf	?___wmul+1,w
  5924  1611  3D50               	addwfc	??_led_pro_process+3,w
  5925  1612  00D2               	movwf	??_led_pro_process+5
  5926  1613  0851               	movf	??_led_pro_process+4,w
  5927  1614  3E80               	addlw	128
  5928  1615  0021               	movlb	1	; select bank1
  5929  1616  00AF               	movwf	led_pro_process@dt^(0+128)
  5930  1617  3051               	movlw	81
  5931  1618  0020               	movlb	0	; select bank0
  5932  1619  3D52               	addwfc	??_led_pro_process+5,w
  5933  161A  2DF4               	goto	L2
  5934  161B                     l6437:	
  5935                           
  5936                           ;app_led.c: 647: else
  5937                           ;app_led.c: 648: {
  5938                           ;app_led.c: 649: for(i = 0; i < point_count-1; i++)
  5939  161B  0021               	movlb	1	; select bank1
  5940  161C  01C8               	clrf	led_pro_process@i^(0+128)
  5941  161D                     l6469:	
  5942  161D  083E               	movf	led_pro_process@point_count^(0+128),w
  5943  161E  3EFF               	addlw	255
  5944  161F  0020               	movlb	0	; select bank0
  5945  1620  00CD               	movwf	??_led_pro_process
  5946  1621  30FF               	movlw	255
  5947  1622  1803               	skipnc
  5948  1623  3000               	movlw	0
  5949  1624  00CE               	movwf	??_led_pro_process+1
  5950  1625  3A80               	xorlw	128
  5951  1626  3C80               	sublw	128
  5952  1627  1D03               	skipz
  5953  1628  2E2C               	goto	u6385
  5954  1629  084D               	movf	??_led_pro_process,w
  5955  162A  0021               	movlb	1	; select bank1
  5956  162B  0248               	subwf	led_pro_process@i^(0+128),w
  5957  162C                     u6385:	
  5958  162C  1803               	btfsc	3,0
  5959  162D  2E6D               	goto	l6471
  5960                           
  5961                           ;app_led.c: 650: {
  5962                           ;app_led.c: 651: start = index[i];
  5963  162E  0021               	movlb	1	; select bank1
  5964  162F  0848               	movf	led_pro_process@i^(0+128),w
  5965  1630  27EA  3194         	fcall	PL116	;call to abstracted procedure
  5966                           
  5967                           ;app_led.c: 652: end = index[i+1];
  5968  1632  0848               	movf	led_pro_process@i^(0+128),w
  5969  1633  3E01               	addlw	1
  5970  1634  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  5971  1635  0086               	movwf	6
  5972  1636  0801               	movf	1,w
  5973                           
  5974                           ;app_led.c: 653: sp = &m_led_para.ble_para.pro_para.points[start];
  5975  1637  27AA  3194         	fcall	PL42	;call to abstracted procedure
  5976  1639  26BF  3194         	fcall	___wmul
  5977  163B  2770  3194         	fcall	PL18	;call to abstracted procedure
  5978                           
  5979                           ;app_led.c: 654: ep = &m_led_para.ble_para.pro_para.points[end];
  5980  163D  2779  3194         	fcall	PL30	;call to abstracted procedure
  5981  163F  26BF  3194         	fcall	___wmul
  5982  1641  2770  3194         	fcall	PL18	;call to abstracted procedure
  5983                           
  5984                           ;app_led.c: 655: st = sp->hour*60u + sp->minuite;
  5985  1643  27A0  3194         	fcall	PL38	;call to abstracted procedure
  5986  1645  2753  3194         	fcall	PL8	;call to abstracted procedure
  5987  1647  26BF  3194         	fcall	___wmul
  5988                           
  5989                           ;app_led.c: 656: et = ep->hour*60u + ep->minuite;
  5990  1649  275B  3194         	fcall	PL16	;call to abstracted procedure
  5991  164B  2753  3194         	fcall	PL8	;call to abstracted procedure
  5992  164D  26BF  3194         	fcall	___wmul
  5993  164F  27C1  3194         	fcall	PL50	;call to abstracted procedure
  5994  1651  1803               	skipnc
  5995  1652  0AC0               	incf	(led_pro_process@et+1)^(0+128),f
  5996                           
  5997                           ;app_led.c: 657: if(ct >= st && ct < et)
  5998  1653  0847               	movf	(led_pro_process@st+1)^(0+128),w
  5999  1654  0020               	movlb	0	; select bank0
  6000  1655  024B               	subwf	led_pro_process@ct+1,w
  6001  1656  1D03               	skipz
  6002  1657  2E5A               	goto	u6365
  6003  1658  27F6  3194         	fcall	PL156	;call to abstracted procedure
  6004  165A                     u6365:	
  6005  165A  1C03               	skipc
  6006  165B  2E6A               	goto	l6467
  6007  165C  0021               	movlb	1	; select bank1
  6008  165D  0840               	movf	(led_pro_process@et+1)^(0+128),w
  6009  165E  0020               	movlb	0	; select bank0
  6010  165F  024B               	subwf	led_pro_process@ct+1,w
  6011  1660  1D03               	skipz
  6012  1661  2E64               	goto	u6375
  6013  1662  27FB  3194         	fcall	PL158	;call to abstracted procedure
  6014  1664                     u6375:	
  6015  1664  1803               	skipnc
  6016  1665  2E6A               	goto	l6467
  6017                           
  6018                           ;app_led.c: 658: {
  6019                           ;app_led.c: 659: duration = et - st;
  6020  1666  0021               	movlb	1	; select bank1
  6021  1667  27E1  3194         	fcall	PL92	;call to abstracted procedure
  6022  1669  2DE4               	goto	l6427
  6023  166A                     l6467:	
  6024  166A  0021               	movlb	1	; select bank1
  6025  166B  0AC8               	incf	led_pro_process@i^(0+128),f
  6026  166C  2E1D               	goto	l6469
  6027  166D                     l6471:	
  6028                           
  6029                           ;app_led.c: 663: }
  6030                           ;app_led.c: 664: }
  6031                           ;app_led.c: 665: }
  6032                           ;app_led.c: 666: if(flag)
  6033  166D  0021               	movlb	1	; select bank1
  6034  166E  0833               	movf	led_pro_process@flag^(0+128),w
  6035  166F  1903               	btfsc	3,2
  6036  1670  0008               	return
  6037                           
  6038                           ;app_led.c: 667: {
  6039                           ;app_led.c: 668: for(i = 0; i < 4; i++)
  6040  1671  01C8               	clrf	led_pro_process@i^(0+128)
  6041  1672                     l6479:	
  6042                           
  6043                           ;app_led.c: 669: {
  6044                           ;app_led.c: 670: target_bright[i] = led_calc_bright(sp->bright[i], ep->bright[i], durati
      +                          on, dt);
  6045  1672  0848               	movf	led_pro_process@i^(0+128),w
  6046  1673  0020               	movlb	0	; select bank0
  6047  1674  00CD               	movwf	??_led_pro_process
  6048  1675  01CE               	clrf	??_led_pro_process+1
  6049  1676  0021               	movlb	1	; select bank1
  6050  1677  0743               	addwf	led_pro_process@ep^(0+128),w
  6051  1678  0020               	movlb	0	; select bank0
  6052  1679  00CF               	movwf	??_led_pro_process+2
  6053  167A  084E               	movf	??_led_pro_process+1,w
  6054  167B  0021               	movlb	1	; select bank1
  6055  167C  3D44               	addwfc	(led_pro_process@ep+1)^(0+128),w
  6056  167D  0020               	movlb	0	; select bank0
  6057  167E  00D0               	movwf	??_led_pro_process+3
  6058  167F  084F               	movf	??_led_pro_process+2,w
  6059  1680  0086               	movwf	6
  6060  1681  0850               	movf	??_led_pro_process+3,w
  6061  1682  0087               	movwf	7
  6062  1683  3142               	addfsr 1,2
  6063  1684  0801               	movf	1,w
  6064  1685  00BB               	movwf	led_calc_bright@ebrt
  6065  1686  0021               	movlb	1	; select bank1
  6066  1687  0835               	movf	(led_pro_process@duration+1)^(0+128),w
  6067  1688  0020               	movlb	0	; select bank0
  6068  1689  00BD               	movwf	led_calc_bright@duration+1
  6069  168A  0021               	movlb	1	; select bank1
  6070  168B  0834               	movf	led_pro_process@duration^(0+128),w
  6071  168C  0020               	movlb	0	; select bank0
  6072  168D  00BC               	movwf	led_calc_bright@duration
  6073  168E  0021               	movlb	1	; select bank1
  6074  168F  0832               	movf	(led_pro_process@dt+3)^(0+128),w
  6075  1690  0020               	movlb	0	; select bank0
  6076  1691  00C1               	movwf	led_calc_bright@dt+3
  6077  1692  0021               	movlb	1	; select bank1
  6078  1693  0831               	movf	(led_pro_process@dt+2)^(0+128),w
  6079  1694  0020               	movlb	0	; select bank0
  6080  1695  00C0               	movwf	led_calc_bright@dt+2
  6081  1696  0021               	movlb	1	; select bank1
  6082  1697  0830               	movf	(led_pro_process@dt+1)^(0+128),w
  6083  1698  0020               	movlb	0	; select bank0
  6084  1699  00BF               	movwf	led_calc_bright@dt+1
  6085  169A  0021               	movlb	1	; select bank1
  6086  169B  082F               	movf	led_pro_process@dt^(0+128),w
  6087  169C  0020               	movlb	0	; select bank0
  6088  169D  00BE               	movwf	led_calc_bright@dt
  6089  169E  0021               	movlb	1	; select bank1
  6090  169F  0848               	movf	led_pro_process@i^(0+128),w
  6091  16A0  0020               	movlb	0	; select bank0
  6092  16A1  00D1               	movwf	??_led_pro_process+4
  6093  16A2  01D2               	clrf	??_led_pro_process+5
  6094  16A3  0021               	movlb	1	; select bank1
  6095  16A4  0741               	addwf	led_pro_process@sp^(0+128),w
  6096  16A5  0020               	movlb	0	; select bank0
  6097  16A6  00D3               	movwf	??_led_pro_process+6
  6098  16A7  0852               	movf	??_led_pro_process+5,w
  6099  16A8  0021               	movlb	1	; select bank1
  6100  16A9  3D42               	addwfc	(led_pro_process@sp+1)^(0+128),w
  6101  16AA  0020               	movlb	0	; select bank0
  6102  16AB  00D4               	movwf	??_led_pro_process+7
  6103  16AC  0853               	movf	??_led_pro_process+6,w
  6104  16AD  0086               	movwf	6
  6105  16AE  0854               	movf	??_led_pro_process+7,w
  6106  16AF  0087               	movwf	7
  6107  16B0  3142               	addfsr 1,2
  6108  16B1  0801               	movf	1,w
  6109  16B2  3193  23C3  3194   	fcall	_led_calc_bright
  6110  16B5  0021               	movlb	1	; select bank1
  6111  16B6  3548               	lslf	led_pro_process@i^(0+128),w
  6112  16B7  3194  247F  3194   	fcall	PL64	;call to abstracted procedure
  6113  16BA  0AC8               	incf	led_pro_process@i^(0+128),f
  6114  16BB  0248               	subwf	led_pro_process@i^(0+128),w
  6115  16BC  1803               	btfsc	3,0
  6116  16BD  0008               	return
  6117  16BE  2E72               	goto	l6479
  6118  16BF                     __end_of_led_pro_process:	
  6119  16BF                     __ptext63:	
  6120 ;; *************** function ___wmul *****************
  6121 ;; Defined at:
  6122 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul16.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  multiplier      2    2[BANK0 ] unsigned int 
  6125 ;;  multiplicand    2    4[BANK0 ] unsigned int 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  product         2    6[BANK0 ] unsigned int 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  2    2[BANK0 ] unsigned int 
  6130 ;; Registers used:
  6131 ;;		wreg, status,2, status,0
  6132 ;; Tracked objects:
  6133 ;;		On entry : 1F/0
  6134 ;;		On exit  : 1F/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6137 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;Total ram usage:        6 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    9
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_ble_decode
  6148 ;;		_led_para_init
  6149 ;;		_led_calc_bright
  6150 ;;		_led_auto_process
  6151 ;;		_led_pro_process
  6152 ;;		_led_second_cb
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           
  6157                           ;psect for function ___wmul
  6158  16BF                     ___wmul:	
  6159                           
  6160                           ;incstack = 0
  6161                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6162  16BF  01A6               	clrf	___wmul@product
  6163  16C0  01A7               	clrf	___wmul@product+1
  6164  16C1                     l5843:	
  6165  16C1  1C22               	btfss	___wmul@multiplier,0
  6166  16C2  2EC7               	goto	l5847
  6167  16C3  0824               	movf	___wmul@multiplicand,w
  6168  16C4  07A6               	addwf	___wmul@product,f
  6169  16C5  0825               	movf	___wmul@multiplicand+1,w
  6170  16C6  3DA7               	addwfc	___wmul@product+1,f
  6171  16C7                     l5847:	
  6172  16C7  35A4               	lslf	___wmul@multiplicand,f
  6173  16C8  0DA5               	rlf	___wmul@multiplicand+1,f
  6174  16C9  36A3               	lsrf	___wmul@multiplier+1,f
  6175  16CA  0CA2               	rrf	___wmul@multiplier,f
  6176  16CB  0822               	movf	___wmul@multiplier,w
  6177  16CC  0423               	iorwf	___wmul@multiplier+1,w
  6178  16CD  1D03               	btfss	3,2
  6179  16CE  2EC1               	goto	l5843
  6180  16CF  0827               	movf	___wmul@product+1,w
  6181  16D0  00A3               	movwf	?___wmul+1
  6182  16D1  0826               	movf	___wmul@product,w
  6183  16D2  00A2               	movwf	?___wmul
  6184  16D3  0008               	return
  6185  16D4                     __end_of___wmul:	
  6186  16D4                     __ptext12:	
  6187 ;; *************** function _led_find_device *****************
  6188 ;; Defined at:
  6189 ;;		line 1869 in file "src/app_led.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;		None
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;		None
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  1    wreg      void 
  6196 ;; Registers used:
  6197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6198 ;; Tracked objects:
  6199 ;;		On entry : 1F/0
  6200 ;;		On exit  : 1F/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6207 ;;Total ram usage:        0 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:   10
  6210 ;; This function calls:
  6211 ;;		_led_turnoff
  6212 ;;		_led_turnon_max
  6213 ;; This function is called by:
  6214 ;;		_led_second_cb
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           
  6219                           ;psect for function _led_find_device
  6220  16D4                     _led_find_device:	
  6221                           
  6222                           ;app_led.c: 1871: static bool toggle = 0;
  6223                           ;app_led.c: 1872: if(toggle)
  6224                           
  6225                           ;incstack = 0
  6226                           ; Regs used in _led_find_device: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6227  16D4  0862               	movf	led_find_device@toggle,w
  6228  16D5  1903               	btfsc	3,2
  6229  16D6  2EE1               	goto	l877
  6230                           
  6231                           ;app_led.c: 1873: {
  6232                           ;app_led.c: 1874: toggle = 0;
  6233  16D7  01E2               	clrf	led_find_device@toggle
  6234                           
  6235                           ;app_led.c: 1875: led_turnoff();
  6236  16D8  318E  2638         	fcall	_led_turnoff
  6237                           
  6238                           ;app_led.c: 1876: if(led_run_para.flash_count > 0)
  6239  16DA  085E               	movf	_led_run_para+1,w
  6240  16DB  1D03               	btfss	3,2
  6241                           
  6242                           ;app_led.c: 1877: {
  6243                           ;app_led.c: 1878: led_run_para.flash_count--;
  6244  16DC  03DE               	decf	_led_run_para+1,f
  6245                           
  6246                           ;app_led.c: 1879: }
  6247                           ;app_led.c: 1880: if(led_run_para.flash_count == 0)
  6248  16DD  085E               	movf	_led_run_para+1,w
  6249  16DE  1903               	btfsc	3,2
  6250                           
  6251                           ;app_led.c: 1881: {
  6252                           ;app_led.c: 1882: led_run_para.mFind = 0;
  6253  16DF  105D               	bcf	_led_run_para,0
  6254  16E0  0008               	return
  6255  16E1                     l877:	
  6256                           
  6257                           ;app_led.c: 1885: else
  6258                           ;app_led.c: 1886: {
  6259                           ;app_led.c: 1887: toggle = 1;
  6260  16E1  01E2               	clrf	led_find_device@toggle
  6261  16E2  0AE2               	incf	led_find_device@toggle,f
  6262                           
  6263                           ;app_led.c: 1888: led_turnon_max();
  6264  16E3  2EF2               	ljmp	l5943
  6265  16E4                     __end_of_led_find_device:	
  6266  16E4                     __ptext11:	
  6267 ;; *************** function _led_preview *****************
  6268 ;; Defined at:
  6269 ;;		line 1906 in file "src/app_led.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;		None
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;		None
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  1    wreg      void 
  6276 ;; Registers used:
  6277 ;;		wreg, status,2, status,0
  6278 ;; Tracked objects:
  6279 ;;		On entry : 1F/0
  6280 ;;		On exit  : 1F/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;Total ram usage:        0 bytes
  6288 ;; Hardware stack levels used:    1
  6289 ;; Hardware stack levels required when called:    9
  6290 ;; This function calls:
  6291 ;;		Nothing
  6292 ;; This function is called by:
  6293 ;;		_led_second_cb
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           
  6298                           ;psect for function _led_preview
  6299  16E4                     _led_preview:	
  6300                           
  6301                           ;app_led.c: 1908: if(led_run_para.prev_count > 0)
  6302                           
  6303                           ;incstack = 0
  6304                           ; Regs used in _led_preview: [wreg+status,2+status,0]
  6305  16E4  085F               	movf	_led_run_para+2,w
  6306  16E5  1D03               	btfss	3,2
  6307                           
  6308                           ;app_led.c: 1909: {
  6309                           ;app_led.c: 1910: led_run_para.prev_count--;
  6310  16E6  03DF               	decf	_led_run_para+2,f
  6311                           
  6312                           ;app_led.c: 1911: }
  6313                           ;app_led.c: 1912: if(led_run_para.prev_count == 0)
  6314  16E7  085F               	movf	_led_run_para+2,w
  6315  16E8  1903               	btfsc	3,2
  6316                           
  6317                           ;app_led.c: 1913: {
  6318                           ;app_led.c: 1914: led_run_para.mPrev = 0;
  6319  16E9  10DD               	bcf	_led_run_para,1
  6320  16EA  0008               	return
  6321  16EB                     __end_of_led_preview:	
  6322  16EB                     __ptext6:	
  6323 ;; *************** function _rtc_get_hour *****************
  6324 ;; Defined at:
  6325 ;;		line 140 in file "src/app_rtc.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;		None
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;		None
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  1    wreg      unsigned char 
  6332 ;; Registers used:
  6333 ;;		wreg
  6334 ;; Tracked objects:
  6335 ;;		On entry : 1F/0
  6336 ;;		On exit  : 1F/1
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6343 ;;Total ram usage:        0 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    9
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_led_second_cb
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           
  6354                           ;psect for function _rtc_get_hour
  6355  16EB                     _rtc_get_hour:	
  6356                           
  6357                           ;app_rtc.c: 142: return m_current_time.hour;
  6358                           
  6359                           ;incstack = 0
  6360                           ; Regs used in _rtc_get_hour: [wreg]
  6361  16EB  0021               	movlb	1	; select bank1
  6362  16EC  0863               	movf	(_m_current_time^(0+128)+4),w
  6363  16ED  0008               	return
  6364  16EE                     __end_of_rtc_get_hour:	
  6365  16EE                     __ptext5:	
  6366 ;; *************** function _rtc_get_minute *****************
  6367 ;; Defined at:
  6368 ;;		line 145 in file "src/app_rtc.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;		None
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;		None
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  1    wreg      unsigned char 
  6375 ;; Registers used:
  6376 ;;		wreg
  6377 ;; Tracked objects:
  6378 ;;		On entry : 1F/1
  6379 ;;		On exit  : 1F/1
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;Total ram usage:        0 bytes
  6387 ;; Hardware stack levels used:    1
  6388 ;; Hardware stack levels required when called:    9
  6389 ;; This function calls:
  6390 ;;		Nothing
  6391 ;; This function is called by:
  6392 ;;		_led_second_cb
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           
  6397                           ;psect for function _rtc_get_minute
  6398  16EE                     _rtc_get_minute:	
  6399                           
  6400                           ;app_rtc.c: 147: return m_current_time.minute;
  6401                           
  6402                           ;incstack = 0
  6403                           ; Regs used in _rtc_get_minute: [wreg]
  6404  16EE  0864               	movf	(_m_current_time^(0+128)+5),w
  6405  16EF  0008               	return
  6406  16F0                     __end_of_rtc_get_minute:	
  6407  16F0                     __ptext4:	
  6408 ;; *************** function _rtc_get_second *****************
  6409 ;; Defined at:
  6410 ;;		line 150 in file "src/app_rtc.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;		None
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;		None
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  1    wreg      unsigned char 
  6417 ;; Registers used:
  6418 ;;		wreg
  6419 ;; Tracked objects:
  6420 ;;		On entry : 1F/1
  6421 ;;		On exit  : 1F/1
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;Total ram usage:        0 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:    9
  6431 ;; This function calls:
  6432 ;;		Nothing
  6433 ;; This function is called by:
  6434 ;;		_led_second_cb
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           
  6439                           ;psect for function _rtc_get_second
  6440  16F0                     _rtc_get_second:	
  6441                           
  6442                           ;app_rtc.c: 152: return m_current_time.second;
  6443                           
  6444                           ;incstack = 0
  6445                           ; Regs used in _rtc_get_second: [wreg]
  6446  16F0  0865               	movf	(_m_current_time^(0+128)+6),w
  6447  16F1  0008               	return
  6448  16F2                     __end_of_rtc_get_second:	
  6449  16F2                     __ptext13:	
  6450 ;; *************** function _led_turnon_max *****************
  6451 ;; Defined at:
  6452 ;;		line 692 in file "src/app_led.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;		None
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;  i               1    2[BANK0 ] unsigned char 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      void 
  6459 ;; Registers used:
  6460 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6461 ;; Tracked objects:
  6462 ;;		On entry : 1F/0
  6463 ;;		On exit  : 1F/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6469 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6470 ;;Total ram usage:        1 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:    9
  6473 ;; This function calls:
  6474 ;;		Nothing
  6475 ;; This function is called by:
  6476 ;;		_led_find_device
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           
  6481                           ;psect for function _led_turnon_max
  6482  16F2                     _led_turnon_max:	
  6483  16F2                     l5943:	
  6484                           ;incstack = 0
  6485                           ; Regs used in _led_turnon_max: [wreg+fsr1l+fsr1h+status,2+status,0]
  6486                           
  6487                           
  6488                           ;app_led.c: 694: for(uint8_t i = 0; i < 4; i++)
  6489  16F2  01A2               	clrf	led_turnon_max@i
  6490  16F3                     l5949:	
  6491                           
  6492                           ;app_led.c: 695: {
  6493                           ;app_led.c: 696: target_bright[i] = 1000;
  6494  16F3  3522               	lslf	led_turnon_max@i,w
  6495  16F4  3E55               	addlw	(low (_target_bright| 0))& (0+255)
  6496  16F5  0086               	movwf	6
  6497  16F6  30E8               	movlw	232
  6498  16F7  0187               	clrf	7
  6499  16F8  3FC0               	movwi [0]fsr1
  6500  16F9  3003               	movlw	3
  6501  16FA  3FC1               	movwi [1]fsr1
  6502                           
  6503                           ;app_led.c: 697: current_bright[i] = 1000;
  6504  16FB  3522               	lslf	led_turnon_max@i,w
  6505  16FC  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
  6506  16FD  0086               	movwf	6
  6507  16FE  30E8               	movlw	232
  6508  16FF  3FC0               	movwi [0]fsr1
  6509  1700  3003               	movlw	3
  6510  1701  3FC1               	movwi [1]fsr1
  6511  1702  3004               	movlw	4
  6512  1703  0AA2               	incf	led_turnon_max@i,f
  6513  1704  0222               	subwf	led_turnon_max@i,w
  6514  1705  1803               	btfsc	3,0
  6515  1706  0008               	return
  6516  1707  2EF3               	goto	l5949
  6517  1708                     __end_of_led_turnon_max:	
  6518  1708                     __ptext7:	
  6519 ;; *************** function _led_save_para *****************
  6520 ;; Defined at:
  6521 ;;		line 1926 in file "src/app_led.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;		None
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;		None
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  1    wreg      void 
  6528 ;; Registers used:
  6529 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6530 ;; Tracked objects:
  6531 ;;		On entry : 1F/0
  6532 ;;		On exit  : 1F/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6539 ;;Total ram usage:        0 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; Hardware stack levels required when called:   11
  6542 ;; This function calls:
  6543 ;;		_eeprom_write_buffer
  6544 ;; This function is called by:
  6545 ;;		_led_second_cb
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           
  6550                           ;psect for function _led_save_para
  6551  1708                     _led_save_para:	
  6552  1708                     l6509:	
  6553                           ;incstack = 0
  6554                           ; Regs used in _led_save_para: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6555                           
  6556                           
  6557                           ;app_led.c: 1928: if(led_run_para.save_delay_count > 0)
  6558  1708  0860               	movf	_led_run_para+3,w
  6559  1709  1D03               	btfss	3,2
  6560                           
  6561                           ;app_led.c: 1929: {
  6562                           ;app_led.c: 1930: led_run_para.save_delay_count--;
  6563  170A  03E0               	decf	_led_run_para+3,f
  6564                           
  6565                           ;app_led.c: 1931: }
  6566                           ;app_led.c: 1932: if(led_run_para.save_delay_count == 0)
  6567  170B  0860               	movf	_led_run_para+3,w
  6568  170C  1D03               	btfss	3,2
  6569  170D  0008               	return
  6570                           
  6571                           ;app_led.c: 1933: {
  6572                           ;app_led.c: 1934: m_led_para.save_flag = 0x55;
  6573  170E  318F  2755  3194   	fcall	PL134	;call to abstracted procedure
  6574  1711  3FC0               	movwi [0]fsr1
  6575                           
  6576                           ;app_led.c: 1935: eeprom_write_buffer(0x10, (uint8_t *) &m_led_para, sizeof(m_led_para))
      +                          ;
  6577  1712  307F               	movlw	127
  6578  1713  00A5               	movwf	eeprom_write_buffer@pbuf
  6579  1714  3023               	movlw	35
  6580  1715  00A6               	movwf	eeprom_write_buffer@pbuf+1
  6581  1716  3071               	movlw	113
  6582  1717  00A7               	movwf	eeprom_write_buffer@len
  6583  1718  3010               	movlw	16
  6584  1719  271C               	fcall	_eeprom_write_buffer
  6585                           
  6586                           ;app_led.c: 1936: led_run_para.mSave = 0;
  6587  171A  115D               	bcf	_led_run_para,2
  6588  171B  0008               	return
  6589  171C                     __end_of_led_save_para:	
  6590  171C                     __ptext8:	
  6591 ;; *************** function _eeprom_write_buffer *****************
  6592 ;; Defined at:
  6593 ;;		line 35 in file "src/drv_eeprom.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;  addr            1    wreg     unsigned char 
  6596 ;;  pbuf            2    5[BANK0 ] PTR unsigned char 
  6597 ;;		 -> m_led_para(113), 
  6598 ;;  len             1    7[BANK0 ] unsigned char 
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;  addr            1    8[BANK0 ] unsigned char 
  6601 ;;  i               1    9[BANK0 ] unsigned char 
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  1    wreg      void 
  6604 ;; Registers used:
  6605 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6606 ;; Tracked objects:
  6607 ;;		On entry : 1F/0
  6608 ;;		On exit  : 1F/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6611 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6612 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6614 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6615 ;;Total ram usage:        5 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; Hardware stack levels required when called:   10
  6618 ;; This function calls:
  6619 ;;		_eeprom_write
  6620 ;; This function is called by:
  6621 ;;		_led_save_para
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625                           
  6626                           ;psect for function _eeprom_write_buffer
  6627  171C                     _eeprom_write_buffer:	
  6628                           
  6629                           ;incstack = 0
  6630                           ; Regs used in _eeprom_write_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6631                           ;eeprom_write_buffer@addr stored from wreg
  6632  171C  00A8               	movwf	eeprom_write_buffer@addr
  6633                           
  6634                           ;drv_eeprom.c: 37: for(uint8_t i = len; i > 0; i--)
  6635  171D  0827               	movf	eeprom_write_buffer@len,w
  6636  171E  00A9               	movwf	eeprom_write_buffer@i
  6637  171F                     l5897:	
  6638  171F  0829               	movf	eeprom_write_buffer@i,w
  6639  1720  1903               	btfsc	3,2
  6640  1721  0008               	return
  6641                           
  6642                           ;drv_eeprom.c: 38: {
  6643                           ;drv_eeprom.c: 39: eeprom_write(addr++, *pbuf++);
  6644  1722  0825               	movf	eeprom_write_buffer@pbuf,w
  6645  1723  0086               	movwf	6
  6646  1724  0826               	movf	eeprom_write_buffer@pbuf+1,w
  6647  1725  0087               	movwf	7
  6648  1726  0801               	movf	1,w
  6649  1727  00A2               	movwf	eeprom_write@byte
  6650  1728  0828               	movf	eeprom_write_buffer@addr,w
  6651  1729  2731  3194         	fcall	_eeprom_write
  6652  172B  0AA5               	incf	eeprom_write_buffer@pbuf,f
  6653  172C  1903               	skipnz
  6654  172D  0AA6               	incf	eeprom_write_buffer@pbuf+1,f
  6655  172E  0AA8               	incf	eeprom_write_buffer@addr,f
  6656  172F  03A9               	decf	eeprom_write_buffer@i,f
  6657  1730  2F1F               	goto	l5897
  6658  1731                     __end_of_eeprom_write_buffer:	
  6659  1731                     __ptext9:	
  6660 ;; *************** function _eeprom_write *****************
  6661 ;; Defined at:
  6662 ;;		line 5 in file "src/drv_eeprom.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  addr            1    wreg     unsigned char 
  6665 ;;  byte            1    2[BANK0 ] unsigned char 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;  addr            1    3[BANK0 ] unsigned char 
  6668 ;;  state           1    4[BANK0 ] unsigned char 
  6669 ;; Return value:  Size  Location     Type
  6670 ;;                  1    wreg      void 
  6671 ;; Registers used:
  6672 ;;		wreg, status,2, status,0
  6673 ;; Tracked objects:
  6674 ;;		On entry : 1F/0
  6675 ;;		On exit  : 1F/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6678 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6679 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6681 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6682 ;;Total ram usage:        3 bytes
  6683 ;; Hardware stack levels used:    1
  6684 ;; Hardware stack levels required when called:    9
  6685 ;; This function calls:
  6686 ;;		Nothing
  6687 ;; This function is called by:
  6688 ;;		_eeprom_write_buffer
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           
  6693                           ;psect for function _eeprom_write
  6694  1731                     _eeprom_write:	
  6695                           
  6696                           ;incstack = 0
  6697                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  6698                           ;eeprom_write@addr stored from wreg
  6699  1731  00A3               	movwf	eeprom_write@addr
  6700                           
  6701                           ;drv_eeprom.c: 7: bool state = INTCONbits.GIE;
  6702  1732  3000               	movlw	0
  6703  1733  1B8B               	btfsc	11,7	;volatile
  6704  1734  3001               	movlw	1
  6705  1735  00A4               	movwf	eeprom_write@state
  6706                           
  6707                           ;drv_eeprom.c: 9: NVMADRH = 0x70;
  6708  1736  3070               	movlw	112
  6709  1737  0031               	movlb	17	; select bank17
  6710  1738  0092               	movwf	18	;volatile
  6711                           
  6712                           ;drv_eeprom.c: 10: NVMADRL = addr;
  6713  1739  0020               	movlb	0	; select bank0
  6714  173A  0823               	movf	eeprom_write@addr,w
  6715  173B  0031               	movlb	17	; select bank17
  6716  173C  0091               	movwf	17	;volatile
  6717                           
  6718                           ;drv_eeprom.c: 11: NVMDATL = byte;
  6719  173D  0020               	movlb	0	; select bank0
  6720  173E  0822               	movf	eeprom_write@byte,w
  6721  173F  0031               	movlb	17	; select bank17
  6722  1740  0093               	movwf	19	;volatile
  6723                           
  6724                           ;drv_eeprom.c: 12: NVMCON1bits.NVMREGS = 1;
  6725  1741  1715               	bsf	21,6	;volsfr
  6726                           
  6727                           ;drv_eeprom.c: 13: NVMCON1bits.WREN = 1;
  6728  1742  1515               	bsf	21,2	;volsfr
  6729                           
  6730                           ;drv_eeprom.c: 14: INTCONbits.GIE = 0;
  6731  1743  138B               	bcf	11,7	;volatile
  6732                           
  6733                           ;drv_eeprom.c: 15: NVMCON2 = 0x55;
  6734  1744  3055               	movlw	85
  6735  1745  0096               	movwf	22	;volsfr
  6736                           
  6737                           ;drv_eeprom.c: 16: NVMCON2 = 0xAA;
  6738  1746  30AA               	movlw	170
  6739  1747  0096               	movwf	22	;volsfr
  6740                           
  6741                           ;drv_eeprom.c: 17: NVMCON1bits.WR = 1;
  6742  1748  1495               	bsf	21,1	;volsfr
  6743  1749                     l133:	
  6744                           ;drv_eeprom.c: 18: while(NVMCON1bits.WR);
  6745                           
  6746  1749  1895               	btfsc	21,1	;volsfr
  6747  174A  2F49               	goto	l133
  6748                           
  6749                           ;drv_eeprom.c: 19: NVMCON1bits.WREN = 0;
  6750  174B  1115               	bcf	21,2	;volsfr
  6751                           
  6752                           ;drv_eeprom.c: 21: INTCONbits.GIE = state;
  6753  174C  0020               	movlb	0	; select bank0
  6754  174D  0C24               	rrf	eeprom_write@state,w
  6755  174E  1C03               	skipc
  6756  174F  138B               	bcf	11,7	;volatile
  6757  1750  1803               	skipnc
  6758  1751  178B               	bsf	11,7	;volatile
  6759  1752  0008               	return
  6760  1753                     __end_of_eeprom_write:	
  6761  1753                     PL8:	
  6762  1753  0801               	movf	1,w
  6763  1754  0020               	movlb	0	; select bank0
  6764  1755  00A2               	movwf	___wmul@multiplier
  6765  1756  303C               	movlw	60
  6766  1757  01A3               	clrf	___wmul@multiplier+1
  6767  1758  00A4               	movwf	___wmul@multiplicand
  6768  1759  01A5               	clrf	___wmul@multiplicand+1
  6769  175A  0008               	return
  6770  175B                     __end_ofPL8:	
  6771  175B                     PL16:	
  6772  175B  0823               	movf	?___wmul+1,w
  6773  175C  0021               	movlb	1	; select bank1
  6774  175D  00C7               	movwf	(led_pro_process@st+1)^(0+128)
  6775  175E  0020               	movlb	0	; select bank0
  6776  175F  0822               	movf	?___wmul,w
  6777  1760  0021               	movlb	1	; select bank1
  6778  1761  00C6               	movwf	led_pro_process@st^(0+128)
  6779  1762  0841               	movf	led_pro_process@sp^(0+128),w
  6780  1763  0086               	movwf	6
  6781  1764  0842               	movf	(led_pro_process@sp+1)^(0+128),w
  6782  1765  0087               	movwf	7
  6783  1766  3141               	addfsr 1,1
  6784  1767  0801               	movf	1,w
  6785  1768  07C6               	addwf	led_pro_process@st^(0+128),f
  6786  1769  1803               	skipnc
  6787  176A  0AC7               	incf	(led_pro_process@st+1)^(0+128),f
  6788  176B  0843               	movf	led_pro_process@ep^(0+128),w
  6789  176C  0086               	movwf	6
  6790  176D  0844               	movf	(led_pro_process@ep+1)^(0+128),w
  6791  176E  0087               	movwf	7
  6792  176F  0008               	return
  6793  1770                     __end_ofPL16:	
  6794  1770                     PL18:	
  6795  1770  0822               	movf	?___wmul,w
  6796  1771  3E01               	addlw	1
  6797  1772  00CD               	movwf	??_led_pro_process
  6798  1773  3000               	movlw	0
  6799  1774  3D23               	addwfc	?___wmul+1,w
  6800  1775  00CE               	movwf	??_led_pro_process+1
  6801  1776  084D               	movf	??_led_pro_process,w
  6802  1777  0021               	movlb	1	; select bank1
  6803  1778  0008               	return
  6804  1779                     __end_ofPL18:	
  6805  1779                     PL30:	
  6806  1779  07C1               	addwf	led_pro_process@sp^(0+128),f
  6807  177A  0020               	movlb	0	; select bank0
  6808  177B  084E               	movf	??_led_pro_process+1,w
  6809  177C  0021               	movlb	1	; select bank1
  6810  177D  3DC2               	addwfc	(led_pro_process@sp+1)^(0+128),f
  6811  177E  3023               	movlw	35
  6812  177F  00C4               	movwf	(led_pro_process@ep+1)^(0+128)
  6813  1780  30B3               	movlw	179
  6814  1781  00C3               	movwf	led_pro_process@ep^(0+128)
  6815  1782  083D               	movf	(led_pro_process@end+1)^(0+128),w
  6816  1783  0020               	movlb	0	; select bank0
  6817  1784  00A3               	movwf	___wmul@multiplier+1
  6818  1785  0021               	movlb	1	; select bank1
  6819  1786  083C               	movf	led_pro_process@end^(0+128),w
  6820  1787  0020               	movlb	0	; select bank0
  6821  1788  00A2               	movwf	___wmul@multiplier
  6822  1789  3006               	movlw	6
  6823  178A  00A4               	movwf	___wmul@multiplicand
  6824  178B  01A5               	clrf	___wmul@multiplicand+1
  6825  178C  0008               	return
  6826  178D                     __end_ofPL30:	
  6827  178D                     PL34:	
  6828  178D  084D               	movf	??_led_pro_process,w
  6829  178E  0722               	addwf	?___wmul,w
  6830  178F  00CF               	movwf	??_led_pro_process+2
  6831  1790  084E               	movf	??_led_pro_process+1,w
  6832  1791  3D23               	addwfc	?___wmul+1,w
  6833  1792  00D0               	movwf	??_led_pro_process+3
  6834  1793  0021               	movlb	1	; select bank1
  6835  1794  0847               	movf	(led_pro_process@st+1)^(0+128),w
  6836  1795  0020               	movlb	0	; select bank0
  6837  1796  00A3               	movwf	___wmul@multiplier+1
  6838  1797  0021               	movlb	1	; select bank1
  6839  1798  0846               	movf	led_pro_process@st^(0+128),w
  6840  1799  0020               	movlb	0	; select bank0
  6841  179A  00A2               	movwf	___wmul@multiplier
  6842  179B  30C4               	movlw	196
  6843  179C  00A4               	movwf	___wmul@multiplicand
  6844  179D  30FF               	movlw	255
  6845  179E  00A5               	movwf	___wmul@multiplicand+1
  6846  179F  0008               	return
  6847  17A0                     __end_ofPL34:	
  6848  17A0                     PL38:	
  6849  17A0  07C3               	addwf	led_pro_process@ep^(0+128),f
  6850  17A1  0020               	movlb	0	; select bank0
  6851  17A2  084E               	movf	??_led_pro_process+1,w
  6852  17A3  0021               	movlb	1	; select bank1
  6853  17A4  3DC4               	addwfc	(led_pro_process@ep+1)^(0+128),f
  6854  17A5  0841               	movf	led_pro_process@sp^(0+128),w
  6855  17A6  0086               	movwf	6
  6856  17A7  0842               	movf	(led_pro_process@sp+1)^(0+128),w
  6857  17A8  0087               	movwf	7
  6858  17A9  0008               	return
  6859  17AA                     __end_ofPL38:	
  6860  17AA                     PL42:	
  6861  17AA  00BC               	movwf	led_pro_process@end^(0+128)
  6862  17AB  3023               	movlw	35
  6863  17AC  01BD               	clrf	(led_pro_process@end+1)^(0+128)
  6864  17AD  00C2               	movwf	(led_pro_process@sp+1)^(0+128)
  6865  17AE  30B3               	movlw	179
  6866  17AF  00C1               	movwf	led_pro_process@sp^(0+128)
  6867  17B0  083B               	movf	(led_pro_process@start+1)^(0+128),w
  6868  17B1  0020               	movlb	0	; select bank0
  6869  17B2  00A3               	movwf	___wmul@multiplier+1
  6870  17B3  0021               	movlb	1	; select bank1
  6871  17B4  083A               	movf	led_pro_process@start^(0+128),w
  6872  17B5  0020               	movlb	0	; select bank0
  6873  17B6  00A2               	movwf	___wmul@multiplier
  6874  17B7  3006               	movlw	6
  6875  17B8  00A4               	movwf	___wmul@multiplicand
  6876  17B9  01A5               	clrf	___wmul@multiplicand+1
  6877  17BA  0008               	return
  6878  17BB                     __end_ofPL42:	
  6879  17BB                     PL44:	
  6880  17BB  00A2               	movwf	___wmul@multiplier
  6881  17BC  3006               	movlw	6
  6882  17BD  01A3               	clrf	___wmul@multiplier+1
  6883  17BE  00A4               	movwf	___wmul@multiplicand
  6884  17BF  01A5               	clrf	___wmul@multiplicand+1
  6885  17C0  0008               	return
  6886  17C1                     __end_ofPL44:	
  6887  17C1                     PL50:	
  6888  17C1  0823               	movf	?___wmul+1,w
  6889  17C2  0021               	movlb	1	; select bank1
  6890  17C3  00C0               	movwf	(led_pro_process@et+1)^(0+128)
  6891  17C4  0020               	movlb	0	; select bank0
  6892  17C5  0822               	movf	?___wmul,w
  6893  17C6  0021               	movlb	1	; select bank1
  6894  17C7  00BF               	movwf	led_pro_process@et^(0+128)
  6895  17C8  0843               	movf	led_pro_process@ep^(0+128),w
  6896  17C9  0086               	movwf	6
  6897  17CA  0844               	movf	(led_pro_process@ep+1)^(0+128),w
  6898  17CB  0087               	movwf	7
  6899  17CC  3141               	addfsr 1,1
  6900  17CD  0801               	movf	1,w
  6901  17CE  07BF               	addwf	led_pro_process@et^(0+128),f
  6902  17CF  0008               	return
  6903  17D0                     __end_ofPL50:	
  6904  17D0                     PL62:	
  6905  17D0  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  6906  17D1  0086               	movwf	6
  6907  17D2  0187               	clrf	7
  6908  17D3  0801               	movf	1,w
  6909  17D4  0020               	movlb	0	; select bank0
  6910  17D5  0008               	return
  6911  17D6                     __end_ofPL62:	
  6912  17D6                     PL66:	
  6913  17D6  084C               	movf	led_pro_process@sec,w
  6914  17D7  00CD               	movwf	??_led_pro_process
  6915  17D8  01CE               	clrf	??_led_pro_process+1
  6916  17D9  084B               	movf	led_pro_process@ct+1,w
  6917  17DA  00A3               	movwf	___wmul@multiplier+1
  6918  17DB  084A               	movf	led_pro_process@ct,w
  6919  17DC  00A2               	movwf	___wmul@multiplier
  6920  17DD  303C               	movlw	60
  6921  17DE  00A4               	movwf	___wmul@multiplicand
  6922  17DF  01A5               	clrf	___wmul@multiplicand+1
  6923  17E0  0008               	return
  6924  17E1                     __end_ofPL66:	
  6925  17E1                     PL92:	
  6926  17E1  0840               	movf	(led_pro_process@et+1)^(0+128),w
  6927  17E2  00B5               	movwf	(led_pro_process@duration+1)^(0+128)
  6928  17E3  083F               	movf	led_pro_process@et^(0+128),w
  6929  17E4  00B4               	movwf	led_pro_process@duration^(0+128)
  6930  17E5  0846               	movf	led_pro_process@st^(0+128),w
  6931  17E6  02B4               	subwf	led_pro_process@duration^(0+128),f
  6932  17E7  0847               	movf	(led_pro_process@st+1)^(0+128),w
  6933  17E8  3BB5               	subwfb	(led_pro_process@duration+1)^(0+128),f
  6934  17E9  0008               	return
  6935  17EA                     __end_ofPL92:	
  6936  17EA                     PL116:	
  6937  17EA  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  6938  17EB  0086               	movwf	6
  6939  17EC  0187               	clrf	7
  6940  17ED  0801               	movf	1,w
  6941  17EE  00BA               	movwf	led_pro_process@start^(0+128)
  6942  17EF  01BB               	clrf	(led_pro_process@start+1)^(0+128)
  6943  17F0  0008               	return
  6944  17F1                     __end_ofPL116:	
  6945  17F1                     PL148:	
  6946  17F1  30B3               	movlw	179
  6947  17F2  0086               	movwf	6
  6948  17F3  3023               	movlw	35
  6949  17F4  0087               	movwf	7
  6950  17F5  0008               	return
  6951  17F6                     __end_ofPL148:	
  6952  17F6                     PL156:	
  6953  17F6  0021               	movlb	1	; select bank1
  6954  17F7  0846               	movf	led_pro_process@st^(0+128),w
  6955  17F8  0020               	movlb	0	; select bank0
  6956  17F9  024A               	subwf	led_pro_process@ct,w
  6957  17FA  0008               	return
  6958  17FB                     __end_ofPL156:	
  6959  17FB                     PL158:	
  6960  17FB  0021               	movlb	1	; select bank1
  6961  17FC  083F               	movf	led_pro_process@et^(0+128),w
  6962  17FD  0020               	movlb	0	; select bank0
  6963  17FE  024A               	subwf	led_pro_process@ct,w
  6964  17FF  0008               	return
  6965  1800                     __end_ofPL158:	
  6966                           
  6967                           	psect	text14
  6968  11C7                     __ptext14:	
  6969 ;; *************** function _led_auto_process *****************
  6970 ;; Defined at:
  6971 ;;		line 514 in file "src/app_led.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  ct              2   42[BANK0 ] unsigned int 
  6974 ;;  sec             1   44[BANK0 ] unsigned char 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  val            24    0[BANK1 ] unsigned char [4][6]
  6977 ;;  tr             12   24[BANK1 ] unsigned int [6]
  6978 ;;  dt              4   39[BANK1 ] unsigned long 
  6979 ;;  p               2   49[BANK1 ] PTR struct .
  6980 ;;		 -> m_led_para.ble_para.auto_para(19), m_led_para.ble_para(107), 
  6981 ;;  st              2   47[BANK1 ] unsigned int 
  6982 ;;  et              2   44[BANK1 ] unsigned int 
  6983 ;;  duration        2   36[BANK1 ] unsigned int 
  6984 ;;  i               1   51[BANK1 ] unsigned char 
  6985 ;;  k               1   46[BANK1 ] unsigned char 
  6986 ;;  count           1   43[BANK1 ] unsigned char 
  6987 ;;  j               1   38[BANK1 ] unsigned char 
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      void 
  6990 ;; Registers used:
  6991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6992 ;; Tracked objects:
  6993 ;;		On entry : 1F/0
  6994 ;;		On exit  : 1F/1
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6997 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;      Totals:         0       9      52       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;Total ram usage:       61 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:   11
  7004 ;; This function calls:
  7005 ;;		___awmod
  7006 ;;		___lmul
  7007 ;;		___wmul
  7008 ;;		_led_calc_bright
  7009 ;; This function is called by:
  7010 ;;		_led_second_cb
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           
  7015                           ;psect for function _led_auto_process
  7016  11C7                     _led_auto_process:	
  7017                           
  7018                           ;app_led.c: 516: uint8_t i, j, k;
  7019                           ;app_led.c: 517: uint16_t st;
  7020                           ;app_led.c: 518: uint16_t et;
  7021                           ;app_led.c: 519: uint16_t duration;
  7022                           ;app_led.c: 520: uint32_t dt;
  7023                           ;app_led.c: 521: uint8_t count = 4;
  7024                           
  7025                           ;incstack = 0
  7026                           ; Regs used in _led_auto_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7027  11C7  3004               	movlw	4
  7028  11C8  0021               	movlb	1	; select bank1
  7029  11C9  00CB               	movwf	led_auto_process@count^(0+128)
  7030                           
  7031                           ;app_led.c: 522: auto_para_t *p = &m_led_para.ble_para.auto_para;
  7032  11CA  3023               	movlw	35
  7033  11CB  00D2               	movwf	(led_auto_process@p+1)^(0+128)
  7034  11CC  3085               	movlw	133
  7035  11CD  00D1               	movwf	led_auto_process@p^(0+128)
  7036  11CE  301B               	movlw	27
  7037  11CF  07D1               	addwf	led_auto_process@p^(0+128),f
  7038  11D0  1803               	skipnc
  7039  11D1  0AD2               	incf	(led_auto_process@p+1)^(0+128),f
  7040                           
  7041                           ;app_led.c: 523: uint16_t tr[6];
  7042                           ;app_led.c: 524: tr[0] = p->sunrise_start_hour * 60u + p->sunrise_start_minute;
  7043  11D2  0851               	movf	led_auto_process@p^(0+128),w
  7044  11D3  0086               	movwf	6
  7045  11D4  0852               	movf	(led_auto_process@p+1)^(0+128),w
  7046  11D5  0087               	movwf	7
  7047  11D6  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
  7048  11D9  3196  26BF  3191   	fcall	___wmul
  7049  11DC  0823               	movf	?___wmul+1,w
  7050  11DD  0021               	movlb	1	; select bank1
  7051  11DE  00B9               	movwf	(led_auto_process@tr+1)^(0+128)
  7052  11DF  0020               	movlb	0	; select bank0
  7053  11E0  0822               	movf	?___wmul,w
  7054  11E1  0021               	movlb	1	; select bank1
  7055  11E2  00B8               	movwf	led_auto_process@tr^(0+128)
  7056  11E3  0851               	movf	led_auto_process@p^(0+128),w
  7057  11E4  0086               	movwf	6
  7058  11E5  0852               	movf	(led_auto_process@p+1)^(0+128),w
  7059  11E6  0087               	movwf	7
  7060  11E7  3141               	addfsr 1,1
  7061  11E8  0801               	movf	1,w
  7062  11E9  07B8               	addwf	led_auto_process@tr^(0+128),f
  7063  11EA  1803               	skipnc
  7064  11EB  0AB9               	incf	(led_auto_process@tr+1)^(0+128),f
  7065                           
  7066                           ;app_led.c: 525: tr[1] = p->sunrise_end_hour * 60u + p->sunrise_end_minute;
  7067  11EC  0851               	movf	led_auto_process@p^(0+128),w
  7068  11ED  0086               	movwf	6
  7069  11EE  0852               	movf	(led_auto_process@p+1)^(0+128),w
  7070  11EF  0087               	movwf	7
  7071  11F0  3143               	addfsr 1,3
  7072  11F1  2461               	fcall	PL26	;call to abstracted procedure
  7073  11F2  3142               	addfsr 1,2
  7074  11F3  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
  7075  11F6  3196  26BF  3191   	fcall	___wmul
  7076  11F9  084D               	movf	??_led_auto_process,w
  7077  11FA  0722               	addwf	?___wmul,w
  7078  11FB  0021               	movlb	1	; select bank1
  7079  11FC  00BA               	movwf	(led_auto_process@tr^(0+128)+2)
  7080  11FD  0020               	movlb	0	; select bank0
  7081  11FE  084E               	movf	??_led_auto_process+1,w
  7082  11FF  3D23               	addwfc	?___wmul+1,w
  7083  1200  0021               	movlb	1	; select bank1
  7084  1201  00BB               	movwf	((led_auto_process@tr+1)^(0+128)+2)
  7085                           
  7086                           ;app_led.c: 526: tr[2] = p->sunset_start_hour * 60u + p->sunset_start_minute;
  7087  1202  0851               	movf	led_auto_process@p^(0+128),w
  7088  1203  0086               	movwf	6
  7089  1204  0852               	movf	(led_auto_process@p+1)^(0+128),w
  7090  1205  0087               	movwf	7
  7091  1206  3149               	addfsr 1,9
  7092  1207  2461               	fcall	PL26	;call to abstracted procedure
  7093  1208  3148               	addfsr 1,8
  7094  1209  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
  7095  120C  3196  26BF  3191   	fcall	___wmul
  7096  120F  084D               	movf	??_led_auto_process,w
  7097  1210  0722               	addwf	?___wmul,w
  7098  1211  0021               	movlb	1	; select bank1
  7099  1212  00BC               	movwf	(led_auto_process@tr^(0+128)+4)
  7100  1213  0020               	movlb	0	; select bank0
  7101  1214  084E               	movf	??_led_auto_process+1,w
  7102  1215  3D23               	addwfc	?___wmul+1,w
  7103  1216  0021               	movlb	1	; select bank1
  7104  1217  00BD               	movwf	((led_auto_process@tr+1)^(0+128)+4)
  7105                           
  7106                           ;app_led.c: 527: tr[3] = p->sunset_end_hour * 60u + p->sunset_end_minute;
  7107  1218  0851               	movf	led_auto_process@p^(0+128),w
  7108  1219  0086               	movwf	6
  7109  121A  0852               	movf	(led_auto_process@p+1)^(0+128),w
  7110  121B  0087               	movwf	7
  7111  121C  314B               	addfsr 1,11
  7112  121D  2461               	fcall	PL26	;call to abstracted procedure
  7113  121E  314A               	addfsr 1,10
  7114  121F  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
  7115  1222  3196  26BF  3191   	fcall	___wmul
  7116  1225  084D               	movf	??_led_auto_process,w
  7117  1226  0722               	addwf	?___wmul,w
  7118  1227  0021               	movlb	1	; select bank1
  7119  1228  00BE               	movwf	(led_auto_process@tr^(0+128)+6)
  7120  1229  0020               	movlb	0	; select bank0
  7121  122A  084E               	movf	??_led_auto_process+1,w
  7122  122B  3D23               	addwfc	?___wmul+1,w
  7123  122C  0021               	movlb	1	; select bank1
  7124  122D  00BF               	movwf	((led_auto_process@tr+1)^(0+128)+6)
  7125                           
  7126                           ;app_led.c: 528: tr[4] = p->turnoff_hour * 60u + p->turnoff_minute;
  7127  122E  0851               	movf	led_auto_process@p^(0+128),w
  7128  122F  0086               	movwf	6
  7129  1230  0852               	movf	(led_auto_process@p+1)^(0+128),w
  7130  1231  0087               	movwf	7
  7131  1232  3152               	addfsr 1,18
  7132  1233  2461               	fcall	PL26	;call to abstracted procedure
  7133  1234  3151               	addfsr 1,17
  7134  1235  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
  7135  1238  3196  26BF  3191   	fcall	___wmul
  7136  123B  084D               	movf	??_led_auto_process,w
  7137  123C  0722               	addwf	?___wmul,w
  7138  123D  0021               	movlb	1	; select bank1
  7139  123E  00C0               	movwf	(led_auto_process@tr^(0+128)+8)
  7140  123F  0020               	movlb	0	; select bank0
  7141  1240  084E               	movf	??_led_auto_process+1,w
  7142  1241  3D23               	addwfc	?___wmul+1,w
  7143  1242  0021               	movlb	1	; select bank1
  7144  1243  00C1               	movwf	((led_auto_process@tr+1)^(0+128)+8)
  7145                           
  7146                           ;app_led.c: 529: tr[5] = tr[4];
  7147  1244  00C3               	movwf	((led_auto_process@tr+1)^(0+128)+10)
  7148  1245  0840               	movf	(led_auto_process@tr^(0+128)+8),w
  7149  1246  00C2               	movwf	(led_auto_process@tr^(0+128)+10)
  7150                           
  7151                           ;app_led.c: 530: uint8_t val[6][4];
  7152                           ;app_led.c: 531: for(i = 0; i < 4; i++)
  7153  1247  01D3               	clrf	led_auto_process@i^(0+128)
  7154                           
  7155                           ;app_led.c: 532: {
  7156                           ;app_led.c: 533: if(p->turnoff_enabled)
  7157  1248  249C  3191         	fcall	PL108	;call to abstracted procedure
  7158  124A                     L7:	
  7159  124A  1903               	btfsc	3,2
  7160  124B  2A52               	goto	l6283
  7161                           
  7162                           ;app_led.c: 534: {
  7163                           ;app_led.c: 535: val[0][i] = 0;
  7164  124C  0853               	movf	led_auto_process@i^(0+128),w
  7165  124D  3EA0               	addlw	(low (led_auto_process@val| 0))& (0+255)
  7166  124E  0086               	movwf	6
  7167  124F  0187               	clrf	7
  7168  1250  0181               	clrf	1
  7169                           
  7170                           ;app_led.c: 536: }
  7171  1251  2A58               	goto	l669
  7172  1252                     l6283:	
  7173                           
  7174                           ;app_led.c: 537: else
  7175                           ;app_led.c: 538: {
  7176                           ;app_led.c: 539: val[0][i] = p->night_bright[i];
  7177  1252  0853               	movf	led_auto_process@i^(0+128),w
  7178  1253  244C  3191         	fcall	PL2	;call to abstracted procedure
  7179  1255  310C               	addfsr 0,12
  7180  1256  0800               	movf	0,w
  7181  1257  0081               	movwf	1
  7182  1258                     l669:	
  7183                           
  7184                           ;app_led.c: 540: }
  7185                           ;app_led.c: 541: val[1][i] = p->day_bright[i];
  7186  1258  0021               	movlb	1	; select bank1
  7187  1259  0853               	movf	led_auto_process@i^(0+128),w
  7188  125A  3E04               	addlw	4
  7189  125B  244C  3191         	fcall	PL2	;call to abstracted procedure
  7190                           
  7191                           ;app_led.c: 542: val[2][i] = p->day_bright[i];
  7192  125D  24A9  3191         	fcall	PL138	;call to abstracted procedure
  7193  125F  3E08               	addlw	8
  7194  1260  244C  3191         	fcall	PL2	;call to abstracted procedure
  7195                           
  7196                           ;app_led.c: 543: val[3][i] = p->night_bright[i];
  7197  1262  24A9  3191         	fcall	PL138	;call to abstracted procedure
  7198  1264  3E0C               	addlw	12
  7199  1265  244C  3191         	fcall	PL2	;call to abstracted procedure
  7200                           
  7201                           ;app_led.c: 544: val[4][i] = p->night_bright[i];
  7202  1267  24A3  3191         	fcall	PL130	;call to abstracted procedure
  7203  1269  3E10               	addlw	16
  7204  126A  244C  3191         	fcall	PL2	;call to abstracted procedure
  7205                           
  7206                           ;app_led.c: 545: val[5][i] = 0;
  7207  126C  24A3  3191         	fcall	PL130	;call to abstracted procedure
  7208  126E  3E14               	addlw	20
  7209  126F  3EA0               	addlw	(low (led_auto_process@val| 0))& (0+255)
  7210  1270  0086               	movwf	6
  7211  1271  3004               	movlw	4
  7212  1272  0187               	clrf	7
  7213  1273  0181               	clrf	1
  7214  1274  0AD3               	incf	led_auto_process@i^(0+128),f
  7215  1275  0253               	subwf	led_auto_process@i^(0+128),w
  7216                           
  7217                           ;app_led.c: 546: }
  7218                           ;app_led.c: 547: if(p->turnoff_enabled)
  7219  1276  249C  3191         	fcall	PL108	;call to abstracted procedure
  7220  1278  1C03               	skipc
  7221  1279  2A4A               	goto	L7
  7222  127A  1903               	btfsc	3,2
  7223  127B  2A7E               	goto	l6295
  7224                           
  7225                           ;app_led.c: 548: {
  7226                           ;app_led.c: 549: count = 6;
  7227  127C  3006               	movlw	6
  7228  127D  00CB               	movwf	led_auto_process@count^(0+128)
  7229  127E                     l6295:	
  7230                           
  7231                           ;app_led.c: 550: }
  7232                           ;app_led.c: 551: for(i = 0; i < count; i++)
  7233  127E  01D3               	clrf	led_auto_process@i^(0+128)
  7234  127F                     l6343:	
  7235  127F  084B               	movf	led_auto_process@count^(0+128),w
  7236  1280  0253               	subwf	led_auto_process@i^(0+128),w
  7237  1281  1803               	btfsc	3,0
  7238  1282  0008               	return
  7239                           
  7240                           ;app_led.c: 552: {
  7241                           ;app_led.c: 553: j = (i + 1) % count;
  7242  1283  0853               	movf	led_auto_process@i^(0+128),w
  7243  1284  0020               	movlb	0	; select bank0
  7244  1285  00A4               	movwf	___awmod@dividend
  7245  1286  01A5               	clrf	___awmod@dividend+1
  7246  1287  0AA4               	incf	___awmod@dividend,f
  7247  1288  1903               	skipnz
  7248  1289  0AA5               	incf	___awmod@dividend+1,f
  7249  128A  0021               	movlb	1	; select bank1
  7250  128B  084B               	movf	led_auto_process@count^(0+128),w
  7251  128C  0020               	movlb	0	; select bank0
  7252  128D  00A2               	movwf	___awmod@divisor
  7253  128E  01A3               	clrf	___awmod@divisor+1
  7254  128F  2365  3191         	fcall	___awmod
  7255  1291  0822               	movf	?___awmod,w
  7256  1292  0021               	movlb	1	; select bank1
  7257  1293  00C6               	movwf	led_auto_process@j^(0+128)
  7258                           
  7259                           ;app_led.c: 554: st = tr[i];
  7260  1294  3553               	lslf	led_auto_process@i^(0+128),w
  7261  1295  3EB8               	addlw	(low (led_auto_process@tr| 0))& (0+255)
  7262  1296  0086               	movwf	6
  7263  1297  0187               	clrf	7
  7264  1298  3F40               	moviw [0]fsr1
  7265  1299  00CF               	movwf	led_auto_process@st^(0+128)
  7266  129A  3F41               	moviw [1]fsr1
  7267  129B  00D0               	movwf	(led_auto_process@st+1)^(0+128)
  7268                           
  7269                           ;app_led.c: 555: et = tr[j];
  7270  129C  3546               	lslf	led_auto_process@j^(0+128),w
  7271  129D  3EB8               	addlw	(low (led_auto_process@tr| 0))& (0+255)
  7272  129E  0086               	movwf	6
  7273  129F  3F40               	moviw [0]fsr1
  7274  12A0  00CC               	movwf	led_auto_process@et^(0+128)
  7275  12A1  3F41               	moviw [1]fsr1
  7276  12A2  00CD               	movwf	(led_auto_process@et+1)^(0+128)
  7277                           
  7278                           ;app_led.c: 556: if(et >= st)
  7279  12A3  0850               	movf	(led_auto_process@st+1)^(0+128),w
  7280  12A4  024D               	subwf	(led_auto_process@et+1)^(0+128),w
  7281  12A5  1D03               	skipz
  7282  12A6  2AA9               	goto	u6195
  7283  12A7  084F               	movf	led_auto_process@st^(0+128),w
  7284  12A8  024C               	subwf	led_auto_process@et^(0+128),w
  7285  12A9                     u6195:	
  7286                           
  7287                           ;app_led.c: 557: {
  7288                           ;app_led.c: 558: if(ct >= st && ct < et)
  7289  12A9  0850               	movf	(led_auto_process@st+1)^(0+128),w
  7290  12AA  1C03               	skipc
  7291  12AB  2ACA               	goto	L8
  7292  12AC  0020               	movlb	0	; select bank0
  7293  12AD  024B               	subwf	led_auto_process@ct+1,w
  7294  12AE  1D03               	skipz
  7295  12AF  2AB2               	goto	u6205
  7296  12B0  24AF  3191         	fcall	PL146	;call to abstracted procedure
  7297  12B2                     u6205:	
  7298  12B2  1C03               	skipc
  7299  12B3  2B62               	goto	l6341
  7300  12B4  0021               	movlb	1	; select bank1
  7301  12B5  084D               	movf	(led_auto_process@et+1)^(0+128),w
  7302  12B6  0020               	movlb	0	; select bank0
  7303  12B7  024B               	subwf	led_auto_process@ct+1,w
  7304  12B8  1D03               	skipz
  7305  12B9  2ABC               	goto	u6215
  7306  12BA  24B4  3191         	fcall	PL152	;call to abstracted procedure
  7307  12BC                     u6215:	
  7308  12BC  1803               	skipnc
  7309  12BD  2B62               	goto	l6341
  7310                           
  7311                           ;app_led.c: 559: {
  7312                           ;app_led.c: 560: duration = et - st;
  7313  12BE  2489  3191         	fcall	PL80	;call to abstracted procedure
  7314  12C0                     l6311:	
  7315                           
  7316                           ;app_led.c: 561: dt = (ct - st) * 60ul + sec;
  7317  12C0  0021               	movlb	1	; select bank1
  7318  12C1  084F               	movf	led_auto_process@st^(0+128),w
  7319  12C2  0020               	movlb	0	; select bank0
  7320  12C3  024A               	subwf	led_auto_process@ct,w
  7321  12C4  00A2               	movwf	___lmul@multiplier
  7322  12C5  0021               	movlb	1	; select bank1
  7323  12C6  0850               	movf	(led_auto_process@st+1)^(0+128),w
  7324  12C7  0020               	movlb	0	; select bank0
  7325  12C8  3B4B               	subwfb	led_auto_process@ct+1,w
  7326  12C9  2AFA               	goto	L6
  7327  12CA                     L8:	
  7328                           ;app_led.c: 568: else
  7329                           ;app_led.c: 569: {
  7330                           ;app_led.c: 570: if(ct >= st || ct < et)
  7331                           
  7332                           ;app_led.c: 562: }
  7333                           
  7334  12CA  0020               	movlb	0	; select bank0
  7335  12CB  024B               	subwf	led_auto_process@ct+1,w
  7336  12CC  1D03               	skipz
  7337  12CD  2AD0               	goto	u6225
  7338  12CE  24AF  3191         	fcall	PL146	;call to abstracted procedure
  7339  12D0                     u6225:	
  7340  12D0  1803               	skipnc
  7341  12D1  2ADC               	goto	l6319
  7342  12D2  0021               	movlb	1	; select bank1
  7343  12D3  084D               	movf	(led_auto_process@et+1)^(0+128),w
  7344  12D4  0020               	movlb	0	; select bank0
  7345  12D5  024B               	subwf	led_auto_process@ct+1,w
  7346  12D6  1D03               	skipz
  7347  12D7  2ADA               	goto	u6235
  7348  12D8  24B4  3191         	fcall	PL152	;call to abstracted procedure
  7349  12DA                     u6235:	
  7350  12DA  1803               	skipnc
  7351  12DB  2B62               	goto	l6341
  7352  12DC                     l6319:	
  7353                           
  7354                           ;app_led.c: 571: {
  7355                           ;app_led.c: 572: duration = 1440u - st + et;
  7356  12DC  2489  3191         	fcall	PL80	;call to abstracted procedure
  7357  12DE  30A0               	movlw	160
  7358  12DF  07C4               	addwf	led_auto_process@duration^(0+128),f
  7359  12E0  3005               	movlw	5
  7360  12E1  3DC5               	addwfc	(led_auto_process@duration+1)^(0+128),f
  7361                           
  7362                           ;app_led.c: 573: if(ct >= st)
  7363  12E2  0850               	movf	(led_auto_process@st+1)^(0+128),w
  7364  12E3  0020               	movlb	0	; select bank0
  7365  12E4  024B               	subwf	led_auto_process@ct+1,w
  7366  12E5  1D03               	skipz
  7367  12E6  2AE9               	goto	u6245
  7368  12E7  24AF  3191         	fcall	PL146	;call to abstracted procedure
  7369  12E9                     u6245:	
  7370  12E9  1803               	btfsc	3,0
  7371  12EA  2AC0               	goto	l6311
  7372                           
  7373                           ;app_led.c: 577: else
  7374                           ;app_led.c: 578: {
  7375                           ;app_led.c: 579: dt = (1440u - st + ct) * 60ul + sec;
  7376  12EB  0021               	movlb	1	; select bank1
  7377  12EC  084F               	movf	led_auto_process@st^(0+128),w
  7378  12ED  0020               	movlb	0	; select bank0
  7379  12EE  024A               	subwf	led_auto_process@ct,w
  7380  12EF  00CD               	movwf	??_led_auto_process
  7381  12F0  0021               	movlb	1	; select bank1
  7382  12F1  0850               	movf	(led_auto_process@st+1)^(0+128),w
  7383  12F2  0020               	movlb	0	; select bank0
  7384  12F3  3B4B               	subwfb	led_auto_process@ct+1,w
  7385  12F4  00CE               	movwf	??_led_auto_process+1
  7386  12F5  084D               	movf	??_led_auto_process,w
  7387  12F6  3EA0               	addlw	160
  7388  12F7  00A2               	movwf	___lmul@multiplier
  7389  12F8  3005               	movlw	5
  7390  12F9  3D4E               	addwfc	??_led_auto_process+1,w
  7391  12FA                     L6:	
  7392  12FA  00A3               	movwf	___lmul@multiplier+1
  7393  12FB  303C               	movlw	60
  7394  12FC  01A4               	clrf	___lmul@multiplier+2
  7395  12FD  01A5               	clrf	___lmul@multiplier+3
  7396  12FE  00A6               	movwf	___lmul@multiplicand
  7397  12FF  01A7               	clrf	___lmul@multiplicand+1
  7398  1300  01A8               	clrf	___lmul@multiplicand+2
  7399  1301  01A9               	clrf	___lmul@multiplicand+3
  7400  1302  239E  3191         	fcall	___lmul
  7401  1304  0825               	movf	?___lmul+3,w
  7402  1305  0021               	movlb	1	; select bank1
  7403  1306  00CA               	movwf	(led_auto_process@dt+3)^(0+128)
  7404  1307  0020               	movlb	0	; select bank0
  7405  1308  0824               	movf	?___lmul+2,w
  7406  1309  0021               	movlb	1	; select bank1
  7407  130A  00C9               	movwf	(led_auto_process@dt+2)^(0+128)
  7408  130B  0020               	movlb	0	; select bank0
  7409  130C  0823               	movf	?___lmul+1,w
  7410  130D  0021               	movlb	1	; select bank1
  7411  130E  00C8               	movwf	(led_auto_process@dt+1)^(0+128)
  7412  130F  0020               	movlb	0	; select bank0
  7413  1310  0822               	movf	?___lmul,w
  7414  1311  0021               	movlb	1	; select bank1
  7415  1312  00C7               	movwf	led_auto_process@dt^(0+128)
  7416  1313  0020               	movlb	0	; select bank0
  7417  1314  084C               	movf	led_auto_process@sec,w
  7418  1315  0021               	movlb	1	; select bank1
  7419  1316  07C7               	addwf	led_auto_process@dt^(0+128),f
  7420  1317  3001               	movlw	1
  7421  1318  1803               	skipnc
  7422  1319  07C8               	addwf	(led_auto_process@dt+1)^(0+128),f
  7423  131A  1803               	skipnc
  7424  131B  07C9               	addwf	(led_auto_process@dt+2)^(0+128),f
  7425  131C  1803               	skipnc
  7426  131D  07CA               	addwf	(led_auto_process@dt+3)^(0+128),f
  7427                           
  7428                           ;app_led.c: 585: }
  7429                           ;app_led.c: 586: }
  7430                           ;app_led.c: 587: for(k = 0; k < 4; k++)
  7431  131E  01CE               	clrf	led_auto_process@k^(0+128)
  7432  131F                     l6335:	
  7433                           
  7434                           ;app_led.c: 588: {
  7435                           ;app_led.c: 589: target_bright[k] = led_calc_bright(val[i][k], val[j][k], duration, dt )
      +                          ;
  7436  131F  0846               	movf	led_auto_process@j^(0+128),w
  7437  1320  0020               	movlb	0	; select bank0
  7438  1321  00CD               	movwf	??_led_auto_process
  7439  1322  30A0               	movlw	(low (led_auto_process@val| 0))& (0+255)
  7440  1323  35CD               	lslf	??_led_auto_process,f
  7441  1324  35CD               	lslf	??_led_auto_process,f
  7442  1325  074D               	addwf	??_led_auto_process,w
  7443  1326  00CE               	movwf	??_led_auto_process+1
  7444  1327  0021               	movlb	1	; select bank1
  7445  1328  084E               	movf	led_auto_process@k^(0+128),w
  7446  1329  0020               	movlb	0	; select bank0
  7447  132A  074E               	addwf	??_led_auto_process+1,w
  7448  132B  00CF               	movwf	??_led_auto_process+2
  7449  132C  0086               	movwf	6
  7450  132D  0187               	clrf	7
  7451  132E  0801               	movf	1,w
  7452  132F  00BB               	movwf	led_calc_bright@ebrt
  7453  1330  0021               	movlb	1	; select bank1
  7454  1331  0845               	movf	(led_auto_process@duration+1)^(0+128),w
  7455  1332  0020               	movlb	0	; select bank0
  7456  1333  00BD               	movwf	led_calc_bright@duration+1
  7457  1334  0021               	movlb	1	; select bank1
  7458  1335  0844               	movf	led_auto_process@duration^(0+128),w
  7459  1336  0020               	movlb	0	; select bank0
  7460  1337  00BC               	movwf	led_calc_bright@duration
  7461  1338  0021               	movlb	1	; select bank1
  7462  1339  084A               	movf	(led_auto_process@dt+3)^(0+128),w
  7463  133A  0020               	movlb	0	; select bank0
  7464  133B  00C1               	movwf	led_calc_bright@dt+3
  7465  133C  0021               	movlb	1	; select bank1
  7466  133D  0849               	movf	(led_auto_process@dt+2)^(0+128),w
  7467  133E  0020               	movlb	0	; select bank0
  7468  133F  00C0               	movwf	led_calc_bright@dt+2
  7469  1340  0021               	movlb	1	; select bank1
  7470  1341  0848               	movf	(led_auto_process@dt+1)^(0+128),w
  7471  1342  0020               	movlb	0	; select bank0
  7472  1343  00BF               	movwf	led_calc_bright@dt+1
  7473  1344  0021               	movlb	1	; select bank1
  7474  1345  0847               	movf	led_auto_process@dt^(0+128),w
  7475  1346  0020               	movlb	0	; select bank0
  7476  1347  00BE               	movwf	led_calc_bright@dt
  7477  1348  0021               	movlb	1	; select bank1
  7478  1349  0853               	movf	led_auto_process@i^(0+128),w
  7479  134A  0020               	movlb	0	; select bank0
  7480  134B  00D0               	movwf	??_led_auto_process+3
  7481  134C  30A0               	movlw	(low (led_auto_process@val| 0))& (0+255)
  7482  134D  35D0               	lslf	??_led_auto_process+3,f
  7483  134E  35D0               	lslf	??_led_auto_process+3,f
  7484  134F  0750               	addwf	??_led_auto_process+3,w
  7485  1350  00D1               	movwf	??_led_auto_process+4
  7486  1351  0021               	movlb	1	; select bank1
  7487  1352  084E               	movf	led_auto_process@k^(0+128),w
  7488  1353  0020               	movlb	0	; select bank0
  7489  1354  0751               	addwf	??_led_auto_process+4,w
  7490  1355  00D2               	movwf	??_led_auto_process+5
  7491  1356  0086               	movwf	6
  7492  1357  0801               	movf	1,w
  7493  1358  23C3  3191         	fcall	_led_calc_bright
  7494  135A  0021               	movlb	1	; select bank1
  7495  135B  354E               	lslf	led_auto_process@k^(0+128),w
  7496  135C  247F  3191         	fcall	PL64	;call to abstracted procedure
  7497  135E  0ACE               	incf	led_auto_process@k^(0+128),f
  7498  135F  024E               	subwf	led_auto_process@k^(0+128),w
  7499  1360  1C03               	skipc
  7500  1361  2B1F               	goto	l6335
  7501  1362                     l6341:	
  7502  1362  0021               	movlb	1	; select bank1
  7503  1363  0AD3               	incf	led_auto_process@i^(0+128),f
  7504  1364  2A7F               	goto	l6343
  7505  1365                     __end_of_led_auto_process:	
  7506  1365                     __ptext18:	
  7507 ;; *************** function ___awmod *****************
  7508 ;; Defined at:
  7509 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\awmod.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;  divisor         2    2[BANK0 ] int 
  7512 ;;  dividend        2    4[BANK0 ] int 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  sign            1    7[BANK0 ] unsigned char 
  7515 ;;  counter         1    6[BANK0 ] unsigned char 
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  2    2[BANK0 ] int 
  7518 ;; Registers used:
  7519 ;;		wreg, status,2, status,0
  7520 ;; Tracked objects:
  7521 ;;		On entry : 1F/0
  7522 ;;		On exit  : 1F/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7525 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7526 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7529 ;;Total ram usage:        6 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; Hardware stack levels required when called:    9
  7532 ;; This function calls:
  7533 ;;		Nothing
  7534 ;; This function is called by:
  7535 ;;		_led_auto_process
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           
  7540                           ;psect for function ___awmod
  7541  1365                     ___awmod:	
  7542                           
  7543                           ;incstack = 0
  7544                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7545  1365  01A7               	clrf	___awmod@sign
  7546  1366  1FA5               	btfss	___awmod@dividend+1,7
  7547  1367  2B6F               	goto	l5963
  7548  1368  09A4               	comf	___awmod@dividend,f
  7549  1369  09A5               	comf	___awmod@dividend+1,f
  7550  136A  0AA4               	incf	___awmod@dividend,f
  7551  136B  1903               	skipnz
  7552  136C  0AA5               	incf	___awmod@dividend+1,f
  7553  136D  01A7               	clrf	___awmod@sign
  7554  136E  0AA7               	incf	___awmod@sign,f
  7555  136F                     l5963:	
  7556  136F  1FA3               	btfss	___awmod@divisor+1,7
  7557  1370  2B76               	goto	l5967
  7558  1371  09A2               	comf	___awmod@divisor,f
  7559  1372  09A3               	comf	___awmod@divisor+1,f
  7560  1373  0AA2               	incf	___awmod@divisor,f
  7561  1374  1903               	skipnz
  7562  1375  0AA3               	incf	___awmod@divisor+1,f
  7563  1376                     l5967:	
  7564  1376  0822               	movf	___awmod@divisor,w
  7565  1377  0423               	iorwf	___awmod@divisor+1,w
  7566  1378  1903               	btfsc	3,2
  7567  1379  2B91               	goto	l5983
  7568  137A  01A6               	clrf	___awmod@counter
  7569  137B                     L10:	
  7570  137B  0AA6               	incf	___awmod@counter,f
  7571  137C  1BA3               	btfsc	___awmod@divisor+1,7
  7572  137D  2B81               	goto	l5975
  7573  137E  35A2               	lslf	___awmod@divisor,f
  7574  137F  0DA3               	rlf	___awmod@divisor+1,f
  7575  1380  2B7B               	goto	L10
  7576  1381                     l5975:	
  7577  1381  0823               	movf	___awmod@divisor+1,w
  7578  1382  0225               	subwf	___awmod@dividend+1,w
  7579  1383  1D03               	skipz
  7580  1384  2B87               	goto	u5545
  7581  1385  0822               	movf	___awmod@divisor,w
  7582  1386  0224               	subwf	___awmod@dividend,w
  7583  1387                     u5545:	
  7584  1387  1C03               	skipc
  7585  1388  2B8D               	goto	l5979
  7586  1389  0822               	movf	___awmod@divisor,w
  7587  138A  02A4               	subwf	___awmod@dividend,f
  7588  138B  0823               	movf	___awmod@divisor+1,w
  7589  138C  3BA5               	subwfb	___awmod@dividend+1,f
  7590  138D                     l5979:	
  7591  138D  36A3               	lsrf	___awmod@divisor+1,f
  7592  138E  0CA2               	rrf	___awmod@divisor,f
  7593  138F  0BA6               	decfsz	___awmod@counter,f
  7594  1390  2B81               	goto	l5975
  7595  1391                     l5983:	
  7596  1391  0827               	movf	___awmod@sign,w
  7597  1392  1903               	btfsc	3,2
  7598  1393  2B99               	goto	l5987
  7599  1394  09A4               	comf	___awmod@dividend,f
  7600  1395  09A5               	comf	___awmod@dividend+1,f
  7601  1396  0AA4               	incf	___awmod@dividend,f
  7602  1397  1903               	skipnz
  7603  1398  0AA5               	incf	___awmod@dividend+1,f
  7604  1399                     l5987:	
  7605  1399  0825               	movf	___awmod@dividend+1,w
  7606  139A  00A3               	movwf	?___awmod+1
  7607  139B  0824               	movf	___awmod@dividend,w
  7608  139C  00A2               	movwf	?___awmod
  7609  139D  0008               	return
  7610  139E                     __end_of___awmod:	
  7611  139E                     __ptext16:	
  7612 ;; *************** function ___lmul *****************
  7613 ;; Defined at:
  7614 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul32.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;  multiplier      4    2[BANK0 ] unsigned long 
  7617 ;;  multiplicand    4    6[BANK0 ] unsigned long 
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;  product         4   10[BANK0 ] unsigned long 
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  4    2[BANK0 ] unsigned long 
  7622 ;; Registers used:
  7623 ;;		wreg, status,2, status,0
  7624 ;; Tracked objects:
  7625 ;;		On entry : 1F/0
  7626 ;;		On exit  : 1F/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7629 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7630 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7632 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;Total ram usage:       12 bytes
  7634 ;; Hardware stack levels used:    1
  7635 ;; Hardware stack levels required when called:    9
  7636 ;; This function calls:
  7637 ;;		Nothing
  7638 ;; This function is called by:
  7639 ;;		_led_calc_bright
  7640 ;;		_led_auto_process
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           
  7645                           ;psect for function ___lmul
  7646  139E                     ___lmul:	
  7647                           
  7648                           ;incstack = 0
  7649                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7650  139E  01AA               	clrf	___lmul@product
  7651  139F  01AB               	clrf	___lmul@product+1
  7652  13A0  01AC               	clrf	___lmul@product+2
  7653  13A1  01AD               	clrf	___lmul@product+3
  7654  13A2                     l1234:	
  7655  13A2  1C22               	btfss	___lmul@multiplier,0
  7656  13A3  2BAC               	goto	l5861
  7657  13A4  0826               	movf	___lmul@multiplicand,w
  7658  13A5  07AA               	addwf	___lmul@product,f
  7659  13A6  0827               	movf	___lmul@multiplicand+1,w
  7660  13A7  3DAB               	addwfc	___lmul@product+1,f
  7661  13A8  0828               	movf	___lmul@multiplicand+2,w
  7662  13A9  3DAC               	addwfc	___lmul@product+2,f
  7663  13AA  0829               	movf	___lmul@multiplicand+3,w
  7664  13AB  3DAD               	addwfc	___lmul@product+3,f
  7665  13AC                     l5861:	
  7666  13AC  35A6               	lslf	___lmul@multiplicand,f
  7667  13AD  0DA7               	rlf	___lmul@multiplicand+1,f
  7668  13AE  0DA8               	rlf	___lmul@multiplicand+2,f
  7669  13AF  0DA9               	rlf	___lmul@multiplicand+3,f
  7670  13B0  36A5               	lsrf	___lmul@multiplier+3,f
  7671  13B1  0CA4               	rrf	___lmul@multiplier+2,f
  7672  13B2  0CA3               	rrf	___lmul@multiplier+1,f
  7673  13B3  0CA2               	rrf	___lmul@multiplier,f
  7674  13B4  0825               	movf	___lmul@multiplier+3,w
  7675  13B5  0424               	iorwf	___lmul@multiplier+2,w
  7676  13B6  0423               	iorwf	___lmul@multiplier+1,w
  7677  13B7  0422               	iorwf	___lmul@multiplier,w
  7678  13B8  1D03               	skipz
  7679  13B9  2BA2               	goto	l1234
  7680  13BA  082D               	movf	___lmul@product+3,w
  7681  13BB  00A5               	movwf	?___lmul+3
  7682  13BC  082C               	movf	___lmul@product+2,w
  7683  13BD  00A4               	movwf	?___lmul+2
  7684  13BE  082B               	movf	___lmul@product+1,w
  7685  13BF  00A3               	movwf	?___lmul+1
  7686  13C0  082A               	movf	___lmul@product,w
  7687  13C1  00A2               	movwf	?___lmul
  7688  13C2  0008               	return
  7689  13C3                     __end_of___lmul:	
  7690  13C3                     __ptext15:	
  7691 ;; *************** function _led_calc_bright *****************
  7692 ;; Defined at:
  7693 ;;		line 459 in file "src/app_led.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;  sbrt            1    wreg     unsigned char 
  7696 ;;  ebrt            1   27[BANK0 ] unsigned char 
  7697 ;;  duration        2   28[BANK0 ] unsigned int 
  7698 ;;  dt              4   30[BANK0 ] unsigned long 
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;  sbrt            1   41[BANK0 ] unsigned char 
  7701 ;;  period          2   38[BANK0 ] unsigned int 
  7702 ;;  vs              2   36[BANK0 ] unsigned int 
  7703 ;;  result          2   34[BANK0 ] unsigned int 
  7704 ;;  dbrt            1   40[BANK0 ] unsigned char 
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  2   27[BANK0 ] unsigned int 
  7707 ;; Registers used:
  7708 ;;		wreg, status,2, status,0, pclath, cstack
  7709 ;; Tracked objects:
  7710 ;;		On entry : 1F/0
  7711 ;;		On exit  : 1F/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7714 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7715 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;Total ram usage:       15 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; Hardware stack levels required when called:   10
  7721 ;; This function calls:
  7722 ;;		___lldiv
  7723 ;;		___lmul
  7724 ;;		___wmul
  7725 ;; This function is called by:
  7726 ;;		_led_auto_process
  7727 ;;		_led_pro_process
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           
  7732                           ;psect for function _led_calc_bright
  7733  13C3                     _led_calc_bright:	
  7734                           
  7735                           ;incstack = 0
  7736                           ; Regs used in _led_calc_bright: [wreg+status,2+status,0+pclath+cstack]
  7737                           ;led_calc_bright@sbrt stored from wreg
  7738  13C3  00C9               	movwf	led_calc_bright@sbrt
  7739                           
  7740                           ;app_led.c: 461: uint8_t dbrt;
  7741                           ;app_led.c: 462: uint16_t result;
  7742                           ;app_led.c: 463: uint16_t vs = sbrt*10u;
  7743  13C4  00A2               	movwf	___wmul@multiplier
  7744  13C5  300A               	movlw	10
  7745  13C6  01A3               	clrf	___wmul@multiplier+1
  7746  13C7  00A4               	movwf	___wmul@multiplicand
  7747  13C8  01A5               	clrf	___wmul@multiplicand+1
  7748  13C9  3196  26BF  3191   	fcall	___wmul
  7749  13CC  0823               	movf	?___wmul+1,w
  7750  13CD  00C5               	movwf	led_calc_bright@vs+1
  7751  13CE  0822               	movf	?___wmul,w
  7752  13CF  00C4               	movwf	led_calc_bright@vs
  7753                           
  7754                           ;app_led.c: 464: uint16_t period = duration*6u;
  7755  13D0  083D               	movf	led_calc_bright@duration+1,w
  7756  13D1  00A3               	movwf	___wmul@multiplier+1
  7757  13D2  083C               	movf	led_calc_bright@duration,w
  7758  13D3  00A2               	movwf	___wmul@multiplier
  7759  13D4  3006               	movlw	6
  7760  13D5  00A4               	movwf	___wmul@multiplicand
  7761  13D6  01A5               	clrf	___wmul@multiplicand+1
  7762  13D7  3196  26BF  3191   	fcall	___wmul
  7763  13DA  0823               	movf	?___wmul+1,w
  7764  13DB  00C7               	movwf	led_calc_bright@period+1
  7765  13DC  0822               	movf	?___wmul,w
  7766  13DD  00C6               	movwf	led_calc_bright@period
  7767                           
  7768                           ;app_led.c: 465: if(sbrt <= ebrt)
  7769  13DE  0849               	movf	led_calc_bright@sbrt,w
  7770  13DF  023B               	subwf	led_calc_bright@ebrt,w
  7771  13E0  1C03               	skipc
  7772  13E1  2BF6               	goto	l5933
  7773                           
  7774                           ;app_led.c: 466: {
  7775                           ;app_led.c: 467: dbrt = ebrt - sbrt;
  7776  13E2  0849               	movf	led_calc_bright@sbrt,w
  7777  13E3  023B               	subwf	led_calc_bright@ebrt,w
  7778  13E4  00C8               	movwf	led_calc_bright@dbrt
  7779                           
  7780                           ;app_led.c: 468: result = vs + dbrt*dt/period;
  7781  13E5  246B  3191         	fcall	PL28	;call to abstracted procedure
  7782  13E7  239E  3191         	fcall	___lmul
  7783  13E9  2493  3191         	fcall	PL86	;call to abstracted procedure
  7784  13EB  240D  3191         	fcall	___lldiv
  7785  13ED  082F               	movf	?___lldiv+1,w
  7786  13EE  00C3               	movwf	led_calc_bright@result+1
  7787  13EF  082E               	movf	?___lldiv,w
  7788  13F0  00C2               	movwf	led_calc_bright@result
  7789  13F1  0844               	movf	led_calc_bright@vs,w
  7790  13F2  07C2               	addwf	led_calc_bright@result,f
  7791  13F3  0845               	movf	led_calc_bright@vs+1,w
  7792  13F4  3DC3               	addwfc	led_calc_bright@result+1,f
  7793                           
  7794                           ;app_led.c: 469: }
  7795  13F5  2C08               	goto	l5939
  7796  13F6                     l5933:	
  7797                           
  7798                           ;app_led.c: 470: else
  7799                           ;app_led.c: 471: {
  7800                           ;app_led.c: 472: dbrt = sbrt - ebrt;
  7801  13F6  083B               	movf	led_calc_bright@ebrt,w
  7802  13F7  0249               	subwf	led_calc_bright@sbrt,w
  7803  13F8  00C8               	movwf	led_calc_bright@dbrt
  7804                           
  7805                           ;app_led.c: 473: result = vs - dbrt*dt/period;
  7806  13F9  0845               	movf	led_calc_bright@vs+1,w
  7807  13FA  00C3               	movwf	led_calc_bright@result+1
  7808  13FB  0844               	movf	led_calc_bright@vs,w
  7809  13FC  00C2               	movwf	led_calc_bright@result
  7810  13FD  246B  3191         	fcall	PL28	;call to abstracted procedure
  7811  13FF  239E  3191         	fcall	___lmul
  7812  1401  2493  3191         	fcall	PL86	;call to abstracted procedure
  7813  1403  240D               	fcall	___lldiv
  7814  1404  082E               	movf	?___lldiv,w
  7815  1405  02C2               	subwf	led_calc_bright@result,f
  7816  1406  082F               	movf	?___lldiv+1,w
  7817  1407  3BC3               	subwfb	led_calc_bright@result+1,f
  7818  1408                     l5939:	
  7819                           
  7820                           ;app_led.c: 474: }
  7821                           ;app_led.c: 475: return result;
  7822  1408  0843               	movf	led_calc_bright@result+1,w
  7823  1409  00BC               	movwf	?_led_calc_bright+1
  7824  140A  0842               	movf	led_calc_bright@result,w
  7825  140B  00BB               	movwf	?_led_calc_bright
  7826  140C  0008               	return
  7827  140D                     __end_of_led_calc_bright:	
  7828  140D                     __ptext17:	
  7829 ;; *************** function ___lldiv *****************
  7830 ;; Defined at:
  7831 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lldiv.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;  divisor         4   14[BANK0 ] unsigned long 
  7834 ;;  dividend        4   18[BANK0 ] unsigned long 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  quotient        4   22[BANK0 ] unsigned long 
  7837 ;;  counter         1   26[BANK0 ] unsigned char 
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  4   14[BANK0 ] unsigned long 
  7840 ;; Registers used:
  7841 ;;		wreg, status,2, status,0
  7842 ;; Tracked objects:
  7843 ;;		On entry : 1F/0
  7844 ;;		On exit  : 1F/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7847 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7848 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;Total ram usage:       13 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:    9
  7854 ;; This function calls:
  7855 ;;		Nothing
  7856 ;; This function is called by:
  7857 ;;		_led_calc_bright
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           
  7862                           ;psect for function ___lldiv
  7863  140D                     ___lldiv:	
  7864                           
  7865                           ;incstack = 0
  7866                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7867  140D  01B6               	clrf	___lldiv@quotient
  7868  140E  01B7               	clrf	___lldiv@quotient+1
  7869  140F  01B8               	clrf	___lldiv@quotient+2
  7870  1410  01B9               	clrf	___lldiv@quotient+3
  7871  1411  0831               	movf	___lldiv@divisor+3,w
  7872  1412  0430               	iorwf	___lldiv@divisor+2,w
  7873  1413  042F               	iorwf	___lldiv@divisor+1,w
  7874  1414  042E               	iorwf	___lldiv@divisor,w
  7875  1415  1903               	skipnz
  7876  1416  2C43               	goto	l5891
  7877  1417  01BA               	clrf	___lldiv@counter
  7878  1418                     L9:	
  7879  1418  0ABA               	incf	___lldiv@counter,f
  7880  1419  1BB1               	btfsc	___lldiv@divisor+3,7
  7881  141A  2C20               	goto	l5879
  7882  141B  35AE               	lslf	___lldiv@divisor,f
  7883  141C  0DAF               	rlf	___lldiv@divisor+1,f
  7884  141D  0DB0               	rlf	___lldiv@divisor+2,f
  7885  141E  0DB1               	rlf	___lldiv@divisor+3,f
  7886  141F  2C18               	goto	L9
  7887  1420                     l5879:	
  7888  1420  35B6               	lslf	___lldiv@quotient,f
  7889  1421  0DB7               	rlf	___lldiv@quotient+1,f
  7890  1422  0DB8               	rlf	___lldiv@quotient+2,f
  7891  1423  0DB9               	rlf	___lldiv@quotient+3,f
  7892  1424  0831               	movf	___lldiv@divisor+3,w
  7893  1425  0235               	subwf	___lldiv@dividend+3,w
  7894  1426  1D03               	skipz
  7895  1427  2C32               	goto	u5445
  7896  1428  0830               	movf	___lldiv@divisor+2,w
  7897  1429  0234               	subwf	___lldiv@dividend+2,w
  7898  142A  1D03               	skipz
  7899  142B  2C32               	goto	u5445
  7900  142C  082F               	movf	___lldiv@divisor+1,w
  7901  142D  0233               	subwf	___lldiv@dividend+1,w
  7902  142E  1D03               	skipz
  7903  142F  2C32               	goto	u5445
  7904  1430  082E               	movf	___lldiv@divisor,w
  7905  1431  0232               	subwf	___lldiv@dividend,w
  7906  1432                     u5445:	
  7907  1432  1C03               	skipc
  7908  1433  2C3D               	goto	l5887
  7909  1434  082E               	movf	___lldiv@divisor,w
  7910  1435  02B2               	subwf	___lldiv@dividend,f
  7911  1436  082F               	movf	___lldiv@divisor+1,w
  7912  1437  3BB3               	subwfb	___lldiv@dividend+1,f
  7913  1438  0830               	movf	___lldiv@divisor+2,w
  7914  1439  3BB4               	subwfb	___lldiv@dividend+2,f
  7915  143A  0831               	movf	___lldiv@divisor+3,w
  7916  143B  3BB5               	subwfb	___lldiv@dividend+3,f
  7917  143C  1436               	bsf	___lldiv@quotient,0
  7918  143D                     l5887:	
  7919  143D  36B1               	lsrf	___lldiv@divisor+3,f
  7920  143E  0CB0               	rrf	___lldiv@divisor+2,f
  7921  143F  0CAF               	rrf	___lldiv@divisor+1,f
  7922  1440  0CAE               	rrf	___lldiv@divisor,f
  7923  1441  0BBA               	decfsz	___lldiv@counter,f
  7924  1442  2C20               	goto	l5879
  7925  1443                     l5891:	
  7926  1443  0839               	movf	___lldiv@quotient+3,w
  7927  1444  00B1               	movwf	?___lldiv+3
  7928  1445  0838               	movf	___lldiv@quotient+2,w
  7929  1446  00B0               	movwf	?___lldiv+2
  7930  1447  0837               	movf	___lldiv@quotient+1,w
  7931  1448  00AF               	movwf	?___lldiv+1
  7932  1449  0836               	movf	___lldiv@quotient,w
  7933  144A  00AE               	movwf	?___lldiv
  7934  144B  0008               	return
  7935  144C                     __end_of___lldiv:	
  7936  144C                     PL2:	
  7937  144C  3EA0               	addlw	(low (led_auto_process@val| 0))& (0+255)
  7938  144D  0086               	movwf	6
  7939  144E  0187               	clrf	7
  7940  144F  0853               	movf	led_auto_process@i^(0+128),w
  7941  1450  0020               	movlb	0	; select bank0
  7942  1451  00CD               	movwf	??_led_auto_process
  7943  1452  01CE               	clrf	??_led_auto_process+1
  7944  1453  0021               	movlb	1	; select bank1
  7945  1454  0751               	addwf	led_auto_process@p^(0+128),w
  7946  1455  0020               	movlb	0	; select bank0
  7947  1456  00CF               	movwf	??_led_auto_process+2
  7948  1457  084E               	movf	??_led_auto_process+1,w
  7949  1458  0021               	movlb	1	; select bank1
  7950  1459  3D52               	addwfc	(led_auto_process@p+1)^(0+128),w
  7951  145A  0020               	movlb	0	; select bank0
  7952  145B  00D0               	movwf	??_led_auto_process+3
  7953  145C  084F               	movf	??_led_auto_process+2,w
  7954  145D  0084               	movwf	4
  7955  145E  0850               	movf	??_led_auto_process+3,w
  7956  145F  0085               	movwf	5
  7957  1460  0008               	return
  7958  1461                     __end_ofPL2:	
  7959  1461                     PL26:	
  7960  1461  0801               	movf	1,w
  7961  1462  0020               	movlb	0	; select bank0
  7962  1463  00CD               	movwf	??_led_auto_process
  7963  1464  01CE               	clrf	??_led_auto_process+1
  7964  1465  0021               	movlb	1	; select bank1
  7965  1466  0851               	movf	led_auto_process@p^(0+128),w
  7966  1467  0086               	movwf	6
  7967  1468  0852               	movf	(led_auto_process@p+1)^(0+128),w
  7968  1469  0087               	movwf	7
  7969  146A  0008               	return
  7970  146B                     __end_ofPL26:	
  7971  146B                     PL28:	
  7972  146B  0846               	movf	led_calc_bright@period,w
  7973  146C  00AE               	movwf	___lldiv@divisor
  7974  146D  0847               	movf	led_calc_bright@period+1,w
  7975  146E  00AF               	movwf	___lldiv@divisor+1
  7976  146F  01B0               	clrf	___lldiv@divisor+2
  7977  1470  01B1               	clrf	___lldiv@divisor+3
  7978  1471  0848               	movf	led_calc_bright@dbrt,w
  7979  1472  00A2               	movwf	___lmul@multiplier
  7980  1473  01A3               	clrf	___lmul@multiplier+1
  7981  1474  01A4               	clrf	___lmul@multiplier+2
  7982  1475  01A5               	clrf	___lmul@multiplier+3
  7983  1476  0841               	movf	led_calc_bright@dt+3,w
  7984  1477  00A9               	movwf	___lmul@multiplicand+3
  7985  1478  0840               	movf	led_calc_bright@dt+2,w
  7986  1479  00A8               	movwf	___lmul@multiplicand+2
  7987  147A  083F               	movf	led_calc_bright@dt+1,w
  7988  147B  00A7               	movwf	___lmul@multiplicand+1
  7989  147C  083E               	movf	led_calc_bright@dt,w
  7990  147D  00A6               	movwf	___lmul@multiplicand
  7991  147E  0008               	return
  7992  147F                     __end_ofPL28:	
  7993  147F                     PL64:	
  7994  147F  3E55               	addlw	(low (_target_bright| 0))& (0+255)
  7995  1480  0086               	movwf	6
  7996  1481  0187               	clrf	7
  7997  1482  0020               	movlb	0	; select bank0
  7998  1483  083B               	movf	?_led_calc_bright,w
  7999  1484  3FC0               	movwi [0]fsr1
  8000  1485  083C               	movf	?_led_calc_bright+1,w
  8001  1486  3FC1               	movwi [1]fsr1
  8002  1487  0021               	movlb	1	; select bank1
  8003  1488  3404               	retlw	4
  8004  1489                     __end_ofPL64:	
  8005  1489                     PL80:	
  8006  1489  0021               	movlb	1	; select bank1
  8007  148A  084D               	movf	(led_auto_process@et+1)^(0+128),w
  8008  148B  00C5               	movwf	(led_auto_process@duration+1)^(0+128)
  8009  148C  084C               	movf	led_auto_process@et^(0+128),w
  8010  148D  00C4               	movwf	led_auto_process@duration^(0+128)
  8011  148E  084F               	movf	led_auto_process@st^(0+128),w
  8012  148F  02C4               	subwf	led_auto_process@duration^(0+128),f
  8013  1490  0850               	movf	(led_auto_process@st+1)^(0+128),w
  8014  1491  3BC5               	subwfb	(led_auto_process@duration+1)^(0+128),f
  8015  1492  0008               	return
  8016  1493                     __end_ofPL80:	
  8017  1493                     PL86:	
  8018  1493  0825               	movf	?___lmul+3,w
  8019  1494  00B5               	movwf	___lldiv@dividend+3
  8020  1495  0824               	movf	?___lmul+2,w
  8021  1496  00B4               	movwf	___lldiv@dividend+2
  8022  1497  0823               	movf	?___lmul+1,w
  8023  1498  00B3               	movwf	___lldiv@dividend+1
  8024  1499  0822               	movf	?___lmul,w
  8025  149A  00B2               	movwf	___lldiv@dividend
  8026  149B  0008               	return
  8027  149C                     __end_ofPL86:	
  8028  149C                     PL108:	
  8029  149C  0851               	movf	led_auto_process@p^(0+128),w
  8030  149D  0086               	movwf	6
  8031  149E  0852               	movf	(led_auto_process@p+1)^(0+128),w
  8032  149F  0087               	movwf	7
  8033  14A0  3150               	addfsr 1,16
  8034  14A1  0801               	movf	1,w
  8035  14A2  0008               	return
  8036  14A3                     __end_ofPL108:	
  8037  14A3                     PL130:	
  8038  14A3  310C               	addfsr 0,12
  8039  14A4  0800               	movf	0,w
  8040  14A5  0081               	movwf	1
  8041  14A6  0021               	movlb	1	; select bank1
  8042  14A7  0853               	movf	led_auto_process@i^(0+128),w
  8043  14A8  0008               	return
  8044  14A9                     __end_ofPL130:	
  8045  14A9                     PL138:	
  8046  14A9  3104               	addfsr 0,4
  8047  14AA  0800               	movf	0,w
  8048  14AB  0081               	movwf	1
  8049  14AC  0021               	movlb	1	; select bank1
  8050  14AD  0853               	movf	led_auto_process@i^(0+128),w
  8051  14AE  0008               	return
  8052  14AF                     __end_ofPL138:	
  8053  14AF                     PL146:	
  8054  14AF  0021               	movlb	1	; select bank1
  8055  14B0  084F               	movf	led_auto_process@st^(0+128),w
  8056  14B1  0020               	movlb	0	; select bank0
  8057  14B2  024A               	subwf	led_auto_process@ct,w
  8058  14B3  0008               	return
  8059  14B4                     __end_ofPL146:	
  8060  14B4                     PL152:	
  8061  14B4  0021               	movlb	1	; select bank1
  8062  14B5  084C               	movf	led_auto_process@et^(0+128),w
  8063  14B6  0020               	movlb	0	; select bank0
  8064  14B7  024A               	subwf	led_auto_process@ct,w
  8065  14B8  0008               	return
  8066  14B9                     __end_ofPL152:	
  8067                           
  8068                           	psect	text24
  8069  10C6                     __ptext24:	
  8070 ;; *************** function _led_para_default *****************
  8071 ;; Defined at:
  8072 ;;		line 171 in file "src/app_led.c"
  8073 ;; Parameters:    Size  Location     Type
  8074 ;;		None
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;  j               1   21[BANK0 ] unsigned char 
  8077 ;;  i               1   23[BANK0 ] unsigned char 
  8078 ;;  i               1   22[BANK0 ] unsigned char 
  8079 ;;  i               1   20[BANK0 ] unsigned char 
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  1    wreg      void 
  8082 ;; Registers used:
  8083 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8084 ;; Tracked objects:
  8085 ;;		On entry : 1F/0
  8086 ;;		On exit  : 1F/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8090 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8091 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8092 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8093 ;;Total ram usage:       14 bytes
  8094 ;; Hardware stack levels used:    1
  8095 ;; Hardware stack levels required when called:   10
  8096 ;; This function calls:
  8097 ;;		_memset
  8098 ;; This function is called by:
  8099 ;;		_led_para_init
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           
  8104                           ;psect for function _led_para_default
  8105  10C6                     _led_para_default:	
  8106                           
  8107                           ;app_led.c: 173: memset(&m_led_para, 0, sizeof(m_led_para));
  8108                           
  8109                           ;incstack = 0
  8110                           ; Regs used in _led_para_default: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8111  10C6  307F               	movlw	127
  8112  10C7  00A2               	movwf	memset@p1
  8113  10C8  3023               	movlw	35
  8114  10C9  00A3               	movwf	memset@p1+1
  8115  10CA  3071               	movlw	113
  8116  10CB  01A4               	clrf	memset@c
  8117  10CC  01A5               	clrf	memset@c+1
  8118  10CD  00A6               	movwf	memset@n
  8119  10CE  01A7               	clrf	memset@n+1
  8120  10CF  218C  3190         	fcall	_memset
  8121                           
  8122                           ;app_led.c: 177: m_led_para.last_mode = 1;
  8123  10D1  307F               	movlw	127
  8124  10D2  0086               	movwf	6
  8125  10D3  3023               	movlw	35
  8126  10D4  0087               	movwf	7
  8127  10D5  21C1  3190         	fcall	PL132	;call to abstracted procedure
  8128                           
  8129                           ;app_led.c: 178: m_led_para.all_bright = 1000;
  8130  10D7  21B4               	fcall	PL90	;call to abstracted procedure
  8131  10D8  318B  2389  3190   	fcall	PL32	;call to abstracted procedure
  8132  10DB  082A               	movf	??_led_para_default,w
  8133  10DC  3FC0               	movwi [0]fsr1
  8134  10DD  082B               	movf	??_led_para_default+1,w
  8135  10DE  3FC1               	movwi [1]fsr1
  8136                           
  8137                           ;app_led.c: 179: m_led_para.blue_bright = 1000;
  8138  10DF  21B4               	fcall	PL90	;call to abstracted procedure
  8139  10E0  318E  26D9  3190   	fcall	PL24	;call to abstracted procedure
  8140  10E3  082A               	movf	??_led_para_default,w
  8141  10E4  3FC0               	movwi [0]fsr1
  8142  10E5  082B               	movf	??_led_para_default+1,w
  8143  10E6  3FC1               	movwi [1]fsr1
  8144                           
  8145                           ;app_led.c: 184: m_led_para.ble_para.auto_para.sunrise_start_hour = 7;
  8146  10E7  30A0               	movlw	160
  8147  10E8  0086               	movwf	6
  8148  10E9  3023               	movlw	35
  8149  10EA  0087               	movwf	7
  8150  10EB  3007               	movlw	7
  8151  10EC  0081               	movwf	1
  8152                           
  8153                           ;app_led.c: 186: m_led_para.ble_para.auto_para.sunrise_end_hour = 8;
  8154  10ED  30A2               	movlw	162
  8155  10EE  0086               	movwf	6
  8156  10EF  3008               	movlw	8
  8157  10F0  0081               	movwf	1
  8158                           
  8159                           ;app_led.c: 188: for(uint8_t i = 0; i < 4; i++)
  8160  10F1  01B4               	clrf	led_para_default@i
  8161  10F2                     l4681:	
  8162                           
  8163                           ;app_led.c: 189: {
  8164                           ;app_led.c: 190: m_led_para.ble_para.auto_para.day_bright[i] = 100;
  8165  10F2  0834               	movf	led_para_default@i,w
  8166  10F3  00AA               	movwf	??_led_para_default
  8167  10F4  30A4               	movlw	164
  8168  10F5  21A3  3190         	fcall	PL12	;call to abstracted procedure
  8169  10F7  3004               	movlw	4
  8170  10F8  0AB4               	incf	led_para_default@i,f
  8171  10F9  0234               	subwf	led_para_default@i,w
  8172  10FA  1C03               	skipc
  8173  10FB  28F2               	goto	l4681
  8174                           
  8175                           ;app_led.c: 191: }
  8176                           ;app_led.c: 192: m_led_para.ble_para.auto_para.sunset_start_hour = 17;
  8177  10FC  30A8               	movlw	168
  8178  10FD  0086               	movwf	6
  8179  10FE  3023               	movlw	35
  8180  10FF  0087               	movwf	7
  8181  1100  3011               	movlw	17
  8182  1101  0081               	movwf	1
  8183                           
  8184                           ;app_led.c: 194: m_led_para.ble_para.auto_para.sunset_end_hour = 18;
  8185  1102  30AA               	movlw	170
  8186  1103  0086               	movwf	6
  8187  1104  3012               	movlw	18
  8188  1105  0081               	movwf	1
  8189                           
  8190                           ;app_led.c: 196: m_led_para.ble_para.auto_para.night_bright[3] = 5;
  8191  1106  30AF               	movlw	175
  8192  1107  0086               	movwf	6
  8193  1108  3005               	movlw	5
  8194  1109  0081               	movwf	1
  8195                           
  8196                           ;app_led.c: 197: m_led_para.ble_para.auto_para.turnoff_enabled = 1;
  8197  110A  30B0               	movlw	176
  8198  110B  0086               	movwf	6
  8199  110C  3001               	movlw	1
  8200  110D  0081               	movwf	1
  8201                           
  8202                           ;app_led.c: 198: m_led_para.ble_para.auto_para.turnoff_hour = 22;
  8203  110E  30B1               	movlw	177
  8204  110F  0086               	movwf	6
  8205  1110  3016               	movlw	22
  8206  1111  0081               	movwf	1
  8207                           
  8208                           ;app_led.c: 201: m_led_para.ble_para.manual_para.mOn = 1;
  8209  1112  307F               	movlw	127
  8210  1113  0086               	movwf	6
  8211  1114  3147               	addfsr 1,7
  8212  1115  1401               	bsf	1,0
  8213                           
  8214                           ;app_led.c: 202: for(uint8_t i = 0; i < 4; i++)
  8215  1116  01B6               	clrf	led_para_default@i_1199
  8216  1117                     l4695:	
  8217                           
  8218                           ;app_led.c: 203: {
  8219                           ;app_led.c: 204: m_led_para.ble_para.manual_para.mBright[i] = 1000;
  8220  1117  30E8               	movlw	232
  8221  1118  00AA               	movwf	??_led_para_default
  8222  1119  3003               	movlw	3
  8223  111A  00AB               	movwf	??_led_para_default+1
  8224  111B  0836               	movf	led_para_default@i_1199,w
  8225  111C  00AC               	movwf	??_led_para_default+2
  8226  111D  3088               	movlw	136
  8227  111E  01AD               	clrf	??_led_para_default+3
  8228  111F  21B9  3190         	fcall	PL94	;call to abstracted procedure
  8229  1121  0086               	movwf	6
  8230  1122  082D               	movf	??_led_para_default+3,w
  8231  1123  3D2F               	addwfc	??_led_para_default+5,w
  8232  1124  0087               	movwf	7
  8233  1125  082A               	movf	??_led_para_default,w
  8234  1126  3FC0               	movwi [0]fsr1
  8235  1127  082B               	movf	??_led_para_default+1,w
  8236  1128  3FC1               	movwi [1]fsr1
  8237                           
  8238                           ;app_led.c: 205: for(uint8_t j = 0; j < 4; j++)
  8239  1129  01B5               	clrf	led_para_default@j
  8240  112A                     l4703:	
  8241                           
  8242                           ;app_led.c: 206: {
  8243                           ;app_led.c: 207: m_led_para.ble_para.manual_para.mCustomBright[j][i] = 100;
  8244  112A  0836               	movf	led_para_default@i_1199,w
  8245  112B  00AA               	movwf	??_led_para_default
  8246  112C  01AB               	clrf	??_led_para_default+1
  8247  112D  0835               	movf	led_para_default@j,w
  8248  112E  00AC               	movwf	??_led_para_default+2
  8249  112F  3090               	movlw	144
  8250  1130  01AD               	clrf	??_led_para_default+3
  8251  1131  35AC               	lslf	??_led_para_default+2,f
  8252  1132  0DAD               	rlf	??_led_para_default+3,f
  8253  1133  21B9  3190         	fcall	PL94	;call to abstracted procedure
  8254  1135  00B0               	movwf	??_led_para_default+6
  8255  1136  082D               	movf	??_led_para_default+3,w
  8256  1137  3D2F               	addwfc	??_led_para_default+5,w
  8257  1138  00B1               	movwf	??_led_para_default+7
  8258  1139  082A               	movf	??_led_para_default,w
  8259  113A  0730               	addwf	??_led_para_default+6,w
  8260  113B  00B2               	movwf	??_led_para_default+8
  8261  113C  082B               	movf	??_led_para_default+1,w
  8262  113D  3D31               	addwfc	??_led_para_default+7,w
  8263  113E  00B3               	movwf	??_led_para_default+9
  8264  113F  0832               	movf	??_led_para_default+8,w
  8265  1140  0086               	movwf	6
  8266  1141  0833               	movf	??_led_para_default+9,w
  8267  1142  0087               	movwf	7
  8268  1143  3064               	movlw	100
  8269  1144  0081               	movwf	1
  8270  1145  3004               	movlw	4
  8271  1146  0AB5               	incf	led_para_default@j,f
  8272  1147  0235               	subwf	led_para_default@j,w
  8273  1148  1C03               	skipc
  8274  1149  292A               	goto	l4703
  8275  114A  3004               	movlw	4
  8276  114B  0AB6               	incf	led_para_default@i_1199,f
  8277  114C  0236               	subwf	led_para_default@i_1199,w
  8278  114D  1C03               	skipc
  8279  114E  2917               	goto	l4695
  8280                           
  8281                           ;app_led.c: 208: }
  8282                           ;app_led.c: 209: }
  8283                           ;app_led.c: 211: m_led_para.ble_para.pro_para.point_count = 6;
  8284  114F  30B3               	movlw	179
  8285  1150  0086               	movwf	6
  8286  1151  3023               	movlw	35
  8287  1152  0087               	movwf	7
  8288  1153  3006               	movlw	6
  8289  1154  0081               	movwf	1
  8290                           
  8291                           ;app_led.c: 212: m_led_para.ble_para.pro_para.points[0].hour = 7;
  8292  1155  30B4               	movlw	180
  8293  1156  0086               	movwf	6
  8294  1157  3007               	movlw	7
  8295  1158  0081               	movwf	1
  8296                           
  8297                           ;app_led.c: 214: m_led_para.ble_para.pro_para.points[1].hour = 8;
  8298  1159  30BA               	movlw	186
  8299  115A  0086               	movwf	6
  8300  115B  3008               	movlw	8
  8301  115C  0081               	movwf	1
  8302                           
  8303                           ;app_led.c: 216: m_led_para.ble_para.pro_para.points[2].hour = 17;
  8304  115D  30C0               	movlw	192
  8305  115E  0086               	movwf	6
  8306  115F  3011               	movlw	17
  8307  1160  0081               	movwf	1
  8308                           
  8309                           ;app_led.c: 218: m_led_para.ble_para.pro_para.points[3].hour = 18;
  8310  1161  30C6               	movlw	198
  8311  1162  0086               	movwf	6
  8312  1163  3012               	movlw	18
  8313  1164  0081               	movwf	1
  8314                           
  8315                           ;app_led.c: 220: m_led_para.ble_para.pro_para.points[4].hour = 22;
  8316  1165  30CC               	movlw	204
  8317  1166  0086               	movwf	6
  8318  1167  3016               	movlw	22
  8319  1168  0081               	movwf	1
  8320                           
  8321                           ;app_led.c: 222: m_led_para.ble_para.pro_para.points[5].hour = 22;
  8322  1169  30D2               	movlw	210
  8323  116A  0086               	movwf	6
  8324  116B  3016               	movlw	22
  8325  116C  0081               	movwf	1
  8326                           
  8327                           ;app_led.c: 223: m_led_para.ble_para.pro_para.points[5].minuite = 30;
  8328  116D  30D3               	movlw	211
  8329  116E  0086               	movwf	6
  8330  116F  301E               	movlw	30
  8331  1170  0081               	movwf	1
  8332                           
  8333                           ;app_led.c: 224: for(uint8_t i = 0; i < 4; i++)
  8334  1171  01B7               	clrf	led_para_default@i_1206
  8335  1172                     l4721:	
  8336                           
  8337                           ;app_led.c: 225: {
  8338                           ;app_led.c: 227: m_led_para.ble_para.pro_para.points[1].bright[i] = 100;
  8339  1172  0837               	movf	led_para_default@i_1206,w
  8340  1173  00AA               	movwf	??_led_para_default
  8341  1174  30BC               	movlw	188
  8342  1175  21A3  3190         	fcall	PL12	;call to abstracted procedure
  8343                           
  8344                           ;app_led.c: 228: m_led_para.ble_para.pro_para.points[2].bright[i] = 100;
  8345  1177  0837               	movf	led_para_default@i_1206,w
  8346  1178  00AA               	movwf	??_led_para_default
  8347  1179  30C2               	movlw	194
  8348  117A  21A3  3190         	fcall	PL12	;call to abstracted procedure
  8349  117C  3004               	movlw	4
  8350  117D  0AB7               	incf	led_para_default@i_1206,f
  8351  117E  0237               	subwf	led_para_default@i_1206,w
  8352  117F  1C03               	skipc
  8353  1180  2972               	goto	l4721
  8354                           
  8355                           ;app_led.c: 232: }
  8356                           ;app_led.c: 233: m_led_para.ble_para.pro_para.points[3].bright[3] = 5;
  8357  1181  30CB               	movlw	203
  8358  1182  0086               	movwf	6
  8359  1183  3023               	movlw	35
  8360  1184  0087               	movwf	7
  8361  1185  3005               	movlw	5
  8362  1186  0081               	movwf	1
  8363                           
  8364                           ;app_led.c: 234: m_led_para.ble_para.pro_para.points[4].bright[3] = 5;
  8365  1187  30D1               	movlw	209
  8366  1188  0086               	movwf	6
  8367  1189  3005               	movlw	5
  8368  118A  0081               	movwf	1
  8369  118B  0008               	return
  8370  118C                     __end_of_led_para_default:	
  8371  118C                     __ptext25:	
  8372 ;; *************** function _memset *****************
  8373 ;; Defined at:
  8374 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\memset.c"
  8375 ;; Parameters:    Size  Location     Type
  8376 ;;  p1              2    2[BANK0 ] PTR void 
  8377 ;;		 -> m_led_para(113), 
  8378 ;;  c               2    4[BANK0 ] int 
  8379 ;;  n               2    6[BANK0 ] unsigned int 
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;  p               2    8[BANK0 ] PTR unsigned char 
  8382 ;;		 -> m_led_para(113), 
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  2    2[BANK0 ] PTR void 
  8385 ;; Registers used:
  8386 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8387 ;; Tracked objects:
  8388 ;;		On entry : 1F/0
  8389 ;;		On exit  : 1F/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8392 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8393 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8395 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;Total ram usage:        8 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; Hardware stack levels required when called:    9
  8399 ;; This function calls:
  8400 ;;		Nothing
  8401 ;; This function is called by:
  8402 ;;		_led_para_default
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           
  8407                           ;psect for function _memset
  8408  118C                     _memset:	
  8409                           
  8410                           ;incstack = 0
  8411                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8412  118C  0823               	movf	memset@p1+1,w
  8413  118D  00A9               	movwf	memset@p+1
  8414  118E  0822               	movf	memset@p1,w
  8415  118F  00A8               	movwf	memset@p
  8416  1190                     l4073:	
  8417  1190  3001               	movlw	1
  8418  1191  02A6               	subwf	memset@n,f
  8419  1192  3000               	movlw	0
  8420  1193  3BA7               	subwfb	memset@n+1,f
  8421  1194  0F26               	incfsz	memset@n,w
  8422  1195  2999               	goto	l4069
  8423  1196  0A27               	incf	memset@n+1,w
  8424  1197  1903               	btfsc	3,2
  8425  1198  0008               	return
  8426  1199                     l4069:	
  8427  1199  0828               	movf	memset@p,w
  8428  119A  0086               	movwf	6
  8429  119B  0829               	movf	memset@p+1,w
  8430  119C  0087               	movwf	7
  8431  119D  0824               	movf	memset@c,w
  8432  119E  0081               	movwf	1
  8433  119F  0AA8               	incf	memset@p,f
  8434  11A0  1903               	skipnz
  8435  11A1  0AA9               	incf	memset@p+1,f
  8436  11A2  2990               	goto	l4073
  8437  11A3                     __end_of_memset:	
  8438  11A3                     PL12:	
  8439  11A3  01AB               	clrf	??_led_para_default+1
  8440  11A4  00AC               	movwf	??_led_para_default+2
  8441  11A5  3023               	movlw	35
  8442  11A6  00AD               	movwf	??_led_para_default+3
  8443  11A7  082A               	movf	??_led_para_default,w
  8444  11A8  072C               	addwf	??_led_para_default+2,w
  8445  11A9  00AE               	movwf	??_led_para_default+4
  8446  11AA  082B               	movf	??_led_para_default+1,w
  8447  11AB  3D2D               	addwfc	??_led_para_default+3,w
  8448  11AC  00AF               	movwf	??_led_para_default+5
  8449  11AD  082E               	movf	??_led_para_default+4,w
  8450  11AE  0086               	movwf	6
  8451  11AF  082F               	movf	??_led_para_default+5,w
  8452  11B0  0087               	movwf	7
  8453  11B1  3064               	movlw	100
  8454  11B2  0081               	movwf	1
  8455  11B3  0008               	return
  8456  11B4                     __end_ofPL12:	
  8457  11B4                     PL90:	
  8458  11B4  30E8               	movlw	232
  8459  11B5  00AA               	movwf	??_led_para_default
  8460  11B6  3003               	movlw	3
  8461  11B7  00AB               	movwf	??_led_para_default+1
  8462  11B8  0008               	return
  8463  11B9                     __end_ofPL90:	
  8464  11B9                     PL94:	
  8465  11B9  35AC               	lslf	??_led_para_default+2,f
  8466  11BA  0DAD               	rlf	??_led_para_default+3,f
  8467  11BB  00AE               	movwf	??_led_para_default+4
  8468  11BC  3023               	movlw	35
  8469  11BD  00AF               	movwf	??_led_para_default+5
  8470  11BE  082C               	movf	??_led_para_default+2,w
  8471  11BF  072E               	addwf	??_led_para_default+4,w
  8472  11C0  0008               	return
  8473  11C1                     __end_ofPL94:	
  8474  11C1                     PL132:	
  8475  11C1  3141               	addfsr 1,1
  8476  11C2  0801               	movf	1,w
  8477  11C3  39F3               	andlw	-13
  8478  11C4  3804               	iorlw	4
  8479  11C5  0081               	movwf	1
  8480  11C6  0008               	return
  8481  11C7                     __end_ofPL132:	
  8482                           
  8483                           	psect	text36
  8484  0830                     __ptext36:	
  8485 ;; *************** function _ble_decode *****************
  8486 ;; Defined at:
  8487 ;;		line 284 in file "src/app_ble.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;		None
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;		None
  8492 ;; Return value:  Size  Location     Type
  8493 ;;                  1    wreg      void 
  8494 ;; Registers used:
  8495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8496 ;; Tracked objects:
  8497 ;;		On entry : 1F/2
  8498 ;;		On exit  : 0/0
  8499 ;;		Unchanged: 0/0
  8500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8503 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8504 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8505 ;;Total ram usage:        2 bytes
  8506 ;; Hardware stack levels used:    1
  8507 ;; Hardware stack levels required when called:   11
  8508 ;; This function calls:
  8509 ;;		___wmul
  8510 ;;		_ble_ota_ack
  8511 ;;		_ble_send_data
  8512 ;;		_led_decrease
  8513 ;;		_led_increase
  8514 ;;		_led_set_bright
  8515 ;;		_led_set_custom
  8516 ;;		_led_set_cycle
  8517 ;;		_led_set_mode
  8518 ;;		_led_set_power
  8519 ;;		_led_set_preview
  8520 ;;		_led_set_pro
  8521 ;;		_led_set_time
  8522 ;;		_led_start_flash
  8523 ;;		_led_start_preview
  8524 ;;		_led_stop_preview
  8525 ;; This function is called by:
  8526 ;;		_ble_process
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           
  8531                           ;psect for function _ble_decode
  8532  0830                     _ble_decode:	
  8533  0830                     l6003:	
  8534                           ;incstack = 0
  8535                           ; Regs used in _ble_decode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8536                           
  8537                           
  8538                           ;app_ble.c: 286: if(rx_buf[0] != 0x68 || checksum != 0)
  8539  0830  3068               	movlw	104
  8540  0831  0023               	movlb	3	; select bank3
  8541  0832  0620               	xorwf	_rx_buf^(0+384),w
  8542  0833  1D03               	btfss	3,2
  8543  0834  0008               	return
  8544  0835  0020               	movlb	0	; select bank0
  8545  0836  0863               	movf	_checksum,w
  8546  0837  1D03               	btfss	3,2
  8547  0838  0008               	return
  8548  0839  28FA               	goto	l6095
  8549  083A                     l6007:	
  8550                           
  8551                           ;app_ble.c: 295: if(index == 4)
  8552  083A  3004               	movlw	4
  8553  083B  0020               	movlb	0	; select bank0
  8554  083C  0664               	xorwf	_index,w
  8555  083D  1D03               	btfss	3,2
  8556  083E  0008               	return
  8557                           
  8558                           ;app_ble.c: 296: {
  8559                           ;app_ble.c: 297: if(led_set_mode(rx_buf[2]))
  8560  083F  0023               	movlb	3	; select bank3
  8561  0840  0822               	movf	(_rx_buf^(0+384)+2),w
  8562  0841  2106  3188         	fcall	_led_set_mode
  8563  0843                     L15:	
  8564  0843  3A00               	xorlw	0
  8565  0844  1903               	skipnz
  8566  0845  0008               	return
  8567  0846                     l6011:	
  8568                           
  8569                           ;app_ble.c: 298: {
  8570                           ;app_ble.c: 299: ble_send_data();
  8571  0846  3186  2E6B         	ljmp	l4361
  8572  0848                     l6013:	
  8573                           
  8574                           ;app_ble.c: 304: if(index == 4)
  8575  0848  3004               	movlw	4
  8576  0849  0020               	movlb	0	; select bank0
  8577  084A  0664               	xorwf	_index,w
  8578  084B  1D03               	btfss	3,2
  8579  084C  0008               	return
  8580                           
  8581                           ;app_ble.c: 305: {
  8582                           ;app_ble.c: 306: if(led_set_power(rx_buf[2]))
  8583  084D  0023               	movlb	3	; select bank3
  8584  084E  0822               	movf	(_rx_buf^(0+384)+2),w
  8585  084F  23E7  3188         	fcall	_led_set_power
  8586  0851  2843               	goto	L15
  8587  0852                     l6019:	
  8588                           
  8589                           ;app_ble.c: 313: if(index == 3 + 2 * 4)
  8590  0852  300B               	movlw	11
  8591  0853  0020               	movlb	0	; select bank0
  8592  0854  0664               	xorwf	_index,w
  8593  0855  1D03               	btfss	3,2
  8594  0856  0008               	return
  8595                           
  8596                           ;app_ble.c: 314: {
  8597                           ;app_ble.c: 315: led_set_bright(&rx_buf[2]);
  8598  0857  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
  8599  0858  319E  2E64         	ljmp	_led_set_bright
  8600  085A                     l6023:	
  8601                           
  8602                           ;app_ble.c: 319: if(index == 3)
  8603  085A  3003               	movlw	3
  8604  085B  0020               	movlb	0	; select bank0
  8605  085C  0664               	xorwf	_index,w
  8606  085D  1D03               	btfss	3,2
  8607  085E  0008               	return
  8608  085F  2846               	goto	l6011
  8609  0860                     l6027:	
  8610                           
  8611                           ;app_ble.c: 325: if(index == 4)
  8612  0860  3004               	movlw	4
  8613  0861  0020               	movlb	0	; select bank0
  8614  0862  0664               	xorwf	_index,w
  8615  0863  1D03               	btfss	3,2
  8616  0864  0008               	return
  8617                           
  8618                           ;app_ble.c: 326: {
  8619                           ;app_ble.c: 327: if(led_set_custom(rx_buf[2]))
  8620  0865  0023               	movlb	3	; select bank3
  8621  0866  0822               	movf	(_rx_buf^(0+384)+2),w
  8622  0867  216D  3188         	fcall	_led_set_custom
  8623  0869  2843               	goto	L15
  8624  086A                     l6033:	
  8625                           
  8626                           ;app_ble.c: 334: if(index == 2 * 4 + 14)
  8627  086A  3016               	movlw	22
  8628  086B  0020               	movlb	0	; select bank0
  8629  086C  0664               	xorwf	_index,w
  8630  086D  1D03               	btfss	3,2
  8631  086E  0008               	return
  8632                           
  8633                           ;app_ble.c: 335: {
  8634                           ;app_ble.c: 336: if(led_set_cycle(&rx_buf[2]))
  8635  086F  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
  8636  0870  21DE  3188         	fcall	_led_set_cycle
  8637  0872  2843               	goto	L15
  8638  0873                     l6039:	
  8639                           
  8640                           ;app_ble.c: 343: if(index == 5)
  8641  0873  3005               	movlw	5
  8642  0874  0020               	movlb	0	; select bank0
  8643  0875  0664               	xorwf	_index,w
  8644  0876  1D03               	btfss	3,2
  8645  0877  0008               	return
  8646                           
  8647                           ;app_ble.c: 344: {
  8648                           ;app_ble.c: 345: led_increase(rx_buf[2], rx_buf[3]);
  8649  0878  0023               	movlb	3	; select bank3
  8650  0879  0823               	movf	(_rx_buf^(0+384)+3),w
  8651  087A  0020               	movlb	0	; select bank0
  8652  087B  00AB               	movwf	led_increase@delt
  8653  087C  0023               	movlb	3	; select bank3
  8654  087D  0822               	movf	(_rx_buf^(0+384)+2),w
  8655  087E  318F  2F9B         	ljmp	_led_increase
  8656  0880                     l6043:	
  8657                           
  8658                           ;app_ble.c: 349: if(index == 5)
  8659  0880  3005               	movlw	5
  8660  0881  0020               	movlb	0	; select bank0
  8661  0882  0664               	xorwf	_index,w
  8662  0883  1D03               	btfss	3,2
  8663  0884  0008               	return
  8664                           
  8665                           ;app_ble.c: 350: {
  8666                           ;app_ble.c: 351: led_decrease(rx_buf[2], rx_buf[3]);
  8667  0885  0023               	movlb	3	; select bank3
  8668  0886  0823               	movf	(_rx_buf^(0+384)+3),w
  8669  0887  0020               	movlb	0	; select bank0
  8670  0888  00AB               	movwf	led_decrease@delt
  8671  0889  0023               	movlb	3	; select bank3
  8672  088A  0822               	movf	(_rx_buf^(0+384)+2),w
  8673  088B  319E  2EAD         	ljmp	_led_decrease
  8674  088D                     l6047:	
  8675                           
  8676                           ;app_ble.c: 355: if(index == 3 + 2 * 4)
  8677  088D  300B               	movlw	11
  8678  088E  0020               	movlb	0	; select bank0
  8679  088F  0664               	xorwf	_index,w
  8680  0890  1D03               	btfss	3,2
  8681  0891  0008               	return
  8682                           
  8683                           ;app_ble.c: 356: {
  8684                           ;app_ble.c: 357: if(led_set_preview(&rx_buf[2]))
  8685  0892  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
  8686  0893  318C  2404  3188   	fcall	_led_set_preview
  8687  0896  3A00               	xorlw	0
  8688  0897  1903               	skipnz
  8689  0898  0008               	return
  8690                           
  8691                           ;app_ble.c: 358: {
  8692                           ;app_ble.c: 359: led_start_preview();
  8693  0899  2A09               	ljmp	l4619
  8694  089A                     l6053:	
  8695                           
  8696                           ;app_ble.c: 364: if(index == 3)
  8697  089A  3003               	movlw	3
  8698  089B  0020               	movlb	0	; select bank0
  8699  089C  0664               	xorwf	_index,w
  8700  089D  1D03               	btfss	3,2
  8701  089E  0008               	return
  8702                           
  8703                           ;app_ble.c: 365: {
  8704                           ;app_ble.c: 366: led_stop_preview();
  8705  089F  2A0D               	ljmp	l4623
  8706  08A0                     l6057:	
  8707                           
  8708                           ;app_ble.c: 370: if(index == 10)
  8709  08A0  300A               	movlw	10
  8710  08A1  0020               	movlb	0	; select bank0
  8711  08A2  0664               	xorwf	_index,w
  8712  08A3  1D03               	btfss	3,2
  8713  08A4  0008               	return
  8714                           
  8715                           ;app_ble.c: 371: {
  8716                           ;app_ble.c: 372: led_set_time(&rx_buf[2]);
  8717  08A5  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
  8718  08A6  2139  3188         	fcall	_led_set_time
  8719  08A8  2846               	goto	l6011
  8720  08A9                     l6063:	
  8721                           
  8722                           ;app_ble.c: 377: if(index == 3)
  8723  08A9  3003               	movlw	3
  8724  08AA  0020               	movlb	0	; select bank0
  8725  08AB  0664               	xorwf	_index,w
  8726  08AC  1D03               	btfss	3,2
  8727  08AD  0008               	return
  8728                           
  8729                           ;app_ble.c: 378: {
  8730                           ;app_ble.c: 379: led_start_flash();
  8731  08AE  2A05               	ljmp	l4643
  8732  08AF                     l6067:	
  8733                           
  8734                           ;app_ble.c: 383: if(rx_buf[2] >= 4 && rx_buf[2] <= 10 && index == rx_buf[2]*(2+4)+4)
  8735  08AF  3004               	movlw	4
  8736  08B0  0222               	subwf	(_rx_buf^(0+384)+2),w
  8737  08B1  1C03               	skipc
  8738  08B2  0008               	return
  8739  08B3  300B               	movlw	11
  8740  08B4  0222               	subwf	(_rx_buf^(0+384)+2),w
  8741  08B5  1803               	skipnc
  8742  08B6  0008               	return
  8743  08B7  0822               	movf	(_rx_buf^(0+384)+2),w
  8744  08B8  0020               	movlb	0	; select bank0
  8745  08B9  3197  27BB  3188   	fcall	PL44	;call to abstracted procedure
  8746  08BC  3196  26BF  3188   	fcall	___wmul
  8747  08BF  0822               	movf	?___wmul,w
  8748  08C0  3E04               	addlw	4
  8749  08C1  00BA               	movwf	??_ble_decode
  8750  08C2  3000               	movlw	0
  8751  08C3  3D23               	addwfc	?___wmul+1,w
  8752  08C4  00BB               	movwf	??_ble_decode+1
  8753  08C5  0864               	movf	_index,w
  8754  08C6  063A               	xorwf	??_ble_decode,w
  8755  08C7  043B               	iorwf	??_ble_decode+1,w
  8756  08C8  1D03               	skipz
  8757  08C9  0008               	return
  8758                           
  8759                           ;app_ble.c: 384: {
  8760                           ;app_ble.c: 385: if(led_set_pro(&rx_buf[2]))
  8761  08CA  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
  8762  08CB  3184  2430  3188   	fcall	_led_set_pro
  8763  08CE  2843               	goto	L15
  8764  08CF                     l6077:	
  8765                           
  8766                           ;app_ble.c: 410: if(index == 5)
  8767  08CF  3005               	movlw	5
  8768  08D0  0020               	movlb	0	; select bank0
  8769  08D1  0664               	xorwf	_index,w
  8770  08D2  1D03               	btfss	3,2
  8771  08D3  0008               	return
  8772                           
  8773                           ;app_ble.c: 411: {
  8774                           ;app_ble.c: 412: INTCONbits.GIE = 0;
  8775  08D4  138B               	bcf	11,7	;volatile
  8776                           
  8777                           ;app_ble.c: 413: NVMADR = 8192 - 1;
  8778  08D5  301F               	movlw	31
  8779  08D6  0031               	movlb	17	; select bank17
  8780  08D7  0092               	movwf	18	;volatile
  8781  08D8  30FF               	movlw	255
  8782  08D9  0091               	movwf	17	;volatile
  8783                           
  8784                           ;app_ble.c: 414: NVMCON1 = 0x94;
  8785  08DA  3094               	movlw	148
  8786  08DB  0095               	movwf	21	;volsfr
  8787                           
  8788                           ;app_ble.c: 415: NVMCON2 = 0x55;
  8789  08DC  3055               	movlw	85
  8790  08DD  0096               	movwf	22	;volsfr
  8791                           
  8792                           ;app_ble.c: 416: NVMCON2 = 0xAA;
  8793  08DE  30AA               	movlw	170
  8794  08DF  0096               	movwf	22	;volsfr
  8795                           
  8796                           ;app_ble.c: 417: NVMCON1bits.WR = 1;
  8797  08E0  1495               	bsf	21,1	;volsfr
  8798                           
  8799                           ;app_ble.c: 418: __nop();
  8800  08E1  0000               	nop
  8801                           
  8802                           ;app_ble.c: 419: __nop();
  8803  08E2  0000               	nop
  8804  08E3                     l509:	
  8805                           ;app_ble.c: 420: while(NVMCON1bits.WR);
  8806                           
  8807  08E3  0031               	movlb	17	; select bank17
  8808  08E4  1895               	btfsc	21,1	;volsfr
  8809  08E5  28E3               	goto	l509
  8810                           
  8811                           ;app_ble.c: 421: NVMCON1bits.WREN = 0;
  8812  08E6  1115               	bcf	21,2	;volsfr
  8813                           
  8814                           ;app_ble.c: 422: INTCONbits.GIE = 1;
  8815  08E7  178B               	bsf	11,7	;volatile
  8816                           
  8817                           ;app_ble.c: 423: ble_ota_ack();
  8818  08E8  3186  2659  3188   	fcall	_ble_ota_ack
  8819                           
  8820                           ;app_ble.c: 424: _delay((unsigned long)((96)*(16000000/4000.0)));
  8821  08EB  3002               	movlw	2
  8822  08EC  0020               	movlb	0	; select bank0
  8823  08ED  00BB               	movwf	??_ble_decode+1
  8824  08EE  30F3               	movlw	243
  8825  08EF  00BA               	movwf	??_ble_decode
  8826  08F0  30B0               	movlw	176
  8827  08F1                     u6597:	
  8828  08F1  0B89               	decfsz	9,f
  8829  08F2  28F1               	goto	u6597
  8830  08F3  0BBA               	decfsz	??_ble_decode,f
  8831  08F4  28F1               	goto	u6597
  8832  08F5  0BBB               	decfsz	??_ble_decode+1,f
  8833  08F6  28F1               	goto	u6597
  8834  08F7  0000               	nop
  8835  08F8  0001               	reset	;# 
  8836  08F9  0008               	return
  8837  08FA                     l6095:	
  8838  08FA  0023               	movlb	3	; select bank3
  8839  08FB  0821               	movf	(_rx_buf^(0+384)+1),w
  8840                           
  8841                           ; Switch size 1, requested type "space"
  8842                           ; Number of cases is 14, Range of values is 0 to 16
  8843                           ; switch strategies available:
  8844                           ; Name         Instructions Cycles
  8845                           ; direct_byte           40     6 (fixed)
  8846                           ; simple_byte           43    22 (average)
  8847                           ; jumptable            260     6 (fixed)
  8848                           ;	Chosen strategy is direct_byte
  8849  08FC  0084               	movwf	4
  8850  08FD  3011               	movlw	17
  8851  08FE  0204               	subwf	4,w
  8852  08FF  1803               	skipnc
  8853  0900  0008               	return
  8854  0901  3188               	movlp	high S6601
  8855  0902  3504               	lslf	4,w
  8856  0903  3E00               	addlw	low S6601
  8857  0904  0082               	movwf	2
  8858  0905                     l472:	
  8859  0905  0008               	return
  8860  0906                     __end_of_ble_decode:	
  8861  0906                     __ptext46:	
  8862 ;; *************** function _led_set_mode *****************
  8863 ;; Defined at:
  8864 ;;		line 1994 in file "src/app_led.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;  m               1    wreg     unsigned char 
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;  m               1    8[BANK0 ] unsigned char 
  8869 ;; Return value:  Size  Location     Type
  8870 ;;                  1    wreg      unsigned char 
  8871 ;; Registers used:
  8872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8873 ;; Tracked objects:
  8874 ;;		On entry : 1F/3
  8875 ;;		On exit  : 1F/0
  8876 ;;		Unchanged: 0/0
  8877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8880 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8881 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8882 ;;Total ram usage:        2 bytes
  8883 ;; Hardware stack levels used:    1
  8884 ;; Hardware stack levels required when called:   10
  8885 ;; This function calls:
  8886 ;;		_led_prepare_to_save
  8887 ;;		_led_turnoff_ramp
  8888 ;;		_led_turnon_ramp
  8889 ;; This function is called by:
  8890 ;;		_ble_decode
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           
  8894                           
  8895                           ;psect for function _led_set_mode
  8896  0906                     _led_set_mode:	
  8897                           
  8898                           ;incstack = 0
  8899                           ; Regs used in _led_set_mode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8900                           ;led_set_mode@m stored from wreg
  8901  0906  0020               	movlb	0	; select bank0
  8902  0907  00A8               	movwf	led_set_mode@m
  8903                           
  8904                           ;app_led.c: 1996: if(led_run_para.mFind || led_run_para.mPrev)
  8905  0908  185D               	btfsc	_led_run_para,0
  8906  0909  3400               	retlw	0
  8907  090A  18DD               	btfsc	_led_run_para,1
  8908                           
  8909                           ;app_led.c: 1997: {
  8910                           ;app_led.c: 1998: return 0;
  8911  090B  3400               	retlw	0
  8912                           
  8913                           ;app_led.c: 1999: }
  8914                           ;app_led.c: 2004: m_led_para.ble_para.mMode = m;
  8915  090C  307F               	movlw	127
  8916  090D  0086               	movwf	6
  8917  090E  3023               	movlw	35
  8918  090F  0087               	movwf	7
  8919  0910  3146               	addfsr 1,6
  8920  0911  0801               	movf	1,w
  8921  0912  0628               	xorwf	led_set_mode@m,w
  8922  0913  39FC               	andlw	-4
  8923  0914  0628               	xorwf	led_set_mode@m,w
  8924  0915  0081               	movwf	1
  8925                           
  8926                           ;app_led.c: 2005: if(m != 1 && m != 2)
  8927  0916  0328               	decf	led_set_mode@m,w
  8928  0917  1903               	btfsc	3,2
  8929  0918  2929               	goto	l4453
  8930  0919  3002               	movlw	2
  8931  091A  0628               	xorwf	led_set_mode@m,w
  8932  091B  1903               	btfsc	3,2
  8933  091C  2929               	goto	l4453
  8934                           
  8935                           ;app_led.c: 2006: {
  8936                           ;app_led.c: 2007: if(m_led_para.ble_para.manual_para.mOn)
  8937  091D  2210  3188         	fcall	PL54	;call to abstracted procedure
  8938  091F  1C01               	btfss	1,0
  8939  0920  2925               	goto	l4451
  8940                           
  8941                           ;app_led.c: 2008: {
  8942                           ;app_led.c: 2017: led_turnon_ramp();
  8943  0921  318D  25F6  3188   	fcall	_led_turnon_ramp
  8944                           
  8945                           ;app_led.c: 2021: }
  8946  0924  2937               	goto	l4455
  8947  0925                     l4451:	
  8948                           
  8949                           ;app_led.c: 2022: else
  8950                           ;app_led.c: 2023: {
  8951                           ;app_led.c: 2024: led_turnoff_ramp();
  8952  0925  318E  269D  3188   	fcall	_led_turnoff_ramp
  8953  0928  2937               	goto	l4455
  8954  0929                     l4453:	
  8955                           
  8956                           ;app_led.c: 2028: else
  8957                           ;app_led.c: 2029: {
  8958                           ;app_led.c: 2030: m_led_para.last_mode = m;
  8959  0929  0828               	movf	led_set_mode@m,w
  8960  092A  00A7               	movwf	??_led_set_mode
  8961  092B  307F               	movlw	127
  8962  092C  0086               	movwf	6
  8963  092D  3023               	movlw	35
  8964  092E  0087               	movwf	7
  8965  092F  3141               	addfsr 1,1
  8966  0930  0DA7               	rlf	??_led_set_mode,f
  8967  0931  0DA7               	rlf	??_led_set_mode,f
  8968  0932  0801               	movf	1,w
  8969  0933  0627               	xorwf	??_led_set_mode,w
  8970  0934  39F3               	andlw	-13
  8971  0935  0627               	xorwf	??_led_set_mode,w
  8972  0936  0081               	movwf	1
  8973  0937                     l4455:	
  8974                           
  8975                           ;app_led.c: 2031: }
  8976                           ;app_led.c: 2033: led_prepare_to_save();
  8977  0937  216C               	fcall	_led_prepare_to_save
  8978                           
  8979                           ;app_led.c: 2034: return 1;
  8980  0938  3401               	retlw	1
  8981  0939                     __end_of_led_set_mode:	
  8982  0939                     __ptext40:	
  8983 ;; *************** function _led_set_time *****************
  8984 ;; Defined at:
  8985 ;;		line 2207 in file "src/app_led.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;  ptime           1    wreg     PTR const unsigned char 
  8988 ;;		 -> rx_buf(80), 
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;  ptime           1    7[BANK0 ] PTR const unsigned char 
  8991 ;;		 -> rx_buf(80), 
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  1    wreg      void 
  8994 ;; Registers used:
  8995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8996 ;; Tracked objects:
  8997 ;;		On entry : 1F/0
  8998 ;;		On exit  : 1F/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9002 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9004 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;Total ram usage:        1 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; Hardware stack levels required when called:   10
  9008 ;; This function calls:
  9009 ;;		_led_indicate_ble
  9010 ;;		_led_prepare_to_save
  9011 ;;		_led_turnoff_ramp
  9012 ;;		_led_turnon_ramp
  9013 ;;		_rtc_set
  9014 ;; This function is called by:
  9015 ;;		_ble_decode
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019                           
  9020                           ;psect for function _led_set_time
  9021  0939                     _led_set_time:	
  9022                           
  9023                           ;incstack = 0
  9024                           ; Regs used in _led_set_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9025                           ;led_set_time@ptime stored from wreg
  9026  0939  00A7               	movwf	led_set_time@ptime
  9027                           
  9028                           ;app_led.c: 2209: rtc_set(ptime);
  9029  093A  2157               	fcall	_rtc_set
  9030                           
  9031                           ;app_led.c: 2211: if(m_led_para.ble_para.mMode == 0)
  9032  093B  318E  26B0  3188   	fcall	PL10	;call to abstracted procedure
  9033                           
  9034                           ;app_led.c: 2212: {
  9035                           ;app_led.c: 2213: if(m_led_para.ble_para.manual_para.mOn)
  9036  093E  318F  274B  3188   	fcall	PL118	;call to abstracted procedure
  9037  0941  1D03               	skipz
  9038  0942  2950               	goto	L16
  9039  0943  3147               	addfsr 1,7
  9040  0944  1C01               	btfss	1,0
  9041  0945  294A               	goto	l4635
  9042                           
  9043                           ;app_led.c: 2214: {
  9044                           ;app_led.c: 2215: led_turnon_ramp();
  9045  0946  318D  25F6  3188   	fcall	_led_turnon_ramp
  9046                           
  9047                           ;app_led.c: 2216: }
  9048  0949  294D               	goto	l4637
  9049  094A                     l4635:	
  9050                           
  9051                           ;app_led.c: 2217: else
  9052                           ;app_led.c: 2218: {
  9053                           ;app_led.c: 2219: led_turnoff_ramp();
  9054  094A  318E  269D  3188   	fcall	_led_turnoff_ramp
  9055  094D                     l4637:	
  9056                           
  9057                           ;app_led.c: 2220: }
  9058                           ;app_led.c: 2221: }
  9059                           ;app_led.c: 2222: m_led_para.mState = 3;
  9060  094D  318F  274B  3188   	fcall	PL118	;call to abstracted procedure
  9061  0950                     L16:	
  9062  0950  3003               	movlw	3
  9063  0951  3141               	addfsr 1,1
  9064  0952  0481               	iorwf	1,f
  9065                           
  9066                           ;app_led.c: 2223: led_indicate_ble();
  9067  0953  318E  26A9  3188   	fcall	_led_indicate_ble
  9068                           
  9069                           ;app_led.c: 2224: led_prepare_to_save();
  9070  0956  2BD3               	ljmp	PL128
  9071  0957                     __end_of_led_set_time:	
  9072  0957                     __ptext41:	
  9073 ;; *************** function _rtc_set *****************
  9074 ;; Defined at:
  9075 ;;		line 110 in file "src/app_rtc.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;  ptime           1    wreg     PTR const unsigned char 
  9078 ;;		 -> rx_buf(80), 
  9079 ;; Auto vars:     Size  Location     Type
  9080 ;;  ptime           1    2[BANK0 ] PTR const unsigned char 
  9081 ;;		 -> rx_buf(80), 
  9082 ;;  i               1    3[BANK0 ] unsigned char 
  9083 ;; Return value:  Size  Location     Type
  9084 ;;                  1    wreg      void 
  9085 ;; Registers used:
  9086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9087 ;; Tracked objects:
  9088 ;;		On entry : 1F/0
  9089 ;;		On exit  : 1F/0
  9090 ;;		Unchanged: 0/0
  9091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;Total ram usage:        2 bytes
  9097 ;; Hardware stack levels used:    1
  9098 ;; Hardware stack levels required when called:    9
  9099 ;; This function calls:
  9100 ;;		Nothing
  9101 ;; This function is called by:
  9102 ;;		_led_set_time
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106                           
  9107                           ;psect for function _rtc_set
  9108  0957                     _rtc_set:	
  9109                           
  9110                           ;incstack = 0
  9111                           ; Regs used in _rtc_set: [wreg-fsr1h+status,2+status,0]
  9112                           ;rtc_set@ptime stored from wreg
  9113  0957  00A2               	movwf	rtc_set@ptime
  9114                           
  9115                           ;app_rtc.c: 112: (INTCONbits.GIE = 0);
  9116  0958  138B               	bcf	11,7	;volatile
  9117                           
  9118                           ;app_rtc.c: 113: for(uint8_t i = 0; i < 7; i++)
  9119  0959  01A3               	clrf	rtc_set@i
  9120  095A                     l4027:	
  9121                           
  9122                           ;app_rtc.c: 114: {
  9123                           ;app_rtc.c: 115: m_current_time.array[i] = *ptime++;
  9124  095A  0823               	movf	rtc_set@i,w
  9125  095B  3EDF               	addlw	(low (_m_current_time| 0))& (0+255)
  9126  095C  0086               	movwf	6
  9127  095D  0187               	clrf	7
  9128  095E  0822               	movf	rtc_set@ptime,w
  9129  095F  0084               	movwf	4
  9130  0960  3001               	movlw	1	; select bank2/3
  9131  0961  0085               	movwf	5
  9132  0962  0800               	movf	0,w
  9133  0963  0081               	movwf	1
  9134  0964  3007               	movlw	7
  9135  0965  0AA2               	incf	rtc_set@ptime,f
  9136  0966  0AA3               	incf	rtc_set@i,f
  9137  0967  0223               	subwf	rtc_set@i,w
  9138  0968  1C03               	skipc
  9139  0969  295A               	goto	l4027
  9140                           
  9141                           ;app_rtc.c: 116: }
  9142                           ;app_rtc.c: 117: (INTCONbits.GIE = 1);
  9143  096A  178B               	bsf	11,7	;volatile
  9144  096B  0008               	return
  9145  096C                     __end_of_rtc_set:	
  9146  096C                     __ptext56:	
  9147 ;; *************** function _led_prepare_to_save *****************
  9148 ;; Defined at:
  9149 ;;		line 1920 in file "src/app_led.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;		None
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;		None
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  1    wreg      void 
  9156 ;; Registers used:
  9157 ;;		wreg
  9158 ;; Tracked objects:
  9159 ;;		On entry : 1D/2
  9160 ;;		On exit  : 1F/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9167 ;;Total ram usage:        0 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:    9
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_led_set_mode
  9174 ;;		_led_set_power
  9175 ;;		_led_set_bright
  9176 ;;		_led_set_custom
  9177 ;;		_led_set_cycle
  9178 ;;		_led_set_pro
  9179 ;;		_led_increase
  9180 ;;		_led_decrease
  9181 ;;		_led_set_time
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185                           
  9186                           ;psect for function _led_prepare_to_save
  9187  096C                     _led_prepare_to_save:	
  9188                           
  9189                           ;app_led.c: 1922: led_run_para.mSave = 1;
  9190                           
  9191                           ;app_led.c: 1923: led_run_para.save_delay_count = 3;
  9192                           
  9193                           ;incstack = 0
  9194                           ; Regs used in _led_prepare_to_save: [wreg]
  9195  096C  2BD3               	ljmp	PL128	;call to abstracted procedure
  9196  096D                     __end_of_led_prepare_to_save:	
  9197  096D                     __ptext50:	
  9198 ;; *************** function _led_set_custom *****************
  9199 ;; Defined at:
  9200 ;;		line 2095 in file "src/app_led.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;  idx             1    wreg     unsigned char 
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;  idx             1   24[BANK0 ] unsigned char 
  9205 ;;  i               1   25[BANK0 ] unsigned char 
  9206 ;; Return value:  Size  Location     Type
  9207 ;;                  1    wreg      unsigned char 
  9208 ;; Registers used:
  9209 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9210 ;; Tracked objects:
  9211 ;;		On entry : 1F/3
  9212 ;;		On exit  : 1F/0
  9213 ;;		Unchanged: 0/0
  9214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9217 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9218 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9219 ;;Total ram usage:       17 bytes
  9220 ;; Hardware stack levels used:    1
  9221 ;; Hardware stack levels required when called:   10
  9222 ;; This function calls:
  9223 ;;		___lwdiv
  9224 ;;		_led_prepare_to_save
  9225 ;; This function is called by:
  9226 ;;		_ble_decode
  9227 ;; This function uses a non-reentrant model
  9228 ;;
  9229                           
  9230                           
  9231                           ;psect for function _led_set_custom
  9232  096D                     _led_set_custom:	
  9233                           
  9234                           ;incstack = 0
  9235                           ; Regs used in _led_set_custom: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9236                           ;led_set_custom@idx stored from wreg
  9237  096D  0020               	movlb	0	; select bank0
  9238  096E  00B8               	movwf	led_set_custom@idx
  9239                           
  9240                           ;app_led.c: 2107: if(m_led_para.ble_para.manual_para.mOn && idx < 4)
  9241  096F  2210  3188         	fcall	PL54	;call to abstracted procedure
  9242  0971  1C01               	btfss	1,0
  9243  0972  3400               	retlw	0
  9244  0973  3004               	movlw	4
  9245  0974  0238               	subwf	led_set_custom@idx,w
  9246  0975  1803               	skipnc
  9247  0976  3400               	retlw	0
  9248                           
  9249                           ;app_led.c: 2108: {
  9250                           ;app_led.c: 2109: for(uint8_t i = 0; i < 4; i++)
  9251  0977  01B9               	clrf	led_set_custom@i
  9252  0978                     l4523:	
  9253                           
  9254                           ;app_led.c: 2110: {
  9255                           ;app_led.c: 2111: m_led_para.ble_para.manual_para.mCustomBright[idx][i] = m_led_para.ble
      +                          _para.manual_para.mBright[i]/10;
  9256  0978  300A               	movlw	10
  9257  0979  00A2               	movwf	___lwdiv@divisor
  9258  097A  01A3               	clrf	___lwdiv@divisor+1
  9259  097B  0839               	movf	led_set_custom@i,w
  9260  097C  00A9               	movwf	??_led_set_custom
  9261  097D  3088               	movlw	136
  9262  097E  01AA               	clrf	??_led_set_custom+1
  9263  097F  35A9               	lslf	??_led_set_custom,f
  9264  0980  0DAA               	rlf	??_led_set_custom+1,f
  9265  0981  00AB               	movwf	??_led_set_custom+2
  9266  0982  3023               	movlw	35
  9267  0983  00AC               	movwf	??_led_set_custom+3
  9268  0984  0829               	movf	??_led_set_custom,w
  9269  0985  072B               	addwf	??_led_set_custom+2,w
  9270  0986  0086               	movwf	6
  9271  0987  082A               	movf	??_led_set_custom+1,w
  9272  0988  3D2C               	addwfc	??_led_set_custom+3,w
  9273  0989  0087               	movwf	7
  9274  098A  3F40               	moviw [0]fsr1
  9275  098B  00A4               	movwf	___lwdiv@dividend
  9276  098C  3F41               	moviw [1]fsr1
  9277  098D  00A5               	movwf	___lwdiv@dividend+1
  9278  098E  21B9  3188         	fcall	___lwdiv
  9279  0990  0822               	movf	?___lwdiv,w
  9280  0991  00AD               	movwf	??_led_set_custom+4
  9281  0992  0839               	movf	led_set_custom@i,w
  9282  0993  00AE               	movwf	??_led_set_custom+5
  9283  0994  01AF               	clrf	??_led_set_custom+6
  9284  0995  0838               	movf	led_set_custom@idx,w
  9285  0996  00B0               	movwf	??_led_set_custom+7
  9286  0997  3090               	movlw	144
  9287  0998  01B1               	clrf	??_led_set_custom+8
  9288  0999  35B0               	lslf	??_led_set_custom+7,f
  9289  099A  0DB1               	rlf	??_led_set_custom+8,f
  9290  099B  35B0               	lslf	??_led_set_custom+7,f
  9291  099C  0DB1               	rlf	??_led_set_custom+8,f
  9292  099D  00B2               	movwf	??_led_set_custom+9
  9293  099E  3023               	movlw	35
  9294  099F  00B3               	movwf	??_led_set_custom+10
  9295  09A0  0830               	movf	??_led_set_custom+7,w
  9296  09A1  0732               	addwf	??_led_set_custom+9,w
  9297  09A2  00B4               	movwf	??_led_set_custom+11
  9298  09A3  0831               	movf	??_led_set_custom+8,w
  9299  09A4  3D33               	addwfc	??_led_set_custom+10,w
  9300  09A5  00B5               	movwf	??_led_set_custom+12
  9301  09A6  082E               	movf	??_led_set_custom+5,w
  9302  09A7  0734               	addwf	??_led_set_custom+11,w
  9303  09A8  00B6               	movwf	??_led_set_custom+13
  9304  09A9  082F               	movf	??_led_set_custom+6,w
  9305  09AA  3D35               	addwfc	??_led_set_custom+12,w
  9306  09AB  00B7               	movwf	??_led_set_custom+14
  9307  09AC  0836               	movf	??_led_set_custom+13,w
  9308  09AD  0086               	movwf	6
  9309  09AE  0837               	movf	??_led_set_custom+14,w
  9310  09AF  0087               	movwf	7
  9311  09B0  082D               	movf	??_led_set_custom+4,w
  9312  09B1  0081               	movwf	1
  9313  09B2  3004               	movlw	4
  9314  09B3  0AB9               	incf	led_set_custom@i,f
  9315  09B4  0239               	subwf	led_set_custom@i,w
  9316  09B5  1C03               	skipc
  9317  09B6  2978               	goto	l4523
  9318                           
  9319                           ;app_led.c: 2112: }
  9320                           ;app_led.c: 2113: led_prepare_to_save();
  9321  09B7  216C               	fcall	_led_prepare_to_save
  9322                           
  9323                           ;app_led.c: 2114: return 1;
  9324  09B8  3401               	retlw	1
  9325  09B9                     __end_of_led_set_custom:	
  9326                           ;app_led.c: 2115: }
  9327                           ;app_led.c: 2116: return 0;
  9328                           
  9329  09B9                     __ptext51:	
  9330 ;; *************** function ___lwdiv *****************
  9331 ;; Defined at:
  9332 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;  divisor         2    2[BANK0 ] unsigned int 
  9335 ;;  dividend        2    4[BANK0 ] unsigned int 
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;  quotient        2    6[BANK0 ] unsigned int 
  9338 ;;  counter         1    8[BANK0 ] unsigned char 
  9339 ;; Return value:  Size  Location     Type
  9340 ;;                  2    2[BANK0 ] unsigned int 
  9341 ;; Registers used:
  9342 ;;		wreg, status,2, status,0
  9343 ;; Tracked objects:
  9344 ;;		On entry : 1F/0
  9345 ;;		On exit  : 1F/0
  9346 ;;		Unchanged: 0/0
  9347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9348 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9349 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9351 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9352 ;;Total ram usage:        7 bytes
  9353 ;; Hardware stack levels used:    1
  9354 ;; Hardware stack levels required when called:    9
  9355 ;; This function calls:
  9356 ;;		Nothing
  9357 ;; This function is called by:
  9358 ;;		_led_set_custom
  9359 ;; This function uses a non-reentrant model
  9360 ;;
  9361                           
  9362                           
  9363                           ;psect for function ___lwdiv
  9364  09B9                     ___lwdiv:	
  9365                           
  9366                           ;incstack = 0
  9367                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9368  09B9  01A6               	clrf	___lwdiv@quotient
  9369  09BA  01A7               	clrf	___lwdiv@quotient+1
  9370  09BB  0822               	movf	___lwdiv@divisor,w
  9371  09BC  0423               	iorwf	___lwdiv@divisor+1,w
  9372  09BD  1903               	btfsc	3,2
  9373  09BE  29D9               	goto	l4217
  9374  09BF  01A8               	clrf	___lwdiv@counter
  9375  09C0                     L17:	
  9376  09C0  0AA8               	incf	___lwdiv@counter,f
  9377  09C1  1BA3               	btfsc	___lwdiv@divisor+1,7
  9378  09C2  29C6               	goto	l4205
  9379  09C3  35A2               	lslf	___lwdiv@divisor,f
  9380  09C4  0DA3               	rlf	___lwdiv@divisor+1,f
  9381  09C5  29C0               	goto	L17
  9382  09C6                     l4205:	
  9383  09C6  35A6               	lslf	___lwdiv@quotient,f
  9384  09C7  0DA7               	rlf	___lwdiv@quotient+1,f
  9385  09C8  0823               	movf	___lwdiv@divisor+1,w
  9386  09C9  0225               	subwf	___lwdiv@dividend+1,w
  9387  09CA  1D03               	skipz
  9388  09CB  29CE               	goto	u3145
  9389  09CC  0822               	movf	___lwdiv@divisor,w
  9390  09CD  0224               	subwf	___lwdiv@dividend,w
  9391  09CE                     u3145:	
  9392  09CE  1C03               	skipc
  9393  09CF  29D5               	goto	l4213
  9394  09D0  0822               	movf	___lwdiv@divisor,w
  9395  09D1  02A4               	subwf	___lwdiv@dividend,f
  9396  09D2  0823               	movf	___lwdiv@divisor+1,w
  9397  09D3  3BA5               	subwfb	___lwdiv@dividend+1,f
  9398  09D4  1426               	bsf	___lwdiv@quotient,0
  9399  09D5                     l4213:	
  9400  09D5  36A3               	lsrf	___lwdiv@divisor+1,f
  9401  09D6  0CA2               	rrf	___lwdiv@divisor,f
  9402  09D7  0BA8               	decfsz	___lwdiv@counter,f
  9403  09D8  29C6               	goto	l4205
  9404  09D9                     l4217:	
  9405  09D9  0827               	movf	___lwdiv@quotient+1,w
  9406  09DA  00A3               	movwf	?___lwdiv+1
  9407  09DB  0826               	movf	___lwdiv@quotient,w
  9408  09DC  00A2               	movwf	?___lwdiv
  9409  09DD  0008               	return
  9410  09DE                     __end_of___lwdiv:	
  9411  09DE                     __ptext49:	
  9412 ;; *************** function _led_set_cycle *****************
  9413 ;; Defined at:
  9414 ;;		line 2119 in file "src/app_led.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  pbuf            1    wreg     const PTR const unsigned
  9417 ;;		 -> rx_buf(80), 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  pbuf            1   11[BANK0 ] const PTR const unsigned
  9420 ;;		 -> rx_buf(80), 
  9421 ;;  i               1   12[BANK0 ] unsigned char 
  9422 ;;  len             1   10[BANK0 ] unsigned char 
  9423 ;; Return value:  Size  Location     Type
  9424 ;;                  1    wreg      unsigned char 
  9425 ;; Registers used:
  9426 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9427 ;; Tracked objects:
  9428 ;;		On entry : 1F/0
  9429 ;;		On exit  : 1F/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9433 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9434 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9435 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9436 ;;Total ram usage:       11 bytes
  9437 ;; Hardware stack levels used:    1
  9438 ;; Hardware stack levels required when called:   10
  9439 ;; This function calls:
  9440 ;;		_led_prepare_to_save
  9441 ;; This function is called by:
  9442 ;;		_ble_decode
  9443 ;; This function uses a non-reentrant model
  9444 ;;
  9445                           
  9446                           
  9447                           ;psect for function _led_set_cycle
  9448  09DE                     _led_set_cycle:	
  9449                           
  9450                           ;incstack = 0
  9451                           ; Regs used in _led_set_cycle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9452                           ;led_set_cycle@pbuf stored from wreg
  9453  09DE  00AB               	movwf	led_set_cycle@pbuf
  9454                           
  9455                           ;app_led.c: 2125: uint8_t len = sizeof(m_led_para.ble_para.auto_para.array);
  9456  09DF  3013               	movlw	19
  9457  09E0  00AA               	movwf	led_set_cycle@len
  9458                           
  9459                           ;app_led.c: 2126: for(uint8_t i = 0; i < len; i++)
  9460  09E1  01AC               	clrf	led_set_cycle@i
  9461  09E2                     l4547:	
  9462  09E2  082A               	movf	led_set_cycle@len,w
  9463  09E3  022C               	subwf	led_set_cycle@i,w
  9464  09E4  1803               	btfsc	3,0
  9465  09E5  2A03               	goto	l4549
  9466                           
  9467                           ;app_led.c: 2127: {
  9468                           ;app_led.c: 2128: m_led_para.ble_para.auto_para.array[i] = *(pbuf+i);
  9469  09E6  082C               	movf	led_set_cycle@i,w
  9470  09E7  072B               	addwf	led_set_cycle@pbuf,w
  9471  09E8  00A2               	movwf	??_led_set_cycle
  9472  09E9  0086               	movwf	6
  9473  09EA  3001               	movlw	1	; select bank2/3
  9474  09EB  0087               	movwf	7
  9475  09EC  0801               	movf	1,w
  9476  09ED  00A3               	movwf	??_led_set_cycle+1
  9477  09EE  082C               	movf	led_set_cycle@i,w
  9478  09EF  00A4               	movwf	??_led_set_cycle+2
  9479  09F0  30A0               	movlw	160
  9480  09F1  01A5               	clrf	??_led_set_cycle+3
  9481  09F2  00A6               	movwf	??_led_set_cycle+4
  9482  09F3  3023               	movlw	35
  9483  09F4  00A7               	movwf	??_led_set_cycle+5
  9484  09F5  0824               	movf	??_led_set_cycle+2,w
  9485  09F6  0726               	addwf	??_led_set_cycle+4,w
  9486  09F7  00A8               	movwf	??_led_set_cycle+6
  9487  09F8  0825               	movf	??_led_set_cycle+3,w
  9488  09F9  3D27               	addwfc	??_led_set_cycle+5,w
  9489  09FA  00A9               	movwf	??_led_set_cycle+7
  9490  09FB  0828               	movf	??_led_set_cycle+6,w
  9491  09FC  0086               	movwf	6
  9492  09FD  0829               	movf	??_led_set_cycle+7,w
  9493  09FE  0087               	movwf	7
  9494  09FF  0823               	movf	??_led_set_cycle+1,w
  9495  0A00  0081               	movwf	1
  9496  0A01  0AAC               	incf	led_set_cycle@i,f
  9497  0A02  29E2               	goto	l4547
  9498  0A03                     l4549:	
  9499                           
  9500                           ;app_led.c: 2129: }
  9501                           ;app_led.c: 2130: led_prepare_to_save();
  9502  0A03  216C               	fcall	_led_prepare_to_save
  9503                           
  9504                           ;app_led.c: 2131: return 1;
  9505  0A04  3401               	retlw	1
  9506  0A05                     __end_of_led_set_cycle:	
  9507  0A05                     __ptext39:	
  9508 ;; *************** function _led_start_flash *****************
  9509 ;; Defined at:
  9510 ;;		line 1863 in file "src/app_led.c"
  9511 ;; Parameters:    Size  Location     Type
  9512 ;;		None
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;		None
  9515 ;; Return value:  Size  Location     Type
  9516 ;;                  1    wreg      void 
  9517 ;; Registers used:
  9518 ;;		wreg
  9519 ;; Tracked objects:
  9520 ;;		On entry : 1F/0
  9521 ;;		On exit  : 1F/0
  9522 ;;		Unchanged: 0/0
  9523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9528 ;;Total ram usage:        0 bytes
  9529 ;; Hardware stack levels used:    1
  9530 ;; Hardware stack levels required when called:    9
  9531 ;; This function calls:
  9532 ;;		Nothing
  9533 ;; This function is called by:
  9534 ;;		_ble_decode
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           
  9539                           ;psect for function _led_start_flash
  9540  0A05                     _led_start_flash:	
  9541  0A05                     l4643:	
  9542                           ;incstack = 0
  9543                           ; Regs used in _led_start_flash: [wreg]
  9544                           
  9545  0A05  3003               	movlw	3
  9546                           
  9547                           ;app_led.c: 1865: led_run_para.mFind = 1;
  9548  0A06  145D               	bsf	_led_run_para,0
  9549                           
  9550                           ;app_led.c: 1866: led_run_para.flash_count = 3;
  9551  0A07  00DE               	movwf	_led_run_para+1
  9552  0A08  0008               	return
  9553  0A09                     __end_of_led_start_flash:	
  9554  0A09                     __ptext38:	
  9555 ;; *************** function _led_start_preview *****************
  9556 ;; Defined at:
  9557 ;;		line 1894 in file "src/app_led.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;		None
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;		None
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  1    wreg      void 
  9564 ;; Registers used:
  9565 ;;		wreg
  9566 ;; Tracked objects:
  9567 ;;		On entry : 1F/0
  9568 ;;		On exit  : 1F/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9575 ;;Total ram usage:        0 bytes
  9576 ;; Hardware stack levels used:    1
  9577 ;; Hardware stack levels required when called:    9
  9578 ;; This function calls:
  9579 ;;		Nothing
  9580 ;; This function is called by:
  9581 ;;		_ble_decode
  9582 ;; This function uses a non-reentrant model
  9583 ;;
  9584                           
  9585                           
  9586                           ;psect for function _led_start_preview
  9587  0A09                     _led_start_preview:	
  9588  0A09                     l4619:	
  9589                           ;incstack = 0
  9590                           ; Regs used in _led_start_preview: [wreg]
  9591                           
  9592  0A09  3003               	movlw	3
  9593                           
  9594                           ;app_led.c: 1896: led_run_para.mPrev = 1;
  9595  0A0A  14DD               	bsf	_led_run_para,1
  9596                           
  9597                           ;app_led.c: 1897: led_run_para.prev_count = 3;
  9598  0A0B  00DF               	movwf	_led_run_para+2
  9599  0A0C  0008               	return
  9600  0A0D                     __end_of_led_start_preview:	
  9601  0A0D                     __ptext37:	
  9602 ;; *************** function _led_stop_preview *****************
  9603 ;; Defined at:
  9604 ;;		line 1900 in file "src/app_led.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;		None
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;		None
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  1    wreg      void 
  9611 ;; Registers used:
  9612 ;;		status,2
  9613 ;; Tracked objects:
  9614 ;;		On entry : 1F/0
  9615 ;;		On exit  : 1F/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9622 ;;Total ram usage:        0 bytes
  9623 ;; Hardware stack levels used:    1
  9624 ;; Hardware stack levels required when called:    9
  9625 ;; This function calls:
  9626 ;;		Nothing
  9627 ;; This function is called by:
  9628 ;;		_ble_decode
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632                           
  9633                           ;psect for function _led_stop_preview
  9634  0A0D                     _led_stop_preview:	
  9635  0A0D                     l4623:	
  9636                           ;incstack = 0
  9637                           ; Regs used in _led_stop_preview: [status,2]
  9638                           
  9639                           
  9640                           ;app_led.c: 1902: led_run_para.mPrev = 0;
  9641  0A0D  10DD               	bcf	_led_run_para,1
  9642                           
  9643                           ;app_led.c: 1903: led_run_para.prev_count = 0;
  9644  0A0E  01DF               	clrf	_led_run_para+2
  9645  0A0F  0008               	return
  9646  0A10                     __end_of_led_stop_preview:	
  9647  0A10                     PL54:	
  9648  0A10  307F               	movlw	127
  9649  0A11  0086               	movwf	6
  9650  0A12  3023               	movlw	35
  9651  0A13  0087               	movwf	7
  9652  0A14  3147               	addfsr 1,7
  9653  0A15  0008               	return
  9654  0A16                     __end_ofPL54:	
  9655  0A16                     __ptext103:	
  9656 ;; *************** function _led_state_night_short_press_cb *****************
  9657 ;; Defined at:
  9658 ;;		line 898 in file "src/app_led.c"
  9659 ;; Parameters:    Size  Location     Type
  9660 ;;		None
  9661 ;; Auto vars:     Size  Location     Type
  9662 ;;		None
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  1    wreg      void 
  9665 ;; Registers used:
  9666 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9667 ;; Tracked objects:
  9668 ;;		On entry : 1F/1
  9669 ;;		On exit  : 1F/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9675 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9676 ;;Total ram usage:        1 bytes
  9677 ;; Hardware stack levels used:    1
  9678 ;; Hardware stack levels required when called:    1
  9679 ;; This function calls:
  9680 ;;		i1_led_indicate_ble
  9681 ;;		i1_led_prepare_to_save
  9682 ;; This function is called by:
  9683 ;;		_led_state_night_cb
  9684 ;; This function uses a non-reentrant model
  9685 ;;
  9686                           
  9687                           
  9688                           ;psect for function _led_state_night_short_press_cb
  9689  0A16                     _led_state_night_short_press_cb:	
  9690  0A16                     i1l3841:	
  9691                           ;incstack = 0
  9692                           ; Regs used in _led_state_night_short_press_cb: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  9693                           
  9694                           
  9695                           ;app_led.c: 900: m_led_para.mState++;
  9696  0A16  2381  3188         	fcall	PL14	;call to abstracted procedure
  9697  0A18  00F0               	movwf	??_led_state_night_short_press_cb
  9698  0A19  0AF0               	incf	??_led_state_night_short_press_cb,f
  9699  0A1A  0801               	movf	1,w
  9700  0A1B  0670               	xorwf	??_led_state_night_short_press_cb,w
  9701  0A1C  39FC               	andlw	-4
  9702  0A1D  0670               	xorwf	??_led_state_night_short_press_cb,w
  9703  0A1E  0081               	movwf	1
  9704                           
  9705                           ;app_led.c: 901: if(m_led_para.last_mode == 2)
  9706  0A1F  307F               	movlw	127
  9707  0A20  0086               	movwf	6
  9708  0A21  3023               	movlw	35
  9709  0A22  0087               	movwf	7
  9710                           
  9711                           ;app_led.c: 902: {
  9712                           ;app_led.c: 903: m_led_para.ble_para.mMode = 2;
  9713  0A23  239B  3188         	fcall	PL74	;call to abstracted procedure
  9714  0A25  3146               	addfsr 1,6
  9715  0A26  1D03               	skipz
  9716  0A27  2A2C               	goto	L24
  9717  0A28  0801               	movf	1,w
  9718  0A29  39FC               	andlw	-4
  9719  0A2A  3802               	iorlw	2
  9720  0A2B  2A2F               	goto	L23
  9721  0A2C                     L24:	
  9722                           ;app_led.c: 905: else
  9723                           ;app_led.c: 906: {
  9724                           ;app_led.c: 907: m_led_para.ble_para.mMode = 1;
  9725                           
  9726                           ;app_led.c: 904: }
  9727                           
  9728  0A2C  0801               	movf	1,w
  9729  0A2D  39FC               	andlw	-4
  9730  0A2E  3801               	iorlw	1
  9731  0A2F                     L23:	
  9732  0A2F  0081               	movwf	1
  9733                           
  9734                           ;app_led.c: 908: }
  9735                           ;app_led.c: 909: led_indicate_ble();
  9736  0A30  2234  3188         	fcall	i1_led_indicate_ble
  9737                           
  9738                           ;app_led.c: 910: led_prepare_to_save();
  9739  0A32  2350               	fcall	i1_led_prepare_to_save
  9740  0A33  0008               	return
  9741  0A34                     __end_of_led_state_night_short_press_cb:	
  9742  0A34                     __ptext104:	
  9743 ;; *************** function i1_led_indicate_ble *****************
  9744 ;; Defined at:
  9745 ;;		line 732 in file "src/app_led.c"
  9746 ;; Parameters:    Size  Location     Type
  9747 ;;		None
  9748 ;; Auto vars:     Size  Location     Type
  9749 ;;		None
  9750 ;; Return value:  Size  Location     Type
  9751 ;;                  1    wreg      void 
  9752 ;; Registers used:
  9753 ;;		None
  9754 ;; Tracked objects:
  9755 ;;		On entry : 1F/1
  9756 ;;		On exit  : 1F/2
  9757 ;;		Unchanged: 0/0
  9758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9763 ;;Total ram usage:        0 bytes
  9764 ;; Hardware stack levels used:    1
  9765 ;; This function calls:
  9766 ;;		Nothing
  9767 ;; This function is called by:
  9768 ;;		_led_state_night_short_press_cb
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           
  9773                           ;psect for function i1_led_indicate_ble
  9774  0A34                     i1_led_indicate_ble:	
  9775                           
  9776                           ;app_led.c: 734: (LATBbits.LATB6 = 1);
  9777                           
  9778                           ;incstack = 0
  9779                           ; Regs used in i1_led_indicate_ble: []
  9780                           
  9781                           ;app_led.c: 735: (LATAbits.LATA1 = 0);
  9782                           
  9783                           ;app_led.c: 736: (LATBbits.LATB7 = 1);
  9784  0A34  2BCE               	ljmp	PL126	;call to abstracted procedure
  9785  0A35                     __end_ofi1_led_indicate_ble:	
  9786  0A35                     __ptext96:	
  9787 ;; *************** function _led_state_day_cb *****************
  9788 ;; Defined at:
  9789 ;;		line 872 in file "src/app_led.c"
  9790 ;; Parameters:    Size  Location     Type
  9791 ;;  key             1    9[COMMON] unsigned char 
  9792 ;;  state           1   10[COMMON] enum E8242
  9793 ;; Auto vars:     Size  Location     Type
  9794 ;;		None
  9795 ;; Return value:  Size  Location     Type
  9796 ;;                  1    wreg      void 
  9797 ;; Registers used:
  9798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9799 ;; Tracked objects:
  9800 ;;		On entry : 1F/1
  9801 ;;		On exit  : 1E/0
  9802 ;;		Unchanged: 0/0
  9803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;Total ram usage:        2 bytes
  9809 ;; Hardware stack levels used:    1
  9810 ;; Hardware stack levels required when called:    2
  9811 ;; This function calls:
  9812 ;;		_led_state_day_cont_press_cb
  9813 ;;		_led_state_day_long_press_cb
  9814 ;;		_led_state_day_release_cb
  9815 ;;		_led_state_day_short_press_cb
  9816 ;; This function is called by:
  9817 ;;		_led_touch_cb
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821                           
  9822                           ;psect for function _led_state_day_cb
  9823  0A35                     _led_state_day_cb:	
  9824                           
  9825                           ;app_led.c: 874: if(key == 0x01)
  9826                           
  9827                           ;incstack = 0
  9828                           ; Regs used in _led_state_day_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9829  0A35  0B79               	decfsz	led_state_day_cb@key,w
  9830  0A36  0008               	return
  9831                           
  9832                           ;app_led.c: 889: break;
  9833  0A37  087A               	movf	led_state_day_cb@state,w
  9834                           
  9835                           ; Switch size 1, requested type "space"
  9836                           ; Number of cases is 4, Range of values is 0 to 3
  9837                           ; switch strategies available:
  9838                           ; Name         Instructions Cycles
  9839                           ; simple_byte           13     7 (average)
  9840                           ; direct_byte           14     6 (fixed)
  9841                           ; jumptable            260     6 (fixed)
  9842                           ;	Chosen strategy is simple_byte
  9843  0A38  3A00               	xorlw	0	; case 0
  9844  0A39  1903               	skipnz
  9845  0A3A  2A45               	goto	i1l3891
  9846  0A3B  3A01               	xorlw	1	; case 1
  9847  0A3C  1903               	skipnz
  9848  0A3D  2A46               	goto	i1l3893
  9849  0A3E  3A03               	xorlw	3	; case 2
  9850  0A3F  1903               	skipnz
  9851  0A40  2A47               	goto	i1l3895
  9852  0A41  3A01               	xorlw	1	; case 3
  9853  0A42  1903               	skipnz
  9854  0A43  2A48               	goto	i1l3897
  9855  0A44  2A49               	goto	i1l816
  9856  0A45                     i1l3891:	
  9857                           
  9858                           ;app_led.c: 879: led_state_day_short_press_cb();
  9859  0A45  2AAE               	ljmp	i1l3821
  9860  0A46                     i1l3893:	
  9861                           ;app_led.c: 880: break;
  9862                           
  9863                           
  9864                           ;app_led.c: 882: led_state_day_long_press_cb();
  9865  0A46  2B54               	ljmp	i1l3723
  9866  0A47                     i1l3895:	
  9867                           ;app_led.c: 883: break;
  9868                           
  9869                           
  9870                           ;app_led.c: 885: led_state_day_cont_press_cb();
  9871  0A47  2A5A               	ljmp	i1l3831
  9872  0A48                     i1l3897:	
  9873                           ;app_led.c: 886: break;
  9874                           
  9875                           
  9876                           ;app_led.c: 888: led_state_day_release_cb();
  9877  0A48  2B74               	ljmp	i1l3839
  9878  0A49                     i1l816:	
  9879  0A49  0008               	return
  9880  0A4A                     __end_of_led_state_day_cb:	
  9881  0A4A                     __ptext108:	
  9882 ;; *************** function _led_state_night_cont_press_cb *****************
  9883 ;; Defined at:
  9884 ;;		line 918 in file "src/app_led.c"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;		None
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;		None
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  1    wreg      void 
  9891 ;; Registers used:
  9892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9893 ;; Tracked objects:
  9894 ;;		On entry : 1F/1
  9895 ;;		On exit  : 1E/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9902 ;;Total ram usage:        0 bytes
  9903 ;; Hardware stack levels used:    1
  9904 ;; Hardware stack levels required when called:    1
  9905 ;; This function calls:
  9906 ;;		i1_decrease
  9907 ;;		i1_increase
  9908 ;;		i1_led_update_night_bright
  9909 ;; This function is called by:
  9910 ;;		_led_state_night_cb
  9911 ;; This function uses a non-reentrant model
  9912 ;;
  9913                           
  9914                           
  9915                           ;psect for function _led_state_night_cont_press_cb
  9916  0A4A                     _led_state_night_cont_press_cb:	
  9917  0A4A                     i1l3853:	
  9918                           ;incstack = 0
  9919                           ; Regs used in _led_state_night_cont_press_cb: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  9920                           
  9921                           
  9922                           ;app_led.c: 920: if(led_run_para.mNr)
  9923  0A4A  0020               	movlb	0	; select bank0
  9924  0A4B  1E5D               	btfss	_led_run_para,4
  9925  0A4C  2A53               	goto	i1l3857
  9926                           
  9927                           ;app_led.c: 921: {
  9928                           ;app_led.c: 922: increase(&m_led_para.blue_bright, 10, 1000);
  9929  0A4D  3083               	movlw	131
  9930  0A4E  23A5  3188         	fcall	PL76	;call to abstracted procedure
  9931  0A50  228C  3188         	fcall	i1_increase
  9932                           
  9933                           ;app_led.c: 923: }
  9934  0A52  2A58               	goto	i1l3859
  9935  0A53                     i1l3857:	
  9936                           
  9937                           ;app_led.c: 924: else
  9938                           ;app_led.c: 925: {
  9939                           ;app_led.c: 926: decrease(&m_led_para.blue_bright, 10, 10);
  9940  0A53  3083               	movlw	131
  9941  0A54  23B5  3188         	fcall	PL98	;call to abstracted procedure
  9942  0A56  226A  3188         	fcall	i1_decrease
  9943  0A58                     i1l3859:	
  9944                           
  9945                           ;app_led.c: 927: }
  9946                           ;app_led.c: 928: led_update_night_bright();
  9947  0A58  22BE               	fcall	i1_led_update_night_bright
  9948  0A59  0008               	return
  9949  0A5A                     __end_of_led_state_night_cont_press_cb:	
  9950  0A5A                     __ptext115:	
  9951 ;; *************** function _led_state_day_cont_press_cb *****************
  9952 ;; Defined at:
  9953 ;;		line 854 in file "src/app_led.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;		None
  9956 ;; Auto vars:     Size  Location     Type
  9957 ;;		None
  9958 ;; Return value:  Size  Location     Type
  9959 ;;                  1    wreg      void 
  9960 ;; Registers used:
  9961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9962 ;; Tracked objects:
  9963 ;;		On entry : 1F/1
  9964 ;;		On exit  : 1E/0
  9965 ;;		Unchanged: 0/0
  9966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;Total ram usage:        0 bytes
  9972 ;; Hardware stack levels used:    1
  9973 ;; Hardware stack levels required when called:    1
  9974 ;; This function calls:
  9975 ;;		i1_decrease
  9976 ;;		i1_increase
  9977 ;;		i1_led_update_day_bright
  9978 ;; This function is called by:
  9979 ;;		_led_state_day_cb
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983                           
  9984                           ;psect for function _led_state_day_cont_press_cb
  9985  0A5A                     _led_state_day_cont_press_cb:	
  9986  0A5A                     i1l3831:	
  9987                           ;incstack = 0
  9988                           ; Regs used in _led_state_day_cont_press_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9989                           
  9990                           
  9991                           ;app_led.c: 856: if(led_run_para.mDr)
  9992  0A5A  0020               	movlb	0	; select bank0
  9993  0A5B  1DDD               	btfss	_led_run_para,3
  9994  0A5C  2A63               	goto	i1l3835
  9995                           
  9996                           ;app_led.c: 857: {
  9997                           ;app_led.c: 858: increase(&m_led_para.all_bright, 10, 1000);
  9998  0A5D  3081               	movlw	129
  9999  0A5E  23A5  3188         	fcall	PL76	;call to abstracted procedure
 10000  0A60  228C  3188         	fcall	i1_increase
 10001                           
 10002                           ;app_led.c: 859: }
 10003  0A62  2A68               	goto	i1l3837
 10004  0A63                     i1l3835:	
 10005                           
 10006                           ;app_led.c: 860: else
 10007                           ;app_led.c: 861: {
 10008                           ;app_led.c: 862: decrease(&m_led_para.all_bright, 10, 10);
 10009  0A63  3081               	movlw	129
 10010  0A64  23B5  3188         	fcall	PL98	;call to abstracted procedure
 10011  0A66  226A  3188         	fcall	i1_decrease
 10012  0A68                     i1l3837:	
 10013                           
 10014                           ;app_led.c: 863: }
 10015                           ;app_led.c: 864: led_update_day_bright();
 10016  0A68  232D               	fcall	i1_led_update_day_bright
 10017  0A69  0008               	return
 10018  0A6A                     __end_of_led_state_day_cont_press_cb:	
 10019  0A6A                     __ptext118:	
 10020 ;; *************** function i1_decrease *****************
 10021 ;; Defined at:
 10022 ;;		line 15 in file "src/app_util.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;  psrc            2    0[COMMON] const PTR unsigned int 
 10025 ;;		 -> m_led_para.ble_para.manual_para.mBright(8), m_led_para.ble_para.manual_para(26), m_led_para(113), 
 10026 ;;  delt            1    2[COMMON] const unsigned char 
 10027 ;;  min             2    3[COMMON] const unsigned int 
 10028 ;; Auto vars:     Size  Location     Type
 10029 ;;		None
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  1    wreg      void 
 10032 ;; Registers used:
 10033 ;;		wreg, fsr1l, fsr1h
 10034 ;; Tracked objects:
 10035 ;;		On entry : 1F/0
 10036 ;;		On exit  : 1F/0
 10037 ;;		Unchanged: 1F/0
 10038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10039 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10041 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10042 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10043 ;;Total ram usage:        9 bytes
 10044 ;; Hardware stack levels used:    1
 10045 ;; This function calls:
 10046 ;;		Nothing
 10047 ;; This function is called by:
 10048 ;;		_led_state_day_cont_press_cb
 10049 ;;		_led_state_night_cont_press_cb
 10050 ;; This function uses a non-reentrant model
 10051 ;;
 10052                           
 10053                           
 10054                           ;psect for function i1_decrease
 10055  0A6A                     i1_decrease:	
 10056                           
 10057                           ;app_util.c: 17: if((*psrc) > min + delt)
 10058                           
 10059                           ;incstack = 0
 10060                           ; Regs used in i1_decrease: [wregfsr1]
 10061  0A6A  0870               	movf	i1decrease@psrc,w
 10062  0A6B  0086               	movwf	6
 10063  0A6C  0871               	movf	i1decrease@psrc+1,w
 10064  0A6D  0087               	movwf	7
 10065  0A6E  3F40               	moviw [0]fsr1
 10066  0A6F  00F5               	movwf	??i1_decrease
 10067  0A70  3F41               	moviw [1]fsr1
 10068  0A71  00F6               	movwf	??i1_decrease+1
 10069  0A72  0872               	movf	i1decrease@delt,w
 10070  0A73  0773               	addwf	i1decrease@min,w
 10071  0A74  00F7               	movwf	??i1_decrease+2
 10072  0A75  0874               	movf	i1decrease@min+1,w
 10073  0A76  1803               	skipnc
 10074  0A77  0A74               	incf	i1decrease@min+1,w
 10075  0A78  00F8               	movwf	??i1_decrease+3
 10076  0A79  0876               	movf	??i1_decrease+1,w
 10077  0A7A  0278               	subwf	??i1_decrease+3,w
 10078  0A7B  1D03               	skipz
 10079  0A7C  2A7F               	goto	u274_25
 10080  0A7D  0875               	movf	??i1_decrease,w
 10081  0A7E  0277               	subwf	??i1_decrease+2,w
 10082  0A7F                     u274_25:	
 10083                           
 10084                           ;app_util.c: 18: {
 10085                           ;app_util.c: 19: (*psrc) -= delt;
 10086  0A7F  0870               	movf	i1decrease@psrc,w
 10087  0A80  0086               	movwf	6
 10088  0A81  0871               	movf	i1decrease@psrc+1,w
 10089  0A82  0087               	movwf	7
 10090  0A83  1803               	skipnc
 10091  0A84  2A87               	goto	L26
 10092  0A85  0872               	movf	i1decrease@delt,w
 10093                           
 10094                           ;app_util.c: 20: }
 10095  0A86  2BBD               	ljmp	PL110	;call to abstracted procedure
 10096  0A87                     L26:	
 10097                           ;app_util.c: 21: else
 10098                           ;app_util.c: 22: {
 10099                           ;app_util.c: 23: (*psrc) = min;
 10100                           
 10101  0A87  0873               	movf	i1decrease@min,w
 10102  0A88  3FC0               	movwi [0]fsr1
 10103  0A89  0874               	movf	i1decrease@min+1,w
 10104  0A8A  3FC1               	movwi [1]fsr1
 10105  0A8B  0008               	return
 10106  0A8C                     __end_ofi1_decrease:	
 10107  0A8C                     __ptext117:	
 10108 ;; *************** function i1_increase *****************
 10109 ;; Defined at:
 10110 ;;		line 3 in file "src/app_util.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;  psrc            2    0[COMMON] const PTR unsigned int 
 10113 ;;		 -> m_led_para.ble_para.manual_para.mBright(8), m_led_para.ble_para.manual_para(26), m_led_para(113), 
 10114 ;;  delt            1    2[COMMON] const unsigned char 
 10115 ;;  max             2    3[COMMON] const unsigned int 
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;		None
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  1    wreg      void 
 10120 ;; Registers used:
 10121 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10122 ;; Tracked objects:
 10123 ;;		On entry : 1F/0
 10124 ;;		On exit  : 1F/0
 10125 ;;		Unchanged: 1F/0
 10126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10127 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10129 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10130 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10131 ;;Total ram usage:        9 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; This function calls:
 10134 ;;		Nothing
 10135 ;; This function is called by:
 10136 ;;		_led_state_day_cont_press_cb
 10137 ;;		_led_state_night_cont_press_cb
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           
 10142                           ;psect for function i1_increase
 10143  0A8C                     i1_increase:	
 10144                           
 10145                           ;app_util.c: 5: if((*psrc) + delt < max)
 10146                           
 10147                           ;incstack = 0
 10148                           ; Regs used in i1_increase: [wreg+fsr1l+fsr1h+status,2+status,0]
 10149  0A8C  0870               	movf	i1increase@psrc,w
 10150  0A8D  0086               	movwf	6
 10151  0A8E  0871               	movf	i1increase@psrc+1,w
 10152  0A8F  0087               	movwf	7
 10153  0A90  3F40               	moviw [0]fsr1
 10154  0A91  00F5               	movwf	??i1_increase
 10155  0A92  3F41               	moviw [1]fsr1
 10156  0A93  00F6               	movwf	??i1_increase+1
 10157  0A94  0872               	movf	i1increase@delt,w
 10158  0A95  0775               	addwf	??i1_increase,w
 10159  0A96  00F7               	movwf	??i1_increase+2
 10160  0A97  0876               	movf	??i1_increase+1,w
 10161  0A98  1803               	skipnc
 10162  0A99  0A76               	incf	??i1_increase+1,w
 10163  0A9A  00F8               	movwf	??i1_increase+3
 10164  0A9B  0874               	movf	i1increase@max+1,w
 10165  0A9C  0278               	subwf	??i1_increase+3,w
 10166  0A9D  1D03               	skipz
 10167  0A9E  2AA1               	goto	u273_25
 10168  0A9F  0873               	movf	i1increase@max,w
 10169  0AA0  0277               	subwf	??i1_increase+2,w
 10170  0AA1                     u273_25:	
 10171                           
 10172                           ;app_util.c: 6: {
 10173                           ;app_util.c: 7: (*psrc) += delt;
 10174  0AA1  0870               	movf	i1increase@psrc,w
 10175  0AA2  0086               	movwf	6
 10176  0AA3  0871               	movf	i1increase@psrc+1,w
 10177  0AA4  0087               	movwf	7
 10178  0AA5  1803               	skipnc
 10179  0AA6  2AA9               	goto	L25
 10180  0AA7  0872               	movf	i1increase@delt,w
 10181                           
 10182                           ;app_util.c: 8: }
 10183  0AA8  2BD8               	ljmp	PL136	;call to abstracted procedure
 10184  0AA9                     L25:	
 10185                           ;app_util.c: 9: else
 10186                           ;app_util.c: 10: {
 10187                           ;app_util.c: 11: (*psrc) = max;
 10188                           
 10189  0AA9  0873               	movf	i1increase@max,w
 10190  0AAA  3FC0               	movwi [0]fsr1
 10191  0AAB  0874               	movf	i1increase@max+1,w
 10192  0AAC  3FC1               	movwi [1]fsr1
 10193  0AAD  0008               	return
 10194  0AAE                     __end_ofi1_increase:	
 10195  0AAE                     __ptext109:	
 10196 ;; *************** function _led_state_day_short_press_cb *****************
 10197 ;; Defined at:
 10198 ;;		line 841 in file "src/app_led.c"
 10199 ;; Parameters:    Size  Location     Type
 10200 ;;		None
 10201 ;; Auto vars:     Size  Location     Type
 10202 ;;		None
 10203 ;; Return value:  Size  Location     Type
 10204 ;;                  1    wreg      void 
 10205 ;; Registers used:
 10206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10207 ;; Tracked objects:
 10208 ;;		On entry : 1F/1
 10209 ;;		On exit  : 1F/0
 10210 ;;		Unchanged: 0/0
 10211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10214 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10215 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10216 ;;Total ram usage:        1 bytes
 10217 ;; Hardware stack levels used:    1
 10218 ;; Hardware stack levels required when called:    1
 10219 ;; This function calls:
 10220 ;;		i1_led_indicate_night
 10221 ;;		i1_led_prepare_to_save
 10222 ;;		i1_led_update_night_bright
 10223 ;; This function is called by:
 10224 ;;		_led_state_day_cb
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           
 10229                           ;psect for function _led_state_day_short_press_cb
 10230  0AAE                     _led_state_day_short_press_cb:	
 10231  0AAE                     i1l3821:	
 10232                           ;incstack = 0
 10233                           ; Regs used in _led_state_day_short_press_cb: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 10234                           
 10235                           
 10236                           ;app_led.c: 843: m_led_para.mState++;
 10237  0AAE  2381  3188         	fcall	PL14	;call to abstracted procedure
 10238  0AB0  00F5               	movwf	??_led_state_day_short_press_cb
 10239  0AB1  0AF5               	incf	??_led_state_day_short_press_cb,f
 10240  0AB2  0801               	movf	1,w
 10241  0AB3  0675               	xorwf	??_led_state_day_short_press_cb,w
 10242  0AB4  39FC               	andlw	-4
 10243  0AB5  0675               	xorwf	??_led_state_day_short_press_cb,w
 10244  0AB6  0081               	movwf	1
 10245                           
 10246                           ;app_led.c: 844: led_update_night_bright();
 10247  0AB7  22BE  3188         	fcall	i1_led_update_night_bright
 10248                           
 10249                           ;app_led.c: 845: led_indicate_night();
 10250  0AB9  22BD  3188         	fcall	i1_led_indicate_night
 10251                           
 10252                           ;app_led.c: 846: led_prepare_to_save();
 10253  0ABB  2350               	fcall	i1_led_prepare_to_save
 10254  0ABC  0008               	return
 10255  0ABD                     __end_of_led_state_day_short_press_cb:	
 10256  0ABD                     __ptext111:	
 10257 ;; *************** function i1_led_indicate_night *****************
 10258 ;; Defined at:
 10259 ;;		line 725 in file "src/app_led.c"
 10260 ;; Parameters:    Size  Location     Type
 10261 ;;		None
 10262 ;; Auto vars:     Size  Location     Type
 10263 ;;		None
 10264 ;; Return value:  Size  Location     Type
 10265 ;;                  1    wreg      void 
 10266 ;; Registers used:
 10267 ;;		None
 10268 ;; Tracked objects:
 10269 ;;		On entry : 1E/1
 10270 ;;		On exit  : 1F/2
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10277 ;;Total ram usage:        0 bytes
 10278 ;; Hardware stack levels used:    1
 10279 ;; This function calls:
 10280 ;;		Nothing
 10281 ;; This function is called by:
 10282 ;;		_led_state_day_short_press_cb
 10283 ;; This function uses a non-reentrant model
 10284 ;;
 10285                           
 10286                           
 10287                           ;psect for function i1_led_indicate_night
 10288  0ABD                     i1_led_indicate_night:	
 10289                           
 10290                           ;app_led.c: 727: (LATBbits.LATB6 = 1);
 10291                           
 10292                           ;incstack = 0
 10293                           ; Regs used in i1_led_indicate_night: []
 10294                           
 10295                           ;app_led.c: 728: (LATAbits.LATA1 = 1);
 10296                           
 10297                           ;app_led.c: 729: (LATBbits.LATB7 = 0);
 10298  0ABD  2BC3               	ljmp	PL122	;call to abstracted procedure
 10299  0ABE                     __end_ofi1_led_indicate_night:	
 10300  0ABE                     __ptext110:	
 10301 ;; *************** function i1_led_update_night_bright *****************
 10302 ;; Defined at:
 10303 ;;		line 761 in file "src/app_led.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;		None
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;  led_update_n    1    4[COMMON] unsigned char 
 10308 ;; Return value:  Size  Location     Type
 10309 ;;                  1    wreg      void 
 10310 ;; Registers used:
 10311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10312 ;; Tracked objects:
 10313 ;;		On entry : 1E/0
 10314 ;;		On exit  : 1E/0
 10315 ;;		Unchanged: 1E/0
 10316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10318 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10319 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10320 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10321 ;;Total ram usage:        5 bytes
 10322 ;; Hardware stack levels used:    1
 10323 ;; This function calls:
 10324 ;;		Nothing
 10325 ;; This function is called by:
 10326 ;;		_led_state_day_short_press_cb
 10327 ;;		_led_state_night_cont_press_cb
 10328 ;; This function uses a non-reentrant model
 10329 ;;
 10330                           
 10331                           
 10332                           ;psect for function i1_led_update_night_bright
 10333  0ABE                     i1_led_update_night_bright:	
 10334                           
 10335                           ;app_led.c: 763: for(uint8_t i = 0; i < 4; i++)
 10336                           
 10337                           ;incstack = 0
 10338                           ; Regs used in i1_led_update_night_bright: [wreg-fsr1h+status,2+status,0]
 10339  0ABE  01F4               	clrf	i1led_update_night_bright@i
 10340  0ABF                     i1l3789:	
 10341                           
 10342                           ;app_led.c: 764: {
 10343                           ;app_led.c: 765: if(i == 3)
 10344  0ABF  3003               	movlw	3
 10345  0AC0  0674               	xorwf	i1led_update_night_bright@i,w
 10346  0AC1  1D03               	btfss	3,2
 10347  0AC2  2AD8               	goto	i1l3793
 10348                           
 10349                           ;app_led.c: 766: {
 10350                           ;app_led.c: 767: current_bright[i] = m_led_para.blue_bright;
 10351  0AC3  318E  26D9  3188   	fcall	PL24	;call to abstracted procedure
 10352  0AC6  3574               	lslf	i1led_update_night_bright@i,w
 10353  0AC7  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 10354                           
 10355                           ;app_led.c: 768: target_bright[i] = m_led_para.blue_bright;
 10356  0AC8  2376  3188         	fcall	PL4	;call to abstracted procedure
 10357  0ACA  3144               	addfsr 1,4
 10358  0ACB  3574               	lslf	i1led_update_night_bright@i,w
 10359  0ACC  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 10360                           
 10361                           ;app_led.c: 769: m_led_para.ble_para.manual_para.mBright[i] = m_led_para.blue_bright;
 10362  0ACD  2376  3188         	fcall	PL4	;call to abstracted procedure
 10363  0ACF  3144               	addfsr 1,4
 10364  0AD0  238F  3188         	fcall	PL58	;call to abstracted procedure
 10365  0AD2  0084               	movwf	4
 10366  0AD3  0871               	movf	??i1_led_update_night_bright+1,w
 10367  0AD4  3D73               	addwfc	??i1_led_update_night_bright+3,w
 10368  0AD5  23AF  3188         	fcall	PL88	;call to abstracted procedure
 10369                           
 10370                           ;app_led.c: 770: }
 10371  0AD7  2AE7               	goto	i1l3795
 10372  0AD8                     i1l3793:	
 10373                           
 10374                           ;app_led.c: 771: else
 10375                           ;app_led.c: 772: {
 10376                           ;app_led.c: 773: current_bright[i] = 0;
 10377  0AD8  3574               	lslf	i1led_update_night_bright@i,w
 10378  0AD9  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 10379  0ADA  318F  2723  3188   	fcall	PL72	;call to abstracted procedure
 10380                           
 10381                           ;app_led.c: 774: target_bright[i] = 0;
 10382  0ADD  3574               	lslf	i1led_update_night_bright@i,w
 10383  0ADE  23C8  3188         	fcall	PL124	;call to abstracted procedure
 10384                           
 10385                           ;app_led.c: 775: m_led_para.ble_para.manual_para.mBright[i] = 0;
 10386  0AE0  238F  3188         	fcall	PL58	;call to abstracted procedure
 10387  0AE2  0086               	movwf	6
 10388  0AE3  0871               	movf	??i1_led_update_night_bright+1,w
 10389  0AE4  3D73               	addwfc	??i1_led_update_night_bright+3,w
 10390  0AE5  23E2  3188         	fcall	PL154	;call to abstracted procedure
 10391  0AE7                     i1l3795:	
 10392  0AE7  3004               	movlw	4
 10393  0AE8  0AF4               	incf	i1led_update_night_bright@i,f
 10394  0AE9  0274               	subwf	i1led_update_night_bright@i,w
 10395  0AEA  1803               	btfsc	3,0
 10396  0AEB  0008               	return
 10397  0AEC  2ABF               	goto	i1l3789
 10398  0AED                     __end_ofi1_led_update_night_bright:	
 10399  0AED                     __ptext97:	
 10400 ;; *************** function _led_state_off_cb *****************
 10401 ;; Defined at:
 10402 ;;		line 815 in file "src/app_led.c"
 10403 ;; Parameters:    Size  Location     Type
 10404 ;;  key             1    9[COMMON] unsigned char 
 10405 ;;  state           1   10[COMMON] enum E8242
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;		None
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  1    wreg      void 
 10410 ;; Registers used:
 10411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10412 ;; Tracked objects:
 10413 ;;		On entry : 1F/1
 10414 ;;		On exit  : 1E/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;Total ram usage:        2 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; Hardware stack levels required when called:    2
 10424 ;; This function calls:
 10425 ;;		_led_state_off_cont_press_cb
 10426 ;;		_led_state_off_long_press_cb
 10427 ;;		_led_state_off_release_cb
 10428 ;;		_led_state_off_short_press_cb
 10429 ;; This function is called by:
 10430 ;;		_led_touch_cb
 10431 ;; This function uses a non-reentrant model
 10432 ;;
 10433                           
 10434                           
 10435                           ;psect for function _led_state_off_cb
 10436  0AED                     _led_state_off_cb:	
 10437                           
 10438                           ;app_led.c: 817: if(key == 0x01)
 10439                           
 10440                           ;incstack = 0
 10441                           ; Regs used in _led_state_off_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10442  0AED  0B79               	decfsz	led_state_off_cb@key,w
 10443  0AEE  0008               	return
 10444                           
 10445                           ;app_led.c: 832: break;
 10446  0AEF  087A               	movf	led_state_off_cb@state,w
 10447                           
 10448                           ; Switch size 1, requested type "space"
 10449                           ; Number of cases is 4, Range of values is 0 to 3
 10450                           ; switch strategies available:
 10451                           ; Name         Instructions Cycles
 10452                           ; simple_byte           13     7 (average)
 10453                           ; direct_byte           14     6 (fixed)
 10454                           ; jumptable            260     6 (fixed)
 10455                           ;	Chosen strategy is simple_byte
 10456  0AF0  3A00               	xorlw	0	; case 0
 10457  0AF1  1903               	skipnz
 10458  0AF2  2AFD               	goto	i1l3875
 10459  0AF3  3A01               	xorlw	1	; case 1
 10460  0AF4  1903               	skipnz
 10461  0AF5  2AFE               	goto	i1l3877
 10462  0AF6  3A03               	xorlw	3	; case 2
 10463  0AF7  1903               	skipnz
 10464  0AF8  2AFF               	goto	i1l3879
 10465  0AF9  3A01               	xorlw	1	; case 3
 10466  0AFA  1903               	skipnz
 10467  0AFB  2B00               	goto	i1l3881
 10468  0AFC  2B01               	goto	i1l791
 10469  0AFD                     i1l3875:	
 10470                           
 10471                           ;app_led.c: 822: led_state_off_short_press_cb();
 10472  0AFD  2B02               	ljmp	i1l3803
 10473  0AFE                     i1l3877:	
 10474                           ;app_led.c: 823: break;
 10475                           
 10476                           
 10477                           ;app_led.c: 825: led_state_off_long_press_cb();
 10478  0AFE  2B12               	ljmp	i1l3811
 10479  0AFF                     i1l3879:	
 10480                           ;app_led.c: 826: break;
 10481                           
 10482                           
 10483                           ;app_led.c: 828: led_state_off_cont_press_cb();
 10484  0AFF  2B51               	ljmp	i1l777
 10485  0B00                     i1l3881:	
 10486                           ;app_led.c: 829: break;
 10487                           
 10488                           
 10489                           ;app_led.c: 831: led_state_off_release_cb();
 10490  0B00  2B52               	ljmp	i1l780
 10491  0B01                     i1l791:	
 10492  0B01  0008               	return
 10493  0B02                     __end_of_led_state_off_cb:	
 10494  0B02                     __ptext98:	
 10495 ;; *************** function _led_state_off_short_press_cb *****************
 10496 ;; Defined at:
 10497 ;;		line 794 in file "src/app_led.c"
 10498 ;; Parameters:    Size  Location     Type
 10499 ;;		None
 10500 ;; Auto vars:     Size  Location     Type
 10501 ;;		None
 10502 ;; Return value:  Size  Location     Type
 10503 ;;                  1    wreg      void 
 10504 ;; Registers used:
 10505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10506 ;; Tracked objects:
 10507 ;;		On entry : 1F/1
 10508 ;;		On exit  : 1F/0
 10509 ;;		Unchanged: 0/0
 10510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10513 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10514 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10515 ;;Total ram usage:        1 bytes
 10516 ;; Hardware stack levels used:    1
 10517 ;; Hardware stack levels required when called:    1
 10518 ;; This function calls:
 10519 ;;		i1_led_indicate_day
 10520 ;;		i1_led_prepare_to_save
 10521 ;;		i1_led_update_day_bright
 10522 ;; This function is called by:
 10523 ;;		_led_state_off_cb
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           
 10528                           ;psect for function _led_state_off_short_press_cb
 10529  0B02                     _led_state_off_short_press_cb:	
 10530  0B02                     i1l3803:	
 10531                           ;incstack = 0
 10532                           ; Regs used in _led_state_off_short_press_cb: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 10533                           
 10534                           
 10535                           ;app_led.c: 796: m_led_para.mState++;
 10536  0B02  2381  3188         	fcall	PL14	;call to abstracted procedure
 10537  0B04  00F5               	movwf	??_led_state_off_short_press_cb
 10538  0B05  0AF5               	incf	??_led_state_off_short_press_cb,f
 10539  0B06  0801               	movf	1,w
 10540  0B07  0675               	xorwf	??_led_state_off_short_press_cb,w
 10541  0B08  39FC               	andlw	-4
 10542  0B09  0675               	xorwf	??_led_state_off_short_press_cb,w
 10543  0B0A  0081               	movwf	1
 10544                           
 10545                           ;app_led.c: 797: led_update_day_bright();
 10546  0B0B  232D  3188         	fcall	i1_led_update_day_bright
 10547                           
 10548                           ;app_led.c: 798: led_indicate_day();
 10549  0B0D  2311  3188         	fcall	i1_led_indicate_day
 10550                           
 10551                           ;app_led.c: 799: led_prepare_to_save();
 10552  0B0F  2350               	fcall	i1_led_prepare_to_save
 10553  0B10  0008               	return
 10554  0B11                     __end_of_led_state_off_short_press_cb:	
 10555  0B11                     __ptext101:	
 10556 ;; *************** function i1_led_indicate_day *****************
 10557 ;; Defined at:
 10558 ;;		line 718 in file "src/app_led.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;		None
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;		None
 10563 ;; Return value:  Size  Location     Type
 10564 ;;                  1    wreg      void 
 10565 ;; Registers used:
 10566 ;;		None
 10567 ;; Tracked objects:
 10568 ;;		On entry : 1E/1
 10569 ;;		On exit  : 1F/2
 10570 ;;		Unchanged: 0/0
 10571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10576 ;;Total ram usage:        0 bytes
 10577 ;; Hardware stack levels used:    1
 10578 ;; This function calls:
 10579 ;;		Nothing
 10580 ;; This function is called by:
 10581 ;;		_led_state_off_short_press_cb
 10582 ;;		_led_state_off_long_press_cb
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           
 10587                           ;psect for function i1_led_indicate_day
 10588  0B11                     i1_led_indicate_day:	
 10589                           
 10590                           ;app_led.c: 720: (LATBbits.LATB6 = 0);
 10591                           
 10592                           ;incstack = 0
 10593                           ; Regs used in i1_led_indicate_day: []
 10594                           
 10595                           ;app_led.c: 721: (LATAbits.LATA1 = 0);
 10596                           
 10597                           ;app_led.c: 722: (LATBbits.LATB7 = 0);
 10598  0B11  2BDD               	ljmp	PL144	;call to abstracted procedure
 10599  0B12                     __end_ofi1_led_indicate_day:	
 10600  0B12                     __ptext100:	
 10601 ;; *************** function _led_state_off_long_press_cb *****************
 10602 ;; Defined at:
 10603 ;;		line 802 in file "src/app_led.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;		None
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;		None
 10608 ;; Return value:  Size  Location     Type
 10609 ;;                  1    wreg      void 
 10610 ;; Registers used:
 10611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10612 ;; Tracked objects:
 10613 ;;		On entry : 1F/1
 10614 ;;		On exit  : 1F/0
 10615 ;;		Unchanged: 0/0
 10616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10619 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;Total ram usage:        2 bytes
 10622 ;; Hardware stack levels used:    1
 10623 ;; Hardware stack levels required when called:    1
 10624 ;; This function calls:
 10625 ;;		i1_led_indicate_day
 10626 ;;		i1_led_update_day_bright
 10627 ;; This function is called by:
 10628 ;;		_led_state_off_cb
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           
 10633                           ;psect for function _led_state_off_long_press_cb
 10634  0B12                     _led_state_off_long_press_cb:	
 10635  0B12                     i1l3811:	
 10636                           ;incstack = 0
 10637                           ; Regs used in _led_state_off_long_press_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10638                           
 10639                           
 10640                           ;app_led.c: 804: m_led_para.mState++;
 10641  0B12  2381  3188         	fcall	PL14	;call to abstracted procedure
 10642  0B14  00F5               	movwf	??_led_state_off_long_press_cb
 10643  0B15  0AF5               	incf	??_led_state_off_long_press_cb,f
 10644  0B16  0801               	movf	1,w
 10645  0B17  0675               	xorwf	??_led_state_off_long_press_cb,w
 10646  0B18  39FC               	andlw	-4
 10647  0B19  0675               	xorwf	??_led_state_off_long_press_cb,w
 10648  0B1A  0081               	movwf	1
 10649                           
 10650                           ;app_led.c: 805: m_led_para.all_bright = 10;
 10651  0B1B  300A               	movlw	10
 10652  0B1C  00F5               	movwf	??_led_state_off_long_press_cb
 10653  0B1D  307F               	movlw	127
 10654  0B1E  01F6               	clrf	??_led_state_off_long_press_cb+1
 10655  0B1F  0086               	movwf	6
 10656  0B20  3023               	movlw	35
 10657  0B21  0087               	movwf	7
 10658  0B22  3142               	addfsr 1,2
 10659  0B23  0875               	movf	??_led_state_off_long_press_cb,w
 10660  0B24  3FC0               	movwi [0]fsr1
 10661  0B25  0876               	movf	??_led_state_off_long_press_cb+1,w
 10662  0B26  3FC1               	movwi [1]fsr1
 10663                           
 10664                           ;app_led.c: 806: led_update_day_bright();
 10665  0B27  232D  3188         	fcall	i1_led_update_day_bright
 10666                           
 10667                           ;app_led.c: 807: led_indicate_day();
 10668  0B29  2311               	fcall	i1_led_indicate_day
 10669                           
 10670                           ;app_led.c: 808: led_run_para.mDr = 1;
 10671  0B2A  0020               	movlb	0	; select bank0
 10672  0B2B  15DD               	bsf	_led_run_para,3
 10673  0B2C  0008               	return
 10674  0B2D                     __end_of_led_state_off_long_press_cb:	
 10675  0B2D                     __ptext116:	
 10676 ;; *************** function i1_led_update_day_bright *****************
 10677 ;; Defined at:
 10678 ;;		line 739 in file "src/app_led.c"
 10679 ;; Parameters:    Size  Location     Type
 10680 ;;		None
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;  led_update_d    1    4[COMMON] unsigned char 
 10683 ;; Return value:  Size  Location     Type
 10684 ;;                  1    wreg      void 
 10685 ;; Registers used:
 10686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10687 ;; Tracked objects:
 10688 ;;		On entry : 1E/1
 10689 ;;		On exit  : 1E/0
 10690 ;;		Unchanged: 1E/0
 10691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10694 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10695 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;Total ram usage:        5 bytes
 10697 ;; Hardware stack levels used:    1
 10698 ;; This function calls:
 10699 ;;		Nothing
 10700 ;; This function is called by:
 10701 ;;		_led_state_off_short_press_cb
 10702 ;;		_led_state_off_long_press_cb
 10703 ;;		_led_state_day_cont_press_cb
 10704 ;; This function uses a non-reentrant model
 10705 ;;
 10706                           
 10707                           
 10708                           ;psect for function i1_led_update_day_bright
 10709  0B2D                     i1_led_update_day_bright:	
 10710                           
 10711                           ;app_led.c: 741: for(uint8_t i = 0; i < 4; i++)
 10712                           
 10713                           ;incstack = 0
 10714                           ; Regs used in i1_led_update_day_bright: [wreg-fsr1h+status,2+status,0]
 10715  0B2D  01F4               	clrf	i1led_update_day_bright@i
 10716  0B2E                     i1l3777:	
 10717                           
 10718                           ;app_led.c: 742: {
 10719                           ;app_led.c: 743: current_bright[i] = m_led_para.all_bright;
 10720  0B2E  2389  3188         	fcall	PL32	;call to abstracted procedure
 10721  0B30  3574               	lslf	i1led_update_day_bright@i,w
 10722  0B31  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 10723                           
 10724                           ;app_led.c: 744: target_bright[i] = m_led_para.all_bright;
 10725  0B32  2376  3188         	fcall	PL4	;call to abstracted procedure
 10726  0B34  3142               	addfsr 1,2
 10727  0B35  3574               	lslf	i1led_update_day_bright@i,w
 10728  0B36  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 10729                           
 10730                           ;app_led.c: 745: m_led_para.ble_para.manual_para.mBright[i] = m_led_para.all_bright;
 10731  0B37  2376  3188         	fcall	PL4	;call to abstracted procedure
 10732  0B39  3142               	addfsr 1,2
 10733  0B3A  0874               	movf	i1led_update_day_bright@i,w
 10734  0B3B  00F0               	movwf	??i1_led_update_day_bright
 10735  0B3C  3088               	movlw	136
 10736  0B3D  01F1               	clrf	??i1_led_update_day_bright+1
 10737  0B3E  35F0               	lslf	??i1_led_update_day_bright,f
 10738  0B3F  0DF1               	rlf	??i1_led_update_day_bright+1,f
 10739  0B40  00F2               	movwf	??i1_led_update_day_bright+2
 10740  0B41  3023               	movlw	35
 10741  0B42  00F3               	movwf	??i1_led_update_day_bright+3
 10742  0B43  0870               	movf	??i1_led_update_day_bright,w
 10743  0B44  0772               	addwf	??i1_led_update_day_bright+2,w
 10744  0B45  0084               	movwf	4
 10745  0B46  0871               	movf	??i1_led_update_day_bright+1,w
 10746  0B47  3D73               	addwfc	??i1_led_update_day_bright+3,w
 10747  0B48  23AF  3188         	fcall	PL88	;call to abstracted procedure
 10748  0B4A  3004               	movlw	4
 10749  0B4B  0AF4               	incf	i1led_update_day_bright@i,f
 10750  0B4C  0274               	subwf	i1led_update_day_bright@i,w
 10751  0B4D  1803               	btfsc	3,0
 10752  0B4E  0008               	return
 10753  0B4F  2B2E               	goto	i1l3777
 10754  0B50                     __end_ofi1_led_update_day_bright:	
 10755  0B50                     __ptext121:	
 10756 ;; *************** function i1_led_prepare_to_save *****************
 10757 ;; Defined at:
 10758 ;;		line 1920 in file "src/app_led.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;		None
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;		None
 10763 ;; Return value:  Size  Location     Type
 10764 ;;                  1    wreg      void 
 10765 ;; Registers used:
 10766 ;;		wreg
 10767 ;; Tracked objects:
 10768 ;;		On entry : 1C/2
 10769 ;;		On exit  : 1F/0
 10770 ;;		Unchanged: 0/0
 10771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10776 ;;Total ram usage:        0 bytes
 10777 ;; Hardware stack levels used:    1
 10778 ;; This function calls:
 10779 ;;		Nothing
 10780 ;; This function is called by:
 10781 ;;		_led_state_off_short_press_cb
 10782 ;;		_led_state_day_short_press_cb
 10783 ;;		_led_state_day_release_cb
 10784 ;;		_led_state_night_short_press_cb
 10785 ;;		_led_state_night_release_cb
 10786 ;;		_led_state_ble_short_press_cb
 10787 ;; This function uses a non-reentrant model
 10788 ;;
 10789                           
 10790                           
 10791                           ;psect for function i1_led_prepare_to_save
 10792  0B50                     i1_led_prepare_to_save:	
 10793                           
 10794                           ;app_led.c: 1922: led_run_para.mSave = 1;
 10795                           
 10796                           ;incstack = 0
 10797                           ; Regs used in i1_led_prepare_to_save: [wreg]
 10798                           
 10799                           ;app_led.c: 1923: led_run_para.save_delay_count = 3;
 10800  0B50  2BD3               	ljmp	PL128	;call to abstracted procedure
 10801  0B51                     __end_ofi1_led_prepare_to_save:	
 10802  0B51                     __ptext102:	
 10803 ;; *************** function _led_state_off_cont_press_cb *****************
 10804 ;; Defined at:
 10805 ;;		line 811 in file "src/app_led.c"
 10806 ;; Parameters:    Size  Location     Type
 10807 ;;		None
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;		None
 10810 ;; Return value:  Size  Location     Type
 10811 ;;                  1    wreg      void 
 10812 ;; Registers used:
 10813 ;;		None
 10814 ;; Tracked objects:
 10815 ;;		On entry : 1F/1
 10816 ;;		On exit  : 1F/1
 10817 ;;		Unchanged: 1F/0
 10818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10823 ;;Total ram usage:        0 bytes
 10824 ;; Hardware stack levels used:    1
 10825 ;; This function calls:
 10826 ;;		Nothing
 10827 ;; This function is called by:
 10828 ;;		_led_state_off_cb
 10829 ;; This function uses a non-reentrant model
 10830 ;;
 10831                           
 10832                           
 10833                           ;psect for function _led_state_off_cont_press_cb
 10834  0B51                     _led_state_off_cont_press_cb:	
 10835  0B51                     i1l777:	
 10836                           ;incstack = 0
 10837                           ; Regs used in _led_state_off_cont_press_cb: []
 10838                           
 10839  0B51  0008               	return
 10840  0B52                     __end_of_led_state_off_cont_press_cb:	
 10841  0B52                     __ptext99:	
 10842 ;; *************** function _led_state_off_release_cb *****************
 10843 ;; Defined at:
 10844 ;;		line 813 in file "src/app_led.c"
 10845 ;; Parameters:    Size  Location     Type
 10846 ;;		None
 10847 ;; Auto vars:     Size  Location     Type
 10848 ;;		None
 10849 ;; Return value:  Size  Location     Type
 10850 ;;                  1    wreg      void 
 10851 ;; Registers used:
 10852 ;;		None
 10853 ;; Tracked objects:
 10854 ;;		On entry : 1F/1
 10855 ;;		On exit  : 1F/1
 10856 ;;		Unchanged: 1F/0
 10857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10862 ;;Total ram usage:        0 bytes
 10863 ;; Hardware stack levels used:    1
 10864 ;; This function calls:
 10865 ;;		Nothing
 10866 ;; This function is called by:
 10867 ;;		_led_state_off_cb
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871                           
 10872                           ;psect for function _led_state_off_release_cb
 10873  0B52                     _led_state_off_release_cb:	
 10874  0B52                     i1l780:	
 10875                           ;incstack = 0
 10876                           ; Regs used in _led_state_off_release_cb: []
 10877                           
 10878  0B52  0008               	return
 10879  0B53                     __end_of_led_state_off_release_cb:	
 10880  0B53                     __ptext113:	
 10881 ;; *************** function _led_state_day_long_press_cb *****************
 10882 ;; Defined at:
 10883 ;;		line 849 in file "src/app_led.c"
 10884 ;; Parameters:    Size  Location     Type
 10885 ;;		None
 10886 ;; Auto vars:     Size  Location     Type
 10887 ;;		None
 10888 ;; Return value:  Size  Location     Type
 10889 ;;                  1    wreg      void 
 10890 ;; Registers used:
 10891 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10892 ;; Tracked objects:
 10893 ;;		On entry : 1F/1
 10894 ;;		On exit  : 1E/0
 10895 ;;		Unchanged: 0/0
 10896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10901 ;;Total ram usage:        0 bytes
 10902 ;; Hardware stack levels used:    1
 10903 ;; Hardware stack levels required when called:    1
 10904 ;; This function calls:
 10905 ;;		_led_update_day_status
 10906 ;; This function is called by:
 10907 ;;		_led_state_day_cb
 10908 ;; This function uses a non-reentrant model
 10909 ;;
 10910                           
 10911                           
 10912                           ;psect for function _led_state_day_long_press_cb
 10913  0B53                     _led_state_day_long_press_cb:	
 10914                           
 10915                           ;app_led.c: 851: led_update_day_status();
 10916                           
 10917                           ;incstack = 0
 10918                           ; Regs used in _led_state_day_long_press_cb: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 10919  0B53  2B54               	ljmp	i1l3723
 10920  0B54                     __end_of_led_state_day_long_press_cb:	
 10921  0B54                     __ptext114:	
 10922 ;; *************** function _led_update_day_status *****************
 10923 ;; Defined at:
 10924 ;;		line 749 in file "src/app_led.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;		None
 10927 ;; Auto vars:     Size  Location     Type
 10928 ;;		None
 10929 ;; Return value:  Size  Location     Type
 10930 ;;                  1    wreg      void 
 10931 ;; Registers used:
 10932 ;;		wreg, fsr1l, fsr1h
 10933 ;; Tracked objects:
 10934 ;;		On entry : 1F/1
 10935 ;;		On exit  : 1E/0
 10936 ;;		Unchanged: 0/0
 10937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10941 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;Total ram usage:        2 bytes
 10943 ;; Hardware stack levels used:    1
 10944 ;; This function calls:
 10945 ;;		Nothing
 10946 ;; This function is called by:
 10947 ;;		_led_state_day_long_press_cb
 10948 ;; This function uses a non-reentrant model
 10949 ;;
 10950                           
 10951                           
 10952                           ;psect for function _led_update_day_status
 10953  0B54                     _led_update_day_status:	
 10954  0B54                     i1l3723:	
 10955                           ;incstack = 0
 10956                           ; Regs used in _led_update_day_status: [wregfsr1]
 10957                           
 10958                           
 10959                           ;app_led.c: 751: if(m_led_para.all_bright > 1000 - 200)
 10960  0B54  2389  3188         	fcall	PL32	;call to abstracted procedure
 10961  0B56  3F40               	moviw [0]fsr1
 10962  0B57  00F0               	movwf	??_led_update_day_status
 10963  0B58  3F41               	moviw [1]fsr1
 10964  0B59  00F1               	movwf	??_led_update_day_status+1
 10965  0B5A  3003               	movlw	3
 10966  0B5B  0271               	subwf	??_led_update_day_status+1,w
 10967  0B5C  3021               	movlw	33
 10968  0B5D  1903               	skipnz
 10969  0B5E  0270               	subwf	??_led_update_day_status,w
 10970  0B5F  1C03               	skipc
 10971  0B60  2B64               	goto	i1l3727
 10972                           
 10973                           ;app_led.c: 752: {
 10974                           ;app_led.c: 753: led_run_para.mDr = 0;
 10975  0B61  0020               	movlb	0	; select bank0
 10976  0B62  11DD               	bcf	_led_run_para,3
 10977                           
 10978                           ;app_led.c: 754: }
 10979  0B63  0008               	return
 10980  0B64                     i1l3727:	
 10981                           
 10982                           ;app_led.c: 755: else if(m_led_para.all_bright < 200)
 10983  0B64  2389  3188         	fcall	PL32	;call to abstracted procedure
 10984  0B66  3F40               	moviw [0]fsr1
 10985  0B67  00F0               	movwf	??_led_update_day_status
 10986  0B68  3F41               	moviw [1]fsr1
 10987  0B69  00F1               	movwf	??_led_update_day_status+1
 10988  0B6A  3000               	movlw	0
 10989  0B6B  0271               	subwf	??_led_update_day_status+1,w
 10990  0B6C  30C8               	movlw	200
 10991  0B6D  1903               	skipnz
 10992  0B6E  0270               	subwf	??_led_update_day_status,w
 10993  0B6F  1803               	skipnc
 10994  0B70  0008               	return
 10995                           
 10996                           ;app_led.c: 756: {
 10997                           ;app_led.c: 757: led_run_para.mDr = 1;
 10998  0B71  0020               	movlb	0	; select bank0
 10999  0B72  15DD               	bsf	_led_run_para,3
 11000  0B73  0008               	return
 11001  0B74                     __end_of_led_update_day_status:	
 11002  0B74                     __ptext112:	
 11003 ;; *************** function _led_state_day_release_cb *****************
 11004 ;; Defined at:
 11005 ;;		line 867 in file "src/app_led.c"
 11006 ;; Parameters:    Size  Location     Type
 11007 ;;		None
 11008 ;; Auto vars:     Size  Location     Type
 11009 ;;		None
 11010 ;; Return value:  Size  Location     Type
 11011 ;;                  1    wreg      void 
 11012 ;; Registers used:
 11013 ;;		wreg, status,2, status,0, pclath, cstack
 11014 ;; Tracked objects:
 11015 ;;		On entry : 1F/1
 11016 ;;		On exit  : 1F/0
 11017 ;;		Unchanged: 0/0
 11018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11023 ;;Total ram usage:        0 bytes
 11024 ;; Hardware stack levels used:    1
 11025 ;; Hardware stack levels required when called:    1
 11026 ;; This function calls:
 11027 ;;		i1_led_prepare_to_save
 11028 ;; This function is called by:
 11029 ;;		_led_state_day_cb
 11030 ;; This function uses a non-reentrant model
 11031 ;;
 11032                           
 11033                           
 11034                           ;psect for function _led_state_day_release_cb
 11035  0B74                     _led_state_day_release_cb:	
 11036  0B74                     i1l3839:	
 11037                           ;incstack = 0
 11038                           ; Regs used in _led_state_day_release_cb: [wreg+status,2+status,0+pclath+cstack]
 11039                           
 11040                           
 11041                           ;app_led.c: 869: led_prepare_to_save();
 11042  0B74  2350               	fcall	i1_led_prepare_to_save
 11043  0B75  0008               	return
 11044  0B76                     __end_of_led_state_day_release_cb:	
 11045  0B76                     PL4:	
 11046  0B76  0084               	movwf	4
 11047  0B77  0185               	clrf	5
 11048  0B78  3F40               	moviw [0]fsr1
 11049  0B79  3F80               	movwi [0]fsr0
 11050  0B7A  3F41               	moviw [1]fsr1
 11051  0B7B  3F81               	movwi [1]fsr0
 11052  0B7C  307F               	movlw	127
 11053  0B7D  0086               	movwf	6
 11054  0B7E  3023               	movlw	35
 11055  0B7F  0087               	movwf	7
 11056  0B80  0008               	return
 11057  0B81                     __end_ofPL4:	
 11058  0B81                     PL14:	
 11059  0B81  307F               	movlw	127
 11060  0B82  0086               	movwf	6
 11061  0B83  3023               	movlw	35
 11062  0B84  0087               	movwf	7
 11063  0B85  3141               	addfsr 1,1
 11064  0B86  0801               	movf	1,w
 11065  0B87  3903               	andlw	3
 11066  0B88  0008               	return
 11067  0B89                     __end_ofPL14:	
 11068  0B89                     PL32:	
 11069  0B89  307F               	movlw	127
 11070  0B8A  0086               	movwf	6
 11071  0B8B  3023               	movlw	35
 11072  0B8C  0087               	movwf	7
 11073  0B8D  3142               	addfsr 1,2
 11074  0B8E  0008               	return
 11075  0B8F                     __end_ofPL32:	
 11076  0B8F                     PL58:	
 11077  0B8F  0874               	movf	i1led_update_night_bright@i,w
 11078  0B90  00F0               	movwf	??i1_led_update_night_bright
 11079  0B91  3088               	movlw	136
 11080  0B92  01F1               	clrf	??i1_led_update_night_bright+1
 11081  0B93  35F0               	lslf	??i1_led_update_night_bright,f
 11082  0B94  0DF1               	rlf	??i1_led_update_night_bright+1,f
 11083  0B95  00F2               	movwf	??i1_led_update_night_bright+2
 11084  0B96  3023               	movlw	35
 11085  0B97  00F3               	movwf	??i1_led_update_night_bright+3
 11086  0B98  0870               	movf	??i1_led_update_night_bright,w
 11087  0B99  0772               	addwf	??i1_led_update_night_bright+2,w
 11088  0B9A  0008               	return
 11089  0B9B                     __end_ofPL58:	
 11090  0B9B                     PL74:	
 11091  0B9B  3141               	addfsr 1,1
 11092  0B9C  0C01               	rrf	1,w
 11093  0B9D  0C89               	rrf	9,f
 11094  0B9E  3903               	andlw	3
 11095  0B9F  3A02               	xorlw	2
 11096  0BA0  307F               	movlw	127
 11097  0BA1  0086               	movwf	6
 11098  0BA2  3023               	movlw	35
 11099  0BA3  0087               	movwf	7
 11100  0BA4  0008               	return
 11101  0BA5                     __end_ofPL74:	
 11102  0BA5                     PL76:	
 11103  0BA5  00F0               	movwf	i1increase@psrc
 11104  0BA6  3023               	movlw	35
 11105  0BA7  00F1               	movwf	i1increase@psrc+1
 11106  0BA8  300A               	movlw	10
 11107  0BA9  00F2               	movwf	i1increase@delt
 11108  0BAA  30E8               	movlw	232
 11109  0BAB  00F3               	movwf	i1increase@max
 11110  0BAC  3003               	movlw	3
 11111  0BAD  00F4               	movwf	i1increase@max+1
 11112  0BAE  0008               	return
 11113  0BAF                     __end_ofPL76:	
 11114  0BAF                     PL88:	
 11115  0BAF  0085               	movwf	5
 11116  0BB0  3F40               	moviw [0]fsr1
 11117  0BB1  3F80               	movwi [0]fsr0
 11118  0BB2  3F41               	moviw [1]fsr1
 11119  0BB3  3F81               	movwi [1]fsr0
 11120  0BB4  0008               	return
 11121  0BB5                     __end_ofPL88:	
 11122  0BB5                     PL98:	
 11123  0BB5  00F0               	movwf	i1decrease@psrc
 11124  0BB6  3023               	movlw	35
 11125  0BB7  00F1               	movwf	i1decrease@psrc+1
 11126  0BB8  300A               	movlw	10
 11127  0BB9  00F2               	movwf	i1decrease@delt
 11128  0BBA  00F3               	movwf	i1decrease@min
 11129  0BBB  01F4               	clrf	i1decrease@min+1
 11130  0BBC  0008               	return
 11131  0BBD                     __end_ofPL98:	
 11132  0BBD                     PL110:	
 11133  0BBD  0281               	subwf	1,f
 11134  0BBE  3141               	addfsr 1,1
 11135  0BBF  1C03               	skipc
 11136  0BC0  0381               	decf	1,f
 11137  0BC1  317F               	addfsr 1,-1
 11138  0BC2  0008               	return
 11139  0BC3                     __end_ofPL110:	
 11140  0BC3                     PL122:	
 11141  0BC3  0022               	movlb	2	; select bank2
 11142  0BC4  170D               	bsf	13,6	;volatile
 11143  0BC5  148C               	bsf	12,1	;volatile
 11144  0BC6  138D               	bcf	13,7	;volatile
 11145  0BC7  0008               	return
 11146  0BC8                     __end_ofPL122:	
 11147  0BC8                     PL124:	
 11148  0BC8  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 11149  0BC9  0086               	movwf	6
 11150  0BCA  3000               	movlw	0
 11151  0BCB  3FC0               	movwi [0]fsr1
 11152  0BCC  3FC1               	movwi [1]fsr1
 11153  0BCD  0008               	return
 11154  0BCE                     __end_ofPL124:	
 11155  0BCE                     PL126:	
 11156  0BCE  0022               	movlb	2	; select bank2
 11157  0BCF  170D               	bsf	13,6	;volatile
 11158  0BD0  108C               	bcf	12,1	;volatile
 11159  0BD1  178D               	bsf	13,7	;volatile
 11160  0BD2  0008               	return
 11161  0BD3                     __end_ofPL126:	
 11162  0BD3                     PL128:	
 11163  0BD3  0020               	movlb	0	; select bank0
 11164  0BD4  3003               	movlw	3
 11165  0BD5  155D               	bsf	_led_run_para,2
 11166  0BD6  00E0               	movwf	_led_run_para+3
 11167  0BD7  0008               	return
 11168  0BD8                     __end_ofPL128:	
 11169  0BD8                     PL136:	
 11170  0BD8  0781               	addwf	1,f
 11171  0BD9  3141               	addfsr 1,1
 11172  0BDA  1803               	skipnc
 11173  0BDB  0A81               	incf	1,f
 11174  0BDC  0008               	return
 11175  0BDD                     __end_ofPL136:	
 11176  0BDD                     PL144:	
 11177  0BDD  0022               	movlb	2	; select bank2
 11178  0BDE  130D               	bcf	13,6	;volatile
 11179  0BDF  108C               	bcf	12,1	;volatile
 11180  0BE0  138D               	bcf	13,7	;volatile
 11181  0BE1  0008               	return
 11182  0BE2                     __end_ofPL144:	
 11183  0BE2                     PL154:	
 11184  0BE2  0087               	movwf	7
 11185  0BE3  3000               	movlw	0
 11186  0BE4  3FC0               	movwi [0]fsr1
 11187  0BE5  3FC1               	movwi [1]fsr1
 11188  0BE6  0008               	return
 11189  0BE7                     __end_ofPL154:	
 11190  0BE7                     __ptext45:	
 11191 ;; *************** function _led_set_power *****************
 11192 ;; Defined at:
 11193 ;;		line 2037 in file "src/app_led.c"
 11194 ;; Parameters:    Size  Location     Type
 11195 ;;  on              1    wreg     unsigned char 
 11196 ;; Auto vars:     Size  Location     Type
 11197 ;;  on              1    7[BANK0 ] unsigned char 
 11198 ;; Return value:  Size  Location     Type
 11199 ;;                  1    wreg      unsigned char 
 11200 ;; Registers used:
 11201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11202 ;; Tracked objects:
 11203 ;;		On entry : 1F/3
 11204 ;;		On exit  : 1F/0
 11205 ;;		Unchanged: 0/0
 11206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11208 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11210 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11211 ;;Total ram usage:        1 bytes
 11212 ;; Hardware stack levels used:    1
 11213 ;; Hardware stack levels required when called:   10
 11214 ;; This function calls:
 11215 ;;		_led_prepare_to_save
 11216 ;;		_led_turnoff_ramp
 11217 ;;		_led_turnon_ramp
 11218 ;; This function is called by:
 11219 ;;		_ble_decode
 11220 ;; This function uses a non-reentrant model
 11221 ;;
 11222                           
 11223                           
 11224                           ;psect for function _led_set_power
 11225  0BE7                     _led_set_power:	
 11226                           
 11227                           ;incstack = 0
 11228                           ; Regs used in _led_set_power: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11229                           ;led_set_power@on stored from wreg
 11230  0BE7  0020               	movlb	0	; select bank0
 11231  0BE8  00A7               	movwf	led_set_power@on
 11232                           
 11233                           ;app_led.c: 2039: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0)
 11234  0BE9  1C5D               	btfss	_led_run_para,0
 11235  0BEA  18DD               	btfsc	_led_run_para,1
 11236  0BEB  3400               	retlw	0
 11237  0BEC  318E  26B0  3188   	fcall	PL10	;call to abstracted procedure
 11238  0BEF  1D03               	btfss	3,2
 11239                           
 11240                           ;app_led.c: 2040: {
 11241                           ;app_led.c: 2041: return 0;
 11242  0BF0  3400               	retlw	0
 11243                           
 11244                           ;app_led.c: 2042: }
 11245                           ;app_led.c: 2047: m_led_para.ble_para.manual_para.mOn = on;
 11246  0BF1  2210  3188         	fcall	PL54	;call to abstracted procedure
 11247  0BF3  0C27               	rrf	led_set_power@on,w
 11248  0BF4  1C03               	skipc
 11249  0BF5  1001               	bcf	1,0
 11250  0BF6  1803               	skipnc
 11251  0BF7  1401               	bsf	1,0
 11252                           
 11253                           ;app_led.c: 2048: if(on)
 11254  0BF8  0827               	movf	led_set_power@on,w
 11255  0BF9  1903               	btfsc	3,2
 11256  0BFA  2BFF               	goto	l4477
 11257                           
 11258                           ;app_led.c: 2049: {
 11259                           ;app_led.c: 2058: led_turnon_ramp();
 11260  0BFB  318D  25F6  3188   	fcall	_led_turnon_ramp
 11261                           
 11262                           ;app_led.c: 2062: }
 11263  0BFE  2C02               	goto	l4479
 11264  0BFF                     l4477:	
 11265                           
 11266                           ;app_led.c: 2063: else
 11267                           ;app_led.c: 2064: {
 11268                           ;app_led.c: 2065: led_turnoff_ramp();
 11269  0BFF  318E  269D  3188   	fcall	_led_turnoff_ramp
 11270  0C02                     l4479:	
 11271                           
 11272                           ;app_led.c: 2066: }
 11273                           ;app_led.c: 2067: led_prepare_to_save();
 11274  0C02  216C               	fcall	_led_prepare_to_save
 11275                           
 11276                           ;app_led.c: 2068: return 1;
 11277  0C03  3401               	retlw	1
 11278  0C04                     __end_of_led_set_power:	
 11279                           
 11280                           	psect	swtext1
 11281  0800                     __pswtext1:	
 11282  0800                     S6601:	
 11283  0800  3188  28CF         	ljmp	l6077
 11284  0802  3189  2905         	ljmp	l472
 11285  0804  3188  283A         	ljmp	l6007
 11286  0806  3188  2848         	ljmp	l6013
 11287  0808  3188  2852         	ljmp	l6019
 11288  080A  3188  285A         	ljmp	l6023
 11289  080C  3188  2860         	ljmp	l6027
 11290  080E  3188  286A         	ljmp	l6033
 11291  0810  3188  2873         	ljmp	l6039
 11292  0812  3188  2880         	ljmp	l6043
 11293  0814  3189  2905         	ljmp	l472
 11294  0816  3188  288D         	ljmp	l6047
 11295  0818  3188  289A         	ljmp	l6053
 11296  081A  3189  2905         	ljmp	l472
 11297  081C  3188  28A0         	ljmp	l6057
 11298  081E  3188  28A9         	ljmp	l6063
 11299  0820  3188  28AF         	ljmp	l6067
 11300                           
 11301                           	psect	text43
 11302  0430                     __ptext43:	
 11303 ;; *************** function _led_set_pro *****************
 11304 ;; Defined at:
 11305 ;;		line 2134 in file "src/app_led.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;  pbuf            1    wreg     const PTR const unsigned
 11308 ;;		 -> rx_buf(80), 
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;  pbuf            1   14[BANK0 ] const PTR const unsigned
 11311 ;;		 -> rx_buf(80), 
 11312 ;;  i               1   15[BANK0 ] unsigned char 
 11313 ;;  len             1   13[BANK0 ] unsigned char 
 11314 ;; Return value:  Size  Location     Type
 11315 ;;                  1    wreg      unsigned char 
 11316 ;; Registers used:
 11317 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11318 ;; Tracked objects:
 11319 ;;		On entry : 1F/0
 11320 ;;		On exit  : 1F/0
 11321 ;;		Unchanged: 0/0
 11322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11324 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11325 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11326 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;Total ram usage:       11 bytes
 11328 ;; Hardware stack levels used:    1
 11329 ;; Hardware stack levels required when called:   10
 11330 ;; This function calls:
 11331 ;;		___bmul
 11332 ;;		_led_prepare_to_save
 11333 ;; This function is called by:
 11334 ;;		_ble_decode
 11335 ;; This function uses a non-reentrant model
 11336 ;;
 11337                           
 11338                           
 11339                           ;psect for function _led_set_pro
 11340  0430                     _led_set_pro:	
 11341                           
 11342                           ;incstack = 0
 11343                           ; Regs used in _led_set_pro: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11344                           ;led_set_pro@pbuf stored from wreg
 11345  0430  00AE               	movwf	led_set_pro@pbuf
 11346                           
 11347                           ;app_led.c: 2140: uint8_t len = (*pbuf)*(2+4)+1;
 11348  0431  3006               	movlw	6
 11349  0432  00A2               	movwf	___bmul@multiplicand
 11350  0433  082E               	movf	led_set_pro@pbuf,w
 11351  0434  0086               	movwf	6
 11352  0435  3001               	movlw	1	; select bank2/3
 11353  0436  0087               	movwf	7
 11354  0437  0801               	movf	1,w
 11355  0438  271E  3184         	fcall	___bmul
 11356  043A  3E01               	addlw	1
 11357  043B  00AD               	movwf	led_set_pro@len
 11358                           
 11359                           ;app_led.c: 2141: for(uint8_t i = 0; i < len; i++)
 11360  043C  01AF               	clrf	led_set_pro@i
 11361  043D                     l4655:	
 11362  043D  082D               	movf	led_set_pro@len,w
 11363  043E  022F               	subwf	led_set_pro@i,w
 11364  043F  1803               	btfsc	3,0
 11365  0440  2C5E               	goto	l4657
 11366                           
 11367                           ;app_led.c: 2142: {
 11368                           ;app_led.c: 2143: m_led_para.ble_para.pro_para.array[i] = *(pbuf+i);
 11369  0441  082F               	movf	led_set_pro@i,w
 11370  0442  072E               	addwf	led_set_pro@pbuf,w
 11371  0443  00A5               	movwf	??_led_set_pro
 11372  0444  0086               	movwf	6
 11373  0445  3001               	movlw	1	; select bank2/3
 11374  0446  0087               	movwf	7
 11375  0447  0801               	movf	1,w
 11376  0448  00A6               	movwf	??_led_set_pro+1
 11377  0449  082F               	movf	led_set_pro@i,w
 11378  044A  00A7               	movwf	??_led_set_pro+2
 11379  044B  30B3               	movlw	179
 11380  044C  01A8               	clrf	??_led_set_pro+3
 11381  044D  00A9               	movwf	??_led_set_pro+4
 11382  044E  3023               	movlw	35
 11383  044F  00AA               	movwf	??_led_set_pro+5
 11384  0450  0827               	movf	??_led_set_pro+2,w
 11385  0451  0729               	addwf	??_led_set_pro+4,w
 11386  0452  00AB               	movwf	??_led_set_pro+6
 11387  0453  0828               	movf	??_led_set_pro+3,w
 11388  0454  3D2A               	addwfc	??_led_set_pro+5,w
 11389  0455  00AC               	movwf	??_led_set_pro+7
 11390  0456  082B               	movf	??_led_set_pro+6,w
 11391  0457  0086               	movwf	6
 11392  0458  082C               	movf	??_led_set_pro+7,w
 11393  0459  0087               	movwf	7
 11394  045A  0826               	movf	??_led_set_pro+1,w
 11395  045B  0081               	movwf	1
 11396  045C  0AAF               	incf	led_set_pro@i,f
 11397  045D  2C3D               	goto	l4655
 11398  045E                     l4657:	
 11399                           
 11400                           ;app_led.c: 2144: }
 11401                           ;app_led.c: 2145: led_prepare_to_save();
 11402  045E  3189  216C         	fcall	_led_prepare_to_save
 11403                           
 11404                           ;app_led.c: 2146: return 1;
 11405  0460  3401               	retlw	1
 11406  0461                     __end_of_led_set_pro:	
 11407  0461                     start_initialization:	
 11408                           ; #config settings
 11409                           
 11410  0461                     __initialization:		;BIGRAM
 11411                           
 11412                           ; Initialize objects allocated to BANK2
 11413  0461  3007               	movlw	low __pidataBANK2
 11414  0462  0084               	movwf	4
 11415  0463  3090               	movlw	(high __pidataBANK2)| (0+128)
 11416  0464  0085               	movwf	5
 11417  0465  3020               	movlw	low __pdataBANK2
 11418  0466  0086               	movwf	6
 11419  0467  3001               	movlw	high __pdataBANK2
 11420  0468  0087               	movwf	7
 11421  0469  3000               	movlw	0
 11422  046A  00FF               	movwf	127
 11423  046B  3035               	movlw	53
 11424  046C  3188  2024  3184   	fcall	init_ram
 11425                           
 11426                           ; Clear objects allocated to BIGRAM
 11427  046F  307F               	movlw	127
 11428  0470  0084               	movwf	4
 11429  0471  3023               	movlw	35
 11430  0472  0085               	movwf	5
 11431  0473  3071               	movlw	113
 11432  0474  00FE               	movwf	126
 11433  0475  3000               	movlw	0
 11434  0476  00FF               	movwf	127
 11435  0477  319D  25DC  3184   	fcall	clear_ram0
 11436                           
 11437                           ; Clear objects allocated to BANK0
 11438  047A  3055               	movlw	low __pbssBANK0
 11439  047B  0084               	movwf	4
 11440  047C  3000               	movlw	high __pbssBANK0
 11441  047D  0085               	movwf	5
 11442  047E  3017               	movlw	23
 11443  047F  00FE               	movwf	126
 11444  0480  3000               	movlw	0
 11445  0481  00FF               	movwf	127
 11446  0482  319D  25DC  3184   	fcall	clear_ram0
 11447                           
 11448                           ; Clear objects allocated to BANK1
 11449  0485  30D7               	movlw	low __pbssBANK1
 11450  0486  0084               	movwf	4
 11451  0487  3000               	movlw	high __pbssBANK1
 11452  0488  0085               	movwf	5
 11453  0489  300F               	movlw	15
 11454  048A  00FE               	movwf	126
 11455  048B  3000               	movlw	0
 11456  048C  00FF               	movwf	127
 11457  048D  319D  25DC  3184   	fcall	clear_ram0
 11458                           
 11459                           ; Clear objects allocated to BANK3
 11460  0490  30A0               	movlw	low __pbssBANK3
 11461  0491  0084               	movwf	4
 11462  0492  3001               	movlw	high __pbssBANK3
 11463  0493  0085               	movwf	5
 11464  0494  3050               	movlw	80
 11465  0495  00FE               	movwf	126
 11466  0496  3000               	movlw	0
 11467  0497  00FF               	movwf	127
 11468  0498  319D  25DC  3184   	fcall	clear_ram0
 11469                           
 11470                           ; Clear objects allocated to BANK4
 11471  049B  3020               	movlw	low __pbssBANK4
 11472  049C  0084               	movwf	4
 11473  049D  3002               	movlw	high __pbssBANK4
 11474  049E  0085               	movwf	5
 11475  049F  3040               	movlw	64
 11476  04A0  00FE               	movwf	126
 11477  04A1  3000               	movlw	0
 11478  04A2  00FF               	movwf	127
 11479  04A3  319D  25DC  3184   	fcall	clear_ram0
 11480  04A6                     end_of_initialization:	
 11481                           ;End of C runtime variable initialization code
 11482                           
 11483  04A6                     __end_of__initialization:	
 11484  04A6  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11485  04A7  0020               	movlb	0
 11486  04A8  2CA9               	ljmp	_main	;jump to C main() function
 11487  04A9                     __pmaintext:	
 11488                           ; 1 bytes @ 0x35
 11489 ;;
 11490 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 11491 ;;
 11492 ;; *************** function _main *****************
 11493 ;; Defined at:
 11494 ;;		line 149 in file "src/app_main.c"
 11495 ;; Parameters:    Size  Location     Type
 11496 ;;		None
 11497 ;; Auto vars:     Size  Location     Type
 11498 ;;		None
 11499 ;; Return value:  Size  Location     Type
 11500 ;;                  1    wreg      void 
 11501 ;; Registers used:
 11502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11503 ;; Tracked objects:
 11504 ;;		On entry : B1F/0
 11505 ;;		On exit  : 1F/0
 11506 ;;		Unchanged: 0/0
 11507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11512 ;;Total ram usage:        0 bytes
 11513 ;; Hardware stack levels required when called:   13
 11514 ;; This function calls:
 11515 ;;		_app_init
 11516 ;;		_ble_init
 11517 ;;		_ble_process
 11518 ;;		_led_init
 11519 ;;		_led_second_cb
 11520 ;;		_rtc_init
 11521 ;;		_rtc_second_ready
 11522 ;; This function is called by:
 11523 ;;		Startup code after reset
 11524 ;; This function uses a non-reentrant model
 11525 ;;
 11526                           
 11527                           
 11528                           ;psect for function _main
 11529  04A9                     _main:	
 11530                           
 11531                           ;app_main.c: 151: app_init();
 11532                           
 11533                           ;incstack = 0
 11534                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11535  04A9  24C2  3184         	fcall	_app_init
 11536                           
 11537                           ;app_main.c: 152: ble_init();
 11538  04AB  25AD  3184         	fcall	_ble_init
 11539                           
 11540                           ;app_main.c: 153: rtc_init();
 11541  04AD  27AB  3184         	fcall	_rtc_init
 11542                           
 11543                           ;app_main.c: 154: led_init();
 11544  04AF  2657  3184         	fcall	_led_init
 11545                           
 11546                           ;app_main.c: 155: (PIE1bits.RCIE = 1);
 11547  04B1  0021               	movlb	1	; select bank1
 11548  04B2  1691               	bsf	17,5	;volatile
 11549                           
 11550                           ;app_main.c: 156: (T0CON0bits.T0EN = 1);
 11551  04B3  0020               	movlb	0	; select bank0
 11552  04B4  1797               	bsf	23,7	;volatile
 11553                           
 11554                           ;app_main.c: 157: (T2CONbits.TMR2ON = 1);
 11555  04B5  151F               	bsf	31,2	;volatile
 11556  04B6                     l1137:	
 11557                           ;app_main.c: 159: while(1)
 11558                           
 11559  04B6  0064               	clrwdt	;# 
 11560                           
 11561                           ;app_main.c: 163: ble_process();
 11562  04B7  277F  3184         	fcall	_ble_process
 11563                           
 11564                           ;app_main.c: 164: if(rtc_second_ready())
 11565  04B9  27B6  3184         	fcall	_rtc_second_ready
 11566  04BB  3A00               	xorlw	0
 11567  04BC  1903               	skipnz
 11568  04BD  2CB6               	goto	l1137
 11569                           
 11570                           ;app_main.c: 165: {
 11571                           ;app_main.c: 166: led_second_cb();
 11572  04BE  3194  24B9  3184   	fcall	_led_second_cb
 11573  04C1  2CB6               	goto	l1137
 11574  04C2                     __end_of_main:	
 11575  04C2                     __ptext69:	
 11576 ;; *************** function _app_init *****************
 11577 ;; Defined at:
 11578 ;;		line 109 in file "src/app_main.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;		None
 11581 ;; Auto vars:     Size  Location     Type
 11582 ;;		None
 11583 ;; Return value:  Size  Location     Type
 11584 ;;                  1    wreg      void 
 11585 ;; Registers used:
 11586 ;;		wreg, status,2, status,0, pclath, cstack
 11587 ;; Tracked objects:
 11588 ;;		On entry : B1F/0
 11589 ;;		On exit  : B1F/1
 11590 ;;		Unchanged: B00/0
 11591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11596 ;;Total ram usage:        0 bytes
 11597 ;; Hardware stack levels used:    1
 11598 ;; Hardware stack levels required when called:   10
 11599 ;; This function calls:
 11600 ;;		_eusart_init
 11601 ;;		_gpio_init
 11602 ;;		_key_init
 11603 ;;		_osc_init
 11604 ;;		_pwm1_init
 11605 ;;		_pwm2_init
 11606 ;;		_pwm3_init
 11607 ;;		_pwm4_init
 11608 ;;		_pwm5_init
 11609 ;;		_tmr0_init
 11610 ;;		_tmr2_init
 11611 ;; This function is called by:
 11612 ;;		_main
 11613 ;; This function uses a non-reentrant model
 11614 ;;
 11615                           
 11616                           
 11617                           ;psect for function _app_init
 11618  04C2                     _app_init:	
 11619                           
 11620                           ;app_main.c: 111: gpio_init();
 11621                           
 11622                           ;incstack = 0
 11623                           ; Regs used in _app_init: [wreg+status,2+status,0+pclath+cstack]
 11624  04C2  2509  3184         	fcall	_gpio_init
 11625                           
 11626                           ;app_main.c: 112: osc_init();
 11627  04C4  254D  3184         	fcall	_osc_init
 11628                           
 11629                           ;app_main.c: 113: pwm1_init();
 11630  04C6  2557  3184         	fcall	_pwm1_init
 11631                           
 11632                           ;app_main.c: 114: pwm2_init();
 11633  04C8  2561  3184         	fcall	_pwm2_init
 11634                           
 11635                           ;app_main.c: 115: pwm3_init();
 11636  04CA  256A  3184         	fcall	_pwm3_init
 11637                           
 11638                           ;app_main.c: 116: pwm4_init();
 11639  04CC  2575  3184         	fcall	_pwm4_init
 11640                           
 11641                           ;app_main.c: 117: pwm5_init();
 11642  04CE  2580  3184         	fcall	_pwm5_init
 11643                           
 11644                           ;app_main.c: 118: tmr0_init(rtc_process);
 11645  04D0  303C               	movlw	low _rtc_process
 11646  04D1  0020               	movlb	0	; select bank0
 11647  04D2  00A2               	movwf	tmr0_init@cb
 11648  04D3  3010               	movlw	high _rtc_process
 11649  04D4  00A3               	movwf	tmr0_init@cb+1
 11650  04D5  258A  3184         	fcall	_tmr0_init
 11651                           
 11652                           ;app_main.c: 119: tmr2_init(tmr2_isr_callback);
 11653  04D7  300B               	movlw	low _tmr2_isr_callback
 11654  04D8  0020               	movlb	0	; select bank0
 11655  04D9  00A2               	movwf	tmr2_init@cb
 11656  04DA  301F               	movlw	high _tmr2_isr_callback
 11657  04DB  00A3               	movwf	tmr2_init@cb+1
 11658  04DC  259C  3184         	fcall	_tmr2_init
 11659                           
 11660                           ;app_main.c: 120: eusart_init(ble_receive);
 11661  04DE  30E8               	movlw	low _ble_receive
 11662  04DF  0020               	movlb	0	; select bank0
 11663  04E0  00A2               	movwf	eusart_init@cb
 11664  04E1  301D               	movlw	high _ble_receive
 11665  04E2  00A3               	movwf	eusart_init@cb+1
 11666  04E3  24EE  3184         	fcall	_eusart_init
 11667                           
 11668                           ;app_main.c: 122: key_init(led_touch_cb);
 11669  04E5  30CC               	movlw	low _led_touch_cb
 11670  04E6  0020               	movlb	0	; select bank0
 11671  04E7  00A2               	movwf	key_init@cb
 11672  04E8  301F               	movlw	high _led_touch_cb
 11673  04E9  00A3               	movwf	key_init@cb+1
 11674  04EA  27BC               	fcall	_key_init
 11675                           
 11676                           ;app_main.c: 125: (INTCONbits.GIE = 1);
 11677  04EB  178B               	bsf	11,7	;volatile
 11678                           
 11679                           ;app_main.c: 126: (INTCONbits.PEIE = 1);
 11680  04EC  170B               	bsf	11,6	;volatile
 11681  04ED  0008               	return
 11682  04EE                     __end_of_app_init:	
 11683  04EE                     __ptext80:	
 11684 ;; *************** function _eusart_init *****************
 11685 ;; Defined at:
 11686 ;;		line 12 in file "src/drv_eusart.c"
 11687 ;; Parameters:    Size  Location     Type
 11688 ;;  cb              2    2[BANK0 ] PTR FTN(unsigned char ,)
 11689 ;;		 -> ble_receive(1), 
 11690 ;; Auto vars:     Size  Location     Type
 11691 ;;		None
 11692 ;; Return value:  Size  Location     Type
 11693 ;;                  1    wreg      void 
 11694 ;; Registers used:
 11695 ;;		wreg, status,2
 11696 ;; Tracked objects:
 11697 ;;		On entry : B1F/0
 11698 ;;		On exit  : B1F/1
 11699 ;;		Unchanged: B00/0
 11700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11701 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11704 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11705 ;;Total ram usage:        2 bytes
 11706 ;; Hardware stack levels used:    1
 11707 ;; Hardware stack levels required when called:    9
 11708 ;; This function calls:
 11709 ;;		Nothing
 11710 ;; This function is called by:
 11711 ;;		_app_init
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           
 11716                           ;psect for function _eusart_init
 11717  04EE                     _eusart_init:	
 11718                           
 11719                           ;drv_eusart.c: 14: PIE1bits.RCIE = 0;
 11720                           
 11721                           ;incstack = 0
 11722                           ; Regs used in _eusart_init: [wreg+status,2]
 11723  04EE  0021               	movlb	1	; select bank1
 11724  04EF  1291               	bcf	17,5	;volatile
 11725                           
 11726                           ;drv_eusart.c: 15: PIE1bits.TXIE = 0;
 11727  04F0  1211               	bcf	17,4	;volatile
 11728                           
 11729                           ;drv_eusart.c: 17: BAUD1CON = 0x08;
 11730  04F1  3008               	movlw	8
 11731  04F2  0023               	movlb	3	; select bank3
 11732  04F3  009F               	movwf	31	;volatile
 11733                           
 11734                           ;drv_eusart.c: 18: RC1STA = 0x90;
 11735  04F4  3090               	movlw	144
 11736  04F5  009D               	movwf	29	;volatile
 11737                           
 11738                           ;drv_eusart.c: 19: TX1STA = 0x24;
 11739  04F6  3024               	movlw	36
 11740  04F7  009E               	movwf	30	;volatile
 11741                           
 11742                           ;drv_eusart.c: 20: SP1BRGL = 0xA0;
 11743  04F8  30A0               	movlw	160
 11744  04F9  009B               	movwf	27	;volatile
 11745                           
 11746                           ;drv_eusart.c: 21: SP1BRGH = 0x01;
 11747  04FA  3001               	movlw	1
 11748  04FB  009C               	movwf	28	;volatile
 11749                           
 11750                           ;drv_eusart.c: 24: tx_tail = 0;
 11751  04FC  0020               	movlb	0	; select bank0
 11752  04FD  3040               	movlw	64
 11753  04FE  01EB               	clrf	_tx_tail
 11754  04FF  01EA               	clrf	_tx_head
 11755                           
 11756                           ;drv_eusart.c: 26: tx_remain = sizeof(tx_buf);
 11757  0500  00EC               	movwf	_tx_remain
 11758                           
 11759                           ;drv_eusart.c: 27: eusart_rcv_cb = cb;
 11760  0501  0823               	movf	eusart_init@cb+1,w
 11761  0502  0021               	movlb	1	; select bank1
 11762  0503  00E9               	movwf	(_eusart_rcv_cb+1)^(0+128)
 11763  0504  0020               	movlb	0	; select bank0
 11764  0505  0822               	movf	eusart_init@cb,w
 11765  0506  0021               	movlb	1	; select bank1
 11766  0507  00E8               	movwf	_eusart_rcv_cb^(0+128)
 11767  0508  0008               	return
 11768  0509                     __end_of_eusart_init:	
 11769  0509                     __ptext79:	
 11770 ;; *************** function _gpio_init *****************
 11771 ;; Defined at:
 11772 ;;		line 38 in file "src/app_main.c"
 11773 ;; Parameters:    Size  Location     Type
 11774 ;;		None
 11775 ;; Auto vars:     Size  Location     Type
 11776 ;;		None
 11777 ;; Return value:  Size  Location     Type
 11778 ;;                  1    wreg      void 
 11779 ;; Registers used:
 11780 ;;		wreg, status,2, status,0
 11781 ;; Tracked objects:
 11782 ;;		On entry : B1F/0
 11783 ;;		On exit  : B1F/1C
 11784 ;;		Unchanged: B00/0
 11785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11790 ;;Total ram usage:        0 bytes
 11791 ;; Hardware stack levels used:    1
 11792 ;; Hardware stack levels required when called:    9
 11793 ;; This function calls:
 11794 ;;		Nothing
 11795 ;; This function is called by:
 11796 ;;		_app_init
 11797 ;; This function uses a non-reentrant model
 11798 ;;
 11799                           
 11800                           
 11801                           ;psect for function _gpio_init
 11802  0509                     _gpio_init:	
 11803                           
 11804                           ;app_main.c: 43: LATA = 0x02;
 11805                           
 11806                           ;incstack = 0
 11807                           ; Regs used in _gpio_init: [wreg+status,2+status,0]
 11808  0509  3002               	movlw	2
 11809  050A  0022               	movlb	2	; select bank2
 11810  050B  008C               	movwf	12	;volatile
 11811                           
 11812                           ;app_main.c: 44: LATB = 0xD0;
 11813  050C  30D0               	movlw	208
 11814  050D  008D               	movwf	13	;volatile
 11815                           
 11816                           ;app_main.c: 45: LATC = 0x00;
 11817  050E  018E               	clrf	14	;volatile
 11818                           
 11819                           ;app_main.c: 50: TRISA = 0x34;
 11820  050F  3034               	movlw	52
 11821  0510  0021               	movlb	1	; select bank1
 11822  0511  008C               	movwf	12	;volatile
 11823                           
 11824                           ;app_main.c: 51: TRISB = 0x00;
 11825  0512  018D               	clrf	13	;volatile
 11826                           
 11827                           ;app_main.c: 52: TRISC = 0x05;
 11828  0513  3005               	movlw	5
 11829  0514  008E               	movwf	14	;volatile
 11830                           
 11831                           ;app_main.c: 57: ANSELC = 0x00;
 11832  0515  0023               	movlb	3	; select bank3
 11833  0516  018E               	clrf	14	;volatile
 11834                           
 11835                           ;app_main.c: 58: ANSELB = 0x00;
 11836  0517  018D               	clrf	13	;volatile
 11837                           
 11838                           ;app_main.c: 59: ANSELA = 0x00;
 11839  0518  018C               	clrf	12	;volatile
 11840                           
 11841                           ;app_main.c: 64: WPUB = 0x00;
 11842  0519  0024               	movlb	4	; select bank4
 11843  051A  018D               	clrf	13	;volatile
 11844                           
 11845                           ;app_main.c: 65: WPUA = 0x04;
 11846  051B  3004               	movlw	4
 11847  051C  008C               	movwf	12	;volatile
 11848                           
 11849                           ;app_main.c: 66: WPUC = 0x01;
 11850  051D  3001               	movlw	1
 11851  051E  008E               	movwf	14	;volatile
 11852                           
 11853                           ;app_main.c: 71: ODCONA = 0x00;
 11854  051F  0025               	movlb	5	; select bank5
 11855  0520  018C               	clrf	12	;volatile
 11856                           
 11857                           ;app_main.c: 72: ODCONB = 0x00;
 11858  0521  018D               	clrf	13	;volatile
 11859                           
 11860                           ;app_main.c: 73: ODCONC = 0x00;
 11861  0522  018E               	clrf	14	;volatile
 11862                           
 11863                           ;app_main.c: 75: PPSLOCK = 0x55;
 11864  0523  3055               	movlw	85
 11865  0524  003C               	movlb	28	; select bank28
 11866  0525  008F               	movwf	15	;volsfr
 11867                           
 11868                           ;app_main.c: 76: PPSLOCK = 0xAA;
 11869  0526  30AA               	movlw	170
 11870  0527  008F               	movwf	15	;volsfr
 11871                           
 11872                           ;app_main.c: 77: PPSLOCKbits.PPSLOCKED = 0x00;
 11873  0528  100F               	bcf	15,0	;volsfr
 11874                           
 11875                           ;app_main.c: 79: RXPPSbits.RXPPS = 0x12;
 11876  0529  0824               	movf	36,w	;volatile
 11877  052A  39E0               	andlw	-32
 11878  052B  3812               	iorlw	18
 11879  052C  00A4               	movwf	36	;volatile
 11880                           
 11881                           ;app_main.c: 80: RB4PPSbits.RB4PPS = 0x14;
 11882  052D  003D               	movlb	29	; select bank29
 11883  052E  081C               	movf	28,w	;volatile
 11884  052F  39E0               	andlw	-32
 11885  0530  3814               	iorlw	20
 11886  0531  009C               	movwf	28	;volatile
 11887                           
 11888                           ;app_main.c: 81: RC5PPSbits.RC5PPS = 0x0C;
 11889  0532  0825               	movf	37,w	;volatile
 11890  0533  39E0               	andlw	-32
 11891  0534  380C               	iorlw	12
 11892  0535  00A5               	movwf	37	;volatile
 11893                           
 11894                           ;app_main.c: 82: RC4PPSbits.RC4PPS = 0x0D;
 11895  0536  0824               	movf	36,w	;volatile
 11896  0537  39E0               	andlw	-32
 11897  0538  380D               	iorlw	13
 11898  0539  00A4               	movwf	36	;volatile
 11899                           
 11900                           ;app_main.c: 83: RC3PPSbits.RC3PPS = 0x0E;
 11901  053A  0823               	movf	35,w	;volatile
 11902  053B  39E0               	andlw	-32
 11903  053C  380E               	iorlw	14
 11904  053D  00A3               	movwf	35	;volatile
 11905                           
 11906                           ;app_main.c: 84: RC6PPSbits.RC6PPS = 0x0F;
 11907  053E  0826               	movf	38,w	;volatile
 11908  053F  39E0               	andlw	-32
 11909  0540  380F               	iorlw	15
 11910  0541  00A6               	movwf	38	;volatile
 11911                           
 11912                           ;app_main.c: 85: RC7PPSbits.RC7PPS = 0x02;
 11913  0542  0827               	movf	39,w	;volatile
 11914  0543  39E0               	andlw	-32
 11915  0544  3802               	iorlw	2
 11916  0545  00A7               	movwf	39	;volatile
 11917                           
 11918                           ;app_main.c: 87: PPSLOCK = 0x55;
 11919  0546  3055               	movlw	85
 11920  0547  003C               	movlb	28	; select bank28
 11921  0548  008F               	movwf	15	;volsfr
 11922                           
 11923                           ;app_main.c: 88: PPSLOCK = 0xAA;
 11924  0549  30AA               	movlw	170
 11925  054A  008F               	movwf	15	;volsfr
 11926                           
 11927                           ;app_main.c: 89: PPSLOCKbits.PPSLOCKED = 0x01;
 11928  054B  140F               	bsf	15,0	;volsfr
 11929  054C  0008               	return
 11930  054D                     __end_of_gpio_init:	
 11931  054D                     __ptext77:	
 11932 ;; *************** function _osc_init *****************
 11933 ;; Defined at:
 11934 ;;		line 23 in file "src/app_main.c"
 11935 ;; Parameters:    Size  Location     Type
 11936 ;;		None
 11937 ;; Auto vars:     Size  Location     Type
 11938 ;;		None
 11939 ;; Return value:  Size  Location     Type
 11940 ;;                  1    wreg      void 
 11941 ;; Registers used:
 11942 ;;		wreg, status,2
 11943 ;; Tracked objects:
 11944 ;;		On entry : B1F/1C
 11945 ;;		On exit  : B1F/12
 11946 ;;		Unchanged: B00/0
 11947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11952 ;;Total ram usage:        0 bytes
 11953 ;; Hardware stack levels used:    1
 11954 ;; Hardware stack levels required when called:    9
 11955 ;; This function calls:
 11956 ;;		Nothing
 11957 ;; This function is called by:
 11958 ;;		_app_init
 11959 ;; This function uses a non-reentrant model
 11960 ;;
 11961                           
 11962                           
 11963                           ;psect for function _osc_init
 11964  054D                     _osc_init:	
 11965                           
 11966                           ;app_main.c: 26: OSCCON1 = 0x60;
 11967                           
 11968                           ;incstack = 0
 11969                           ; Regs used in _osc_init: [wreg+status,2]
 11970  054D  3060               	movlw	96
 11971  054E  0032               	movlb	18	; select bank18
 11972  054F  0099               	movwf	25	;volatile
 11973                           
 11974                           ;app_main.c: 28: OSCCON3 = 0x00;
 11975  0550  019B               	clrf	27	;volatile
 11976                           
 11977                           ;app_main.c: 30: OSCEN = 0x48;
 11978  0551  3048               	movlw	72
 11979  0552  009D               	movwf	29	;volatile
 11980                           
 11981                           ;app_main.c: 32: OSCFRQ = 0x06;
 11982  0553  3006               	movlw	6
 11983  0554  009F               	movwf	31	;volatile
 11984                           
 11985                           ;app_main.c: 34: OSCTUNE = 0x00;
 11986  0555  019E               	clrf	30	;volatile
 11987  0556  0008               	return
 11988  0557                     __end_of_osc_init:	
 11989  0557                     __ptext76:	
 11990 ;; *************** function _pwm1_init *****************
 11991 ;; Defined at:
 11992 ;;		line 3 in file "src/drv_pwm.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;		None
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;		None
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  1    wreg      void 
 11999 ;; Registers used:
 12000 ;;		wreg, status,2, status,0
 12001 ;; Tracked objects:
 12002 ;;		On entry : B1F/12
 12003 ;;		On exit  : B1F/5
 12004 ;;		Unchanged: B00/0
 12005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12010 ;;Total ram usage:        0 bytes
 12011 ;; Hardware stack levels used:    1
 12012 ;; Hardware stack levels required when called:    9
 12013 ;; This function calls:
 12014 ;;		Nothing
 12015 ;; This function is called by:
 12016 ;;		_app_init
 12017 ;; This function uses a non-reentrant model
 12018 ;;
 12019                           
 12020                           
 12021                           ;psect for function _pwm1_init
 12022  0557                     _pwm1_init:	
 12023                           
 12024                           ;drv_pwm.c: 6: CCP1CON = 0x8F;
 12025                           
 12026                           ;incstack = 0
 12027                           ; Regs used in _pwm1_init: [wreg+status,2+status,0]
 12028  0557  308F               	movlw	143
 12029  0558  0025               	movlb	5	; select bank5
 12030  0559  0093               	movwf	19	;volatile
 12031                           
 12032                           ;drv_pwm.c: 9: CCPR1H = 0x00;
 12033  055A  0192               	clrf	18	;volatile
 12034                           
 12035                           ;drv_pwm.c: 12: CCPR1L = 0x00;
 12036  055B  0191               	clrf	17	;volatile
 12037                           
 12038                           ;drv_pwm.c: 15: CCPTMRSbits.C1TSEL = 0x1;
 12039  055C  081F               	movf	31,w	;volatile
 12040  055D  39FC               	andlw	-4
 12041  055E  3801               	iorlw	1
 12042  055F  009F               	movwf	31	;volatile
 12043  0560  0008               	return
 12044  0561                     __end_of_pwm1_init:	
 12045  0561                     __ptext75:	
 12046 ;; *************** function _pwm2_init *****************
 12047 ;; Defined at:
 12048 ;;		line 25 in file "src/drv_pwm.c"
 12049 ;; Parameters:    Size  Location     Type
 12050 ;;		None
 12051 ;; Auto vars:     Size  Location     Type
 12052 ;;		None
 12053 ;; Return value:  Size  Location     Type
 12054 ;;                  1    wreg      void 
 12055 ;; Registers used:
 12056 ;;		wreg, status,2, status,0
 12057 ;; Tracked objects:
 12058 ;;		On entry : B1F/5
 12059 ;;		On exit  : B1F/5
 12060 ;;		Unchanged: B00/0
 12061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12066 ;;Total ram usage:        0 bytes
 12067 ;; Hardware stack levels used:    1
 12068 ;; Hardware stack levels required when called:    9
 12069 ;; This function calls:
 12070 ;;		Nothing
 12071 ;; This function is called by:
 12072 ;;		_app_init
 12073 ;; This function uses a non-reentrant model
 12074 ;;
 12075                           
 12076                           
 12077                           ;psect for function _pwm2_init
 12078  0561                     _pwm2_init:	
 12079                           
 12080                           ;drv_pwm.c: 28: CCP2CON = 0x8F;
 12081                           
 12082                           ;incstack = 0
 12083                           ; Regs used in _pwm2_init: [wreg+status,2+status,0]
 12084  0561  308F               	movlw	143
 12085  0562  0097               	movwf	23	;volatile
 12086                           
 12087                           ;drv_pwm.c: 31: CCPR2H = 0x00;
 12088  0563  0196               	clrf	22	;volatile
 12089                           
 12090                           ;drv_pwm.c: 34: CCPR2L = 0x00;
 12091  0564  0195               	clrf	21	;volatile
 12092                           
 12093                           ;drv_pwm.c: 37: CCPTMRSbits.C2TSEL = 0x1;
 12094  0565  081F               	movf	31,w	;volatile
 12095  0566  39F3               	andlw	-13
 12096  0567  3804               	iorlw	4
 12097  0568  009F               	movwf	31	;volatile
 12098  0569  0008               	return
 12099  056A                     __end_of_pwm2_init:	
 12100  056A                     __ptext74:	
 12101 ;; *************** function _pwm3_init *****************
 12102 ;; Defined at:
 12103 ;;		line 47 in file "src/drv_pwm.c"
 12104 ;; Parameters:    Size  Location     Type
 12105 ;;		None
 12106 ;; Auto vars:     Size  Location     Type
 12107 ;;		None
 12108 ;; Return value:  Size  Location     Type
 12109 ;;                  1    wreg      void 
 12110 ;; Registers used:
 12111 ;;		wreg, status,2, status,0
 12112 ;; Tracked objects:
 12113 ;;		On entry : B1F/5
 12114 ;;		On exit  : B1F/5
 12115 ;;		Unchanged: B00/0
 12116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12121 ;;Total ram usage:        0 bytes
 12122 ;; Hardware stack levels used:    1
 12123 ;; Hardware stack levels required when called:    9
 12124 ;; This function calls:
 12125 ;;		Nothing
 12126 ;; This function is called by:
 12127 ;;		_app_init
 12128 ;; This function uses a non-reentrant model
 12129 ;;
 12130                           
 12131                           
 12132                           ;psect for function _pwm3_init
 12133  056A                     _pwm3_init:	
 12134                           
 12135                           ;drv_pwm.c: 50: CCP3CON = 0x8F;
 12136                           
 12137                           ;incstack = 0
 12138                           ; Regs used in _pwm3_init: [wreg+status,2+status,0]
 12139  056A  308F               	movlw	143
 12140  056B  0026               	movlb	6	; select bank6
 12141  056C  0093               	movwf	19	;volatile
 12142                           
 12143                           ;drv_pwm.c: 53: CCPR3H = 0x00;
 12144  056D  0192               	clrf	18	;volatile
 12145                           
 12146                           ;drv_pwm.c: 56: CCPR3L = 0x00;
 12147  056E  0191               	clrf	17	;volatile
 12148                           
 12149                           ;drv_pwm.c: 59: CCPTMRSbits.C3TSEL = 0x1;
 12150  056F  0025               	movlb	5	; select bank5
 12151  0570  081F               	movf	31,w	;volatile
 12152  0571  39CF               	andlw	-49
 12153  0572  3810               	iorlw	16
 12154  0573  009F               	movwf	31	;volatile
 12155  0574  0008               	return
 12156  0575                     __end_of_pwm3_init:	
 12157  0575                     __ptext73:	
 12158 ;; *************** function _pwm4_init *****************
 12159 ;; Defined at:
 12160 ;;		line 69 in file "src/drv_pwm.c"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;		None
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;		None
 12165 ;; Return value:  Size  Location     Type
 12166 ;;                  1    wreg      void 
 12167 ;; Registers used:
 12168 ;;		wreg, status,2, status,0
 12169 ;; Tracked objects:
 12170 ;;		On entry : B1F/5
 12171 ;;		On exit  : B1F/5
 12172 ;;		Unchanged: B00/0
 12173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;Total ram usage:        0 bytes
 12179 ;; Hardware stack levels used:    1
 12180 ;; Hardware stack levels required when called:    9
 12181 ;; This function calls:
 12182 ;;		Nothing
 12183 ;; This function is called by:
 12184 ;;		_app_init
 12185 ;; This function uses a non-reentrant model
 12186 ;;
 12187                           
 12188                           
 12189                           ;psect for function _pwm4_init
 12190  0575                     _pwm4_init:	
 12191                           
 12192                           ;drv_pwm.c: 72: CCP4CON = 0x8F;
 12193                           
 12194                           ;incstack = 0
 12195                           ; Regs used in _pwm4_init: [wreg+status,2+status,0]
 12196  0575  308F               	movlw	143
 12197  0576  0026               	movlb	6	; select bank6
 12198  0577  0097               	movwf	23	;volatile
 12199                           
 12200                           ;drv_pwm.c: 75: CCPR4H = 0x00;
 12201  0578  0196               	clrf	22	;volatile
 12202                           
 12203                           ;drv_pwm.c: 78: CCPR4L = 0x00;
 12204  0579  0195               	clrf	21	;volatile
 12205                           
 12206                           ;drv_pwm.c: 81: CCPTMRSbits.C4TSEL = 0x1;
 12207  057A  0025               	movlb	5	; select bank5
 12208  057B  081F               	movf	31,w	;volatile
 12209  057C  393F               	andlw	-193
 12210  057D  3840               	iorlw	64
 12211  057E  009F               	movwf	31	;volatile
 12212  057F  0008               	return
 12213  0580                     __end_of_pwm4_init:	
 12214  0580                     __ptext72:	
 12215 ;; *************** function _pwm5_init *****************
 12216 ;; Defined at:
 12217 ;;		line 91 in file "src/drv_pwm.c"
 12218 ;; Parameters:    Size  Location     Type
 12219 ;;		None
 12220 ;; Auto vars:     Size  Location     Type
 12221 ;;		None
 12222 ;; Return value:  Size  Location     Type
 12223 ;;                  1    wreg      void 
 12224 ;; Registers used:
 12225 ;;		wreg, status,2, status,0
 12226 ;; Tracked objects:
 12227 ;;		On entry : B1F/5
 12228 ;;		On exit  : B1F/C
 12229 ;;		Unchanged: B00/0
 12230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12235 ;;Total ram usage:        0 bytes
 12236 ;; Hardware stack levels used:    1
 12237 ;; Hardware stack levels required when called:    9
 12238 ;; This function calls:
 12239 ;;		Nothing
 12240 ;; This function is called by:
 12241 ;;		_app_init
 12242 ;; This function uses a non-reentrant model
 12243 ;;
 12244                           
 12245                           
 12246                           ;psect for function _pwm5_init
 12247  0580                     _pwm5_init:	
 12248                           
 12249                           ;drv_pwm.c: 93: PWM5DCH = 0;
 12250                           
 12251                           ;incstack = 0
 12252                           ; Regs used in _pwm5_init: [wreg+status,2+status,0]
 12253  0580  002C               	movlb	12	; select bank12
 12254  0581  0198               	clrf	24	;volatile
 12255                           
 12256                           ;drv_pwm.c: 94: PWM5DCL = 0;
 12257  0582  0197               	clrf	23	;volatile
 12258                           
 12259                           ;drv_pwm.c: 95: PWMTMRSbits.P5TSEL = 0X01;
 12260  0583  081F               	movf	31,w	;volatile
 12261  0584  39FC               	andlw	-4
 12262  0585  3801               	iorlw	1
 12263  0586  009F               	movwf	31	;volatile
 12264                           
 12265                           ;drv_pwm.c: 96: PWM5CON = 0X80;
 12266  0587  3080               	movlw	128
 12267  0588  0099               	movwf	25	;volatile
 12268  0589  0008               	return
 12269  058A                     __end_of_pwm5_init:	
 12270  058A                     __ptext71:	
 12271 ;; *************** function _tmr0_init *****************
 12272 ;; Defined at:
 12273 ;;		line 6 in file "src/drv_tmr.c"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;  cb              2    2[BANK0 ] PTR FTN()void 
 12276 ;;		 -> rtc_process(1), 
 12277 ;; Auto vars:     Size  Location     Type
 12278 ;;		None
 12279 ;; Return value:  Size  Location     Type
 12280 ;;                  1    wreg      void 
 12281 ;; Registers used:
 12282 ;;		wreg, status,2
 12283 ;; Tracked objects:
 12284 ;;		On entry : B1F/0
 12285 ;;		On exit  : B1F/1
 12286 ;;		Unchanged: B00/0
 12287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12291 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12292 ;;Total ram usage:        2 bytes
 12293 ;; Hardware stack levels used:    1
 12294 ;; Hardware stack levels required when called:    9
 12295 ;; This function calls:
 12296 ;;		Nothing
 12297 ;; This function is called by:
 12298 ;;		_app_init
 12299 ;; This function uses a non-reentrant model
 12300 ;;
 12301                           
 12302                           
 12303                           ;psect for function _tmr0_init
 12304  058A                     _tmr0_init:	
 12305                           
 12306                           ;drv_tmr.c: 9: T0CON0 = 0x00;
 12307                           
 12308                           ;incstack = 0
 12309                           ; Regs used in _tmr0_init: [wreg+status,2]
 12310  058A  0197               	clrf	23	;volatile
 12311                           
 12312                           ;drv_tmr.c: 12: T0CON1 = 0xD7;
 12313  058B  30D7               	movlw	215
 12314  058C  0098               	movwf	24	;volatile
 12315                           
 12316                           ;drv_tmr.c: 15: TMR0H = 0xFF;
 12317  058D  30FF               	movlw	255
 12318  058E  0096               	movwf	22	;volatile
 12319                           
 12320                           ;drv_tmr.c: 18: TMR0L = 0x00;
 12321  058F  0195               	clrf	21	;volatile
 12322                           
 12323                           ;drv_tmr.c: 21: PIR0bits.TMR0IF = 0;
 12324  0590  1290               	bcf	16,5	;volatile
 12325                           
 12326                           ;drv_tmr.c: 24: PIE0bits.TMR0IE = 1;
 12327  0591  0021               	movlb	1	; select bank1
 12328  0592  1690               	bsf	16,5	;volatile
 12329                           
 12330                           ;drv_tmr.c: 26: tmr0_isr_cb = cb;
 12331  0593  0020               	movlb	0	; select bank0
 12332  0594  0823               	movf	tmr0_init@cb+1,w
 12333  0595  0021               	movlb	1	; select bank1
 12334  0596  00ED               	movwf	(_tmr0_isr_cb+1)^(0+128)
 12335  0597  0020               	movlb	0	; select bank0
 12336  0598  0822               	movf	tmr0_init@cb,w
 12337  0599  0021               	movlb	1	; select bank1
 12338  059A  00EC               	movwf	_tmr0_isr_cb^(0+128)
 12339  059B  0008               	return
 12340  059C                     __end_of_tmr0_init:	
 12341  059C                     __ptext70:	
 12342 ;; *************** function _tmr2_init *****************
 12343 ;; Defined at:
 12344 ;;		line 38 in file "src/drv_tmr.c"
 12345 ;; Parameters:    Size  Location     Type
 12346 ;;  cb              2    2[BANK0 ] PTR FTN()void 
 12347 ;;		 -> tmr2_isr_callback(1), 
 12348 ;; Auto vars:     Size  Location     Type
 12349 ;;		None
 12350 ;; Return value:  Size  Location     Type
 12351 ;;                  1    wreg      void 
 12352 ;; Registers used:
 12353 ;;		wreg, status,2
 12354 ;; Tracked objects:
 12355 ;;		On entry : B1F/0
 12356 ;;		On exit  : B1F/1
 12357 ;;		Unchanged: B00/0
 12358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12359 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12362 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;Total ram usage:        2 bytes
 12364 ;; Hardware stack levels used:    1
 12365 ;; Hardware stack levels required when called:    9
 12366 ;; This function calls:
 12367 ;;		Nothing
 12368 ;; This function is called by:
 12369 ;;		_app_init
 12370 ;; This function uses a non-reentrant model
 12371 ;;
 12372                           
 12373                           
 12374                           ;psect for function _tmr2_init
 12375  059C                     _tmr2_init:	
 12376                           
 12377                           ;drv_tmr.c: 41: T2CON = 0x78;
 12378                           
 12379                           ;incstack = 0
 12380                           ; Regs used in _tmr2_init: [wreg+status,2]
 12381  059C  3078               	movlw	120
 12382  059D  009F               	movwf	31	;volatile
 12383                           
 12384                           ;drv_tmr.c: 44: PR2 = 0xF9;
 12385  059E  30F9               	movlw	249
 12386  059F  009E               	movwf	30	;volatile
 12387                           
 12388                           ;drv_tmr.c: 47: TMR2 = 0x00;
 12389  05A0  019D               	clrf	29	;volatile
 12390                           
 12391                           ;drv_tmr.c: 50: PIR1bits.TMR2IF = 0;
 12392  05A1  1091               	bcf	17,1	;volatile
 12393                           
 12394                           ;drv_tmr.c: 53: PIE1bits.TMR2IE = 1;
 12395  05A2  0021               	movlb	1	; select bank1
 12396  05A3  1491               	bsf	17,1	;volatile
 12397                           
 12398                           ;drv_tmr.c: 55: tmr2_isr_cb = cb;
 12399  05A4  0020               	movlb	0	; select bank0
 12400  05A5  0823               	movf	tmr2_init@cb+1,w
 12401  05A6  0021               	movlb	1	; select bank1
 12402  05A7  00EB               	movwf	(_tmr2_isr_cb+1)^(0+128)
 12403  05A8  0020               	movlb	0	; select bank0
 12404  05A9  0822               	movf	tmr2_init@cb,w
 12405  05AA  0021               	movlb	1	; select bank1
 12406  05AB  00EA               	movwf	_tmr2_isr_cb^(0+128)
 12407  05AC  0008               	return
 12408  05AD                     __end_of_tmr2_init:	
 12409  05AD                     __ptext64:	
 12410 ;; *************** function _ble_init *****************
 12411 ;; Defined at:
 12412 ;;		line 180 in file "src/app_ble.c"
 12413 ;; Parameters:    Size  Location     Type
 12414 ;;		None
 12415 ;; Auto vars:     Size  Location     Type
 12416 ;;		None
 12417 ;; Return value:  Size  Location     Type
 12418 ;;                  1    wreg      void 
 12419 ;; Registers used:
 12420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12421 ;; Tracked objects:
 12422 ;;		On entry : B1F/1
 12423 ;;		On exit  : 1F/2
 12424 ;;		Unchanged: 0/0
 12425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12428 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12429 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12430 ;;Total ram usage:        2 bytes
 12431 ;; Hardware stack levels used:    1
 12432 ;; Hardware stack levels required when called:   12
 12433 ;; This function calls:
 12434 ;;		_ble_check_devid
 12435 ;;		_ble_send_cmd
 12436 ;; This function is called by:
 12437 ;;		_main
 12438 ;; This function uses a non-reentrant model
 12439 ;;
 12440                           
 12441                           
 12442                           ;psect for function _ble_init
 12443  05AD                     _ble_init:	
 12444                           
 12445                           ;app_ble.c: 182: LATCbits.LATC1 = 0;
 12446                           
 12447                           ;incstack = 0
 12448                           ; Regs used in _ble_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12449  05AD  0022               	movlb	2	; select bank2
 12450  05AE  108E               	bcf	14,1	;volatile
 12451                           
 12452                           ;app_ble.c: 183: LATBbits.LATB5 = 0;
 12453  05AF  128D               	bcf	13,5	;volatile
 12454                           
 12455                           ;app_ble.c: 184: _delay((unsigned long)((20)*(16000000/4000.0)));
 12456  05B0  3068               	movlw	104
 12457  05B1  0020               	movlb	0	; select bank0
 12458  05B2  00CD               	movwf	??_ble_init
 12459  05B3  30E4               	movlw	228
 12460  05B4                     u6627:	
 12461  05B4  0B89               	decfsz	9,f
 12462  05B5  2DB4               	goto	u6627
 12463  05B6  0BCD               	decfsz	??_ble_init,f
 12464  05B7  2DB4               	goto	u6627
 12465  05B8  0000               	nop
 12466                           
 12467                           ;app_ble.c: 185: LATBbits.LATB5 = 1;
 12468  05B9  0022               	movlb	2	; select bank2
 12469  05BA  168D               	bsf	13,5	;volatile
 12470                           
 12471                           ;app_ble.c: 186: _delay((unsigned long)((240)*(16000000/4000.0)));
 12472  05BB  3005               	movlw	5
 12473  05BC  0020               	movlb	0	; select bank0
 12474  05BD  00CE               	movwf	??_ble_init+1
 12475  05BE  30DF               	movlw	223
 12476  05BF  00CD               	movwf	??_ble_init
 12477  05C0  30BB               	movlw	187
 12478  05C1                     u6637:	
 12479  05C1  0B89               	decfsz	9,f
 12480  05C2  2DC1               	goto	u6637
 12481  05C3  0BCD               	decfsz	??_ble_init,f
 12482  05C4  2DC1               	goto	u6637
 12483  05C5  0BCE               	decfsz	??_ble_init+1,f
 12484  05C6  2DC1               	goto	u6637
 12485  05C7  3200               	nop2
 12486                           
 12487                           ;app_ble.c: 189: if(ble_check_devid() == 0)
 12488  05C8  273B  3184         	fcall	_ble_check_devid
 12489  05CA  3A00               	xorlw	0
 12490  05CB  1D03               	skipz
 12491  05CC  2DDD               	goto	l5717
 12492                           
 12493                           ;app_ble.c: 190: {
 12494                           ;app_ble.c: 191: _delay((unsigned long)((40)*(16000000/4000.0)));
 12495  05CD  30D0               	movlw	208
 12496  05CE  0020               	movlb	0	; select bank0
 12497  05CF  00CD               	movwf	??_ble_init
 12498  05D0  30C9               	movlw	201
 12499  05D1                     u6647:	
 12500  05D1  0B89               	decfsz	9,f
 12501  05D2  2DD1               	goto	u6647
 12502  05D3  0BCD               	decfsz	??_ble_init,f
 12503  05D4  2DD1               	goto	u6647
 12504  05D5  3200               	nop2
 12505                           
 12506                           ;app_ble.c: 192: ble_send_cmd("AT+ADV_MFR_SPC=" "30313631" "30313033" "\r\n");
 12507  05D6  3000               	movlw	low (STR_2| (0+32768))
 12508  05D7  0020               	movlb	0	; select bank0
 12509  05D8  00A7               	movwf	ble_send_cmd@cmd
 12510  05D9  3098               	movlw	high (STR_2| (0+32768))
 12511  05DA  00A8               	movwf	ble_send_cmd@cmd+1
 12512  05DB  2609  3184         	fcall	_ble_send_cmd
 12513  05DD                     l5717:	
 12514                           
 12515                           ;app_ble.c: 193: }
 12516                           ;app_ble.c: 194: _delay((unsigned long)((40)*(16000000/4000.0)));
 12517  05DD  30D0               	movlw	208
 12518  05DE  0020               	movlb	0	; select bank0
 12519  05DF  00CD               	movwf	??_ble_init
 12520  05E0  30C9               	movlw	201
 12521  05E1                     u6657:	
 12522  05E1  0B89               	decfsz	9,f
 12523  05E2  2DE1               	goto	u6657
 12524  05E3  0BCD               	decfsz	??_ble_init,f
 12525  05E4  2DE1               	goto	u6657
 12526  05E5  3200               	nop2
 12527                           
 12528                           ;app_ble.c: 196: ble_send_cmd("AT+SET=1\r\n");
 12529  05E6  3044               	movlw	low (STR_3| (0+32768))
 12530  05E7  0020               	movlb	0	; select bank0
 12531  05E8  00A7               	movwf	ble_send_cmd@cmd
 12532  05E9  3098               	movlw	high (STR_3| (0+32768))
 12533  05EA  00A8               	movwf	ble_send_cmd@cmd+1
 12534  05EB  2609  3184         	fcall	_ble_send_cmd
 12535                           
 12536                           ;app_ble.c: 197: _delay((unsigned long)((40)*(16000000/4000.0)));
 12537  05ED  30D0               	movlw	208
 12538  05EE  0020               	movlb	0	; select bank0
 12539  05EF  00CD               	movwf	??_ble_init
 12540  05F0  30C9               	movlw	201
 12541  05F1                     u6667:	
 12542  05F1  0B89               	decfsz	9,f
 12543  05F2  2DF1               	goto	u6667
 12544  05F3  0BCD               	decfsz	??_ble_init,f
 12545  05F4  2DF1               	goto	u6667
 12546  05F5  3200               	nop2
 12547                           
 12548                           ;app_ble.c: 199: ble_send_cmd("AT+MODE=DATA\r\n");
 12549  05F6  3035               	movlw	low (STR_4| (0+32768))
 12550  05F7  0020               	movlb	0	; select bank0
 12551  05F8  00A7               	movwf	ble_send_cmd@cmd
 12552  05F9  3098               	movlw	high (STR_4| (0+32768))
 12553  05FA  00A8               	movwf	ble_send_cmd@cmd+1
 12554  05FB  2609  3184         	fcall	_ble_send_cmd
 12555                           
 12556                           ;app_ble.c: 200: _delay((unsigned long)((40)*(16000000/4000.0)));
 12557  05FD  30D0               	movlw	208
 12558  05FE  0020               	movlb	0	; select bank0
 12559  05FF  00CD               	movwf	??_ble_init
 12560  0600  30C9               	movlw	201
 12561  0601                     u6677:	
 12562  0601  0B89               	decfsz	9,f
 12563  0602  2E01               	goto	u6677
 12564  0603  0BCD               	decfsz	??_ble_init,f
 12565  0604  2E01               	goto	u6677
 12566  0605  3200               	nop2
 12567                           
 12568                           ;app_ble.c: 201: LATCbits.LATC1 = 1;
 12569  0606  0022               	movlb	2	; select bank2
 12570  0607  148E               	bsf	14,1	;volatile
 12571  0608  0008               	return
 12572  0609                     __end_of_ble_init:	
 12573  0609                     __ptext66:	
 12574 ;; *************** function _ble_send_cmd *****************
 12575 ;; Defined at:
 12576 ;;		line 44 in file "src/app_ble.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;  cmd             2    7[BANK0 ] PTR const unsigned char 
 12579 ;;		 -> STR_4(15), STR_3(11), STR_2(34), STR_1(19), 
 12580 ;; Auto vars:     Size  Location     Type
 12581 ;;  ack             8   10[BANK0 ] unsigned char [8]
 12582 ;;  idx             1   21[BANK0 ] unsigned char 
 12583 ;;  rev             1   20[BANK0 ] unsigned char 
 12584 ;;  cnt             1   19[BANK0 ] unsigned char 
 12585 ;;  len             1   18[BANK0 ] unsigned char 
 12586 ;; Return value:  Size  Location     Type
 12587 ;;                  1    wreg      unsigned char 
 12588 ;; Registers used:
 12589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12590 ;; Tracked objects:
 12591 ;;		On entry : 1F/0
 12592 ;;		On exit  : 1F/0
 12593 ;;		Unchanged: 0/0
 12594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12596 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12598 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12599 ;;Total ram usage:       15 bytes
 12600 ;; Hardware stack levels used:    1
 12601 ;; Hardware stack levels required when called:   10
 12602 ;; This function calls:
 12603 ;;		_eusart_write
 12604 ;;		_strlen
 12605 ;; This function is called by:
 12606 ;;		_ble_check_devid
 12607 ;;		_ble_init
 12608 ;; This function uses a non-reentrant model
 12609 ;;
 12610                           
 12611                           
 12612                           ;psect for function _ble_send_cmd
 12613  0609                     _ble_send_cmd:	
 12614                           
 12615                           ;app_ble.c: 46: char ack[] = "AT+OK\r\n";
 12616                           
 12617                           ;incstack = 0
 12618                           ; Regs used in _ble_send_cmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12619  0609  304D               	movlw	low ble_send_cmd@F8334
 12620  060A  0086               	movwf	6
 12621  060B  3001               	movlw	high ble_send_cmd@F8334
 12622  060C  0087               	movwf	7
 12623  060D  302A               	movlw	low ble_send_cmd@ack
 12624  060E  0084               	movwf	4
 12625  060F  3000               	movlw	high ble_send_cmd@ack
 12626  0610  0085               	movwf	5
 12627  0611  3008               	movlw	8
 12628  0612  00A9               	movwf	??_ble_send_cmd
 12629  0613                     u3310:	
 12630  0613  0016               	moviw fsr1++
 12631  0614  001A               	movwi fsr0++
 12632  0615  0BA9               	decfsz	??_ble_send_cmd,f
 12633  0616  2E13               	goto	u3310
 12634                           
 12635                           ;app_ble.c: 47: uint8_t len = strlen(ack);
 12636  0617  302A               	movlw	(low (ble_send_cmd@ack| 0))& (0+255)
 12637  0618  272A  3184         	fcall	_strlen
 12638  061A  0822               	movf	?_strlen,w
 12639  061B  00B2               	movwf	ble_send_cmd@len
 12640                           
 12641                           ;app_ble.c: 48: uint8_t idx = 0;
 12642  061C  01B5               	clrf	ble_send_cmd@idx
 12643                           
 12644                           ;app_ble.c: 49: uint8_t cnt = 0;
 12645  061D  01B3               	clrf	ble_send_cmd@cnt
 12646  061E  0023               	movlb	3	; select bank3
 12647  061F  0819               	movf	25,w	;volatile
 12648  0620                     l4337:	
 12649                           ;app_ble.c: 51: while(*cmd != '\0')
 12650                           
 12651  0620  0020               	movlb	0	; select bank0
 12652  0621  0827               	movf	ble_send_cmd@cmd,w
 12653  0622  0084               	movwf	4
 12654  0623  0828               	movf	ble_send_cmd@cmd+1,w
 12655  0624  0085               	movwf	5
 12656  0625  0012               	moviw fsr0++
 12657  0626  1903               	btfsc	3,2
 12658  0627  2E52               	goto	l4359
 12659                           
 12660                           ;app_ble.c: 52: {
 12661                           ;app_ble.c: 53: eusart_write(*cmd++);
 12662  0628  0827               	movf	ble_send_cmd@cmd,w
 12663  0629  0084               	movwf	4
 12664  062A  0828               	movf	ble_send_cmd@cmd+1,w
 12665  062B  0085               	movwf	5
 12666  062C  0800               	movf	0,w	;code access
 12667  062D  26E7  3184         	fcall	_eusart_write
 12668  062F  0AA7               	incf	ble_send_cmd@cmd,f
 12669  0630  1903               	skipnz
 12670  0631  0AA8               	incf	ble_send_cmd@cmd+1,f
 12671  0632  2E20               	goto	l4337
 12672  0633                     l388:	
 12673                           
 12674                           ;app_ble.c: 57: {
 12675                           ;app_ble.c: 58: if(PIR1bits.RCIF)
 12676  0633  1E91               	btfss	17,5	;volatile
 12677  0634  2E48               	goto	l4351
 12678                           
 12679                           ;app_ble.c: 59: {
 12680                           ;app_ble.c: 60: if(RCSTAbits.OERR)
 12681  0635  0023               	movlb	3	; select bank3
 12682  0636  1C9D               	btfss	29,1	;volatile
 12683  0637  2E3A               	goto	l4343
 12684                           
 12685                           ;app_ble.c: 61: {
 12686                           ;app_ble.c: 62: RCSTAbits.CREN = 0;
 12687  0638  121D               	bcf	29,4	;volatile
 12688                           
 12689                           ;app_ble.c: 63: RCSTAbits.CREN = 1;
 12690  0639  161D               	bsf	29,4	;volatile
 12691  063A                     l4343:	
 12692                           
 12693                           ;app_ble.c: 64: }
 12694                           ;app_ble.c: 65: rev = RCREG;
 12695  063A  0819               	movf	25,w	;volatile
 12696  063B  0020               	movlb	0	; select bank0
 12697  063C  00B4               	movwf	ble_send_cmd@rev
 12698                           
 12699                           ;app_ble.c: 66: if(rev == ack[idx])
 12700  063D  0835               	movf	ble_send_cmd@idx,w
 12701  063E  3E2A               	addlw	(low (ble_send_cmd@ack| 0))& (0+255)
 12702  063F  0086               	movwf	6
 12703  0640  0187               	clrf	7
 12704  0641  0801               	movf	1,w
 12705  0642  0634               	xorwf	ble_send_cmd@rev,w
 12706  0643  1D03               	skipz
 12707  0644  2E47               	goto	l4349
 12708                           
 12709                           ;app_ble.c: 67: {
 12710                           ;app_ble.c: 68: idx++;
 12711  0645  0AB5               	incf	ble_send_cmd@idx,f
 12712                           
 12713                           ;app_ble.c: 69: }
 12714  0646  2E48               	goto	l4351
 12715  0647                     l4349:	
 12716                           
 12717                           ;app_ble.c: 70: else
 12718                           ;app_ble.c: 71: {
 12719                           ;app_ble.c: 72: idx = 0;
 12720  0647  01B5               	clrf	ble_send_cmd@idx
 12721  0648                     l4351:	
 12722                           
 12723                           ;app_ble.c: 73: }
 12724                           ;app_ble.c: 74: }
 12725                           ;app_ble.c: 75: _delay((unsigned long)((250)*(16000000/4000000.0)));
 12726  0648  30C8               	movlw	200
 12727  0649                     u6697:	
 12728  0649  3200               	nop2
 12729  064A  0B89               	decfsz	9,f
 12730  064B  2E49               	goto	u6697
 12731                           
 12732                           ;app_ble.c: 76: cnt++;
 12733  064C  0020               	movlb	0	; select bank0
 12734  064D  30FB               	movlw	251
 12735  064E  0AB3               	incf	ble_send_cmd@cnt,f
 12736                           
 12737                           ;app_ble.c: 77: if(cnt > 250)
 12738  064F  0233               	subwf	ble_send_cmd@cnt,w
 12739  0650  1803               	btfsc	3,0
 12740  0651  0008               	return
 12741  0652                     l4359:	
 12742  0652  0832               	movf	ble_send_cmd@len,w
 12743  0653  0235               	subwf	ble_send_cmd@idx,w
 12744  0654  1803               	btfsc	3,0
 12745  0655  0008               	return
 12746  0656  2E33               	goto	l388
 12747  0657                     __end_of_ble_send_cmd:	
 12748  0657                     __ptext19:	
 12749 ;; *************** function _led_init *****************
 12750 ;; Defined at:
 12751 ;;		line 454 in file "src/app_led.c"
 12752 ;; Parameters:    Size  Location     Type
 12753 ;;		None
 12754 ;; Auto vars:     Size  Location     Type
 12755 ;;		None
 12756 ;; Return value:  Size  Location     Type
 12757 ;;                  1    wreg      void 
 12758 ;; Registers used:
 12759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12760 ;; Tracked objects:
 12761 ;;		On entry : 1F/1
 12762 ;;		On exit  : 1D/0
 12763 ;;		Unchanged: 0/0
 12764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12769 ;;Total ram usage:        0 bytes
 12770 ;; Hardware stack levels used:    1
 12771 ;; Hardware stack levels required when called:   12
 12772 ;; This function calls:
 12773 ;;		_led_para_init
 12774 ;; This function is called by:
 12775 ;;		_main
 12776 ;; This function uses a non-reentrant model
 12777 ;;
 12778                           
 12779                           
 12780                           ;psect for function _led_init
 12781  0657                     _led_init:	
 12782                           
 12783                           ;app_led.c: 456: led_para_init();
 12784                           
 12785                           ;incstack = 0
 12786                           ; Regs used in _led_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12787  0657  318C  2C39         	ljmp	l6101
 12788  0659                     __end_of_led_init:	
 12789  0659                     __ptext60:	
 12790 ;; *************** function _ble_ota_ack *****************
 12791 ;; Defined at:
 12792 ;;		line 262 in file "src/app_ble.c"
 12793 ;; Parameters:    Size  Location     Type
 12794 ;;		None
 12795 ;; Auto vars:     Size  Location     Type
 12796 ;;		None
 12797 ;; Return value:  Size  Location     Type
 12798 ;;                  1    wreg      void 
 12799 ;; Registers used:
 12800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12801 ;; Tracked objects:
 12802 ;;		On entry : 1F/11
 12803 ;;		On exit  : 1F/2
 12804 ;;		Unchanged: 0/0
 12805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12810 ;;Total ram usage:        0 bytes
 12811 ;; Hardware stack levels used:    1
 12812 ;; Hardware stack levels required when called:   10
 12813 ;; This function calls:
 12814 ;;		_ble_transmit_start
 12815 ;;		_ble_transmit_stop
 12816 ;;		_eusart_write
 12817 ;; This function is called by:
 12818 ;;		_ble_decode
 12819 ;; This function uses a non-reentrant model
 12820 ;;
 12821                           
 12822                           
 12823                           ;psect for function _ble_ota_ack
 12824  0659                     _ble_ota_ack:	
 12825                           
 12826                           ;app_ble.c: 264: ble_transmit_start();
 12827                           
 12828                           ;incstack = 0
 12829                           ; Regs used in _ble_ota_ack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12830  0659  2708  3184         	fcall	_ble_transmit_start
 12831                           
 12832                           ;app_ble.c: 265: eusart_write(0x68);
 12833  065B  3068               	movlw	104
 12834  065C  26E7  3184         	fcall	_eusart_write
 12835                           
 12836                           ;app_ble.c: 266: eusart_write(0x00);
 12837  065E  3000               	movlw	0
 12838  065F  26E7  3184         	fcall	_eusart_write
 12839                           
 12840                           ;app_ble.c: 267: eusart_write(0x00);
 12841  0661  3000               	movlw	0
 12842  0662  26E7  3184         	fcall	_eusart_write
 12843                           
 12844                           ;app_ble.c: 268: eusart_write(0x00);
 12845  0664  3000               	movlw	0
 12846  0665  26E7  3184         	fcall	_eusart_write
 12847                           
 12848                           ;app_ble.c: 269: eusart_write(0x68);
 12849  0667  3068               	movlw	104
 12850  0668  26E7  3184         	fcall	_eusart_write
 12851                           
 12852                           ;app_ble.c: 270: ble_transmit_stop();
 12853  066A  2F14               	ljmp	l414
 12854  066B                     __end_of_ble_ota_ack:	
 12855  066B                     __ptext58:	
 12856 ;; *************** function _ble_send_data *****************
 12857 ;; Defined at:
 12858 ;;		line 204 in file "src/app_ble.c"
 12859 ;; Parameters:    Size  Location     Type
 12860 ;;		None
 12861 ;; Auto vars:     Size  Location     Type
 12862 ;;  p               2   12[BANK0 ] PTR struct .
 12863 ;;		 -> m_led_para.ble_para(107), m_led_para(113), 
 12864 ;;  i               1   11[BANK0 ] unsigned char 
 12865 ;;  len             1   10[BANK0 ] unsigned char 
 12866 ;;  xor             1    9[BANK0 ] unsigned char 
 12867 ;; Return value:  Size  Location     Type
 12868 ;;                  1    wreg      void 
 12869 ;; Registers used:
 12870 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12871 ;; Tracked objects:
 12872 ;;		On entry : 1D/0
 12873 ;;		On exit  : 1F/2
 12874 ;;		Unchanged: 0/0
 12875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12877 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12878 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12879 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12880 ;;Total ram usage:        9 bytes
 12881 ;; Hardware stack levels used:    1
 12882 ;; Hardware stack levels required when called:   10
 12883 ;; This function calls:
 12884 ;;		___bmul
 12885 ;;		_ble_transmit_start
 12886 ;;		_ble_transmit_stop
 12887 ;;		_eusart_write
 12888 ;; This function is called by:
 12889 ;;		_ble_decode
 12890 ;; This function uses a non-reentrant model
 12891 ;;
 12892                           
 12893                           
 12894                           ;psect for function _ble_send_data
 12895  066B                     _ble_send_data:	
 12896  066B                     l4361:	
 12897                           ;incstack = 0
 12898                           ; Regs used in _ble_send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12899                           
 12900                           
 12901                           ;app_ble.c: 206: uint8_t i;
 12902                           ;app_ble.c: 207: uint8_t len;
 12903                           ;app_ble.c: 208: uint8_t xor = 0;
 12904  066B  0020               	movlb	0	; select bank0
 12905  066C  3023               	movlw	35
 12906  066D  01A9               	clrf	ble_send_data@xor
 12907                           
 12908                           ;app_ble.c: 209: ble_para_t *p = &m_led_para.ble_para;
 12909  066E  00AD               	movwf	ble_send_data@p+1
 12910  066F  3085               	movlw	133
 12911  0670  00AC               	movwf	ble_send_data@p
 12912                           
 12913                           ;app_ble.c: 210: ble_transmit_start();
 12914  0671  2708  3184         	fcall	_ble_transmit_start
 12915                           
 12916                           ;app_ble.c: 211: xor ^= eusart_write(0x68);
 12917  0673  3068               	movlw	104
 12918  0674  26E7  3184         	fcall	_eusart_write
 12919  0676  06A9               	xorwf	ble_send_data@xor,f
 12920                           
 12921                           ;app_ble.c: 212: xor ^= eusart_write(0x05);
 12922  0677  3005               	movlw	5
 12923  0678  26E7  3184         	fcall	_eusart_write
 12924  067A  06A9               	xorwf	ble_send_data@xor,f
 12925                           
 12926                           ;app_ble.c: 213: xor ^= eusart_write(p->mMode);
 12927  067B  27DF  3184         	fcall	PL82	;call to abstracted procedure
 12928  067D  26E7  3184         	fcall	_eusart_write
 12929  067F  06A9               	xorwf	ble_send_data@xor,f
 12930                           
 12931                           ;app_ble.c: 214: if(p->mMode == 1)
 12932  0680  27DF  3184         	fcall	PL82	;call to abstracted procedure
 12933  0682  3A01               	xorlw	1
 12934  0683  1D03               	skipz
 12935  0684  2E98               	goto	l4385
 12936                           
 12937                           ;app_ble.c: 215: {
 12938                           ;app_ble.c: 216: len = sizeof(p->auto_para.array);
 12939  0685  3013               	movlw	19
 12940  0686  00AA               	movwf	ble_send_data@len
 12941                           
 12942                           ;app_ble.c: 217: for(i = 0; i < len; i++)
 12943  0687  01AB               	clrf	ble_send_data@i
 12944  0688                     l4383:	
 12945  0688  082A               	movf	ble_send_data@len,w
 12946  0689  022B               	subwf	ble_send_data@i,w
 12947  068A  1803               	btfsc	3,0
 12948  068B  2EE3               	goto	l4415
 12949                           
 12950                           ;app_ble.c: 218: {
 12951                           ;app_ble.c: 219: xor ^= eusart_write(p->auto_para.array[i]);
 12952  068C  27CB  3184         	fcall	PL46	;call to abstracted procedure
 12953  068E  0086               	movwf	6
 12954  068F  0828               	movf	??_ble_send_data+3,w
 12955  0690  0087               	movwf	7
 12956  0691  315B               	addfsr 1,27
 12957  0692  0801               	movf	1,w
 12958  0693  26E7  3184         	fcall	_eusart_write
 12959  0695  06A9               	xorwf	ble_send_data@xor,f
 12960  0696  0AAB               	incf	ble_send_data@i,f
 12961  0697  2E88               	goto	l4383
 12962  0698                     l4385:	
 12963                           
 12964                           ;app_ble.c: 228: else if(p->mMode == 2)
 12965  0698  27DF  3184         	fcall	PL82	;call to abstracted procedure
 12966  069A  3A02               	xorlw	2
 12967  069B  1D03               	skipz
 12968  069C  2ED0               	goto	l4405
 12969                           
 12970                           ;app_ble.c: 229: {
 12971                           ;app_ble.c: 230: if(p->pro_para.point_count < 4)
 12972  069D  082C               	movf	ble_send_data@p,w
 12973  069E  27E6  3184         	fcall	PL106	;call to abstracted procedure
 12974  06A0  3004               	movlw	4
 12975  06A1  0201               	subwf	1,w
 12976                           
 12977                           ;app_ble.c: 231: {
 12978                           ;app_ble.c: 232: p->pro_para.point_count = 4;
 12979  06A2  082C               	movf	ble_send_data@p,w
 12980  06A3  1803               	skipnc
 12981  06A4  2EA9               	goto	L21
 12982  06A5  27D5  3184         	fcall	PL78	;call to abstracted procedure
 12983  06A7  3004               	movlw	4
 12984  06A8  2EB3               	goto	L20
 12985  06A9                     L21:	
 12986                           ;app_ble.c: 234: else if(p->pro_para.point_count > 10)
 12987                           
 12988                           ;app_ble.c: 233: }
 12989                           
 12990  06A9  27E6  3184         	fcall	PL106	;call to abstracted procedure
 12991  06AB  300B               	movlw	11
 12992  06AC  0201               	subwf	1,w
 12993  06AD  1C03               	skipc
 12994  06AE  2EB4               	goto	l4395
 12995                           
 12996                           ;app_ble.c: 235: {
 12997                           ;app_ble.c: 236: p->pro_para.point_count = 10;
 12998  06AF  082C               	movf	ble_send_data@p,w
 12999  06B0  27D5  3184         	fcall	PL78	;call to abstracted procedure
 13000  06B2  300A               	movlw	10
 13001  06B3                     L20:	
 13002  06B3  0081               	movwf	1
 13003  06B4                     l4395:	
 13004                           
 13005                           ;app_ble.c: 237: }
 13006                           ;app_ble.c: 238: len = p->pro_para.point_count*(2+4)+1;
 13007  06B4  3006               	movlw	6
 13008  06B5  00A2               	movwf	___bmul@multiplicand
 13009  06B6  082C               	movf	ble_send_data@p,w
 13010  06B7  27E6  3184         	fcall	PL106	;call to abstracted procedure
 13011  06B9  0801               	movf	1,w
 13012  06BA  271E  3184         	fcall	___bmul
 13013  06BC  3E01               	addlw	1
 13014  06BD  00AA               	movwf	ble_send_data@len
 13015                           
 13016                           ;app_ble.c: 239: for(i = 0; i < len; i++)
 13017  06BE  01AB               	clrf	ble_send_data@i
 13018  06BF                     l4403:	
 13019  06BF  082A               	movf	ble_send_data@len,w
 13020  06C0  022B               	subwf	ble_send_data@i,w
 13021  06C1  1803               	btfsc	3,0
 13022  06C2  2EE3               	goto	l4415
 13023                           
 13024                           ;app_ble.c: 240: {
 13025                           ;app_ble.c: 241: xor ^= eusart_write(p->pro_para.array[i]);
 13026  06C3  27CB  3184         	fcall	PL46	;call to abstracted procedure
 13027  06C5  3E2E               	addlw	46
 13028  06C6  0086               	movwf	6
 13029  06C7  3000               	movlw	0
 13030  06C8  3D28               	addwfc	??_ble_send_data+3,w
 13031  06C9  0087               	movwf	7
 13032  06CA  0801               	movf	1,w
 13033  06CB  26E7  3184         	fcall	_eusart_write
 13034  06CD  06A9               	xorwf	ble_send_data@xor,f
 13035  06CE  0AAB               	incf	ble_send_data@i,f
 13036  06CF  2EBF               	goto	l4403
 13037  06D0                     l4405:	
 13038                           
 13039                           ;app_ble.c: 250: else
 13040                           ;app_ble.c: 251: {
 13041                           ;app_ble.c: 252: len = sizeof(p->manual_para.array);
 13042  06D0  301A               	movlw	26
 13043  06D1  00AA               	movwf	ble_send_data@len
 13044                           
 13045                           ;app_ble.c: 253: for(i = 0; i < len; i++)
 13046  06D2  01AB               	clrf	ble_send_data@i
 13047  06D3                     l4413:	
 13048  06D3  082A               	movf	ble_send_data@len,w
 13049  06D4  022B               	subwf	ble_send_data@i,w
 13050  06D5  1803               	btfsc	3,0
 13051  06D6  2EE3               	goto	l4415
 13052                           
 13053                           ;app_ble.c: 254: {
 13054                           ;app_ble.c: 255: xor ^= eusart_write(p->manual_para.array[i]);
 13055  06D7  27CB  3184         	fcall	PL46	;call to abstracted procedure
 13056  06D9  0086               	movwf	6
 13057  06DA  0828               	movf	??_ble_send_data+3,w
 13058  06DB  0087               	movwf	7
 13059  06DC  3141               	addfsr 1,1
 13060  06DD  0801               	movf	1,w
 13061  06DE  26E7  3184         	fcall	_eusart_write
 13062  06E0  06A9               	xorwf	ble_send_data@xor,f
 13063  06E1  0AAB               	incf	ble_send_data@i,f
 13064  06E2  2ED3               	goto	l4413
 13065  06E3                     l4415:	
 13066                           
 13067                           ;app_ble.c: 256: }
 13068                           ;app_ble.c: 257: }
 13069                           ;app_ble.c: 258: eusart_write(xor);
 13070  06E3  0829               	movf	ble_send_data@xor,w
 13071  06E4  26E7  3184         	fcall	_eusart_write
 13072                           
 13073                           ;app_ble.c: 259: ble_transmit_stop();
 13074  06E6  2F14               	ljmp	l414
 13075  06E7                     __end_of_ble_send_data:	
 13076  06E7                     __ptext68:	
 13077 ;; *************** function _eusart_write *****************
 13078 ;; Defined at:
 13079 ;;		line 30 in file "src/drv_eusart.c"
 13080 ;; Parameters:    Size  Location     Type
 13081 ;;  byte            1    wreg     unsigned char 
 13082 ;; Auto vars:     Size  Location     Type
 13083 ;;  byte            1    2[BANK0 ] unsigned char 
 13084 ;; Return value:  Size  Location     Type
 13085 ;;                  1    wreg      unsigned char 
 13086 ;; Registers used:
 13087 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13088 ;; Tracked objects:
 13089 ;;		On entry : 0/0
 13090 ;;		On exit  : 1F/0
 13091 ;;		Unchanged: 0/0
 13092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13096 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13097 ;;Total ram usage:        1 bytes
 13098 ;; Hardware stack levels used:    1
 13099 ;; Hardware stack levels required when called:    9
 13100 ;; This function calls:
 13101 ;;		Nothing
 13102 ;; This function is called by:
 13103 ;;		_ble_send_cmd
 13104 ;;		_ble_send_data
 13105 ;;		_ble_ota_ack
 13106 ;; This function uses a non-reentrant model
 13107 ;;
 13108                           
 13109                           
 13110                           ;psect for function _eusart_write
 13111  06E7                     _eusart_write:	
 13112                           
 13113                           ;incstack = 0
 13114                           ; Regs used in _eusart_write: [wreg+fsr1l+fsr1h+status,2+status,0]
 13115                           ;eusart_write@byte stored from wreg
 13116  06E7  0020               	movlb	0	; select bank0
 13117  06E8  00A2               	movwf	eusart_write@byte
 13118  06E9                     l3981:	
 13119                           ;drv_eusart.c: 32: while(0 == tx_remain);
 13120                           
 13121  06E9  086C               	movf	_tx_remain,w
 13122  06EA  1903               	btfsc	3,2
 13123  06EB  2EE9               	goto	l3981
 13124                           
 13125                           ;drv_eusart.c: 34: if(!PIE1bits.TXIE)
 13126  06EC  0021               	movlb	1	; select bank1
 13127  06ED  1A11               	btfsc	17,4	;volatile
 13128  06EE  2EF4               	goto	l186
 13129                           
 13130                           ;drv_eusart.c: 35: {
 13131                           ;drv_eusart.c: 36: TXREG = byte;
 13132  06EF  0020               	movlb	0	; select bank0
 13133  06F0  0822               	movf	eusart_write@byte,w
 13134  06F1  0023               	movlb	3	; select bank3
 13135  06F2  009A               	movwf	26	;volatile
 13136                           
 13137                           ;drv_eusart.c: 37: }
 13138  06F3  2F03               	goto	l3995
 13139  06F4                     l186:	
 13140                           
 13141                           ;drv_eusart.c: 38: else
 13142                           ;drv_eusart.c: 39: {
 13143                           ;drv_eusart.c: 40: PIE1bits.TXIE = 0;
 13144  06F4  1211               	bcf	17,4	;volatile
 13145                           
 13146                           ;drv_eusart.c: 41: tx_buf[tx_head++] = byte;
 13147  06F5  0020               	movlb	0	; select bank0
 13148  06F6  086A               	movf	_tx_head,w
 13149  06F7  3E20               	addlw	(low (_tx_buf| (0+512)))& (0+255)
 13150  06F8  0086               	movwf	6
 13151  06F9  3002               	movlw	2	; select bank4/5
 13152  06FA  0087               	movwf	7
 13153  06FB  0822               	movf	eusart_write@byte,w
 13154  06FC  0081               	movwf	1
 13155  06FD  3040               	movlw	64
 13156  06FE  0AEA               	incf	_tx_head,f
 13157                           
 13158                           ;drv_eusart.c: 42: if(sizeof( tx_buf) <= tx_head)
 13159  06FF  026A               	subwf	_tx_head,w
 13160  0700  1803               	btfsc	3,0
 13161                           
 13162                           ;drv_eusart.c: 43: {
 13163                           ;drv_eusart.c: 44: tx_head = 0;
 13164  0701  01EA               	clrf	_tx_head
 13165                           
 13166                           ;drv_eusart.c: 45: }
 13167                           ;drv_eusart.c: 46: tx_remain--;
 13168  0702  03EC               	decf	_tx_remain,f
 13169  0703                     l3995:	
 13170                           
 13171                           ;drv_eusart.c: 47: }
 13172                           ;drv_eusart.c: 48: PIE1bits.TXIE = 1;
 13173  0703  0021               	movlb	1	; select bank1
 13174  0704  1611               	bsf	17,4	;volatile
 13175                           
 13176                           ;drv_eusart.c: 49: return byte;
 13177  0705  0020               	movlb	0	; select bank0
 13178  0706  0822               	movf	eusart_write@byte,w
 13179  0707  0008               	return
 13180  0708                     __end_of_eusart_write:	
 13181  0708                     __ptext62:	
 13182 ;; *************** function _ble_transmit_start *****************
 13183 ;; Defined at:
 13184 ;;		line 122 in file "src/app_ble.c"
 13185 ;; Parameters:    Size  Location     Type
 13186 ;;		None
 13187 ;; Auto vars:     Size  Location     Type
 13188 ;;		None
 13189 ;; Return value:  Size  Location     Type
 13190 ;;                  1    wreg      void 
 13191 ;; Registers used:
 13192 ;;		wreg
 13193 ;; Tracked objects:
 13194 ;;		On entry : E/0
 13195 ;;		On exit  : 0/0
 13196 ;;		Unchanged: 0/0
 13197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13200 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13201 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13202 ;;Total ram usage:        1 bytes
 13203 ;; Hardware stack levels used:    1
 13204 ;; Hardware stack levels required when called:    9
 13205 ;; This function calls:
 13206 ;;		Nothing
 13207 ;; This function is called by:
 13208 ;;		_ble_send_data
 13209 ;;		_ble_ota_ack
 13210 ;; This function uses a non-reentrant model
 13211 ;;
 13212                           
 13213                           
 13214                           ;psect for function _ble_transmit_start
 13215  0708                     _ble_transmit_start:	
 13216                           
 13217                           ;app_ble.c: 124: LATCbits.LATC1 = 0;
 13218                           
 13219                           ;incstack = 0
 13220                           ; Regs used in _ble_transmit_start: [wreg]
 13221  0708  0022               	movlb	2	; select bank2
 13222  0709  108E               	bcf	14,1	;volatile
 13223                           
 13224                           ;app_ble.c: 125: _delay((unsigned long)((800)*(16000000/4000000.0)));
 13225  070A  3005               	movlw	5
 13226  070B  0020               	movlb	0	; select bank0
 13227  070C  00A2               	movwf	??_ble_transmit_start
 13228  070D  3026               	movlw	38
 13229  070E                     u6617:	
 13230  070E  0B89               	decfsz	9,f
 13231  070F  2F0E               	goto	u6617
 13232  0710  0BA2               	decfsz	??_ble_transmit_start,f
 13233  0711  2F0E               	goto	u6617
 13234  0712  0000               	nop
 13235  0713  0008               	return
 13236  0714                     __end_of_ble_transmit_start:	
 13237  0714                     __ptext61:	
 13238 ;; *************** function _ble_transmit_stop *****************
 13239 ;; Defined at:
 13240 ;;		line 128 in file "src/app_ble.c"
 13241 ;; Parameters:    Size  Location     Type
 13242 ;;		None
 13243 ;; Auto vars:     Size  Location     Type
 13244 ;;		None
 13245 ;; Return value:  Size  Location     Type
 13246 ;;                  1    wreg      void 
 13247 ;; Registers used:
 13248 ;;		wreg
 13249 ;; Tracked objects:
 13250 ;;		On entry : 1F/0
 13251 ;;		On exit  : 1F/2
 13252 ;;		Unchanged: 0/0
 13253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13258 ;;Total ram usage:        0 bytes
 13259 ;; Hardware stack levels used:    1
 13260 ;; Hardware stack levels required when called:    9
 13261 ;; This function calls:
 13262 ;;		Nothing
 13263 ;; This function is called by:
 13264 ;;		_ble_send_data
 13265 ;;		_ble_ota_ack
 13266 ;; This function uses a non-reentrant model
 13267 ;;
 13268                           
 13269                           
 13270                           ;psect for function _ble_transmit_stop
 13271  0714                     _ble_transmit_stop:	
 13272  0714                     l414:	
 13273                           ;app_ble.c: 130: while(!TXSTAbits.TRMT);
 13274                           
 13275                           ;incstack = 0
 13276                           ; Regs used in _ble_transmit_stop: [wreg]
 13277                           
 13278  0714  0023               	movlb	3	; select bank3
 13279  0715  1C9E               	btfss	30,1	;volatile
 13280  0716  2F14               	goto	l414
 13281                           
 13282                           ;app_ble.c: 131: _delay((unsigned long)((200)*(16000000/4000000.0)));
 13283  0717  30A0               	movlw	160
 13284  0718                     u6607:	
 13285  0718  3200               	nop2
 13286  0719  0B89               	decfsz	9,f
 13287  071A  2F18               	goto	u6607
 13288                           
 13289                           ;app_ble.c: 132: LATCbits.LATC1 = 1;
 13290  071B  0022               	movlb	2	; select bank2
 13291  071C  148E               	bsf	14,1	;volatile
 13292  071D  0008               	return
 13293  071E                     __end_of_ble_transmit_stop:	
 13294  071E                     __ptext59:	
 13295 ;; *************** function ___bmul *****************
 13296 ;; Defined at:
 13297 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul8.c"
 13298 ;; Parameters:    Size  Location     Type
 13299 ;;  multiplier      1    wreg     unsigned char 
 13300 ;;  multiplicand    1    2[BANK0 ] unsigned char 
 13301 ;; Auto vars:     Size  Location     Type
 13302 ;;  multiplier      1    4[BANK0 ] unsigned char 
 13303 ;;  product         1    3[BANK0 ] unsigned char 
 13304 ;; Return value:  Size  Location     Type
 13305 ;;                  1    wreg      unsigned char 
 13306 ;; Registers used:
 13307 ;;		wreg, status,2, status,0
 13308 ;; Tracked objects:
 13309 ;;		On entry : 1F/0
 13310 ;;		On exit  : 1F/0
 13311 ;;		Unchanged: 0/0
 13312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13313 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13314 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13316 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13317 ;;Total ram usage:        3 bytes
 13318 ;; Hardware stack levels used:    1
 13319 ;; Hardware stack levels required when called:    9
 13320 ;; This function calls:
 13321 ;;		Nothing
 13322 ;; This function is called by:
 13323 ;;		_ble_send_data
 13324 ;;		_led_set_pro
 13325 ;; This function uses a non-reentrant model
 13326 ;;
 13327                           
 13328                           
 13329                           ;psect for function ___bmul
 13330  071E                     ___bmul:	
 13331                           
 13332                           ;incstack = 0
 13333                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 13334                           ;___bmul@multiplier stored from wreg
 13335  071E  00A4               	movwf	___bmul@multiplier
 13336  071F  01A3               	clrf	___bmul@product
 13337  0720                     l4157:	
 13338  0720  0822               	movf	___bmul@multiplicand,w
 13339  0721  1824               	btfsc	___bmul@multiplier,0
 13340  0722  07A3               	addwf	___bmul@product,f
 13341  0723  35A2               	lslf	___bmul@multiplicand,f
 13342  0724  36A4               	lsrf	___bmul@multiplier,f
 13343  0725  0824               	movf	___bmul@multiplier,w
 13344  0726  1D03               	btfss	3,2
 13345  0727  2F20               	goto	l4157
 13346  0728  0823               	movf	___bmul@product,w
 13347  0729  0008               	return
 13348  072A                     __end_of___bmul:	
 13349  072A                     __ptext67:	
 13350 ;; *************** function _strlen *****************
 13351 ;; Defined at:
 13352 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\strlen.c"
 13353 ;; Parameters:    Size  Location     Type
 13354 ;;  s               1    wreg     PTR const unsigned char 
 13355 ;;		 -> ble_check_devid@dev(17), ble_send_cmd@ack(8), 
 13356 ;; Auto vars:     Size  Location     Type
 13357 ;;  s               1    6[BANK0 ] PTR const unsigned char 
 13358 ;;		 -> ble_check_devid@dev(17), ble_send_cmd@ack(8), 
 13359 ;;  cp              1    5[BANK0 ] PTR const unsigned char 
 13360 ;;		 -> ble_check_devid@dev(17), ble_send_cmd@ack(8), 
 13361 ;; Return value:  Size  Location     Type
 13362 ;;                  2    2[BANK0 ] unsigned int 
 13363 ;; Registers used:
 13364 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13365 ;; Tracked objects:
 13366 ;;		On entry : 1F/0
 13367 ;;		On exit  : 1F/0
 13368 ;;		Unchanged: 0/0
 13369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13370 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13371 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13373 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13374 ;;Total ram usage:        5 bytes
 13375 ;; Hardware stack levels used:    1
 13376 ;; Hardware stack levels required when called:    9
 13377 ;; This function calls:
 13378 ;;		Nothing
 13379 ;; This function is called by:
 13380 ;;		_ble_send_cmd
 13381 ;;		_ble_check_devid
 13382 ;; This function uses a non-reentrant model
 13383 ;;
 13384                           
 13385                           
 13386                           ;psect for function _strlen
 13387  072A                     _strlen:	
 13388                           
 13389                           ;incstack = 0
 13390                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 13391                           ;strlen@s stored from wreg
 13392  072A  00A6               	movwf	strlen@s
 13393  072B  00A5               	movwf	strlen@cp
 13394  072C                     l4051:	
 13395  072C  0825               	movf	strlen@cp,w
 13396  072D  0086               	movwf	6
 13397  072E  0187               	clrf	7
 13398  072F  0801               	movf	1,w
 13399  0730  1903               	btfsc	3,2
 13400  0731  2F34               	goto	l4053
 13401  0732  0AA5               	incf	strlen@cp,f
 13402  0733  2F2C               	goto	l4051
 13403  0734                     l4053:	
 13404  0734  0826               	movf	strlen@s,w
 13405  0735  0225               	subwf	strlen@cp,w
 13406  0736  00A2               	movwf	?_strlen
 13407  0737  01A3               	clrf	?_strlen+1
 13408  0738  1BA2               	btfsc	?_strlen,7
 13409  0739  03A3               	decf	?_strlen+1,f
 13410  073A  0008               	return
 13411  073B                     __end_of_strlen:	
 13412  073B                     __ptext65:	
 13413 ;; *************** function _ble_check_devid *****************
 13414 ;; Defined at:
 13415 ;;		line 85 in file "src/app_ble.c"
 13416 ;; Parameters:    Size  Location     Type
 13417 ;;		None
 13418 ;; Auto vars:     Size  Location     Type
 13419 ;;  dev            17   23[BANK0 ] unsigned char [17]
 13420 ;;  cnt             2   40[BANK0 ] unsigned int 
 13421 ;;  idx             1   44[BANK0 ] unsigned char 
 13422 ;;  rev             1   43[BANK0 ] unsigned char 
 13423 ;;  len             1   42[BANK0 ] unsigned char 
 13424 ;; Return value:  Size  Location     Type
 13425 ;;                  1    wreg      unsigned char 
 13426 ;; Registers used:
 13427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13428 ;; Tracked objects:
 13429 ;;		On entry : 0/2
 13430 ;;		On exit  : 1F/0
 13431 ;;		Unchanged: 0/0
 13432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13434 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13435 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13436 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13437 ;;Total ram usage:       23 bytes
 13438 ;; Hardware stack levels used:    1
 13439 ;; Hardware stack levels required when called:   11
 13440 ;; This function calls:
 13441 ;;		_ble_send_cmd
 13442 ;;		_strlen
 13443 ;; This function is called by:
 13444 ;;		_ble_init
 13445 ;; This function uses a non-reentrant model
 13446 ;;
 13447                           
 13448                           
 13449                           ;psect for function _ble_check_devid
 13450  073B                     _ble_check_devid:	
 13451                           
 13452                           ;app_ble.c: 87: char dev[] = "30313631" "30313033";
 13453                           
 13454                           ;incstack = 0
 13455                           ; Regs used in _ble_check_devid: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13456  073B  3020               	movlw	low ble_check_devid@F8342
 13457  073C  0086               	movwf	6
 13458  073D  3001               	movlw	high ble_check_devid@F8342
 13459  073E  0087               	movwf	7
 13460  073F  3037               	movlw	low ble_check_devid@dev
 13461  0740  0084               	movwf	4
 13462  0741  3000               	movlw	high ble_check_devid@dev
 13463  0742  0085               	movwf	5
 13464  0743  3011               	movlw	17
 13465  0744  0020               	movlb	0	; select bank0
 13466  0745  00B6               	movwf	??_ble_check_devid
 13467  0746                     u4070:	
 13468  0746  0016               	moviw fsr1++
 13469  0747  001A               	movwi fsr0++
 13470  0748  0BB6               	decfsz	??_ble_check_devid,f
 13471  0749  2F46               	goto	u4070
 13472                           
 13473                           ;app_ble.c: 88: uint8_t len = strlen(dev);
 13474  074A  3037               	movlw	(low (ble_check_devid@dev| 0))& (0+255)
 13475  074B  272A  3184         	fcall	_strlen
 13476  074D  0822               	movf	?_strlen,w
 13477  074E  00CA               	movwf	ble_check_devid@len
 13478  074F  3022               	movlw	low (STR_1| (0+32768))
 13479                           
 13480                           ;app_ble.c: 89: uint8_t idx = 0;
 13481  0750  01CC               	clrf	ble_check_devid@idx
 13482                           
 13483                           ;app_ble.c: 90: uint16_t cnt = 0;
 13484  0751  01C8               	clrf	ble_check_devid@cnt
 13485  0752  01C9               	clrf	ble_check_devid@cnt+1
 13486                           
 13487                           ;app_ble.c: 91: uint8_t rev;
 13488                           ;app_ble.c: 92: ble_send_cmd("AT+ADV_MFR_SPC=?\r\n");
 13489  0753  00A7               	movwf	ble_send_cmd@cmd
 13490  0754  3098               	movlw	high (STR_1| (0+32768))
 13491  0755  00A8               	movwf	ble_send_cmd@cmd+1
 13492  0756  2609  3184         	fcall	_ble_send_cmd
 13493  0758                     l5009:	
 13494                           ;app_ble.c: 93: while(idx < len)
 13495                           
 13496  0758  084A               	movf	ble_check_devid@len,w
 13497  0759  024C               	subwf	ble_check_devid@idx,w
 13498  075A  1803               	btfsc	3,0
 13499  075B  3401               	retlw	1
 13500                           
 13501                           ;app_ble.c: 94: {
 13502                           ;app_ble.c: 95: if(PIR1bits.RCIF)
 13503  075C  1E91               	btfss	17,5	;volatile
 13504  075D  2F6F               	goto	l4999
 13505                           
 13506                           ;app_ble.c: 96: {
 13507                           ;app_ble.c: 97: if(RC1STAbits.OERR)
 13508  075E  0023               	movlb	3	; select bank3
 13509  075F  1C9D               	btfss	29,1	;volatile
 13510  0760  2F63               	goto	l4989
 13511                           
 13512                           ;app_ble.c: 98: {
 13513                           ;app_ble.c: 99: RC1STAbits.CREN = 0;
 13514  0761  121D               	bcf	29,4	;volatile
 13515                           
 13516                           ;app_ble.c: 100: RC1STAbits.CREN = 1;
 13517  0762  161D               	bsf	29,4	;volatile
 13518  0763                     l4989:	
 13519                           
 13520                           ;app_ble.c: 101: }
 13521                           ;app_ble.c: 102: rev = RCREG;
 13522  0763  0819               	movf	25,w	;volatile
 13523  0764  0020               	movlb	0	; select bank0
 13524  0765  00CB               	movwf	ble_check_devid@rev
 13525                           
 13526                           ;app_ble.c: 103: if(rev == dev[idx])
 13527  0766  084C               	movf	ble_check_devid@idx,w
 13528  0767  3E37               	addlw	(low (ble_check_devid@dev| 0))& (0+255)
 13529  0768  0086               	movwf	6
 13530  0769  0187               	clrf	7
 13531  076A  0801               	movf	1,w
 13532  076B  064B               	xorwf	ble_check_devid@rev,w
 13533  076C  1D03               	skipz
 13534  076D  3400               	retlw	0
 13535                           
 13536                           ;app_ble.c: 104: {
 13537                           ;app_ble.c: 105: idx++;
 13538  076E  0ACC               	incf	ble_check_devid@idx,f
 13539  076F                     l4999:	
 13540                           ;app_ble.c: 107: else
 13541                           ;app_ble.c: 108: {
 13542                           ;app_ble.c: 109: return 0;
 13543                           
 13544                           ;app_ble.c: 106: }
 13545                           
 13546                           
 13547                           ;app_ble.c: 110: }
 13548                           ;app_ble.c: 111: }
 13549                           ;app_ble.c: 112: _delay((unsigned long)((100)*(16000000/4000000.0)));
 13550  076F  3085               	movlw	133
 13551  0770                     u6687:	
 13552  0770  0B89               	decfsz	9,f
 13553  0771  2F70               	goto	u6687
 13554  0772  0000               	nop
 13555                           
 13556                           ;app_ble.c: 113: cnt++;
 13557  0773  0020               	movlb	0	; select bank0
 13558  0774  0AC8               	incf	ble_check_devid@cnt,f
 13559  0775  1903               	skipnz
 13560  0776  0AC9               	incf	ble_check_devid@cnt+1,f
 13561                           
 13562                           ;app_ble.c: 114: if(cnt > 1000)
 13563  0777  3003               	movlw	3
 13564  0778  0249               	subwf	ble_check_devid@cnt+1,w
 13565  0779  30E9               	movlw	233
 13566  077A  1903               	skipnz
 13567  077B  0248               	subwf	ble_check_devid@cnt,w
 13568  077C  1803               	btfsc	3,0
 13569  077D  3400               	retlw	0
 13570  077E  2F58               	goto	l5009
 13571  077F                     __end_of_ble_check_devid:	
 13572                           ;app_ble.c: 117: }
 13573                           ;app_ble.c: 118: }
 13574                           ;app_ble.c: 119: return 1;
 13575                           
 13576  077F                     __ptext31:	
 13577 ;; *************** function _ble_process *****************
 13578 ;; Defined at:
 13579 ;;		line 167 in file "src/app_ble.c"
 13580 ;; Parameters:    Size  Location     Type
 13581 ;;		None
 13582 ;; Auto vars:     Size  Location     Type
 13583 ;;		None
 13584 ;; Return value:  Size  Location     Type
 13585 ;;                  1    wreg      void 
 13586 ;; Registers used:
 13587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13588 ;; Tracked objects:
 13589 ;;		On entry : 0/0
 13590 ;;		On exit  : 0/0
 13591 ;;		Unchanged: 0/0
 13592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13597 ;;Total ram usage:        0 bytes
 13598 ;; Hardware stack levels used:    1
 13599 ;; Hardware stack levels required when called:   12
 13600 ;; This function calls:
 13601 ;;		_ble_decode
 13602 ;;		_ble_ready_to_receive
 13603 ;;		_ble_receive_complete
 13604 ;;		_ble_receive_start
 13605 ;;		_ble_receive_stop
 13606 ;; This function is called by:
 13607 ;;		_main
 13608 ;; This function uses a non-reentrant model
 13609 ;;
 13610                           
 13611                           
 13612                           ;psect for function _ble_process
 13613  077F                     _ble_process:	
 13614                           
 13615                           ;app_ble.c: 169: if(ble_ready_to_receive())
 13616                           
 13617                           ;incstack = 0
 13618                           ; Regs used in _ble_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13619  077F  278E  3184         	fcall	_ble_ready_to_receive
 13620  0781  3A00               	xorlw	0
 13621  0782  1903               	skipnz
 13622  0783  2F86               	goto	l6525
 13623                           
 13624                           ;app_ble.c: 170: {
 13625                           ;app_ble.c: 171: ble_receive_start();
 13626  0784  279C  3184         	fcall	_ble_receive_start
 13627  0786                     l6525:	
 13628                           
 13629                           ;app_ble.c: 172: }
 13630                           ;app_ble.c: 173: if(ble_receive_complete())
 13631  0786  2795  3184         	fcall	_ble_receive_complete
 13632  0788  3A00               	xorlw	0
 13633  0789  1903               	skipnz
 13634  078A  0008               	return
 13635                           
 13636                           ;app_ble.c: 174: {
 13637                           ;app_ble.c: 175: ble_receive_stop();
 13638  078B  27C4               	fcall	_ble_receive_stop
 13639                           
 13640                           ;app_ble.c: 176: ble_decode();
 13641  078C  3188  2830         	ljmp	l6003
 13642  078E                     __end_of_ble_process:	
 13643  078E                     __ptext35:	
 13644 ;; *************** function _ble_ready_to_receive *****************
 13645 ;; Defined at:
 13646 ;;		line 135 in file "src/app_ble.c"
 13647 ;; Parameters:    Size  Location     Type
 13648 ;;		None
 13649 ;; Auto vars:     Size  Location     Type
 13650 ;;		None
 13651 ;; Return value:  Size  Location     Type
 13652 ;;                  1    wreg      unsigned char 
 13653 ;; Registers used:
 13654 ;;		wreg
 13655 ;; Tracked objects:
 13656 ;;		On entry : 0/0
 13657 ;;		On exit  : 1D/0
 13658 ;;		Unchanged: 0/0
 13659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13664 ;;Total ram usage:        0 bytes
 13665 ;; Hardware stack levels used:    1
 13666 ;; Hardware stack levels required when called:    9
 13667 ;; This function calls:
 13668 ;;		Nothing
 13669 ;; This function is called by:
 13670 ;;		_ble_process
 13671 ;; This function uses a non-reentrant model
 13672 ;;
 13673                           
 13674                           
 13675                           ;psect for function _ble_ready_to_receive
 13676  078E                     _ble_ready_to_receive:	
 13677                           
 13678                           ;app_ble.c: 137: if((PORTAbits.RA2 == 0) && LATCbits.LATC1)
 13679                           
 13680                           ;incstack = 0
 13681                           ; Regs used in _ble_ready_to_receive: [wreg]
 13682  078E  0020               	movlb	0	; select bank0
 13683  078F  190C               	btfsc	12,2	;volatile
 13684  0790  3400               	retlw	0
 13685  0791  0022               	movlb	2	; select bank2
 13686  0792  188E               	btfsc	14,1	;volatile
 13687                           
 13688                           ;app_ble.c: 138: {
 13689                           ;app_ble.c: 139: return 1;
 13690  0793  3401               	retlw	1
 13691                           
 13692                           ;app_ble.c: 140: }
 13693                           ;app_ble.c: 141: return 0;
 13694  0794  3400               	retlw	0
 13695  0795                     __end_of_ble_ready_to_receive:	
 13696  0795                     __ptext34:	
 13697 ;; *************** function _ble_receive_complete *****************
 13698 ;; Defined at:
 13699 ;;		line 152 in file "src/app_ble.c"
 13700 ;; Parameters:    Size  Location     Type
 13701 ;;		None
 13702 ;; Auto vars:     Size  Location     Type
 13703 ;;		None
 13704 ;; Return value:  Size  Location     Type
 13705 ;;                  1    wreg      unsigned char 
 13706 ;; Registers used:
 13707 ;;		wreg
 13708 ;; Tracked objects:
 13709 ;;		On entry : 1D/0
 13710 ;;		On exit  : 1D/0
 13711 ;;		Unchanged: 0/0
 13712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13717 ;;Total ram usage:        0 bytes
 13718 ;; Hardware stack levels used:    1
 13719 ;; Hardware stack levels required when called:    9
 13720 ;; This function calls:
 13721 ;;		Nothing
 13722 ;; This function is called by:
 13723 ;;		_ble_process
 13724 ;; This function uses a non-reentrant model
 13725 ;;
 13726                           
 13727                           
 13728                           ;psect for function _ble_receive_complete
 13729  0795                     _ble_receive_complete:	
 13730                           
 13731                           ;app_ble.c: 154: if(PORTAbits.RA2 && (LATCbits.LATC1 == 0))
 13732                           
 13733                           ;incstack = 0
 13734                           ; Regs used in _ble_receive_complete: [wreg]
 13735  0795  0020               	movlb	0	; select bank0
 13736  0796  1D0C               	btfss	12,2	;volatile
 13737  0797  3400               	retlw	0
 13738  0798  0022               	movlb	2	; select bank2
 13739  0799  1C8E               	btfss	14,1	;volatile
 13740                           
 13741                           ;app_ble.c: 155: {
 13742                           ;app_ble.c: 156: return 1;
 13743  079A  3401               	retlw	1
 13744                           
 13745                           ;app_ble.c: 157: }
 13746                           ;app_ble.c: 158: return 0;
 13747  079B  3400               	retlw	0
 13748  079C                     __end_of_ble_receive_complete:	
 13749  079C                     __ptext33:	
 13750 ;; *************** function _ble_receive_start *****************
 13751 ;; Defined at:
 13752 ;;		line 144 in file "src/app_ble.c"
 13753 ;; Parameters:    Size  Location     Type
 13754 ;;		None
 13755 ;; Auto vars:     Size  Location     Type
 13756 ;;		None
 13757 ;; Return value:  Size  Location     Type
 13758 ;;                  1    wreg      void 
 13759 ;; Registers used:
 13760 ;;		wreg, status,2
 13761 ;; Tracked objects:
 13762 ;;		On entry : 1D/0
 13763 ;;		On exit  : 1F/2
 13764 ;;		Unchanged: 0/0
 13765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13768 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13769 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13770 ;;Total ram usage:        1 bytes
 13771 ;; Hardware stack levels used:    1
 13772 ;; Hardware stack levels required when called:    9
 13773 ;; This function calls:
 13774 ;;		Nothing
 13775 ;; This function is called by:
 13776 ;;		_ble_process
 13777 ;; This function uses a non-reentrant model
 13778 ;;
 13779                           
 13780                           
 13781                           ;psect for function _ble_receive_start
 13782  079C                     _ble_receive_start:	
 13783                           
 13784                           ;app_ble.c: 146: index = 0;
 13785                           
 13786                           ;incstack = 0
 13787                           ; Regs used in _ble_receive_start: [wreg+status,2]
 13788  079C  0020               	movlb	0	; select bank0
 13789  079D  3005               	movlw	5
 13790  079E  01E4               	clrf	_index
 13791                           
 13792                           ;app_ble.c: 147: checksum = 0;
 13793  079F  01E3               	clrf	_checksum
 13794                           
 13795                           ;app_ble.c: 148: _delay((unsigned long)((800)*(16000000/4000000.0)));
 13796  07A0  0020               	movlb	0	; select bank0
 13797  07A1  00A2               	movwf	??_ble_receive_start
 13798  07A2  3026               	movlw	38
 13799  07A3                     u6587:	
 13800  07A3  0B89               	decfsz	9,f
 13801  07A4  2FA3               	goto	u6587
 13802  07A5  0BA2               	decfsz	??_ble_receive_start,f
 13803  07A6  2FA3               	goto	u6587
 13804  07A7  0000               	nop
 13805                           
 13806                           ;app_ble.c: 149: LATCbits.LATC1 = 0;
 13807  07A8  0022               	movlb	2	; select bank2
 13808  07A9  108E               	bcf	14,1	;volatile
 13809  07AA  0008               	return
 13810  07AB                     __end_of_ble_receive_start:	
 13811  07AB                     __ptext2:	
 13812 ;; *************** function _rtc_init *****************
 13813 ;; Defined at:
 13814 ;;		line 41 in file "src/app_rtc.c"
 13815 ;; Parameters:    Size  Location     Type
 13816 ;;		None
 13817 ;; Auto vars:     Size  Location     Type
 13818 ;;		None
 13819 ;; Return value:  Size  Location     Type
 13820 ;;                  1    wreg      void 
 13821 ;; Registers used:
 13822 ;;		status,2
 13823 ;; Tracked objects:
 13824 ;;		On entry : 1F/2
 13825 ;;		On exit  : 1F/1
 13826 ;;		Unchanged: 0/0
 13827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13832 ;;Total ram usage:        0 bytes
 13833 ;; Hardware stack levels used:    1
 13834 ;; Hardware stack levels required when called:    9
 13835 ;; This function calls:
 13836 ;;		Nothing
 13837 ;; This function is called by:
 13838 ;;		_main
 13839 ;; This function uses a non-reentrant model
 13840 ;;
 13841                           
 13842                           
 13843                           ;psect for function _rtc_init
 13844  07AB                     _rtc_init:	
 13845                           
 13846                           ;app_rtc.c: 43: m_current_time.year = 0;
 13847                           
 13848                           ;incstack = 0
 13849                           ; Regs used in _rtc_init: [status,2]
 13850  07AB  0021               	movlb	1	; select bank1
 13851  07AC  01DF               	clrf	_m_current_time^(0+128)
 13852                           
 13853                           ;app_rtc.c: 44: m_current_time.month = 1;
 13854  07AD  01E0               	clrf	(_m_current_time^(0+128)+1)
 13855  07AE  0AE0               	incf	(_m_current_time^(0+128)+1),f
 13856                           
 13857                           ;app_rtc.c: 45: m_current_time.day = 1;
 13858  07AF  01E1               	clrf	(_m_current_time^(0+128)+2)
 13859  07B0  0AE1               	incf	(_m_current_time^(0+128)+2),f
 13860                           
 13861                           ;app_rtc.c: 46: m_current_time.week = 0;
 13862  07B1  01E2               	clrf	(_m_current_time^(0+128)+3)
 13863                           
 13864                           ;app_rtc.c: 47: m_current_time.hour = 0;
 13865  07B2  01E3               	clrf	(_m_current_time^(0+128)+4)
 13866                           
 13867                           ;app_rtc.c: 48: m_current_time.minute = 0;
 13868  07B3  01E4               	clrf	(_m_current_time^(0+128)+5)
 13869                           
 13870                           ;app_rtc.c: 49: m_current_time.second = 0;
 13871  07B4  01E5               	clrf	(_m_current_time^(0+128)+6)
 13872  07B5  0008               	return
 13873  07B6                     __end_of_rtc_init:	
 13874  07B6                     __ptext1:	
 13875 ;; *************** function _rtc_second_ready *****************
 13876 ;; Defined at:
 13877 ;;		line 100 in file "src/app_rtc.c"
 13878 ;; Parameters:    Size  Location     Type
 13879 ;;		None
 13880 ;; Auto vars:     Size  Location     Type
 13881 ;;		None
 13882 ;; Return value:  Size  Location     Type
 13883 ;;                  1    wreg      unsigned char 
 13884 ;; Registers used:
 13885 ;;		wreg
 13886 ;; Tracked objects:
 13887 ;;		On entry : 0/0
 13888 ;;		On exit  : 1F/0
 13889 ;;		Unchanged: 0/0
 13890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13895 ;;Total ram usage:        0 bytes
 13896 ;; Hardware stack levels used:    1
 13897 ;; Hardware stack levels required when called:    9
 13898 ;; This function calls:
 13899 ;;		Nothing
 13900 ;; This function is called by:
 13901 ;;		_main
 13902 ;; This function uses a non-reentrant model
 13903 ;;
 13904                           
 13905                           
 13906                           ;psect for function _rtc_second_ready
 13907  07B6                     _rtc_second_ready:	
 13908                           
 13909                           ;app_rtc.c: 102: if(rtc_status.fSec)
 13910                           
 13911                           ;incstack = 0
 13912                           ; Regs used in _rtc_second_ready: [wreg]
 13913  07B6  0020               	movlb	0	; select bank0
 13914  07B7  1C65               	btfss	_rtc_status,0
 13915  07B8  3400               	retlw	0
 13916  07B9  3001               	movlw	1
 13917                           
 13918                           ;app_rtc.c: 103: {
 13919                           ;app_rtc.c: 104: rtc_status.fSec = 0;
 13920  07BA  1065               	bcf	_rtc_status,0
 13921                           
 13922                           ;app_rtc.c: 105: return 1;
 13923  07BB  0008               	return
 13924  07BC                     __end_of_rtc_second_ready:	
 13925                           ;app_rtc.c: 106: }
 13926                           ;app_rtc.c: 107: return 0;
 13927                           
 13928  07BC                     __ptext78:	
 13929 ;; *************** function _key_init *****************
 13930 ;; Defined at:
 13931 ;;		line 5 in file "src/app_key.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;  cb              2    2[BANK0 ] PTR FTN(unsigned char ,e
 13934 ;;		 -> led_touch_cb(1), 
 13935 ;; Auto vars:     Size  Location     Type
 13936 ;;		None
 13937 ;; Return value:  Size  Location     Type
 13938 ;;                  1    wreg      void 
 13939 ;; Registers used:
 13940 ;;		wreg
 13941 ;; Tracked objects:
 13942 ;;		On entry : B1F/0
 13943 ;;		On exit  : B1F/1
 13944 ;;		Unchanged: B00/0
 13945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13946 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13949 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13950 ;;Total ram usage:        2 bytes
 13951 ;; Hardware stack levels used:    1
 13952 ;; Hardware stack levels required when called:    9
 13953 ;; This function calls:
 13954 ;;		Nothing
 13955 ;; This function is called by:
 13956 ;;		_app_init
 13957 ;; This function uses a non-reentrant model
 13958 ;;
 13959                           
 13960                           
 13961                           ;psect for function _key_init
 13962  07BC                     _key_init:	
 13963                           
 13964                           ;app_key.c: 7: key_func = cb;
 13965                           
 13966                           ;incstack = 0
 13967                           ; Regs used in _key_init: [wreg]
 13968  07BC  0823               	movf	key_init@cb+1,w
 13969  07BD  0021               	movlb	1	; select bank1
 13970  07BE  00E7               	movwf	(_key_func+1)^(0+128)
 13971  07BF  0020               	movlb	0	; select bank0
 13972  07C0  0822               	movf	key_init@cb,w
 13973  07C1  0021               	movlb	1	; select bank1
 13974  07C2  00E6               	movwf	_key_func^(0+128)
 13975  07C3  0008               	return
 13976  07C4                     __end_of_key_init:	
 13977  07C4                     __ptext32:	
 13978 ;; *************** function _ble_receive_stop *****************
 13979 ;; Defined at:
 13980 ;;		line 161 in file "src/app_ble.c"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;		None
 13983 ;; Auto vars:     Size  Location     Type
 13984 ;;		None
 13985 ;; Return value:  Size  Location     Type
 13986 ;;                  1    wreg      void 
 13987 ;; Registers used:
 13988 ;;		wreg
 13989 ;; Tracked objects:
 13990 ;;		On entry : 1D/0
 13991 ;;		On exit  : 1F/2
 13992 ;;		Unchanged: 0/0
 13993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13998 ;;Total ram usage:        0 bytes
 13999 ;; Hardware stack levels used:    1
 14000 ;; Hardware stack levels required when called:    9
 14001 ;; This function calls:
 14002 ;;		Nothing
 14003 ;; This function is called by:
 14004 ;;		_ble_process
 14005 ;; This function uses a non-reentrant model
 14006 ;;
 14007                           
 14008                           
 14009                           ;psect for function _ble_receive_stop
 14010  07C4                     _ble_receive_stop:	
 14011                           
 14012                           ;app_ble.c: 163: _delay((unsigned long)((100)*(16000000/4000000.0)));
 14013                           
 14014                           ;incstack = 0
 14015                           ; Regs used in _ble_receive_stop: [wreg]
 14016  07C4  3085               	movlw	133
 14017  07C5                     u6577:	
 14018  07C5  0B89               	decfsz	9,f
 14019  07C6  2FC5               	goto	u6577
 14020  07C7  0000               	nop
 14021                           
 14022                           ;app_ble.c: 164: LATCbits.LATC1 = 1;
 14023  07C8  0022               	movlb	2	; select bank2
 14024  07C9  148E               	bsf	14,1	;volatile
 14025  07CA  0008               	return
 14026  07CB                     __end_of_ble_receive_stop:	
 14027  07CB                     PL46:	
 14028  07CB  082B               	movf	ble_send_data@i,w
 14029  07CC  00A5               	movwf	??_ble_send_data
 14030  07CD  01A6               	clrf	??_ble_send_data+1
 14031  07CE  072C               	addwf	ble_send_data@p,w
 14032  07CF  00A7               	movwf	??_ble_send_data+2
 14033  07D0  0826               	movf	??_ble_send_data+1,w
 14034  07D1  3D2D               	addwfc	ble_send_data@p+1,w
 14035  07D2  00A8               	movwf	??_ble_send_data+3
 14036  07D3  0827               	movf	??_ble_send_data+2,w
 14037  07D4  0008               	return
 14038  07D5                     __end_ofPL46:	
 14039  07D5                     PL78:	
 14040  07D5  3E2E               	addlw	46
 14041  07D6  00A5               	movwf	??_ble_send_data
 14042  07D7  3000               	movlw	0
 14043  07D8  3D2D               	addwfc	ble_send_data@p+1,w
 14044  07D9  00A6               	movwf	??_ble_send_data+1
 14045  07DA  0825               	movf	??_ble_send_data,w
 14046  07DB  0086               	movwf	6
 14047  07DC  0826               	movf	??_ble_send_data+1,w
 14048  07DD  0087               	movwf	7
 14049  07DE  0008               	return
 14050  07DF                     __end_ofPL78:	
 14051  07DF                     PL82:	
 14052  07DF  082C               	movf	ble_send_data@p,w
 14053  07E0  0086               	movwf	6
 14054  07E1  082D               	movf	ble_send_data@p+1,w
 14055  07E2  0087               	movwf	7
 14056  07E3  0801               	movf	1,w
 14057  07E4  3903               	andlw	3
 14058  07E5  0008               	return
 14059  07E6                     __end_ofPL82:	
 14060  07E6                     PL106:	
 14061  07E6  3E2E               	addlw	46
 14062  07E7  0086               	movwf	6
 14063  07E8  3000               	movlw	0
 14064  07E9  3D2D               	addwfc	ble_send_data@p+1,w
 14065  07EA  0087               	movwf	7
 14066  07EB  0008               	return
 14067  07EC                     __end_ofPL106:	
 14068                           
 14069                           	psect	text44
 14070  0C04                     __ptext44:	
 14071 ;; *************** function _led_set_preview *****************
 14072 ;; Defined at:
 14073 ;;		line 2185 in file "src/app_led.c"
 14074 ;; Parameters:    Size  Location     Type
 14075 ;;  pbuf            1    wreg     const PTR const unsigned
 14076 ;;		 -> rx_buf(80), 
 14077 ;; Auto vars:     Size  Location     Type
 14078 ;;  pbuf            1    4[BANK0 ] const PTR const unsigned
 14079 ;;		 -> rx_buf(80), 
 14080 ;;  val             2    5[BANK0 ] unsigned int 
 14081 ;;  i               1    7[BANK0 ] unsigned char 
 14082 ;; Return value:  Size  Location     Type
 14083 ;;                  1    wreg      unsigned char 
 14084 ;; Registers used:
 14085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14086 ;; Tracked objects:
 14087 ;;		On entry : 1F/0
 14088 ;;		On exit  : 1F/0
 14089 ;;		Unchanged: 0/0
 14090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14092 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14094 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14095 ;;Total ram usage:        6 bytes
 14096 ;; Hardware stack levels used:    1
 14097 ;; Hardware stack levels required when called:    9
 14098 ;; This function calls:
 14099 ;;		Nothing
 14100 ;; This function is called by:
 14101 ;;		_ble_decode
 14102 ;; This function uses a non-reentrant model
 14103 ;;
 14104                           
 14105                           
 14106                           ;psect for function _led_set_preview
 14107  0C04                     _led_set_preview:	
 14108                           
 14109                           ;incstack = 0
 14110                           ; Regs used in _led_set_preview: [wreg-fsr1h+status,2+status,0]
 14111                           ;led_set_preview@pbuf stored from wreg
 14112  0C04  00A4               	movwf	led_set_preview@pbuf
 14113                           
 14114                           ;app_led.c: 2187: if(led_run_para.mFind || m_led_para.ble_para.mMode == 0)
 14115  0C05  185D               	btfsc	_led_run_para,0
 14116  0C06  3400               	retlw	0
 14117  0C07  26B0  318C         	fcall	PL10	;call to abstracted procedure
 14118  0C09  1903               	btfsc	3,2
 14119                           
 14120                           ;app_led.c: 2188: {
 14121                           ;app_led.c: 2189: return 0;
 14122  0C0A  3400               	retlw	0
 14123                           
 14124                           ;app_led.c: 2190: }
 14125                           ;app_led.c: 2195: for(uint8_t i = 0; i < 4; i++)
 14126  0C0B  01A7               	clrf	led_set_preview@i
 14127  0C0C                     l4605:	
 14128                           
 14129                           ;app_led.c: 2196: {
 14130                           ;app_led.c: 2197: uint16_t val = (*(pbuf + 2 * i)) << 8 | (*(pbuf + 2 * i + 1));
 14131  0C0C  3527               	lslf	led_set_preview@i,w
 14132  0C0D  0724               	addwf	led_set_preview@pbuf,w
 14133  0C0E  00A2               	movwf	??_led_set_preview
 14134  0C0F  0A22               	incf	??_led_set_preview,w
 14135  0C10  0086               	movwf	6
 14136  0C11  3001               	movlw	1	; select bank2/3
 14137  0C12  0087               	movwf	7
 14138  0C13  3527               	lslf	led_set_preview@i,w
 14139  0C14  0724               	addwf	led_set_preview@pbuf,w
 14140  0C15  00A3               	movwf	??_led_set_preview+1
 14141  0C16  0084               	movwf	4
 14142  0C17  3001               	movlw	1	; select bank2/3
 14143  0C18  0085               	movwf	5
 14144  0C19  0800               	movf	0,w
 14145  0C1A  00A6               	movwf	led_set_preview@val+1
 14146  0C1B  0801               	movf	1,w
 14147  0C1C  00A5               	movwf	led_set_preview@val
 14148                           
 14149                           ;app_led.c: 2198: if(val <= 1000)
 14150  0C1D  3003               	movlw	3
 14151  0C1E  0226               	subwf	led_set_preview@val+1,w
 14152  0C1F  30E9               	movlw	233
 14153  0C20  1903               	skipnz
 14154  0C21  0225               	subwf	led_set_preview@val,w
 14155  0C22  1803               	skipnc
 14156  0C23  2C33               	goto	l4611
 14157                           
 14158                           ;app_led.c: 2199: {
 14159                           ;app_led.c: 2200: target_bright[i] = val;
 14160  0C24  3527               	lslf	led_set_preview@i,w
 14161  0C25  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 14162  0C26  0086               	movwf	6
 14163  0C27  0187               	clrf	7
 14164  0C28  0825               	movf	led_set_preview@val,w
 14165  0C29  3FC0               	movwi [0]fsr1
 14166  0C2A  0826               	movf	led_set_preview@val+1,w
 14167  0C2B  3FC1               	movwi [1]fsr1
 14168                           
 14169                           ;app_led.c: 2201: current_bright[i] = val;
 14170  0C2C  3527               	lslf	led_set_preview@i,w
 14171  0C2D  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 14172  0C2E  0086               	movwf	6
 14173  0C2F  0825               	movf	led_set_preview@val,w
 14174  0C30  3FC0               	movwi [0]fsr1
 14175  0C31  0826               	movf	led_set_preview@val+1,w
 14176  0C32  3FC1               	movwi [1]fsr1
 14177  0C33                     l4611:	
 14178  0C33  3004               	movlw	4
 14179  0C34  0AA7               	incf	led_set_preview@i,f
 14180  0C35  0227               	subwf	led_set_preview@i,w
 14181  0C36  1803               	btfsc	3,0
 14182                           
 14183                           ;app_led.c: 2202: }
 14184                           ;app_led.c: 2203: }
 14185                           ;app_led.c: 2204: return 1;
 14186  0C37  3401               	retlw	1
 14187  0C38  2C0C               	goto	l4605
 14188  0C39                     __end_of_led_set_preview:	
 14189  0C39                     __ptext20:	
 14190 ;; *************** function _led_para_init *****************
 14191 ;; Defined at:
 14192 ;;		line 237 in file "src/app_led.c"
 14193 ;; Parameters:    Size  Location     Type
 14194 ;;		None
 14195 ;; Auto vars:     Size  Location     Type
 14196 ;;  i               1   35[BANK0 ] unsigned char 
 14197 ;;  j               1   34[BANK0 ] unsigned char 
 14198 ;; Return value:  Size  Location     Type
 14199 ;;                  1    wreg      void 
 14200 ;; Registers used:
 14201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14202 ;; Tracked objects:
 14203 ;;		On entry : 1F/1
 14204 ;;		On exit  : 1D/0
 14205 ;;		Unchanged: 0/0
 14206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14208 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14209 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14210 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14211 ;;Total ram usage:       12 bytes
 14212 ;; Hardware stack levels used:    1
 14213 ;; Hardware stack levels required when called:   11
 14214 ;; This function calls:
 14215 ;;		___wmul
 14216 ;;		_eeprom_read_buffer
 14217 ;;		_led_indicate_ble
 14218 ;;		_led_indicate_day
 14219 ;;		_led_indicate_night
 14220 ;;		_led_indicate_off
 14221 ;;		_led_para_default
 14222 ;;		_led_turnoff
 14223 ;;		_led_turnoff_ramp
 14224 ;;		_led_turnon_ramp
 14225 ;;		_led_update_day_bright
 14226 ;;		_led_update_night_bright
 14227 ;; This function is called by:
 14228 ;;		_led_init
 14229 ;; This function uses a non-reentrant model
 14230 ;;
 14231                           
 14232                           
 14233                           ;psect for function _led_para_init
 14234  0C39                     _led_para_init:	
 14235  0C39                     l6101:	
 14236                           ;incstack = 0
 14237                           ; Regs used in _led_para_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14238                           
 14239                           
 14240                           ;app_led.c: 239: uint8_t i, j;
 14241                           ;app_led.c: 240: eeprom_read_buffer(0x10, (uint8_t *) & m_led_para, sizeof(m_led_para));
 14242  0C39  307F               	movlw	127
 14243  0C3A  0020               	movlb	0	; select bank0
 14244  0C3B  00A3               	movwf	eeprom_read_buffer@pbuf
 14245  0C3C  3023               	movlw	35
 14246  0C3D  00A4               	movwf	eeprom_read_buffer@pbuf+1
 14247  0C3E  3071               	movlw	113
 14248  0C3F  00A5               	movwf	eeprom_read_buffer@len
 14249  0C40  3010               	movlw	16
 14250  0C41  2612  318C         	fcall	_eeprom_read_buffer
 14251                           
 14252                           ;app_led.c: 241: if(m_led_para.save_flag != 0x55)
 14253  0C43  2755  318C         	fcall	PL134	;call to abstracted procedure
 14254  0C45  0601               	xorwf	1,w
 14255  0C46  1903               	btfsc	3,2
 14256  0C47  2C4B               	goto	l6107
 14257                           
 14258                           ;app_led.c: 242: {
 14259                           ;app_led.c: 243: led_para_default();
 14260  0C48  3190  20C6  318C   	fcall	_led_para_default
 14261  0C4B                     l6107:	
 14262                           
 14263                           ;app_led.c: 244: }
 14264                           ;app_led.c: 248: if(m_led_para.last_mode != 1 && m_led_para.last_mode != 2)
 14265  0C4B  307F               	movlw	127
 14266  0C4C  0086               	movwf	6
 14267  0C4D  3023               	movlw	35
 14268  0C4E  0087               	movwf	7
 14269  0C4F  3141               	addfsr 1,1
 14270  0C50  0C01               	rrf	1,w
 14271  0C51  0C89               	rrf	9,f
 14272  0C52  3903               	andlw	3
 14273  0C53  3A01               	xorlw	1
 14274  0C54  274B  318C         	fcall	PL118	;call to abstracted procedure
 14275  0C56  1903               	skipnz
 14276  0C57  2C62               	goto	L11
 14277                           
 14278                           ;app_led.c: 249: {
 14279                           ;app_led.c: 250: m_led_para.last_mode = 1;
 14280  0C58  318B  239B  318C   	fcall	PL74	;call to abstracted procedure
 14281  0C5B  1903               	skipnz
 14282  0C5C  2C62               	goto	L11
 14283  0C5D  3191  21C1  318C   	fcall	PL132	;call to abstracted procedure
 14284                           
 14285                           ;app_led.c: 251: }
 14286                           ;app_led.c: 252: if(m_led_para.all_bright > 1000)
 14287  0C60  274B  318C         	fcall	PL118	;call to abstracted procedure
 14288  0C62                     L11:	
 14289  0C62  3142               	addfsr 1,2
 14290  0C63  272E  318C         	fcall	PL96	;call to abstracted procedure
 14291  0C65  1903               	skipnz
 14292  0C66  0238               	subwf	??_led_para_init,w
 14293  0C67  1C03               	skipc
 14294  0C68  2C6E               	goto	l598
 14295                           
 14296                           ;app_led.c: 253: {
 14297                           ;app_led.c: 254: m_led_para.all_bright = 1000;
 14298  0C69  2729               	fcall	PL84	;call to abstracted procedure
 14299  0C6A  318B  2389  318C   	fcall	PL32	;call to abstracted procedure
 14300  0C6D  2750               	fcall	PL120	;call to abstracted procedure
 14301  0C6E                     l598:	
 14302                           
 14303                           ;app_led.c: 255: }
 14304                           ;app_led.c: 256: if(m_led_para.all_bright < 10)
 14305  0C6E  318B  2389  318C   	fcall	PL32	;call to abstracted procedure
 14306  0C71  2735  318C         	fcall	PL102	;call to abstracted procedure
 14307  0C73  1903               	skipnz
 14308  0C74  0238               	subwf	??_led_para_init,w
 14309  0C75  1803               	skipnc
 14310  0C76  2C7C               	goto	l599
 14311                           
 14312                           ;app_led.c: 257: {
 14313                           ;app_led.c: 258: m_led_para.all_bright = 10;
 14314  0C77  273C  318C         	fcall	PL104	;call to abstracted procedure
 14315  0C79  3142               	addfsr 1,2
 14316  0C7A  2750  318C         	fcall	PL120	;call to abstracted procedure
 14317  0C7C                     l599:	
 14318                           
 14319                           ;app_led.c: 259: }
 14320                           ;app_led.c: 260: if(m_led_para.blue_bright > 1000)
 14321  0C7C  26D9  318C         	fcall	PL24	;call to abstracted procedure
 14322  0C7E  272E  318C         	fcall	PL96	;call to abstracted procedure
 14323  0C80  1903               	skipnz
 14324  0C81  0238               	subwf	??_led_para_init,w
 14325  0C82  1C03               	skipc
 14326  0C83  2C8A               	goto	l600
 14327                           
 14328                           ;app_led.c: 261: {
 14329                           ;app_led.c: 262: m_led_para.blue_bright = 1000;
 14330  0C84  2729  318C         	fcall	PL84	;call to abstracted procedure
 14331  0C86  26D9  318C         	fcall	PL24	;call to abstracted procedure
 14332  0C88  2750  318C         	fcall	PL120	;call to abstracted procedure
 14333  0C8A                     l600:	
 14334                           
 14335                           ;app_led.c: 263: }
 14336                           ;app_led.c: 264: if(m_led_para.blue_bright < 10)
 14337  0C8A  26D9  318C         	fcall	PL24	;call to abstracted procedure
 14338  0C8C  2735  318C         	fcall	PL102	;call to abstracted procedure
 14339  0C8E  1903               	skipnz
 14340  0C8F  0238               	subwf	??_led_para_init,w
 14341  0C90  1803               	skipnc
 14342  0C91  2C97               	goto	l6123
 14343                           
 14344                           ;app_led.c: 265: {
 14345                           ;app_led.c: 266: m_led_para.blue_bright = 10;
 14346  0C92  273C  318C         	fcall	PL104	;call to abstracted procedure
 14347  0C94  3144               	addfsr 1,4
 14348  0C95  2750  318C         	fcall	PL120	;call to abstracted procedure
 14349  0C97                     l6123:	
 14350                           
 14351                           ;app_led.c: 267: }
 14352                           ;app_led.c: 270: if(m_led_para.ble_para.mMode > 2)
 14353  0C97  26B0  318C         	fcall	PL10	;call to abstracted procedure
 14354  0C99  3A03               	xorlw	3
 14355  0C9A  1D03               	skipz
 14356  0C9B  2CA3               	goto	l6127
 14357                           
 14358                           ;app_led.c: 271: {
 14359                           ;app_led.c: 272: m_led_para.ble_para.mMode = 0;
 14360  0C9C  307F               	movlw	127
 14361  0C9D  0086               	movwf	6
 14362  0C9E  3023               	movlw	35
 14363  0C9F  0087               	movwf	7
 14364  0CA0  30FC               	movlw	-4
 14365  0CA1  3146               	addfsr 1,6
 14366  0CA2  0581               	andwf	1,f
 14367  0CA3                     l6127:	
 14368                           
 14369                           ;app_led.c: 273: }
 14370                           ;app_led.c: 276: for(i = 0; i < 4; i++)
 14371  0CA3  01C3               	clrf	led_para_init@i
 14372  0CA4                     l6133:	
 14373                           
 14374                           ;app_led.c: 277: {
 14375                           ;app_led.c: 278: if(m_led_para.ble_para.manual_para.mBright[i] > 1000)
 14376  0CA4  0843               	movf	led_para_init@i,w
 14377  0CA5  00B8               	movwf	??_led_para_init
 14378  0CA6  3088               	movlw	136
 14379  0CA7  01B9               	clrf	??_led_para_init+1
 14380  0CA8  35B8               	lslf	??_led_para_init,f
 14381  0CA9  0DB9               	rlf	??_led_para_init+1,f
 14382  0CAA  00BA               	movwf	??_led_para_init+2
 14383  0CAB  26F5  318C         	fcall	PL52	;call to abstracted procedure
 14384  0CAD  3F40               	moviw [0]fsr1
 14385  0CAE  00BC               	movwf	??_led_para_init+4
 14386  0CAF  3F41               	moviw [1]fsr1
 14387  0CB0  00BD               	movwf	??_led_para_init+5
 14388  0CB1  3003               	movlw	3
 14389  0CB2  023D               	subwf	??_led_para_init+5,w
 14390  0CB3  30E9               	movlw	233
 14391  0CB4  1903               	skipnz
 14392  0CB5  023C               	subwf	??_led_para_init+4,w
 14393  0CB6  1C03               	skipc
 14394  0CB7  2CCD               	goto	l6137
 14395                           
 14396                           ;app_led.c: 279: {
 14397                           ;app_led.c: 280: m_led_para.ble_para.manual_para.mBright[i] = 1000;
 14398  0CB8  30E8               	movlw	232
 14399  0CB9  00B8               	movwf	??_led_para_init
 14400  0CBA  3003               	movlw	3
 14401  0CBB  00B9               	movwf	??_led_para_init+1
 14402  0CBC  0843               	movf	led_para_init@i,w
 14403  0CBD  00BA               	movwf	??_led_para_init+2
 14404  0CBE  3088               	movlw	136
 14405  0CBF  01BB               	clrf	??_led_para_init+3
 14406  0CC0  35BA               	lslf	??_led_para_init+2,f
 14407  0CC1  0DBB               	rlf	??_led_para_init+3,f
 14408  0CC2  00BC               	movwf	??_led_para_init+4
 14409  0CC3  3023               	movlw	35
 14410  0CC4  00BD               	movwf	??_led_para_init+5
 14411  0CC5  083A               	movf	??_led_para_init+2,w
 14412  0CC6  073C               	addwf	??_led_para_init+4,w
 14413  0CC7  0086               	movwf	6
 14414  0CC8  083B               	movf	??_led_para_init+3,w
 14415  0CC9  3D3D               	addwfc	??_led_para_init+5,w
 14416  0CCA  0087               	movwf	7
 14417  0CCB  2750  318C         	fcall	PL120	;call to abstracted procedure
 14418  0CCD                     l6137:	
 14419                           
 14420                           ;app_led.c: 281: }
 14421                           ;app_led.c: 282: for(j = 0; j < 4; j++)
 14422  0CCD  01C2               	clrf	led_para_init@j
 14423  0CCE                     l6143:	
 14424                           
 14425                           ;app_led.c: 283: {
 14426                           ;app_led.c: 284: if(m_led_para.ble_para.manual_para.mCustomBright[j][i] > 100)
 14427  0CCE  26B8  318C         	fcall	PL20	;call to abstracted procedure
 14428  0CD0  0086               	movwf	6
 14429  0CD1  0839               	movf	??_led_para_init+1,w
 14430  0CD2  3D3F               	addwfc	??_led_para_init+7,w
 14431  0CD3  0087               	movwf	7
 14432  0CD4  3065               	movlw	101
 14433  0CD5  0201               	subwf	1,w
 14434  0CD6  1C03               	skipc
 14435  0CD7  2CE4               	goto	l6147
 14436                           
 14437                           ;app_led.c: 285: {
 14438                           ;app_led.c: 286: m_led_para.ble_para.manual_para.mCustomBright[j][i] = 100;
 14439  0CD8  26B8  318C         	fcall	PL20	;call to abstracted procedure
 14440  0CDA  00C0               	movwf	??_led_para_init+8
 14441  0CDB  0839               	movf	??_led_para_init+1,w
 14442  0CDC  3D3F               	addwfc	??_led_para_init+7,w
 14443  0CDD  00C1               	movwf	??_led_para_init+9
 14444  0CDE  0840               	movf	??_led_para_init+8,w
 14445  0CDF  0086               	movwf	6
 14446  0CE0  0841               	movf	??_led_para_init+9,w
 14447  0CE1  0087               	movwf	7
 14448  0CE2  3064               	movlw	100
 14449  0CE3  0081               	movwf	1
 14450  0CE4                     l6147:	
 14451  0CE4  3004               	movlw	4
 14452  0CE5  0AC2               	incf	led_para_init@j,f
 14453  0CE6  0242               	subwf	led_para_init@j,w
 14454  0CE7  1C03               	skipc
 14455  0CE8  2CCE               	goto	l6143
 14456  0CE9  3004               	movlw	4
 14457  0CEA  0AC3               	incf	led_para_init@i,f
 14458  0CEB  0243               	subwf	led_para_init@i,w
 14459  0CEC  1C03               	skipc
 14460  0CED  2CA4               	goto	l6133
 14461                           
 14462                           ;app_led.c: 287: }
 14463                           ;app_led.c: 288: }
 14464                           ;app_led.c: 289: }
 14465                           ;app_led.c: 292: if(m_led_para.ble_para.auto_para.sunrise_start_hour > 23)
 14466  0CEE  30A0               	movlw	160
 14467  0CEF  2717  318C         	fcall	PL68	;call to abstracted procedure
 14468  0CF1  1C03               	skipc
 14469  0CF2  2CF6               	goto	l609
 14470                           
 14471                           ;app_led.c: 293: {
 14472                           ;app_led.c: 294: m_led_para.ble_para.auto_para.sunrise_start_hour = 0;
 14473  0CF3  30A0               	movlw	160
 14474  0CF4  0086               	movwf	6
 14475  0CF5  0181               	clrf	1
 14476  0CF6                     l609:	
 14477                           
 14478                           ;app_led.c: 295: }
 14479                           ;app_led.c: 296: if(m_led_para.ble_para.auto_para.sunrise_start_minute > 59)
 14480  0CF6  30A1               	movlw	161
 14481  0CF7  271D  318C         	fcall	PL70	;call to abstracted procedure
 14482  0CF9  1C03               	skipc
 14483  0CFA  2CFE               	goto	l610
 14484                           
 14485                           ;app_led.c: 297: {
 14486                           ;app_led.c: 298: m_led_para.ble_para.auto_para.sunrise_start_minute = 0;
 14487  0CFB  30A1               	movlw	161
 14488  0CFC  0086               	movwf	6
 14489  0CFD  0181               	clrf	1
 14490  0CFE                     l610:	
 14491                           
 14492                           ;app_led.c: 299: }
 14493                           ;app_led.c: 300: if(m_led_para.ble_para.auto_para.sunrise_end_hour > 23)
 14494  0CFE  30A2               	movlw	162
 14495  0CFF  2717  318C         	fcall	PL68	;call to abstracted procedure
 14496  0D01  1C03               	skipc
 14497  0D02  2D06               	goto	l611
 14498                           
 14499                           ;app_led.c: 301: {
 14500                           ;app_led.c: 302: m_led_para.ble_para.auto_para.sunrise_end_hour = 0;
 14501  0D03  30A2               	movlw	162
 14502  0D04  0086               	movwf	6
 14503  0D05  0181               	clrf	1
 14504  0D06                     l611:	
 14505                           
 14506                           ;app_led.c: 303: }
 14507                           ;app_led.c: 304: if(m_led_para.ble_para.auto_para.sunrise_end_minute > 59)
 14508  0D06  30A3               	movlw	163
 14509  0D07  271D  318C         	fcall	PL70	;call to abstracted procedure
 14510  0D09  1C03               	skipc
 14511  0D0A  2D0E               	goto	l612
 14512                           
 14513                           ;app_led.c: 305: {
 14514                           ;app_led.c: 306: m_led_para.ble_para.auto_para.sunrise_end_minute = 0;
 14515  0D0B  30A3               	movlw	163
 14516  0D0C  0086               	movwf	6
 14517  0D0D  0181               	clrf	1
 14518  0D0E                     l612:	
 14519                           
 14520                           ;app_led.c: 307: }
 14521                           ;app_led.c: 308: if(m_led_para.ble_para.auto_para.sunset_start_hour > 23)
 14522  0D0E  30A8               	movlw	168
 14523  0D0F  2717  318C         	fcall	PL68	;call to abstracted procedure
 14524  0D11  1C03               	skipc
 14525  0D12  2D16               	goto	l613
 14526                           
 14527                           ;app_led.c: 309: {
 14528                           ;app_led.c: 310: m_led_para.ble_para.auto_para.sunset_start_hour = 0;
 14529  0D13  30A8               	movlw	168
 14530  0D14  0086               	movwf	6
 14531  0D15  0181               	clrf	1
 14532  0D16                     l613:	
 14533                           
 14534                           ;app_led.c: 311: }
 14535                           ;app_led.c: 312: if(m_led_para.ble_para.auto_para.sunset_start_minute > 59)
 14536  0D16  30A9               	movlw	169
 14537  0D17  271D  318C         	fcall	PL70	;call to abstracted procedure
 14538  0D19  1C03               	skipc
 14539  0D1A  2D1E               	goto	l614
 14540                           
 14541                           ;app_led.c: 313: {
 14542                           ;app_led.c: 314: m_led_para.ble_para.auto_para.sunset_start_minute = 0;
 14543  0D1B  30A9               	movlw	169
 14544  0D1C  0086               	movwf	6
 14545  0D1D  0181               	clrf	1
 14546  0D1E                     l614:	
 14547                           
 14548                           ;app_led.c: 315: }
 14549                           ;app_led.c: 316: if(m_led_para.ble_para.auto_para.sunset_end_hour > 23)
 14550  0D1E  30AA               	movlw	170
 14551  0D1F  2717  318C         	fcall	PL68	;call to abstracted procedure
 14552  0D21  1C03               	skipc
 14553  0D22  2D26               	goto	l615
 14554                           
 14555                           ;app_led.c: 317: {
 14556                           ;app_led.c: 318: m_led_para.ble_para.auto_para.sunset_end_hour = 0;
 14557  0D23  30AA               	movlw	170
 14558  0D24  0086               	movwf	6
 14559  0D25  0181               	clrf	1
 14560  0D26                     l615:	
 14561                           
 14562                           ;app_led.c: 319: }
 14563                           ;app_led.c: 320: if(m_led_para.ble_para.auto_para.sunset_end_minute > 59)
 14564  0D26  30AB               	movlw	171
 14565  0D27  271D  318C         	fcall	PL70	;call to abstracted procedure
 14566  0D29  1C03               	skipc
 14567  0D2A  2D2E               	goto	l616
 14568                           
 14569                           ;app_led.c: 321: {
 14570                           ;app_led.c: 322: m_led_para.ble_para.auto_para.sunset_end_minute = 0;
 14571  0D2B  30AB               	movlw	171
 14572  0D2C  0086               	movwf	6
 14573  0D2D  0181               	clrf	1
 14574  0D2E                     l616:	
 14575                           
 14576                           ;app_led.c: 323: }
 14577                           ;app_led.c: 324: if(m_led_para.ble_para.auto_para.turnoff_hour > 23)
 14578  0D2E  30B1               	movlw	177
 14579  0D2F  2717  318C         	fcall	PL68	;call to abstracted procedure
 14580  0D31  1C03               	skipc
 14581  0D32  2D36               	goto	l617
 14582                           
 14583                           ;app_led.c: 325: {
 14584                           ;app_led.c: 326: m_led_para.ble_para.auto_para.turnoff_hour = 0;
 14585  0D33  30B1               	movlw	177
 14586  0D34  0086               	movwf	6
 14587  0D35  0181               	clrf	1
 14588  0D36                     l617:	
 14589                           
 14590                           ;app_led.c: 327: }
 14591                           ;app_led.c: 328: if(m_led_para.ble_para.auto_para.turnoff_minute > 59)
 14592  0D36  30B2               	movlw	178
 14593  0D37  271D  318C         	fcall	PL70	;call to abstracted procedure
 14594  0D39  1C03               	skipc
 14595  0D3A  2D3E               	goto	l6177
 14596                           
 14597                           ;app_led.c: 329: {
 14598                           ;app_led.c: 330: m_led_para.ble_para.auto_para.turnoff_minute = 0;
 14599  0D3B  30B2               	movlw	178
 14600  0D3C  0086               	movwf	6
 14601  0D3D  0181               	clrf	1
 14602  0D3E                     l6177:	
 14603                           
 14604                           ;app_led.c: 331: }
 14605                           ;app_led.c: 332: for(i = 0; i < 4; i++)
 14606  0D3E  01C3               	clrf	led_para_init@i
 14607  0D3F                     l6183:	
 14608                           
 14609                           ;app_led.c: 333: {
 14610                           ;app_led.c: 334: if(m_led_para.ble_para.auto_para.day_bright[i] > 100)
 14611  0D3F  0843               	movf	led_para_init@i,w
 14612  0D40  00B8               	movwf	??_led_para_init
 14613  0D41  30A4               	movlw	164
 14614  0D42  01B9               	clrf	??_led_para_init+1
 14615  0D43  00BA               	movwf	??_led_para_init+2
 14616  0D44  26F5  318C         	fcall	PL52	;call to abstracted procedure
 14617  0D46  3065               	movlw	101
 14618  0D47  0201               	subwf	1,w
 14619                           
 14620                           ;app_led.c: 335: {
 14621                           ;app_led.c: 336: m_led_para.ble_para.auto_para.day_bright[i] = 100;
 14622  0D48  0843               	movf	led_para_init@i,w
 14623  0D49  00B8               	movwf	??_led_para_init
 14624  0D4A  1C03               	skipc
 14625  0D4B  2D53               	goto	L12
 14626  0D4C  30A4               	movlw	164
 14627  0D4D  01B9               	clrf	??_led_para_init+1
 14628  0D4E  00BA               	movwf	??_led_para_init+2
 14629  0D4F  26E6  318C         	fcall	PL48	;call to abstracted procedure
 14630                           
 14631                           ;app_led.c: 337: }
 14632                           ;app_led.c: 338: if(m_led_para.ble_para.auto_para.night_bright[i] > 100)
 14633  0D51  0843               	movf	led_para_init@i,w
 14634  0D52  00B8               	movwf	??_led_para_init
 14635  0D53                     L12:	
 14636  0D53  30AC               	movlw	172
 14637  0D54  01B9               	clrf	??_led_para_init+1
 14638  0D55  00BA               	movwf	??_led_para_init+2
 14639  0D56  26F5  318C         	fcall	PL52	;call to abstracted procedure
 14640  0D58  3065               	movlw	101
 14641  0D59  0201               	subwf	1,w
 14642  0D5A  1C03               	skipc
 14643  0D5B  2D63               	goto	l6189
 14644                           
 14645                           ;app_led.c: 339: {
 14646                           ;app_led.c: 340: m_led_para.ble_para.auto_para.night_bright[i] = 100;
 14647  0D5C  0843               	movf	led_para_init@i,w
 14648  0D5D  00B8               	movwf	??_led_para_init
 14649  0D5E  30AC               	movlw	172
 14650  0D5F  01B9               	clrf	??_led_para_init+1
 14651  0D60  00BA               	movwf	??_led_para_init+2
 14652  0D61  26E6  318C         	fcall	PL48	;call to abstracted procedure
 14653  0D63                     l6189:	
 14654  0D63  3004               	movlw	4
 14655  0D64  0AC3               	incf	led_para_init@i,f
 14656  0D65  0243               	subwf	led_para_init@i,w
 14657  0D66  1C03               	skipc
 14658  0D67  2D3F               	goto	l6183
 14659                           
 14660                           ;app_led.c: 341: }
 14661                           ;app_led.c: 342: }
 14662                           ;app_led.c: 345: if(m_led_para.ble_para.pro_para.point_count < 4 || m_led_para.ble_para.
      +                          pro_para.point_count > 10)
 14663  0D68  2744  318C         	fcall	PL112	;call to abstracted procedure
 14664  0D6A  30B3               	movlw	179
 14665  0D6B  0086               	movwf	6
 14666  0D6C  1C03               	skipc
 14667  0D6D  2D74               	goto	L13
 14668  0D6E  300B               	movlw	11
 14669  0D6F  0201               	subwf	1,w
 14670  0D70  1C03               	skipc
 14671  0D71  2D76               	goto	l6199
 14672                           
 14673                           ;app_led.c: 346: {
 14674                           ;app_led.c: 347: m_led_para.ble_para.pro_para.point_count = 6;
 14675  0D72  30B3               	movlw	179
 14676  0D73  0086               	movwf	6
 14677  0D74                     L13:	
 14678  0D74  3006               	movlw	6
 14679  0D75  0081               	movwf	1
 14680  0D76                     l6199:	
 14681                           
 14682                           ;app_led.c: 348: }
 14683                           ;app_led.c: 349: for(i = 0; i < 10; i++)
 14684  0D76  01C3               	clrf	led_para_init@i
 14685  0D77                     l6205:	
 14686                           
 14687                           ;app_led.c: 350: {
 14688                           ;app_led.c: 351: if(m_led_para.ble_para.pro_para.points[i].hour > 23)
 14689  0D77  26DF               	fcall	PL40	;call to abstracted procedure
 14690  0D78  3196  26BF  318C   	fcall	___wmul
 14691  0D7B  30B4               	movlw	180
 14692  0D7C  26CF  318C         	fcall	PL22	;call to abstracted procedure
 14693  0D7E  3018               	movlw	24
 14694  0D7F  0201               	subwf	1,w
 14695                           
 14696                           ;app_led.c: 352: {
 14697                           ;app_led.c: 353: m_led_para.ble_para.pro_para.points[i].hour = 0;
 14698  0D80  26DF  318C         	fcall	PL40	;call to abstracted procedure
 14699  0D82  1C03               	skipc
 14700  0D83  2D8C               	goto	L14
 14701  0D84  3196  26BF  318C   	fcall	___wmul
 14702  0D87  30B4               	movlw	180
 14703  0D88  26CF  318C         	fcall	PL22	;call to abstracted procedure
 14704  0D8A  0181               	clrf	1
 14705                           
 14706                           ;app_led.c: 354: }
 14707                           ;app_led.c: 355: if(m_led_para.ble_para.pro_para.points[i].minuite > 59)
 14708  0D8B  26DF               	fcall	PL40	;call to abstracted procedure
 14709  0D8C                     L14:	
 14710  0D8C  3196  26BF  318C   	fcall	___wmul
 14711  0D8F  30B5               	movlw	181
 14712  0D90  26CF  318C         	fcall	PL22	;call to abstracted procedure
 14713  0D92  303C               	movlw	60
 14714  0D93  0201               	subwf	1,w
 14715  0D94  1C03               	skipc
 14716  0D95  2D9E               	goto	l6211
 14717                           
 14718                           ;app_led.c: 356: {
 14719                           ;app_led.c: 357: m_led_para.ble_para.pro_para.points[i].hour = 0;
 14720  0D96  26DF               	fcall	PL40	;call to abstracted procedure
 14721  0D97  3196  26BF  318C   	fcall	___wmul
 14722  0D9A  30B4               	movlw	180
 14723  0D9B  26CF  318C         	fcall	PL22	;call to abstracted procedure
 14724  0D9D  0181               	clrf	1
 14725  0D9E                     l6211:	
 14726                           
 14727                           ;app_led.c: 358: }
 14728                           ;app_led.c: 359: for(j = 0; j < 4; j++)
 14729  0D9E  01C2               	clrf	led_para_init@j
 14730  0D9F                     l6217:	
 14731                           
 14732                           ;app_led.c: 360: {
 14733                           ;app_led.c: 361: if(m_led_para.ble_para.pro_para.points[i].bright[j] > 100)
 14734  0D9F  0842               	movf	led_para_init@j,w
 14735  0DA0  00B8               	movwf	??_led_para_init
 14736  0DA1  01B9               	clrf	??_led_para_init+1
 14737  0DA2  26DF               	fcall	PL40	;call to abstracted procedure
 14738  0DA3  3196  26BF  318C   	fcall	___wmul
 14739  0DA6  26FE  318C         	fcall	PL56	;call to abstracted procedure
 14740  0DA8  0086               	movwf	6
 14741  0DA9  0839               	movf	??_led_para_init+1,w
 14742  0DAA  3D3D               	addwfc	??_led_para_init+5,w
 14743  0DAB  0087               	movwf	7
 14744  0DAC  3065               	movlw	101
 14745  0DAD  0201               	subwf	1,w
 14746  0DAE  1C03               	skipc
 14747  0DAF  2DC3               	goto	l6221
 14748                           
 14749                           ;app_led.c: 362: {
 14750                           ;app_led.c: 363: m_led_para.ble_para.pro_para.points[i].bright[j] = 100;
 14751  0DB0  0842               	movf	led_para_init@j,w
 14752  0DB1  00B8               	movwf	??_led_para_init
 14753  0DB2  01B9               	clrf	??_led_para_init+1
 14754  0DB3  26DF               	fcall	PL40	;call to abstracted procedure
 14755  0DB4  3196  26BF  318C   	fcall	___wmul
 14756  0DB7  26FE  318C         	fcall	PL56	;call to abstracted procedure
 14757  0DB9  00BE               	movwf	??_led_para_init+6
 14758  0DBA  0839               	movf	??_led_para_init+1,w
 14759  0DBB  3D3D               	addwfc	??_led_para_init+5,w
 14760  0DBC  00BF               	movwf	??_led_para_init+7
 14761  0DBD  083E               	movf	??_led_para_init+6,w
 14762  0DBE  0086               	movwf	6
 14763  0DBF  083F               	movf	??_led_para_init+7,w
 14764  0DC0  0087               	movwf	7
 14765  0DC1  3064               	movlw	100
 14766  0DC2  0081               	movwf	1
 14767  0DC3                     l6221:	
 14768  0DC3  3004               	movlw	4
 14769  0DC4  0AC2               	incf	led_para_init@j,f
 14770  0DC5  0242               	subwf	led_para_init@j,w
 14771  0DC6  1C03               	skipc
 14772  0DC7  2D9F               	goto	l6217
 14773  0DC8  300A               	movlw	10
 14774  0DC9  0AC3               	incf	led_para_init@i,f
 14775  0DCA  0243               	subwf	led_para_init@i,w
 14776  0DCB  1803               	btfsc	3,0
 14777  0DCC  2DE6               	goto	l6253
 14778  0DCD  2D77               	goto	l6205
 14779  0DCE                     l6229:	
 14780                           
 14781                           ;app_led.c: 400: led_turnoff();
 14782  0DCE  2638  318C         	fcall	_led_turnoff
 14783                           
 14784                           ;app_led.c: 401: led_indicate_off();
 14785  0DD0  2F96               	ljmp	PL142
 14786  0DD1                     l6233:	
 14787                           ;app_led.c: 402: break;
 14788                           
 14789                           
 14790                           ;app_led.c: 404: led_update_day_bright();
 14791  0DD1  2646               	fcall	_led_update_day_bright
 14792                           
 14793                           ;app_led.c: 405: led_indicate_day();
 14794  0DD2  318B  2BDD         	ljmp	PL144
 14795  0DD4                     l6237:	
 14796                           ;app_led.c: 406: break;
 14797                           
 14798                           
 14799                           ;app_led.c: 408: led_update_night_bright();
 14800  0DD4  266E               	fcall	_led_update_night_bright
 14801                           
 14802                           ;app_led.c: 409: led_indicate_night();
 14803  0DD5  318B  2BC3         	ljmp	PL122
 14804  0DD7                     l6241:	
 14805                           ;app_led.c: 410: break;
 14806                           
 14807                           
 14808                           ;app_led.c: 412: if(m_led_para.ble_para.mMode == 0)
 14809  0DD7  26B0  318C         	fcall	PL10	;call to abstracted procedure
 14810  0DD9  1D03               	skipz
 14811  0DDA  2DE4               	goto	l6249
 14812                           
 14813                           ;app_led.c: 413: {
 14814                           ;app_led.c: 414: if(m_led_para.ble_para.manual_para.mOn)
 14815  0DDB  318A  2210  318C   	fcall	PL54	;call to abstracted procedure
 14816  0DDE  1C01               	btfss	1,0
 14817  0DDF  2DE3               	goto	l6247
 14818                           
 14819                           ;app_led.c: 415: {
 14820                           ;app_led.c: 416: led_turnon_ramp();
 14821  0DE0  25F6  318C         	fcall	_led_turnon_ramp
 14822                           
 14823                           ;app_led.c: 417: }
 14824  0DE2  2DE4               	goto	l6249
 14825  0DE3                     l6247:	
 14826                           
 14827                           ;app_led.c: 418: else
 14828                           ;app_led.c: 419: {
 14829                           ;app_led.c: 420: led_turnoff_ramp();
 14830  0DE3  269D               	fcall	_led_turnoff_ramp
 14831  0DE4                     l6249:	
 14832                           
 14833                           ;app_led.c: 421: }
 14834                           ;app_led.c: 422: }
 14835                           ;app_led.c: 423: led_indicate_ble();
 14836  0DE4  318B  2BCE         	ljmp	PL126
 14837  0DE6                     l6253:	
 14838                           ;app_led.c: 424: break;
 14839                           
 14840  0DE6  318B  2381  318C   	fcall	PL14	;call to abstracted procedure
 14841                           
 14842                           ; Switch size 1, requested type "space"
 14843                           ; Number of cases is 4, Range of values is 0 to 3
 14844                           ; switch strategies available:
 14845                           ; Name         Instructions Cycles
 14846                           ; simple_byte           13     7 (average)
 14847                           ; direct_byte           14     6 (fixed)
 14848                           ; jumptable            260     6 (fixed)
 14849                           ;	Chosen strategy is simple_byte
 14850  0DE9  1903               	skipnz
 14851  0DEA  2DCE               	goto	l6229
 14852  0DEB  3A01               	xorlw	1	; case 1
 14853  0DEC  1903               	skipnz
 14854  0DED  2DD1               	goto	l6233
 14855  0DEE  3A03               	xorlw	3	; case 2
 14856  0DEF  1903               	skipnz
 14857  0DF0  2DD4               	goto	l6237
 14858  0DF1  3A01               	xorlw	1	; case 3
 14859  0DF2  1903               	skipnz
 14860  0DF3  2DD7               	goto	l6241
 14861  0DF4  2DF5               	goto	l643
 14862  0DF5                     l643:	
 14863  0DF5  0008               	return
 14864  0DF6                     __end_of_led_para_init:	
 14865  0DF6                     __ptext47:	
 14866 ;; *************** function _led_turnon_ramp *****************
 14867 ;; Defined at:
 14868 ;;		line 676 in file "src/app_led.c"
 14869 ;; Parameters:    Size  Location     Type
 14870 ;;		None
 14871 ;; Auto vars:     Size  Location     Type
 14872 ;;  i               1    6[BANK0 ] unsigned char 
 14873 ;; Return value:  Size  Location     Type
 14874 ;;                  1    wreg      void 
 14875 ;; Registers used:
 14876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14877 ;; Tracked objects:
 14878 ;;		On entry : 1E/0
 14879 ;;		On exit  : 1F/0
 14880 ;;		Unchanged: 0/0
 14881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14883 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14884 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14885 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14886 ;;Total ram usage:        5 bytes
 14887 ;; Hardware stack levels used:    1
 14888 ;; Hardware stack levels required when called:    9
 14889 ;; This function calls:
 14890 ;;		Nothing
 14891 ;; This function is called by:
 14892 ;;		_led_para_init
 14893 ;;		_led_set_mode
 14894 ;;		_led_set_power
 14895 ;;		_led_set_time
 14896 ;; This function uses a non-reentrant model
 14897 ;;
 14898                           
 14899                           
 14900                           ;psect for function _led_turnon_ramp
 14901  0DF6                     _led_turnon_ramp:	
 14902                           
 14903                           ;app_led.c: 678: for(uint8_t i = 0; i < 4; i++)
 14904                           
 14905                           ;incstack = 0
 14906                           ; Regs used in _led_turnon_ramp: [wreg-fsr1h+status,2+status,0]
 14907  0DF6  0020               	movlb	0	; select bank0
 14908  0DF7  01A6               	clrf	led_turnon_ramp@i
 14909  0DF8                     l4081:	
 14910                           
 14911                           ;app_led.c: 679: {
 14912                           ;app_led.c: 680: target_bright[i] = m_led_para.ble_para.manual_para.mBright[i];
 14913  0DF8  0826               	movf	led_turnon_ramp@i,w
 14914  0DF9  00A2               	movwf	??_led_turnon_ramp
 14915  0DFA  3088               	movlw	136
 14916  0DFB  01A3               	clrf	??_led_turnon_ramp+1
 14917  0DFC  35A2               	lslf	??_led_turnon_ramp,f
 14918  0DFD  0DA3               	rlf	??_led_turnon_ramp+1,f
 14919  0DFE  00A4               	movwf	??_led_turnon_ramp+2
 14920  0DFF  3023               	movlw	35
 14921  0E00  00A5               	movwf	??_led_turnon_ramp+3
 14922  0E01  0822               	movf	??_led_turnon_ramp,w
 14923  0E02  0724               	addwf	??_led_turnon_ramp+2,w
 14924  0E03  0086               	movwf	6
 14925  0E04  0823               	movf	??_led_turnon_ramp+1,w
 14926  0E05  3D25               	addwfc	??_led_turnon_ramp+3,w
 14927  0E06  0087               	movwf	7
 14928  0E07  3526               	lslf	led_turnon_ramp@i,w
 14929  0E08  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 14930  0E09  0084               	movwf	4
 14931  0E0A  27FA  318C         	fcall	PL6	;call to abstracted procedure
 14932  0E0C  3004               	movlw	4
 14933  0E0D  0AA6               	incf	led_turnon_ramp@i,f
 14934  0E0E  0226               	subwf	led_turnon_ramp@i,w
 14935  0E0F  1803               	btfsc	3,0
 14936  0E10  0008               	return
 14937  0E11  2DF8               	goto	l4081
 14938  0E12                     __end_of_led_turnon_ramp:	
 14939  0E12                     __ptext29:	
 14940 ;; *************** function _eeprom_read_buffer *****************
 14941 ;; Defined at:
 14942 ;;		line 43 in file "src/drv_eeprom.c"
 14943 ;; Parameters:    Size  Location     Type
 14944 ;;  addr            1    wreg     unsigned char 
 14945 ;;  pbuf            2    3[BANK0 ] PTR unsigned char 
 14946 ;;		 -> m_led_para(113), 
 14947 ;;  len             1    5[BANK0 ] unsigned char 
 14948 ;; Auto vars:     Size  Location     Type
 14949 ;;  addr            1    7[BANK0 ] unsigned char 
 14950 ;;  i               1    8[BANK0 ] unsigned char 
 14951 ;; Return value:  Size  Location     Type
 14952 ;;                  1    wreg      void 
 14953 ;; Registers used:
 14954 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14955 ;; Tracked objects:
 14956 ;;		On entry : 1F/0
 14957 ;;		On exit  : 1F/0
 14958 ;;		Unchanged: 0/0
 14959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14960 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14963 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14964 ;;Total ram usage:        6 bytes
 14965 ;; Hardware stack levels used:    1
 14966 ;; Hardware stack levels required when called:   10
 14967 ;; This function calls:
 14968 ;;		_eeprom_read
 14969 ;; This function is called by:
 14970 ;;		_led_para_init
 14971 ;; This function uses a non-reentrant model
 14972 ;;
 14973                           
 14974                           
 14975                           ;psect for function _eeprom_read_buffer
 14976  0E12                     _eeprom_read_buffer:	
 14977                           
 14978                           ;incstack = 0
 14979                           ; Regs used in _eeprom_read_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14980                           ;eeprom_read_buffer@addr stored from wreg
 14981  0E12  00A7               	movwf	eeprom_read_buffer@addr
 14982                           
 14983                           ;drv_eeprom.c: 45: for(uint8_t i = len; i > 0; i--)
 14984  0E13  0825               	movf	eeprom_read_buffer@len,w
 14985  0E14  00A8               	movwf	eeprom_read_buffer@i
 14986  0E15                     l4259:	
 14987  0E15  0828               	movf	eeprom_read_buffer@i,w
 14988  0E16  1903               	btfsc	3,2
 14989  0E17  0008               	return
 14990                           
 14991                           ;drv_eeprom.c: 46: {
 14992                           ;drv_eeprom.c: 47: *pbuf++ = eeprom_read(addr++);
 14993  0E18  0827               	movf	eeprom_read_buffer@addr,w
 14994  0E19  2629  318C         	fcall	_eeprom_read
 14995  0E1B  0020               	movlb	0	; select bank0
 14996  0E1C  00A6               	movwf	??_eeprom_read_buffer
 14997  0E1D  0823               	movf	eeprom_read_buffer@pbuf,w
 14998  0E1E  0086               	movwf	6
 14999  0E1F  0824               	movf	eeprom_read_buffer@pbuf+1,w
 15000  0E20  0087               	movwf	7
 15001  0E21  0826               	movf	??_eeprom_read_buffer,w
 15002  0E22  0081               	movwf	1
 15003  0E23  0AA7               	incf	eeprom_read_buffer@addr,f
 15004  0E24  0AA3               	incf	eeprom_read_buffer@pbuf,f
 15005  0E25  1903               	skipnz
 15006  0E26  0AA4               	incf	eeprom_read_buffer@pbuf+1,f
 15007  0E27  03A8               	decf	eeprom_read_buffer@i,f
 15008  0E28  2E15               	goto	l4259
 15009  0E29                     __end_of_eeprom_read_buffer:	
 15010  0E29                     __ptext30:	
 15011 ;; *************** function _eeprom_read *****************
 15012 ;; Defined at:
 15013 ;;		line 24 in file "src/drv_eeprom.c"
 15014 ;; Parameters:    Size  Location     Type
 15015 ;;  addr            1    wreg     unsigned char 
 15016 ;; Auto vars:     Size  Location     Type
 15017 ;;  addr            1    2[BANK0 ] unsigned char 
 15018 ;; Return value:  Size  Location     Type
 15019 ;;                  1    wreg      unsigned char 
 15020 ;; Registers used:
 15021 ;;		wreg
 15022 ;; Tracked objects:
 15023 ;;		On entry : 1F/0
 15024 ;;		On exit  : 1F/11
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15030 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15031 ;;Total ram usage:        1 bytes
 15032 ;; Hardware stack levels used:    1
 15033 ;; Hardware stack levels required when called:    9
 15034 ;; This function calls:
 15035 ;;		Nothing
 15036 ;; This function is called by:
 15037 ;;		_eeprom_read_buffer
 15038 ;; This function uses a non-reentrant model
 15039 ;;
 15040                           
 15041                           
 15042                           ;psect for function _eeprom_read
 15043  0E29                     _eeprom_read:	
 15044                           
 15045                           ;incstack = 0
 15046                           ; Regs used in _eeprom_read: [wreg]
 15047                           ;eeprom_read@addr stored from wreg
 15048  0E29  00A2               	movwf	eeprom_read@addr
 15049                           
 15050                           ;drv_eeprom.c: 26: NVMADRH = 0x70;
 15051  0E2A  3070               	movlw	112
 15052  0E2B  0031               	movlb	17	; select bank17
 15053  0E2C  0092               	movwf	18	;volatile
 15054                           
 15055                           ;drv_eeprom.c: 27: NVMADRL = addr;
 15056  0E2D  0020               	movlb	0	; select bank0
 15057  0E2E  0822               	movf	eeprom_read@addr,w
 15058  0E2F  0031               	movlb	17	; select bank17
 15059  0E30  0091               	movwf	17	;volatile
 15060                           
 15061                           ;drv_eeprom.c: 28: NVMCON1bits.NVMREGS = 1;
 15062  0E31  1715               	bsf	21,6	;volsfr
 15063                           
 15064                           ;drv_eeprom.c: 29: NVMCON1bits.RD = 1;
 15065  0E32  1415               	bsf	21,0	;volsfr
 15066                           
 15067                           ;drv_eeprom.c: 30: __nop();
 15068  0E33  0000               	nop
 15069                           
 15070                           ;drv_eeprom.c: 31: __nop();
 15071  0E34  0000               	nop
 15072                           
 15073                           ;drv_eeprom.c: 32: return (NVMDATL);
 15074  0E35  0031               	movlb	17	; select bank17
 15075  0E36  0813               	movf	19,w	;volatile
 15076  0E37  0008               	return
 15077  0E38                     __end_of_eeprom_read:	
 15078  0E38                     __ptext23:	
 15079 ;; *************** function _led_turnoff *****************
 15080 ;; Defined at:
 15081 ;;		line 701 in file "src/app_led.c"
 15082 ;; Parameters:    Size  Location     Type
 15083 ;;		None
 15084 ;; Auto vars:     Size  Location     Type
 15085 ;;  i               1    2[BANK0 ] unsigned char 
 15086 ;; Return value:  Size  Location     Type
 15087 ;;                  1    wreg      void 
 15088 ;; Registers used:
 15089 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15090 ;; Tracked objects:
 15091 ;;		On entry : 1E/0
 15092 ;;		On exit  : 1F/0
 15093 ;;		Unchanged: 0/0
 15094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15096 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15098 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15099 ;;Total ram usage:        1 bytes
 15100 ;; Hardware stack levels used:    1
 15101 ;; Hardware stack levels required when called:    9
 15102 ;; This function calls:
 15103 ;;		Nothing
 15104 ;; This function is called by:
 15105 ;;		_led_para_init
 15106 ;;		_led_find_device
 15107 ;; This function uses a non-reentrant model
 15108 ;;
 15109                           
 15110                           
 15111                           ;psect for function _led_turnoff
 15112  0E38                     _led_turnoff:	
 15113                           
 15114                           ;app_led.c: 703: for(uint8_t i = 0; i < 4; i++)
 15115                           
 15116                           ;incstack = 0
 15117                           ; Regs used in _led_turnoff: [wreg+fsr1l+fsr1h+status,2+status,0]
 15118  0E38  0020               	movlb	0	; select bank0
 15119  0E39  01A2               	clrf	led_turnoff@i
 15120  0E3A                     l5917:	
 15121                           
 15122                           ;app_led.c: 704: {
 15123                           ;app_led.c: 705: target_bright[i] = 0;
 15124  0E3A  3522               	lslf	led_turnoff@i,w
 15125  0E3B  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 15126  0E3C  2723  318C         	fcall	PL72	;call to abstracted procedure
 15127                           
 15128                           ;app_led.c: 706: current_bright[i] = 0;
 15129  0E3E  3522               	lslf	led_turnoff@i,w
 15130  0E3F  2790  318C         	fcall	PL114	;call to abstracted procedure
 15131  0E41  0AA2               	incf	led_turnoff@i,f
 15132  0E42  0222               	subwf	led_turnoff@i,w
 15133  0E43  1803               	btfsc	3,0
 15134  0E44  0008               	return
 15135  0E45  2E3A               	goto	l5917
 15136  0E46                     __end_of_led_turnoff:	
 15137  0E46                     __ptext22:	
 15138 ;; *************** function _led_update_day_bright *****************
 15139 ;; Defined at:
 15140 ;;		line 739 in file "src/app_led.c"
 15141 ;; Parameters:    Size  Location     Type
 15142 ;;		None
 15143 ;; Auto vars:     Size  Location     Type
 15144 ;;  i               1    6[BANK0 ] unsigned char 
 15145 ;; Return value:  Size  Location     Type
 15146 ;;                  1    wreg      void 
 15147 ;; Registers used:
 15148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 15149 ;; Tracked objects:
 15150 ;;		On entry : 1E/0
 15151 ;;		On exit  : 1F/0
 15152 ;;		Unchanged: 0/0
 15153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15156 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15157 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15158 ;;Total ram usage:        5 bytes
 15159 ;; Hardware stack levels used:    1
 15160 ;; Hardware stack levels required when called:    9
 15161 ;; This function calls:
 15162 ;;		Nothing
 15163 ;; This function is called by:
 15164 ;;		_led_para_init
 15165 ;; This function uses a non-reentrant model
 15166 ;;
 15167                           
 15168                           
 15169                           ;psect for function _led_update_day_bright
 15170  0E46                     _led_update_day_bright:	
 15171                           
 15172                           ;app_led.c: 741: for(uint8_t i = 0; i < 4; i++)
 15173                           
 15174                           ;incstack = 0
 15175                           ; Regs used in _led_update_day_bright: [wreg-fsr1h+status,2+status,0]
 15176  0E46  0020               	movlb	0	; select bank0
 15177  0E47  01A6               	clrf	led_update_day_bright@i
 15178  0E48                     l4749:	
 15179                           
 15180                           ;app_led.c: 742: {
 15181                           ;app_led.c: 743: current_bright[i] = m_led_para.all_bright;
 15182  0E48  318B  2389  318C   	fcall	PL32	;call to abstracted procedure
 15183  0E4B  3526               	lslf	led_update_day_bright@i,w
 15184  0E4C  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 15185                           
 15186                           ;app_led.c: 744: target_bright[i] = m_led_para.all_bright;
 15187  0E4D  318B  2376  318C   	fcall	PL4	;call to abstracted procedure
 15188  0E50  3142               	addfsr 1,2
 15189  0E51  3526               	lslf	led_update_day_bright@i,w
 15190  0E52  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 15191                           
 15192                           ;app_led.c: 745: m_led_para.ble_para.manual_para.mBright[i] = m_led_para.all_bright;
 15193  0E53  318B  2376  318C   	fcall	PL4	;call to abstracted procedure
 15194  0E56  3142               	addfsr 1,2
 15195  0E57  0826               	movf	led_update_day_bright@i,w
 15196  0E58  00A2               	movwf	??_led_update_day_bright
 15197  0E59  3088               	movlw	136
 15198  0E5A  01A3               	clrf	??_led_update_day_bright+1
 15199  0E5B  35A2               	lslf	??_led_update_day_bright,f
 15200  0E5C  0DA3               	rlf	??_led_update_day_bright+1,f
 15201  0E5D  00A4               	movwf	??_led_update_day_bright+2
 15202  0E5E  3023               	movlw	35
 15203  0E5F  00A5               	movwf	??_led_update_day_bright+3
 15204  0E60  0822               	movf	??_led_update_day_bright,w
 15205  0E61  0724               	addwf	??_led_update_day_bright+2,w
 15206  0E62  0084               	movwf	4
 15207  0E63  0823               	movf	??_led_update_day_bright+1,w
 15208  0E64  3D25               	addwfc	??_led_update_day_bright+3,w
 15209  0E65  318B  23AF  318C   	fcall	PL88	;call to abstracted procedure
 15210  0E68  3004               	movlw	4
 15211  0E69  0AA6               	incf	led_update_day_bright@i,f
 15212  0E6A  0226               	subwf	led_update_day_bright@i,w
 15213  0E6B  1803               	btfsc	3,0
 15214  0E6C  0008               	return
 15215  0E6D  2E48               	goto	l4749
 15216  0E6E                     __end_of_led_update_day_bright:	
 15217  0E6E                     __ptext21:	
 15218 ;; *************** function _led_update_night_bright *****************
 15219 ;; Defined at:
 15220 ;;		line 761 in file "src/app_led.c"
 15221 ;; Parameters:    Size  Location     Type
 15222 ;;		None
 15223 ;; Auto vars:     Size  Location     Type
 15224 ;;  i               1    6[BANK0 ] unsigned char 
 15225 ;; Return value:  Size  Location     Type
 15226 ;;                  1    wreg      void 
 15227 ;; Registers used:
 15228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 15229 ;; Tracked objects:
 15230 ;;		On entry : 1E/0
 15231 ;;		On exit  : 1F/0
 15232 ;;		Unchanged: 0/0
 15233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15235 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15236 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15237 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15238 ;;Total ram usage:        5 bytes
 15239 ;; Hardware stack levels used:    1
 15240 ;; Hardware stack levels required when called:    9
 15241 ;; This function calls:
 15242 ;;		Nothing
 15243 ;; This function is called by:
 15244 ;;		_led_para_init
 15245 ;; This function uses a non-reentrant model
 15246 ;;
 15247                           
 15248                           
 15249                           ;psect for function _led_update_night_bright
 15250  0E6E                     _led_update_night_bright:	
 15251                           
 15252                           ;app_led.c: 763: for(uint8_t i = 0; i < 4; i++)
 15253                           
 15254                           ;incstack = 0
 15255                           ; Regs used in _led_update_night_bright: [wreg-fsr1h+status,2+status,0]
 15256  0E6E  0020               	movlb	0	; select bank0
 15257  0E6F  01A6               	clrf	led_update_night_bright@i
 15258  0E70                     l4763:	
 15259                           
 15260                           ;app_led.c: 764: {
 15261                           ;app_led.c: 765: if(i == 3)
 15262  0E70  3003               	movlw	3
 15263  0E71  0626               	xorwf	led_update_night_bright@i,w
 15264  0E72  1D03               	btfss	3,2
 15265  0E73  2E89               	goto	l4767
 15266                           
 15267                           ;app_led.c: 766: {
 15268                           ;app_led.c: 767: current_bright[i] = m_led_para.blue_bright;
 15269  0E74  26D9               	fcall	PL24	;call to abstracted procedure
 15270  0E75  3526               	lslf	led_update_night_bright@i,w
 15271  0E76  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 15272                           
 15273                           ;app_led.c: 768: target_bright[i] = m_led_para.blue_bright;
 15274  0E77  318B  2376  318C   	fcall	PL4	;call to abstracted procedure
 15275  0E7A  3144               	addfsr 1,4
 15276  0E7B  3526               	lslf	led_update_night_bright@i,w
 15277  0E7C  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 15278                           
 15279                           ;app_led.c: 769: m_led_para.ble_para.manual_para.mBright[i] = m_led_para.blue_bright;
 15280  0E7D  318B  2376  318C   	fcall	PL4	;call to abstracted procedure
 15281  0E80  3144               	addfsr 1,4
 15282  0E81  270B               	fcall	PL60	;call to abstracted procedure
 15283  0E82  0084               	movwf	4
 15284  0E83  0823               	movf	??_led_update_night_bright+1,w
 15285  0E84  3D25               	addwfc	??_led_update_night_bright+3,w
 15286  0E85  318B  23AF  318C   	fcall	PL88	;call to abstracted procedure
 15287                           
 15288                           ;app_led.c: 770: }
 15289  0E88  2E97               	goto	l4769
 15290  0E89                     l4767:	
 15291                           
 15292                           ;app_led.c: 771: else
 15293                           ;app_led.c: 772: {
 15294                           ;app_led.c: 773: current_bright[i] = 0;
 15295  0E89  3526               	lslf	led_update_night_bright@i,w
 15296  0E8A  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 15297  0E8B  2723               	fcall	PL72	;call to abstracted procedure
 15298                           
 15299                           ;app_led.c: 774: target_bright[i] = 0;
 15300  0E8C  3526               	lslf	led_update_night_bright@i,w
 15301  0E8D  318B  23C8  318C   	fcall	PL124	;call to abstracted procedure
 15302                           
 15303                           ;app_led.c: 775: m_led_para.ble_para.manual_para.mBright[i] = 0;
 15304  0E90  270B               	fcall	PL60	;call to abstracted procedure
 15305  0E91  0086               	movwf	6
 15306  0E92  0823               	movf	??_led_update_night_bright+1,w
 15307  0E93  3D25               	addwfc	??_led_update_night_bright+3,w
 15308  0E94  318B  23E2  318C   	fcall	PL154	;call to abstracted procedure
 15309  0E97                     l4769:	
 15310  0E97  3004               	movlw	4
 15311  0E98  0AA6               	incf	led_update_night_bright@i,f
 15312  0E99  0226               	subwf	led_update_night_bright@i,w
 15313  0E9A  1803               	btfsc	3,0
 15314  0E9B  0008               	return
 15315  0E9C  2E70               	goto	l4763
 15316  0E9D                     __end_of_led_update_night_bright:	
 15317  0E9D                     __ptext48:	
 15318 ;; *************** function _led_turnoff_ramp *****************
 15319 ;; Defined at:
 15320 ;;		line 684 in file "src/app_led.c"
 15321 ;; Parameters:    Size  Location     Type
 15322 ;;		None
 15323 ;; Auto vars:     Size  Location     Type
 15324 ;;  i               1    2[BANK0 ] unsigned char 
 15325 ;; Return value:  Size  Location     Type
 15326 ;;                  1    wreg      void 
 15327 ;; Registers used:
 15328 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15329 ;; Tracked objects:
 15330 ;;		On entry : 1E/0
 15331 ;;		On exit  : 1F/0
 15332 ;;		Unchanged: 0/0
 15333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15335 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15337 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15338 ;;Total ram usage:        1 bytes
 15339 ;; Hardware stack levels used:    1
 15340 ;; Hardware stack levels required when called:    9
 15341 ;; This function calls:
 15342 ;;		Nothing
 15343 ;; This function is called by:
 15344 ;;		_led_para_init
 15345 ;;		_led_set_mode
 15346 ;;		_led_set_power
 15347 ;;		_led_set_time
 15348 ;; This function uses a non-reentrant model
 15349 ;;
 15350                           
 15351                           
 15352                           ;psect for function _led_turnoff_ramp
 15353  0E9D                     _led_turnoff_ramp:	
 15354                           
 15355                           ;app_led.c: 686: for(uint8_t i = 0; i < 4; i++)
 15356                           
 15357                           ;incstack = 0
 15358                           ; Regs used in _led_turnoff_ramp: [wreg+fsr1l+fsr1h+status,2+status,0]
 15359  0E9D  0020               	movlb	0	; select bank0
 15360  0E9E  01A2               	clrf	led_turnoff_ramp@i
 15361  0E9F                     l4093:	
 15362                           
 15363                           ;app_led.c: 687: {
 15364                           ;app_led.c: 688: target_bright[i] = 0;
 15365  0E9F  3522               	lslf	led_turnoff_ramp@i,w
 15366  0EA0  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 15367  0EA1  2723  318C         	fcall	PL72	;call to abstracted procedure
 15368  0EA3  3004               	movlw	4
 15369  0EA4  0AA2               	incf	led_turnoff_ramp@i,f
 15370  0EA5  0222               	subwf	led_turnoff_ramp@i,w
 15371  0EA6  1803               	btfsc	3,0
 15372  0EA7  0008               	return
 15373  0EA8  2E9F               	goto	l4093
 15374  0EA9                     __end_of_led_turnoff_ramp:	
 15375  0EA9                     __ptext42:	
 15376 ;; *************** function _led_indicate_ble *****************
 15377 ;; Defined at:
 15378 ;;		line 732 in file "src/app_led.c"
 15379 ;; Parameters:    Size  Location     Type
 15380 ;;		None
 15381 ;; Auto vars:     Size  Location     Type
 15382 ;;		None
 15383 ;; Return value:  Size  Location     Type
 15384 ;;                  1    wreg      void 
 15385 ;; Registers used:
 15386 ;;		None
 15387 ;; Tracked objects:
 15388 ;;		On entry : 1E/0
 15389 ;;		On exit  : 1F/2
 15390 ;;		Unchanged: 0/0
 15391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15396 ;;Total ram usage:        0 bytes
 15397 ;; Hardware stack levels used:    1
 15398 ;; Hardware stack levels required when called:    9
 15399 ;; This function calls:
 15400 ;;		Nothing
 15401 ;; This function is called by:
 15402 ;;		_led_para_init
 15403 ;;		_led_set_time
 15404 ;; This function uses a non-reentrant model
 15405 ;;
 15406                           
 15407                           
 15408                           ;psect for function _led_indicate_ble
 15409  0EA9                     _led_indicate_ble:	
 15410                           
 15411                           ;app_led.c: 734: (LATBbits.LATB6 = 1);
 15412                           
 15413                           ;app_led.c: 735: (LATAbits.LATA1 = 0);
 15414                           
 15415                           ;app_led.c: 736: (LATBbits.LATB7 = 1);
 15416                           
 15417                           ;incstack = 0
 15418                           ; Regs used in _led_indicate_ble: []
 15419  0EA9  318B  2BCE         	ljmp	PL126	;call to abstracted procedure
 15420  0EAB                     __end_of_led_indicate_ble:	
 15421  0EAB                     __ptext28:	
 15422 ;; *************** function _led_indicate_day *****************
 15423 ;; Defined at:
 15424 ;;		line 718 in file "src/app_led.c"
 15425 ;; Parameters:    Size  Location     Type
 15426 ;;		None
 15427 ;; Auto vars:     Size  Location     Type
 15428 ;;		None
 15429 ;; Return value:  Size  Location     Type
 15430 ;;                  1    wreg      void 
 15431 ;; Registers used:
 15432 ;;		None
 15433 ;; Tracked objects:
 15434 ;;		On entry : 1F/0
 15435 ;;		On exit  : 1F/2
 15436 ;;		Unchanged: 0/0
 15437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15442 ;;Total ram usage:        0 bytes
 15443 ;; Hardware stack levels used:    1
 15444 ;; Hardware stack levels required when called:    9
 15445 ;; This function calls:
 15446 ;;		Nothing
 15447 ;; This function is called by:
 15448 ;;		_led_para_init
 15449 ;; This function uses a non-reentrant model
 15450 ;;
 15451                           
 15452                           
 15453                           ;psect for function _led_indicate_day
 15454  0EAB                     _led_indicate_day:	
 15455                           
 15456                           ;app_led.c: 720: (LATBbits.LATB6 = 0);
 15457                           
 15458                           ;app_led.c: 721: (LATAbits.LATA1 = 0);
 15459                           
 15460                           ;app_led.c: 722: (LATBbits.LATB7 = 0);
 15461                           
 15462                           ;incstack = 0
 15463                           ; Regs used in _led_indicate_day: []
 15464  0EAB  318B  2BDD         	ljmp	PL144	;call to abstracted procedure
 15465  0EAD                     __end_of_led_indicate_day:	
 15466  0EAD                     __ptext27:	
 15467 ;; *************** function _led_indicate_night *****************
 15468 ;; Defined at:
 15469 ;;		line 725 in file "src/app_led.c"
 15470 ;; Parameters:    Size  Location     Type
 15471 ;;		None
 15472 ;; Auto vars:     Size  Location     Type
 15473 ;;		None
 15474 ;; Return value:  Size  Location     Type
 15475 ;;                  1    wreg      void 
 15476 ;; Registers used:
 15477 ;;		None
 15478 ;; Tracked objects:
 15479 ;;		On entry : 1F/0
 15480 ;;		On exit  : 1F/2
 15481 ;;		Unchanged: 0/0
 15482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15487 ;;Total ram usage:        0 bytes
 15488 ;; Hardware stack levels used:    1
 15489 ;; Hardware stack levels required when called:    9
 15490 ;; This function calls:
 15491 ;;		Nothing
 15492 ;; This function is called by:
 15493 ;;		_led_para_init
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           
 15498                           ;psect for function _led_indicate_night
 15499  0EAD                     _led_indicate_night:	
 15500                           
 15501                           ;app_led.c: 727: (LATBbits.LATB6 = 1);
 15502                           
 15503                           ;app_led.c: 728: (LATAbits.LATA1 = 1);
 15504                           
 15505                           ;app_led.c: 729: (LATBbits.LATB7 = 0);
 15506                           
 15507                           ;incstack = 0
 15508                           ; Regs used in _led_indicate_night: []
 15509  0EAD  318B  2BC3         	ljmp	PL122	;call to abstracted procedure
 15510  0EAF                     __end_of_led_indicate_night:	
 15511  0EAF                     __ptext26:	
 15512 ;; *************** function _led_indicate_off *****************
 15513 ;; Defined at:
 15514 ;;		line 711 in file "src/app_led.c"
 15515 ;; Parameters:    Size  Location     Type
 15516 ;;		None
 15517 ;; Auto vars:     Size  Location     Type
 15518 ;;		None
 15519 ;; Return value:  Size  Location     Type
 15520 ;;                  1    wreg      void 
 15521 ;; Registers used:
 15522 ;;		None
 15523 ;; Tracked objects:
 15524 ;;		On entry : 1F/0
 15525 ;;		On exit  : 1F/2
 15526 ;;		Unchanged: 0/0
 15527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15532 ;;Total ram usage:        0 bytes
 15533 ;; Hardware stack levels used:    1
 15534 ;; Hardware stack levels required when called:    9
 15535 ;; This function calls:
 15536 ;;		Nothing
 15537 ;; This function is called by:
 15538 ;;		_led_para_init
 15539 ;; This function uses a non-reentrant model
 15540 ;;
 15541                           
 15542                           
 15543                           ;psect for function _led_indicate_off
 15544  0EAF                     _led_indicate_off:	
 15545                           
 15546                           ;app_led.c: 713: (LATBbits.LATB6 = 0);
 15547                           
 15548                           ;app_led.c: 714: (LATAbits.LATA1 = 1);
 15549                           
 15550                           ;app_led.c: 715: (LATBbits.LATB7 = 1);
 15551                           
 15552                           ;incstack = 0
 15553                           ; Regs used in _led_indicate_off: []
 15554  0EAF  2F96               	ljmp	PL142	;call to abstracted procedure
 15555  0EB0                     __end_of_led_indicate_off:	
 15556  0EB0                     PL10:	
 15557  0EB0  307F               	movlw	127
 15558  0EB1  0086               	movwf	6
 15559  0EB2  3023               	movlw	35
 15560  0EB3  0087               	movwf	7
 15561  0EB4  3146               	addfsr 1,6
 15562  0EB5  0801               	movf	1,w
 15563  0EB6  3903               	andlw	3
 15564  0EB7  0008               	return
 15565  0EB8                     __end_ofPL10:	
 15566  0EB8                     PL20:	
 15567  0EB8  0843               	movf	led_para_init@i,w
 15568  0EB9  00B8               	movwf	??_led_para_init
 15569  0EBA  01B9               	clrf	??_led_para_init+1
 15570  0EBB  0842               	movf	led_para_init@j,w
 15571  0EBC  00BA               	movwf	??_led_para_init+2
 15572  0EBD  3090               	movlw	144
 15573  0EBE  01BB               	clrf	??_led_para_init+3
 15574  0EBF  35BA               	lslf	??_led_para_init+2,f
 15575  0EC0  0DBB               	rlf	??_led_para_init+3,f
 15576  0EC1  35BA               	lslf	??_led_para_init+2,f
 15577  0EC2  0DBB               	rlf	??_led_para_init+3,f
 15578  0EC3  00BC               	movwf	??_led_para_init+4
 15579  0EC4  3023               	movlw	35
 15580  0EC5  00BD               	movwf	??_led_para_init+5
 15581  0EC6  083A               	movf	??_led_para_init+2,w
 15582  0EC7  073C               	addwf	??_led_para_init+4,w
 15583  0EC8  00BE               	movwf	??_led_para_init+6
 15584  0EC9  083B               	movf	??_led_para_init+3,w
 15585  0ECA  3D3D               	addwfc	??_led_para_init+5,w
 15586  0ECB  00BF               	movwf	??_led_para_init+7
 15587  0ECC  0838               	movf	??_led_para_init,w
 15588  0ECD  073E               	addwf	??_led_para_init+6,w
 15589  0ECE  0008               	return
 15590  0ECF                     __end_ofPL20:	
 15591  0ECF                     PL22:	
 15592  0ECF  00B8               	movwf	??_led_para_init
 15593  0ED0  3023               	movlw	35
 15594  0ED1  00B9               	movwf	??_led_para_init+1
 15595  0ED2  0822               	movf	?___wmul,w
 15596  0ED3  0738               	addwf	??_led_para_init,w
 15597  0ED4  0086               	movwf	6
 15598  0ED5  0823               	movf	?___wmul+1,w
 15599  0ED6  3D39               	addwfc	??_led_para_init+1,w
 15600  0ED7  0087               	movwf	7
 15601  0ED8  0008               	return
 15602  0ED9                     __end_ofPL22:	
 15603  0ED9                     PL24:	
 15604  0ED9  307F               	movlw	127
 15605  0EDA  0086               	movwf	6
 15606  0EDB  3023               	movlw	35
 15607  0EDC  0087               	movwf	7
 15608  0EDD  3144               	addfsr 1,4
 15609  0EDE  0008               	return
 15610  0EDF                     __end_ofPL24:	
 15611  0EDF                     PL40:	
 15612  0EDF  0843               	movf	led_para_init@i,w
 15613  0EE0  00A2               	movwf	___wmul@multiplier
 15614  0EE1  3006               	movlw	6
 15615  0EE2  01A3               	clrf	___wmul@multiplier+1
 15616  0EE3  00A4               	movwf	___wmul@multiplicand
 15617  0EE4  01A5               	clrf	___wmul@multiplicand+1
 15618  0EE5  0008               	return
 15619  0EE6                     __end_ofPL40:	
 15620  0EE6                     PL48:	
 15621  0EE6  3023               	movlw	35
 15622  0EE7  00BB               	movwf	??_led_para_init+3
 15623  0EE8  0838               	movf	??_led_para_init,w
 15624  0EE9  073A               	addwf	??_led_para_init+2,w
 15625  0EEA  00BC               	movwf	??_led_para_init+4
 15626  0EEB  0839               	movf	??_led_para_init+1,w
 15627  0EEC  3D3B               	addwfc	??_led_para_init+3,w
 15628  0EED  00BD               	movwf	??_led_para_init+5
 15629  0EEE  083C               	movf	??_led_para_init+4,w
 15630  0EEF  0086               	movwf	6
 15631  0EF0  083D               	movf	??_led_para_init+5,w
 15632  0EF1  0087               	movwf	7
 15633  0EF2  3064               	movlw	100
 15634  0EF3  0081               	movwf	1
 15635  0EF4  0008               	return
 15636  0EF5                     __end_ofPL48:	
 15637  0EF5                     PL52:	
 15638  0EF5  3023               	movlw	35
 15639  0EF6  00BB               	movwf	??_led_para_init+3
 15640  0EF7  0838               	movf	??_led_para_init,w
 15641  0EF8  073A               	addwf	??_led_para_init+2,w
 15642  0EF9  0086               	movwf	6
 15643  0EFA  0839               	movf	??_led_para_init+1,w
 15644  0EFB  3D3B               	addwfc	??_led_para_init+3,w
 15645  0EFC  0087               	movwf	7
 15646  0EFD  0008               	return
 15647  0EFE                     __end_ofPL52:	
 15648  0EFE                     PL56:	
 15649  0EFE  30B6               	movlw	182
 15650  0EFF  00BA               	movwf	??_led_para_init+2
 15651  0F00  3023               	movlw	35
 15652  0F01  00BB               	movwf	??_led_para_init+3
 15653  0F02  0822               	movf	?___wmul,w
 15654  0F03  073A               	addwf	??_led_para_init+2,w
 15655  0F04  00BC               	movwf	??_led_para_init+4
 15656  0F05  0823               	movf	?___wmul+1,w
 15657  0F06  3D3B               	addwfc	??_led_para_init+3,w
 15658  0F07  00BD               	movwf	??_led_para_init+5
 15659  0F08  0838               	movf	??_led_para_init,w
 15660  0F09  073C               	addwf	??_led_para_init+4,w
 15661  0F0A  0008               	return
 15662  0F0B                     __end_ofPL56:	
 15663  0F0B                     PL60:	
 15664  0F0B  0826               	movf	led_update_night_bright@i,w
 15665  0F0C  00A2               	movwf	??_led_update_night_bright
 15666  0F0D  3088               	movlw	136
 15667  0F0E  01A3               	clrf	??_led_update_night_bright+1
 15668  0F0F  35A2               	lslf	??_led_update_night_bright,f
 15669  0F10  0DA3               	rlf	??_led_update_night_bright+1,f
 15670  0F11  00A4               	movwf	??_led_update_night_bright+2
 15671  0F12  3023               	movlw	35
 15672  0F13  00A5               	movwf	??_led_update_night_bright+3
 15673  0F14  0822               	movf	??_led_update_night_bright,w
 15674  0F15  0724               	addwf	??_led_update_night_bright+2,w
 15675  0F16  0008               	return
 15676  0F17                     __end_ofPL60:	
 15677  0F17                     PL68:	
 15678  0F17  0086               	movwf	6
 15679  0F18  3023               	movlw	35
 15680  0F19  0087               	movwf	7
 15681  0F1A  3018               	movlw	24
 15682  0F1B  0201               	subwf	1,w
 15683  0F1C  0008               	return
 15684  0F1D                     __end_ofPL68:	
 15685  0F1D                     PL70:	
 15686  0F1D  0086               	movwf	6
 15687  0F1E  3023               	movlw	35
 15688  0F1F  0087               	movwf	7
 15689  0F20  303C               	movlw	60
 15690  0F21  0201               	subwf	1,w
 15691  0F22  0008               	return
 15692  0F23                     __end_ofPL70:	
 15693  0F23                     PL72:	
 15694  0F23  0086               	movwf	6
 15695  0F24  3000               	movlw	0
 15696  0F25  0187               	clrf	7
 15697  0F26  3FC0               	movwi [0]fsr1
 15698  0F27  3FC1               	movwi [1]fsr1
 15699  0F28  0008               	return
 15700  0F29                     __end_ofPL72:	
 15701  0F29                     PL84:	
 15702  0F29  30E8               	movlw	232
 15703  0F2A  00B8               	movwf	??_led_para_init
 15704  0F2B  3003               	movlw	3
 15705  0F2C  00B9               	movwf	??_led_para_init+1
 15706  0F2D  0008               	return
 15707  0F2E                     __end_ofPL84:	
 15708  0F2E                     PL96:	
 15709  0F2E  3F40               	moviw [0]fsr1
 15710  0F2F  00B8               	movwf	??_led_para_init
 15711  0F30  3F41               	moviw [1]fsr1
 15712  0F31  00B9               	movwf	??_led_para_init+1
 15713  0F32  3003               	movlw	3
 15714  0F33  0239               	subwf	??_led_para_init+1,w
 15715  0F34  34E9               	retlw	233
 15716  0F35                     __end_ofPL96:	
 15717  0F35                     PL102:	
 15718  0F35  3F40               	moviw [0]fsr1
 15719  0F36  00B8               	movwf	??_led_para_init
 15720  0F37  3F41               	moviw [1]fsr1
 15721  0F38  00B9               	movwf	??_led_para_init+1
 15722  0F39  3000               	movlw	0
 15723  0F3A  0239               	subwf	??_led_para_init+1,w
 15724  0F3B  340A               	retlw	10
 15725  0F3C                     __end_ofPL102:	
 15726  0F3C                     PL104:	
 15727  0F3C  300A               	movlw	10
 15728  0F3D  00B8               	movwf	??_led_para_init
 15729  0F3E  307F               	movlw	127
 15730  0F3F  01B9               	clrf	??_led_para_init+1
 15731  0F40  0086               	movwf	6
 15732  0F41  3023               	movlw	35
 15733  0F42  0087               	movwf	7
 15734  0F43  0008               	return
 15735  0F44                     __end_ofPL104:	
 15736  0F44                     PL112:	
 15737  0F44  30B3               	movlw	179
 15738  0F45  0086               	movwf	6
 15739  0F46  3023               	movlw	35
 15740  0F47  0087               	movwf	7
 15741  0F48  3004               	movlw	4
 15742  0F49  0201               	subwf	1,w
 15743  0F4A  0008               	return
 15744  0F4B                     __end_ofPL112:	
 15745  0F4B                     PL118:	
 15746  0F4B  307F               	movlw	127
 15747  0F4C  0086               	movwf	6
 15748  0F4D  3023               	movlw	35
 15749  0F4E  0087               	movwf	7
 15750  0F4F  0008               	return
 15751  0F50                     __end_ofPL118:	
 15752  0F50                     PL120:	
 15753  0F50  0838               	movf	??_led_para_init,w
 15754  0F51  3FC0               	movwi [0]fsr1
 15755  0F52  0839               	movf	??_led_para_init+1,w
 15756  0F53  3FC1               	movwi [1]fsr1
 15757  0F54  0008               	return
 15758  0F55                     __end_ofPL120:	
 15759  0F55                     PL134:	
 15760  0F55  307F               	movlw	127
 15761  0F56  0086               	movwf	6
 15762  0F57  3023               	movlw	35
 15763  0F58  0087               	movwf	7
 15764  0F59  3455               	retlw	85
 15765  0F5A                     __end_ofPL134:	
 15766  0F5A                     __ptext94:	
 15767 ;; *************** function _led_state_ble_cb *****************
 15768 ;; Defined at:
 15769 ;;		line 975 in file "src/app_led.c"
 15770 ;; Parameters:    Size  Location     Type
 15771 ;;  key             1    9[COMMON] unsigned char 
 15772 ;;  state           1   10[COMMON] enum E8242
 15773 ;; Auto vars:     Size  Location     Type
 15774 ;;		None
 15775 ;; Return value:  Size  Location     Type
 15776 ;;                  1    wreg      void 
 15777 ;; Registers used:
 15778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15779 ;; Tracked objects:
 15780 ;;		On entry : 1F/1
 15781 ;;		On exit  : 1E/0
 15782 ;;		Unchanged: 0/0
 15783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15788 ;;Total ram usage:        2 bytes
 15789 ;; Hardware stack levels used:    1
 15790 ;; Hardware stack levels required when called:    2
 15791 ;; This function calls:
 15792 ;;		_led_state_ble_cont_press_cb
 15793 ;;		_led_state_ble_long_press_cb
 15794 ;;		_led_state_ble_release_cb
 15795 ;;		_led_state_ble_short_press_cb
 15796 ;; This function is called by:
 15797 ;;		_led_touch_cb
 15798 ;; This function uses a non-reentrant model
 15799 ;;
 15800                           
 15801                           
 15802                           ;psect for function _led_state_ble_cb
 15803  0F5A                     _led_state_ble_cb:	
 15804                           
 15805                           ;app_led.c: 977: if(key == 0x01)
 15806                           
 15807                           ;incstack = 0
 15808                           ; Regs used in _led_state_ble_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15809  0F5A  0B79               	decfsz	led_state_ble_cb@key,w
 15810  0F5B  0008               	return
 15811  0F5C  087A               	movf	led_state_ble_cb@state,w
 15812                           
 15813                           ; Switch size 1, requested type "space"
 15814                           ; Number of cases is 4, Range of values is 0 to 3
 15815                           ; switch strategies available:
 15816                           ; Name         Instructions Cycles
 15817                           ; simple_byte           13     7 (average)
 15818                           ; direct_byte           14     6 (fixed)
 15819                           ; jumptable            260     6 (fixed)
 15820                           ;	Chosen strategy is simple_byte
 15821  0F5D  3A00               	xorlw	0	; case 0
 15822  0F5E  1903               	skipnz
 15823  0F5F  2F6A               	goto	i1l3923
 15824  0F60  3A01               	xorlw	1	; case 1
 15825  0F61  1903               	skipnz
 15826  0F62  2F6B               	goto	i1l3925
 15827  0F63  3A03               	xorlw	3	; case 2
 15828  0F64  1903               	skipnz
 15829  0F65  2F6C               	goto	i1l3927
 15830  0F66  3A01               	xorlw	1	; case 3
 15831  0F67  1903               	skipnz
 15832  0F68  2F6D               	goto	i1l3929
 15833  0F69  2F6E               	goto	i1l866
 15834  0F6A                     i1l3923:	
 15835                           
 15836                           ;app_led.c: 982: led_state_ble_short_press_cb();
 15837  0F6A  2F72               	ljmp	i1l3863
 15838  0F6B                     i1l3925:	
 15839                           ;app_led.c: 983: break;
 15840                           
 15841                           
 15842                           ;app_led.c: 985: led_state_ble_long_press_cb();
 15843  0F6B  2F70               	ljmp	i1l849
 15844  0F6C                     i1l3927:	
 15845                           ;app_led.c: 986: break;
 15846                           
 15847                           
 15848                           ;app_led.c: 988: led_state_ble_cont_press_cb();
 15849  0F6C  2F6F               	ljmp	i1l852
 15850  0F6D                     i1l3929:	
 15851                           ;app_led.c: 989: break;
 15852                           
 15853                           
 15854                           ;app_led.c: 991: led_state_ble_release_cb();
 15855  0F6D  2F71               	ljmp	i1l855
 15856  0F6E                     i1l866:	
 15857  0F6E  0008               	return
 15858  0F6F                     __end_of_led_state_ble_cb:	
 15859  0F6F                     __ptext125:	
 15860 ;; *************** function _led_state_ble_cont_press_cb *****************
 15861 ;; Defined at:
 15862 ;;		line 971 in file "src/app_led.c"
 15863 ;; Parameters:    Size  Location     Type
 15864 ;;		None
 15865 ;; Auto vars:     Size  Location     Type
 15866 ;;		None
 15867 ;; Return value:  Size  Location     Type
 15868 ;;                  1    wreg      void 
 15869 ;; Registers used:
 15870 ;;		None
 15871 ;; Tracked objects:
 15872 ;;		On entry : 1F/1
 15873 ;;		On exit  : 1F/1
 15874 ;;		Unchanged: 1F/0
 15875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15880 ;;Total ram usage:        0 bytes
 15881 ;; Hardware stack levels used:    1
 15882 ;; This function calls:
 15883 ;;		Nothing
 15884 ;; This function is called by:
 15885 ;;		_led_state_ble_cb
 15886 ;; This function uses a non-reentrant model
 15887 ;;
 15888                           
 15889                           
 15890                           ;psect for function _led_state_ble_cont_press_cb
 15891  0F6F                     _led_state_ble_cont_press_cb:	
 15892  0F6F                     i1l852:	
 15893                           ;incstack = 0
 15894                           ; Regs used in _led_state_ble_cont_press_cb: []
 15895                           
 15896  0F6F  0008               	return
 15897  0F70                     __end_of_led_state_ble_cont_press_cb:	
 15898  0F70                     __ptext124:	
 15899 ;; *************** function _led_state_ble_long_press_cb *****************
 15900 ;; Defined at:
 15901 ;;		line 969 in file "src/app_led.c"
 15902 ;; Parameters:    Size  Location     Type
 15903 ;;		None
 15904 ;; Auto vars:     Size  Location     Type
 15905 ;;		None
 15906 ;; Return value:  Size  Location     Type
 15907 ;;                  1    wreg      void 
 15908 ;; Registers used:
 15909 ;;		None
 15910 ;; Tracked objects:
 15911 ;;		On entry : 1F/1
 15912 ;;		On exit  : 1F/1
 15913 ;;		Unchanged: 1F/0
 15914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15919 ;;Total ram usage:        0 bytes
 15920 ;; Hardware stack levels used:    1
 15921 ;; This function calls:
 15922 ;;		Nothing
 15923 ;; This function is called by:
 15924 ;;		_led_state_ble_cb
 15925 ;; This function uses a non-reentrant model
 15926 ;;
 15927                           
 15928                           
 15929                           ;psect for function _led_state_ble_long_press_cb
 15930  0F70                     _led_state_ble_long_press_cb:	
 15931  0F70                     i1l849:	
 15932                           ;incstack = 0
 15933                           ; Regs used in _led_state_ble_long_press_cb: []
 15934                           
 15935  0F70  0008               	return
 15936  0F71                     __end_of_led_state_ble_long_press_cb:	
 15937  0F71                     __ptext123:	
 15938 ;; *************** function _led_state_ble_release_cb *****************
 15939 ;; Defined at:
 15940 ;;		line 973 in file "src/app_led.c"
 15941 ;; Parameters:    Size  Location     Type
 15942 ;;		None
 15943 ;; Auto vars:     Size  Location     Type
 15944 ;;		None
 15945 ;; Return value:  Size  Location     Type
 15946 ;;                  1    wreg      void 
 15947 ;; Registers used:
 15948 ;;		None
 15949 ;; Tracked objects:
 15950 ;;		On entry : 1F/1
 15951 ;;		On exit  : 1F/1
 15952 ;;		Unchanged: 1F/0
 15953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15958 ;;Total ram usage:        0 bytes
 15959 ;; Hardware stack levels used:    1
 15960 ;; This function calls:
 15961 ;;		Nothing
 15962 ;; This function is called by:
 15963 ;;		_led_state_ble_cb
 15964 ;; This function uses a non-reentrant model
 15965 ;;
 15966                           
 15967                           
 15968                           ;psect for function _led_state_ble_release_cb
 15969  0F71                     _led_state_ble_release_cb:	
 15970  0F71                     i1l855:	
 15971                           ;incstack = 0
 15972                           ; Regs used in _led_state_ble_release_cb: []
 15973                           
 15974  0F71  0008               	return
 15975  0F72                     __end_of_led_state_ble_release_cb:	
 15976  0F72                     __ptext119:	
 15977 ;; *************** function _led_state_ble_short_press_cb *****************
 15978 ;; Defined at:
 15979 ;;		line 961 in file "src/app_led.c"
 15980 ;; Parameters:    Size  Location     Type
 15981 ;;		None
 15982 ;; Auto vars:     Size  Location     Type
 15983 ;;		None
 15984 ;; Return value:  Size  Location     Type
 15985 ;;                  1    wreg      void 
 15986 ;; Registers used:
 15987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15988 ;; Tracked objects:
 15989 ;;		On entry : 1F/1
 15990 ;;		On exit  : 1F/0
 15991 ;;		Unchanged: 0/0
 15992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15996 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15997 ;;Total ram usage:        1 bytes
 15998 ;; Hardware stack levels used:    1
 15999 ;; Hardware stack levels required when called:    1
 16000 ;; This function calls:
 16001 ;;		i1_led_indicate_off
 16002 ;;		i1_led_prepare_to_save
 16003 ;;		i1_led_turnoff
 16004 ;; This function is called by:
 16005 ;;		_led_state_ble_cb
 16006 ;; This function uses a non-reentrant model
 16007 ;;
 16008                           
 16009                           
 16010                           ;psect for function _led_state_ble_short_press_cb
 16011  0F72                     _led_state_ble_short_press_cb:	
 16012  0F72                     i1l3863:	
 16013                           ;incstack = 0
 16014                           ; Regs used in _led_state_ble_short_press_cb: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 16015                           
 16016                           
 16017                           ;app_led.c: 963: m_led_para.mState++;
 16018  0F72  318B  2381  318C   	fcall	PL14	;call to abstracted procedure
 16019  0F75  00F1               	movwf	??_led_state_ble_short_press_cb
 16020  0F76  0AF1               	incf	??_led_state_ble_short_press_cb,f
 16021  0F77  0801               	movf	1,w
 16022  0F78  0671               	xorwf	??_led_state_ble_short_press_cb,w
 16023  0F79  39FC               	andlw	-4
 16024  0F7A  0671               	xorwf	??_led_state_ble_short_press_cb,w
 16025  0F7B  0081               	movwf	1
 16026                           
 16027                           ;app_led.c: 964: led_turnoff();
 16028  0F7C  2783  318C         	fcall	i1_led_turnoff
 16029                           
 16030                           ;app_led.c: 965: led_indicate_off();
 16031  0F7E  2782               	fcall	i1_led_indicate_off
 16032                           
 16033                           ;app_led.c: 966: led_prepare_to_save();
 16034  0F7F  318B  2350         	fcall	i1_led_prepare_to_save
 16035  0F81  0008               	return
 16036  0F82                     __end_of_led_state_ble_short_press_cb:	
 16037  0F82                     __ptext122:	
 16038 ;; *************** function i1_led_indicate_off *****************
 16039 ;; Defined at:
 16040 ;;		line 711 in file "src/app_led.c"
 16041 ;; Parameters:    Size  Location     Type
 16042 ;;		None
 16043 ;; Auto vars:     Size  Location     Type
 16044 ;;		None
 16045 ;; Return value:  Size  Location     Type
 16046 ;;                  1    wreg      void 
 16047 ;; Registers used:
 16048 ;;		None
 16049 ;; Tracked objects:
 16050 ;;		On entry : 1F/1
 16051 ;;		On exit  : 1F/2
 16052 ;;		Unchanged: 0/0
 16053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16058 ;;Total ram usage:        0 bytes
 16059 ;; Hardware stack levels used:    1
 16060 ;; This function calls:
 16061 ;;		Nothing
 16062 ;; This function is called by:
 16063 ;;		_led_state_ble_short_press_cb
 16064 ;; This function uses a non-reentrant model
 16065 ;;
 16066                           
 16067                           
 16068                           ;psect for function i1_led_indicate_off
 16069  0F82                     i1_led_indicate_off:	
 16070                           
 16071                           ;app_led.c: 713: (LATBbits.LATB6 = 0);
 16072                           
 16073                           ;incstack = 0
 16074                           ; Regs used in i1_led_indicate_off: []
 16075                           
 16076                           ;app_led.c: 714: (LATAbits.LATA1 = 1);
 16077                           
 16078                           ;app_led.c: 715: (LATBbits.LATB7 = 1);
 16079  0F82  2F96               	ljmp	PL142	;call to abstracted procedure
 16080  0F83                     __end_ofi1_led_indicate_off:	
 16081  0F83                     __ptext120:	
 16082 ;; *************** function i1_led_turnoff *****************
 16083 ;; Defined at:
 16084 ;;		line 701 in file "src/app_led.c"
 16085 ;; Parameters:    Size  Location     Type
 16086 ;;		None
 16087 ;; Auto vars:     Size  Location     Type
 16088 ;;  led_turnoff     1    0[COMMON] unsigned char 
 16089 ;; Return value:  Size  Location     Type
 16090 ;;                  1    wreg      void 
 16091 ;; Registers used:
 16092 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16093 ;; Tracked objects:
 16094 ;;		On entry : 1F/1
 16095 ;;		On exit  : 1F/1
 16096 ;;		Unchanged: 1F/0
 16097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16101 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16102 ;;Total ram usage:        1 bytes
 16103 ;; Hardware stack levels used:    1
 16104 ;; This function calls:
 16105 ;;		Nothing
 16106 ;; This function is called by:
 16107 ;;		_led_state_ble_short_press_cb
 16108 ;; This function uses a non-reentrant model
 16109 ;;
 16110                           
 16111                           
 16112                           ;psect for function i1_led_turnoff
 16113  0F83                     i1_led_turnoff:	
 16114                           
 16115                           ;app_led.c: 703: for(uint8_t i = 0; i < 4; i++)
 16116                           
 16117                           ;incstack = 0
 16118                           ; Regs used in i1_led_turnoff: [wreg+fsr1l+fsr1h+status,2+status,0]
 16119  0F83  01F0               	clrf	i1led_turnoff@i
 16120  0F84                     i1l3757:	
 16121                           
 16122                           ;app_led.c: 704: {
 16123                           ;app_led.c: 705: target_bright[i] = 0;
 16124  0F84  3570               	lslf	i1led_turnoff@i,w
 16125  0F85  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 16126  0F86  2723  318C         	fcall	PL72	;call to abstracted procedure
 16127                           
 16128                           ;app_led.c: 706: current_bright[i] = 0;
 16129  0F88  3570               	lslf	i1led_turnoff@i,w
 16130  0F89  2790  318C         	fcall	PL114	;call to abstracted procedure
 16131  0F8B  0AF0               	incf	i1led_turnoff@i,f
 16132  0F8C  0270               	subwf	i1led_turnoff@i,w
 16133  0F8D  1803               	btfsc	3,0
 16134  0F8E  0008               	return
 16135  0F8F  2F84               	goto	i1l3757
 16136  0F90                     __end_ofi1_led_turnoff:	
 16137  0F90                     PL114:	
 16138  0F90  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 16139  0F91  0086               	movwf	6
 16140  0F92  3000               	movlw	0
 16141  0F93  3FC0               	movwi [0]fsr1
 16142  0F94  3FC1               	movwi [1]fsr1
 16143  0F95  3404               	retlw	4
 16144  0F96                     __end_ofPL114:	
 16145  0F96                     PL142:	
 16146  0F96  0022               	movlb	2	; select bank2
 16147  0F97  130D               	bcf	13,6	;volatile
 16148  0F98  148C               	bsf	12,1	;volatile
 16149  0F99  178D               	bsf	13,7	;volatile
 16150  0F9A  0008               	return
 16151  0F9B                     __end_ofPL142:	
 16152  0F9B                     __ptext53:	
 16153 ;; *************** function _led_increase *****************
 16154 ;; Defined at:
 16155 ;;		line 2149 in file "src/app_led.c"
 16156 ;; Parameters:    Size  Location     Type
 16157 ;;  chn             1    wreg     unsigned char 
 16158 ;;  delt            1   11[BANK0 ] unsigned char 
 16159 ;; Auto vars:     Size  Location     Type
 16160 ;;  chn             1   16[BANK0 ] unsigned char 
 16161 ;; Return value:  Size  Location     Type
 16162 ;;                  1    wreg      unsigned char 
 16163 ;; Registers used:
 16164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16165 ;; Tracked objects:
 16166 ;;		On entry : 1F/3
 16167 ;;		On exit  : 1F/0
 16168 ;;		Unchanged: 0/0
 16169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16170 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16171 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16172 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16173 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16174 ;;Total ram usage:        6 bytes
 16175 ;; Hardware stack levels used:    1
 16176 ;; Hardware stack levels required when called:   10
 16177 ;; This function calls:
 16178 ;;		_increase
 16179 ;;		_led_prepare_to_save
 16180 ;; This function is called by:
 16181 ;;		_ble_decode
 16182 ;; This function uses a non-reentrant model
 16183 ;;
 16184                           
 16185                           
 16186                           ;psect for function _led_increase
 16187  0F9B                     _led_increase:	
 16188                           
 16189                           ;incstack = 0
 16190                           ; Regs used in _led_increase: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16191                           ;led_increase@chn stored from wreg
 16192  0F9B  0020               	movlb	0	; select bank0
 16193  0F9C  00B0               	movwf	led_increase@chn
 16194                           
 16195                           ;app_led.c: 2151: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0 || m_led_para.ble_para.manual_para.mOn == 0 || chn >= 4)
 16196  0F9D  1C5D               	btfss	_led_run_para,0
 16197  0F9E  18DD               	btfsc	_led_run_para,1
 16198  0F9F  0008               	return
 16199  0FA0  26B0  318C         	fcall	PL10	;call to abstracted procedure
 16200  0FA2  1D03               	skipz
 16201  0FA3  0008               	return
 16202  0FA4  318A  2210  318C   	fcall	PL54	;call to abstracted procedure
 16203  0FA7  1C01               	btfss	1,0
 16204  0FA8  0008               	return
 16205  0FA9  3004               	movlw	4
 16206  0FAA  0230               	subwf	led_increase@chn,w
 16207  0FAB  1803               	btfsc	3,0
 16208  0FAC  0008               	return
 16209                           
 16210                           ;app_led.c: 2154: }
 16211                           ;app_led.c: 2161: increase(&m_led_para.ble_para.manual_para.mBright[chn], delt, 1000 );
 16212  0FAD  3088               	movlw	136
 16213  0FAE  00A2               	movwf	increase@psrc
 16214  0FAF  3023               	movlw	35
 16215  0FB0  00A3               	movwf	increase@psrc+1
 16216  0FB1  0830               	movf	led_increase@chn,w
 16217  0FB2  00AC               	movwf	??_led_increase
 16218  0FB3  01AD               	clrf	??_led_increase+1
 16219  0FB4  35AC               	lslf	??_led_increase,f
 16220  0FB5  0DAD               	rlf	??_led_increase+1,f
 16221  0FB6  082C               	movf	??_led_increase,w
 16222  0FB7  07A2               	addwf	increase@psrc,f
 16223  0FB8  082D               	movf	??_led_increase+1,w
 16224  0FB9  3DA3               	addwfc	increase@psrc+1,f
 16225  0FBA  082B               	movf	led_increase@delt,w
 16226  0FBB  00A4               	movwf	increase@delt
 16227  0FBC  30E8               	movlw	232
 16228  0FBD  00A5               	movwf	increase@max
 16229  0FBE  3003               	movlw	3
 16230  0FBF  00A6               	movwf	increase@max+1
 16231  0FC0  27D7  318C         	fcall	_increase
 16232                           
 16233                           ;app_led.c: 2162: target_bright[chn] = m_led_para.ble_para.manual_para.mBright[chn];
 16234  0FC2  0830               	movf	led_increase@chn,w
 16235  0FC3  00AC               	movwf	??_led_increase
 16236  0FC4  3088               	movlw	136
 16237  0FC5  01AD               	clrf	??_led_increase+1
 16238  0FC6  35AC               	lslf	??_led_increase,f
 16239  0FC7  0DAD               	rlf	??_led_increase+1,f
 16240  0FC8  00AE               	movwf	??_led_increase+2
 16241  0FC9  3023               	movlw	35
 16242  0FCA  00AF               	movwf	??_led_increase+3
 16243  0FCB  082C               	movf	??_led_increase,w
 16244  0FCC  072E               	addwf	??_led_increase+2,w
 16245  0FCD  0086               	movwf	6
 16246  0FCE  082D               	movf	??_led_increase+1,w
 16247  0FCF  3D2F               	addwfc	??_led_increase+3,w
 16248  0FD0  0087               	movwf	7
 16249  0FD1  3530               	lslf	led_increase@chn,w
 16250  0FD2  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 16251  0FD3  0084               	movwf	4
 16252  0FD4  27FA               	fcall	PL6	;call to abstracted procedure
 16253                           
 16254                           ;app_led.c: 2163: led_prepare_to_save();
 16255  0FD5  318B  2BD3         	ljmp	PL128
 16256  0FD7                     __end_of_led_increase:	
 16257  0FD7                     __ptext54:	
 16258 ;; *************** function _increase *****************
 16259 ;; Defined at:
 16260 ;;		line 3 in file "src/app_util.c"
 16261 ;; Parameters:    Size  Location     Type
 16262 ;;  psrc            2    2[BANK0 ] const PTR unsigned int 
 16263 ;;		 -> m_led_para.ble_para.manual_para.mBright(8), m_led_para.ble_para.manual_para(26), m_led_para(113), 
 16264 ;;  delt            1    4[BANK0 ] const unsigned char 
 16265 ;;  max             2    5[BANK0 ] const unsigned int 
 16266 ;; Auto vars:     Size  Location     Type
 16267 ;;		None
 16268 ;; Return value:  Size  Location     Type
 16269 ;;                  1    wreg      void 
 16270 ;; Registers used:
 16271 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16272 ;; Tracked objects:
 16273 ;;		On entry : 1F/0
 16274 ;;		On exit  : 1F/0
 16275 ;;		Unchanged: 0/0
 16276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16277 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16279 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16280 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16281 ;;Total ram usage:        9 bytes
 16282 ;; Hardware stack levels used:    1
 16283 ;; Hardware stack levels required when called:    9
 16284 ;; This function calls:
 16285 ;;		Nothing
 16286 ;; This function is called by:
 16287 ;;		_led_increase
 16288 ;; This function uses a non-reentrant model
 16289 ;;
 16290                           
 16291                           
 16292                           ;psect for function _increase
 16293  0FD7                     _increase:	
 16294                           
 16295                           ;app_util.c: 5: if((*psrc) + delt < max)
 16296                           
 16297                           ;incstack = 0
 16298                           ; Regs used in _increase: [wreg+fsr1l+fsr1h+status,2+status,0]
 16299  0FD7  0822               	movf	increase@psrc,w
 16300  0FD8  0086               	movwf	6
 16301  0FD9  0823               	movf	increase@psrc+1,w
 16302  0FDA  0087               	movwf	7
 16303  0FDB  3F40               	moviw [0]fsr1
 16304  0FDC  00A7               	movwf	??_increase
 16305  0FDD  3F41               	moviw [1]fsr1
 16306  0FDE  00A8               	movwf	??_increase+1
 16307  0FDF  0824               	movf	increase@delt,w
 16308  0FE0  0727               	addwf	??_increase,w
 16309  0FE1  00A9               	movwf	??_increase+2
 16310  0FE2  0828               	movf	??_increase+1,w
 16311  0FE3  1803               	skipnc
 16312  0FE4  0A28               	incf	??_increase+1,w
 16313  0FE5  00AA               	movwf	??_increase+3
 16314  0FE6  0826               	movf	increase@max+1,w
 16315  0FE7  022A               	subwf	??_increase+3,w
 16316  0FE8  1D03               	skipz
 16317  0FE9  2FEC               	goto	u2925
 16318  0FEA  0825               	movf	increase@max,w
 16319  0FEB  0229               	subwf	??_increase+2,w
 16320  0FEC                     u2925:	
 16321                           
 16322                           ;app_util.c: 6: {
 16323                           ;app_util.c: 7: (*psrc) += delt;
 16324  0FEC  0822               	movf	increase@psrc,w
 16325  0FED  0086               	movwf	6
 16326  0FEE  0823               	movf	increase@psrc+1,w
 16327  0FEF  0087               	movwf	7
 16328  0FF0  1803               	skipnc
 16329  0FF1  2FF5               	goto	L18
 16330  0FF2  0824               	movf	increase@delt,w
 16331                           
 16332                           ;app_util.c: 8: }
 16333  0FF3  318B  2BD8         	ljmp	PL136	;call to abstracted procedure
 16334  0FF5                     L18:	
 16335                           ;app_util.c: 9: else
 16336                           ;app_util.c: 10: {
 16337                           ;app_util.c: 11: (*psrc) = max;
 16338                           
 16339  0FF5  0825               	movf	increase@max,w
 16340  0FF6  3FC0               	movwi [0]fsr1
 16341  0FF7  0826               	movf	increase@max+1,w
 16342  0FF8  3FC1               	movwi [1]fsr1
 16343  0FF9  0008               	return
 16344  0FFA                     __end_of_increase:	
 16345  0FFA                     PL6:	
 16346  0FFA  0185               	clrf	5
 16347  0FFB  3F40               	moviw [0]fsr1
 16348  0FFC  3F80               	movwi [0]fsr0
 16349  0FFD  3F41               	moviw [1]fsr1
 16350  0FFE  3F81               	movwi [1]fsr0
 16351  0FFF  0008               	return
 16352  1000                     __end_ofPL6:	
 16353                           
 16354                           	psect	text52
 16355  1E64                     __ptext52:	
 16356 ;; *************** function _led_set_bright *****************
 16357 ;; Defined at:
 16358 ;;		line 2071 in file "src/app_led.c"
 16359 ;; Parameters:    Size  Location     Type
 16360 ;;  pbuf            1    wreg     const PTR const unsigned
 16361 ;;		 -> rx_buf(80), 
 16362 ;; Auto vars:     Size  Location     Type
 16363 ;;  pbuf            1    6[BANK0 ] const PTR const unsigned
 16364 ;;		 -> rx_buf(80), 
 16365 ;;  val             2    7[BANK0 ] unsigned int 
 16366 ;;  i               1    9[BANK0 ] unsigned char 
 16367 ;; Return value:  Size  Location     Type
 16368 ;;                  1    wreg      unsigned char 
 16369 ;; Registers used:
 16370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16371 ;; Tracked objects:
 16372 ;;		On entry : 1F/0
 16373 ;;		On exit  : 1F/0
 16374 ;;		Unchanged: 0/0
 16375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16377 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16378 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16379 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16380 ;;Total ram usage:        8 bytes
 16381 ;; Hardware stack levels used:    1
 16382 ;; Hardware stack levels required when called:   10
 16383 ;; This function calls:
 16384 ;;		_led_prepare_to_save
 16385 ;; This function is called by:
 16386 ;;		_ble_decode
 16387 ;; This function uses a non-reentrant model
 16388 ;;
 16389                           
 16390                           
 16391                           ;psect for function _led_set_bright
 16392  1E64                     _led_set_bright:	
 16393                           
 16394                           ;incstack = 0
 16395                           ; Regs used in _led_set_bright: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16396                           ;led_set_bright@pbuf stored from wreg
 16397  1E64  00A6               	movwf	led_set_bright@pbuf
 16398                           
 16399                           ;app_led.c: 2073: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0 || m_led_para.ble_para.manual_para.mOn == 0)
 16400  1E65  1C5D               	btfss	_led_run_para,0
 16401  1E66  18DD               	btfsc	_led_run_para,1
 16402  1E67  0008               	return
 16403  1E68  318E  26B0  319E   	fcall	PL10	;call to abstracted procedure
 16404  1E6B  1D03               	skipz
 16405  1E6C  0008               	return
 16406  1E6D  318A  2210  319E   	fcall	PL54	;call to abstracted procedure
 16407  1E70  1C01               	btfss	1,0
 16408  1E71  0008               	return
 16409                           
 16410                           ;app_led.c: 2076: }
 16411                           ;app_led.c: 2082: for(uint8_t i = 0; i < 4; i++)
 16412  1E72  01A9               	clrf	led_set_bright@i
 16413  1E73                     l4499:	
 16414                           
 16415                           ;app_led.c: 2083: {
 16416                           ;app_led.c: 2084: uint16_t val = (*(pbuf + 2 * i)) << 8 | (*(pbuf + 2 * i + 1));
 16417  1E73  3529               	lslf	led_set_bright@i,w
 16418  1E74  0726               	addwf	led_set_bright@pbuf,w
 16419  1E75  00A2               	movwf	??_led_set_bright
 16420  1E76  0A22               	incf	??_led_set_bright,w
 16421  1E77  0086               	movwf	6
 16422  1E78  3001               	movlw	1	; select bank2/3
 16423  1E79  0087               	movwf	7
 16424  1E7A  3529               	lslf	led_set_bright@i,w
 16425  1E7B  0726               	addwf	led_set_bright@pbuf,w
 16426  1E7C  00A3               	movwf	??_led_set_bright+1
 16427  1E7D  0084               	movwf	4
 16428  1E7E  3001               	movlw	1	; select bank2/3
 16429  1E7F  0085               	movwf	5
 16430  1E80  0800               	movf	0,w
 16431  1E81  00A8               	movwf	led_set_bright@val+1
 16432  1E82  0801               	movf	1,w
 16433  1E83  00A7               	movwf	led_set_bright@val
 16434                           
 16435                           ;app_led.c: 2085: if(val <= 1000)
 16436  1E84  3003               	movlw	3
 16437  1E85  0228               	subwf	led_set_bright@val+1,w
 16438  1E86  30E9               	movlw	233
 16439  1E87  1903               	skipnz
 16440  1E88  0227               	subwf	led_set_bright@val,w
 16441  1E89  1803               	skipnc
 16442  1E8A  2EA6               	goto	l4505
 16443                           
 16444                           ;app_led.c: 2086: {
 16445                           ;app_led.c: 2087: m_led_para.ble_para.manual_para.mBright[i] = val;
 16446  1E8B  0829               	movf	led_set_bright@i,w
 16447  1E8C  00A2               	movwf	??_led_set_bright
 16448  1E8D  3088               	movlw	136
 16449  1E8E  01A3               	clrf	??_led_set_bright+1
 16450  1E8F  35A2               	lslf	??_led_set_bright,f
 16451  1E90  0DA3               	rlf	??_led_set_bright+1,f
 16452  1E91  00A4               	movwf	??_led_set_bright+2
 16453  1E92  3023               	movlw	35
 16454  1E93  00A5               	movwf	??_led_set_bright+3
 16455  1E94  0822               	movf	??_led_set_bright,w
 16456  1E95  0724               	addwf	??_led_set_bright+2,w
 16457  1E96  0086               	movwf	6
 16458  1E97  0823               	movf	??_led_set_bright+1,w
 16459  1E98  3D25               	addwfc	??_led_set_bright+3,w
 16460  1E99  0087               	movwf	7
 16461  1E9A  0827               	movf	led_set_bright@val,w
 16462  1E9B  3FC0               	movwi [0]fsr1
 16463  1E9C  0828               	movf	led_set_bright@val+1,w
 16464  1E9D  3FC1               	movwi [1]fsr1
 16465                           
 16466                           ;app_led.c: 2088: target_bright[i] = val;
 16467  1E9E  3529               	lslf	led_set_bright@i,w
 16468  1E9F  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 16469  1EA0  0086               	movwf	6
 16470  1EA1  0187               	clrf	7
 16471  1EA2  0827               	movf	led_set_bright@val,w
 16472  1EA3  3FC0               	movwi [0]fsr1
 16473  1EA4  0828               	movf	led_set_bright@val+1,w
 16474  1EA5  3FC1               	movwi [1]fsr1
 16475  1EA6                     l4505:	
 16476  1EA6  3004               	movlw	4
 16477  1EA7  0AA9               	incf	led_set_bright@i,f
 16478  1EA8  0229               	subwf	led_set_bright@i,w
 16479  1EA9  1C03               	skipc
 16480  1EAA  2E73               	goto	l4499
 16481                           
 16482                           ;app_led.c: 2089: }
 16483                           ;app_led.c: 2090: }
 16484                           ;app_led.c: 2091: led_prepare_to_save();
 16485  1EAB  318B  2BD3         	ljmp	PL128
 16486  1EAD                     __end_of_led_set_bright:	
 16487                           
 16488                           	psect	text55
 16489  1EAD                     __ptext55:	
 16490 ;; *************** function _led_decrease *****************
 16491 ;; Defined at:
 16492 ;;		line 2167 in file "src/app_led.c"
 16493 ;; Parameters:    Size  Location     Type
 16494 ;;  chn             1    wreg     unsigned char 
 16495 ;;  delt            1   11[BANK0 ] unsigned char 
 16496 ;; Auto vars:     Size  Location     Type
 16497 ;;  chn             1   16[BANK0 ] unsigned char 
 16498 ;; Return value:  Size  Location     Type
 16499 ;;                  1    wreg      unsigned char 
 16500 ;; Registers used:
 16501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16502 ;; Tracked objects:
 16503 ;;		On entry : 1F/3
 16504 ;;		On exit  : 1F/0
 16505 ;;		Unchanged: 0/0
 16506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16507 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16508 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16509 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16510 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16511 ;;Total ram usage:        6 bytes
 16512 ;; Hardware stack levels used:    1
 16513 ;; Hardware stack levels required when called:   10
 16514 ;; This function calls:
 16515 ;;		_decrease
 16516 ;;		_led_prepare_to_save
 16517 ;; This function is called by:
 16518 ;;		_ble_decode
 16519 ;; This function uses a non-reentrant model
 16520 ;;
 16521                           
 16522                           
 16523                           ;psect for function _led_decrease
 16524  1EAD                     _led_decrease:	
 16525                           
 16526                           ;incstack = 0
 16527                           ; Regs used in _led_decrease: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16528                           ;led_decrease@chn stored from wreg
 16529  1EAD  0020               	movlb	0	; select bank0
 16530  1EAE  00B0               	movwf	led_decrease@chn
 16531                           
 16532                           ;app_led.c: 2169: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0 || m_led_para.ble_para.manual_para.mOn == 0 || chn >= 4)
 16533  1EAF  1C5D               	btfss	_led_run_para,0
 16534  1EB0  18DD               	btfsc	_led_run_para,1
 16535  1EB1  0008               	return
 16536  1EB2  318E  26B0  319E   	fcall	PL10	;call to abstracted procedure
 16537  1EB5  1D03               	skipz
 16538  1EB6  0008               	return
 16539  1EB7  318A  2210  319E   	fcall	PL54	;call to abstracted procedure
 16540  1EBA  1C01               	btfss	1,0
 16541  1EBB  0008               	return
 16542  1EBC  3004               	movlw	4
 16543  1EBD  0230               	subwf	led_decrease@chn,w
 16544  1EBE  1803               	btfsc	3,0
 16545  1EBF  0008               	return
 16546                           
 16547                           ;app_led.c: 2172: }
 16548                           ;app_led.c: 2179: decrease(&m_led_para.ble_para.manual_para.mBright[chn], delt, 0);
 16549  1EC0  3088               	movlw	136
 16550  1EC1  00A2               	movwf	decrease@psrc
 16551  1EC2  3023               	movlw	35
 16552  1EC3  00A3               	movwf	decrease@psrc+1
 16553  1EC4  0830               	movf	led_decrease@chn,w
 16554  1EC5  00AC               	movwf	??_led_decrease
 16555  1EC6  01AD               	clrf	??_led_decrease+1
 16556  1EC7  35AC               	lslf	??_led_decrease,f
 16557  1EC8  0DAD               	rlf	??_led_decrease+1,f
 16558  1EC9  082C               	movf	??_led_decrease,w
 16559  1ECA  07A2               	addwf	decrease@psrc,f
 16560  1ECB  082D               	movf	??_led_decrease+1,w
 16561  1ECC  3DA3               	addwfc	decrease@psrc+1,f
 16562  1ECD  082B               	movf	led_decrease@delt,w
 16563  1ECE  00A4               	movwf	decrease@delt
 16564  1ECF  01A5               	clrf	decrease@min
 16565  1ED0  01A6               	clrf	decrease@min+1
 16566  1ED1  26E8               	fcall	_decrease
 16567                           
 16568                           ;app_led.c: 2180: target_bright[chn] = m_led_para.ble_para.manual_para.mBright[chn];
 16569  1ED2  0830               	movf	led_decrease@chn,w
 16570  1ED3  00AC               	movwf	??_led_decrease
 16571  1ED4  3088               	movlw	136
 16572  1ED5  01AD               	clrf	??_led_decrease+1
 16573  1ED6  35AC               	lslf	??_led_decrease,f
 16574  1ED7  0DAD               	rlf	??_led_decrease+1,f
 16575  1ED8  00AE               	movwf	??_led_decrease+2
 16576  1ED9  3023               	movlw	35
 16577  1EDA  00AF               	movwf	??_led_decrease+3
 16578  1EDB  082C               	movf	??_led_decrease,w
 16579  1EDC  072E               	addwf	??_led_decrease+2,w
 16580  1EDD  0086               	movwf	6
 16581  1EDE  082D               	movf	??_led_decrease+1,w
 16582  1EDF  3D2F               	addwfc	??_led_decrease+3,w
 16583  1EE0  0087               	movwf	7
 16584  1EE1  3530               	lslf	led_decrease@chn,w
 16585  1EE2  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 16586  1EE3  0084               	movwf	4
 16587  1EE4  318F  27FA         	fcall	PL6	;call to abstracted procedure
 16588                           
 16589                           ;app_led.c: 2181: led_prepare_to_save();
 16590  1EE6  318B  2BD3         	ljmp	PL128
 16591  1EE8                     __end_of_led_decrease:	
 16592  1EE8                     __ptext57:	
 16593 ;; *************** function _decrease *****************
 16594 ;; Defined at:
 16595 ;;		line 15 in file "src/app_util.c"
 16596 ;; Parameters:    Size  Location     Type
 16597 ;;  psrc            2    2[BANK0 ] const PTR unsigned int 
 16598 ;;		 -> m_led_para.ble_para.manual_para.mBright(8), m_led_para.ble_para.manual_para(26), m_led_para(113), 
 16599 ;;  delt            1    4[BANK0 ] const unsigned char 
 16600 ;;  min             2    5[BANK0 ] const unsigned int 
 16601 ;; Auto vars:     Size  Location     Type
 16602 ;;		None
 16603 ;; Return value:  Size  Location     Type
 16604 ;;                  1    wreg      void 
 16605 ;; Registers used:
 16606 ;;		wreg, fsr1l, fsr1h
 16607 ;; Tracked objects:
 16608 ;;		On entry : 1F/0
 16609 ;;		On exit  : 1F/0
 16610 ;;		Unchanged: 0/0
 16611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16612 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16614 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16615 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16616 ;;Total ram usage:        9 bytes
 16617 ;; Hardware stack levels used:    1
 16618 ;; Hardware stack levels required when called:    9
 16619 ;; This function calls:
 16620 ;;		Nothing
 16621 ;; This function is called by:
 16622 ;;		_led_decrease
 16623 ;; This function uses a non-reentrant model
 16624 ;;
 16625                           
 16626                           
 16627                           ;psect for function _decrease
 16628  1EE8                     _decrease:	
 16629                           
 16630                           ;app_util.c: 17: if((*psrc) > min + delt)
 16631                           
 16632                           ;incstack = 0
 16633                           ; Regs used in _decrease: [wregfsr1]
 16634  1EE8  0822               	movf	decrease@psrc,w
 16635  1EE9  0086               	movwf	6
 16636  1EEA  0823               	movf	decrease@psrc+1,w
 16637  1EEB  0087               	movwf	7
 16638  1EEC  3F40               	moviw [0]fsr1
 16639  1EED  00A7               	movwf	??_decrease
 16640  1EEE  3F41               	moviw [1]fsr1
 16641  1EEF  00A8               	movwf	??_decrease+1
 16642  1EF0  0824               	movf	decrease@delt,w
 16643  1EF1  0725               	addwf	decrease@min,w
 16644  1EF2  00A9               	movwf	??_decrease+2
 16645  1EF3  0826               	movf	decrease@min+1,w
 16646  1EF4  1803               	skipnc
 16647  1EF5  0A26               	incf	decrease@min+1,w
 16648  1EF6  00AA               	movwf	??_decrease+3
 16649  1EF7  0828               	movf	??_decrease+1,w
 16650  1EF8  022A               	subwf	??_decrease+3,w
 16651  1EF9  1D03               	skipz
 16652  1EFA  2EFD               	goto	u2935
 16653  1EFB  0827               	movf	??_decrease,w
 16654  1EFC  0229               	subwf	??_decrease+2,w
 16655  1EFD                     u2935:	
 16656                           
 16657                           ;app_util.c: 18: {
 16658                           ;app_util.c: 19: (*psrc) -= delt;
 16659  1EFD  0822               	movf	decrease@psrc,w
 16660  1EFE  0086               	movwf	6
 16661  1EFF  0823               	movf	decrease@psrc+1,w
 16662  1F00  0087               	movwf	7
 16663  1F01  1803               	skipnc
 16664  1F02  2F06               	goto	L19
 16665  1F03  0824               	movf	decrease@delt,w
 16666                           
 16667                           ;app_util.c: 20: }
 16668  1F04  318B  2BBD         	ljmp	PL110	;call to abstracted procedure
 16669  1F06                     L19:	
 16670                           ;app_util.c: 21: else
 16671                           ;app_util.c: 22: {
 16672                           ;app_util.c: 23: (*psrc) = min;
 16673                           
 16674  1F06  0825               	movf	decrease@min,w
 16675  1F07  3FC0               	movwi [0]fsr1
 16676  1F08  0826               	movf	decrease@min+1,w
 16677  1F09  3FC1               	movwi [1]fsr1
 16678  1F0A  0008               	return
 16679  1F0B                     __end_of_decrease:	
 16680                           
 16681                           	psect	intentry
 16682  0404                     __pintentry:	
 16683 ;; *************** function _app_isr *****************
 16684 ;; Defined at:
 16685 ;;		line 129 in file "src/app_main.c"
 16686 ;; Parameters:    Size  Location     Type
 16687 ;;		None
 16688 ;; Auto vars:     Size  Location     Type
 16689 ;;		None
 16690 ;; Return value:  Size  Location     Type
 16691 ;;                  1    wreg      void 
 16692 ;; Registers used:
 16693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16694 ;; Tracked objects:
 16695 ;;		On entry : 0/0
 16696 ;;		On exit  : 0/0
 16697 ;;		Unchanged: 0/0
 16698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16703 ;;Total ram usage:        0 bytes
 16704 ;; Hardware stack levels used:    1
 16705 ;; Hardware stack levels required when called:    8
 16706 ;; This function calls:
 16707 ;;		_eusart_receive_isr
 16708 ;;		_eusart_transmit_isr
 16709 ;;		_tmr0_isr
 16710 ;;		_tmr2_isr
 16711 ;; This function is called by:
 16712 ;;		Interrupt level 1
 16713 ;; This function uses a non-reentrant model
 16714 ;;
 16715                           
 16716  0404                     _app_isr:	
 16717                           
 16718                           ;incstack = 0
 16719  0404  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 16720                           
 16721                           ; Regs used in _app_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16722  0405  3184               	pagesel	$
 16723                           
 16724                           ;app_main.c: 131: if(PIE1bits.RCIE && PIR1bits.RCIF)
 16725  0406  0021               	movlb	1	; select bank1
 16726  0407  1E91               	btfss	17,5	;volatile
 16727  0408  2C10               	goto	i1l1125
 16728  0409  0020               	movlb	0	; select bank0
 16729  040A  1E91               	btfss	17,5	;volatile
 16730  040B  2C10               	goto	i1l1125
 16731                           
 16732                           ;app_main.c: 132: {
 16733                           ;app_main.c: 133: eusart_receive_isr();
 16734  040C  319D  25FA  3184   	fcall	_eusart_receive_isr
 16735                           
 16736                           ;app_main.c: 134: }
 16737  040F  2C2C               	goto	i1l1132
 16738  0410                     i1l1125:	
 16739                           
 16740                           ;app_main.c: 135: else if(PIE0bits.TMR0IE && PIR0bits.TMR0IF)
 16741  0410  0021               	movlb	1	; select bank1
 16742  0411  1E90               	btfss	16,5	;volatile
 16743  0412  2C1A               	goto	i1l1127
 16744  0413  0020               	movlb	0	; select bank0
 16745  0414  1E90               	btfss	16,5	;volatile
 16746  0415  2C1A               	goto	i1l1127
 16747                           
 16748                           ;app_main.c: 136: {
 16749                           ;app_main.c: 137: tmr0_isr();
 16750  0416  319D  25C4  3184   	fcall	_tmr0_isr
 16751                           
 16752                           ;app_main.c: 138: }
 16753  0419  2C2C               	goto	i1l1132
 16754  041A                     i1l1127:	
 16755                           
 16756                           ;app_main.c: 139: else if(PIE1bits.TMR2IE && PIR1bits.TMR2IF)
 16757  041A  0021               	movlb	1	; select bank1
 16758  041B  1C91               	btfss	17,1	;volatile
 16759  041C  2C24               	goto	i1l1129
 16760  041D  0020               	movlb	0	; select bank0
 16761  041E  1C91               	btfss	17,1	;volatile
 16762  041F  2C24               	goto	i1l1129
 16763                           
 16764                           ;app_main.c: 140: {
 16765                           ;app_main.c: 141: tmr2_isr();
 16766  0420  319D  25D0  3184   	fcall	_tmr2_isr
 16767                           
 16768                           ;app_main.c: 142: }
 16769  0423  2C2C               	goto	i1l1132
 16770  0424                     i1l1129:	
 16771                           
 16772                           ;app_main.c: 143: else if(PIE1bits.TXIE && PIR1bits.TXIF)
 16773  0424  0021               	movlb	1	; select bank1
 16774  0425  1E11               	btfss	17,4	;volatile
 16775  0426  2C2C               	goto	i1l1132
 16776  0427  0020               	movlb	0	; select bank0
 16777  0428  1E11               	btfss	17,4	;volatile
 16778  0429  2C2C               	goto	i1l1132
 16779                           
 16780                           ;app_main.c: 144: {
 16781                           ;app_main.c: 145: eusart_transmit_isr();
 16782  042A  319E  2610         	fcall	_eusart_transmit_isr
 16783  042C                     i1l1132:	
 16784  042C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 16785  042D  0009               	retfie
 16786  042E                     __end_of_app_isr:	
 16787                           
 16788                           	psect	text82
 16789  1DD0                     __ptext82:	
 16790 ;; *************** function _tmr2_isr *****************
 16791 ;; Defined at:
 16792 ;;		line 58 in file "src/drv_tmr.c"
 16793 ;; Parameters:    Size  Location     Type
 16794 ;;		None
 16795 ;; Auto vars:     Size  Location     Type
 16796 ;;		None
 16797 ;; Return value:  Size  Location     Type
 16798 ;;                  1    wreg      void 
 16799 ;; Registers used:
 16800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16801 ;; Tracked objects:
 16802 ;;		On entry : 1F/0
 16803 ;;		On exit  : 0/0
 16804 ;;		Unchanged: 0/0
 16805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16810 ;;Total ram usage:        0 bytes
 16811 ;; Hardware stack levels used:    1
 16812 ;; Hardware stack levels required when called:    7
 16813 ;; This function calls:
 16814 ;;		Absolute function
 16815 ;;		_tmr2_isr_callback
 16816 ;; This function is called by:
 16817 ;;		_app_isr
 16818 ;; This function uses a non-reentrant model
 16819 ;;
 16820                           
 16821                           
 16822                           ;psect for function _tmr2_isr
 16823  1DD0                     _tmr2_isr:	
 16824                           
 16825                           ;drv_tmr.c: 60: PIR1bits.TMR2IF = 0;
 16826                           
 16827                           ;incstack = 0
 16828                           ; Regs used in _tmr2_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16829  1DD0  1091               	bcf	17,1	;volatile
 16830                           
 16831                           ;drv_tmr.c: 61: if(tmr2_isr_cb != (0))
 16832  1DD1  0021               	movlb	1	; select bank1
 16833  1DD2  086A               	movf	_tmr2_isr_cb^(0+128),w
 16834  1DD3  046B               	iorwf	(_tmr2_isr_cb+1)^(0+128),w
 16835  1DD4  1903               	btfsc	3,2
 16836  1DD5  0008               	return
 16837                           
 16838                           ;drv_tmr.c: 62: {
 16839                           ;drv_tmr.c: 63: tmr2_isr_cb();
 16840  1DD6  086B               	movf	(_tmr2_isr_cb+1)^(0+128),w
 16841  1DD7  008A               	movwf	10
 16842  1DD8  086A               	movf	_tmr2_isr_cb^(0+128),w
 16843  1DD9  000A               	callw
 16844  1DDA  319D               	pagesel	$
 16845  1DDB  0008               	return
 16846  1DDC                     __end_of_tmr2_isr:	
 16847                           
 16848                           	psect	text83
 16849  1F0B                     __ptext83:	
 16850 ;; *************** function _tmr2_isr_callback *****************
 16851 ;; Defined at:
 16852 ;;		line 92 in file "src/app_main.c"
 16853 ;; Parameters:    Size  Location     Type
 16854 ;;		None
 16855 ;; Auto vars:     Size  Location     Type
 16856 ;;		None
 16857 ;; Return value:  Size  Location     Type
 16858 ;;                  1    wreg      void 
 16859 ;; Registers used:
 16860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16861 ;; Tracked objects:
 16862 ;;		On entry : 1F/1
 16863 ;;		On exit  : 10/0
 16864 ;;		Unchanged: 0/0
 16865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16870 ;;Total ram usage:        0 bytes
 16871 ;; Hardware stack levels used:    1
 16872 ;; Hardware stack levels required when called:    6
 16873 ;; This function calls:
 16874 ;;		_key_scan
 16875 ;;		_led_process
 16876 ;; This function is called by:
 16877 ;;		_app_init
 16878 ;;		_tmr2_isr
 16879 ;; This function uses a non-reentrant model
 16880 ;;
 16881                           
 16882                           
 16883                           ;psect for function _tmr2_isr_callback
 16884  1F0B                     _tmr2_isr_callback:	
 16885                           
 16886                           ;app_main.c: 94: static uint8_t cnt = 0;
 16887                           ;app_main.c: 96: cnt++;
 16888                           
 16889                           ;incstack = 0
 16890                           ; Regs used in _tmr2_isr_callback: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16891  1F0B  0020               	movlb	0	; select bank0
 16892  1F0C  0AE1               	incf	tmr2_isr_callback@cnt,f
 16893                           
 16894                           ;app_main.c: 97: if((cnt&0x03) == 0)
 16895  1F0D  0861               	movf	tmr2_isr_callback@cnt,w
 16896  1F0E  3903               	andlw	3
 16897  1F0F  1D03               	btfss	3,2
 16898  1F10  0008               	return
 16899                           
 16900                           ;app_main.c: 98: {
 16901                           ;app_main.c: 100: if((cnt&0x0F) == 0)
 16902  1F11  0861               	movf	tmr2_isr_callback@cnt,w
 16903  1F12  390F               	andlw	15
 16904  1F13  1D03               	btfss	3,2
 16905  1F14  2F17               	goto	i1l1116
 16906                           
 16907                           ;app_main.c: 101: {
 16908                           ;app_main.c: 102: key_scan();
 16909  1F15  2718  319F         	fcall	_key_scan
 16910  1F17                     i1l1116:	
 16911                           
 16912                           ;app_main.c: 103: }
 16913                           ;app_main.c: 105: led_process();
 16914  1F17  2F6B               	ljmp	i1l4101
 16915  1F18                     __end_of_tmr2_isr_callback:	
 16916  1F18                     __ptext90:	
 16917 ;; *************** function _key_scan *****************
 16918 ;; Defined at:
 16919 ;;		line 28 in file "src/app_key.c"
 16920 ;; Parameters:    Size  Location     Type
 16921 ;;		None
 16922 ;; Auto vars:     Size  Location     Type
 16923 ;;  key_value       1    1[BANK0 ] unsigned char 
 16924 ;; Return value:  Size  Location     Type
 16925 ;;                  1    wreg      void 
 16926 ;; Registers used:
 16927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16928 ;; Tracked objects:
 16929 ;;		On entry : 1F/0
 16930 ;;		On exit  : 1F/0
 16931 ;;		Unchanged: 0/0
 16932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16934 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16936 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16937 ;;Total ram usage:        1 bytes
 16938 ;; Hardware stack levels used:    1
 16939 ;; Hardware stack levels required when called:    5
 16940 ;; This function calls:
 16941 ;;		_key_action
 16942 ;;		_key_read
 16943 ;; This function is called by:
 16944 ;;		_tmr2_isr_callback
 16945 ;; This function uses a non-reentrant model
 16946 ;;
 16947                           
 16948                           
 16949                           ;psect for function _key_scan
 16950  1F18                     _key_scan:	
 16951                           
 16952                           ;app_key.c: 30: static key_value_t last_key = 0x00;
 16953                           ;app_key.c: 31: static uint8_t repeat = 0;
 16954                           ;app_key.c: 32: key_value_t key_value = key_read();
 16955                           
 16956                           ;incstack = 0
 16957                           ; Regs used in _key_scan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16958  1F18  275E  319F         	fcall	_key_read
 16959  1F1A  00A1               	movwf	key_scan@key_value
 16960                           
 16961                           ;app_key.c: 33: if(key_value != 0x00)
 16962  1F1B  0821               	movf	key_scan@key_value,w
 16963  1F1C  1903               	btfsc	3,2
 16964  1F1D  2F39               	goto	i1l4293
 16965                           
 16966                           ;app_key.c: 34: {
 16967                           ;app_key.c: 35: if(key_value == last_key)
 16968  1F1E  0821               	movf	key_scan@key_value,w
 16969  1F1F  0667               	xorwf	key_scan@last_key,w
 16970  1F20  1D03               	skipz
 16971  1F21  2F46               	goto	i1l4291
 16972  1F22  3020               	movlw	32
 16973                           
 16974                           ;app_key.c: 36: {
 16975                           ;app_key.c: 37: repeat++;
 16976  1F23  0AE6               	incf	key_scan@repeat,f
 16977                           
 16978                           ;app_key.c: 38: if(repeat == 32)
 16979  1F24  0666               	xorwf	key_scan@repeat,w
 16980  1F25  1D03               	btfss	3,2
 16981  1F26  2F2D               	goto	i1l4285
 16982                           
 16983                           ;app_key.c: 39: {
 16984                           ;app_key.c: 40: key_action(key_value, KEY_STATE_LONG_PRESS);
 16985  1F27  01FD               	clrf	key_action@state
 16986  1F28  0AFD               	incf	key_action@state,f
 16987  1F29  0821               	movf	key_scan@key_value,w
 16988  1F2A  274C  319F         	fcall	_key_action
 16989                           
 16990                           ;app_key.c: 41: }
 16991  1F2C  2F48               	goto	i1l4303
 16992  1F2D                     i1l4285:	
 16993                           
 16994                           ;app_key.c: 42: else if(repeat >= 32 + 1)
 16995  1F2D  3021               	movlw	33
 16996  1F2E  0266               	subwf	key_scan@repeat,w
 16997  1F2F  1C03               	skipc
 16998  1F30  2F48               	goto	i1l4303
 16999                           
 17000                           ;app_key.c: 43: {
 17001                           ;app_key.c: 44: repeat = 32;
 17002  1F31  3020               	movlw	32
 17003  1F32  00E6               	movwf	key_scan@repeat
 17004                           
 17005                           ;app_key.c: 45: key_action(key_value, KEY_STATE_CONT_PRESS);
 17006  1F33  3002               	movlw	2
 17007  1F34  00FD               	movwf	key_action@state
 17008  1F35  0821               	movf	key_scan@key_value,w
 17009  1F36  274C  319F         	fcall	_key_action
 17010  1F38  2F48               	goto	i1l4303
 17011  1F39                     i1l4293:	
 17012                           ;app_key.c: 51: }
 17013                           ;app_key.c: 52: }
 17014                           
 17015                           
 17016                           ;app_key.c: 53: else
 17017                           ;app_key.c: 54: {
 17018                           ;app_key.c: 55: if(last_key != 0x00)
 17019  1F39  0867               	movf	key_scan@last_key,w
 17020  1F3A  1903               	btfsc	3,2
 17021  1F3B  2F46               	goto	i1l4291
 17022                           
 17023                           ;app_key.c: 56: {
 17024                           ;app_key.c: 57: if(repeat >= 32)
 17025  1F3C  3020               	movlw	32
 17026  1F3D  0266               	subwf	key_scan@repeat,w
 17027  1F3E  1C03               	skipc
 17028  1F3F  2F43               	goto	i1l4299
 17029                           
 17030                           ;app_key.c: 58: {
 17031                           ;app_key.c: 59: key_action(last_key, KEY_STATE_RELEASE);
 17032  1F40  3003               	movlw	3
 17033  1F41  00FD               	movwf	key_action@state
 17034  1F42  2F44               	goto	L22
 17035  1F43                     i1l4299:	
 17036                           ;app_key.c: 60: }
 17037                           
 17038                           
 17039                           ;app_key.c: 61: else
 17040                           ;app_key.c: 62: {
 17041                           ;app_key.c: 63: key_action(last_key, KEY_STATE_SHORT_PRESS);
 17042  1F43  01FD               	clrf	key_action@state
 17043  1F44                     L22:	
 17044  1F44  0867               	movf	key_scan@last_key,w
 17045  1F45  274C               	fcall	_key_action
 17046  1F46                     i1l4291:	
 17047                           
 17048                           ;app_key.c: 48: else
 17049                           ;app_key.c: 49: {
 17050                           ;app_key.c: 50: repeat = 0;
 17051  1F46  0020               	movlb	0	; select bank0
 17052  1F47  01E6               	clrf	key_scan@repeat
 17053  1F48                     i1l4303:	
 17054                           
 17055                           ;app_key.c: 67: }
 17056                           ;app_key.c: 68: last_key = key_value;
 17057  1F48  0020               	movlb	0	; select bank0
 17058  1F49  0821               	movf	key_scan@key_value,w
 17059  1F4A  00E7               	movwf	key_scan@last_key
 17060  1F4B  0008               	return
 17061  1F4C                     __end_of_key_scan:	
 17062  1F4C                     __ptext92:	
 17063 ;; *************** function _key_action *****************
 17064 ;; Defined at:
 17065 ;;		line 20 in file "src/app_key.c"
 17066 ;; Parameters:    Size  Location     Type
 17067 ;;  key             1    wreg     unsigned char 
 17068 ;;  state           1   13[COMMON] enum E8166
 17069 ;; Auto vars:     Size  Location     Type
 17070 ;;  key             1    0[BANK0 ] unsigned char 
 17071 ;; Return value:  Size  Location     Type
 17072 ;;                  1    wreg      void 
 17073 ;; Registers used:
 17074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17075 ;; Tracked objects:
 17076 ;;		On entry : 1F/0
 17077 ;;		On exit  : 0/0
 17078 ;;		Unchanged: 0/0
 17079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17080 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17081 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17083 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17084 ;;Total ram usage:        2 bytes
 17085 ;; Hardware stack levels used:    1
 17086 ;; Hardware stack levels required when called:    4
 17087 ;; This function calls:
 17088 ;;		Absolute function
 17089 ;;		_led_touch_cb
 17090 ;; This function is called by:
 17091 ;;		_key_scan
 17092 ;; This function uses a non-reentrant model
 17093 ;;
 17094                           
 17095                           
 17096                           ;psect for function _key_action
 17097  1F4C                     _key_action:	
 17098                           
 17099                           ;incstack = 0
 17100                           ; Regs used in _key_action: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17101                           ;key_action@key stored from wreg
 17102  1F4C  00A0               	movwf	key_action@key
 17103                           
 17104                           ;app_key.c: 22: if(key_func != (0))
 17105  1F4D  0021               	movlb	1	; select bank1
 17106  1F4E  0866               	movf	_key_func^(0+128),w
 17107  1F4F  0467               	iorwf	(_key_func+1)^(0+128),w
 17108  1F50  1903               	btfsc	3,2
 17109  1F51  0008               	return
 17110                           
 17111                           ;app_key.c: 23: {
 17112                           ;app_key.c: 24: key_func(key, state);
 17113  1F52  0020               	movlb	0	; select bank0
 17114  1F53  0820               	movf	key_action@key,w
 17115  1F54  00FB               	movwf	led_touch_cb@key
 17116  1F55  087D               	movf	key_action@state,w
 17117  1F56  00FC               	movwf	led_touch_cb@state
 17118  1F57  0021               	movlb	1	; select bank1
 17119  1F58  0867               	movf	(_key_func+1)^(0+128),w
 17120  1F59  008A               	movwf	10
 17121  1F5A  0866               	movf	_key_func^(0+128),w
 17122  1F5B  000A               	callw
 17123  1F5C  319F               	pagesel	$
 17124  1F5D  0008               	return
 17125  1F5E                     __end_of_key_action:	
 17126  1F5E                     __ptext91:	
 17127 ;; *************** function _key_read *****************
 17128 ;; Defined at:
 17129 ;;		line 10 in file "src/app_key.c"
 17130 ;; Parameters:    Size  Location     Type
 17131 ;;		None
 17132 ;; Auto vars:     Size  Location     Type
 17133 ;;  dat             1    0[COMMON] unsigned char 
 17134 ;; Return value:  Size  Location     Type
 17135 ;;                  1    wreg      unsigned char 
 17136 ;; Registers used:
 17137 ;;		wreg, status,2, status,0
 17138 ;; Tracked objects:
 17139 ;;		On entry : 1F/0
 17140 ;;		On exit  : 1F/0
 17141 ;;		Unchanged: 0/0
 17142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17146 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17147 ;;Total ram usage:        1 bytes
 17148 ;; Hardware stack levels used:    1
 17149 ;; This function calls:
 17150 ;;		Nothing
 17151 ;; This function is called by:
 17152 ;;		_key_scan
 17153 ;; This function uses a non-reentrant model
 17154 ;;
 17155                           
 17156                           
 17157                           ;psect for function _key_read
 17158  1F5E                     _key_read:	
 17159                           
 17160                           ;app_key.c: 12: static uint8_t trg;
 17161                           ;app_key.c: 13: static uint8_t cont;
 17162                           ;app_key.c: 14: uint8_t dat = (PORTC^0xFF) & 0x01;
 17163                           
 17164                           ;incstack = 0
 17165                           ; Regs used in _key_read: [wreg+status,2+status,0]
 17166  1F5E  090E               	comf	14,w	;volatile
 17167  1F5F  00F0               	movwf	key_read@dat
 17168  1F60  3001               	movlw	1
 17169  1F61  05F0               	andwf	key_read@dat,f
 17170                           
 17171                           ;app_key.c: 15: trg = dat & (dat ^ cont);
 17172  1F62  0870               	movf	key_read@dat,w
 17173  1F63  0668               	xorwf	key_read@cont,w
 17174  1F64  00E9               	movwf	key_read@trg
 17175  1F65  0870               	movf	key_read@dat,w
 17176  1F66  05E9               	andwf	key_read@trg,f
 17177                           
 17178                           ;app_key.c: 16: cont = dat;
 17179  1F67  00E8               	movwf	key_read@cont
 17180                           
 17181                           ;app_key.c: 17: return( trg ^ cont);
 17182  1F68  0669               	xorwf	key_read@trg,w
 17183  1F69  0008               	return
 17184  1F6A                     __end_of_key_read:	
 17185  1F6A                     __ptext84:	
 17186 ;; *************** function _led_process *****************
 17187 ;; Defined at:
 17188 ;;		line 498 in file "src/app_led.c"
 17189 ;; Parameters:    Size  Location     Type
 17190 ;;		None
 17191 ;; Auto vars:     Size  Location     Type
 17192 ;;		None
 17193 ;; Return value:  Size  Location     Type
 17194 ;;                  1    wreg      void 
 17195 ;; Registers used:
 17196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17197 ;; Tracked objects:
 17198 ;;		On entry : 1F/0
 17199 ;;		On exit  : 14/4
 17200 ;;		Unchanged: 0/0
 17201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17206 ;;Total ram usage:        0 bytes
 17207 ;; Hardware stack levels used:    1
 17208 ;; Hardware stack levels required when called:    2
 17209 ;; This function calls:
 17210 ;;		_led_ramp
 17211 ;; This function is called by:
 17212 ;;		_tmr2_isr_callback
 17213 ;; This function uses a non-reentrant model
 17214 ;;
 17215                           
 17216                           
 17217                           ;psect for function _led_process
 17218  1F6A                     _led_process:	
 17219                           
 17220                           ;app_led.c: 508: led_ramp();
 17221                           
 17222                           ;incstack = 0
 17223                           ; Regs used in _led_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17224  1F6A  2F6B               	ljmp	i1l4101
 17225  1F6B                     __end_of_led_process:	
 17226  1F6B                     __ptext85:	
 17227 ;; *************** function _led_ramp *****************
 17228 ;; Defined at:
 17229 ;;		line 478 in file "src/app_led.c"
 17230 ;; Parameters:    Size  Location     Type
 17231 ;;		None
 17232 ;; Auto vars:     Size  Location     Type
 17233 ;;  i               1   10[COMMON] unsigned char 
 17234 ;; Return value:  Size  Location     Type
 17235 ;;                  1    wreg      void 
 17236 ;; Registers used:
 17237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17238 ;; Tracked objects:
 17239 ;;		On entry : 1F/0
 17240 ;;		On exit  : 14/4
 17241 ;;		Unchanged: 0/0
 17242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17245 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17246 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17247 ;;Total ram usage:        7 bytes
 17248 ;; Hardware stack levels used:    1
 17249 ;; Hardware stack levels required when called:    1
 17250 ;; This function calls:
 17251 ;;		_pwm1_load_duty
 17252 ;;		_pwm3_load_duty
 17253 ;;		_pwm4_load_duty
 17254 ;;		_pwm5_load_duty
 17255 ;; This function is called by:
 17256 ;;		_led_process
 17257 ;; This function uses a non-reentrant model
 17258 ;;
 17259                           
 17260                           
 17261                           ;psect for function _led_ramp
 17262  1F6B                     _led_ramp:	
 17263  1F6B                     i1l4101:	
 17264                           ;incstack = 0
 17265                           ; Regs used in _led_ramp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17266                           
 17267                           
 17268                           ;app_led.c: 480: for(uint8_t i = 0; i < 4; i++)
 17269  1F6B  01FA               	clrf	led_ramp@i
 17270  1F6C                     i1l4107:	
 17271                           
 17272                           ;app_led.c: 481: {
 17273                           ;app_led.c: 482: if(current_bright[i] + 4 < target_bright[i])
 17274  1F6C  357A               	lslf	led_ramp@i,w
 17275  1F6D  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 17276  1F6E  27BE  319F         	fcall	PL100	;call to abstracted procedure
 17277  1F70  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 17278  1F71  27AC  319F         	fcall	PL36	;call to abstracted procedure
 17279  1F73  1803               	skipnc
 17280  1F74  2F7C               	goto	i1l4111
 17281                           
 17282                           ;app_led.c: 483: {
 17283                           ;app_led.c: 484: current_bright[i] += 4;
 17284  1F75  27C6  319F         	fcall	PL140	;call to abstracted procedure
 17285  1F77  0781               	addwf	1,f
 17286  1F78  3141               	addfsr 1,1
 17287  1F79  1803               	skipnc
 17288  1F7A  0A81               	incf	1,f
 17289                           
 17290                           ;app_led.c: 485: }
 17291  1F7B  2F97               	goto	i1l4117
 17292  1F7C                     i1l4111:	
 17293                           
 17294                           ;app_led.c: 486: else if(current_bright[i] > target_bright[i] + 4)
 17295  1F7C  357A               	lslf	led_ramp@i,w
 17296  1F7D  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 17297  1F7E  27BE  319F         	fcall	PL100	;call to abstracted procedure
 17298  1F80  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 17299  1F81  27AC  319F         	fcall	PL36	;call to abstracted procedure
 17300  1F83  1803               	skipnc
 17301  1F84  2F8D               	goto	i1l4115
 17302                           
 17303                           ;app_led.c: 487: {
 17304                           ;app_led.c: 488: current_bright[i] -= 4;
 17305  1F85  27C6  319F         	fcall	PL140	;call to abstracted procedure
 17306  1F87  0281               	subwf	1,f
 17307  1F88  3000               	movlw	0
 17308  1F89  3141               	addfsr 1,1
 17309  1F8A  3B81               	subwfb	1,f
 17310  1F8B  317F               	addfsr 1,-1
 17311                           
 17312                           ;app_led.c: 489: }
 17313  1F8C  2F97               	goto	i1l4117
 17314  1F8D                     i1l4115:	
 17315                           
 17316                           ;app_led.c: 490: else
 17317                           ;app_led.c: 491: {
 17318                           ;app_led.c: 492: current_bright[i] = target_bright[i];
 17319  1F8D  357A               	lslf	led_ramp@i,w
 17320  1F8E  3E55               	addlw	(low (_target_bright| 0))& (0+255)
 17321  1F8F  0086               	movwf	6
 17322  1F90  0187               	clrf	7
 17323  1F91  357A               	lslf	led_ramp@i,w
 17324  1F92  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 17325  1F93  0084               	movwf	4
 17326  1F94  318F  27FA  319F   	fcall	PL6	;call to abstracted procedure
 17327  1F97                     i1l4117:	
 17328                           
 17329                           ;app_led.c: 493: }
 17330                           ;app_led.c: 494: led_load_duty[i](current_bright[i]);
 17331  1F97  357A               	lslf	led_ramp@i,w
 17332  1F98  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 17333  1F99  0086               	movwf	6
 17334  1F9A  0187               	clrf	7
 17335  1F9B  3F40               	moviw [0]fsr1
 17336  1F9C  00F0               	movwf	pwm5_load_duty@value
 17337  1F9D  3F41               	moviw [1]fsr1
 17338  1F9E  00F1               	movwf	pwm5_load_duty@value+1
 17339  1F9F  357A               	lslf	led_ramp@i,w
 17340  1FA0  3E3D               	addlw	(low (_led_load_duty| (0+256)))& (0+255)
 17341  1FA1  27DB               	fcall	PL150	;call to abstracted procedure
 17342  1FA2  008A               	movwf	10
 17343  1FA3  3F40               	moviw [0]fsr1
 17344  1FA4  000A               	callw
 17345  1FA5  3004               	movlw	4
 17346  1FA6  319F               	pagesel	$
 17347  1FA7  0AFA               	incf	led_ramp@i,f
 17348  1FA8  027A               	subwf	led_ramp@i,w
 17349  1FA9  1803               	btfsc	3,0
 17350  1FAA  0008               	return
 17351  1FAB  2F6C               	goto	i1l4107
 17352  1FAC                     __end_of_led_ramp:	
 17353  1FAC                     PL36:	
 17354  1FAC  0086               	movwf	6
 17355  1FAD  3F40               	moviw [0]fsr1
 17356  1FAE  00F6               	movwf	??_led_ramp+2
 17357  1FAF  3F41               	moviw [1]fsr1
 17358  1FB0  00F7               	movwf	??_led_ramp+3
 17359  1FB1  0876               	movf	??_led_ramp+2,w
 17360  1FB2  3E04               	addlw	4
 17361  1FB3  00F8               	movwf	??_led_ramp+4
 17362  1FB4  3000               	movlw	0
 17363  1FB5  3D77               	addwfc	??_led_ramp+3,w
 17364  1FB6  00F9               	movwf	??_led_ramp+5
 17365  1FB7  0875               	movf	??_led_ramp+1,w
 17366  1FB8  0279               	subwf	??_led_ramp+5,w
 17367  1FB9  1D03               	skipz
 17368  1FBA  0008               	return
 17369  1FBB  0874               	movf	??_led_ramp,w
 17370  1FBC  0278               	subwf	??_led_ramp+4,w
 17371  1FBD  0008               	return
 17372  1FBE                     __end_ofPL36:	
 17373  1FBE                     PL100:	
 17374  1FBE  0086               	movwf	6
 17375  1FBF  0187               	clrf	7
 17376  1FC0  3F40               	moviw [0]fsr1
 17377  1FC1  00F4               	movwf	??_led_ramp
 17378  1FC2  3F41               	moviw [1]fsr1
 17379  1FC3  00F5               	movwf	??_led_ramp+1
 17380  1FC4  357A               	lslf	led_ramp@i,w
 17381  1FC5  0008               	return
 17382  1FC6                     __end_ofPL100:	
 17383  1FC6                     PL140:	
 17384  1FC6  357A               	lslf	led_ramp@i,w
 17385  1FC7  3ED7               	addlw	(low (_current_bright| 0))& (0+255)
 17386  1FC8  0086               	movwf	6
 17387  1FC9  3004               	movlw	4
 17388  1FCA  0187               	clrf	7
 17389  1FCB  0008               	return
 17390  1FCC                     __end_ofPL140:	
 17391  1FCC                     __ptext93:	
 17392 ;; *************** function _led_touch_cb *****************
 17393 ;; Defined at:
 17394 ;;		line 998 in file "src/app_led.c"
 17395 ;; Parameters:    Size  Location     Type
 17396 ;;  key             1   11[COMMON] unsigned char 
 17397 ;;  state           1   12[COMMON] enum E8242
 17398 ;; Auto vars:     Size  Location     Type
 17399 ;;		None
 17400 ;; Return value:  Size  Location     Type
 17401 ;;                  1    wreg      void 
 17402 ;; Registers used:
 17403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17404 ;; Tracked objects:
 17405 ;;		On entry : 1F/1
 17406 ;;		On exit  : 1E/0
 17407 ;;		Unchanged: 0/0
 17408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17412 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17413 ;;Total ram usage:        2 bytes
 17414 ;; Hardware stack levels used:    1
 17415 ;; Hardware stack levels required when called:    3
 17416 ;; This function calls:
 17417 ;;		_led_state_ble_cb
 17418 ;;		_led_state_day_cb
 17419 ;;		_led_state_night_cb
 17420 ;;		_led_state_off_cb
 17421 ;; This function is called by:
 17422 ;;		_app_init
 17423 ;;		_key_action
 17424 ;; This function uses a non-reentrant model
 17425 ;;
 17426                           
 17427                           
 17428                           ;psect for function _led_touch_cb
 17429  1FCC                     _led_touch_cb:	
 17430                           
 17431                           ;app_led.c: 1000: led_state_cb[m_led_para.mState](key, state);
 17432                           
 17433                           ;incstack = 0
 17434                           ; Regs used in _led_touch_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17435  1FCC  087B               	movf	led_touch_cb@key,w
 17436  1FCD  00F9               	movwf	led_state_ble_cb@key
 17437  1FCE  087C               	movf	led_touch_cb@state,w
 17438  1FCF  00FA               	movwf	led_state_ble_cb@state
 17439  1FD0  318B  2381  319F   	fcall	PL14	;call to abstracted procedure
 17440  1FD3  0709               	addwf	9,w
 17441  1FD4  3E45               	addlw	(low (_led_state_cb| (0+256)))& (0+255)
 17442  1FD5  27DB               	fcall	PL150	;call to abstracted procedure
 17443  1FD6  008A               	movwf	10
 17444  1FD7  3F40               	moviw [0]fsr1
 17445  1FD8  000A               	callw
 17446  1FD9  319F               	pagesel	$
 17447  1FDA  0008               	return
 17448  1FDB                     __end_of_led_touch_cb:	
 17449  1FDB                     PL150:	
 17450  1FDB  0086               	movwf	6
 17451  1FDC  3001               	movlw	1	; select bank2/3
 17452  1FDD  0087               	movwf	7
 17453  1FDE  3F41               	moviw [1]fsr1
 17454  1FDF  0008               	return
 17455  1FE0                     __end_ofPL150:	
 17456                           
 17457                           	psect	text86
 17458  1001                     __ptext86:	
 17459 ;; *************** function _pwm4_load_duty *****************
 17460 ;; Defined at:
 17461 ;;		line 84 in file "src/drv_pwm.c"
 17462 ;; Parameters:    Size  Location     Type
 17463 ;;  value           2    0[COMMON] unsigned int 
 17464 ;; Auto vars:     Size  Location     Type
 17465 ;;		None
 17466 ;; Return value:  Size  Location     Type
 17467 ;;                  1    wreg      void 
 17468 ;; Registers used:
 17469 ;;		wreg
 17470 ;; Tracked objects:
 17471 ;;		On entry : 10/0
 17472 ;;		On exit  : 1F/6
 17473 ;;		Unchanged: 0/0
 17474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17479 ;;Total ram usage:        2 bytes
 17480 ;; Hardware stack levels used:    1
 17481 ;; This function calls:
 17482 ;;		Nothing
 17483 ;; This function is called by:
 17484 ;;		_led_ramp
 17485 ;; This function uses a non-reentrant model
 17486 ;;
 17487                           
 17488                           
 17489                           ;psect for function _pwm4_load_duty
 17490  1001                     _pwm4_load_duty:	
 17491                           
 17492                           ;drv_pwm.c: 87: CCPR4H = value >> 8;
 17493                           
 17494                           ;incstack = 0
 17495                           ; Regs used in _pwm4_load_duty: [wreg]
 17496  1001  0871               	movf	pwm4_load_duty@value+1,w
 17497  1002  0026               	movlb	6	; select bank6
 17498  1003  0096               	movwf	22	;volatile
 17499                           
 17500                           ;drv_pwm.c: 88: CCPR4L = value;
 17501  1004  0870               	movf	pwm4_load_duty@value,w
 17502  1005  0095               	movwf	21	;volatile
 17503  1006  0008               	return
 17504  1007                     __end_of_pwm4_load_duty:	
 17505                           
 17506                           	psect	text87
 17507  1DBE                     __ptext87:	
 17508 ;; *************** function _pwm3_load_duty *****************
 17509 ;; Defined at:
 17510 ;;		line 62 in file "src/drv_pwm.c"
 17511 ;; Parameters:    Size  Location     Type
 17512 ;;  value           2    0[COMMON] unsigned int 
 17513 ;; Auto vars:     Size  Location     Type
 17514 ;;		None
 17515 ;; Return value:  Size  Location     Type
 17516 ;;                  1    wreg      void 
 17517 ;; Registers used:
 17518 ;;		wreg
 17519 ;; Tracked objects:
 17520 ;;		On entry : 10/0
 17521 ;;		On exit  : 1F/6
 17522 ;;		Unchanged: 0/0
 17523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17528 ;;Total ram usage:        2 bytes
 17529 ;; Hardware stack levels used:    1
 17530 ;; This function calls:
 17531 ;;		Nothing
 17532 ;; This function is called by:
 17533 ;;		_led_ramp
 17534 ;; This function uses a non-reentrant model
 17535 ;;
 17536                           
 17537                           
 17538                           ;psect for function _pwm3_load_duty
 17539  1DBE                     _pwm3_load_duty:	
 17540                           
 17541                           ;drv_pwm.c: 65: CCPR3H = value >> 8;
 17542                           
 17543                           ;incstack = 0
 17544                           ; Regs used in _pwm3_load_duty: [wreg]
 17545  1DBE  0871               	movf	pwm3_load_duty@value+1,w
 17546  1DBF  0026               	movlb	6	; select bank6
 17547  1DC0  0092               	movwf	18	;volatile
 17548                           
 17549                           ;drv_pwm.c: 66: CCPR3L = value;
 17550  1DC1  0870               	movf	pwm3_load_duty@value,w
 17551  1DC2  0091               	movwf	17	;volatile
 17552  1DC3  0008               	return
 17553  1DC4                     __end_of_pwm3_load_duty:	
 17554                           
 17555                           	psect	text88
 17556  1DB8                     __ptext88:	
 17557 ;; *************** function _pwm1_load_duty *****************
 17558 ;; Defined at:
 17559 ;;		line 18 in file "src/drv_pwm.c"
 17560 ;; Parameters:    Size  Location     Type
 17561 ;;  value           2    0[COMMON] unsigned int 
 17562 ;; Auto vars:     Size  Location     Type
 17563 ;;		None
 17564 ;; Return value:  Size  Location     Type
 17565 ;;                  1    wreg      void 
 17566 ;; Registers used:
 17567 ;;		wreg
 17568 ;; Tracked objects:
 17569 ;;		On entry : 10/0
 17570 ;;		On exit  : 1F/5
 17571 ;;		Unchanged: 0/0
 17572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17577 ;;Total ram usage:        2 bytes
 17578 ;; Hardware stack levels used:    1
 17579 ;; This function calls:
 17580 ;;		Nothing
 17581 ;; This function is called by:
 17582 ;;		_led_ramp
 17583 ;; This function uses a non-reentrant model
 17584 ;;
 17585                           
 17586                           
 17587                           ;psect for function _pwm1_load_duty
 17588  1DB8                     _pwm1_load_duty:	
 17589                           
 17590                           ;drv_pwm.c: 21: CCPR1H = value>>8;
 17591                           
 17592                           ;incstack = 0
 17593                           ; Regs used in _pwm1_load_duty: [wreg]
 17594  1DB8  0871               	movf	pwm1_load_duty@value+1,w
 17595  1DB9  0025               	movlb	5	; select bank5
 17596  1DBA  0092               	movwf	18	;volatile
 17597                           
 17598                           ;drv_pwm.c: 22: CCPR1L = value;
 17599  1DBB  0870               	movf	pwm1_load_duty@value,w
 17600  1DBC  0091               	movwf	17	;volatile
 17601  1DBD  0008               	return
 17602  1DBE                     __end_of_pwm1_load_duty:	
 17603                           
 17604                           	psect	text89
 17605  07EC                     __ptext89:	
 17606 ;; *************** function _pwm5_load_duty *****************
 17607 ;; Defined at:
 17608 ;;		line 99 in file "src/drv_pwm.c"
 17609 ;; Parameters:    Size  Location     Type
 17610 ;;  value           2    0[COMMON] unsigned int 
 17611 ;; Auto vars:     Size  Location     Type
 17612 ;;		None
 17613 ;; Return value:  Size  Location     Type
 17614 ;;                  1    wreg      void 
 17615 ;; Registers used:
 17616 ;;		wreg, status,2, status,0
 17617 ;; Tracked objects:
 17618 ;;		On entry : 10/0
 17619 ;;		On exit  : 1F/C
 17620 ;;		Unchanged: 0/0
 17621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17624 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17625 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17626 ;;Total ram usage:        4 bytes
 17627 ;; Hardware stack levels used:    1
 17628 ;; This function calls:
 17629 ;;		Nothing
 17630 ;; This function is called by:
 17631 ;;		_led_ramp
 17632 ;; This function uses a non-reentrant model
 17633 ;;
 17634                           
 17635                           
 17636                           ;psect for function _pwm5_load_duty
 17637  07EC                     _pwm5_load_duty:	
 17638                           
 17639                           ;drv_pwm.c: 102: PWM5DCH = value >> 2;
 17640                           
 17641                           ;incstack = 0
 17642                           ; Regs used in _pwm5_load_duty: [wreg+status,2+status,0]
 17643  07EC  0871               	movf	pwm5_load_duty@value+1,w
 17644  07ED  00F3               	movwf	??_pwm5_load_duty+1
 17645  07EE  0870               	movf	pwm5_load_duty@value,w
 17646  07EF  00F2               	movwf	??_pwm5_load_duty
 17647  07F0  36F3               	lsrf	??_pwm5_load_duty+1,f
 17648  07F1  0CF2               	rrf	??_pwm5_load_duty,f
 17649  07F2  36F3               	lsrf	??_pwm5_load_duty+1,f
 17650  07F3  0CF2               	rrf	??_pwm5_load_duty,f
 17651  07F4  0872               	movf	??_pwm5_load_duty,w
 17652  07F5  002C               	movlb	12	; select bank12
 17653  07F6  0098               	movwf	24	;volatile
 17654                           
 17655                           ;drv_pwm.c: 103: PWM5DCL = value << 6;
 17656  07F7  0870               	movf	pwm5_load_duty@value,w
 17657  07F8  00F2               	movwf	??_pwm5_load_duty
 17658  07F9  0CF2               	rrf	??_pwm5_load_duty,f
 17659  07FA  0CF2               	rrf	??_pwm5_load_duty,f
 17660  07FB  0C72               	rrf	??_pwm5_load_duty,w
 17661  07FC  39C0               	andlw	192
 17662  07FD  0097               	movwf	23	;volatile
 17663  07FE  0008               	return
 17664  07FF                     __end_of_pwm5_load_duty:	
 17665                           
 17666                           	psect	text95
 17667  1E27                     __ptext95:	
 17668 ;; *************** function _led_state_night_cb *****************
 17669 ;; Defined at:
 17670 ;;		line 936 in file "src/app_led.c"
 17671 ;; Parameters:    Size  Location     Type
 17672 ;;  key             1    9[COMMON] unsigned char 
 17673 ;;  state           1   10[COMMON] enum E8242
 17674 ;; Auto vars:     Size  Location     Type
 17675 ;;		None
 17676 ;; Return value:  Size  Location     Type
 17677 ;;                  1    wreg      void 
 17678 ;; Registers used:
 17679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17680 ;; Tracked objects:
 17681 ;;		On entry : 1F/1
 17682 ;;		On exit  : 1E/0
 17683 ;;		Unchanged: 0/0
 17684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17689 ;;Total ram usage:        2 bytes
 17690 ;; Hardware stack levels used:    1
 17691 ;; Hardware stack levels required when called:    2
 17692 ;; This function calls:
 17693 ;;		_led_state_night_cont_press_cb
 17694 ;;		_led_state_night_long_press_cb
 17695 ;;		_led_state_night_release_cb
 17696 ;;		_led_state_night_short_press_cb
 17697 ;; This function is called by:
 17698 ;;		_led_touch_cb
 17699 ;; This function uses a non-reentrant model
 17700 ;;
 17701                           
 17702                           
 17703                           ;psect for function _led_state_night_cb
 17704  1E27                     _led_state_night_cb:	
 17705                           
 17706                           ;app_led.c: 938: if(key == 0x01)
 17707                           
 17708                           ;incstack = 0
 17709                           ; Regs used in _led_state_night_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17710  1E27  0B79               	decfsz	led_state_night_cb@key,w
 17711  1E28  0008               	return
 17712  1E29  087A               	movf	led_state_night_cb@state,w
 17713                           
 17714                           ; Switch size 1, requested type "space"
 17715                           ; Number of cases is 4, Range of values is 0 to 3
 17716                           ; switch strategies available:
 17717                           ; Name         Instructions Cycles
 17718                           ; simple_byte           13     7 (average)
 17719                           ; direct_byte           14     6 (fixed)
 17720                           ; jumptable            260     6 (fixed)
 17721                           ;	Chosen strategy is simple_byte
 17722  1E2A  3A00               	xorlw	0	; case 0
 17723  1E2B  1903               	skipnz
 17724  1E2C  2E37               	goto	i1l3907
 17725  1E2D  3A01               	xorlw	1	; case 1
 17726  1E2E  1903               	skipnz
 17727  1E2F  2E39               	goto	i1l3909
 17728  1E30  3A03               	xorlw	3	; case 2
 17729  1E31  1903               	skipnz
 17730  1E32  2E3A               	goto	i1l3911
 17731  1E33  3A01               	xorlw	1	; case 3
 17732  1E34  1903               	skipnz
 17733  1E35  2E3C               	goto	i1l3913
 17734  1E36  2E3D               	goto	i1l843
 17735  1E37                     i1l3907:	
 17736                           
 17737                           ;app_led.c: 943: led_state_night_short_press_cb();
 17738  1E37  318A  2A16         	ljmp	i1l3841
 17739  1E39                     i1l3909:	
 17740                           ;app_led.c: 944: break;
 17741                           
 17742                           
 17743                           ;app_led.c: 946: led_state_night_long_press_cb();
 17744  1E39  2E3F               	ljmp	i1l3731
 17745  1E3A                     i1l3911:	
 17746                           ;app_led.c: 947: break;
 17747                           
 17748                           
 17749                           ;app_led.c: 949: led_state_night_cont_press_cb();
 17750  1E3A  318A  2A4A         	ljmp	i1l3853
 17751  1E3C                     i1l3913:	
 17752                           ;app_led.c: 950: break;
 17753                           
 17754                           
 17755                           ;app_led.c: 952: led_state_night_release_cb();
 17756  1E3C  2E61               	ljmp	i1l3861
 17757  1E3D                     i1l843:	
 17758  1E3D  0008               	return
 17759  1E3E                     __end_of_led_state_night_cb:	
 17760  1E3E                     __ptext106:	
 17761 ;; *************** function _led_state_night_long_press_cb *****************
 17762 ;; Defined at:
 17763 ;;		line 913 in file "src/app_led.c"
 17764 ;; Parameters:    Size  Location     Type
 17765 ;;		None
 17766 ;; Auto vars:     Size  Location     Type
 17767 ;;		None
 17768 ;; Return value:  Size  Location     Type
 17769 ;;                  1    wreg      void 
 17770 ;; Registers used:
 17771 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17772 ;; Tracked objects:
 17773 ;;		On entry : 1F/1
 17774 ;;		On exit  : 1E/0
 17775 ;;		Unchanged: 0/0
 17776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17781 ;;Total ram usage:        0 bytes
 17782 ;; Hardware stack levels used:    1
 17783 ;; Hardware stack levels required when called:    1
 17784 ;; This function calls:
 17785 ;;		_led_update_night_status
 17786 ;; This function is called by:
 17787 ;;		_led_state_night_cb
 17788 ;; This function uses a non-reentrant model
 17789 ;;
 17790                           
 17791                           
 17792                           ;psect for function _led_state_night_long_press_cb
 17793  1E3E                     _led_state_night_long_press_cb:	
 17794                           
 17795                           ;app_led.c: 915: led_update_night_status();
 17796                           
 17797                           ;incstack = 0
 17798                           ; Regs used in _led_state_night_long_press_cb: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
 17799  1E3E  2E3F               	ljmp	i1l3731
 17800  1E3F                     __end_of_led_state_night_long_press_cb:	
 17801  1E3F                     __ptext107:	
 17802 ;; *************** function _led_update_night_status *****************
 17803 ;; Defined at:
 17804 ;;		line 780 in file "src/app_led.c"
 17805 ;; Parameters:    Size  Location     Type
 17806 ;;		None
 17807 ;; Auto vars:     Size  Location     Type
 17808 ;;		None
 17809 ;; Return value:  Size  Location     Type
 17810 ;;                  1    wreg      void 
 17811 ;; Registers used:
 17812 ;;		wreg, fsr1l, fsr1h
 17813 ;; Tracked objects:
 17814 ;;		On entry : 1F/1
 17815 ;;		On exit  : 1E/0
 17816 ;;		Unchanged: 0/0
 17817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17820 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17822 ;;Total ram usage:        2 bytes
 17823 ;; Hardware stack levels used:    1
 17824 ;; This function calls:
 17825 ;;		Nothing
 17826 ;; This function is called by:
 17827 ;;		_led_state_night_long_press_cb
 17828 ;; This function uses a non-reentrant model
 17829 ;;
 17830                           
 17831                           
 17832                           ;psect for function _led_update_night_status
 17833  1E3F                     _led_update_night_status:	
 17834  1E3F                     i1l3731:	
 17835                           ;incstack = 0
 17836                           ; Regs used in _led_update_night_status: [wregfsr1]
 17837                           
 17838                           
 17839                           ;app_led.c: 782: if(m_led_para.blue_bright > 1000 - 200)
 17840  1E3F  318E  26D9  319E   	fcall	PL24	;call to abstracted procedure
 17841  1E42  3F40               	moviw [0]fsr1
 17842  1E43  00F0               	movwf	??_led_update_night_status
 17843  1E44  3F41               	moviw [1]fsr1
 17844  1E45  00F1               	movwf	??_led_update_night_status+1
 17845  1E46  3003               	movlw	3
 17846  1E47  0271               	subwf	??_led_update_night_status+1,w
 17847  1E48  3021               	movlw	33
 17848  1E49  1903               	skipnz
 17849  1E4A  0270               	subwf	??_led_update_night_status,w
 17850  1E4B  1C03               	skipc
 17851  1E4C  2E50               	goto	i1l3735
 17852                           
 17853                           ;app_led.c: 783: {
 17854                           ;app_led.c: 784: led_run_para.mNr = 0;
 17855  1E4D  0020               	movlb	0	; select bank0
 17856  1E4E  125D               	bcf	_led_run_para,4
 17857                           
 17858                           ;app_led.c: 785: }
 17859  1E4F  0008               	return
 17860  1E50                     i1l3735:	
 17861                           
 17862                           ;app_led.c: 786: else if(m_led_para.blue_bright < 200)
 17863  1E50  318E  26D9  319E   	fcall	PL24	;call to abstracted procedure
 17864  1E53  3F40               	moviw [0]fsr1
 17865  1E54  00F0               	movwf	??_led_update_night_status
 17866  1E55  3F41               	moviw [1]fsr1
 17867  1E56  00F1               	movwf	??_led_update_night_status+1
 17868  1E57  3000               	movlw	0
 17869  1E58  0271               	subwf	??_led_update_night_status+1,w
 17870  1E59  30C8               	movlw	200
 17871  1E5A  1903               	skipnz
 17872  1E5B  0270               	subwf	??_led_update_night_status,w
 17873  1E5C  1803               	skipnc
 17874  1E5D  0008               	return
 17875                           
 17876                           ;app_led.c: 787: {
 17877                           ;app_led.c: 788: led_run_para.mNr = 1;
 17878  1E5E  0020               	movlb	0	; select bank0
 17879  1E5F  165D               	bsf	_led_run_para,4
 17880  1E60  0008               	return
 17881  1E61                     __end_of_led_update_night_status:	
 17882  1E61                     __ptext105:	
 17883 ;; *************** function _led_state_night_release_cb *****************
 17884 ;; Defined at:
 17885 ;;		line 931 in file "src/app_led.c"
 17886 ;; Parameters:    Size  Location     Type
 17887 ;;		None
 17888 ;; Auto vars:     Size  Location     Type
 17889 ;;		None
 17890 ;; Return value:  Size  Location     Type
 17891 ;;                  1    wreg      void 
 17892 ;; Registers used:
 17893 ;;		wreg, status,2, status,0, pclath, cstack
 17894 ;; Tracked objects:
 17895 ;;		On entry : 1F/1
 17896 ;;		On exit  : 1F/0
 17897 ;;		Unchanged: 0/0
 17898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17903 ;;Total ram usage:        0 bytes
 17904 ;; Hardware stack levels used:    1
 17905 ;; Hardware stack levels required when called:    1
 17906 ;; This function calls:
 17907 ;;		i1_led_prepare_to_save
 17908 ;; This function is called by:
 17909 ;;		_led_state_night_cb
 17910 ;; This function uses a non-reentrant model
 17911 ;;
 17912                           
 17913                           
 17914                           ;psect for function _led_state_night_release_cb
 17915  1E61                     _led_state_night_release_cb:	
 17916  1E61                     i1l3861:	
 17917                           ;incstack = 0
 17918                           ; Regs used in _led_state_night_release_cb: [wreg+status,2+status,0+pclath+cstack]
 17919                           
 17920                           
 17921                           ;app_led.c: 933: led_prepare_to_save();
 17922  1E61  318B  2350         	fcall	i1_led_prepare_to_save
 17923  1E63  0008               	return
 17924  1E64                     __end_of_led_state_night_release_cb:	
 17925                           
 17926                           	psect	text126
 17927  1DC4                     __ptext126:	
 17928 ;; *************** function _tmr0_isr *****************
 17929 ;; Defined at:
 17930 ;;		line 29 in file "src/drv_tmr.c"
 17931 ;; Parameters:    Size  Location     Type
 17932 ;;		None
 17933 ;; Auto vars:     Size  Location     Type
 17934 ;;		None
 17935 ;; Return value:  Size  Location     Type
 17936 ;;                  1    wreg      void 
 17937 ;; Registers used:
 17938 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17939 ;; Tracked objects:
 17940 ;;		On entry : 1F/0
 17941 ;;		On exit  : 0/0
 17942 ;;		Unchanged: 0/0
 17943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17948 ;;Total ram usage:        0 bytes
 17949 ;; Hardware stack levels used:    1
 17950 ;; Hardware stack levels required when called:    3
 17951 ;; This function calls:
 17952 ;;		Absolute function
 17953 ;;		_rtc_process
 17954 ;; This function is called by:
 17955 ;;		_app_isr
 17956 ;; This function uses a non-reentrant model
 17957 ;;
 17958                           
 17959                           
 17960                           ;psect for function _tmr0_isr
 17961  1DC4                     _tmr0_isr:	
 17962                           
 17963                           ;drv_tmr.c: 31: PIR0bits.TMR0IF = 0;
 17964                           
 17965                           ;incstack = 0
 17966                           ; Regs used in _tmr0_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17967  1DC4  1290               	bcf	16,5	;volatile
 17968                           
 17969                           ;drv_tmr.c: 32: if(tmr0_isr_cb != (0))
 17970  1DC5  0021               	movlb	1	; select bank1
 17971  1DC6  086C               	movf	_tmr0_isr_cb^(0+128),w
 17972  1DC7  046D               	iorwf	(_tmr0_isr_cb+1)^(0+128),w
 17973  1DC8  1903               	btfsc	3,2
 17974  1DC9  0008               	return
 17975                           
 17976                           ;drv_tmr.c: 33: {
 17977                           ;drv_tmr.c: 34: tmr0_isr_cb();
 17978  1DCA  086D               	movf	(_tmr0_isr_cb+1)^(0+128),w
 17979  1DCB  008A               	movwf	10
 17980  1DCC  086C               	movf	_tmr0_isr_cb^(0+128),w
 17981  1DCD  000A               	callw
 17982  1DCE  319D               	pagesel	$
 17983  1DCF  0008               	return
 17984  1DD0                     __end_of_tmr0_isr:	
 17985                           
 17986                           	psect	text127
 17987  103C                     __ptext127:	
 17988 ;; *************** function _rtc_process *****************
 17989 ;; Defined at:
 17990 ;;		line 52 in file "src/app_rtc.c"
 17991 ;; Parameters:    Size  Location     Type
 17992 ;;		None
 17993 ;; Auto vars:     Size  Location     Type
 17994 ;;		None
 17995 ;; Return value:  Size  Location     Type
 17996 ;;                  1    wreg      void 
 17997 ;; Registers used:
 17998 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17999 ;; Tracked objects:
 18000 ;;		On entry : 1F/1
 18001 ;;		On exit  : 1F/0
 18002 ;;		Unchanged: 0/0
 18003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18008 ;;Total ram usage:        0 bytes
 18009 ;; Hardware stack levels used:    1
 18010 ;; Hardware stack levels required when called:    2
 18011 ;; This function calls:
 18012 ;;		_rtc_is_leap_year
 18013 ;; This function is called by:
 18014 ;;		_app_init
 18015 ;;		_tmr0_isr
 18016 ;; This function uses a non-reentrant model
 18017 ;;
 18018                           
 18019                           
 18020                           ;psect for function _rtc_process
 18021  103C                     _rtc_process:	
 18022  103C  303C               	movlw	60
 18023                           
 18024                           ;app_rtc.c: 54: m_current_time.second++;
 18025                           
 18026                           ;incstack = 0
 18027                           ; Regs used in _rtc_process: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18028  103D  0AE5               	incf	(_m_current_time^(0+128)+6),f
 18029                           
 18030                           ;app_rtc.c: 55: if(m_current_time.second >= 60)
 18031  103E  0265               	subwf	(_m_current_time^(0+128)+6),w
 18032  103F  1C03               	skipc
 18033  1040  2882               	goto	i1l4961
 18034  1041  303C               	movlw	60
 18035                           
 18036                           ;app_rtc.c: 56: {
 18037                           ;app_rtc.c: 57: m_current_time.second = 0;
 18038  1042  01E5               	clrf	(_m_current_time^(0+128)+6)
 18039                           
 18040                           ;app_rtc.c: 58: m_current_time.minute++;
 18041  1043  0AE4               	incf	(_m_current_time^(0+128)+5),f
 18042                           
 18043                           ;app_rtc.c: 59: if(m_current_time.minute >= 60)
 18044  1044  0264               	subwf	(_m_current_time^(0+128)+5),w
 18045  1045  1C03               	skipc
 18046  1046  2882               	goto	i1l4961
 18047  1047  3018               	movlw	24
 18048                           
 18049                           ;app_rtc.c: 60: {
 18050                           ;app_rtc.c: 61: m_current_time.minute = 0;
 18051  1048  01E4               	clrf	(_m_current_time^(0+128)+5)
 18052                           
 18053                           ;app_rtc.c: 62: m_current_time.hour++;
 18054  1049  0AE3               	incf	(_m_current_time^(0+128)+4),f
 18055                           
 18056                           ;app_rtc.c: 63: if(m_current_time.hour >= 24)
 18057  104A  0263               	subwf	(_m_current_time^(0+128)+4),w
 18058  104B  1C03               	skipc
 18059  104C  2882               	goto	i1l4961
 18060  104D  3007               	movlw	7
 18061                           
 18062                           ;app_rtc.c: 64: {
 18063                           ;app_rtc.c: 65: m_current_time.hour = 0;
 18064  104E  01E3               	clrf	(_m_current_time^(0+128)+4)
 18065                           
 18066                           ;app_rtc.c: 66: m_current_time.day++;
 18067  104F  0AE1               	incf	(_m_current_time^(0+128)+2),f
 18068                           
 18069                           ;app_rtc.c: 67: m_current_time.week++;
 18070  1050  0AE2               	incf	(_m_current_time^(0+128)+3),f
 18071                           
 18072                           ;app_rtc.c: 68: if(m_current_time.week > 6)
 18073  1051  0262               	subwf	(_m_current_time^(0+128)+3),w
 18074  1052  1803               	btfsc	3,0
 18075                           
 18076                           ;app_rtc.c: 69: {
 18077                           ;app_rtc.c: 70: m_current_time.week = 0;
 18078  1053  01E2               	clrf	(_m_current_time^(0+128)+3)
 18079                           
 18080                           ;app_rtc.c: 71: }
 18081                           ;app_rtc.c: 72: if(rtc_is_leap_year(m_current_time.year + 2000))
 18082  1054  085F               	movf	_m_current_time^(0+128),w
 18083  1055  00F5               	movwf	rtc_is_leap_year@year
 18084  1056  30D0               	movlw	208
 18085  1057  01F6               	clrf	rtc_is_leap_year@year+1
 18086  1058  07F5               	addwf	rtc_is_leap_year@year,f
 18087  1059  3007               	movlw	7
 18088  105A  3DF6               	addwfc	rtc_is_leap_year@year+1,f
 18089  105B  2085  3190         	fcall	_rtc_is_leap_year
 18090  105D  3A00               	xorlw	0
 18091  105E  1903               	skipnz
 18092  105F  2862               	goto	i1l4945
 18093                           
 18094                           ;app_rtc.c: 73: {
 18095                           ;app_rtc.c: 74: MONTH_DAY[1] = 29;
 18096  1060  301D               	movlw	29
 18097  1061  2863               	goto	L27
 18098  1062                     i1l4945:	
 18099                           ;app_rtc.c: 75: }
 18100                           
 18101                           
 18102                           ;app_rtc.c: 76: else
 18103                           ;app_rtc.c: 77: {
 18104                           ;app_rtc.c: 78: MONTH_DAY[1] = 28;
 18105  1062  301C               	movlw	28
 18106  1063                     L27:	
 18107  1063  0022               	movlb	2	; select bank2
 18108  1064  00B2               	movwf	(_MONTH_DAY^(0+256)+1)
 18109                           
 18110                           ;app_rtc.c: 79: }
 18111                           ;app_rtc.c: 80: if(m_current_time.month > 12 || m_current_time.month == 0)
 18112  1065  300D               	movlw	13
 18113  1066  0021               	movlb	1	; select bank1
 18114  1067  0260               	subwf	(_m_current_time^(0+128)+1),w
 18115  1068  1803               	skipnc
 18116  1069  286D               	goto	i1l266
 18117  106A  0860               	movf	(_m_current_time^(0+128)+1),w
 18118  106B  1D03               	btfss	3,2
 18119  106C  286F               	goto	i1l4949
 18120  106D                     i1l266:	
 18121                           
 18122                           ;app_rtc.c: 81: {
 18123                           ;app_rtc.c: 82: m_current_time.month = 1;
 18124  106D  01E0               	clrf	(_m_current_time^(0+128)+1)
 18125  106E  0AE0               	incf	(_m_current_time^(0+128)+1),f
 18126  106F                     i1l4949:	
 18127                           
 18128                           ;app_rtc.c: 83: }
 18129                           ;app_rtc.c: 84: if(m_current_time.day > MONTH_DAY[m_current_time.month - 1])
 18130  106F  0860               	movf	(_m_current_time^(0+128)+1),w
 18131  1070  3E30               	addlw	(low ((_MONTH_DAY| (0+256)+255)))& (0+255)
 18132  1071  0086               	movwf	6
 18133  1072  3001               	movlw	1	; select bank2/3
 18134  1073  0087               	movwf	7
 18135  1074  0861               	movf	(_m_current_time^(0+128)+2),w
 18136  1075  0201               	subwf	1,w
 18137  1076  1803               	skipnc
 18138  1077  2882               	goto	i1l4961
 18139  1078  300D               	movlw	13
 18140                           
 18141                           ;app_rtc.c: 85: {
 18142                           ;app_rtc.c: 86: m_current_time.day = 1;
 18143  1079  01E1               	clrf	(_m_current_time^(0+128)+2)
 18144  107A  0AE1               	incf	(_m_current_time^(0+128)+2),f
 18145                           
 18146                           ;app_rtc.c: 87: m_current_time.month++;
 18147  107B  0AE0               	incf	(_m_current_time^(0+128)+1),f
 18148                           
 18149                           ;app_rtc.c: 88: if(m_current_time.month > 12)
 18150  107C  0260               	subwf	(_m_current_time^(0+128)+1),w
 18151  107D  1C03               	skipc
 18152  107E  2882               	goto	i1l4961
 18153                           
 18154                           ;app_rtc.c: 89: {
 18155                           ;app_rtc.c: 90: m_current_time.month = 1;
 18156  107F  01E0               	clrf	(_m_current_time^(0+128)+1)
 18157  1080  0AE0               	incf	(_m_current_time^(0+128)+1),f
 18158                           
 18159                           ;app_rtc.c: 91: m_current_time.year++;
 18160  1081  0ADF               	incf	_m_current_time^(0+128),f
 18161  1082                     i1l4961:	
 18162                           
 18163                           ;app_rtc.c: 92: }
 18164                           ;app_rtc.c: 93: }
 18165                           ;app_rtc.c: 94: }
 18166                           ;app_rtc.c: 95: }
 18167                           ;app_rtc.c: 96: }
 18168                           ;app_rtc.c: 97: rtc_status.fSec = 1;
 18169  1082  0020               	movlb	0	; select bank0
 18170  1083  1465               	bsf	_rtc_status,0
 18171  1084  0008               	return
 18172  1085                     __end_of_rtc_process:	
 18173  1085                     __ptext128:	
 18174 ;; *************** function _rtc_is_leap_year *****************
 18175 ;; Defined at:
 18176 ;;		line 22 in file "src/app_rtc.c"
 18177 ;; Parameters:    Size  Location     Type
 18178 ;;  year            2    5[COMMON] unsigned int 
 18179 ;; Auto vars:     Size  Location     Type
 18180 ;;		None
 18181 ;; Return value:  Size  Location     Type
 18182 ;;                  1    wreg      unsigned char 
 18183 ;; Registers used:
 18184 ;;		wreg, status,2, status,0, pclath, cstack
 18185 ;; Tracked objects:
 18186 ;;		On entry : 1F/1
 18187 ;;		On exit  : 0/0
 18188 ;;		Unchanged: 0/0
 18189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18194 ;;Total ram usage:        2 bytes
 18195 ;; Hardware stack levels used:    1
 18196 ;; Hardware stack levels required when called:    1
 18197 ;; This function calls:
 18198 ;;		___lwmod
 18199 ;; This function is called by:
 18200 ;;		_rtc_process
 18201 ;; This function uses a non-reentrant model
 18202 ;;
 18203                           
 18204                           
 18205                           ;psect for function _rtc_is_leap_year
 18206  1085                     _rtc_is_leap_year:	
 18207                           
 18208                           ;app_rtc.c: 24: if((year & 0x03) == 0)
 18209                           
 18210                           ;incstack = 0
 18211                           ; Regs used in _rtc_is_leap_year: [wreg+status,2+status,0+pclath+cstack]
 18212  1085  0875               	movf	rtc_is_leap_year@year,w
 18213  1086  3903               	andlw	3
 18214  1087  1D03               	btfss	3,2
 18215  1088  3400               	retlw	0
 18216                           
 18217                           ;app_rtc.c: 25: {
 18218                           ;app_rtc.c: 26: if(year % 100 == 0)
 18219  1089  3064               	movlw	100
 18220  108A  00F0               	movwf	___lwmod@divisor
 18221  108B  01F1               	clrf	___lwmod@divisor+1
 18222  108C  20C1  3190         	fcall	PL160	;call to abstracted procedure
 18223  108E  20A1  3190         	fcall	___lwmod
 18224  1090  0870               	movf	?___lwmod,w
 18225  1091  0471               	iorwf	?___lwmod+1,w
 18226  1092  1D03               	btfss	3,2
 18227  1093  3401               	retlw	1
 18228                           
 18229                           ;app_rtc.c: 27: {
 18230                           ;app_rtc.c: 28: if(year % 400 == 0)
 18231  1094  3090               	movlw	144
 18232  1095  00F0               	movwf	___lwmod@divisor
 18233  1096  3001               	movlw	1
 18234  1097  00F1               	movwf	___lwmod@divisor+1
 18235  1098  20C1  3190         	fcall	PL160	;call to abstracted procedure
 18236  109A  20A1  3190         	fcall	___lwmod
 18237  109C  0870               	movf	?___lwmod,w
 18238  109D  0471               	iorwf	?___lwmod+1,w
 18239  109E  1903               	btfsc	3,2
 18240                           
 18241                           ;app_rtc.c: 29: {
 18242                           ;app_rtc.c: 30: return 1;
 18243  109F  3401               	retlw	1
 18244                           
 18245                           ;app_rtc.c: 36: }
 18246                           ;app_rtc.c: 37: }
 18247                           ;app_rtc.c: 38: return 0;
 18248  10A0  3400               	retlw	0
 18249  10A1                     __end_of_rtc_is_leap_year:	
 18250  10A1                     __ptext129:	
 18251 ;; *************** function ___lwmod *****************
 18252 ;; Defined at:
 18253 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwmod.c"
 18254 ;; Parameters:    Size  Location     Type
 18255 ;;  divisor         2    0[COMMON] unsigned int 
 18256 ;;  dividend        2    2[COMMON] unsigned int 
 18257 ;; Auto vars:     Size  Location     Type
 18258 ;;  counter         1    4[COMMON] unsigned char 
 18259 ;; Return value:  Size  Location     Type
 18260 ;;                  2    0[COMMON] unsigned int 
 18261 ;; Registers used:
 18262 ;;		wreg, status,2, status,0
 18263 ;; Tracked objects:
 18264 ;;		On entry : 0/1
 18265 ;;		On exit  : 0/0
 18266 ;;		Unchanged: 0/0
 18267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18271 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18272 ;;Total ram usage:        5 bytes
 18273 ;; Hardware stack levels used:    1
 18274 ;; This function calls:
 18275 ;;		Nothing
 18276 ;; This function is called by:
 18277 ;;		_rtc_is_leap_year
 18278 ;; This function uses a non-reentrant model
 18279 ;;
 18280                           
 18281                           
 18282                           ;psect for function ___lwmod
 18283  10A1                     ___lwmod:	
 18284                           
 18285                           ;incstack = 0
 18286                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 18287  10A1  0870               	movf	___lwmod@divisor,w
 18288  10A2  0471               	iorwf	___lwmod@divisor+1,w
 18289  10A3  1903               	btfsc	3,2
 18290  10A4  28BC               	goto	i1l4237
 18291  10A5  01F4               	clrf	___lwmod@counter
 18292  10A6                     L28:	
 18293  10A6  0AF4               	incf	___lwmod@counter,f
 18294  10A7  1BF1               	btfsc	___lwmod@divisor+1,7
 18295  10A8  28AC               	goto	i1l4229
 18296  10A9  35F0               	lslf	___lwmod@divisor,f
 18297  10AA  0DF1               	rlf	___lwmod@divisor+1,f
 18298  10AB  28A6               	goto	L28
 18299  10AC                     i1l4229:	
 18300  10AC  0871               	movf	___lwmod@divisor+1,w
 18301  10AD  0273               	subwf	___lwmod@dividend+1,w
 18302  10AE  1D03               	skipz
 18303  10AF  28B2               	goto	u318_25
 18304  10B0  0870               	movf	___lwmod@divisor,w
 18305  10B1  0272               	subwf	___lwmod@dividend,w
 18306  10B2                     u318_25:	
 18307  10B2  1C03               	skipc
 18308  10B3  28B8               	goto	i1l4233
 18309  10B4  0870               	movf	___lwmod@divisor,w
 18310  10B5  02F2               	subwf	___lwmod@dividend,f
 18311  10B6  0871               	movf	___lwmod@divisor+1,w
 18312  10B7  3BF3               	subwfb	___lwmod@dividend+1,f
 18313  10B8                     i1l4233:	
 18314  10B8  36F1               	lsrf	___lwmod@divisor+1,f
 18315  10B9  0CF0               	rrf	___lwmod@divisor,f
 18316  10BA  0BF4               	decfsz	___lwmod@counter,f
 18317  10BB  28AC               	goto	i1l4229
 18318  10BC                     i1l4237:	
 18319  10BC  0873               	movf	___lwmod@dividend+1,w
 18320  10BD  00F1               	movwf	?___lwmod+1
 18321  10BE  0872               	movf	___lwmod@dividend,w
 18322  10BF  00F0               	movwf	?___lwmod
 18323  10C0  0008               	return
 18324  10C1                     __end_of___lwmod:	
 18325  10C1                     PL160:	
 18326  10C1  0876               	movf	rtc_is_leap_year@year+1,w
 18327  10C2  00F3               	movwf	___lwmod@dividend+1
 18328  10C3  0875               	movf	rtc_is_leap_year@year,w
 18329  10C4  00F2               	movwf	___lwmod@dividend
 18330  10C5  0008               	return
 18331  10C6                     __end_ofPL160:	
 18332                           
 18333                           	psect	text130
 18334  1E10                     __ptext130:	
 18335 ;; *************** function _eusart_transmit_isr *****************
 18336 ;; Defined at:
 18337 ;;		line 52 in file "src/drv_eusart.c"
 18338 ;; Parameters:    Size  Location     Type
 18339 ;;		None
 18340 ;; Auto vars:     Size  Location     Type
 18341 ;;		None
 18342 ;; Return value:  Size  Location     Type
 18343 ;;                  1    wreg      void 
 18344 ;; Registers used:
 18345 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18346 ;; Tracked objects:
 18347 ;;		On entry : 1F/0
 18348 ;;		On exit  : 1E/0
 18349 ;;		Unchanged: 0/0
 18350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18355 ;;Total ram usage:        0 bytes
 18356 ;; Hardware stack levels used:    1
 18357 ;; This function calls:
 18358 ;;		Nothing
 18359 ;; This function is called by:
 18360 ;;		_app_isr
 18361 ;; This function uses a non-reentrant model
 18362 ;;
 18363                           
 18364                           
 18365                           ;psect for function _eusart_transmit_isr
 18366  1E10                     _eusart_transmit_isr:	
 18367                           
 18368                           ;drv_eusart.c: 54: if(sizeof(tx_buf) > tx_remain)
 18369                           
 18370                           ;incstack = 0
 18371                           ; Regs used in _eusart_transmit_isr: [wreg+fsr1l+fsr1h+status,2+status,0]
 18372  1E10  3040               	movlw	64
 18373  1E11  026C               	subwf	_tx_remain,w
 18374  1E12  1803               	skipnc
 18375  1E13  2E24               	goto	i1l192
 18376                           
 18377                           ;drv_eusart.c: 55: {
 18378                           ;drv_eusart.c: 56: TXREG = tx_buf[tx_tail++];
 18379  1E14  086B               	movf	_tx_tail,w
 18380  1E15  3E20               	addlw	(low (_tx_buf| (0+512)))& (0+255)
 18381  1E16  0086               	movwf	6
 18382  1E17  3002               	movlw	2	; select bank4/5
 18383  1E18  0087               	movwf	7
 18384  1E19  0801               	movf	1,w
 18385  1E1A  0023               	movlb	3	; select bank3
 18386  1E1B  009A               	movwf	26	;volatile
 18387  1E1C  0020               	movlb	0	; select bank0
 18388  1E1D  3040               	movlw	64
 18389  1E1E  0AEB               	incf	_tx_tail,f
 18390                           
 18391                           ;drv_eusart.c: 57: if(sizeof(tx_buf) <= tx_tail)
 18392  1E1F  026B               	subwf	_tx_tail,w
 18393  1E20  1803               	btfsc	3,0
 18394                           
 18395                           ;drv_eusart.c: 58: {
 18396                           ;drv_eusart.c: 59: tx_tail = 0;
 18397  1E21  01EB               	clrf	_tx_tail
 18398                           
 18399                           ;drv_eusart.c: 60: }
 18400                           ;drv_eusart.c: 61: tx_remain++;
 18401  1E22  0AEC               	incf	_tx_remain,f
 18402                           
 18403                           ;drv_eusart.c: 62: }
 18404  1E23  0008               	return
 18405  1E24                     i1l192:	
 18406                           
 18407                           ;drv_eusart.c: 63: else
 18408                           ;drv_eusart.c: 64: {
 18409                           ;drv_eusart.c: 65: PIE1bits.TXIE = 0;
 18410  1E24  0021               	movlb	1	; select bank1
 18411  1E25  1211               	bcf	17,4	;volatile
 18412  1E26  0008               	return
 18413  1E27                     __end_of_eusart_transmit_isr:	
 18414                           
 18415                           	psect	text131
 18416  1DFA                     __ptext131:	
 18417 ;; *************** function _eusart_receive_isr *****************
 18418 ;; Defined at:
 18419 ;;		line 69 in file "src/drv_eusart.c"
 18420 ;; Parameters:    Size  Location     Type
 18421 ;;		None
 18422 ;; Auto vars:     Size  Location     Type
 18423 ;;  rcv             1    1[COMMON] unsigned char 
 18424 ;; Return value:  Size  Location     Type
 18425 ;;                  1    wreg      void 
 18426 ;; Registers used:
 18427 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18428 ;; Tracked objects:
 18429 ;;		On entry : 1F/0
 18430 ;;		On exit  : 0/0
 18431 ;;		Unchanged: 0/0
 18432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18436 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18437 ;;Total ram usage:        1 bytes
 18438 ;; Hardware stack levels used:    1
 18439 ;; Hardware stack levels required when called:    1
 18440 ;; This function calls:
 18441 ;;		Absolute function
 18442 ;;		_ble_receive
 18443 ;; This function is called by:
 18444 ;;		_app_isr
 18445 ;; This function uses a non-reentrant model
 18446 ;;
 18447                           
 18448                           
 18449                           ;psect for function _eusart_receive_isr
 18450  1DFA                     _eusart_receive_isr:	
 18451                           
 18452                           ;drv_eusart.c: 71: if(RC1STAbits.FERR || RC1STAbits.OERR)
 18453                           
 18454                           ;incstack = 0
 18455                           ; Regs used in _eusart_receive_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18456  1DFA  0023               	movlb	3	; select bank3
 18457  1DFB  191D               	btfsc	29,2	;volatile
 18458  1DFC  2DFF               	goto	i1l200
 18459  1DFD  1C9D               	btfss	29,1	;volatile
 18460  1DFE  2E01               	goto	i1l5671
 18461  1DFF                     i1l200:	
 18462                           
 18463                           ;drv_eusart.c: 72: {
 18464                           ;drv_eusart.c: 73: RC1STAbits.SPEN = 0;
 18465  1DFF  139D               	bcf	29,7	;volatile
 18466                           
 18467                           ;drv_eusart.c: 74: RC1STAbits.SPEN = 1;
 18468  1E00  179D               	bsf	29,7	;volatile
 18469  1E01                     i1l5671:	
 18470                           
 18471                           ;drv_eusart.c: 75: }
 18472                           ;drv_eusart.c: 76: uint8_t rcv = RCREG;
 18473  1E01  0819               	movf	25,w	;volatile
 18474  1E02  00F1               	movwf	eusart_receive_isr@rcv
 18475                           
 18476                           ;drv_eusart.c: 77: if(eusart_rcv_cb != (0))
 18477  1E03  0021               	movlb	1	; select bank1
 18478  1E04  0868               	movf	_eusart_rcv_cb^(0+128),w
 18479  1E05  0469               	iorwf	(_eusart_rcv_cb+1)^(0+128),w
 18480  1E06  1903               	btfsc	3,2
 18481  1E07  0008               	return
 18482                           
 18483                           ;drv_eusart.c: 78: {
 18484                           ;drv_eusart.c: 79: eusart_rcv_cb(rcv);
 18485  1E08  0871               	movf	eusart_receive_isr@rcv,w
 18486  1E09  00F0               	movwf	ble_receive@rcv
 18487  1E0A  0869               	movf	(_eusart_rcv_cb+1)^(0+128),w
 18488  1E0B  008A               	movwf	10
 18489  1E0C  0868               	movf	_eusart_rcv_cb^(0+128),w
 18490  1E0D  000A               	callw
 18491  1E0E  319D               	pagesel	$
 18492  1E0F  0008               	return
 18493  1E10                     __end_of_eusart_receive_isr:	
 18494                           
 18495                           	psect	text132
 18496  1DE8                     __ptext132:	
 18497 ;; *************** function _ble_receive *****************
 18498 ;; Defined at:
 18499 ;;		line 273 in file "src/app_ble.c"
 18500 ;; Parameters:    Size  Location     Type
 18501 ;;  rcv             1    0[COMMON] unsigned char 
 18502 ;; Auto vars:     Size  Location     Type
 18503 ;;		None
 18504 ;; Return value:  Size  Location     Type
 18505 ;;                  1    wreg      void 
 18506 ;; Registers used:
 18507 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18508 ;; Tracked objects:
 18509 ;;		On entry : 1F/1
 18510 ;;		On exit  : 1F/0
 18511 ;;		Unchanged: 0/0
 18512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18513 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18517 ;;Total ram usage:        1 bytes
 18518 ;; Hardware stack levels used:    1
 18519 ;; This function calls:
 18520 ;;		Nothing
 18521 ;; This function is called by:
 18522 ;;		_app_init
 18523 ;;		_eusart_receive_isr
 18524 ;; This function uses a non-reentrant model
 18525 ;;
 18526                           
 18527                           
 18528                           ;psect for function _ble_receive
 18529  1DE8                     _ble_receive:	
 18530                           
 18531                           ;app_ble.c: 275: rx_buf[index++] = rcv;
 18532                           
 18533                           ;incstack = 0
 18534                           ; Regs used in _ble_receive: [wreg+fsr1l+fsr1h+status,2+status,0]
 18535  1DE8  0020               	movlb	0	; select bank0
 18536  1DE9  0864               	movf	_index,w
 18537  1DEA  3EA0               	addlw	(low (_rx_buf| (0+256)))& (0+255)
 18538  1DEB  0086               	movwf	6
 18539  1DEC  3001               	movlw	1	; select bank3/4
 18540  1DED  0087               	movwf	7
 18541  1DEE  0870               	movf	ble_receive@rcv,w
 18542  1DEF  0081               	movwf	1
 18543  1DF0  0AE4               	incf	_index,f
 18544                           
 18545                           ;app_ble.c: 276: checksum ^= rcv;
 18546  1DF1  0870               	movf	ble_receive@rcv,w
 18547  1DF2  06E3               	xorwf	_checksum,f
 18548                           
 18549                           ;app_ble.c: 277: if(index >= sizeof(rx_buf))
 18550  1DF3  3050               	movlw	80
 18551  1DF4  0264               	subwf	_index,w
 18552  1DF5  1C03               	skipc
 18553  1DF6  0008               	return
 18554                           
 18555                           ;app_ble.c: 278: {
 18556                           ;app_ble.c: 279: index = 0;
 18557  1DF7  01E4               	clrf	_index
 18558                           
 18559                           ;app_ble.c: 280: checksum = 0;
 18560  1DF8  01E3               	clrf	_checksum
 18561  1DF9  0008               	return
 18562  1DFA                     __end_of_ble_receive:	
 18563  007E                     btemp	set	126	;btemp
 18564  007E                     int$flags	set	126
 18565  007E                     wtemp0	set	126


Data Sizes:
    Strings     79
    Constant    0
    Data        53
    BSS         182
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      77
    BANK1            80     55      78
    BANK2            80      0      53
    BANK3            80      0      80
    BANK4            80      0      64
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           15      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 17
		 -> ble_check_devid@dev(BANK0[17]), ble_send_cmd@ack(BANK0[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 17
		 -> ble_check_devid@dev(BANK0[17]), ble_send_cmd@ack(BANK0[8]), 

    memset@p1	PTR void  size(2) Largest target is 113
		 -> m_led_para(BIGRAM[113]), 

    memset@p	PTR unsigned char  size(2) Largest target is 113
		 -> m_led_para(BIGRAM[113]), 

    led_set_time@ptime	PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_set_preview@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_set_pro@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_set_cycle@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_set_bright@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_pro_process@ep	PTR struct . size(2) Largest target is 61
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_pro_process@sp	PTR struct . size(2) Largest target is 61
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_pro_process@p2	PTR struct . size(2) Largest target is 61
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_pro_process@p1	PTR struct . size(2) Largest target is 61
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_auto_process@p	PTR struct . size(2) Largest target is 107
		 -> m_led_para.ble_para.auto_para(UNKNOWN), m_led_para.ble_para(UNKNOWN), 

    sp__memset	PTR void  size(2) Largest target is 113
		 -> m_led_para(BIGRAM[113]), 

    led_load_duty	PTR FTN(unsigned int ,)void [4] size(2) Largest target is 1
		 -> pwm5_load_duty(), pwm4_load_duty(), pwm3_load_duty(), pwm1_load_duty(), 

    led_state_cb	PTR FTN(unsigned char ,enum E8242,)void [4] size(2) Largest target is 1
		 -> led_state_ble_cb(), led_state_night_cb(), led_state_day_cb(), led_state_off_cb(), 

    ble_send_data@p	PTR struct . size(2) Largest target is 113
		 -> m_led_para.ble_para(UNKNOWN), m_led_para(BIGRAM[113]), 

    ble_send_cmd@cmd	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_4(CODE[15]), STR_3(CODE[11]), STR_2(CODE[34]), STR_1(CODE[19]), 

    decrease@psrc	const PTR unsigned int  size(2) Largest target is 113
		 -> m_led_para.ble_para.manual_para.mBright(UNKNOWN), m_led_para.ble_para.manual_para(UNKNOWN), m_led_para(BIGRAM[113]), 

    increase@psrc	const PTR unsigned int  size(2) Largest target is 113
		 -> m_led_para.ble_para.manual_para.mBright(UNKNOWN), m_led_para.ble_para.manual_para(UNKNOWN), m_led_para(BIGRAM[113]), 

    rtc_set@ptime	PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    key_init@cb	PTR FTN(unsigned char ,enum E8166,)void  size(2) Largest target is 1
		 -> led_touch_cb(), 

    key_func	PTR FTN(unsigned char ,enum E8166,)void  size(2) Largest target is 1
		 -> led_touch_cb(), Absolute function(), 

    eusart_init@cb	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> ble_receive(), 

    eusart_rcv_cb	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> ble_receive(), Absolute function(), 

    eeprom_read_buffer@pbuf	PTR unsigned char  size(2) Largest target is 113
		 -> m_led_para(BIGRAM[113]), 

    eeprom_write_buffer@pbuf	PTR unsigned char  size(2) Largest target is 113
		 -> m_led_para(BIGRAM[113]), 

    tmr2_init@cb	PTR FTN()void  size(2) Largest target is 1
		 -> tmr2_isr_callback(), 

    tmr2_isr_cb	PTR FTN()void  size(2) Largest target is 1
		 -> tmr2_isr_callback(), Absolute function(), 

    tmr0_init@cb	PTR FTN()void  size(2) Largest target is 1
		 -> rtc_process(), 

    tmr0_isr_cb	PTR FTN()void  size(2) Largest target is 1
		 -> rtc_process(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _app_isr in COMMON

    _led_process->_led_ramp
    _led_ramp->_pwm5_load_duty
    _key_scan->_key_action
    _key_action->_led_touch_cb
    _led_touch_cb->_led_state_ble_cb
    _led_touch_cb->_led_state_day_cb
    _led_touch_cb->_led_state_night_cb
    _led_touch_cb->_led_state_off_cb
    _led_state_off_short_press_cb->i1_led_update_day_bright
    _led_state_off_long_press_cb->i1_led_update_day_bright
    _led_state_night_long_press_cb->_led_update_night_status
    _led_state_night_cont_press_cb->i1_decrease
    _led_state_night_cont_press_cb->i1_increase
    _led_state_day_short_press_cb->i1_led_update_night_bright
    _led_state_day_long_press_cb->_led_update_day_status
    _led_state_day_cont_press_cb->i1_decrease
    _led_state_day_cont_press_cb->i1_increase
    _led_state_ble_short_press_cb->i1_led_turnoff
    _rtc_process->_rtc_is_leap_year
    _rtc_is_leap_year->___lwmod
    _eusart_receive_isr->_ble_receive

Critical Paths under _main in BANK0

    _led_second_cb->_led_pro_process
    _led_save_para->_eeprom_write_buffer
    _eeprom_write_buffer->_eeprom_write
    _led_pro_process->_led_calc_bright
    _led_find_device->_led_turnoff
    _led_find_device->_led_turnon_max
    _led_auto_process->_led_calc_bright
    _led_calc_bright->___lldiv
    ___lldiv->___lmul
    _led_init->_led_para_init
    _led_para_init->_led_para_default
    _led_para_default->_memset
    _eeprom_read_buffer->_eeprom_read
    _ble_process->_ble_decode
    _ble_decode->_led_set_custom
    _led_set_time->_led_turnon_ramp
    _led_set_pro->___bmul
    _led_set_power->_led_turnon_ramp
    _led_set_mode->_led_turnon_ramp
    _led_set_custom->___lwdiv
    _led_increase->_increase
    _led_decrease->_decrease
    _ble_send_data->___bmul
    _ble_ota_ack->_ble_transmit_start
    _ble_ota_ack->_eusart_write
    _ble_init->_ble_check_devid
    _ble_check_devid->_ble_send_cmd
    _ble_send_cmd->_strlen
    _app_init->_eusart_init
    _app_init->_key_init
    _app_init->_tmr0_init
    _app_init->_tmr2_init

Critical Paths under _app_isr in BANK0

    _tmr2_isr_callback->_key_scan
    _key_scan->_key_action

Critical Paths under _main in BANK1

    _main->_led_second_cb
    _led_second_cb->_led_auto_process

Critical Paths under _app_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _app_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _app_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _app_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _app_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _app_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _app_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _app_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _app_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _app_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _app_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _app_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   59995
                           _app_init
                           _ble_init
                        _ble_process
                           _led_init
                      _led_second_cb
                           _rtc_init
                   _rtc_second_ready
 ---------------------------------------------------------------------------------
 (1) _rtc_second_ready                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rtc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_second_cb                                        3     3      0   40184
                                             52 BANK1      3     3      0
                             ___wmul
                   _led_auto_process
                    _led_find_device
                        _led_preview
                    _led_pro_process
                      _led_save_para
                       _rtc_get_hour
                     _rtc_get_minute
                     _rtc_get_second
 ---------------------------------------------------------------------------------
 (2) _rtc_get_second                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_get_minute                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_get_hour                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _led_save_para                                        0     0      0     494
                _eeprom_write_buffer
 ---------------------------------------------------------------------------------
 (3) _eeprom_write_buffer                                  5     2      3     494
                                              5 BANK0      5     2      3
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         3     2      1     173
                                              2 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _led_pro_process                                     52    49      3   16100
                                             42 BANK0     11     8      3
                                              0 BANK1     41    41      0
                             ___wmul
                    _led_calc_bright
 ---------------------------------------------------------------------------------
 (2) _led_preview                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _led_find_device                                      0     0      0     260
                        _led_turnoff
                     _led_turnon_max
 ---------------------------------------------------------------------------------
 (3) _led_turnon_max                                       1     1      0     130
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _led_auto_process                                    61    58      3   17811
                                             42 BANK0      9     6      3
                                              0 BANK1     52    52      0
                            ___awmod
                             ___lmul
                             ___wmul
                    _led_calc_bright
 ---------------------------------------------------------------------------------
 (3) _led_calc_bright                                     15     8      7    7854
                                             27 BANK0     15     8      7
                            ___lldiv
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     906
                                              2 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     549
                                             14 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     618
                                              2 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _led_init                                             0     0      0    7752
                      _led_para_init
 ---------------------------------------------------------------------------------
 (2) _led_para_init                                       12    12      0    7752
                                             24 BANK0     12    12      0
                             ___wmul
                 _eeprom_read_buffer
                   _led_indicate_ble
                   _led_indicate_day
                 _led_indicate_night
                   _led_indicate_off
                   _led_para_default
                        _led_turnoff
                   _led_turnoff_ramp
                    _led_turnon_ramp
              _led_update_day_bright
            _led_update_night_bright
 ---------------------------------------------------------------------------------
 (3) _led_update_night_bright                              5     5      0     200
                                              2 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _led_update_day_bright                                5     5      0     112
                                              2 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _led_turnoff                                          1     1      0     130
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _led_para_default                                    14    14      0     604
                                             10 BANK0     14    14      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     288
                                              2 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _led_indicate_off                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_indicate_night                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_indicate_day                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _eeprom_read_buffer                                   6     3      3     264
                                              3 BANK0      6     3      3
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          1     1      0      22
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ble_process                                          0     0      0   10038
                         _ble_decode
               _ble_ready_to_receive
               _ble_receive_complete
                  _ble_receive_start
                   _ble_receive_stop
 ---------------------------------------------------------------------------------
 (2) _ble_receive_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ble_receive_start                                    1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ble_receive_complete                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ble_ready_to_receive                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ble_decode                                           2     2      0   10038
                                             26 BANK0      2     2      0
                             ___wmul
                        _ble_ota_ack
                      _ble_send_data
                       _led_decrease
                       _led_increase
                     _led_set_bright
                     _led_set_custom
                      _led_set_cycle
                       _led_set_mode
                      _led_set_power
                    _led_set_preview
                        _led_set_pro
                       _led_set_time
                    _led_start_flash
                  _led_start_preview
                   _led_stop_preview
 ---------------------------------------------------------------------------------
 (3) _led_stop_preview                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_start_preview                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_start_flash                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_set_time                                         1     1      0     331
                                              7 BANK0      1     1      0
                   _led_indicate_ble
                _led_prepare_to_save
                   _led_turnoff_ramp
                    _led_turnon_ramp
                            _rtc_set
 ---------------------------------------------------------------------------------
 (4) _rtc_set                                              2     2      0     121
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _led_indicate_ble                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_set_pro                                         11    11      0     385
                                              5 BANK0     11    11      0
                             ___bmul
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (3) _led_set_preview                                      6     6      0     275
                                              2 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) _led_set_power                                        1     1      0     202
                                              7 BANK0      1     1      0
                _led_prepare_to_save
                   _led_turnoff_ramp
                    _led_turnon_ramp
 ---------------------------------------------------------------------------------
 (3) _led_set_mode                                         2     2      0     246
                                              7 BANK0      2     2      0
                _led_prepare_to_save
                   _led_turnoff_ramp
                    _led_turnon_ramp
 ---------------------------------------------------------------------------------
 (3) _led_turnon_ramp                                      5     5      0      90
                                              2 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _led_turnoff_ramp                                     1     1      0      68
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _led_set_cycle                                       11    11      0     143
                                              2 BANK0     11    11      0
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (3) _led_set_custom                                      17    17      0     424
                                              9 BANK0     17    17      0
                            ___lwdiv
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              2 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _led_set_bright                                       8     8      0     275
                                              2 BANK0      8     8      0
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (3) _led_increase                                         6     5      1     770
                                             11 BANK0      6     5      1
                           _increase
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (4) _increase                                             9     4      5     596
                                              2 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (3) _led_decrease                                         6     5      1     770
                                             11 BANK0      6     5      1
                           _decrease
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (4) _led_prepare_to_save                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _decrease                                             9     4      5     596
                                              2 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (3) _ble_send_data                                        9     9      0     765
                                              5 BANK0      9     9      0
                             ___bmul
                 _ble_transmit_start
                  _ble_transmit_stop
                       _eusart_write
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               3     2      1     220
                                              2 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _ble_ota_ack                                          0     0      0      66
                 _ble_transmit_start
                  _ble_transmit_stop
                       _eusart_write
 ---------------------------------------------------------------------------------
 (4) _ble_transmit_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ble_transmit_start                                   1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    5386
                                              2 BANK0      6     2      4
                       _rtc_get_hour (ARG)
 ---------------------------------------------------------------------------------
 (1) _ble_init                                             2     2      0    1677
                                             45 BANK0      2     2      0
                    _ble_check_devid
                       _ble_send_cmd
 ---------------------------------------------------------------------------------
 (2) _ble_check_devid                                     23    23      0     995
                                             22 BANK0     23    23      0
                       _ble_send_cmd
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ble_send_cmd                                        15    13      2     682
                                              7 BANK0     15    13      2
                       _eusart_write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     2      3     150
                                              2 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (4) _eusart_write                                         1     1      0      66
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0     344
                        _eusart_init
                          _gpio_init
                           _key_init
                           _osc_init
                          _pwm1_init
                          _pwm2_init
                          _pwm3_init
                          _pwm4_init
                          _pwm5_init
                          _tmr0_init
                          _tmr2_init
 ---------------------------------------------------------------------------------
 (2) _tmr2_init                                            2     0      2      86
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            2     0      2      86
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _pwm5_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm4_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm3_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _osc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _key_init                                             2     0      2      86
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_init                                          2     0      2      86
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _app_isr                                              0     0      0    4102
                 _eusart_receive_isr
                _eusart_transmit_isr
                           _tmr0_isr
                           _tmr2_isr
 ---------------------------------------------------------------------------------
 (6) _tmr2_isr                                             0     0      0    3425
                   Absolute function *
                  _tmr2_isr_callback *
 ---------------------------------------------------------------------------------
 (7) _tmr2_isr_callback                                    0     0      0    3425
                           _key_scan
                        _led_process
 ---------------------------------------------------------------------------------
 (8) _led_process                                          0     0      0     488
                           _led_ramp
 ---------------------------------------------------------------------------------
 (9) _led_ramp                                             7     7      0     488
                                              4 COMMON     7     7      0
                     _pwm1_load_duty *
                     _pwm3_load_duty *
                     _pwm4_load_duty *
                     _pwm5_load_duty *
 ---------------------------------------------------------------------------------
 (10) _pwm5_load_duty                                      4     2      2      87
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _pwm4_load_duty                                      2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _pwm3_load_duty                                      2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _pwm1_load_duty                                      2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _key_scan                                             1     1      0    2937
                                              1 BANK0      1     1      0
                         _key_action
                           _key_read
 ---------------------------------------------------------------------------------
 (9) _key_read                                             1     1      0      68
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _key_action                                           2     1      1    2758
                                             13 COMMON     1     0      1
                                              0 BANK0      1     1      0
                   Absolute function *
                       _led_touch_cb *
 ---------------------------------------------------------------------------------
 (10) _led_touch_cb                                        2     0      2    2458
                                             11 COMMON     2     0      2
                   _led_state_ble_cb *
                   _led_state_day_cb *
                 _led_state_night_cb *
                   _led_state_off_cb *
 ---------------------------------------------------------------------------------
 (11) _led_state_off_cb                                    2     0      2     268
                                              9 COMMON     2     0      2
        _led_state_off_cont_press_cb
        _led_state_off_long_press_cb
           _led_state_off_release_cb
       _led_state_off_short_press_cb
 ---------------------------------------------------------------------------------
 (12) _led_state_off_short_press_cb                        1     1      0     112
                                              5 COMMON     1     1      0
                 i1_led_indicate_day
              i1_led_prepare_to_save
            i1_led_update_day_bright
 ---------------------------------------------------------------------------------
 (12) _led_state_off_release_cb                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_off_long_press_cb                         2     2      0     112
                                              5 COMMON     2     2      0
                 i1_led_indicate_day
            i1_led_update_day_bright
 ---------------------------------------------------------------------------------
 (13) i1_led_indicate_day                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_off_cont_press_cb                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _led_state_night_cb                                  2     0      2     864
                                              9 COMMON     2     0      2
      _led_state_night_cont_press_cb
      _led_state_night_long_press_cb
         _led_state_night_release_cb
     _led_state_night_short_press_cb
 ---------------------------------------------------------------------------------
 (12) _led_state_night_short_press_cb                      1     1      0       0
                                              0 COMMON     1     1      0
                 i1_led_indicate_ble
              i1_led_prepare_to_save
 ---------------------------------------------------------------------------------
 (13) i1_led_indicate_ble                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_night_release_cb                          0     0      0       0
              i1_led_prepare_to_save
 ---------------------------------------------------------------------------------
 (12) _led_state_night_long_press_cb                       0     0      0       0
            _led_update_night_status
 ---------------------------------------------------------------------------------
 (13) _led_update_night_status                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _led_state_night_cont_press_cb                       0     0      0     820
                         i1_decrease
                         i1_increase
          i1_led_update_night_bright
 ---------------------------------------------------------------------------------
 (11) _led_state_day_cb                                    2     0      2     976
                                              9 COMMON     2     0      2
        _led_state_day_cont_press_cb
        _led_state_day_long_press_cb
           _led_state_day_release_cb
       _led_state_day_short_press_cb
 ---------------------------------------------------------------------------------
 (12) _led_state_day_short_press_cb                        1     1      0     200
                                              5 COMMON     1     1      0
               i1_led_indicate_night
              i1_led_prepare_to_save
          i1_led_update_night_bright
 ---------------------------------------------------------------------------------
 (13) i1_led_update_night_bright                           5     5      0     200
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (13) i1_led_indicate_night                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_day_release_cb                            0     0      0       0
              i1_led_prepare_to_save
 ---------------------------------------------------------------------------------
 (12) _led_state_day_long_press_cb                         0     0      0       0
              _led_update_day_status
 ---------------------------------------------------------------------------------
 (13) _led_update_day_status                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _led_state_day_cont_press_cb                         0     0      0     732
                         i1_decrease
                         i1_increase
            i1_led_update_day_bright
 ---------------------------------------------------------------------------------
 (13) i1_led_update_day_bright                             5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (13) i1_increase                                          9     4      5     310
                                              0 COMMON     9     4      5
 ---------------------------------------------------------------------------------
 (13) i1_decrease                                          9     4      5     310
                                              0 COMMON     9     4      5
 ---------------------------------------------------------------------------------
 (11) _led_state_ble_cb                                    2     0      2     220
                                              9 COMMON     2     0      2
        _led_state_ble_cont_press_cb
        _led_state_ble_long_press_cb
           _led_state_ble_release_cb
       _led_state_ble_short_press_cb
 ---------------------------------------------------------------------------------
 (12) _led_state_ble_short_press_cb                        1     1      0      90
                                              1 COMMON     1     1      0
                 i1_led_indicate_off
              i1_led_prepare_to_save
                      i1_led_turnoff
 ---------------------------------------------------------------------------------
 (13) i1_led_turnoff                                       1     1      0      90
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_led_prepare_to_save                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_led_indicate_off                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_ble_release_cb                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_ble_long_press_cb                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_ble_cont_press_cb                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _tmr0_isr                                             0     0      0     567
                   Absolute function *
                        _rtc_process *
 ---------------------------------------------------------------------------------
 (7) _rtc_process                                          0     0      0     567
                   _rtc_is_leap_year
 ---------------------------------------------------------------------------------
 (8) _rtc_is_leap_year                                     2     0      2     567
                                              5 COMMON     2     0      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     415
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (6) _eusart_transmit_isr                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _eusart_receive_isr                                   1     1      0     110
                                              1 COMMON     1     1      0
                   Absolute function *
                        _ble_receive *
 ---------------------------------------------------------------------------------
 (7) _ble_receive                                          1     0      1      87
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _eusart_init
     _gpio_init
     _key_init
     _osc_init
     _pwm1_init
     _pwm2_init
     _pwm3_init
     _pwm4_init
     _pwm5_init
     _tmr0_init
     _tmr2_init
   _ble_init
     _ble_check_devid
       _ble_send_cmd
         _eusart_write
         _strlen
       _strlen
     _ble_send_cmd
       _eusart_write
       _strlen
   _ble_process
     _ble_decode
       ___wmul
         _rtc_get_hour (ARG)
       _ble_ota_ack
         _ble_transmit_start
         _ble_transmit_stop
         _eusart_write
       _ble_send_data
         ___bmul
         _ble_transmit_start
         _ble_transmit_stop
         _eusart_write
       _led_decrease
         _decrease
         _led_prepare_to_save
       _led_increase
         _increase
         _led_prepare_to_save
       _led_set_bright
         _led_prepare_to_save
       _led_set_custom
         ___lwdiv
         _led_prepare_to_save
       _led_set_cycle
         _led_prepare_to_save
       _led_set_mode
         _led_prepare_to_save
         _led_turnoff_ramp
         _led_turnon_ramp
       _led_set_power
         _led_prepare_to_save
         _led_turnoff_ramp
         _led_turnon_ramp
       _led_set_preview
       _led_set_pro
         ___bmul
         _led_prepare_to_save
       _led_set_time
         _led_indicate_ble
         _led_prepare_to_save
         _led_turnoff_ramp
         _led_turnon_ramp
         _rtc_set
       _led_start_flash
       _led_start_preview
       _led_stop_preview
     _ble_ready_to_receive
     _ble_receive_complete
     _ble_receive_start
     _ble_receive_stop
   _led_init
     _led_para_init
       ___wmul
         _rtc_get_hour (ARG)
       _eeprom_read_buffer
         _eeprom_read
       _led_indicate_ble
       _led_indicate_day
       _led_indicate_night
       _led_indicate_off
       _led_para_default
         _memset
       _led_turnoff
       _led_turnoff_ramp
       _led_turnon_ramp
       _led_update_day_bright
       _led_update_night_bright
   _led_second_cb
     ___wmul
       _rtc_get_hour (ARG)
     _led_auto_process
       ___awmod
       ___lmul
       ___wmul
         _rtc_get_hour (ARG)
       _led_calc_bright
         ___lldiv
           ___lmul (ARG)
         ___lmul
         ___wmul
           _rtc_get_hour (ARG)
     _led_find_device
       _led_turnoff
       _led_turnon_max
     _led_preview
     _led_pro_process
       ___wmul
         _rtc_get_hour (ARG)
       _led_calc_bright
         ___lldiv
           ___lmul (ARG)
         ___lmul
         ___wmul
           _rtc_get_hour (ARG)
     _led_save_para
       _eeprom_write_buffer
         _eeprom_write
     _rtc_get_hour
     _rtc_get_minute
     _rtc_get_second
   _rtc_init
   _rtc_second_ready

 _app_isr (ROOT)
   _eusart_receive_isr
     Absolute function(Fake) *
     _ble_receive *
   _eusart_transmit_isr
   _tmr0_isr
     Absolute function(Fake) *
     _rtc_process *
       _rtc_is_leap_year
         ___lwmod
   _tmr2_isr
     Absolute function(Fake) *
     _tmr2_isr_callback *
       _key_scan
         _key_action
           Absolute function(Fake) *
           _led_touch_cb *
             _led_state_ble_cb *
               _led_state_ble_cont_press_cb
               _led_state_ble_long_press_cb
               _led_state_ble_release_cb
               _led_state_ble_short_press_cb
                 i1_led_indicate_off
                 i1_led_prepare_to_save
                 i1_led_turnoff
             _led_state_day_cb *
               _led_state_day_cont_press_cb
                 i1_decrease
                 i1_increase
                 i1_led_update_day_bright
               _led_state_day_long_press_cb
                 _led_update_day_status
               _led_state_day_release_cb
                 i1_led_prepare_to_save
               _led_state_day_short_press_cb
                 i1_led_indicate_night
                 i1_led_prepare_to_save
                 i1_led_update_night_bright
             _led_state_night_cb *
               _led_state_night_cont_press_cb
                 i1_decrease
                 i1_increase
                 i1_led_update_night_bright
               _led_state_night_long_press_cb
                 _led_update_night_status
               _led_state_night_release_cb
                 i1_led_prepare_to_save
               _led_state_night_short_press_cb
                 i1_led_indicate_ble
                 i1_led_prepare_to_save
             _led_state_off_cb *
               _led_state_off_cont_press_cb
               _led_state_off_long_press_cb
                 i1_led_indicate_day
                 i1_led_update_day_bright
               _led_state_off_release_cb
               _led_state_off_short_press_cb
                 i1_led_indicate_day
                 i1_led_prepare_to_save
                 i1_led_update_day_bright
         _key_read
       _led_process
         _led_ramp
           _pwm1_load_duty *
           _pwm3_load_duty *
           _pwm4_load_duty *
           _pwm5_load_duty *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     35      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     37      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      35       9       66.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     16E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11               F      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     16E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 10 13:50:10 2018

          __end_ofi1_led_prepare_to_save 0B51                      ?_eusart_receive_isr 0070  
                          ?_led_decrease 002B                                        pc 0002  
                         ___bmul@product 0023                                       PL2 144C  
                                     PL4 0B76                                       PL6 0FFA  
                                     PL8 1753                            _led_second_cb 14B9  
                    ___wmul@multiplicand 0024                            eusart_init@cb 0022  
                __size_of_pwm3_load_duty 0006                     ?_eeprom_write_buffer 0025  
                          _led_save_para 1708                                      PL10 0EB0  
                                    PL20 0EB8                                      PL12 11A3  
                                    PL30 1779                                      PL22 0ECF  
                                    PL14 0B81                                      PL40 0EDF  
                                    PL32 0B89                                      PL24 0ED9  
                                    PL16 175B                                      PL50 17C1  
                                    PL42 17AA                                      PL34 178D  
                                    PL26 1461                                      PL18 1770  
                                    PL60 0F0B                                      PL52 0EF5  
                                    PL44 17BB                                      PL36 1FAC  
                                    PL28 146B                                      PL70 0F1D  
                                    PL62 17D0                                      PL54 0A10  
                                    PL46 07CB                                      PL38 17A0  
                                    PL80 1489                                      PL72 0F23  
                                    PL64 147F                                      PL56 0EFE  
                                    PL48 0EE6                                      PL90 11B4  
                                    PL82 07DF                                      PL74 0B9B  
                                    PL66 17D6                                      PL58 0B8F  
                                    PL92 17E1                                      PL84 0F29  
                                    PL76 0BA5                                      PL68 0F17  
                                    PL94 11B9                                      PL86 1493  
                                    PL78 07D5                                      PL96 0F2E  
                                    PL88 0BAF                                      PL98 0BB5  
              __end_of_ble_transmit_stop 071E                                      l133 1749  
                                    l414 0714                                      l600 0C8A  
                                    l186 06F4                                      l610 0CFE  
                                    l611 0D06                                      l612 0D0E  
                                    l509 08E3                                      l613 0D16  
                                    l614 0D1E                                      l615 0D26  
                                    l472 0905                                      l616 0D2E  
                             i1_decrease 0A6A                                      l617 0D36  
                                    l609 0CF6                                      l643 0DF5  
                                    l388 0633                             ?_led_set_pro 0070  
                                    l669 1258                                      l598 0C6E  
                                    l599 0C7C                                      l877 16E1  
                          _led_set_cycle 09DE                                      _PR2 001E  
                      led_set_bright@val 0027                             ?_led_preview 0070  
                 led_para_default@i_1206 0037                             ?_led_process 0070  
                 led_para_default@i_1199 0036                   eeprom_write_buffer@len 0027  
                          _led_set_power 0BE7                            ?_led_increase 002B  
                           ___awmod@sign 0027                        ??_led_turnon_ramp 0022  
                                    wreg 0009                             ?_led_turnoff 0070  
                __size_of_pwm4_load_duty 0006     __size_of_led_state_off_long_press_cb 001B  
                                   S6601 0800                     ??_eusart_receive_isr 0071  
                                   PL100 1FBE                                     PL110 0BBD  
                                   PL102 0F35                                     PL120 0F50  
                                   PL112 0F44                                     PL104 0F3C  
                                   PL130 14A3                                     PL122 0BC3  
                                   PL114 0F90                                     PL106 07E6  
                                   PL140 1FC6                                     PL132 11C1  
                                   PL124 0BC8                                     PL116 17EA  
                                   PL108 149C                                     PL150 1FDB  
                                   PL142 0F96                                     PL134 0F55  
                                   PL126 0BCE                                     PL118 0F4B  
                                   PL160 10C1                                     PL152 14B4  
                                   PL144 0BDD                                     PL136 0BD8  
                                   PL128 0BD3                                     PL154 0BE2  
                                   PL146 14AF                                     PL138 14A9  
                                   PL156 17F6                                     PL148 17F1  
                                   PL158 17FB                             rtc_set@ptime 0022  
                             i1_increase 0A8C                                     l1137 04B6  
                                   l1234 13A2                                     l4051 072C  
                                   l4027 095A                                     l4053 0734  
                                   l4213 09D5                                     l4205 09C6  
                                   l5009 0758                                     l4217 09D9  
                                   l4081 0DF8                                     l4073 1190  
                                   l4403 06BF                                     l6011 0846  
                                   l6003 0830                                     l4157 0720  
                                   l4413 06D3                                     l4405 06D0  
                                   l4093 0E9F                                     l6013 0848  
                                   l4069 1199                                     l6101 0C39  
               led_update_night_bright@i 0026                                     l4343 063A  
                                   l4351 0648                                     l4415 06E3  
                                   l6023 085A                                     l6007 083A  
                                   l4337 0620                                     l4361 066B  
                                   l4505 1EA6                                     l6033 086A  
                                   l4523 0978                                     l4451 0925  
                                   l4611 0C33                                     l6043 0880  
                                   l6027 0860                                     l6019 0852  
                                   l4259 0E15                                     l6211 0D9E  
                                   l6123 0C97                                     l6107 0C4B  
                                   l4349 0647                                     l4453 0929  
                                   l4605 0C0C                                     l6053 089A  
                                   l6221 0DC3                                     l6205 0D77  
                                   l6133 0CA4                                     l4359 0652  
                                   l4383 0688                                     l4455 0937  
                                   l4623 0A0D                                     l6063 08A9  
                                   l6047 088D                                     l6039 0873  
                                   l4703 112A                                     l6143 0CCE  
                                   l6127 0CA3                                     l6311 12C0  
                                   l4385 0698                                     l6057 08A0  
                                   l4721 1172                                     l6241 0DD7  
                                   l6233 0DD1                                     l6217 0D9F  
                                   l6137 0CCD                                     l4395 06B4  
                                   l4547 09E2                                     l4635 094A  
                                   l4643 0A05                                     l4619 0A09  
                                   l6067 08AF                                     l6147 0CE4  
                                   l4549 0A03                                     l4477 0BFF  
                                   l4637 094D                                     l6077 08CF  
                                   l6237 0DD4                                     l6229 0DCE  
                                   l6253 0DE6                                     l6341 1362  
                                   l4479 0C02                                     l4655 043D  
                                   l6095 08FA                                     l6247 0DE3  
                                   l6183 0D3F                                     l6335 131F  
                                   l6319 12DC                                     l6343 127F  
                                   l6431 15FB                                     l4657 045E  
                                   l4681 10F2                                     l6249 0DE4  
                                   l6177 0D3E                                     l6361 1526  
                                   l4499 1E73                                     l4763 0E70  
                                   l6283 1252                                     l6427 15E4  
                                   l6371 1537                                     l3981 06E9  
                                   l5717 05DD                                     l6525 0786  
                                   l4749 0E48                                     l6189 0D63  
                                   l6437 161B                                     l6509 1708  
                                   l4695 1117                                     l4767 0E89  
                                   l6199 0D76                                     l6295 127E  
                                   l6471 166D                                     l6391 1538  
                                   l6543 14D8                                     l4769 0E97  
                                   l6393 15B1                                     l6553 14F9  
                      ?_led_turnoff_ramp 0070                                     l3995 0703  
                                   l5843 16C1                                     l6467 166A  
                          ?_led_set_mode 0070                                     l5917 0E3A  
                                   l5861 13AC                                     l5933 13F6  
                                   l6469 161D                                     l6389 15AF  
                                   l6397 15B3                                     l6549 14E3  
                                   l6557 150D                                     l5847 16C7  
                                   l5943 16F2                                     l6479 1672  
                                   l5963 136F                                     l5891 1443  
                                   l5939 1408                                     l4989 0763  
                                   l5949 16F3                                     l4999 076F  
                                   l5975 1381                                     l5983 1391  
                                   l5967 1376                                     l5887 143D  
                                   l5879 1420                                     l5897 171F  
                                   l5987 1399                                     l5979 138D  
                                   STR_1 1822                                     STR_2 1800  
                                   STR_3 1844                                     STR_4 1835  
                         _led_set_bright 1E64                            ?_led_set_time 0070  
                      led_set_cycle@pbuf 002B                                     _LATA 010C  
                                   _LATB 010D                                     _LATC 010E  
                                   u3310 0613                                     u3145 09CE  
                                   u4070 0746                                     u2925 0FEC  
                                   u6205 12B2                                     u2935 1EFD  
                                   u6215 12BC                                     u6225 12D0  
                                   u6235 12DA                                     u6315 1597  
                                   u5445 1432                                     u6245 12E9  
                                   u5545 1387                                     u6345 15E2  
                                   u6195 12A9                                     u6355 1603  
                                   u6365 165A                                     u6607 0718  
                                   u6375 1664                                     u6617 070E  
                                   u6385 162C                                     u6627 05B4  
                                   u6637 05C1                                     u6647 05D1  
                                   u6657 05E1                                     u6577 07C5  
                                   u6667 05F1                                     u6587 07A3  
                                   u6677 0601                                     u6597 08F1  
                                   u6687 0770                                     u6697 0649  
                                   _TMR2 001D                                     _WPUA 020C  
                                   _WPUB 020D                                     _WPUC 020E  
                     led_set_bright@pbuf 0026                           ??_eeprom_write 0023  
                         _led_set_custom 096D                  eeprom_write_buffer@addr 0028  
                __size_of_pwm5_load_duty 0013                  eeprom_write_buffer@pbuf 0025  
                     ??_led_turnoff_ramp 0022                                     _main 04A9  
                                   fsr0h 0005                                     fsr1h 0007  
                                   indf0 0000                                     fsr0l 0004  
                                   indf1 0001                                     fsr1l 0006  
                                   btemp 007E                            ?_led_touch_cb 007B  
             led_pro_process@point_count 00BE     __size_of_led_state_day_cont_press_cb 0010  
                                   start 042E                     __end_of_ble_send_cmd 0657  
                         ?_led_para_init 0070                        ___bmul@multiplier 0024  
                     i1_led_indicate_ble 0A34                       i1_led_indicate_day 0B11  
                     i1_led_indicate_off 0F82                           ??_led_decrease 002C  
           __size_of_eusart_transmit_isr 0017                           ?_led_second_cb 0070  
                    pwm5_load_duty@value 0070                    ??_eeprom_write_buffer 0028  
                         ?_led_save_para 0070                        led_set_custom@idx 0038  
                    ?i1_led_indicate_ble 0070                      ?i1_led_indicate_day 0070  
                    ?i1_led_indicate_off 0070                __size_of_rtc_second_ready 0006  
                         ?_led_set_cycle 0070                                    ?_main 0070  
                        __end_of___awmod 139E                          __end_of___lldiv 144C  
                                  _T2CON 001F                           ?_led_set_power 0070  
                         ??_led_increase 002C                          __end_of___lwdiv 09DE  
                                  i1l200 1DFF                                    i1l192 1E24  
                        __end_of___lwmod 10C1                                    i1l266 106D  
                                  i1l816 0A49                                    i1l843 1E3D  
                                  i1l852 0F6F                                    i1l780 0B52  
                                  i1l855 0F71                                    i1l791 0B01  
                                  i1l849 0F70                                    i1l777 0B51  
                                  i1l866 0F6E                                    _RCREG 0199  
             i1led_update_night_bright@i 0074                                    _OSCEN 091D  
                                  _TMR0H 0016                                    _TMR0L 0015  
                                  _PORTC 000E                          _ble_check_devid 073B  
                                  _TRISA 008C                                    _TRISB 008D  
                                  _TRISC 008E                                    _TXREG 019A  
             __end_of_led_state_night_cb 1E3E                      ___lmul@multiplicand 0026  
                        __end_of_app_isr 042E         ??_led_state_night_short_press_cb 0070  
        ?_led_state_night_short_press_cb 0070                 i1led_update_day_bright@i 0074  
                 __end_of_led_set_bright 1EAD             __end_ofi1_led_indicate_night 0ABE  
                        _led_set_preview 0C04                                    _index 0064  
                 __end_of_led_set_custom 09B9                           ??_led_set_mode 0027  
                         ??_led_set_time 0027                             ?_eusart_init 0022  
            __size_of_eeprom_read_buffer 0017                                    pclath 000A  
                   ??i1_led_indicate_ble 0070                     ??i1_led_indicate_day 0070  
                   ??i1_led_indicate_off 0070               __size_of_tmr2_isr_callback 000D  
                        __end_of_rtc_set 096C                 __end_of_led_indicate_ble 0EAB  
               __end_of_led_indicate_day 0EAD                           ??_led_touch_cb 007D  
               __end_of_led_indicate_off 0EB0                                    status 0003  
                       ??_rtc_get_minute 0022                         ??_rtc_get_second 0022  
                                  wtemp0 007E                     __size_of_ble_receive 0012  
                       _rtc_is_leap_year 1085                    __end_of_ble_send_data 06E7  
                   __size_of_ble_ota_ack 0012                             __end_ofPL100 1FC6  
                           __end_ofPL110 0BC3                             __end_ofPL102 0F3C  
                           __end_ofPL120 0F55                             __end_ofPL112 0F4B  
                           __end_ofPL104 0F44                             __end_ofPL130 14A9  
                           __end_ofPL122 0BC8                             __end_ofPL114 0F96  
                           __end_ofPL106 07EC                             __end_ofPL140 1FCC  
                           __end_ofPL132 11C7                             __end_ofPL124 0BCE  
                           __end_ofPL116 17F1                             __end_ofPL108 14A3  
                           __end_ofPL150 1FE0                             __end_ofPL142 0F9B  
                           __end_ofPL134 0F5A                             __end_ofPL126 0BD3  
                           __end_ofPL118 0F50                             __end_ofPL160 10C6  
                           __end_ofPL152 14B9                             __end_ofPL144 0BE2  
                           __end_ofPL136 0BDD                             __end_ofPL128 0BD8  
                           __end_ofPL154 0BE7                             __end_ofPL146 14B4  
                           __end_ofPL138 14AF                             __end_ofPL156 17FB  
                           __end_ofPL148 17F6                             __end_ofPL158 1800  
                   __size_of_ble_process 000F                        led_set_time@ptime 0027  
                       ?_led_find_device 0070                          __initialization 0461  
                     ble_check_devid@dev 0037                  i1_led_update_day_bright 0B2D  
                     ble_check_devid@cnt 0048                       ble_check_devid@idx 004C  
                     ble_check_devid@len 004A                       ble_check_devid@rev 004B  
                         _led_turnon_max 16F2                 __end_of_led_auto_process 1365  
                           __end_of_main 04C2               ?i1_led_update_night_bright 0070  
              __size_of_led_state_ble_cb 0015                __size_of_led_state_day_cb 0015  
                        _led_pro_process 1511                __size_of_led_state_off_cb 0015  
        ??_led_state_night_long_press_cb 0072                           _m_current_time 00DF  
      __size_of_led_state_day_release_cb 0002                ?_led_state_day_release_cb 0070  
                                 ??_main 0055               __size_of_ble_transmit_stop 000A  
                            ?i1_decrease 0070                        ?_ble_receive_stop 0070  
                           led_set_pro@i 002F                              increase@max 0025  
                     ??_ble_receive_stop 0022         __end_of_led_state_off_release_cb 0B53  
                        ?_led_set_bright 0070                          ?_led_set_custom 0070  
                                 _CCPR1H 0292                                   _CCPR2H 0296  
                                 _CCPR3H 0312                                   _CCPR1L 0291  
                                 _CCPR4H 0316                                   _CCPR2L 0295  
                                 _CCPR3L 0311                                   _CCPR4L 0315  
                            ?i1_increase 0070                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                                 _T0CON0 0017                                   _T0CON1 0018  
                                 _RC1STA 019D                           _pwm1_load_duty 1DB8  
                                 i1l1116 1F17                                   i1l1132 042C  
                                 i1l1125 0410                                   i1l1127 041A  
                                 i1l1129 0424                                   _ODCONA 028C  
                                 _ODCONB 028D                                   _ODCONC 028E  
                                 i1l4101 1F6B                                   i1l4111 1F7C  
                                 i1l4115 1F8D                                   i1l4107 1F6C  
                                 i1l4117 1F97                                   i1l4303 1F48  
                                 i1l4233 10B8                                   i1l4229 10AC  
                                 i1l4237 10BC                                   i1l3723 0B54  
                                 i1l3731 1E3F                                   i1l3811 0B12  
                                 i1l3803 0B02                                   i1l4291 1F46  
                                 i1l3821 0AAE                                   i1l4285 1F2D  
                                 i1l4293 1F39                                   i1l3831 0A5A  
                                 i1l3727 0B64                                   i1l3735 1E50  
                                 i1l3911 1E3A                                   i1l3841 0A16  
                                 i1l3913 1E3C                                   i1l3835 0A63  
                                 i1l3907 1E37                                   i1l3923 0F6A  
                                 i1l4299 1F43                                   i1l3757 0F84  
                                 i1l3837 0A68                                   i1l3853 0A4A  
                                 i1l3861 1E61                                   i1l3909 1E39  
                                 i1l3925 0F6B                                   i1l3863 0F72  
                                 i1l3839 0B74                                   i1l3927 0F6C  
                                 i1l3777 0B2E                                   i1l3793 0AD8  
                                 i1l3857 0A53                                   i1l3881 0B00  
                                 i1l3929 0F6D                                   i1l3795 0AE7  
                                 i1l3859 0A58                                   i1l3875 0AFD  
                                 i1l3891 0A45                                   i1l3789 0ABF  
                                 i1l3877 0AFE                                   i1l3893 0A46  
                                 i1l5671 1E01                                   i1l3879 0AFF  
                                 i1l3895 0A47                                   i1l4945 1062  
                                 i1l4961 1082                                   i1l3897 0A48  
                                 i1l4949 106F                          led_second_cb@ct 00D5  
                                 u318_25 10B2                                   u273_25 0AA1  
                                 u274_25 0A7F                                   _OSCFRQ 091F  
                        _led_start_flash 0A05                                   _NVMADR 0891  
                                 _TX1STA 019E                          ??_led_para_init 0038  
                       __end_of_decrease 1F0B                         __end_of_ble_init 0609  
                 __end_of_led_turnon_max 1708                      eeprom_read_buffer@i 0028  
                       __end_of_app_init 04EE                     __size_of_eeprom_read 000F  
                           led_turnoff@i 0022                          ??_led_second_cb 0055  
                                 ___bmul 071E                         __end_of_led_init 0659  
                       __end_of_led_ramp 1FAC                                   ___lmul 139E  
                 __size_ofi1_led_turnoff 000D    __end_of_led_state_night_cont_press_cb 0A5A  
 __size_of_led_state_night_cont_press_cb 0010            _led_state_night_cont_press_cb 0A4A  
                            key_read@dat 0070                                   ___wmul 16BF  
                        ??_led_save_para 002A                                ??___awmod 0026  
                            key_read@trg 0069                                ??___lldiv 0036  
      __end_ofi1_led_update_night_bright 0AED                 __end_of_led_para_default 118C  
                              ??___lwdiv 0026                                ??___lwmod 0074  
                       __end_of_increase 0FFA                  __end_of_ble_check_devid 077F  
                        ??_led_set_cycle 0022                         __end_of_key_init 07C4  
                       __end_of_key_read 1F6A                         __end_of_key_scan 1F4C  
                         _pwm3_load_duty 1DBE                                   _memset 118C  
                        ??_led_set_power 0027                          ___awmod@divisor 0022  
                   __end_of_eeprom_write 1753                          ___awmod@counter 0026  
                                 _rx_buf 01A0                                ??_app_isr 007E  
                                 _tx_buf 0220                        led_para_default@i 0034  
                      led_para_default@j 0035                  __end_of_led_set_preview 0C39  
                                 _strlen 072A                            ?_eusart_write 0070  
                       __end_of_tmr0_isr 1DD0                         __end_of_tmr2_isr 1DDC  
                       __end_of_osc_init 0557      __end_of_led_state_ble_long_press_cb 0F71  
            _led_state_ble_long_press_cb 0F70                           _pwm4_load_duty 1001  
                   __size_of_led_set_pro 0031                         __end_of_rtc_init 07B6  
                   __size_of_led_preview 0007                     __size_of_led_process 0001  
                              ??_rtc_set 0022                   __end_of_pwm1_load_duty 1DBE  
                      ble_send_cmd@F8334 014D                     __end_of_led_decrease 1EE8  
                   __size_of_led_turnoff 000E                      led_calc_bright@dbrt 0048  
                    led_calc_bright@ebrt 003B                      led_calc_bright@sbrt 0049  
                  __size_of_ble_send_cmd 004E                           _pwm5_load_duty 07EC  
             __end_of_led_indicate_night 0EAF                             ?_rtc_process 0070  
                __end_of__initialization 04A6                          eeprom_read@addr 0022  
                       led_turnon_ramp@i 0026                          led_set_bright@i 0029  
              ??i1_led_update_day_bright 0070     __end_of_led_state_ble_short_press_cb 0F82  
  __size_of_led_state_ble_short_press_cb 0010             _led_state_ble_short_press_cb 0F72  
              __size_of_led_stop_preview 0003                  __end_of_led_pro_process 16BF  
                   __end_of_led_increase 0FD7                      __size_ofi1_decrease 0022  
                        ?_led_turnon_max 0070                      ___bmul@multiplicand 0022  
           ?_led_state_ble_cont_press_cb 0070                         eusart_write@byte 0022  
                         __pcstackCOMMON 0070                  led_pro_process@duration 00B4  
                  led_state_off_cb@state 007A                          led_set_custom@i 0039  
                 __end_of_pwm3_load_duty 1DC4                             __pidataBANK2 1007  
           __end_of_ble_ready_to_receive 0795                          _led_turnon_ramp 0DF6  
                   i1_led_indicate_night 0ABD                           i1led_turnoff@i 0070  
                  _led_update_day_bright 0E46                     __end_of_led_set_mode 0939  
                   __end_of_led_set_time 0957             __end_of_ble_receive_complete 079C  
                    __size_ofi1_increase 0022                          led_set_pro@pbuf 002E  
                             __end_ofPL2 1461                               __end_ofPL4 0B81  
                             __end_ofPL6 1000                               __end_ofPL8 175B  
                       _rtc_second_ready 07B6         __size_of_led_update_night_bright 002F  
                  _led_update_day_status 0B54                           ??_eusart_write 0022  
                 __end_of_pwm4_load_duty 1007                          led_set_power@on 0027  
                   __end_of_led_touch_cb 1FDB         __size_of_led_update_night_status 0022  
            __end_of_led_prepare_to_save 096D                             _ble_send_cmd 0609  
                __end_of_led_start_flash 0A09                       led_set_preview@val 0025  
                      eeprom_write@state 0024                            i1_led_turnoff 0F83  
                        ?_pwm1_load_duty 0070                   __end_of_pwm5_load_duty 07FF  
                    _eusart_transmit_isr 1E10              __size_of_ble_transmit_start 000C  
                      _ble_receive_start 079C                        led_calc_bright@dt 003E  
                      led_calc_bright@vs 0044                               __pbssBANK0 0055  
                             __pbssBANK1 00D7                               __pbssBANK3 01A0  
                             __pbssBANK4 0220                               _ble_decode 0830  
                          led_set_mode@m 0028                       ?_ble_receive_start 0070  
                   __size_of_eusart_init 001B                       __size_of_gpio_init 0044  
                           increase@delt 0024                             increase@psrc 0022  
    __end_of_led_state_off_long_press_cb 0B2D              _led_state_off_long_press_cb 0B12  
          ?_led_state_ble_short_press_cb 0070                               __pmaintext 04A9  
                    ??_ble_receive_start 0022        __size_of_led_state_off_release_cb 0001  
                                ?___bmul 0022                 _led_state_ble_release_cb 0F71  
              ?_led_state_off_release_cb 0070                    ?i1_led_indicate_night 0070  
                                ?___lmul 0022            ??_led_state_ble_cont_press_cb 0070  
                   ?_eusart_transmit_isr 0070                          ?_pwm3_load_duty 0070  
                                ?___wmul 0022                __size_of_led_turnoff_ramp 000C  
                       _led_state_ble_cb 0F5A                         _led_state_day_cb 0A35  
                             __pintentry 0404                       __size_of_pwm1_init 000A  
                     __size_of_pwm2_init 0009                       __size_of_tmr0_init 0012  
                     __size_of_pwm3_init 000B                       __size_of_pwm4_init 000B  
                     __size_of_tmr2_init 0011                                  _CCP1CON 0293  
                                _CCP2CON 0297                    i1_led_prepare_to_save 0B50  
                                _CCP3CON 0313                         led_decrease@delt 002B  
                     __size_of_pwm5_init 000A                                  _CCP4CON 0317  
                       ?_ble_check_devid 0070                         _led_state_off_cb 0AED  
                                ?_memset 0022                           ___lmul@product 002A  
    __end_of_led_state_day_cont_press_cb 0A6A              _led_state_day_cont_press_cb 0A5A  
         ?_led_state_night_cont_press_cb 0070                 __size_of_led_calc_bright 004A  
                                ?_strlen 0022                 __end_of_rtc_is_leap_year 10A1  
                       ?_led_set_preview 0070                          ?_pwm4_load_duty 0070  
                   tmr2_isr_callback@cnt 0061                         led_second_cb@sec 00D4  
                              ?_decrease 0022                                  _SP1BRGH 019C  
                                _SP1BRGL 019B                                ?_ble_init 0070  
                            tmr0_init@cb 0022                                  _OSCCON1 0919  
                                _OSCCON3 091B                           ?i1_led_turnoff 0070  
                                _NVMADRH 0892                                  _NVMADRL 0891  
                                _OSCTUNE 091E                                  _NVMDATL 0893  
                                _NVMCON1 0895                                  _NVMCON2 0896  
                                _PWM5DCH 0618                                  _PWM5DCL 0617  
           ?_led_state_off_cont_press_cb 0070                __end_of_ble_receive_start 07AB  
                                _PWM5CON 0619                                  _PPSLOCK 0E0F  
                              ?_app_init 0070                              tmr2_init@cb 0022  
                        ?_pwm5_load_duty 0070                    led_state_night_cb@key 0079  
            __size_of_eusart_receive_isr 0016                               _m_led_para 237F  
                          _eusart_rcv_cb 00E8                                ?_led_init 0070  
                              ?_led_ramp 0070                            i1decrease@min 0073  
                              ?_increase 0022                   led_update_day_bright@i 0026  
                              ?_key_init 0022                                ?_key_read 0070  
                              ?_key_scan 0070                    led_find_device@toggle 0062  
                      ?_led_indicate_ble 0070                        ?_led_indicate_day 0070  
           ?_led_state_day_long_press_cb 0070                        ?_led_indicate_off 0070  
                     _led_state_night_cb 1E27                  __end_of_led_turnon_ramp 0E12  
                       ?_led_pro_process 004A                                ?_tmr0_isr 0070  
                              ?_tmr2_isr 0070                       ??_led_indicate_ble 0022  
                     ??_led_indicate_day 0022                       ??_led_indicate_off 0022  
                              ?_osc_init 0070              __end_of_eeprom_write_buffer 1731  
                         i1increase@delt 0072                        key_scan@key_value 0021  
                         i1increase@psrc 0070                    ??_eusart_transmit_isr 0070  
                 ?_led_update_day_bright 0070                    __size_of_eeprom_write 0022  
                             _key_action 1F4C                                ?_rtc_init 0070  
                        __size_of___bmul 000C                      ?_led_state_night_cb 0079  
            ??i1_led_update_night_bright 0070                          __size_of___lmul 0025  
                      ?_led_auto_process 004A                                  ___awmod 1365  
                                ___lldiv 140D                          __size_of___wmul 0015  
                                ___lwdiv 09B9                                  ___lwmod 10A1  
                           key_read@cont 0068                   ?_led_update_day_status 0070  
                     ??_led_auto_process 004D                          __size_of_memset 0017  
                                __ptext1 07B6                                  __ptext2 07AB  
                                __ptext3 14B9                                  __ptext4 16F0  
                                __ptext5 16EE                                  __ptext6 16EB  
                                __ptext7 1708                                  __ptext8 171C  
                                __ptext9 1731                                  _app_isr 0404  
                      __end_of_gpio_init 054D                             ??i1_decrease 0075  
                       ??_led_set_bright 0022                          __size_of_strlen 0011  
                  __size_of_led_decrease 003B                         ??_led_set_custom 0029  
                              _T2CONbits 001F                         ___awmod@dividend 0024  
                             ??_decrease 0027                               ??_ble_init 004D  
                   rtc_is_leap_year@year 0075     __size_of_led_state_ble_cont_press_cb 0001  
             __end_of_eeprom_read_buffer 0E29                         ?_led_start_flash 0070  
                                _rtc_set 0957                     ??_led_state_night_cb 007B  
                             ??_app_init 0024                                  _tx_head 006A  
                           ??i1_increase 0075                                  clrloop0 1DDD  
                                _tx_tail 006B            ??_led_state_off_cont_press_cb 0070  
                          ??_ble_receive 0071                               ??_led_init 0044  
                   end_of_initialization 04A6                               ??_led_ramp 0074  
                   _ble_ready_to_receive 078E                        __end_of_pwm1_init 0561  
                          ??_ble_ota_ack 0023                 led_auto_process@duration 00C4  
                      __end_of_pwm2_init 056A                        __end_of_tmr0_init 059C  
                  __size_of_led_increase 003C                        __end_of_pwm3_init 0575  
                      __end_of_pwm4_init 0580                        __end_of_tmr2_init 05AD  
                      __end_of_pwm5_init 058A                              ?_ble_decode 0070  
                             ??_increase 0027                     _ble_receive_complete 0795  
                          ??_ble_process 003C              __size_ofi1_led_indicate_ble 0001  
            __size_ofi1_led_indicate_day 0001                                  init_ram 0824  
            __size_ofi1_led_indicate_off 0001                                  memset@c 0024  
                                memset@n 0026                                  memset@p 0028  
                             ??_key_init 0024                               ??_key_read 0070  
                             ??_key_scan 007E                             _eeprom_write 1731  
                                initloop 0825                     __end_of_eusart_write 0708  
              __size_of_ble_receive_stop 0007                        led_pro_process@p1 00B6  
                      led_pro_process@p2 00B8                        led_pro_process@t1 00AB  
                      led_pro_process@t2 00AD                        led_pro_process@ct 004A  
                      led_pro_process@ep 00C3                        led_pro_process@dt 00AF  
                      led_pro_process@et 00BF                         _led_stop_preview 0A0D  
                      led_pro_process@sp 00C1                        led_pro_process@st 00C6  
                   __size_of_rtc_process 0049                          ___lldiv@divisor 002E  
                             ??_tmr0_isr 0077            ??_led_state_day_long_press_cb 0072  
                  __size_of_led_set_mode 0033                               ??_tmr2_isr 007E  
                     __end_ofi1_decrease 0A8C                    __size_of_led_set_time 001E  
                        ___lldiv@counter 003A                               ??_osc_init 0022  
                              _MONTH_DAY 0131                   ??i1_led_indicate_night 0070  
                          ?_rtc_get_hour 0070     __end_of_led_state_off_short_press_cb 0B11  
  __size_of_led_state_off_short_press_cb 000F             _led_state_off_short_press_cb 0B02  
                        led_touch_cb@key 007B                                _RCSTAbits 019D  
                             ??_rtc_init 0022                   ?i1_led_prepare_to_save 0070  
                           _led_decrease 1EAD                    __size_of_led_touch_cb 000F  
                      led_turnoff_ramp@i 0022                        ?_led_para_default 0070  
         ??_led_state_ble_short_press_cb 0071                  _led_update_night_bright 0E6E  
                                strlen@s 0026                 __size_of_led_find_device 0010  
                     __end_ofi1_increase 0AAE                                _PORTAbits 000C  
                     ??_led_para_default 002A                  _led_update_night_status 1E3F  
                        ??i1_led_turnoff 0070                               _rtc_status 0065  
                 __size_of_ble_send_data 007C                             _led_increase 0F9B  
                led_state_night_cb@state 007A               __size_of_ble_receive_start 000F  
              i1_led_update_night_bright 0ABE                        ??_led_calc_bright 0042  
                   eeprom_write_buffer@i 0029     __end_of_led_state_day_short_press_cb 0ABD  
  __size_of_led_state_day_short_press_cb 000F             _led_state_day_short_press_cb 0AAE  
                  ?_ble_ready_to_receive 0070                             _led_set_mode 0906  
                           _led_set_time 0939                                _RXPPSbits 0E24  
                  ?_ble_receive_complete 0070                         ??_led_turnon_max 0022  
                   ble_check_devid@F8342 0120                 __end_of_rtc_second_ready 07BC  
           ??_led_state_night_release_cb 0070                             _led_state_cb 0145  
                          ??_eeprom_read 0022                         led_set_cycle@len 002A  
                              _TXSTAbits 019E                             _led_run_para 005D  
                           _led_touch_cb 1FCC                         ?_led_turnon_ramp 0070  
                  __end_of_led_para_init 0DF6                      __end_of_ble_receive 1DFA  
                         ??_rtc_get_hour 0022                      __end_of_ble_ota_ack 066B  
                         led_para_init@i 0043                           led_para_init@j 0042  
                    __end_of_ble_process 078E     __size_of_led_state_off_cont_press_cb 0001  
                            ?_key_action 007D                         _led_turnoff_ramp 0E9D  
               _led_state_day_release_cb 0B74            ?_led_state_off_short_press_cb 0070  
                     _led_indicate_night 0EAD                    __end_of_led_second_cb 1511  
                         __end_of___bmul 072A                  __size_of_rtc_get_minute 0002  
                __size_of_rtc_get_second 0002                           __end_of___lmul 13C3  
                         __end_of___wmul 16D4                    __end_of_led_save_para 171C  
                  __end_of_led_set_cycle 0A05                      __size_of_ble_decode 00D6  
                          ??_led_set_pro 0025                           __end_of_memset 11A3  
                  __end_of_led_set_power 0C04                            ??_led_preview 0022  
                          ??_led_process 007B     __size_of_led_state_day_long_press_cb 0001  
                       ??_pwm1_load_duty 0072                      ?_led_indicate_night 0070  
                         __end_of_strlen 073B                              __end_ofPL10 0EB8  
                            __end_ofPL20 0ECF                              __end_ofPL12 11B4  
                            __end_ofPL30 178D                              __end_ofPL22 0ED9  
                            __end_ofPL14 0B89                              __end_ofPL40 0EE6  
                            __end_ofPL32 0B8F                              __end_ofPL24 0EDF  
                            __end_ofPL16 1770                              __end_ofPL50 17D0  
                            __end_ofPL42 17BB                              __end_ofPL34 17A0  
                            __end_ofPL26 146B                              __end_ofPL18 1779  
                            __end_ofPL60 0F17                              __end_ofPL52 0EFE  
                            __end_ofPL44 17C1                              __end_ofPL36 1FBE  
                            __end_ofPL28 147F                              __end_ofPL70 0F23  
                            __end_ofPL62 17D6                              __end_ofPL54 0A16  
                            __end_ofPL46 07D5                              __end_ofPL38 17AA  
                            __end_ofPL80 1493                              __end_ofPL72 0F29  
                            __end_ofPL64 1489                              __end_ofPL56 0F0B  
                            __end_ofPL48 0EF5                              __end_ofPL90 11B9  
                            __end_ofPL82 07E6                              __end_ofPL74 0BA5  
                            __end_ofPL66 17E1                              __end_ofPL58 0B9B  
                            __end_ofPL92 17EA                              __end_ofPL84 0F2E  
                            __end_ofPL76 0BAF                              __end_ofPL68 0F1D  
                            __end_ofPL94 11C1                              __end_ofPL86 149C  
                            __end_ofPL78 07DF                              __end_ofPL96 0F35  
                            __end_ofPL88 0BB5                              __end_ofPL98 0BBD  
                    start_initialization 0461                            ??_led_turnoff 0022  
    __size_of_led_state_night_release_cb 0003                   eeprom_read_buffer@addr 0027  
                 eeprom_read_buffer@pbuf 0023                 __end_of_led_state_ble_cb 0F6F  
                       led_set_preview@i 0027                 __end_of_led_state_day_cb 0A4A  
               __end_of_led_state_off_cb 0B02            ?_led_state_day_short_press_cb 0070  
             ??_led_state_ble_release_cb 0070                     ??_led_indicate_night 0022  
                       ??_pwm3_load_duty 0072                            _ble_send_data 066B  
                             key_init@cb 0022                      led_set_preview@pbuf 0024  
              ??_led_update_night_bright 0022                                 ??___bmul 0023  
                               ??___lmul 002A                                 ??___wmul 0026  
                    __end_of_eeprom_read 0E38                              _CCPTMRSbits 029F  
                       ??_pwm4_load_duty 0072                              __pdataBANK2 0120  
              ??_led_update_night_status 0070                                 ??_memset 0028  
                               ??_strlen 0025                           _current_bright 00D7  
                      ?_rtc_is_leap_year 0075                         ??_pwm5_load_duty 0072  
                        led_turnon_max@i 0022                              __pbssBIGRAM 237F  
                         led_set_cycle@i 002C                                ___latbits 0002  
                       ble_send_data@len 002A               __end_of_ble_transmit_start 0714  
                          __pcstackBANK0 0020                            __pcstackBANK1 00A0  
                       ble_send_data@xor 0029                       ??_rtc_is_leap_year 0077  
                      ??_led_find_device 0023                   ??_ble_ready_to_receive 0022  
                    __end_of_led_set_pro 0461                        __size_of_decrease 0023  
                         led_set_pro@len 002D                        __size_of_ble_init 005C  
                          ??_eusart_init 0024                      __end_of_led_preview 16EB  
                    __end_of_led_process 1F6B                   ??_ble_receive_complete 0022  
                  __size_of_eusart_write 0021                      __size_of_key_action 0012  
               ?i1_led_update_day_bright 0070                              _ble_receive 1DE8  
           __size_of_led_prepare_to_save 0001                         eeprom_write@addr 0023  
                      __size_of_app_init 002C                              _ble_ota_ack 0659  
        ??_led_state_night_cont_press_cb 0079                      __end_of_led_turnoff 0E46  
                       eeprom_write@byte 0022                              _ble_process 077F  
                      __size_of_led_init 0002                        __size_of_led_ramp 0041  
                         ?_ble_send_data 0070                         _ble_receive_stop 07C4  
                              __pnvBANK0 006C                                __pnvBANK1 00E6  
                   led_pro_process@index 00A0                  ??_led_update_day_bright 0022  
                      __size_of_increase 0023                     led_pro_process@start 00BA  
                      __size_of_key_init 0008                        __size_of_key_read 000C  
                      __size_of_key_scan 0034                         ___lwdiv@dividend 0024  
                ??_led_update_day_status 0070                        __size_of_tmr0_isr 000C  
                        led_decrease@chn 0030                        __size_of_tmr2_isr 000C  
                              __ptext100 0B12                                __ptext101 0B11  
                              __ptext110 0ABE                                __ptext102 0B51  
                              __ptext111 0ABD                                __ptext103 0A16  
                              __ptext120 0F83                                __ptext112 0B74  
                              __ptext104 0A34                                __ptext121 0B50  
                              __ptext113 0B53                                __ptext105 1E61  
                              __ptext130 1E10                                __ptext122 0F82  
                              __ptext114 0B54                                __ptext106 1E3E  
                      __size_of_osc_init 000A                                __ptext131 1DFA  
                              __ptext123 0F71                                __ptext115 0A5A  
                              __ptext107 1E3F                                __ptext132 1DE8  
                              __ptext124 0F70                                __ptext116 0B2D  
                              __ptext108 0A4A                                __ptext125 0F6F  
                              __ptext117 0A8C                                __ptext109 0AAE  
                              __ptext126 1DC4                                __ptext118 0A6A  
                              __ptext127 103C                                __ptext119 0F72  
                              __ptext128 1085                                __ptext129 10A1  
                               ?___awmod 0022                                 ?___lldiv 002E  
                               ?___lwdiv 0022                                 ?___lwmod 0070  
                         key_scan@repeat 0066                        __size_of_rtc_init 000B  
                           decrease@delt 0024                __size_of_led_indicate_ble 0002  
                           decrease@psrc 0022                __size_of_led_indicate_day 0002  
              __size_of_led_indicate_off 0001                                __pswtext1 0800  
                               ?_app_isr 0070                            _target_bright 0055  
         ??_led_state_off_short_press_cb 0075                                 _BAUD1CON 019F  
                           _eusart_write 06E7                 __end_of_led_stop_preview 0A10  
             __end_of_eusart_receive_isr 1E10                         key_scan@last_key 0067  
               __size_of_ble_check_devid 0044                     __end_of_rtc_get_hour 16EE  
                              _gpio_init 0509                            i1increase@max 0073  
        __end_of_led_update_night_bright 0E9D                                 ?_rtc_set 0070  
              __size_of_led_auto_process 019E                         ___lwdiv@quotient 0026  
  __end_of_led_state_night_long_press_cb 1E3F   __size_of_led_state_night_long_press_cb 0001  
          _led_state_night_long_press_cb 1E3E                 __size_of_led_set_preview 0035  
        __end_of_led_update_night_status 1E61                             ??_ble_decode 003A  
     __end_of_led_state_night_release_cb 1E64               _led_state_night_release_cb 1E61  
                         ___wmul@product 0026                                 _LATAbits 010C  
                               _LATBbits 010D                                 _LATCbits 010E  
            __end_of_eusart_transmit_isr 1E27                                clear_ram0 1DDC  
                              _pwm1_init 0557                              _eeprom_read 0E29  
               _led_state_off_release_cb 0B52                                _tmr0_init 058A  
                              _pwm2_init 0561                                 _PIE0bits 0090  
                               _PIE1bits 0091       __size_ofi1_led_update_night_bright 002F  
                              _pwm3_init 056A                      __end_of_eusart_init 0509  
                              _tmr2_init 059C                                _pwm4_init 0575  
                              _pwm5_init 0580      __end_of_led_state_ble_cont_press_cb 0F70  
            _led_state_ble_cont_press_cb 0F6F                       _eeprom_read_buffer 0E12  
                ??i1_led_prepare_to_save 0070                         led_pro_process@i 00C8  
                       led_pro_process@j 00C5           ??_led_state_day_short_press_cb 0075  
                    led_state_ble_cb@key 0079                                 _PIR0bits 0010  
                               _PIR1bits 0011                      led_auto_process@sec 004C  
                    led_auto_process@val 00A0                            key_action@key 0020  
                         _rtc_get_minute 16EE                           _rtc_get_second 16F0  
                    led_state_day_cb@key 0079                      ?_eeprom_read_buffer 0023  
                    pwm1_load_duty@value 0070                 __size_of_led_pro_process 01AE  
                        _led_calc_bright 13C3                        _led_start_preview 0A09  
           __size_of_eeprom_write_buffer 0015                        ___wmul@multiplier 0022  
                            _led_set_pro 0430                       __end_of_ble_decode 0906  
                         i1decrease@delt 0072                       ?_led_start_preview 0070  
                            _led_preview 16E4                              _led_process 1F6A  
                         i1decrease@psrc 0070             ?_led_state_ble_long_press_cb 0070  
                              _tx_remain 006C          __end_ofi1_led_update_day_bright 0B50  
                             ?_gpio_init 0070                              _led_turnoff 0E38  
                              led_ramp@i 007A              __size_of_led_state_night_cb 0017  
                    ??_led_start_preview 0022                 __end_of_led_turnoff_ramp 0EA9  
                      ___lmul@multiplier 0022               __end_ofi1_led_indicate_ble 0A35  
             __end_ofi1_led_indicate_day 0B12               __end_ofi1_led_indicate_off 0F83  
              __size_of_led_para_default 00C6                     ??_eeprom_read_buffer 0026  
       __end_of_led_state_ble_release_cb 0F72                            ??_rtc_process 0077  
                        ??_ble_send_data 0025                    eeprom_read_buffer@len 0025  
             ??_led_state_day_release_cb 0070                        ?_rtc_second_ready 0070  
               __size_of_led_start_flash 0004                               ?_pwm1_init 0070  
                             ?_tmr0_init 0022                               ?_pwm2_init 0070  
                             ?_pwm3_init 0070                               ?_tmr2_init 0022  
                             ?_pwm4_init 0070                               ?_pwm5_init 0070  
                     ??_rtc_second_ready 0022                   __end_of_rtc_get_minute 16F0  
                 __end_of_rtc_get_second 16F2                             ??_key_action 007E  
 __end_of_led_state_night_short_press_cb 0A34  __size_of_led_state_night_short_press_cb 001E  
         _led_state_night_short_press_cb 0A16            __size_ofi1_led_indicate_night 0001  
              __end_of_led_start_preview 0A0D                         __size_of___awmod 0039  
                       __size_of___lldiv 003F                          ble_send_cmd@ack 002A  
                       __size_of___lwdiv 0025                          ble_send_cmd@cmd 0027  
                       __size_of___lwmod 0020                          ble_send_cmd@cnt 0033  
                        ble_send_cmd@idx 0035                          ble_send_cmd@len 0032  
                        ble_send_cmd@rev 0034                      led_state_off_cb@key 0079  
                       __size_of_app_isr 002A                            ?_ble_send_cmd 0027  
                    led_pro_process@flag 00B3                               _T0CON0bits 0017  
                               _decrease 1EE8                                 _checksum 0063  
                               _ble_init 05AD      __end_of_led_state_off_cont_press_cb 0B52  
            _led_state_off_cont_press_cb 0B51                    __end_ofi1_led_turnoff 0F90  
                        ___lwdiv@divisor 0022                          ___lwdiv@counter 0028  
                               __ptext10 1511                                 __ptext11 16E4  
                               __ptext20 0C39                                 __ptext12 16D4  
                               __ptext21 0E6E                                 __ptext13 16F2  
                               __ptext30 0E29                                 __ptext22 0E46  
                               __ptext14 11C7                                 __ptext31 077F  
                               __ptext23 0E38                                 __ptext15 13C3  
                               __ptext40 0939                                 __ptext32 07C4  
                               __ptext24 10C6                                 __ptext16 139E  
                               __ptext41 0957                                 __ptext33 079C  
                               __ptext25 118C                                 __ptext17 140D  
                               __ptext50 096D                                 __ptext42 0EA9  
                               __ptext34 0795                                 __ptext26 0EAF  
                               __ptext18 1365                                 __ptext51 09B9  
                               __ptext43 0430                                 __ptext35 078E  
                               __ptext27 0EAD                                 __ptext19 0657  
                               __ptext60 0659                                 __ptext52 1E64  
                               __ptext44 0C04                                 __ptext36 0830  
                               __ptext28 0EAB                                 __ptext61 0714  
                               __ptext53 0F9B                                 __ptext45 0BE7  
                               __ptext37 0A0D                                 __ptext29 0E12  
                               __ptext70 059C                                 __ptext62 0708  
                               __ptext54 0FD7                                 __ptext46 0906  
                               __ptext38 0A09                                 __ptext71 058A  
                               __ptext63 16BF                                 __ptext55 1EAD  
                               __ptext47 0DF6                                 __ptext39 0A05  
                               __ptext80 04EE                                 __ptext72 0580  
                               __ptext64 05AD                                 __ptext56 096C  
                               __ptext48 0E9D                                 __ptext73 0575  
                               __ptext65 073B                                 __ptext57 1EE8  
                               __ptext49 09DE                                 __ptext90 1F18  
                               __ptext82 1DD0                                 __ptext74 056A  
                               __ptext66 0609                                 __ptext58 066B  
                               __ptext91 1F5E                                 __ptext83 1F0B  
                               __ptext75 0561                                 __ptext67 072A  
                               __ptext59 071E            ??_led_state_ble_long_press_cb 0070  
                               __ptext92 1F4C                                 __ptext84 1F6A  
                               __ptext76 0557                                 __ptext68 06E7  
                               __ptext93 1FCC                                 __ptext85 1F6B  
                               __ptext77 054D                                 __ptext69 04C2  
                               __ptext94 0F5A                                 __ptext86 1001  
                               __ptext78 07BC                                 __ptext95 1E27  
                               __ptext87 1DBE                                 __ptext79 0509  
                               __ptext96 0A35                                 __ptext88 1DB8  
                               __ptext97 0AED                                 __ptext89 07EC  
                               __ptext98 0B02                                 __ptext99 0B52  
                               _app_init 04C2                         __size_of_rtc_set 0015  
                            decrease@min 0025                              _eusart_init 04EE  
                               _led_init 0657                                 _led_ramp 1F6B  
                      ?_led_state_ble_cb 0079                        ?_led_state_day_cb 0079  
                     __end_of_key_action 1F5E                  __size_of_led_set_bright 0049  
                      ??_ble_check_devid 0036                        ?_led_state_off_cb 0079  
                               _increase 0FD7                  __size_of_led_set_custom 004C  
    __end_of_led_state_day_long_press_cb 0B54              _led_state_day_long_press_cb 0B53  
                     ??_led_state_ble_cb 007B                                 _key_func 00E6  
                               _key_init 07BC                                 _key_read 1F5E  
         ?_led_state_night_long_press_cb 0070                                 _key_scan 1F18  
                     ??_led_state_day_cb 007B                            __size_of_main 0019  
                     ??_led_state_off_cb 007B                        ??_led_set_preview 0022  
                               _tmr0_isr 1DC4                                 _tmr2_isr 1DD0  
                         ble_receive@rcv 0070                                 _osc_init 054D  
                    __end_of_rtc_process 1085                  __end_of_led_calc_bright 140D  
                             _RC1STAbits 019D                       led_auto_process@ct 004A  
                     led_auto_process@dt 00C7                       led_auto_process@et 00CC  
                     led_auto_process@st 00CF                       led_auto_process@tr 00B8  
                             _RB4PPSbits 0E9C                          ?_rtc_get_minute 0070  
                        ?_rtc_get_second 0070             ?_led_state_off_long_press_cb 0070  
                             _RC3PPSbits 0EA3                                 _rtc_init 07AB  
                             _RC4PPSbits 0EA4                                 int$flags 007E  
                             _RC5PPSbits 0EA5                        led_touch_cb@state 007C  
                             _RC6PPSbits 0EA6                          _led_find_device 16D4  
                             _RC7PPSbits 0EA7                 __size_of_led_turnon_ramp 001C  
                    _led_prepare_to_save 096C                         _led_indicate_ble 0EA9  
                       _led_indicate_day 0EAB                         _led_indicate_off 0EAF  
                  __size_of_rtc_get_hour 0003             ?_led_state_day_cont_press_cb 0070  
               __end_of_ble_receive_stop 07CB                           ??_ble_send_cmd 0029  
                             _INTCONbits 000B                              _NVMCON1bits 0895  
                      ??_led_pro_process 004D                              ??_gpio_init 0022  
                 __size_of_led_para_init 01BD                              _tmr0_isr_cb 00EC  
                       _led_auto_process 11C7                                 memset@p1 0022  
                            _tmr2_isr_cb 00EA                           ble_send_data@i 002B  
                         ble_send_data@p 002C                             ?_ble_receive 0070  
                               intlevel1 0000                     ?_led_prepare_to_save 0070  
                    pwm3_load_duty@value 0070                             ?_ble_ota_ack 0070  
                 __size_of_led_second_cb 0058                       led_pro_process@end 00BC  
                     led_pro_process@sec 004C                       led_pro_process@tmp 00AA  
                       ___lwmod@dividend 0072                             ?_ble_process 0070  
                 __size_of_led_save_para 0014                         ___lldiv@dividend 0032  
              __size_of_rtc_is_leap_year 001C                    led_state_ble_cb@state 007A  
                            ??_pwm1_init 0022                  led_calc_bright@duration 003C  
                 __size_of_led_set_cycle 0027                              ??_tmr0_init 0024  
                            ??_pwm2_init 0022                       _ble_transmit_start 0708  
                      _tmr2_isr_callback 1F0B                              ??_pwm3_init 0022  
            __size_of_led_indicate_night 0002                              ??_tmr2_init 0024  
                            ??_pwm4_init 0022                              _PPSLOCKbits 0E0F  
                            ??_pwm5_init 0022                   __size_of_led_set_power 001D  
                  led_auto_process@count 00CB     __size_of_led_state_ble_long_press_cb 0001  
         __size_of_led_update_day_bright 0028                       ?_tmr2_isr_callback 0070  
                      led_auto_process@i 00D3                        led_auto_process@j 00C6  
                      led_auto_process@k 00CE                        led_auto_process@p 00D1  
          __end_of_led_update_day_bright 0E6E                             _rtc_get_hour 16EB  
                __size_of_led_turnon_max 0016                        ??_led_start_flash 0022  
       __size_ofi1_led_update_day_bright 0023                                 rtc_set@i 0023  
                    ?_ble_transmit_start 0070               __size_of_led_start_preview 0004  
         __size_of_led_update_day_status 0020            ??_led_state_off_long_press_cb 0075  
          __end_of_led_update_day_status 0B74        __size_of_led_state_ble_release_cb 0001  
                    ??_tmr2_isr_callback 007E                ?_led_state_ble_release_cb 0070  
                          __pstringtext1 1800                            __pstringtext2 1822  
                          __pstringtext3 1835                            __pstringtext4 1844  
                          __pstringtext5 0000                         ___lldiv@quotient 0036  
                        ___lwmod@divisor 0070                        ?_led_stop_preview 0070  
                               strlen@cp 0025                        _ble_transmit_stop 0714  
                        ___lwmod@counter 0074            ??_led_state_day_cont_press_cb 0079  
                        key_action@state 007D                       ??_led_stop_preview 0022  
                     ?_ble_transmit_stop 0070               ??_led_state_off_release_cb 0070  
                   ??_ble_transmit_start 0022                    led_state_day_cb@state 007A  
                       _led_para_default 10C6                    ??_led_prepare_to_save 0022  
          __size_of_ble_ready_to_receive 0007                    eusart_receive_isr@rcv 0071  
                __size_of_pwm1_load_duty 0006         __end_of_led_state_day_release_cb 0B76  
          __size_of_ble_receive_complete 0007              ?_led_state_night_release_cb 0070  
                            _rtc_process 103C                    led_calc_bright@period 0046  
              __end_of_tmr2_isr_callback 1F18                      _eeprom_write_buffer 171C  
                            _PWMTMRSbits 061F                            ?_eeprom_write 0022  
                  led_calc_bright@result 0042                      ??_ble_transmit_stop 0022  
                       led_increase@delt 002B                       _eusart_receive_isr 1DFA  
                           ?_eeprom_read 0070                 ?_led_update_night_bright 0070  
                __end_of_led_find_device 16E4                          led_increase@chn 0030  
                          _led_load_duty 013D                      pwm4_load_duty@value 0070  
                          _led_para_init 0C39                 ?_led_update_night_status 0070  
                       ?_led_calc_bright 003B           __size_ofi1_led_prepare_to_save 0001  



Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Wed Aug 08 16:36:41 2018

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text24,local,class=CODE,merge=1,delta=2
    28                           	psect	text31,local,class=CODE,merge=1,delta=2
    29                           	psect	text36,local,class=CODE,merge=1,delta=2
    30                           	psect	swtext1,local,class=CONST,delta=2
    31                           	psect	text43,local,class=CODE,merge=1,delta=2
    32                           	psect	text44,local,class=CODE,merge=1,delta=2
    33                           	psect	text53,local,class=CODE,merge=1,delta=2
    34                           	psect	text56,local,class=CODE,merge=1,delta=2
    35                           	psect	text61,local,class=CODE,merge=1,delta=2
    36                           	psect	text65,local,class=CODE,merge=1,delta=2
    37                           	psect	text78,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text82,local,class=CODE,merge=1,delta=2
    40                           	psect	text83,local,class=CODE,merge=1,delta=2
    41                           	psect	text86,local,class=CODE,merge=1,delta=2
    42                           	psect	text87,local,class=CODE,merge=1,delta=2
    43                           	psect	text88,local,class=CODE,merge=1,delta=2
    44                           	psect	text89,local,class=CODE,merge=1,delta=2
    45                           	psect	text90,local,class=CODE,merge=1,delta=2
    46                           	psect	text96,local,class=CODE,merge=1,delta=2
    47                           	psect	text127,local,class=CODE,merge=1,delta=2
    48                           	psect	text128,local,class=CODE,merge=1,delta=2
    49                           	psect	text131,local,class=CODE,merge=1,delta=2
    50                           	psect	text132,local,class=CODE,merge=1,delta=2
    51                           	psect	text133,local,class=CODE,merge=1,delta=2
    52                           	psect	pa_nodes0,global,class=CODE,delta=2
    53                           	dabs	1,0x620,48
    54                           	dabs	1,0x5A0,80
    55                           	dabs	1,0x56D,3
    56                           	dabs	1,0x236D,0,_m_led_para
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 1.45
    60                           ; Generated 16/11/2017 GMT
    61                           ; 
    62                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F18345 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  0010                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0014                     	;# 
   113  0015                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0097                     	;# 
   136  009B                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  0111                     	;# 
   146  0112                     	;# 
   147  0113                     	;# 
   148  0114                     	;# 
   149  0115                     	;# 
   150  0116                     	;# 
   151  0117                     	;# 
   152  0118                     	;# 
   153  0119                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  018E                     	;# 
   157  0197                     	;# 
   158  0199                     	;# 
   159  0199                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019A                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019D                     	;# 
   174  019D                     	;# 
   175  019E                     	;# 
   176  019E                     	;# 
   177  019E                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  020C                     	;# 
   184  020D                     	;# 
   185  020E                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0213                     	;# 
   192  0214                     	;# 
   193  0214                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  0219                     	;# 
   203  021A                     	;# 
   204  021B                     	;# 
   205  021C                     	;# 
   206  021D                     	;# 
   207  021D                     	;# 
   208  021E                     	;# 
   209  021F                     	;# 
   210  028C                     	;# 
   211  028D                     	;# 
   212  028E                     	;# 
   213  0291                     	;# 
   214  0291                     	;# 
   215  0292                     	;# 
   216  0293                     	;# 
   217  0294                     	;# 
   218  0295                     	;# 
   219  0295                     	;# 
   220  0296                     	;# 
   221  0297                     	;# 
   222  0298                     	;# 
   223  029F                     	;# 
   224  030C                     	;# 
   225  030D                     	;# 
   226  030E                     	;# 
   227  0311                     	;# 
   228  0311                     	;# 
   229  0312                     	;# 
   230  0313                     	;# 
   231  0314                     	;# 
   232  0315                     	;# 
   233  0315                     	;# 
   234  0316                     	;# 
   235  0317                     	;# 
   236  0318                     	;# 
   237  038C                     	;# 
   238  038D                     	;# 
   239  038E                     	;# 
   240  0391                     	;# 
   241  0392                     	;# 
   242  0393                     	;# 
   243  0394                     	;# 
   244  0395                     	;# 
   245  0396                     	;# 
   246  0397                     	;# 
   247  0398                     	;# 
   248  0399                     	;# 
   249  039A                     	;# 
   250  039C                     	;# 
   251  039D                     	;# 
   252  039E                     	;# 
   253  039F                     	;# 
   254  0411                     	;# 
   255  0411                     	;# 
   256  0412                     	;# 
   257  0413                     	;# 
   258  0414                     	;# 
   259  0415                     	;# 
   260  0416                     	;# 
   261  0417                     	;# 
   262  0418                     	;# 
   263  0418                     	;# 
   264  0419                     	;# 
   265  041A                     	;# 
   266  041B                     	;# 
   267  041C                     	;# 
   268  041D                     	;# 
   269  041E                     	;# 
   270  041F                     	;# 
   271  0498                     	;# 
   272  0498                     	;# 
   273  0499                     	;# 
   274  049A                     	;# 
   275  049B                     	;# 
   276  049B                     	;# 
   277  049C                     	;# 
   278  049D                     	;# 
   279  049E                     	;# 
   280  049F                     	;# 
   281  0617                     	;# 
   282  0618                     	;# 
   283  0619                     	;# 
   284  0619                     	;# 
   285  061A                     	;# 
   286  061B                     	;# 
   287  061C                     	;# 
   288  061C                     	;# 
   289  061F                     	;# 
   290  0691                     	;# 
   291  0692                     	;# 
   292  0693                     	;# 
   293  0694                     	;# 
   294  0695                     	;# 
   295  0696                     	;# 
   296  0697                     	;# 
   297  0698                     	;# 
   298  0699                     	;# 
   299  0711                     	;# 
   300  0712                     	;# 
   301  0713                     	;# 
   302  0714                     	;# 
   303  0715                     	;# 
   304  0716                     	;# 
   305  0717                     	;# 
   306  0718                     	;# 
   307  0719                     	;# 
   308  0891                     	;# 
   309  0891                     	;# 
   310  0891                     	;# 
   311  0891                     	;# 
   312  0891                     	;# 
   313  0891                     	;# 
   314  0892                     	;# 
   315  0892                     	;# 
   316  0892                     	;# 
   317  0893                     	;# 
   318  0893                     	;# 
   319  0893                     	;# 
   320  0893                     	;# 
   321  0893                     	;# 
   322  0893                     	;# 
   323  0894                     	;# 
   324  0894                     	;# 
   325  0894                     	;# 
   326  0895                     	;# 
   327  0895                     	;# 
   328  0895                     	;# 
   329  0896                     	;# 
   330  0896                     	;# 
   331  0896                     	;# 
   332  089B                     	;# 
   333  0911                     	;# 
   334  0912                     	;# 
   335  0913                     	;# 
   336  0914                     	;# 
   337  0915                     	;# 
   338  0916                     	;# 
   339  0918                     	;# 
   340  0919                     	;# 
   341  091A                     	;# 
   342  091B                     	;# 
   343  091C                     	;# 
   344  091D                     	;# 
   345  091E                     	;# 
   346  091F                     	;# 
   347  0E0F                     	;# 
   348  0E10                     	;# 
   349  0E11                     	;# 
   350  0E12                     	;# 
   351  0E13                     	;# 
   352  0E14                     	;# 
   353  0E15                     	;# 
   354  0E16                     	;# 
   355  0E17                     	;# 
   356  0E18                     	;# 
   357  0E19                     	;# 
   358  0E1A                     	;# 
   359  0E1B                     	;# 
   360  0E1C                     	;# 
   361  0E1D                     	;# 
   362  0E1E                     	;# 
   363  0E1F                     	;# 
   364  0E20                     	;# 
   365  0E21                     	;# 
   366  0E22                     	;# 
   367  0E24                     	;# 
   368  0E25                     	;# 
   369  0E28                     	;# 
   370  0E29                     	;# 
   371  0E2A                     	;# 
   372  0E2B                     	;# 
   373  0E2C                     	;# 
   374  0E2D                     	;# 
   375  0E2E                     	;# 
   376  0E2F                     	;# 
   377  0E90                     	;# 
   378  0E91                     	;# 
   379  0E92                     	;# 
   380  0E94                     	;# 
   381  0E95                     	;# 
   382  0E9C                     	;# 
   383  0E9D                     	;# 
   384  0E9E                     	;# 
   385  0E9F                     	;# 
   386  0EA0                     	;# 
   387  0EA1                     	;# 
   388  0EA2                     	;# 
   389  0EA3                     	;# 
   390  0EA4                     	;# 
   391  0EA5                     	;# 
   392  0EA6                     	;# 
   393  0EA7                     	;# 
   394  0F0F                     	;# 
   395  0F10                     	;# 
   396  0F11                     	;# 
   397  0F12                     	;# 
   398  0F13                     	;# 
   399  0F14                     	;# 
   400  0F15                     	;# 
   401  0F16                     	;# 
   402  0F17                     	;# 
   403  0F18                     	;# 
   404  0F19                     	;# 
   405  0F1A                     	;# 
   406  0F1B                     	;# 
   407  0F1C                     	;# 
   408  0F1D                     	;# 
   409  0F1E                     	;# 
   410  0F1F                     	;# 
   411  0F20                     	;# 
   412  0F21                     	;# 
   413  0F22                     	;# 
   414  0F23                     	;# 
   415  0F24                     	;# 
   416  0F25                     	;# 
   417  0F26                     	;# 
   418  0F27                     	;# 
   419  0F28                     	;# 
   420  0F29                     	;# 
   421  0F2A                     	;# 
   422  0F2B                     	;# 
   423  0F2C                     	;# 
   424  0F2D                     	;# 
   425  0F2E                     	;# 
   426  0F2F                     	;# 
   427  0F30                     	;# 
   428  0F31                     	;# 
   429  0F32                     	;# 
   430  0F33                     	;# 
   431  0F34                     	;# 
   432  0F35                     	;# 
   433  0F36                     	;# 
   434  0F37                     	;# 
   435  0FE4                     	;# 
   436  0FE5                     	;# 
   437  0FE6                     	;# 
   438  0FE7                     	;# 
   439  0FE8                     	;# 
   440  0FE9                     	;# 
   441  0FEA                     	;# 
   442  0FEB                     	;# 
   443  0FED                     	;# 
   444  0FEE                     	;# 
   445  0FEF                     	;# 
   446  0000                     	;# 
   447  0001                     	;# 
   448  0002                     	;# 
   449  0003                     	;# 
   450  0004                     	;# 
   451  0005                     	;# 
   452  0006                     	;# 
   453  0007                     	;# 
   454  0008                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000D                     	;# 
   460  000E                     	;# 
   461  0010                     	;# 
   462  0011                     	;# 
   463  0012                     	;# 
   464  0013                     	;# 
   465  0014                     	;# 
   466  0015                     	;# 
   467  0015                     	;# 
   468  0016                     	;# 
   469  0016                     	;# 
   470  0017                     	;# 
   471  0018                     	;# 
   472  0019                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001C                     	;# 
   477  001D                     	;# 
   478  001E                     	;# 
   479  001F                     	;# 
   480  008C                     	;# 
   481  008D                     	;# 
   482  008E                     	;# 
   483  0090                     	;# 
   484  0091                     	;# 
   485  0092                     	;# 
   486  0093                     	;# 
   487  0094                     	;# 
   488  0097                     	;# 
   489  009B                     	;# 
   490  009B                     	;# 
   491  009C                     	;# 
   492  009D                     	;# 
   493  009E                     	;# 
   494  009F                     	;# 
   495  010C                     	;# 
   496  010D                     	;# 
   497  010E                     	;# 
   498  0111                     	;# 
   499  0112                     	;# 
   500  0113                     	;# 
   501  0114                     	;# 
   502  0115                     	;# 
   503  0116                     	;# 
   504  0117                     	;# 
   505  0118                     	;# 
   506  0119                     	;# 
   507  018C                     	;# 
   508  018D                     	;# 
   509  018E                     	;# 
   510  0197                     	;# 
   511  0199                     	;# 
   512  0199                     	;# 
   513  0199                     	;# 
   514  019A                     	;# 
   515  019A                     	;# 
   516  019A                     	;# 
   517  019B                     	;# 
   518  019B                     	;# 
   519  019B                     	;# 
   520  019B                     	;# 
   521  019B                     	;# 
   522  019C                     	;# 
   523  019C                     	;# 
   524  019C                     	;# 
   525  019D                     	;# 
   526  019D                     	;# 
   527  019D                     	;# 
   528  019E                     	;# 
   529  019E                     	;# 
   530  019E                     	;# 
   531  019F                     	;# 
   532  019F                     	;# 
   533  019F                     	;# 
   534  019F                     	;# 
   535  019F                     	;# 
   536  020C                     	;# 
   537  020D                     	;# 
   538  020E                     	;# 
   539  0211                     	;# 
   540  0211                     	;# 
   541  0212                     	;# 
   542  0212                     	;# 
   543  0213                     	;# 
   544  0213                     	;# 
   545  0214                     	;# 
   546  0214                     	;# 
   547  0215                     	;# 
   548  0215                     	;# 
   549  0215                     	;# 
   550  0215                     	;# 
   551  0216                     	;# 
   552  0216                     	;# 
   553  0217                     	;# 
   554  0217                     	;# 
   555  0219                     	;# 
   556  021A                     	;# 
   557  021B                     	;# 
   558  021C                     	;# 
   559  021D                     	;# 
   560  021D                     	;# 
   561  021E                     	;# 
   562  021F                     	;# 
   563  028C                     	;# 
   564  028D                     	;# 
   565  028E                     	;# 
   566  0291                     	;# 
   567  0291                     	;# 
   568  0292                     	;# 
   569  0293                     	;# 
   570  0294                     	;# 
   571  0295                     	;# 
   572  0295                     	;# 
   573  0296                     	;# 
   574  0297                     	;# 
   575  0298                     	;# 
   576  029F                     	;# 
   577  030C                     	;# 
   578  030D                     	;# 
   579  030E                     	;# 
   580  0311                     	;# 
   581  0311                     	;# 
   582  0312                     	;# 
   583  0313                     	;# 
   584  0314                     	;# 
   585  0315                     	;# 
   586  0315                     	;# 
   587  0316                     	;# 
   588  0317                     	;# 
   589  0318                     	;# 
   590  038C                     	;# 
   591  038D                     	;# 
   592  038E                     	;# 
   593  0391                     	;# 
   594  0392                     	;# 
   595  0393                     	;# 
   596  0394                     	;# 
   597  0395                     	;# 
   598  0396                     	;# 
   599  0397                     	;# 
   600  0398                     	;# 
   601  0399                     	;# 
   602  039A                     	;# 
   603  039C                     	;# 
   604  039D                     	;# 
   605  039E                     	;# 
   606  039F                     	;# 
   607  0411                     	;# 
   608  0411                     	;# 
   609  0412                     	;# 
   610  0413                     	;# 
   611  0414                     	;# 
   612  0415                     	;# 
   613  0416                     	;# 
   614  0417                     	;# 
   615  0418                     	;# 
   616  0418                     	;# 
   617  0419                     	;# 
   618  041A                     	;# 
   619  041B                     	;# 
   620  041C                     	;# 
   621  041D                     	;# 
   622  041E                     	;# 
   623  041F                     	;# 
   624  0498                     	;# 
   625  0498                     	;# 
   626  0499                     	;# 
   627  049A                     	;# 
   628  049B                     	;# 
   629  049B                     	;# 
   630  049C                     	;# 
   631  049D                     	;# 
   632  049E                     	;# 
   633  049F                     	;# 
   634  0617                     	;# 
   635  0618                     	;# 
   636  0619                     	;# 
   637  0619                     	;# 
   638  061A                     	;# 
   639  061B                     	;# 
   640  061C                     	;# 
   641  061C                     	;# 
   642  061F                     	;# 
   643  0691                     	;# 
   644  0692                     	;# 
   645  0693                     	;# 
   646  0694                     	;# 
   647  0695                     	;# 
   648  0696                     	;# 
   649  0697                     	;# 
   650  0698                     	;# 
   651  0699                     	;# 
   652  0711                     	;# 
   653  0712                     	;# 
   654  0713                     	;# 
   655  0714                     	;# 
   656  0715                     	;# 
   657  0716                     	;# 
   658  0717                     	;# 
   659  0718                     	;# 
   660  0719                     	;# 
   661  0891                     	;# 
   662  0891                     	;# 
   663  0891                     	;# 
   664  0891                     	;# 
   665  0891                     	;# 
   666  0891                     	;# 
   667  0892                     	;# 
   668  0892                     	;# 
   669  0892                     	;# 
   670  0893                     	;# 
   671  0893                     	;# 
   672  0893                     	;# 
   673  0893                     	;# 
   674  0893                     	;# 
   675  0893                     	;# 
   676  0894                     	;# 
   677  0894                     	;# 
   678  0894                     	;# 
   679  0895                     	;# 
   680  0895                     	;# 
   681  0895                     	;# 
   682  0896                     	;# 
   683  0896                     	;# 
   684  0896                     	;# 
   685  089B                     	;# 
   686  0911                     	;# 
   687  0912                     	;# 
   688  0913                     	;# 
   689  0914                     	;# 
   690  0915                     	;# 
   691  0916                     	;# 
   692  0918                     	;# 
   693  0919                     	;# 
   694  091A                     	;# 
   695  091B                     	;# 
   696  091C                     	;# 
   697  091D                     	;# 
   698  091E                     	;# 
   699  091F                     	;# 
   700  0E0F                     	;# 
   701  0E10                     	;# 
   702  0E11                     	;# 
   703  0E12                     	;# 
   704  0E13                     	;# 
   705  0E14                     	;# 
   706  0E15                     	;# 
   707  0E16                     	;# 
   708  0E17                     	;# 
   709  0E18                     	;# 
   710  0E19                     	;# 
   711  0E1A                     	;# 
   712  0E1B                     	;# 
   713  0E1C                     	;# 
   714  0E1D                     	;# 
   715  0E1E                     	;# 
   716  0E1F                     	;# 
   717  0E20                     	;# 
   718  0E21                     	;# 
   719  0E22                     	;# 
   720  0E24                     	;# 
   721  0E25                     	;# 
   722  0E28                     	;# 
   723  0E29                     	;# 
   724  0E2A                     	;# 
   725  0E2B                     	;# 
   726  0E2C                     	;# 
   727  0E2D                     	;# 
   728  0E2E                     	;# 
   729  0E2F                     	;# 
   730  0E90                     	;# 
   731  0E91                     	;# 
   732  0E92                     	;# 
   733  0E94                     	;# 
   734  0E95                     	;# 
   735  0E9C                     	;# 
   736  0E9D                     	;# 
   737  0E9E                     	;# 
   738  0E9F                     	;# 
   739  0EA0                     	;# 
   740  0EA1                     	;# 
   741  0EA2                     	;# 
   742  0EA3                     	;# 
   743  0EA4                     	;# 
   744  0EA5                     	;# 
   745  0EA6                     	;# 
   746  0EA7                     	;# 
   747  0F0F                     	;# 
   748  0F10                     	;# 
   749  0F11                     	;# 
   750  0F12                     	;# 
   751  0F13                     	;# 
   752  0F14                     	;# 
   753  0F15                     	;# 
   754  0F16                     	;# 
   755  0F17                     	;# 
   756  0F18                     	;# 
   757  0F19                     	;# 
   758  0F1A                     	;# 
   759  0F1B                     	;# 
   760  0F1C                     	;# 
   761  0F1D                     	;# 
   762  0F1E                     	;# 
   763  0F1F                     	;# 
   764  0F20                     	;# 
   765  0F21                     	;# 
   766  0F22                     	;# 
   767  0F23                     	;# 
   768  0F24                     	;# 
   769  0F25                     	;# 
   770  0F26                     	;# 
   771  0F27                     	;# 
   772  0F28                     	;# 
   773  0F29                     	;# 
   774  0F2A                     	;# 
   775  0F2B                     	;# 
   776  0F2C                     	;# 
   777  0F2D                     	;# 
   778  0F2E                     	;# 
   779  0F2F                     	;# 
   780  0F30                     	;# 
   781  0F31                     	;# 
   782  0F32                     	;# 
   783  0F33                     	;# 
   784  0F34                     	;# 
   785  0F35                     	;# 
   786  0F36                     	;# 
   787  0F37                     	;# 
   788  0FE4                     	;# 
   789  0FE5                     	;# 
   790  0FE6                     	;# 
   791  0FE7                     	;# 
   792  0FE8                     	;# 
   793  0FE9                     	;# 
   794  0FEA                     	;# 
   795  0FEB                     	;# 
   796  0FED                     	;# 
   797  0FEE                     	;# 
   798  0FEF                     	;# 
   799  0000                     	;# 
   800  0001                     	;# 
   801  0002                     	;# 
   802  0003                     	;# 
   803  0004                     	;# 
   804  0005                     	;# 
   805  0006                     	;# 
   806  0007                     	;# 
   807  0008                     	;# 
   808  0009                     	;# 
   809  000A                     	;# 
   810  000B                     	;# 
   811  000C                     	;# 
   812  000D                     	;# 
   813  000E                     	;# 
   814  0010                     	;# 
   815  0011                     	;# 
   816  0012                     	;# 
   817  0013                     	;# 
   818  0014                     	;# 
   819  0015                     	;# 
   820  0015                     	;# 
   821  0016                     	;# 
   822  0016                     	;# 
   823  0017                     	;# 
   824  0018                     	;# 
   825  0019                     	;# 
   826  0019                     	;# 
   827  001A                     	;# 
   828  001B                     	;# 
   829  001C                     	;# 
   830  001D                     	;# 
   831  001E                     	;# 
   832  001F                     	;# 
   833  008C                     	;# 
   834  008D                     	;# 
   835  008E                     	;# 
   836  0090                     	;# 
   837  0091                     	;# 
   838  0092                     	;# 
   839  0093                     	;# 
   840  0094                     	;# 
   841  0097                     	;# 
   842  009B                     	;# 
   843  009B                     	;# 
   844  009C                     	;# 
   845  009D                     	;# 
   846  009E                     	;# 
   847  009F                     	;# 
   848  010C                     	;# 
   849  010D                     	;# 
   850  010E                     	;# 
   851  0111                     	;# 
   852  0112                     	;# 
   853  0113                     	;# 
   854  0114                     	;# 
   855  0115                     	;# 
   856  0116                     	;# 
   857  0117                     	;# 
   858  0118                     	;# 
   859  0119                     	;# 
   860  018C                     	;# 
   861  018D                     	;# 
   862  018E                     	;# 
   863  0197                     	;# 
   864  0199                     	;# 
   865  0199                     	;# 
   866  0199                     	;# 
   867  019A                     	;# 
   868  019A                     	;# 
   869  019A                     	;# 
   870  019B                     	;# 
   871  019B                     	;# 
   872  019B                     	;# 
   873  019B                     	;# 
   874  019B                     	;# 
   875  019C                     	;# 
   876  019C                     	;# 
   877  019C                     	;# 
   878  019D                     	;# 
   879  019D                     	;# 
   880  019D                     	;# 
   881  019E                     	;# 
   882  019E                     	;# 
   883  019E                     	;# 
   884  019F                     	;# 
   885  019F                     	;# 
   886  019F                     	;# 
   887  019F                     	;# 
   888  019F                     	;# 
   889  020C                     	;# 
   890  020D                     	;# 
   891  020E                     	;# 
   892  0211                     	;# 
   893  0211                     	;# 
   894  0212                     	;# 
   895  0212                     	;# 
   896  0213                     	;# 
   897  0213                     	;# 
   898  0214                     	;# 
   899  0214                     	;# 
   900  0215                     	;# 
   901  0215                     	;# 
   902  0215                     	;# 
   903  0215                     	;# 
   904  0216                     	;# 
   905  0216                     	;# 
   906  0217                     	;# 
   907  0217                     	;# 
   908  0219                     	;# 
   909  021A                     	;# 
   910  021B                     	;# 
   911  021C                     	;# 
   912  021D                     	;# 
   913  021D                     	;# 
   914  021E                     	;# 
   915  021F                     	;# 
   916  028C                     	;# 
   917  028D                     	;# 
   918  028E                     	;# 
   919  0291                     	;# 
   920  0291                     	;# 
   921  0292                     	;# 
   922  0293                     	;# 
   923  0294                     	;# 
   924  0295                     	;# 
   925  0295                     	;# 
   926  0296                     	;# 
   927  0297                     	;# 
   928  0298                     	;# 
   929  029F                     	;# 
   930  030C                     	;# 
   931  030D                     	;# 
   932  030E                     	;# 
   933  0311                     	;# 
   934  0311                     	;# 
   935  0312                     	;# 
   936  0313                     	;# 
   937  0314                     	;# 
   938  0315                     	;# 
   939  0315                     	;# 
   940  0316                     	;# 
   941  0317                     	;# 
   942  0318                     	;# 
   943  038C                     	;# 
   944  038D                     	;# 
   945  038E                     	;# 
   946  0391                     	;# 
   947  0392                     	;# 
   948  0393                     	;# 
   949  0394                     	;# 
   950  0395                     	;# 
   951  0396                     	;# 
   952  0397                     	;# 
   953  0398                     	;# 
   954  0399                     	;# 
   955  039A                     	;# 
   956  039C                     	;# 
   957  039D                     	;# 
   958  039E                     	;# 
   959  039F                     	;# 
   960  0411                     	;# 
   961  0411                     	;# 
   962  0412                     	;# 
   963  0413                     	;# 
   964  0414                     	;# 
   965  0415                     	;# 
   966  0416                     	;# 
   967  0417                     	;# 
   968  0418                     	;# 
   969  0418                     	;# 
   970  0419                     	;# 
   971  041A                     	;# 
   972  041B                     	;# 
   973  041C                     	;# 
   974  041D                     	;# 
   975  041E                     	;# 
   976  041F                     	;# 
   977  0498                     	;# 
   978  0498                     	;# 
   979  0499                     	;# 
   980  049A                     	;# 
   981  049B                     	;# 
   982  049B                     	;# 
   983  049C                     	;# 
   984  049D                     	;# 
   985  049E                     	;# 
   986  049F                     	;# 
   987  0617                     	;# 
   988  0618                     	;# 
   989  0619                     	;# 
   990  0619                     	;# 
   991  061A                     	;# 
   992  061B                     	;# 
   993  061C                     	;# 
   994  061C                     	;# 
   995  061F                     	;# 
   996  0691                     	;# 
   997  0692                     	;# 
   998  0693                     	;# 
   999  0694                     	;# 
  1000  0695                     	;# 
  1001  0696                     	;# 
  1002  0697                     	;# 
  1003  0698                     	;# 
  1004  0699                     	;# 
  1005  0711                     	;# 
  1006  0712                     	;# 
  1007  0713                     	;# 
  1008  0714                     	;# 
  1009  0715                     	;# 
  1010  0716                     	;# 
  1011  0717                     	;# 
  1012  0718                     	;# 
  1013  0719                     	;# 
  1014  0891                     	;# 
  1015  0891                     	;# 
  1016  0891                     	;# 
  1017  0891                     	;# 
  1018  0891                     	;# 
  1019  0891                     	;# 
  1020  0892                     	;# 
  1021  0892                     	;# 
  1022  0892                     	;# 
  1023  0893                     	;# 
  1024  0893                     	;# 
  1025  0893                     	;# 
  1026  0893                     	;# 
  1027  0893                     	;# 
  1028  0893                     	;# 
  1029  0894                     	;# 
  1030  0894                     	;# 
  1031  0894                     	;# 
  1032  0895                     	;# 
  1033  0895                     	;# 
  1034  0895                     	;# 
  1035  0896                     	;# 
  1036  0896                     	;# 
  1037  0896                     	;# 
  1038  089B                     	;# 
  1039  0911                     	;# 
  1040  0912                     	;# 
  1041  0913                     	;# 
  1042  0914                     	;# 
  1043  0915                     	;# 
  1044  0916                     	;# 
  1045  0918                     	;# 
  1046  0919                     	;# 
  1047  091A                     	;# 
  1048  091B                     	;# 
  1049  091C                     	;# 
  1050  091D                     	;# 
  1051  091E                     	;# 
  1052  091F                     	;# 
  1053  0E0F                     	;# 
  1054  0E10                     	;# 
  1055  0E11                     	;# 
  1056  0E12                     	;# 
  1057  0E13                     	;# 
  1058  0E14                     	;# 
  1059  0E15                     	;# 
  1060  0E16                     	;# 
  1061  0E17                     	;# 
  1062  0E18                     	;# 
  1063  0E19                     	;# 
  1064  0E1A                     	;# 
  1065  0E1B                     	;# 
  1066  0E1C                     	;# 
  1067  0E1D                     	;# 
  1068  0E1E                     	;# 
  1069  0E1F                     	;# 
  1070  0E20                     	;# 
  1071  0E21                     	;# 
  1072  0E22                     	;# 
  1073  0E24                     	;# 
  1074  0E25                     	;# 
  1075  0E28                     	;# 
  1076  0E29                     	;# 
  1077  0E2A                     	;# 
  1078  0E2B                     	;# 
  1079  0E2C                     	;# 
  1080  0E2D                     	;# 
  1081  0E2E                     	;# 
  1082  0E2F                     	;# 
  1083  0E90                     	;# 
  1084  0E91                     	;# 
  1085  0E92                     	;# 
  1086  0E94                     	;# 
  1087  0E95                     	;# 
  1088  0E9C                     	;# 
  1089  0E9D                     	;# 
  1090  0E9E                     	;# 
  1091  0E9F                     	;# 
  1092  0EA0                     	;# 
  1093  0EA1                     	;# 
  1094  0EA2                     	;# 
  1095  0EA3                     	;# 
  1096  0EA4                     	;# 
  1097  0EA5                     	;# 
  1098  0EA6                     	;# 
  1099  0EA7                     	;# 
  1100  0F0F                     	;# 
  1101  0F10                     	;# 
  1102  0F11                     	;# 
  1103  0F12                     	;# 
  1104  0F13                     	;# 
  1105  0F14                     	;# 
  1106  0F15                     	;# 
  1107  0F16                     	;# 
  1108  0F17                     	;# 
  1109  0F18                     	;# 
  1110  0F19                     	;# 
  1111  0F1A                     	;# 
  1112  0F1B                     	;# 
  1113  0F1C                     	;# 
  1114  0F1D                     	;# 
  1115  0F1E                     	;# 
  1116  0F1F                     	;# 
  1117  0F20                     	;# 
  1118  0F21                     	;# 
  1119  0F22                     	;# 
  1120  0F23                     	;# 
  1121  0F24                     	;# 
  1122  0F25                     	;# 
  1123  0F26                     	;# 
  1124  0F27                     	;# 
  1125  0F28                     	;# 
  1126  0F29                     	;# 
  1127  0F2A                     	;# 
  1128  0F2B                     	;# 
  1129  0F2C                     	;# 
  1130  0F2D                     	;# 
  1131  0F2E                     	;# 
  1132  0F2F                     	;# 
  1133  0F30                     	;# 
  1134  0F31                     	;# 
  1135  0F32                     	;# 
  1136  0F33                     	;# 
  1137  0F34                     	;# 
  1138  0F35                     	;# 
  1139  0F36                     	;# 
  1140  0F37                     	;# 
  1141  0FE4                     	;# 
  1142  0FE5                     	;# 
  1143  0FE6                     	;# 
  1144  0FE7                     	;# 
  1145  0FE8                     	;# 
  1146  0FE9                     	;# 
  1147  0FEA                     	;# 
  1148  0FEB                     	;# 
  1149  0FED                     	;# 
  1150  0FEE                     	;# 
  1151  0FEF                     	;# 
  1152  0000                     	;# 
  1153  0001                     	;# 
  1154  0002                     	;# 
  1155  0003                     	;# 
  1156  0004                     	;# 
  1157  0005                     	;# 
  1158  0006                     	;# 
  1159  0007                     	;# 
  1160  0008                     	;# 
  1161  0009                     	;# 
  1162  000A                     	;# 
  1163  000B                     	;# 
  1164  000C                     	;# 
  1165  000D                     	;# 
  1166  000E                     	;# 
  1167  0010                     	;# 
  1168  0011                     	;# 
  1169  0012                     	;# 
  1170  0013                     	;# 
  1171  0014                     	;# 
  1172  0015                     	;# 
  1173  0015                     	;# 
  1174  0016                     	;# 
  1175  0016                     	;# 
  1176  0017                     	;# 
  1177  0018                     	;# 
  1178  0019                     	;# 
  1179  0019                     	;# 
  1180  001A                     	;# 
  1181  001B                     	;# 
  1182  001C                     	;# 
  1183  001D                     	;# 
  1184  001E                     	;# 
  1185  001F                     	;# 
  1186  008C                     	;# 
  1187  008D                     	;# 
  1188  008E                     	;# 
  1189  0090                     	;# 
  1190  0091                     	;# 
  1191  0092                     	;# 
  1192  0093                     	;# 
  1193  0094                     	;# 
  1194  0097                     	;# 
  1195  009B                     	;# 
  1196  009B                     	;# 
  1197  009C                     	;# 
  1198  009D                     	;# 
  1199  009E                     	;# 
  1200  009F                     	;# 
  1201  010C                     	;# 
  1202  010D                     	;# 
  1203  010E                     	;# 
  1204  0111                     	;# 
  1205  0112                     	;# 
  1206  0113                     	;# 
  1207  0114                     	;# 
  1208  0115                     	;# 
  1209  0116                     	;# 
  1210  0117                     	;# 
  1211  0118                     	;# 
  1212  0119                     	;# 
  1213  018C                     	;# 
  1214  018D                     	;# 
  1215  018E                     	;# 
  1216  0197                     	;# 
  1217  0199                     	;# 
  1218  0199                     	;# 
  1219  0199                     	;# 
  1220  019A                     	;# 
  1221  019A                     	;# 
  1222  019A                     	;# 
  1223  019B                     	;# 
  1224  019B                     	;# 
  1225  019B                     	;# 
  1226  019B                     	;# 
  1227  019B                     	;# 
  1228  019C                     	;# 
  1229  019C                     	;# 
  1230  019C                     	;# 
  1231  019D                     	;# 
  1232  019D                     	;# 
  1233  019D                     	;# 
  1234  019E                     	;# 
  1235  019E                     	;# 
  1236  019E                     	;# 
  1237  019F                     	;# 
  1238  019F                     	;# 
  1239  019F                     	;# 
  1240  019F                     	;# 
  1241  019F                     	;# 
  1242  020C                     	;# 
  1243  020D                     	;# 
  1244  020E                     	;# 
  1245  0211                     	;# 
  1246  0211                     	;# 
  1247  0212                     	;# 
  1248  0212                     	;# 
  1249  0213                     	;# 
  1250  0213                     	;# 
  1251  0214                     	;# 
  1252  0214                     	;# 
  1253  0215                     	;# 
  1254  0215                     	;# 
  1255  0215                     	;# 
  1256  0215                     	;# 
  1257  0216                     	;# 
  1258  0216                     	;# 
  1259  0217                     	;# 
  1260  0217                     	;# 
  1261  0219                     	;# 
  1262  021A                     	;# 
  1263  021B                     	;# 
  1264  021C                     	;# 
  1265  021D                     	;# 
  1266  021D                     	;# 
  1267  021E                     	;# 
  1268  021F                     	;# 
  1269  028C                     	;# 
  1270  028D                     	;# 
  1271  028E                     	;# 
  1272  0291                     	;# 
  1273  0291                     	;# 
  1274  0292                     	;# 
  1275  0293                     	;# 
  1276  0294                     	;# 
  1277  0295                     	;# 
  1278  0295                     	;# 
  1279  0296                     	;# 
  1280  0297                     	;# 
  1281  0298                     	;# 
  1282  029F                     	;# 
  1283  030C                     	;# 
  1284  030D                     	;# 
  1285  030E                     	;# 
  1286  0311                     	;# 
  1287  0311                     	;# 
  1288  0312                     	;# 
  1289  0313                     	;# 
  1290  0314                     	;# 
  1291  0315                     	;# 
  1292  0315                     	;# 
  1293  0316                     	;# 
  1294  0317                     	;# 
  1295  0318                     	;# 
  1296  038C                     	;# 
  1297  038D                     	;# 
  1298  038E                     	;# 
  1299  0391                     	;# 
  1300  0392                     	;# 
  1301  0393                     	;# 
  1302  0394                     	;# 
  1303  0395                     	;# 
  1304  0396                     	;# 
  1305  0397                     	;# 
  1306  0398                     	;# 
  1307  0399                     	;# 
  1308  039A                     	;# 
  1309  039C                     	;# 
  1310  039D                     	;# 
  1311  039E                     	;# 
  1312  039F                     	;# 
  1313  0411                     	;# 
  1314  0411                     	;# 
  1315  0412                     	;# 
  1316  0413                     	;# 
  1317  0414                     	;# 
  1318  0415                     	;# 
  1319  0416                     	;# 
  1320  0417                     	;# 
  1321  0418                     	;# 
  1322  0418                     	;# 
  1323  0419                     	;# 
  1324  041A                     	;# 
  1325  041B                     	;# 
  1326  041C                     	;# 
  1327  041D                     	;# 
  1328  041E                     	;# 
  1329  041F                     	;# 
  1330  0498                     	;# 
  1331  0498                     	;# 
  1332  0499                     	;# 
  1333  049A                     	;# 
  1334  049B                     	;# 
  1335  049B                     	;# 
  1336  049C                     	;# 
  1337  049D                     	;# 
  1338  049E                     	;# 
  1339  049F                     	;# 
  1340  0617                     	;# 
  1341  0618                     	;# 
  1342  0619                     	;# 
  1343  0619                     	;# 
  1344  061A                     	;# 
  1345  061B                     	;# 
  1346  061C                     	;# 
  1347  061C                     	;# 
  1348  061F                     	;# 
  1349  0691                     	;# 
  1350  0692                     	;# 
  1351  0693                     	;# 
  1352  0694                     	;# 
  1353  0695                     	;# 
  1354  0696                     	;# 
  1355  0697                     	;# 
  1356  0698                     	;# 
  1357  0699                     	;# 
  1358  0711                     	;# 
  1359  0712                     	;# 
  1360  0713                     	;# 
  1361  0714                     	;# 
  1362  0715                     	;# 
  1363  0716                     	;# 
  1364  0717                     	;# 
  1365  0718                     	;# 
  1366  0719                     	;# 
  1367  0891                     	;# 
  1368  0891                     	;# 
  1369  0891                     	;# 
  1370  0891                     	;# 
  1371  0891                     	;# 
  1372  0891                     	;# 
  1373  0892                     	;# 
  1374  0892                     	;# 
  1375  0892                     	;# 
  1376  0893                     	;# 
  1377  0893                     	;# 
  1378  0893                     	;# 
  1379  0893                     	;# 
  1380  0893                     	;# 
  1381  0893                     	;# 
  1382  0894                     	;# 
  1383  0894                     	;# 
  1384  0894                     	;# 
  1385  0895                     	;# 
  1386  0895                     	;# 
  1387  0895                     	;# 
  1388  0896                     	;# 
  1389  0896                     	;# 
  1390  0896                     	;# 
  1391  089B                     	;# 
  1392  0911                     	;# 
  1393  0912                     	;# 
  1394  0913                     	;# 
  1395  0914                     	;# 
  1396  0915                     	;# 
  1397  0916                     	;# 
  1398  0918                     	;# 
  1399  0919                     	;# 
  1400  091A                     	;# 
  1401  091B                     	;# 
  1402  091C                     	;# 
  1403  091D                     	;# 
  1404  091E                     	;# 
  1405  091F                     	;# 
  1406  0E0F                     	;# 
  1407  0E10                     	;# 
  1408  0E11                     	;# 
  1409  0E12                     	;# 
  1410  0E13                     	;# 
  1411  0E14                     	;# 
  1412  0E15                     	;# 
  1413  0E16                     	;# 
  1414  0E17                     	;# 
  1415  0E18                     	;# 
  1416  0E19                     	;# 
  1417  0E1A                     	;# 
  1418  0E1B                     	;# 
  1419  0E1C                     	;# 
  1420  0E1D                     	;# 
  1421  0E1E                     	;# 
  1422  0E1F                     	;# 
  1423  0E20                     	;# 
  1424  0E21                     	;# 
  1425  0E22                     	;# 
  1426  0E24                     	;# 
  1427  0E25                     	;# 
  1428  0E28                     	;# 
  1429  0E29                     	;# 
  1430  0E2A                     	;# 
  1431  0E2B                     	;# 
  1432  0E2C                     	;# 
  1433  0E2D                     	;# 
  1434  0E2E                     	;# 
  1435  0E2F                     	;# 
  1436  0E90                     	;# 
  1437  0E91                     	;# 
  1438  0E92                     	;# 
  1439  0E94                     	;# 
  1440  0E95                     	;# 
  1441  0E9C                     	;# 
  1442  0E9D                     	;# 
  1443  0E9E                     	;# 
  1444  0E9F                     	;# 
  1445  0EA0                     	;# 
  1446  0EA1                     	;# 
  1447  0EA2                     	;# 
  1448  0EA3                     	;# 
  1449  0EA4                     	;# 
  1450  0EA5                     	;# 
  1451  0EA6                     	;# 
  1452  0EA7                     	;# 
  1453  0F0F                     	;# 
  1454  0F10                     	;# 
  1455  0F11                     	;# 
  1456  0F12                     	;# 
  1457  0F13                     	;# 
  1458  0F14                     	;# 
  1459  0F15                     	;# 
  1460  0F16                     	;# 
  1461  0F17                     	;# 
  1462  0F18                     	;# 
  1463  0F19                     	;# 
  1464  0F1A                     	;# 
  1465  0F1B                     	;# 
  1466  0F1C                     	;# 
  1467  0F1D                     	;# 
  1468  0F1E                     	;# 
  1469  0F1F                     	;# 
  1470  0F20                     	;# 
  1471  0F21                     	;# 
  1472  0F22                     	;# 
  1473  0F23                     	;# 
  1474  0F24                     	;# 
  1475  0F25                     	;# 
  1476  0F26                     	;# 
  1477  0F27                     	;# 
  1478  0F28                     	;# 
  1479  0F29                     	;# 
  1480  0F2A                     	;# 
  1481  0F2B                     	;# 
  1482  0F2C                     	;# 
  1483  0F2D                     	;# 
  1484  0F2E                     	;# 
  1485  0F2F                     	;# 
  1486  0F30                     	;# 
  1487  0F31                     	;# 
  1488  0F32                     	;# 
  1489  0F33                     	;# 
  1490  0F34                     	;# 
  1491  0F35                     	;# 
  1492  0F36                     	;# 
  1493  0F37                     	;# 
  1494  0FE4                     	;# 
  1495  0FE5                     	;# 
  1496  0FE6                     	;# 
  1497  0FE7                     	;# 
  1498  0FE8                     	;# 
  1499  0FE9                     	;# 
  1500  0FEA                     	;# 
  1501  0FEB                     	;# 
  1502  0FED                     	;# 
  1503  0FEE                     	;# 
  1504  0FEF                     	;# 
  1505  0000                     	;# 
  1506  0001                     	;# 
  1507  0002                     	;# 
  1508  0003                     	;# 
  1509  0004                     	;# 
  1510  0005                     	;# 
  1511  0006                     	;# 
  1512  0007                     	;# 
  1513  0008                     	;# 
  1514  0009                     	;# 
  1515  000A                     	;# 
  1516  000B                     	;# 
  1517  000C                     	;# 
  1518  000D                     	;# 
  1519  000E                     	;# 
  1520  0010                     	;# 
  1521  0011                     	;# 
  1522  0012                     	;# 
  1523  0013                     	;# 
  1524  0014                     	;# 
  1525  0015                     	;# 
  1526  0015                     	;# 
  1527  0016                     	;# 
  1528  0016                     	;# 
  1529  0017                     	;# 
  1530  0018                     	;# 
  1531  0019                     	;# 
  1532  0019                     	;# 
  1533  001A                     	;# 
  1534  001B                     	;# 
  1535  001C                     	;# 
  1536  001D                     	;# 
  1537  001E                     	;# 
  1538  001F                     	;# 
  1539  008C                     	;# 
  1540  008D                     	;# 
  1541  008E                     	;# 
  1542  0090                     	;# 
  1543  0091                     	;# 
  1544  0092                     	;# 
  1545  0093                     	;# 
  1546  0094                     	;# 
  1547  0097                     	;# 
  1548  009B                     	;# 
  1549  009B                     	;# 
  1550  009C                     	;# 
  1551  009D                     	;# 
  1552  009E                     	;# 
  1553  009F                     	;# 
  1554  010C                     	;# 
  1555  010D                     	;# 
  1556  010E                     	;# 
  1557  0111                     	;# 
  1558  0112                     	;# 
  1559  0113                     	;# 
  1560  0114                     	;# 
  1561  0115                     	;# 
  1562  0116                     	;# 
  1563  0117                     	;# 
  1564  0118                     	;# 
  1565  0119                     	;# 
  1566  018C                     	;# 
  1567  018D                     	;# 
  1568  018E                     	;# 
  1569  0197                     	;# 
  1570  0199                     	;# 
  1571  0199                     	;# 
  1572  0199                     	;# 
  1573  019A                     	;# 
  1574  019A                     	;# 
  1575  019A                     	;# 
  1576  019B                     	;# 
  1577  019B                     	;# 
  1578  019B                     	;# 
  1579  019B                     	;# 
  1580  019B                     	;# 
  1581  019C                     	;# 
  1582  019C                     	;# 
  1583  019C                     	;# 
  1584  019D                     	;# 
  1585  019D                     	;# 
  1586  019D                     	;# 
  1587  019E                     	;# 
  1588  019E                     	;# 
  1589  019E                     	;# 
  1590  019F                     	;# 
  1591  019F                     	;# 
  1592  019F                     	;# 
  1593  019F                     	;# 
  1594  019F                     	;# 
  1595  020C                     	;# 
  1596  020D                     	;# 
  1597  020E                     	;# 
  1598  0211                     	;# 
  1599  0211                     	;# 
  1600  0212                     	;# 
  1601  0212                     	;# 
  1602  0213                     	;# 
  1603  0213                     	;# 
  1604  0214                     	;# 
  1605  0214                     	;# 
  1606  0215                     	;# 
  1607  0215                     	;# 
  1608  0215                     	;# 
  1609  0215                     	;# 
  1610  0216                     	;# 
  1611  0216                     	;# 
  1612  0217                     	;# 
  1613  0217                     	;# 
  1614  0219                     	;# 
  1615  021A                     	;# 
  1616  021B                     	;# 
  1617  021C                     	;# 
  1618  021D                     	;# 
  1619  021D                     	;# 
  1620  021E                     	;# 
  1621  021F                     	;# 
  1622  028C                     	;# 
  1623  028D                     	;# 
  1624  028E                     	;# 
  1625  0291                     	;# 
  1626  0291                     	;# 
  1627  0292                     	;# 
  1628  0293                     	;# 
  1629  0294                     	;# 
  1630  0295                     	;# 
  1631  0295                     	;# 
  1632  0296                     	;# 
  1633  0297                     	;# 
  1634  0298                     	;# 
  1635  029F                     	;# 
  1636  030C                     	;# 
  1637  030D                     	;# 
  1638  030E                     	;# 
  1639  0311                     	;# 
  1640  0311                     	;# 
  1641  0312                     	;# 
  1642  0313                     	;# 
  1643  0314                     	;# 
  1644  0315                     	;# 
  1645  0315                     	;# 
  1646  0316                     	;# 
  1647  0317                     	;# 
  1648  0318                     	;# 
  1649  038C                     	;# 
  1650  038D                     	;# 
  1651  038E                     	;# 
  1652  0391                     	;# 
  1653  0392                     	;# 
  1654  0393                     	;# 
  1655  0394                     	;# 
  1656  0395                     	;# 
  1657  0396                     	;# 
  1658  0397                     	;# 
  1659  0398                     	;# 
  1660  0399                     	;# 
  1661  039A                     	;# 
  1662  039C                     	;# 
  1663  039D                     	;# 
  1664  039E                     	;# 
  1665  039F                     	;# 
  1666  0411                     	;# 
  1667  0411                     	;# 
  1668  0412                     	;# 
  1669  0413                     	;# 
  1670  0414                     	;# 
  1671  0415                     	;# 
  1672  0416                     	;# 
  1673  0417                     	;# 
  1674  0418                     	;# 
  1675  0418                     	;# 
  1676  0419                     	;# 
  1677  041A                     	;# 
  1678  041B                     	;# 
  1679  041C                     	;# 
  1680  041D                     	;# 
  1681  041E                     	;# 
  1682  041F                     	;# 
  1683  0498                     	;# 
  1684  0498                     	;# 
  1685  0499                     	;# 
  1686  049A                     	;# 
  1687  049B                     	;# 
  1688  049B                     	;# 
  1689  049C                     	;# 
  1690  049D                     	;# 
  1691  049E                     	;# 
  1692  049F                     	;# 
  1693  0617                     	;# 
  1694  0618                     	;# 
  1695  0619                     	;# 
  1696  0619                     	;# 
  1697  061A                     	;# 
  1698  061B                     	;# 
  1699  061C                     	;# 
  1700  061C                     	;# 
  1701  061F                     	;# 
  1702  0691                     	;# 
  1703  0692                     	;# 
  1704  0693                     	;# 
  1705  0694                     	;# 
  1706  0695                     	;# 
  1707  0696                     	;# 
  1708  0697                     	;# 
  1709  0698                     	;# 
  1710  0699                     	;# 
  1711  0711                     	;# 
  1712  0712                     	;# 
  1713  0713                     	;# 
  1714  0714                     	;# 
  1715  0715                     	;# 
  1716  0716                     	;# 
  1717  0717                     	;# 
  1718  0718                     	;# 
  1719  0719                     	;# 
  1720  0891                     	;# 
  1721  0891                     	;# 
  1722  0891                     	;# 
  1723  0891                     	;# 
  1724  0891                     	;# 
  1725  0891                     	;# 
  1726  0892                     	;# 
  1727  0892                     	;# 
  1728  0892                     	;# 
  1729  0893                     	;# 
  1730  0893                     	;# 
  1731  0893                     	;# 
  1732  0893                     	;# 
  1733  0893                     	;# 
  1734  0893                     	;# 
  1735  0894                     	;# 
  1736  0894                     	;# 
  1737  0894                     	;# 
  1738  0895                     	;# 
  1739  0895                     	;# 
  1740  0895                     	;# 
  1741  0896                     	;# 
  1742  0896                     	;# 
  1743  0896                     	;# 
  1744  089B                     	;# 
  1745  0911                     	;# 
  1746  0912                     	;# 
  1747  0913                     	;# 
  1748  0914                     	;# 
  1749  0915                     	;# 
  1750  0916                     	;# 
  1751  0918                     	;# 
  1752  0919                     	;# 
  1753  091A                     	;# 
  1754  091B                     	;# 
  1755  091C                     	;# 
  1756  091D                     	;# 
  1757  091E                     	;# 
  1758  091F                     	;# 
  1759  0E0F                     	;# 
  1760  0E10                     	;# 
  1761  0E11                     	;# 
  1762  0E12                     	;# 
  1763  0E13                     	;# 
  1764  0E14                     	;# 
  1765  0E15                     	;# 
  1766  0E16                     	;# 
  1767  0E17                     	;# 
  1768  0E18                     	;# 
  1769  0E19                     	;# 
  1770  0E1A                     	;# 
  1771  0E1B                     	;# 
  1772  0E1C                     	;# 
  1773  0E1D                     	;# 
  1774  0E1E                     	;# 
  1775  0E1F                     	;# 
  1776  0E20                     	;# 
  1777  0E21                     	;# 
  1778  0E22                     	;# 
  1779  0E24                     	;# 
  1780  0E25                     	;# 
  1781  0E28                     	;# 
  1782  0E29                     	;# 
  1783  0E2A                     	;# 
  1784  0E2B                     	;# 
  1785  0E2C                     	;# 
  1786  0E2D                     	;# 
  1787  0E2E                     	;# 
  1788  0E2F                     	;# 
  1789  0E90                     	;# 
  1790  0E91                     	;# 
  1791  0E92                     	;# 
  1792  0E94                     	;# 
  1793  0E95                     	;# 
  1794  0E9C                     	;# 
  1795  0E9D                     	;# 
  1796  0E9E                     	;# 
  1797  0E9F                     	;# 
  1798  0EA0                     	;# 
  1799  0EA1                     	;# 
  1800  0EA2                     	;# 
  1801  0EA3                     	;# 
  1802  0EA4                     	;# 
  1803  0EA5                     	;# 
  1804  0EA6                     	;# 
  1805  0EA7                     	;# 
  1806  0F0F                     	;# 
  1807  0F10                     	;# 
  1808  0F11                     	;# 
  1809  0F12                     	;# 
  1810  0F13                     	;# 
  1811  0F14                     	;# 
  1812  0F15                     	;# 
  1813  0F16                     	;# 
  1814  0F17                     	;# 
  1815  0F18                     	;# 
  1816  0F19                     	;# 
  1817  0F1A                     	;# 
  1818  0F1B                     	;# 
  1819  0F1C                     	;# 
  1820  0F1D                     	;# 
  1821  0F1E                     	;# 
  1822  0F1F                     	;# 
  1823  0F20                     	;# 
  1824  0F21                     	;# 
  1825  0F22                     	;# 
  1826  0F23                     	;# 
  1827  0F24                     	;# 
  1828  0F25                     	;# 
  1829  0F26                     	;# 
  1830  0F27                     	;# 
  1831  0F28                     	;# 
  1832  0F29                     	;# 
  1833  0F2A                     	;# 
  1834  0F2B                     	;# 
  1835  0F2C                     	;# 
  1836  0F2D                     	;# 
  1837  0F2E                     	;# 
  1838  0F2F                     	;# 
  1839  0F30                     	;# 
  1840  0F31                     	;# 
  1841  0F32                     	;# 
  1842  0F33                     	;# 
  1843  0F34                     	;# 
  1844  0F35                     	;# 
  1845  0F36                     	;# 
  1846  0F37                     	;# 
  1847  0FE4                     	;# 
  1848  0FE5                     	;# 
  1849  0FE6                     	;# 
  1850  0FE7                     	;# 
  1851  0FE8                     	;# 
  1852  0FE9                     	;# 
  1853  0FEA                     	;# 
  1854  0FEB                     	;# 
  1855  0FED                     	;# 
  1856  0FEE                     	;# 
  1857  0FEF                     	;# 
  1858  0000                     	;# 
  1859  0001                     	;# 
  1860  0002                     	;# 
  1861  0003                     	;# 
  1862  0004                     	;# 
  1863  0005                     	;# 
  1864  0006                     	;# 
  1865  0007                     	;# 
  1866  0008                     	;# 
  1867  0009                     	;# 
  1868  000A                     	;# 
  1869  000B                     	;# 
  1870  000C                     	;# 
  1871  000D                     	;# 
  1872  000E                     	;# 
  1873  0010                     	;# 
  1874  0011                     	;# 
  1875  0012                     	;# 
  1876  0013                     	;# 
  1877  0014                     	;# 
  1878  0015                     	;# 
  1879  0015                     	;# 
  1880  0016                     	;# 
  1881  0016                     	;# 
  1882  0017                     	;# 
  1883  0018                     	;# 
  1884  0019                     	;# 
  1885  0019                     	;# 
  1886  001A                     	;# 
  1887  001B                     	;# 
  1888  001C                     	;# 
  1889  001D                     	;# 
  1890  001E                     	;# 
  1891  001F                     	;# 
  1892  008C                     	;# 
  1893  008D                     	;# 
  1894  008E                     	;# 
  1895  0090                     	;# 
  1896  0091                     	;# 
  1897  0092                     	;# 
  1898  0093                     	;# 
  1899  0094                     	;# 
  1900  0097                     	;# 
  1901  009B                     	;# 
  1902  009B                     	;# 
  1903  009C                     	;# 
  1904  009D                     	;# 
  1905  009E                     	;# 
  1906  009F                     	;# 
  1907  010C                     	;# 
  1908  010D                     	;# 
  1909  010E                     	;# 
  1910  0111                     	;# 
  1911  0112                     	;# 
  1912  0113                     	;# 
  1913  0114                     	;# 
  1914  0115                     	;# 
  1915  0116                     	;# 
  1916  0117                     	;# 
  1917  0118                     	;# 
  1918  0119                     	;# 
  1919  018C                     	;# 
  1920  018D                     	;# 
  1921  018E                     	;# 
  1922  0197                     	;# 
  1923  0199                     	;# 
  1924  0199                     	;# 
  1925  0199                     	;# 
  1926  019A                     	;# 
  1927  019A                     	;# 
  1928  019A                     	;# 
  1929  019B                     	;# 
  1930  019B                     	;# 
  1931  019B                     	;# 
  1932  019B                     	;# 
  1933  019B                     	;# 
  1934  019C                     	;# 
  1935  019C                     	;# 
  1936  019C                     	;# 
  1937  019D                     	;# 
  1938  019D                     	;# 
  1939  019D                     	;# 
  1940  019E                     	;# 
  1941  019E                     	;# 
  1942  019E                     	;# 
  1943  019F                     	;# 
  1944  019F                     	;# 
  1945  019F                     	;# 
  1946  019F                     	;# 
  1947  019F                     	;# 
  1948  020C                     	;# 
  1949  020D                     	;# 
  1950  020E                     	;# 
  1951  0211                     	;# 
  1952  0211                     	;# 
  1953  0212                     	;# 
  1954  0212                     	;# 
  1955  0213                     	;# 
  1956  0213                     	;# 
  1957  0214                     	;# 
  1958  0214                     	;# 
  1959  0215                     	;# 
  1960  0215                     	;# 
  1961  0215                     	;# 
  1962  0215                     	;# 
  1963  0216                     	;# 
  1964  0216                     	;# 
  1965  0217                     	;# 
  1966  0217                     	;# 
  1967  0219                     	;# 
  1968  021A                     	;# 
  1969  021B                     	;# 
  1970  021C                     	;# 
  1971  021D                     	;# 
  1972  021D                     	;# 
  1973  021E                     	;# 
  1974  021F                     	;# 
  1975  028C                     	;# 
  1976  028D                     	;# 
  1977  028E                     	;# 
  1978  0291                     	;# 
  1979  0291                     	;# 
  1980  0292                     	;# 
  1981  0293                     	;# 
  1982  0294                     	;# 
  1983  0295                     	;# 
  1984  0295                     	;# 
  1985  0296                     	;# 
  1986  0297                     	;# 
  1987  0298                     	;# 
  1988  029F                     	;# 
  1989  030C                     	;# 
  1990  030D                     	;# 
  1991  030E                     	;# 
  1992  0311                     	;# 
  1993  0311                     	;# 
  1994  0312                     	;# 
  1995  0313                     	;# 
  1996  0314                     	;# 
  1997  0315                     	;# 
  1998  0315                     	;# 
  1999  0316                     	;# 
  2000  0317                     	;# 
  2001  0318                     	;# 
  2002  038C                     	;# 
  2003  038D                     	;# 
  2004  038E                     	;# 
  2005  0391                     	;# 
  2006  0392                     	;# 
  2007  0393                     	;# 
  2008  0394                     	;# 
  2009  0395                     	;# 
  2010  0396                     	;# 
  2011  0397                     	;# 
  2012  0398                     	;# 
  2013  0399                     	;# 
  2014  039A                     	;# 
  2015  039C                     	;# 
  2016  039D                     	;# 
  2017  039E                     	;# 
  2018  039F                     	;# 
  2019  0411                     	;# 
  2020  0411                     	;# 
  2021  0412                     	;# 
  2022  0413                     	;# 
  2023  0414                     	;# 
  2024  0415                     	;# 
  2025  0416                     	;# 
  2026  0417                     	;# 
  2027  0418                     	;# 
  2028  0418                     	;# 
  2029  0419                     	;# 
  2030  041A                     	;# 
  2031  041B                     	;# 
  2032  041C                     	;# 
  2033  041D                     	;# 
  2034  041E                     	;# 
  2035  041F                     	;# 
  2036  0498                     	;# 
  2037  0498                     	;# 
  2038  0499                     	;# 
  2039  049A                     	;# 
  2040  049B                     	;# 
  2041  049B                     	;# 
  2042  049C                     	;# 
  2043  049D                     	;# 
  2044  049E                     	;# 
  2045  049F                     	;# 
  2046  0617                     	;# 
  2047  0618                     	;# 
  2048  0619                     	;# 
  2049  0619                     	;# 
  2050  061A                     	;# 
  2051  061B                     	;# 
  2052  061C                     	;# 
  2053  061C                     	;# 
  2054  061F                     	;# 
  2055  0691                     	;# 
  2056  0692                     	;# 
  2057  0693                     	;# 
  2058  0694                     	;# 
  2059  0695                     	;# 
  2060  0696                     	;# 
  2061  0697                     	;# 
  2062  0698                     	;# 
  2063  0699                     	;# 
  2064  0711                     	;# 
  2065  0712                     	;# 
  2066  0713                     	;# 
  2067  0714                     	;# 
  2068  0715                     	;# 
  2069  0716                     	;# 
  2070  0717                     	;# 
  2071  0718                     	;# 
  2072  0719                     	;# 
  2073  0891                     	;# 
  2074  0891                     	;# 
  2075  0891                     	;# 
  2076  0891                     	;# 
  2077  0891                     	;# 
  2078  0891                     	;# 
  2079  0892                     	;# 
  2080  0892                     	;# 
  2081  0892                     	;# 
  2082  0893                     	;# 
  2083  0893                     	;# 
  2084  0893                     	;# 
  2085  0893                     	;# 
  2086  0893                     	;# 
  2087  0893                     	;# 
  2088  0894                     	;# 
  2089  0894                     	;# 
  2090  0894                     	;# 
  2091  0895                     	;# 
  2092  0895                     	;# 
  2093  0895                     	;# 
  2094  0896                     	;# 
  2095  0896                     	;# 
  2096  0896                     	;# 
  2097  089B                     	;# 
  2098  0911                     	;# 
  2099  0912                     	;# 
  2100  0913                     	;# 
  2101  0914                     	;# 
  2102  0915                     	;# 
  2103  0916                     	;# 
  2104  0918                     	;# 
  2105  0919                     	;# 
  2106  091A                     	;# 
  2107  091B                     	;# 
  2108  091C                     	;# 
  2109  091D                     	;# 
  2110  091E                     	;# 
  2111  091F                     	;# 
  2112  0E0F                     	;# 
  2113  0E10                     	;# 
  2114  0E11                     	;# 
  2115  0E12                     	;# 
  2116  0E13                     	;# 
  2117  0E14                     	;# 
  2118  0E15                     	;# 
  2119  0E16                     	;# 
  2120  0E17                     	;# 
  2121  0E18                     	;# 
  2122  0E19                     	;# 
  2123  0E1A                     	;# 
  2124  0E1B                     	;# 
  2125  0E1C                     	;# 
  2126  0E1D                     	;# 
  2127  0E1E                     	;# 
  2128  0E1F                     	;# 
  2129  0E20                     	;# 
  2130  0E21                     	;# 
  2131  0E22                     	;# 
  2132  0E24                     	;# 
  2133  0E25                     	;# 
  2134  0E28                     	;# 
  2135  0E29                     	;# 
  2136  0E2A                     	;# 
  2137  0E2B                     	;# 
  2138  0E2C                     	;# 
  2139  0E2D                     	;# 
  2140  0E2E                     	;# 
  2141  0E2F                     	;# 
  2142  0E90                     	;# 
  2143  0E91                     	;# 
  2144  0E92                     	;# 
  2145  0E94                     	;# 
  2146  0E95                     	;# 
  2147  0E9C                     	;# 
  2148  0E9D                     	;# 
  2149  0E9E                     	;# 
  2150  0E9F                     	;# 
  2151  0EA0                     	;# 
  2152  0EA1                     	;# 
  2153  0EA2                     	;# 
  2154  0EA3                     	;# 
  2155  0EA4                     	;# 
  2156  0EA5                     	;# 
  2157  0EA6                     	;# 
  2158  0EA7                     	;# 
  2159  0F0F                     	;# 
  2160  0F10                     	;# 
  2161  0F11                     	;# 
  2162  0F12                     	;# 
  2163  0F13                     	;# 
  2164  0F14                     	;# 
  2165  0F15                     	;# 
  2166  0F16                     	;# 
  2167  0F17                     	;# 
  2168  0F18                     	;# 
  2169  0F19                     	;# 
  2170  0F1A                     	;# 
  2171  0F1B                     	;# 
  2172  0F1C                     	;# 
  2173  0F1D                     	;# 
  2174  0F1E                     	;# 
  2175  0F1F                     	;# 
  2176  0F20                     	;# 
  2177  0F21                     	;# 
  2178  0F22                     	;# 
  2179  0F23                     	;# 
  2180  0F24                     	;# 
  2181  0F25                     	;# 
  2182  0F26                     	;# 
  2183  0F27                     	;# 
  2184  0F28                     	;# 
  2185  0F29                     	;# 
  2186  0F2A                     	;# 
  2187  0F2B                     	;# 
  2188  0F2C                     	;# 
  2189  0F2D                     	;# 
  2190  0F2E                     	;# 
  2191  0F2F                     	;# 
  2192  0F30                     	;# 
  2193  0F31                     	;# 
  2194  0F32                     	;# 
  2195  0F33                     	;# 
  2196  0F34                     	;# 
  2197  0F35                     	;# 
  2198  0F36                     	;# 
  2199  0F37                     	;# 
  2200  0FE4                     	;# 
  2201  0FE5                     	;# 
  2202  0FE6                     	;# 
  2203  0FE7                     	;# 
  2204  0FE8                     	;# 
  2205  0FE9                     	;# 
  2206  0FEA                     	;# 
  2207  0FEB                     	;# 
  2208  0FED                     	;# 
  2209  0FEE                     	;# 
  2210  0FEF                     	;# 
  2211  0000                     	;# 
  2212  0001                     	;# 
  2213  0002                     	;# 
  2214  0003                     	;# 
  2215  0004                     	;# 
  2216  0005                     	;# 
  2217  0006                     	;# 
  2218  0007                     	;# 
  2219  0008                     	;# 
  2220  0009                     	;# 
  2221  000A                     	;# 
  2222  000B                     	;# 
  2223  000C                     	;# 
  2224  000D                     	;# 
  2225  000E                     	;# 
  2226  0010                     	;# 
  2227  0011                     	;# 
  2228  0012                     	;# 
  2229  0013                     	;# 
  2230  0014                     	;# 
  2231  0015                     	;# 
  2232  0015                     	;# 
  2233  0016                     	;# 
  2234  0016                     	;# 
  2235  0017                     	;# 
  2236  0018                     	;# 
  2237  0019                     	;# 
  2238  0019                     	;# 
  2239  001A                     	;# 
  2240  001B                     	;# 
  2241  001C                     	;# 
  2242  001D                     	;# 
  2243  001E                     	;# 
  2244  001F                     	;# 
  2245  008C                     	;# 
  2246  008D                     	;# 
  2247  008E                     	;# 
  2248  0090                     	;# 
  2249  0091                     	;# 
  2250  0092                     	;# 
  2251  0093                     	;# 
  2252  0094                     	;# 
  2253  0097                     	;# 
  2254  009B                     	;# 
  2255  009B                     	;# 
  2256  009C                     	;# 
  2257  009D                     	;# 
  2258  009E                     	;# 
  2259  009F                     	;# 
  2260  010C                     	;# 
  2261  010D                     	;# 
  2262  010E                     	;# 
  2263  0111                     	;# 
  2264  0112                     	;# 
  2265  0113                     	;# 
  2266  0114                     	;# 
  2267  0115                     	;# 
  2268  0116                     	;# 
  2269  0117                     	;# 
  2270  0118                     	;# 
  2271  0119                     	;# 
  2272  018C                     	;# 
  2273  018D                     	;# 
  2274  018E                     	;# 
  2275  0197                     	;# 
  2276  0199                     	;# 
  2277  0199                     	;# 
  2278  0199                     	;# 
  2279  019A                     	;# 
  2280  019A                     	;# 
  2281  019A                     	;# 
  2282  019B                     	;# 
  2283  019B                     	;# 
  2284  019B                     	;# 
  2285  019B                     	;# 
  2286  019B                     	;# 
  2287  019C                     	;# 
  2288  019C                     	;# 
  2289  019C                     	;# 
  2290  019D                     	;# 
  2291  019D                     	;# 
  2292  019D                     	;# 
  2293  019E                     	;# 
  2294  019E                     	;# 
  2295  019E                     	;# 
  2296  019F                     	;# 
  2297  019F                     	;# 
  2298  019F                     	;# 
  2299  019F                     	;# 
  2300  019F                     	;# 
  2301  020C                     	;# 
  2302  020D                     	;# 
  2303  020E                     	;# 
  2304  0211                     	;# 
  2305  0211                     	;# 
  2306  0212                     	;# 
  2307  0212                     	;# 
  2308  0213                     	;# 
  2309  0213                     	;# 
  2310  0214                     	;# 
  2311  0214                     	;# 
  2312  0215                     	;# 
  2313  0215                     	;# 
  2314  0215                     	;# 
  2315  0215                     	;# 
  2316  0216                     	;# 
  2317  0216                     	;# 
  2318  0217                     	;# 
  2319  0217                     	;# 
  2320  0219                     	;# 
  2321  021A                     	;# 
  2322  021B                     	;# 
  2323  021C                     	;# 
  2324  021D                     	;# 
  2325  021D                     	;# 
  2326  021E                     	;# 
  2327  021F                     	;# 
  2328  028C                     	;# 
  2329  028D                     	;# 
  2330  028E                     	;# 
  2331  0291                     	;# 
  2332  0291                     	;# 
  2333  0292                     	;# 
  2334  0293                     	;# 
  2335  0294                     	;# 
  2336  0295                     	;# 
  2337  0295                     	;# 
  2338  0296                     	;# 
  2339  0297                     	;# 
  2340  0298                     	;# 
  2341  029F                     	;# 
  2342  030C                     	;# 
  2343  030D                     	;# 
  2344  030E                     	;# 
  2345  0311                     	;# 
  2346  0311                     	;# 
  2347  0312                     	;# 
  2348  0313                     	;# 
  2349  0314                     	;# 
  2350  0315                     	;# 
  2351  0315                     	;# 
  2352  0316                     	;# 
  2353  0317                     	;# 
  2354  0318                     	;# 
  2355  038C                     	;# 
  2356  038D                     	;# 
  2357  038E                     	;# 
  2358  0391                     	;# 
  2359  0392                     	;# 
  2360  0393                     	;# 
  2361  0394                     	;# 
  2362  0395                     	;# 
  2363  0396                     	;# 
  2364  0397                     	;# 
  2365  0398                     	;# 
  2366  0399                     	;# 
  2367  039A                     	;# 
  2368  039C                     	;# 
  2369  039D                     	;# 
  2370  039E                     	;# 
  2371  039F                     	;# 
  2372  0411                     	;# 
  2373  0411                     	;# 
  2374  0412                     	;# 
  2375  0413                     	;# 
  2376  0414                     	;# 
  2377  0415                     	;# 
  2378  0416                     	;# 
  2379  0417                     	;# 
  2380  0418                     	;# 
  2381  0418                     	;# 
  2382  0419                     	;# 
  2383  041A                     	;# 
  2384  041B                     	;# 
  2385  041C                     	;# 
  2386  041D                     	;# 
  2387  041E                     	;# 
  2388  041F                     	;# 
  2389  0498                     	;# 
  2390  0498                     	;# 
  2391  0499                     	;# 
  2392  049A                     	;# 
  2393  049B                     	;# 
  2394  049B                     	;# 
  2395  049C                     	;# 
  2396  049D                     	;# 
  2397  049E                     	;# 
  2398  049F                     	;# 
  2399  0617                     	;# 
  2400  0618                     	;# 
  2401  0619                     	;# 
  2402  0619                     	;# 
  2403  061A                     	;# 
  2404  061B                     	;# 
  2405  061C                     	;# 
  2406  061C                     	;# 
  2407  061F                     	;# 
  2408  0691                     	;# 
  2409  0692                     	;# 
  2410  0693                     	;# 
  2411  0694                     	;# 
  2412  0695                     	;# 
  2413  0696                     	;# 
  2414  0697                     	;# 
  2415  0698                     	;# 
  2416  0699                     	;# 
  2417  0711                     	;# 
  2418  0712                     	;# 
  2419  0713                     	;# 
  2420  0714                     	;# 
  2421  0715                     	;# 
  2422  0716                     	;# 
  2423  0717                     	;# 
  2424  0718                     	;# 
  2425  0719                     	;# 
  2426  0891                     	;# 
  2427  0891                     	;# 
  2428  0891                     	;# 
  2429  0891                     	;# 
  2430  0891                     	;# 
  2431  0891                     	;# 
  2432  0892                     	;# 
  2433  0892                     	;# 
  2434  0892                     	;# 
  2435  0893                     	;# 
  2436  0893                     	;# 
  2437  0893                     	;# 
  2438  0893                     	;# 
  2439  0893                     	;# 
  2440  0893                     	;# 
  2441  0894                     	;# 
  2442  0894                     	;# 
  2443  0894                     	;# 
  2444  0895                     	;# 
  2445  0895                     	;# 
  2446  0895                     	;# 
  2447  0896                     	;# 
  2448  0896                     	;# 
  2449  0896                     	;# 
  2450  089B                     	;# 
  2451  0911                     	;# 
  2452  0912                     	;# 
  2453  0913                     	;# 
  2454  0914                     	;# 
  2455  0915                     	;# 
  2456  0916                     	;# 
  2457  0918                     	;# 
  2458  0919                     	;# 
  2459  091A                     	;# 
  2460  091B                     	;# 
  2461  091C                     	;# 
  2462  091D                     	;# 
  2463  091E                     	;# 
  2464  091F                     	;# 
  2465  0E0F                     	;# 
  2466  0E10                     	;# 
  2467  0E11                     	;# 
  2468  0E12                     	;# 
  2469  0E13                     	;# 
  2470  0E14                     	;# 
  2471  0E15                     	;# 
  2472  0E16                     	;# 
  2473  0E17                     	;# 
  2474  0E18                     	;# 
  2475  0E19                     	;# 
  2476  0E1A                     	;# 
  2477  0E1B                     	;# 
  2478  0E1C                     	;# 
  2479  0E1D                     	;# 
  2480  0E1E                     	;# 
  2481  0E1F                     	;# 
  2482  0E20                     	;# 
  2483  0E21                     	;# 
  2484  0E22                     	;# 
  2485  0E24                     	;# 
  2486  0E25                     	;# 
  2487  0E28                     	;# 
  2488  0E29                     	;# 
  2489  0E2A                     	;# 
  2490  0E2B                     	;# 
  2491  0E2C                     	;# 
  2492  0E2D                     	;# 
  2493  0E2E                     	;# 
  2494  0E2F                     	;# 
  2495  0E90                     	;# 
  2496  0E91                     	;# 
  2497  0E92                     	;# 
  2498  0E94                     	;# 
  2499  0E95                     	;# 
  2500  0E9C                     	;# 
  2501  0E9D                     	;# 
  2502  0E9E                     	;# 
  2503  0E9F                     	;# 
  2504  0EA0                     	;# 
  2505  0EA1                     	;# 
  2506  0EA2                     	;# 
  2507  0EA3                     	;# 
  2508  0EA4                     	;# 
  2509  0EA5                     	;# 
  2510  0EA6                     	;# 
  2511  0EA7                     	;# 
  2512  0F0F                     	;# 
  2513  0F10                     	;# 
  2514  0F11                     	;# 
  2515  0F12                     	;# 
  2516  0F13                     	;# 
  2517  0F14                     	;# 
  2518  0F15                     	;# 
  2519  0F16                     	;# 
  2520  0F17                     	;# 
  2521  0F18                     	;# 
  2522  0F19                     	;# 
  2523  0F1A                     	;# 
  2524  0F1B                     	;# 
  2525  0F1C                     	;# 
  2526  0F1D                     	;# 
  2527  0F1E                     	;# 
  2528  0F1F                     	;# 
  2529  0F20                     	;# 
  2530  0F21                     	;# 
  2531  0F22                     	;# 
  2532  0F23                     	;# 
  2533  0F24                     	;# 
  2534  0F25                     	;# 
  2535  0F26                     	;# 
  2536  0F27                     	;# 
  2537  0F28                     	;# 
  2538  0F29                     	;# 
  2539  0F2A                     	;# 
  2540  0F2B                     	;# 
  2541  0F2C                     	;# 
  2542  0F2D                     	;# 
  2543  0F2E                     	;# 
  2544  0F2F                     	;# 
  2545  0F30                     	;# 
  2546  0F31                     	;# 
  2547  0F32                     	;# 
  2548  0F33                     	;# 
  2549  0F34                     	;# 
  2550  0F35                     	;# 
  2551  0F36                     	;# 
  2552  0F37                     	;# 
  2553  0FE4                     	;# 
  2554  0FE5                     	;# 
  2555  0FE6                     	;# 
  2556  0FE7                     	;# 
  2557  0FE8                     	;# 
  2558  0FE9                     	;# 
  2559  0FEA                     	;# 
  2560  0FEB                     	;# 
  2561  0FED                     	;# 
  2562  0FEE                     	;# 
  2563  0FEF                     	;# 
  2564  0000                     	;# 
  2565  0001                     	;# 
  2566  0002                     	;# 
  2567  0003                     	;# 
  2568  0004                     	;# 
  2569  0005                     	;# 
  2570  0006                     	;# 
  2571  0007                     	;# 
  2572  0008                     	;# 
  2573  0009                     	;# 
  2574  000A                     	;# 
  2575  000B                     	;# 
  2576  000C                     	;# 
  2577  000D                     	;# 
  2578  000E                     	;# 
  2579  0010                     	;# 
  2580  0011                     	;# 
  2581  0012                     	;# 
  2582  0013                     	;# 
  2583  0014                     	;# 
  2584  0015                     	;# 
  2585  0015                     	;# 
  2586  0016                     	;# 
  2587  0016                     	;# 
  2588  0017                     	;# 
  2589  0018                     	;# 
  2590  0019                     	;# 
  2591  0019                     	;# 
  2592  001A                     	;# 
  2593  001B                     	;# 
  2594  001C                     	;# 
  2595  001D                     	;# 
  2596  001E                     	;# 
  2597  001F                     	;# 
  2598  008C                     	;# 
  2599  008D                     	;# 
  2600  008E                     	;# 
  2601  0090                     	;# 
  2602  0091                     	;# 
  2603  0092                     	;# 
  2604  0093                     	;# 
  2605  0094                     	;# 
  2606  0097                     	;# 
  2607  009B                     	;# 
  2608  009B                     	;# 
  2609  009C                     	;# 
  2610  009D                     	;# 
  2611  009E                     	;# 
  2612  009F                     	;# 
  2613  010C                     	;# 
  2614  010D                     	;# 
  2615  010E                     	;# 
  2616  0111                     	;# 
  2617  0112                     	;# 
  2618  0113                     	;# 
  2619  0114                     	;# 
  2620  0115                     	;# 
  2621  0116                     	;# 
  2622  0117                     	;# 
  2623  0118                     	;# 
  2624  0119                     	;# 
  2625  018C                     	;# 
  2626  018D                     	;# 
  2627  018E                     	;# 
  2628  0197                     	;# 
  2629  0199                     	;# 
  2630  0199                     	;# 
  2631  0199                     	;# 
  2632  019A                     	;# 
  2633  019A                     	;# 
  2634  019A                     	;# 
  2635  019B                     	;# 
  2636  019B                     	;# 
  2637  019B                     	;# 
  2638  019B                     	;# 
  2639  019B                     	;# 
  2640  019C                     	;# 
  2641  019C                     	;# 
  2642  019C                     	;# 
  2643  019D                     	;# 
  2644  019D                     	;# 
  2645  019D                     	;# 
  2646  019E                     	;# 
  2647  019E                     	;# 
  2648  019E                     	;# 
  2649  019F                     	;# 
  2650  019F                     	;# 
  2651  019F                     	;# 
  2652  019F                     	;# 
  2653  019F                     	;# 
  2654  020C                     	;# 
  2655  020D                     	;# 
  2656  020E                     	;# 
  2657  0211                     	;# 
  2658  0211                     	;# 
  2659  0212                     	;# 
  2660  0212                     	;# 
  2661  0213                     	;# 
  2662  0213                     	;# 
  2663  0214                     	;# 
  2664  0214                     	;# 
  2665  0215                     	;# 
  2666  0215                     	;# 
  2667  0215                     	;# 
  2668  0215                     	;# 
  2669  0216                     	;# 
  2670  0216                     	;# 
  2671  0217                     	;# 
  2672  0217                     	;# 
  2673  0219                     	;# 
  2674  021A                     	;# 
  2675  021B                     	;# 
  2676  021C                     	;# 
  2677  021D                     	;# 
  2678  021D                     	;# 
  2679  021E                     	;# 
  2680  021F                     	;# 
  2681  028C                     	;# 
  2682  028D                     	;# 
  2683  028E                     	;# 
  2684  0291                     	;# 
  2685  0291                     	;# 
  2686  0292                     	;# 
  2687  0293                     	;# 
  2688  0294                     	;# 
  2689  0295                     	;# 
  2690  0295                     	;# 
  2691  0296                     	;# 
  2692  0297                     	;# 
  2693  0298                     	;# 
  2694  029F                     	;# 
  2695  030C                     	;# 
  2696  030D                     	;# 
  2697  030E                     	;# 
  2698  0311                     	;# 
  2699  0311                     	;# 
  2700  0312                     	;# 
  2701  0313                     	;# 
  2702  0314                     	;# 
  2703  0315                     	;# 
  2704  0315                     	;# 
  2705  0316                     	;# 
  2706  0317                     	;# 
  2707  0318                     	;# 
  2708  038C                     	;# 
  2709  038D                     	;# 
  2710  038E                     	;# 
  2711  0391                     	;# 
  2712  0392                     	;# 
  2713  0393                     	;# 
  2714  0394                     	;# 
  2715  0395                     	;# 
  2716  0396                     	;# 
  2717  0397                     	;# 
  2718  0398                     	;# 
  2719  0399                     	;# 
  2720  039A                     	;# 
  2721  039C                     	;# 
  2722  039D                     	;# 
  2723  039E                     	;# 
  2724  039F                     	;# 
  2725  0411                     	;# 
  2726  0411                     	;# 
  2727  0412                     	;# 
  2728  0413                     	;# 
  2729  0414                     	;# 
  2730  0415                     	;# 
  2731  0416                     	;# 
  2732  0417                     	;# 
  2733  0418                     	;# 
  2734  0418                     	;# 
  2735  0419                     	;# 
  2736  041A                     	;# 
  2737  041B                     	;# 
  2738  041C                     	;# 
  2739  041D                     	;# 
  2740  041E                     	;# 
  2741  041F                     	;# 
  2742  0498                     	;# 
  2743  0498                     	;# 
  2744  0499                     	;# 
  2745  049A                     	;# 
  2746  049B                     	;# 
  2747  049B                     	;# 
  2748  049C                     	;# 
  2749  049D                     	;# 
  2750  049E                     	;# 
  2751  049F                     	;# 
  2752  0617                     	;# 
  2753  0618                     	;# 
  2754  0619                     	;# 
  2755  0619                     	;# 
  2756  061A                     	;# 
  2757  061B                     	;# 
  2758  061C                     	;# 
  2759  061C                     	;# 
  2760  061F                     	;# 
  2761  0691                     	;# 
  2762  0692                     	;# 
  2763  0693                     	;# 
  2764  0694                     	;# 
  2765  0695                     	;# 
  2766  0696                     	;# 
  2767  0697                     	;# 
  2768  0698                     	;# 
  2769  0699                     	;# 
  2770  0711                     	;# 
  2771  0712                     	;# 
  2772  0713                     	;# 
  2773  0714                     	;# 
  2774  0715                     	;# 
  2775  0716                     	;# 
  2776  0717                     	;# 
  2777  0718                     	;# 
  2778  0719                     	;# 
  2779  0891                     	;# 
  2780  0891                     	;# 
  2781  0891                     	;# 
  2782  0891                     	;# 
  2783  0891                     	;# 
  2784  0891                     	;# 
  2785  0892                     	;# 
  2786  0892                     	;# 
  2787  0892                     	;# 
  2788  0893                     	;# 
  2789  0893                     	;# 
  2790  0893                     	;# 
  2791  0893                     	;# 
  2792  0893                     	;# 
  2793  0893                     	;# 
  2794  0894                     	;# 
  2795  0894                     	;# 
  2796  0894                     	;# 
  2797  0895                     	;# 
  2798  0895                     	;# 
  2799  0895                     	;# 
  2800  0896                     	;# 
  2801  0896                     	;# 
  2802  0896                     	;# 
  2803  089B                     	;# 
  2804  0911                     	;# 
  2805  0912                     	;# 
  2806  0913                     	;# 
  2807  0914                     	;# 
  2808  0915                     	;# 
  2809  0916                     	;# 
  2810  0918                     	;# 
  2811  0919                     	;# 
  2812  091A                     	;# 
  2813  091B                     	;# 
  2814  091C                     	;# 
  2815  091D                     	;# 
  2816  091E                     	;# 
  2817  091F                     	;# 
  2818  0E0F                     	;# 
  2819  0E10                     	;# 
  2820  0E11                     	;# 
  2821  0E12                     	;# 
  2822  0E13                     	;# 
  2823  0E14                     	;# 
  2824  0E15                     	;# 
  2825  0E16                     	;# 
  2826  0E17                     	;# 
  2827  0E18                     	;# 
  2828  0E19                     	;# 
  2829  0E1A                     	;# 
  2830  0E1B                     	;# 
  2831  0E1C                     	;# 
  2832  0E1D                     	;# 
  2833  0E1E                     	;# 
  2834  0E1F                     	;# 
  2835  0E20                     	;# 
  2836  0E21                     	;# 
  2837  0E22                     	;# 
  2838  0E24                     	;# 
  2839  0E25                     	;# 
  2840  0E28                     	;# 
  2841  0E29                     	;# 
  2842  0E2A                     	;# 
  2843  0E2B                     	;# 
  2844  0E2C                     	;# 
  2845  0E2D                     	;# 
  2846  0E2E                     	;# 
  2847  0E2F                     	;# 
  2848  0E90                     	;# 
  2849  0E91                     	;# 
  2850  0E92                     	;# 
  2851  0E94                     	;# 
  2852  0E95                     	;# 
  2853  0E9C                     	;# 
  2854  0E9D                     	;# 
  2855  0E9E                     	;# 
  2856  0E9F                     	;# 
  2857  0EA0                     	;# 
  2858  0EA1                     	;# 
  2859  0EA2                     	;# 
  2860  0EA3                     	;# 
  2861  0EA4                     	;# 
  2862  0EA5                     	;# 
  2863  0EA6                     	;# 
  2864  0EA7                     	;# 
  2865  0F0F                     	;# 
  2866  0F10                     	;# 
  2867  0F11                     	;# 
  2868  0F12                     	;# 
  2869  0F13                     	;# 
  2870  0F14                     	;# 
  2871  0F15                     	;# 
  2872  0F16                     	;# 
  2873  0F17                     	;# 
  2874  0F18                     	;# 
  2875  0F19                     	;# 
  2876  0F1A                     	;# 
  2877  0F1B                     	;# 
  2878  0F1C                     	;# 
  2879  0F1D                     	;# 
  2880  0F1E                     	;# 
  2881  0F1F                     	;# 
  2882  0F20                     	;# 
  2883  0F21                     	;# 
  2884  0F22                     	;# 
  2885  0F23                     	;# 
  2886  0F24                     	;# 
  2887  0F25                     	;# 
  2888  0F26                     	;# 
  2889  0F27                     	;# 
  2890  0F28                     	;# 
  2891  0F29                     	;# 
  2892  0F2A                     	;# 
  2893  0F2B                     	;# 
  2894  0F2C                     	;# 
  2895  0F2D                     	;# 
  2896  0F2E                     	;# 
  2897  0F2F                     	;# 
  2898  0F30                     	;# 
  2899  0F31                     	;# 
  2900  0F32                     	;# 
  2901  0F33                     	;# 
  2902  0F34                     	;# 
  2903  0F35                     	;# 
  2904  0F36                     	;# 
  2905  0F37                     	;# 
  2906  0FE4                     	;# 
  2907  0FE5                     	;# 
  2908  0FE6                     	;# 
  2909  0FE7                     	;# 
  2910  0FE8                     	;# 
  2911  0FE9                     	;# 
  2912  0FEA                     	;# 
  2913  0FEB                     	;# 
  2914  0FED                     	;# 
  2915  0FEE                     	;# 
  2916  0FEF                     	;# 
  2917  0000                     	;# 
  2918  0001                     	;# 
  2919  0002                     	;# 
  2920  0003                     	;# 
  2921  0004                     	;# 
  2922  0005                     	;# 
  2923  0006                     	;# 
  2924  0007                     	;# 
  2925  0008                     	;# 
  2926  0009                     	;# 
  2927  000A                     	;# 
  2928  000B                     	;# 
  2929  000C                     	;# 
  2930  000D                     	;# 
  2931  000E                     	;# 
  2932  0010                     	;# 
  2933  0011                     	;# 
  2934  0012                     	;# 
  2935  0013                     	;# 
  2936  0014                     	;# 
  2937  0015                     	;# 
  2938  0015                     	;# 
  2939  0016                     	;# 
  2940  0016                     	;# 
  2941  0017                     	;# 
  2942  0018                     	;# 
  2943  0019                     	;# 
  2944  0019                     	;# 
  2945  001A                     	;# 
  2946  001B                     	;# 
  2947  001C                     	;# 
  2948  001D                     	;# 
  2949  001E                     	;# 
  2950  001F                     	;# 
  2951  008C                     	;# 
  2952  008D                     	;# 
  2953  008E                     	;# 
  2954  0090                     	;# 
  2955  0091                     	;# 
  2956  0092                     	;# 
  2957  0093                     	;# 
  2958  0094                     	;# 
  2959  0097                     	;# 
  2960  009B                     	;# 
  2961  009B                     	;# 
  2962  009C                     	;# 
  2963  009D                     	;# 
  2964  009E                     	;# 
  2965  009F                     	;# 
  2966  010C                     	;# 
  2967  010D                     	;# 
  2968  010E                     	;# 
  2969  0111                     	;# 
  2970  0112                     	;# 
  2971  0113                     	;# 
  2972  0114                     	;# 
  2973  0115                     	;# 
  2974  0116                     	;# 
  2975  0117                     	;# 
  2976  0118                     	;# 
  2977  0119                     	;# 
  2978  018C                     	;# 
  2979  018D                     	;# 
  2980  018E                     	;# 
  2981  0197                     	;# 
  2982  0199                     	;# 
  2983  0199                     	;# 
  2984  0199                     	;# 
  2985  019A                     	;# 
  2986  019A                     	;# 
  2987  019A                     	;# 
  2988  019B                     	;# 
  2989  019B                     	;# 
  2990  019B                     	;# 
  2991  019B                     	;# 
  2992  019B                     	;# 
  2993  019C                     	;# 
  2994  019C                     	;# 
  2995  019C                     	;# 
  2996  019D                     	;# 
  2997  019D                     	;# 
  2998  019D                     	;# 
  2999  019E                     	;# 
  3000  019E                     	;# 
  3001  019E                     	;# 
  3002  019F                     	;# 
  3003  019F                     	;# 
  3004  019F                     	;# 
  3005  019F                     	;# 
  3006  019F                     	;# 
  3007  020C                     	;# 
  3008  020D                     	;# 
  3009  020E                     	;# 
  3010  0211                     	;# 
  3011  0211                     	;# 
  3012  0212                     	;# 
  3013  0212                     	;# 
  3014  0213                     	;# 
  3015  0213                     	;# 
  3016  0214                     	;# 
  3017  0214                     	;# 
  3018  0215                     	;# 
  3019  0215                     	;# 
  3020  0215                     	;# 
  3021  0215                     	;# 
  3022  0216                     	;# 
  3023  0216                     	;# 
  3024  0217                     	;# 
  3025  0217                     	;# 
  3026  0219                     	;# 
  3027  021A                     	;# 
  3028  021B                     	;# 
  3029  021C                     	;# 
  3030  021D                     	;# 
  3031  021D                     	;# 
  3032  021E                     	;# 
  3033  021F                     	;# 
  3034  028C                     	;# 
  3035  028D                     	;# 
  3036  028E                     	;# 
  3037  0291                     	;# 
  3038  0291                     	;# 
  3039  0292                     	;# 
  3040  0293                     	;# 
  3041  0294                     	;# 
  3042  0295                     	;# 
  3043  0295                     	;# 
  3044  0296                     	;# 
  3045  0297                     	;# 
  3046  0298                     	;# 
  3047  029F                     	;# 
  3048  030C                     	;# 
  3049  030D                     	;# 
  3050  030E                     	;# 
  3051  0311                     	;# 
  3052  0311                     	;# 
  3053  0312                     	;# 
  3054  0313                     	;# 
  3055  0314                     	;# 
  3056  0315                     	;# 
  3057  0315                     	;# 
  3058  0316                     	;# 
  3059  0317                     	;# 
  3060  0318                     	;# 
  3061  038C                     	;# 
  3062  038D                     	;# 
  3063  038E                     	;# 
  3064  0391                     	;# 
  3065  0392                     	;# 
  3066  0393                     	;# 
  3067  0394                     	;# 
  3068  0395                     	;# 
  3069  0396                     	;# 
  3070  0397                     	;# 
  3071  0398                     	;# 
  3072  0399                     	;# 
  3073  039A                     	;# 
  3074  039C                     	;# 
  3075  039D                     	;# 
  3076  039E                     	;# 
  3077  039F                     	;# 
  3078  0411                     	;# 
  3079  0411                     	;# 
  3080  0412                     	;# 
  3081  0413                     	;# 
  3082  0414                     	;# 
  3083  0415                     	;# 
  3084  0416                     	;# 
  3085  0417                     	;# 
  3086  0418                     	;# 
  3087  0418                     	;# 
  3088  0419                     	;# 
  3089  041A                     	;# 
  3090  041B                     	;# 
  3091  041C                     	;# 
  3092  041D                     	;# 
  3093  041E                     	;# 
  3094  041F                     	;# 
  3095  0498                     	;# 
  3096  0498                     	;# 
  3097  0499                     	;# 
  3098  049A                     	;# 
  3099  049B                     	;# 
  3100  049B                     	;# 
  3101  049C                     	;# 
  3102  049D                     	;# 
  3103  049E                     	;# 
  3104  049F                     	;# 
  3105  0617                     	;# 
  3106  0618                     	;# 
  3107  0619                     	;# 
  3108  0619                     	;# 
  3109  061A                     	;# 
  3110  061B                     	;# 
  3111  061C                     	;# 
  3112  061C                     	;# 
  3113  061F                     	;# 
  3114  0691                     	;# 
  3115  0692                     	;# 
  3116  0693                     	;# 
  3117  0694                     	;# 
  3118  0695                     	;# 
  3119  0696                     	;# 
  3120  0697                     	;# 
  3121  0698                     	;# 
  3122  0699                     	;# 
  3123  0711                     	;# 
  3124  0712                     	;# 
  3125  0713                     	;# 
  3126  0714                     	;# 
  3127  0715                     	;# 
  3128  0716                     	;# 
  3129  0717                     	;# 
  3130  0718                     	;# 
  3131  0719                     	;# 
  3132  0891                     	;# 
  3133  0891                     	;# 
  3134  0891                     	;# 
  3135  0891                     	;# 
  3136  0891                     	;# 
  3137  0891                     	;# 
  3138  0892                     	;# 
  3139  0892                     	;# 
  3140  0892                     	;# 
  3141  0893                     	;# 
  3142  0893                     	;# 
  3143  0893                     	;# 
  3144  0893                     	;# 
  3145  0893                     	;# 
  3146  0893                     	;# 
  3147  0894                     	;# 
  3148  0894                     	;# 
  3149  0894                     	;# 
  3150  0895                     	;# 
  3151  0895                     	;# 
  3152  0895                     	;# 
  3153  0896                     	;# 
  3154  0896                     	;# 
  3155  0896                     	;# 
  3156  089B                     	;# 
  3157  0911                     	;# 
  3158  0912                     	;# 
  3159  0913                     	;# 
  3160  0914                     	;# 
  3161  0915                     	;# 
  3162  0916                     	;# 
  3163  0918                     	;# 
  3164  0919                     	;# 
  3165  091A                     	;# 
  3166  091B                     	;# 
  3167  091C                     	;# 
  3168  091D                     	;# 
  3169  091E                     	;# 
  3170  091F                     	;# 
  3171  0E0F                     	;# 
  3172  0E10                     	;# 
  3173  0E11                     	;# 
  3174  0E12                     	;# 
  3175  0E13                     	;# 
  3176  0E14                     	;# 
  3177  0E15                     	;# 
  3178  0E16                     	;# 
  3179  0E17                     	;# 
  3180  0E18                     	;# 
  3181  0E19                     	;# 
  3182  0E1A                     	;# 
  3183  0E1B                     	;# 
  3184  0E1C                     	;# 
  3185  0E1D                     	;# 
  3186  0E1E                     	;# 
  3187  0E1F                     	;# 
  3188  0E20                     	;# 
  3189  0E21                     	;# 
  3190  0E22                     	;# 
  3191  0E24                     	;# 
  3192  0E25                     	;# 
  3193  0E28                     	;# 
  3194  0E29                     	;# 
  3195  0E2A                     	;# 
  3196  0E2B                     	;# 
  3197  0E2C                     	;# 
  3198  0E2D                     	;# 
  3199  0E2E                     	;# 
  3200  0E2F                     	;# 
  3201  0E90                     	;# 
  3202  0E91                     	;# 
  3203  0E92                     	;# 
  3204  0E94                     	;# 
  3205  0E95                     	;# 
  3206  0E9C                     	;# 
  3207  0E9D                     	;# 
  3208  0E9E                     	;# 
  3209  0E9F                     	;# 
  3210  0EA0                     	;# 
  3211  0EA1                     	;# 
  3212  0EA2                     	;# 
  3213  0EA3                     	;# 
  3214  0EA4                     	;# 
  3215  0EA5                     	;# 
  3216  0EA6                     	;# 
  3217  0EA7                     	;# 
  3218  0F0F                     	;# 
  3219  0F10                     	;# 
  3220  0F11                     	;# 
  3221  0F12                     	;# 
  3222  0F13                     	;# 
  3223  0F14                     	;# 
  3224  0F15                     	;# 
  3225  0F16                     	;# 
  3226  0F17                     	;# 
  3227  0F18                     	;# 
  3228  0F19                     	;# 
  3229  0F1A                     	;# 
  3230  0F1B                     	;# 
  3231  0F1C                     	;# 
  3232  0F1D                     	;# 
  3233  0F1E                     	;# 
  3234  0F1F                     	;# 
  3235  0F20                     	;# 
  3236  0F21                     	;# 
  3237  0F22                     	;# 
  3238  0F23                     	;# 
  3239  0F24                     	;# 
  3240  0F25                     	;# 
  3241  0F26                     	;# 
  3242  0F27                     	;# 
  3243  0F28                     	;# 
  3244  0F29                     	;# 
  3245  0F2A                     	;# 
  3246  0F2B                     	;# 
  3247  0F2C                     	;# 
  3248  0F2D                     	;# 
  3249  0F2E                     	;# 
  3250  0F2F                     	;# 
  3251  0F30                     	;# 
  3252  0F31                     	;# 
  3253  0F32                     	;# 
  3254  0F33                     	;# 
  3255  0F34                     	;# 
  3256  0F35                     	;# 
  3257  0F36                     	;# 
  3258  0F37                     	;# 
  3259  0FE4                     	;# 
  3260  0FE5                     	;# 
  3261  0FE6                     	;# 
  3262  0FE7                     	;# 
  3263  0FE8                     	;# 
  3264  0FE9                     	;# 
  3265  0FEA                     	;# 
  3266  0FEB                     	;# 
  3267  0FED                     	;# 
  3268  0FEE                     	;# 
  3269  0FEF                     	;# 
  3270  0000                     	;# 
  3271  0001                     	;# 
  3272  0002                     	;# 
  3273  0003                     	;# 
  3274  0004                     	;# 
  3275  0005                     	;# 
  3276  0006                     	;# 
  3277  0007                     	;# 
  3278  0008                     	;# 
  3279  0009                     	;# 
  3280  000A                     	;# 
  3281  000B                     	;# 
  3282  000C                     	;# 
  3283  000D                     	;# 
  3284  000E                     	;# 
  3285  0010                     	;# 
  3286  0011                     	;# 
  3287  0012                     	;# 
  3288  0013                     	;# 
  3289  0014                     	;# 
  3290  0015                     	;# 
  3291  0015                     	;# 
  3292  0016                     	;# 
  3293  0016                     	;# 
  3294  0017                     	;# 
  3295  0018                     	;# 
  3296  0019                     	;# 
  3297  0019                     	;# 
  3298  001A                     	;# 
  3299  001B                     	;# 
  3300  001C                     	;# 
  3301  001D                     	;# 
  3302  001E                     	;# 
  3303  001F                     	;# 
  3304  008C                     	;# 
  3305  008D                     	;# 
  3306  008E                     	;# 
  3307  0090                     	;# 
  3308  0091                     	;# 
  3309  0092                     	;# 
  3310  0093                     	;# 
  3311  0094                     	;# 
  3312  0097                     	;# 
  3313  009B                     	;# 
  3314  009B                     	;# 
  3315  009C                     	;# 
  3316  009D                     	;# 
  3317  009E                     	;# 
  3318  009F                     	;# 
  3319  010C                     	;# 
  3320  010D                     	;# 
  3321  010E                     	;# 
  3322  0111                     	;# 
  3323  0112                     	;# 
  3324  0113                     	;# 
  3325  0114                     	;# 
  3326  0115                     	;# 
  3327  0116                     	;# 
  3328  0117                     	;# 
  3329  0118                     	;# 
  3330  0119                     	;# 
  3331  018C                     	;# 
  3332  018D                     	;# 
  3333  018E                     	;# 
  3334  0197                     	;# 
  3335  0199                     	;# 
  3336  0199                     	;# 
  3337  0199                     	;# 
  3338  019A                     	;# 
  3339  019A                     	;# 
  3340  019A                     	;# 
  3341  019B                     	;# 
  3342  019B                     	;# 
  3343  019B                     	;# 
  3344  019B                     	;# 
  3345  019B                     	;# 
  3346  019C                     	;# 
  3347  019C                     	;# 
  3348  019C                     	;# 
  3349  019D                     	;# 
  3350  019D                     	;# 
  3351  019D                     	;# 
  3352  019E                     	;# 
  3353  019E                     	;# 
  3354  019E                     	;# 
  3355  019F                     	;# 
  3356  019F                     	;# 
  3357  019F                     	;# 
  3358  019F                     	;# 
  3359  019F                     	;# 
  3360  020C                     	;# 
  3361  020D                     	;# 
  3362  020E                     	;# 
  3363  0211                     	;# 
  3364  0211                     	;# 
  3365  0212                     	;# 
  3366  0212                     	;# 
  3367  0213                     	;# 
  3368  0213                     	;# 
  3369  0214                     	;# 
  3370  0214                     	;# 
  3371  0215                     	;# 
  3372  0215                     	;# 
  3373  0215                     	;# 
  3374  0215                     	;# 
  3375  0216                     	;# 
  3376  0216                     	;# 
  3377  0217                     	;# 
  3378  0217                     	;# 
  3379  0219                     	;# 
  3380  021A                     	;# 
  3381  021B                     	;# 
  3382  021C                     	;# 
  3383  021D                     	;# 
  3384  021D                     	;# 
  3385  021E                     	;# 
  3386  021F                     	;# 
  3387  028C                     	;# 
  3388  028D                     	;# 
  3389  028E                     	;# 
  3390  0291                     	;# 
  3391  0291                     	;# 
  3392  0292                     	;# 
  3393  0293                     	;# 
  3394  0294                     	;# 
  3395  0295                     	;# 
  3396  0295                     	;# 
  3397  0296                     	;# 
  3398  0297                     	;# 
  3399  0298                     	;# 
  3400  029F                     	;# 
  3401  030C                     	;# 
  3402  030D                     	;# 
  3403  030E                     	;# 
  3404  0311                     	;# 
  3405  0311                     	;# 
  3406  0312                     	;# 
  3407  0313                     	;# 
  3408  0314                     	;# 
  3409  0315                     	;# 
  3410  0315                     	;# 
  3411  0316                     	;# 
  3412  0317                     	;# 
  3413  0318                     	;# 
  3414  038C                     	;# 
  3415  038D                     	;# 
  3416  038E                     	;# 
  3417  0391                     	;# 
  3418  0392                     	;# 
  3419  0393                     	;# 
  3420  0394                     	;# 
  3421  0395                     	;# 
  3422  0396                     	;# 
  3423  0397                     	;# 
  3424  0398                     	;# 
  3425  0399                     	;# 
  3426  039A                     	;# 
  3427  039C                     	;# 
  3428  039D                     	;# 
  3429  039E                     	;# 
  3430  039F                     	;# 
  3431  0411                     	;# 
  3432  0411                     	;# 
  3433  0412                     	;# 
  3434  0413                     	;# 
  3435  0414                     	;# 
  3436  0415                     	;# 
  3437  0416                     	;# 
  3438  0417                     	;# 
  3439  0418                     	;# 
  3440  0418                     	;# 
  3441  0419                     	;# 
  3442  041A                     	;# 
  3443  041B                     	;# 
  3444  041C                     	;# 
  3445  041D                     	;# 
  3446  041E                     	;# 
  3447  041F                     	;# 
  3448  0498                     	;# 
  3449  0498                     	;# 
  3450  0499                     	;# 
  3451  049A                     	;# 
  3452  049B                     	;# 
  3453  049B                     	;# 
  3454  049C                     	;# 
  3455  049D                     	;# 
  3456  049E                     	;# 
  3457  049F                     	;# 
  3458  0617                     	;# 
  3459  0618                     	;# 
  3460  0619                     	;# 
  3461  0619                     	;# 
  3462  061A                     	;# 
  3463  061B                     	;# 
  3464  061C                     	;# 
  3465  061C                     	;# 
  3466  061F                     	;# 
  3467  0691                     	;# 
  3468  0692                     	;# 
  3469  0693                     	;# 
  3470  0694                     	;# 
  3471  0695                     	;# 
  3472  0696                     	;# 
  3473  0697                     	;# 
  3474  0698                     	;# 
  3475  0699                     	;# 
  3476  0711                     	;# 
  3477  0712                     	;# 
  3478  0713                     	;# 
  3479  0714                     	;# 
  3480  0715                     	;# 
  3481  0716                     	;# 
  3482  0717                     	;# 
  3483  0718                     	;# 
  3484  0719                     	;# 
  3485  0891                     	;# 
  3486  0891                     	;# 
  3487  0891                     	;# 
  3488  0891                     	;# 
  3489  0891                     	;# 
  3490  0891                     	;# 
  3491  0892                     	;# 
  3492  0892                     	;# 
  3493  0892                     	;# 
  3494  0893                     	;# 
  3495  0893                     	;# 
  3496  0893                     	;# 
  3497  0893                     	;# 
  3498  0893                     	;# 
  3499  0893                     	;# 
  3500  0894                     	;# 
  3501  0894                     	;# 
  3502  0894                     	;# 
  3503  0895                     	;# 
  3504  0895                     	;# 
  3505  0895                     	;# 
  3506  0896                     	;# 
  3507  0896                     	;# 
  3508  0896                     	;# 
  3509  089B                     	;# 
  3510  0911                     	;# 
  3511  0912                     	;# 
  3512  0913                     	;# 
  3513  0914                     	;# 
  3514  0915                     	;# 
  3515  0916                     	;# 
  3516  0918                     	;# 
  3517  0919                     	;# 
  3518  091A                     	;# 
  3519  091B                     	;# 
  3520  091C                     	;# 
  3521  091D                     	;# 
  3522  091E                     	;# 
  3523  091F                     	;# 
  3524  0E0F                     	;# 
  3525  0E10                     	;# 
  3526  0E11                     	;# 
  3527  0E12                     	;# 
  3528  0E13                     	;# 
  3529  0E14                     	;# 
  3530  0E15                     	;# 
  3531  0E16                     	;# 
  3532  0E17                     	;# 
  3533  0E18                     	;# 
  3534  0E19                     	;# 
  3535  0E1A                     	;# 
  3536  0E1B                     	;# 
  3537  0E1C                     	;# 
  3538  0E1D                     	;# 
  3539  0E1E                     	;# 
  3540  0E1F                     	;# 
  3541  0E20                     	;# 
  3542  0E21                     	;# 
  3543  0E22                     	;# 
  3544  0E24                     	;# 
  3545  0E25                     	;# 
  3546  0E28                     	;# 
  3547  0E29                     	;# 
  3548  0E2A                     	;# 
  3549  0E2B                     	;# 
  3550  0E2C                     	;# 
  3551  0E2D                     	;# 
  3552  0E2E                     	;# 
  3553  0E2F                     	;# 
  3554  0E90                     	;# 
  3555  0E91                     	;# 
  3556  0E92                     	;# 
  3557  0E94                     	;# 
  3558  0E95                     	;# 
  3559  0E9C                     	;# 
  3560  0E9D                     	;# 
  3561  0E9E                     	;# 
  3562  0E9F                     	;# 
  3563  0EA0                     	;# 
  3564  0EA1                     	;# 
  3565  0EA2                     	;# 
  3566  0EA3                     	;# 
  3567  0EA4                     	;# 
  3568  0EA5                     	;# 
  3569  0EA6                     	;# 
  3570  0EA7                     	;# 
  3571  0F0F                     	;# 
  3572  0F10                     	;# 
  3573  0F11                     	;# 
  3574  0F12                     	;# 
  3575  0F13                     	;# 
  3576  0F14                     	;# 
  3577  0F15                     	;# 
  3578  0F16                     	;# 
  3579  0F17                     	;# 
  3580  0F18                     	;# 
  3581  0F19                     	;# 
  3582  0F1A                     	;# 
  3583  0F1B                     	;# 
  3584  0F1C                     	;# 
  3585  0F1D                     	;# 
  3586  0F1E                     	;# 
  3587  0F1F                     	;# 
  3588  0F20                     	;# 
  3589  0F21                     	;# 
  3590  0F22                     	;# 
  3591  0F23                     	;# 
  3592  0F24                     	;# 
  3593  0F25                     	;# 
  3594  0F26                     	;# 
  3595  0F27                     	;# 
  3596  0F28                     	;# 
  3597  0F29                     	;# 
  3598  0F2A                     	;# 
  3599  0F2B                     	;# 
  3600  0F2C                     	;# 
  3601  0F2D                     	;# 
  3602  0F2E                     	;# 
  3603  0F2F                     	;# 
  3604  0F30                     	;# 
  3605  0F31                     	;# 
  3606  0F32                     	;# 
  3607  0F33                     	;# 
  3608  0F34                     	;# 
  3609  0F35                     	;# 
  3610  0F36                     	;# 
  3611  0F37                     	;# 
  3612  0FE4                     	;# 
  3613  0FE5                     	;# 
  3614  0FE6                     	;# 
  3615  0FE7                     	;# 
  3616  0FE8                     	;# 
  3617  0FE9                     	;# 
  3618  0FEA                     	;# 
  3619  0FEB                     	;# 
  3620  0FED                     	;# 
  3621  0FEE                     	;# 
  3622  0FEF                     	;_m_led_para
  3623                           
  3624                           	psect	idataBANK2
  3625  07BE                     __pidataBANK2:	
  3626                           
  3627                           ;initializer for ble_check_devid@F8342
  3628  07BE  3433               	retlw	51
  3629  07BF  3430               	retlw	48
  3630  07C0  3433               	retlw	51
  3631  07C1  3431               	retlw	49
  3632  07C2  3433               	retlw	51
  3633  07C3  3432               	retlw	50
  3634  07C4  3433               	retlw	51
  3635  07C5  3434               	retlw	52
  3636  07C6  3433               	retlw	51
  3637  07C7  3430               	retlw	48
  3638  07C8  3433               	retlw	51
  3639  07C9  3431               	retlw	49
  3640  07CA  3433               	retlw	51
  3641  07CB  3430               	retlw	48
  3642  07CC  3433               	retlw	51
  3643  07CD  3433               	retlw	51
  3644  07CE  3400               	retlw	0
  3645                           
  3646                           ;initializer for _MONTH_DAY
  3647  07CF  341F               	retlw	31
  3648  07D0  341C               	retlw	28
  3649  07D1  341F               	retlw	31
  3650  07D2  341E               	retlw	30
  3651  07D3  341F               	retlw	31
  3652  07D4  341E               	retlw	30
  3653  07D5  341F               	retlw	31
  3654  07D6  341F               	retlw	31
  3655  07D7  341E               	retlw	30
  3656  07D8  341F               	retlw	31
  3657  07D9  341E               	retlw	30
  3658  07DA  341F               	retlw	31
  3659                           
  3660                           ;initializer for _led_load_duty
  3661  07DB  34DB               	retlw	low _pwm2_load_duty
  3662  07DC  341D               	retlw	high _pwm2_load_duty
  3663  07DD  34E7               	retlw	low _pwm4_load_duty
  3664  07DE  341D               	retlw	high _pwm4_load_duty
  3665  07DF  342A               	retlw	low _pwm5_load_duty
  3666  07E0  341E               	retlw	high _pwm5_load_duty
  3667  07E1  34E1               	retlw	low _pwm3_load_duty
  3668  07E2  341D               	retlw	high _pwm3_load_duty
  3669  07E3  34D5               	retlw	low _pwm1_load_duty
  3670  07E4  341D               	retlw	high _pwm1_load_duty
  3671                           
  3672                           ;initializer for _led_state_cb
  3673  07E5  34F5               	retlw	low _led_state_off_cb
  3674  07E6  340A               	retlw	high _led_state_off_cb
  3675  07E7  343D               	retlw	low _led_state_day_cb
  3676  07E8  340A               	retlw	high _led_state_day_cb
  3677  07E9  340B               	retlw	low _led_state_night_cb
  3678  07EA  340C               	retlw	high _led_state_night_cb
  3679  07EB  345B               	retlw	low _led_state_ble_cb
  3680  07EC  340F               	retlw	high _led_state_ble_cb
  3681                           
  3682                           ;initializer for ble_send_cmd@F8334
  3683  07ED  3441               	retlw	65
  3684  07EE  3454               	retlw	84
  3685  07EF  342B               	retlw	43
  3686  07F0  344F               	retlw	79
  3687  07F1  344B               	retlw	75
  3688  07F2  340D               	retlw	13
  3689  07F3  340A               	retlw	10
  3690  07F4  3400               	retlw	0
  3691                           
  3692                           	psect	nvBANK0
  3693  006B                     __pnvBANK0:	
  3694  006B                     _tmr0_isr_cb:	
  3695  006B                     	ds	2
  3696                           
  3697                           	psect	nvBANK1
  3698  00EE                     __pnvBANK1:	
  3699  00EE                     _tmr2_isr_cb:	
  3700  00EE                     	ds	2
  3701                           
  3702                           	psect	nvBANK2
  3703  0157                     __pnvBANK2:	
  3704  0157                     _key_func:	
  3705  0157                     	ds	2
  3706  0159                     _eusart_rcv_cb:	
  3707  0159                     	ds	2
  3708  015B                     _tx_remain:	
  3709  015B                     	ds	1
  3710  001F                     _T2CONbits	set	31
  3711  0017                     _T0CON0bits	set	23
  3712  000C                     _PORTAbits	set	12
  3713  000E                     _PORTC	set	14
  3714  000B                     _INTCONbits	set	11
  3715  0011                     _PIR1bits	set	17
  3716  001D                     _TMR2	set	29
  3717  001E                     _PR2	set	30
  3718  001F                     _T2CON	set	31
  3719  0010                     _PIR0bits	set	16
  3720  0015                     _TMR0L	set	21
  3721  0016                     _TMR0H	set	22
  3722  0018                     _T0CON1	set	24
  3723  0017                     _T0CON0	set	23
  3724  008E                     _TRISC	set	142
  3725  008D                     _TRISB	set	141
  3726  008C                     _TRISA	set	140
  3727  0091                     _PIE1bits	set	145
  3728  0090                     _PIE0bits	set	144
  3729  010E                     _LATC	set	270
  3730  010D                     _LATB	set	269
  3731  010C                     _LATA	set	268
  3732  010C                     _LATAbits	set	268
  3733  010D                     _LATBbits	set	269
  3734  010E                     _LATCbits	set	270
  3735  018C                     _ANSELA	set	396
  3736  018D                     _ANSELB	set	397
  3737  018E                     _ANSELC	set	398
  3738  019E                     _TXSTAbits	set	414
  3739  019D                     _RCSTAbits	set	413
  3740  0199                     _RCREG	set	409
  3741  019D                     _RC1STAbits	set	413
  3742  019A                     _TXREG	set	410
  3743  019C                     _SP1BRGH	set	412
  3744  019B                     _SP1BRGL	set	411
  3745  019E                     _TX1STA	set	414
  3746  019D                     _RC1STA	set	413
  3747  019F                     _BAUD1CON	set	415
  3748  020E                     _WPUC	set	526
  3749  020C                     _WPUA	set	524
  3750  020D                     _WPUB	set	525
  3751  028E                     _ODCONC	set	654
  3752  028D                     _ODCONB	set	653
  3753  028C                     _ODCONA	set	652
  3754  0295                     _CCPR2L	set	661
  3755  0296                     _CCPR2H	set	662
  3756  0297                     _CCP2CON	set	663
  3757  029F                     _CCPTMRSbits	set	671
  3758  0291                     _CCPR1L	set	657
  3759  0292                     _CCPR1H	set	658
  3760  0293                     _CCP1CON	set	659
  3761  0315                     _CCPR4L	set	789
  3762  0316                     _CCPR4H	set	790
  3763  0317                     _CCP4CON	set	791
  3764  0311                     _CCPR3L	set	785
  3765  0312                     _CCPR3H	set	786
  3766  0313                     _CCP3CON	set	787
  3767  0619                     _PWM5CON	set	1561
  3768  061F                     _PWMTMRSbits	set	1567
  3769  0617                     _PWM5DCL	set	1559
  3770  0618                     _PWM5DCH	set	1560
  3771  0891                     _NVMADR	set	2193
  3772  0895                     _NVMCON1	set	2197
  3773  0896                     _NVMCON2	set	2198
  3774  0895                     _NVMCON1bits	set	2197
  3775  0893                     _NVMDATL	set	2195
  3776  0891                     _NVMADRL	set	2193
  3777  0892                     _NVMADRH	set	2194
  3778  091E                     _OSCTUNE	set	2334
  3779  091F                     _OSCFRQ	set	2335
  3780  091D                     _OSCEN	set	2333
  3781  091B                     _OSCCON3	set	2331
  3782  0919                     _OSCCON1	set	2329
  3783  0E24                     _RXPPSbits	set	3620
  3784  0E0F                     _PPSLOCKbits	set	3599
  3785  0E0F                     _PPSLOCK	set	3599
  3786  0EA7                     _RC7PPSbits	set	3751
  3787  0EA6                     _RC6PPSbits	set	3750
  3788  0EA3                     _RC3PPSbits	set	3747
  3789  0EA4                     _RC4PPSbits	set	3748
  3790  0EA5                     _RC5PPSbits	set	3749
  3791  0E9C                     _RB4PPSbits	set	3740
  3792                           
  3793                           	psect	stringtext1
  3794  1800                     __pstringtext1:	
  3795  1800                     STR_2:	
  3796  1800  3441               	retlw	65	;'A'
  3797  1801  3454               	retlw	84	;'T'
  3798  1802  342B               	retlw	43	;'+'
  3799  1803  3441               	retlw	65	;'A'
  3800  1804  3444               	retlw	68	;'D'
  3801  1805  3456               	retlw	86	;'V'
  3802  1806  345F               	retlw	95	;'_'
  3803  1807  344D               	retlw	77	;'M'
  3804  1808  3446               	retlw	70	;'F'
  3805  1809  3452               	retlw	82	;'R'
  3806  180A  345F               	retlw	95	;'_'
  3807  180B  3453               	retlw	83	;'S'
  3808  180C  3450               	retlw	80	;'P'
  3809  180D  3443               	retlw	67	;'C'
  3810  180E  343D               	retlw	61	;'='
  3811  180F  3433               	retlw	51	;'3'
  3812  1810  3430               	retlw	48	;'0'
  3813  1811  3433               	retlw	51	;'3'
  3814  1812  3431               	retlw	49	;'1'
  3815  1813  3433               	retlw	51	;'3'
  3816  1814  3432               	retlw	50	;'2'
  3817  1815  3433               	retlw	51	;'3'
  3818  1816  3434               	retlw	52	;'4'
  3819  1817  3433               	retlw	51	;'3'
  3820  1818  3430               	retlw	48	;'0'
  3821  1819  3433               	retlw	51	;'3'
  3822  181A  3431               	retlw	49	;'1'
  3823  181B  3433               	retlw	51	;'3'
  3824  181C  3430               	retlw	48	;'0'
  3825  181D  3433               	retlw	51	;'3'
  3826  181E  3433               	retlw	51	;'3'
  3827  181F  340D               	retlw	13
  3828  1820  340A               	retlw	10
  3829  1821  3400               	retlw	0
  3830                           
  3831                           	psect	stringtext2
  3832  1844                     __pstringtext2:	
  3833  1844                     STR_1:	
  3834  1844  3441               	retlw	65	;'A'
  3835  1845  3454               	retlw	84	;'T'
  3836  1846  342B               	retlw	43	;'+'
  3837  1847  3441               	retlw	65	;'A'
  3838  1848  3444               	retlw	68	;'D'
  3839  1849  3456               	retlw	86	;'V'
  3840  184A  345F               	retlw	95	;'_'
  3841  184B  344D               	retlw	77	;'M'
  3842  184C  3446               	retlw	70	;'F'
  3843  184D  3452               	retlw	82	;'R'
  3844  184E  345F               	retlw	95	;'_'
  3845  184F  3453               	retlw	83	;'S'
  3846  1850  3450               	retlw	80	;'P'
  3847  1851  3443               	retlw	67	;'C'
  3848  1852  343D               	retlw	61	;'='
  3849  1853  343F               	retlw	63	;'?'
  3850  1854  340D               	retlw	13
  3851  1855  340A               	retlw	10
  3852  1856  3400               	retlw	0
  3853                           
  3854                           	psect	stringtext3
  3855  1857                     __pstringtext3:	
  3856  1857                     STR_4:	
  3857  1857  3441               	retlw	65	;'A'
  3858  1858  3454               	retlw	84	;'T'
  3859  1859  342B               	retlw	43	;'+'
  3860  185A  344D               	retlw	77	;'M'
  3861  185B  344F               	retlw	79	;'O'
  3862  185C  3444               	retlw	68	;'D'
  3863  185D  3445               	retlw	69	;'E'
  3864  185E  343D               	retlw	61	;'='
  3865  185F  3444               	retlw	68	;'D'
  3866  1860  3441               	retlw	65	;'A'
  3867  1861  3454               	retlw	84	;'T'
  3868  1862  3441               	retlw	65	;'A'
  3869  1863  340D               	retlw	13
  3870  1864  340A               	retlw	10
  3871  1865  3400               	retlw	0
  3872                           
  3873                           	psect	stringtext4
  3874  1866                     __pstringtext4:	
  3875  1866                     STR_3:	
  3876  1866  3441               	retlw	65	;'A'
  3877  1867  3454               	retlw	84	;'T'
  3878  1868  342B               	retlw	43	;'+'
  3879  1869  3453               	retlw	83	;'S'
  3880  186A  3445               	retlw	69	;'E'
  3881  186B  3454               	retlw	84	;'T'
  3882  186C  343D               	retlw	61	;'='
  3883  186D  3431               	retlw	49	;'1'
  3884  186E  340D               	retlw	13
  3885  186F  340A               	retlw	10
  3886  1870  3400               	retlw	0
  3887                           
  3888                           	psect	stringtext5
  3889  0000                     __pstringtext5:	
  3890                           
  3891                           	psect	cinit
  3892  0430                     start_initialization:	
  3893                           ; #config settings
  3894                           
  3895  0430                     __initialization:		;BIGRAM
  3896                           
  3897                           ; Initialize objects allocated to BANK2
  3898  0430  30BE               	movlw	low __pidataBANK2
  3899  0431  0084               	movwf	4
  3900  0432  3087               	movlw	(high __pidataBANK2)| (0+128)
  3901  0433  0085               	movwf	5
  3902  0434  3020               	movlw	low __pdataBANK2
  3903  0435  0086               	movwf	6
  3904  0436  3001               	movlw	high __pdataBANK2
  3905  0437  0087               	movwf	7
  3906  0438  3000               	movlw	0
  3907  0439  00FF               	movwf	127
  3908  043A  3037               	movlw	55
  3909  043B  3190  2004  3184   	fcall	init_ram
  3910                           
  3911                           ; Clear objects allocated to BIGRAM
  3912  043E  306D               	movlw	109
  3913  043F  0084               	movwf	4
  3914  0440  3023               	movlw	35
  3915  0441  0085               	movwf	5
  3916  0442  3083               	movlw	131
  3917  0443  00FE               	movwf	126
  3918  0444  3000               	movlw	0
  3919  0445  00FF               	movwf	127
  3920  0446  319E  260C  3184   	fcall	clear_ram0
  3921                           
  3922                           ; Clear objects allocated to BANK0
  3923  0449  3055               	movlw	low __pbssBANK0
  3924  044A  0084               	movwf	4
  3925  044B  3000               	movlw	high __pbssBANK0
  3926  044C  0085               	movwf	5
  3927  044D  3016               	movlw	22
  3928  044E  00FE               	movwf	126
  3929  044F  3000               	movlw	0
  3930  0450  00FF               	movwf	127
  3931  0451  319E  260C  3184   	fcall	clear_ram0
  3932                           
  3933                           ; Clear objects allocated to BANK1
  3934  0454  30DA               	movlw	low __pbssBANK1
  3935  0455  0084               	movwf	4
  3936  0456  3000               	movlw	high __pbssBANK1
  3937  0457  0085               	movwf	5
  3938  0458  3014               	movlw	20
  3939  0459  00FE               	movwf	126
  3940  045A  3000               	movlw	0
  3941  045B  00FF               	movwf	127
  3942  045C  319E  260C  3184   	fcall	clear_ram0
  3943                           
  3944                           ; Clear objects allocated to BANK3
  3945  045F  30A0               	movlw	low __pbssBANK3
  3946  0460  0084               	movwf	4
  3947  0461  3001               	movlw	high __pbssBANK3
  3948  0462  0085               	movwf	5
  3949  0463  3050               	movlw	80
  3950  0464  00FE               	movwf	126
  3951  0465  3000               	movlw	0
  3952  0466  00FF               	movwf	127
  3953  0467  319E  260C  3184   	fcall	clear_ram0
  3954                           
  3955                           ; Clear objects allocated to BANK4
  3956  046A  3020               	movlw	low __pbssBANK4
  3957  046B  0084               	movwf	4
  3958  046C  3002               	movlw	high __pbssBANK4
  3959  046D  0085               	movwf	5
  3960  046E  3040               	movlw	64
  3961  046F  00FE               	movwf	126
  3962  0470  3000               	movlw	0
  3963  0471  00FF               	movwf	127
  3964  0472  319E  260C  3184   	fcall	clear_ram0
  3965  0475                     end_of_initialization:	
  3966                           ;End of C runtime variable initialization code
  3967                           
  3968  0475                     __end_of__initialization:	
  3969  0475  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3970  0476  0020               	movlb	0
  3971  0477  2C78               	ljmp	_main	;jump to C main() function
  3972  0478                     __pmaintext:	
  3973                           ; 1 bytes @ 0x35
  3974 ;;
  3975 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3976 ;;
  3977 ;; *************** function _main *****************
  3978 ;; Defined at:
  3979 ;;		line 149 in file "src/app_main.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3988 ;; Tracked objects:
  3989 ;;		On entry : B1F/0
  3990 ;;		On exit  : 1F/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3997 ;;Total ram usage:        0 bytes
  3998 ;; Hardware stack levels required when called:   13
  3999 ;; This function calls:
  4000 ;;		_app_init
  4001 ;;		_ble_init
  4002 ;;		_ble_process
  4003 ;;		_led_init
  4004 ;;		_led_second_cb
  4005 ;;		_rtc_init
  4006 ;;		_rtc_second_ready
  4007 ;; This function is called by:
  4008 ;;		Startup code after reset
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           
  4013                           ;psect for function _main
  4014  0478                     _main:	
  4015                           
  4016                           ;app_main.c: 151: app_init();
  4017                           
  4018                           ;incstack = 0
  4019                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4020  0478  2491  3184         	fcall	_app_init
  4021                           
  4022                           ;app_main.c: 152: ble_init();
  4023  047A  257A               	fcall	_ble_init
  4024                           
  4025                           ;app_main.c: 153: rtc_init();
  4026  047B  3187  27F5  3184   	fcall	_rtc_init
  4027                           
  4028                           ;app_main.c: 154: led_init();
  4029  047E  2626               	fcall	_led_init
  4030                           
  4031                           ;app_main.c: 155: (PIE1bits.RCIE = 1);
  4032  047F  0021               	movlb	1	; select bank1
  4033  0480  1691               	bsf	17,5	;volatile
  4034                           
  4035                           ;app_main.c: 156: (T0CON0bits.T0EN = 1);
  4036  0481  0020               	movlb	0	; select bank0
  4037  0482  1797               	bsf	23,7	;volatile
  4038                           
  4039                           ;app_main.c: 157: (T2CONbits.TMR2ON = 1);
  4040  0483  151F               	bsf	31,2	;volatile
  4041  0484                     l1139:	
  4042                           ;app_main.c: 159: while(1)
  4043                           
  4044  0484  0064               	clrwdt	;# 
  4045                           
  4046                           ;app_main.c: 163: ble_process();
  4047  0485  3190  2010  3184   	fcall	_ble_process
  4048                           
  4049                           ;app_main.c: 164: if(rtc_second_ready())
  4050  0488  2628  3184         	fcall	_rtc_second_ready
  4051  048A  3A00               	xorlw	0
  4052  048B  1903               	skipnz
  4053  048C  2C84               	goto	l1139
  4054                           
  4055                           ;app_main.c: 165: {
  4056                           ;app_main.c: 166: led_second_cb();
  4057  048D  3194  24B7  3184   	fcall	_led_second_cb
  4058  0490  2C84               	goto	l1139
  4059  0491                     __end_of_main:	
  4060  0491                     __ptext69:	
  4061 ;; *************** function _app_init *****************
  4062 ;; Defined at:
  4063 ;;		line 109 in file "src/app_main.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;		None
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;		None
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  1    wreg      void 
  4070 ;; Registers used:
  4071 ;;		wreg, status,2, status,0, pclath, cstack
  4072 ;; Tracked objects:
  4073 ;;		On entry : B1F/0
  4074 ;;		On exit  : B1F/2
  4075 ;;		Unchanged: B00/0
  4076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4081 ;;Total ram usage:        0 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:   10
  4084 ;; This function calls:
  4085 ;;		_eusart_init
  4086 ;;		_gpio_init
  4087 ;;		_key_init
  4088 ;;		_osc_init
  4089 ;;		_pwm1_init
  4090 ;;		_pwm2_init
  4091 ;;		_pwm3_init
  4092 ;;		_pwm4_init
  4093 ;;		_pwm5_init
  4094 ;;		_tmr0_init
  4095 ;;		_tmr2_init
  4096 ;; This function is called by:
  4097 ;;		_main
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           
  4102                           ;psect for function _app_init
  4103  0491                     _app_init:	
  4104                           
  4105                           ;app_main.c: 111: gpio_init();
  4106                           
  4107                           ;incstack = 0
  4108                           ; Regs used in _app_init: [wreg+status,2+status,0+pclath+cstack]
  4109  0491  24D9  3184         	fcall	_gpio_init
  4110                           
  4111                           ;app_main.c: 112: osc_init();
  4112  0493  251D  3184         	fcall	_osc_init
  4113                           
  4114                           ;app_main.c: 113: pwm1_init();
  4115  0495  2527  3184         	fcall	_pwm1_init
  4116                           
  4117                           ;app_main.c: 114: pwm2_init();
  4118  0497  2531  3184         	fcall	_pwm2_init
  4119                           
  4120                           ;app_main.c: 115: pwm3_init();
  4121  0499  253A  3184         	fcall	_pwm3_init
  4122                           
  4123                           ;app_main.c: 116: pwm4_init();
  4124  049B  2545  3184         	fcall	_pwm4_init
  4125                           
  4126                           ;app_main.c: 117: pwm5_init();
  4127  049D  2550  3184         	fcall	_pwm5_init
  4128                           
  4129                           ;app_main.c: 118: tmr0_init(rtc_process);
  4130  049F  3035               	movlw	low _rtc_process
  4131  04A0  0020               	movlb	0	; select bank0
  4132  04A1  00A2               	movwf	tmr0_init@cb
  4133  04A2  3007               	movlw	high _rtc_process
  4134  04A3  00A3               	movwf	tmr0_init@cb+1
  4135  04A4  255A  3184         	fcall	_tmr0_init
  4136                           
  4137                           ;app_main.c: 119: tmr2_init(tmr2_isr_callback);
  4138  04A6  300B               	movlw	low _tmr2_isr_callback
  4139  04A7  00A2               	movwf	tmr2_init@cb
  4140  04A8  301F               	movlw	high _tmr2_isr_callback
  4141  04A9  00A3               	movwf	tmr2_init@cb+1
  4142  04AA  2569  3184         	fcall	_tmr2_init
  4143                           
  4144                           ;app_main.c: 120: eusart_init(ble_receive);
  4145  04AC  3018               	movlw	low _ble_receive
  4146  04AD  0020               	movlb	0	; select bank0
  4147  04AE  00A2               	movwf	eusart_init@cb
  4148  04AF  301E               	movlw	high _ble_receive
  4149  04B0  00A3               	movwf	eusart_init@cb+1
  4150  04B1  24BC               	fcall	_eusart_init
  4151                           
  4152                           ;app_main.c: 122: key_init(led_touch_cb);
  4153  04B2  30CC               	movlw	low _led_touch_cb
  4154  04B3  0020               	movlb	0	; select bank0
  4155  04B4  00A2               	movwf	key_init@cb
  4156  04B5  301F               	movlw	high _led_touch_cb
  4157  04B6  00A3               	movwf	key_init@cb+1
  4158  04B7  319D  25ED         	fcall	_key_init
  4159                           
  4160                           ;app_main.c: 125: (INTCONbits.GIE = 1);
  4161  04B9  178B               	bsf	11,7	;volatile
  4162                           
  4163                           ;app_main.c: 126: (INTCONbits.PEIE = 1);
  4164  04BA  170B               	bsf	11,6	;volatile
  4165  04BB  0008               	return
  4166  04BC                     __end_of_app_init:	
  4167  04BC                     __ptext80:	
  4168 ;; *************** function _eusart_init *****************
  4169 ;; Defined at:
  4170 ;;		line 12 in file "src/drv_eusart.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  cb              2    2[BANK0 ] PTR FTN(unsigned char ,)
  4173 ;;		 -> ble_receive(1), 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg, status,2
  4180 ;; Tracked objects:
  4181 ;;		On entry : B1F/0
  4182 ;;		On exit  : B1F/2
  4183 ;;		Unchanged: B00/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;Total ram usage:        2 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    9
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_app_init
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function _eusart_init
  4201  04BC                     _eusart_init:	
  4202                           
  4203                           ;drv_eusart.c: 14: PIE1bits.RCIE = 0;
  4204                           
  4205                           ;incstack = 0
  4206                           ; Regs used in _eusart_init: [wreg+status,2]
  4207  04BC  0021               	movlb	1	; select bank1
  4208  04BD  1291               	bcf	17,5	;volatile
  4209                           
  4210                           ;drv_eusart.c: 15: PIE1bits.TXIE = 0;
  4211  04BE  1211               	bcf	17,4	;volatile
  4212                           
  4213                           ;drv_eusart.c: 17: BAUD1CON = 0x08;
  4214  04BF  3008               	movlw	8
  4215  04C0  0023               	movlb	3	; select bank3
  4216  04C1  009F               	movwf	31	;volatile
  4217                           
  4218                           ;drv_eusart.c: 18: RC1STA = 0x90;
  4219  04C2  3090               	movlw	144
  4220  04C3  009D               	movwf	29	;volatile
  4221                           
  4222                           ;drv_eusart.c: 19: TX1STA = 0x24;
  4223  04C4  3024               	movlw	36
  4224  04C5  009E               	movwf	30	;volatile
  4225                           
  4226                           ;drv_eusart.c: 20: SP1BRGL = 0xA0;
  4227  04C6  30A0               	movlw	160
  4228  04C7  009B               	movwf	27	;volatile
  4229                           
  4230                           ;drv_eusart.c: 21: SP1BRGH = 0x01;
  4231  04C8  3001               	movlw	1
  4232  04C9  009C               	movwf	28	;volatile
  4233                           
  4234                           ;drv_eusart.c: 24: tx_tail = 0;
  4235  04CA  0020               	movlb	0	; select bank0
  4236  04CB  3040               	movlw	64
  4237  04CC  01EA               	clrf	_tx_tail
  4238  04CD  01E9               	clrf	_tx_head
  4239                           
  4240                           ;drv_eusart.c: 26: tx_remain = sizeof(tx_buf);
  4241  04CE  0022               	movlb	2	; select bank2
  4242  04CF  00DB               	movwf	_tx_remain^(0+256)
  4243                           
  4244                           ;drv_eusart.c: 27: eusart_rcv_cb = cb;
  4245  04D0  0020               	movlb	0	; select bank0
  4246  04D1  0823               	movf	eusart_init@cb+1,w
  4247  04D2  0022               	movlb	2	; select bank2
  4248  04D3  00DA               	movwf	(_eusart_rcv_cb+1)^(0+256)
  4249  04D4  0020               	movlb	0	; select bank0
  4250  04D5  0822               	movf	eusart_init@cb,w
  4251  04D6  0022               	movlb	2	; select bank2
  4252  04D7  00D9               	movwf	_eusart_rcv_cb^(0+256)
  4253  04D8  0008               	return
  4254  04D9                     __end_of_eusart_init:	
  4255  04D9                     __ptext79:	
  4256 ;; *************** function _gpio_init *****************
  4257 ;; Defined at:
  4258 ;;		line 38 in file "src/app_main.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;		None
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		wreg, status,2, status,0
  4267 ;; Tracked objects:
  4268 ;;		On entry : B1F/0
  4269 ;;		On exit  : B1F/1C
  4270 ;;		Unchanged: B00/0
  4271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;Total ram usage:        0 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    9
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_app_init
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           
  4287                           ;psect for function _gpio_init
  4288  04D9                     _gpio_init:	
  4289                           
  4290                           ;app_main.c: 43: LATA = 0x02;
  4291                           
  4292                           ;incstack = 0
  4293                           ; Regs used in _gpio_init: [wreg+status,2+status,0]
  4294  04D9  3002               	movlw	2
  4295  04DA  0022               	movlb	2	; select bank2
  4296  04DB  008C               	movwf	12	;volatile
  4297                           
  4298                           ;app_main.c: 44: LATB = 0xD0;
  4299  04DC  30D0               	movlw	208
  4300  04DD  008D               	movwf	13	;volatile
  4301                           
  4302                           ;app_main.c: 45: LATC = 0x00;
  4303  04DE  018E               	clrf	14	;volatile
  4304                           
  4305                           ;app_main.c: 50: TRISA = 0x34;
  4306  04DF  3034               	movlw	52
  4307  04E0  0021               	movlb	1	; select bank1
  4308  04E1  008C               	movwf	12	;volatile
  4309                           
  4310                           ;app_main.c: 51: TRISB = 0x00;
  4311  04E2  018D               	clrf	13	;volatile
  4312                           
  4313                           ;app_main.c: 52: TRISC = 0x05;
  4314  04E3  3005               	movlw	5
  4315  04E4  008E               	movwf	14	;volatile
  4316                           
  4317                           ;app_main.c: 57: ANSELC = 0x00;
  4318  04E5  0023               	movlb	3	; select bank3
  4319  04E6  018E               	clrf	14	;volatile
  4320                           
  4321                           ;app_main.c: 58: ANSELB = 0x00;
  4322  04E7  018D               	clrf	13	;volatile
  4323                           
  4324                           ;app_main.c: 59: ANSELA = 0x00;
  4325  04E8  018C               	clrf	12	;volatile
  4326                           
  4327                           ;app_main.c: 64: WPUB = 0x00;
  4328  04E9  0024               	movlb	4	; select bank4
  4329  04EA  018D               	clrf	13	;volatile
  4330                           
  4331                           ;app_main.c: 65: WPUA = 0x04;
  4332  04EB  3004               	movlw	4
  4333  04EC  008C               	movwf	12	;volatile
  4334                           
  4335                           ;app_main.c: 66: WPUC = 0x01;
  4336  04ED  3001               	movlw	1
  4337  04EE  008E               	movwf	14	;volatile
  4338                           
  4339                           ;app_main.c: 71: ODCONA = 0x00;
  4340  04EF  0025               	movlb	5	; select bank5
  4341  04F0  018C               	clrf	12	;volatile
  4342                           
  4343                           ;app_main.c: 72: ODCONB = 0x00;
  4344  04F1  018D               	clrf	13	;volatile
  4345                           
  4346                           ;app_main.c: 73: ODCONC = 0x00;
  4347  04F2  018E               	clrf	14	;volatile
  4348                           
  4349                           ;app_main.c: 75: PPSLOCK = 0x55;
  4350  04F3  3055               	movlw	85
  4351  04F4  003C               	movlb	28	; select bank28
  4352  04F5  008F               	movwf	15	;volsfr
  4353                           
  4354                           ;app_main.c: 76: PPSLOCK = 0xAA;
  4355  04F6  30AA               	movlw	170
  4356  04F7  008F               	movwf	15	;volsfr
  4357                           
  4358                           ;app_main.c: 77: PPSLOCKbits.PPSLOCKED = 0x00;
  4359  04F8  100F               	bcf	15,0	;volsfr
  4360                           
  4361                           ;app_main.c: 79: RXPPSbits.RXPPS = 0x12;
  4362  04F9  0824               	movf	36,w	;volatile
  4363  04FA  39E0               	andlw	-32
  4364  04FB  3812               	iorlw	18
  4365  04FC  00A4               	movwf	36	;volatile
  4366                           
  4367                           ;app_main.c: 80: RB4PPSbits.RB4PPS = 0x14;
  4368  04FD  003D               	movlb	29	; select bank29
  4369  04FE  081C               	movf	28,w	;volatile
  4370  04FF  39E0               	andlw	-32
  4371  0500  3814               	iorlw	20
  4372  0501  009C               	movwf	28	;volatile
  4373                           
  4374                           ;app_main.c: 81: RC5PPSbits.RC5PPS = 0x0C;
  4375  0502  0825               	movf	37,w	;volatile
  4376  0503  39E0               	andlw	-32
  4377  0504  380C               	iorlw	12
  4378  0505  00A5               	movwf	37	;volatile
  4379                           
  4380                           ;app_main.c: 82: RC4PPSbits.RC4PPS = 0x0D;
  4381  0506  0824               	movf	36,w	;volatile
  4382  0507  39E0               	andlw	-32
  4383  0508  380D               	iorlw	13
  4384  0509  00A4               	movwf	36	;volatile
  4385                           
  4386                           ;app_main.c: 83: RC3PPSbits.RC3PPS = 0x0E;
  4387  050A  0823               	movf	35,w	;volatile
  4388  050B  39E0               	andlw	-32
  4389  050C  380E               	iorlw	14
  4390  050D  00A3               	movwf	35	;volatile
  4391                           
  4392                           ;app_main.c: 84: RC6PPSbits.RC6PPS = 0x0F;
  4393  050E  0826               	movf	38,w	;volatile
  4394  050F  39E0               	andlw	-32
  4395  0510  380F               	iorlw	15
  4396  0511  00A6               	movwf	38	;volatile
  4397                           
  4398                           ;app_main.c: 85: RC7PPSbits.RC7PPS = 0x02;
  4399  0512  0827               	movf	39,w	;volatile
  4400  0513  39E0               	andlw	-32
  4401  0514  3802               	iorlw	2
  4402  0515  00A7               	movwf	39	;volatile
  4403                           
  4404                           ;app_main.c: 87: PPSLOCK = 0x55;
  4405  0516  3055               	movlw	85
  4406  0517  003C               	movlb	28	; select bank28
  4407  0518  008F               	movwf	15	;volsfr
  4408                           
  4409                           ;app_main.c: 88: PPSLOCK = 0xAA;
  4410  0519  30AA               	movlw	170
  4411  051A  008F               	movwf	15	;volsfr
  4412                           
  4413                           ;app_main.c: 89: PPSLOCKbits.PPSLOCKED = 0x01;
  4414  051B  140F               	bsf	15,0	;volsfr
  4415  051C  0008               	return
  4416  051D                     __end_of_gpio_init:	
  4417  051D                     __ptext77:	
  4418 ;; *************** function _osc_init *****************
  4419 ;; Defined at:
  4420 ;;		line 23 in file "src/app_main.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;		None
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      void 
  4427 ;; Registers used:
  4428 ;;		wreg, status,2
  4429 ;; Tracked objects:
  4430 ;;		On entry : B1F/1C
  4431 ;;		On exit  : B1F/12
  4432 ;;		Unchanged: B00/0
  4433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4438 ;;Total ram usage:        0 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; Hardware stack levels required when called:    9
  4441 ;; This function calls:
  4442 ;;		Nothing
  4443 ;; This function is called by:
  4444 ;;		_app_init
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           
  4449                           ;psect for function _osc_init
  4450  051D                     _osc_init:	
  4451                           
  4452                           ;app_main.c: 26: OSCCON1 = 0x60;
  4453                           
  4454                           ;incstack = 0
  4455                           ; Regs used in _osc_init: [wreg+status,2]
  4456  051D  3060               	movlw	96
  4457  051E  0032               	movlb	18	; select bank18
  4458  051F  0099               	movwf	25	;volatile
  4459                           
  4460                           ;app_main.c: 28: OSCCON3 = 0x00;
  4461  0520  019B               	clrf	27	;volatile
  4462                           
  4463                           ;app_main.c: 30: OSCEN = 0x48;
  4464  0521  3048               	movlw	72
  4465  0522  009D               	movwf	29	;volatile
  4466                           
  4467                           ;app_main.c: 32: OSCFRQ = 0x06;
  4468  0523  3006               	movlw	6
  4469  0524  009F               	movwf	31	;volatile
  4470                           
  4471                           ;app_main.c: 34: OSCTUNE = 0x00;
  4472  0525  019E               	clrf	30	;volatile
  4473  0526  0008               	return
  4474  0527                     __end_of_osc_init:	
  4475  0527                     __ptext76:	
  4476 ;; *************** function _pwm1_init *****************
  4477 ;; Defined at:
  4478 ;;		line 3 in file "src/drv_pwm.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0
  4487 ;; Tracked objects:
  4488 ;;		On entry : B1F/12
  4489 ;;		On exit  : B1F/5
  4490 ;;		Unchanged: B00/0
  4491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    9
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_app_init
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           
  4507                           ;psect for function _pwm1_init
  4508  0527                     _pwm1_init:	
  4509                           
  4510                           ;drv_pwm.c: 6: CCP1CON = 0x8F;
  4511                           
  4512                           ;incstack = 0
  4513                           ; Regs used in _pwm1_init: [wreg+status,2+status,0]
  4514  0527  308F               	movlw	143
  4515  0528  0025               	movlb	5	; select bank5
  4516  0529  0093               	movwf	19	;volatile
  4517                           
  4518                           ;drv_pwm.c: 9: CCPR1H = 0x00;
  4519  052A  0192               	clrf	18	;volatile
  4520                           
  4521                           ;drv_pwm.c: 12: CCPR1L = 0x00;
  4522  052B  0191               	clrf	17	;volatile
  4523                           
  4524                           ;drv_pwm.c: 15: CCPTMRSbits.C1TSEL = 0x1;
  4525  052C  081F               	movf	31,w	;volatile
  4526  052D  39FC               	andlw	-4
  4527  052E  3801               	iorlw	1
  4528  052F  009F               	movwf	31	;volatile
  4529  0530  0008               	return
  4530  0531                     __end_of_pwm1_init:	
  4531  0531                     __ptext75:	
  4532 ;; *************** function _pwm2_init *****************
  4533 ;; Defined at:
  4534 ;;		line 25 in file "src/drv_pwm.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0
  4543 ;; Tracked objects:
  4544 ;;		On entry : B1F/5
  4545 ;;		On exit  : B1F/5
  4546 ;;		Unchanged: B00/0
  4547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4552 ;;Total ram usage:        0 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; Hardware stack levels required when called:    9
  4555 ;; This function calls:
  4556 ;;		Nothing
  4557 ;; This function is called by:
  4558 ;;		_app_init
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           
  4563                           ;psect for function _pwm2_init
  4564  0531                     _pwm2_init:	
  4565                           
  4566                           ;drv_pwm.c: 28: CCP2CON = 0x8F;
  4567                           
  4568                           ;incstack = 0
  4569                           ; Regs used in _pwm2_init: [wreg+status,2+status,0]
  4570  0531  308F               	movlw	143
  4571  0532  0097               	movwf	23	;volatile
  4572                           
  4573                           ;drv_pwm.c: 31: CCPR2H = 0x00;
  4574  0533  0196               	clrf	22	;volatile
  4575                           
  4576                           ;drv_pwm.c: 34: CCPR2L = 0x00;
  4577  0534  0195               	clrf	21	;volatile
  4578                           
  4579                           ;drv_pwm.c: 37: CCPTMRSbits.C2TSEL = 0x1;
  4580  0535  081F               	movf	31,w	;volatile
  4581  0536  39F3               	andlw	-13
  4582  0537  3804               	iorlw	4
  4583  0538  009F               	movwf	31	;volatile
  4584  0539  0008               	return
  4585  053A                     __end_of_pwm2_init:	
  4586  053A                     __ptext74:	
  4587 ;; *************** function _pwm3_init *****************
  4588 ;; Defined at:
  4589 ;;		line 47 in file "src/drv_pwm.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;		None
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0
  4598 ;; Tracked objects:
  4599 ;;		On entry : B1F/5
  4600 ;;		On exit  : B1F/5
  4601 ;;		Unchanged: B00/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;Total ram usage:        0 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    9
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_app_init
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           
  4618                           ;psect for function _pwm3_init
  4619  053A                     _pwm3_init:	
  4620                           
  4621                           ;drv_pwm.c: 50: CCP3CON = 0x8F;
  4622                           
  4623                           ;incstack = 0
  4624                           ; Regs used in _pwm3_init: [wreg+status,2+status,0]
  4625  053A  308F               	movlw	143
  4626  053B  0026               	movlb	6	; select bank6
  4627  053C  0093               	movwf	19	;volatile
  4628                           
  4629                           ;drv_pwm.c: 53: CCPR3H = 0x00;
  4630  053D  0192               	clrf	18	;volatile
  4631                           
  4632                           ;drv_pwm.c: 56: CCPR3L = 0x00;
  4633  053E  0191               	clrf	17	;volatile
  4634                           
  4635                           ;drv_pwm.c: 59: CCPTMRSbits.C3TSEL = 0x1;
  4636  053F  0025               	movlb	5	; select bank5
  4637  0540  081F               	movf	31,w	;volatile
  4638  0541  39CF               	andlw	-49
  4639  0542  3810               	iorlw	16
  4640  0543  009F               	movwf	31	;volatile
  4641  0544  0008               	return
  4642  0545                     __end_of_pwm3_init:	
  4643  0545                     __ptext73:	
  4644 ;; *************** function _pwm4_init *****************
  4645 ;; Defined at:
  4646 ;;		line 69 in file "src/drv_pwm.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0
  4655 ;; Tracked objects:
  4656 ;;		On entry : B1F/5
  4657 ;;		On exit  : B1F/5
  4658 ;;		Unchanged: B00/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4664 ;;Total ram usage:        0 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:    9
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_app_init
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           
  4675                           ;psect for function _pwm4_init
  4676  0545                     _pwm4_init:	
  4677                           
  4678                           ;drv_pwm.c: 72: CCP4CON = 0x8F;
  4679                           
  4680                           ;incstack = 0
  4681                           ; Regs used in _pwm4_init: [wreg+status,2+status,0]
  4682  0545  308F               	movlw	143
  4683  0546  0026               	movlb	6	; select bank6
  4684  0547  0097               	movwf	23	;volatile
  4685                           
  4686                           ;drv_pwm.c: 75: CCPR4H = 0x00;
  4687  0548  0196               	clrf	22	;volatile
  4688                           
  4689                           ;drv_pwm.c: 78: CCPR4L = 0x00;
  4690  0549  0195               	clrf	21	;volatile
  4691                           
  4692                           ;drv_pwm.c: 81: CCPTMRSbits.C4TSEL = 0x1;
  4693  054A  0025               	movlb	5	; select bank5
  4694  054B  081F               	movf	31,w	;volatile
  4695  054C  393F               	andlw	-193
  4696  054D  3840               	iorlw	64
  4697  054E  009F               	movwf	31	;volatile
  4698  054F  0008               	return
  4699  0550                     __end_of_pwm4_init:	
  4700  0550                     __ptext72:	
  4701 ;; *************** function _pwm5_init *****************
  4702 ;; Defined at:
  4703 ;;		line 91 in file "src/drv_pwm.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;		None
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;		None
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0
  4712 ;; Tracked objects:
  4713 ;;		On entry : B1F/5
  4714 ;;		On exit  : B1F/C
  4715 ;;		Unchanged: B00/0
  4716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4721 ;;Total ram usage:        0 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:    9
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_app_init
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           
  4732                           ;psect for function _pwm5_init
  4733  0550                     _pwm5_init:	
  4734                           
  4735                           ;drv_pwm.c: 93: PWM5DCH = 0;
  4736                           
  4737                           ;incstack = 0
  4738                           ; Regs used in _pwm5_init: [wreg+status,2+status,0]
  4739  0550  002C               	movlb	12	; select bank12
  4740  0551  0198               	clrf	24	;volatile
  4741                           
  4742                           ;drv_pwm.c: 94: PWM5DCL = 0;
  4743  0552  0197               	clrf	23	;volatile
  4744                           
  4745                           ;drv_pwm.c: 95: PWMTMRSbits.P5TSEL = 0X01;
  4746  0553  081F               	movf	31,w	;volatile
  4747  0554  39FC               	andlw	-4
  4748  0555  3801               	iorlw	1
  4749  0556  009F               	movwf	31	;volatile
  4750                           
  4751                           ;drv_pwm.c: 96: PWM5CON = 0X80;
  4752  0557  3080               	movlw	128
  4753  0558  0099               	movwf	25	;volatile
  4754  0559  0008               	return
  4755  055A                     __end_of_pwm5_init:	
  4756  055A                     __ptext71:	
  4757 ;; *************** function _tmr0_init *****************
  4758 ;; Defined at:
  4759 ;;		line 6 in file "src/drv_tmr.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  cb              2    2[BANK0 ] PTR FTN()void 
  4762 ;;		 -> rtc_process(1), 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  1    wreg      void 
  4767 ;; Registers used:
  4768 ;;		wreg, status,2
  4769 ;; Tracked objects:
  4770 ;;		On entry : B1F/0
  4771 ;;		On exit  : B1F/0
  4772 ;;		Unchanged: B00/0
  4773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4774 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4777 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4778 ;;Total ram usage:        2 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:    9
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_app_init
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           
  4789                           ;psect for function _tmr0_init
  4790  055A                     _tmr0_init:	
  4791                           
  4792                           ;drv_tmr.c: 9: T0CON0 = 0x00;
  4793                           
  4794                           ;incstack = 0
  4795                           ; Regs used in _tmr0_init: [wreg+status,2]
  4796  055A  0197               	clrf	23	;volatile
  4797                           
  4798                           ;drv_tmr.c: 12: T0CON1 = 0xD7;
  4799  055B  30D7               	movlw	215
  4800  055C  0098               	movwf	24	;volatile
  4801                           
  4802                           ;drv_tmr.c: 15: TMR0H = 0xFF;
  4803  055D  30FF               	movlw	255
  4804  055E  0096               	movwf	22	;volatile
  4805                           
  4806                           ;drv_tmr.c: 18: TMR0L = 0x00;
  4807  055F  0195               	clrf	21	;volatile
  4808                           
  4809                           ;drv_tmr.c: 21: PIR0bits.TMR0IF = 0;
  4810  0560  1290               	bcf	16,5	;volatile
  4811                           
  4812                           ;drv_tmr.c: 24: PIE0bits.TMR0IE = 1;
  4813  0561  0021               	movlb	1	; select bank1
  4814  0562  1690               	bsf	16,5	;volatile
  4815                           
  4816                           ;drv_tmr.c: 26: tmr0_isr_cb = cb;
  4817  0563  0020               	movlb	0	; select bank0
  4818  0564  0823               	movf	tmr0_init@cb+1,w
  4819  0565  00EC               	movwf	_tmr0_isr_cb+1
  4820  0566  0822               	movf	tmr0_init@cb,w
  4821  0567  00EB               	movwf	_tmr0_isr_cb
  4822  0568  0008               	return
  4823  0569                     __end_of_tmr0_init:	
  4824  0569                     __ptext70:	
  4825 ;; *************** function _tmr2_init *****************
  4826 ;; Defined at:
  4827 ;;		line 38 in file "src/drv_tmr.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  cb              2    2[BANK0 ] PTR FTN()void 
  4830 ;;		 -> tmr2_isr_callback(1), 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, status,2
  4837 ;; Tracked objects:
  4838 ;;		On entry : B1F/0
  4839 ;;		On exit  : B1F/1
  4840 ;;		Unchanged: B00/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4845 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;Total ram usage:        2 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    9
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_app_init
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function _tmr2_init
  4858  0569                     _tmr2_init:	
  4859                           
  4860                           ;drv_tmr.c: 41: T2CON = 0x78;
  4861                           
  4862                           ;incstack = 0
  4863                           ; Regs used in _tmr2_init: [wreg+status,2]
  4864  0569  3078               	movlw	120
  4865  056A  009F               	movwf	31	;volatile
  4866                           
  4867                           ;drv_tmr.c: 44: PR2 = 0xF9;
  4868  056B  30F9               	movlw	249
  4869  056C  009E               	movwf	30	;volatile
  4870                           
  4871                           ;drv_tmr.c: 47: TMR2 = 0x00;
  4872  056D  019D               	clrf	29	;volatile
  4873                           
  4874                           ;drv_tmr.c: 50: PIR1bits.TMR2IF = 0;
  4875  056E  1091               	bcf	17,1	;volatile
  4876                           
  4877                           ;drv_tmr.c: 53: PIE1bits.TMR2IE = 1;
  4878  056F  0021               	movlb	1	; select bank1
  4879  0570  1491               	bsf	17,1	;volatile
  4880                           
  4881                           ;drv_tmr.c: 55: tmr2_isr_cb = cb;
  4882  0571  0020               	movlb	0	; select bank0
  4883  0572  0823               	movf	tmr2_init@cb+1,w
  4884  0573  0021               	movlb	1	; select bank1
  4885  0574  00EF               	movwf	(_tmr2_isr_cb+1)^(0+128)
  4886  0575  0020               	movlb	0	; select bank0
  4887  0576  0822               	movf	tmr2_init@cb,w
  4888  0577  0021               	movlb	1	; select bank1
  4889  0578  00EE               	movwf	_tmr2_isr_cb^(0+128)
  4890  0579  0008               	return
  4891  057A                     __end_of_tmr2_init:	
  4892  057A                     __ptext64:	
  4893 ;; *************** function _ble_init *****************
  4894 ;; Defined at:
  4895 ;;		line 180 in file "src/app_ble.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;		None
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;		None
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      void 
  4902 ;; Registers used:
  4903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4904 ;; Tracked objects:
  4905 ;;		On entry : B1F/2
  4906 ;;		On exit  : 1F/2
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;Total ram usage:        2 bytes
  4914 ;; Hardware stack levels used:    1
  4915 ;; Hardware stack levels required when called:   12
  4916 ;; This function calls:
  4917 ;;		_ble_check_devid
  4918 ;;		_ble_send_cmd
  4919 ;; This function is called by:
  4920 ;;		_main
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           
  4925                           ;psect for function _ble_init
  4926  057A                     _ble_init:	
  4927                           
  4928                           ;app_ble.c: 182: LATCbits.LATC1 = 0;
  4929                           
  4930                           ;incstack = 0
  4931                           ; Regs used in _ble_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4932  057A  108E               	bcf	14,1	;volatile
  4933                           
  4934                           ;app_ble.c: 183: LATBbits.LATB5 = 0;
  4935  057B  128D               	bcf	13,5	;volatile
  4936                           
  4937                           ;app_ble.c: 184: _delay((unsigned long)((20)*(16000000/4000.0)));
  4938  057C  3068               	movlw	104
  4939  057D  0020               	movlb	0	; select bank0
  4940  057E  00CD               	movwf	??_ble_init
  4941  057F  30E4               	movlw	228
  4942  0580                     u6797:	
  4943  0580  0B89               	decfsz	9,f
  4944  0581  2D80               	goto	u6797
  4945  0582  0BCD               	decfsz	??_ble_init,f
  4946  0583  2D80               	goto	u6797
  4947  0584  0000               	nop
  4948                           
  4949                           ;app_ble.c: 185: LATBbits.LATB5 = 1;
  4950  0585  0022               	movlb	2	; select bank2
  4951  0586  168D               	bsf	13,5	;volatile
  4952                           
  4953                           ;app_ble.c: 186: _delay((unsigned long)((240)*(16000000/4000.0)));
  4954  0587  3005               	movlw	5
  4955  0588  0020               	movlb	0	; select bank0
  4956  0589  00CE               	movwf	??_ble_init+1
  4957  058A  30DF               	movlw	223
  4958  058B  00CD               	movwf	??_ble_init
  4959  058C  30BB               	movlw	187
  4960  058D                     u6807:	
  4961  058D  0B89               	decfsz	9,f
  4962  058E  2D8D               	goto	u6807
  4963  058F  0BCD               	decfsz	??_ble_init,f
  4964  0590  2D8D               	goto	u6807
  4965  0591  0BCE               	decfsz	??_ble_init+1,f
  4966  0592  2D8D               	goto	u6807
  4967  0593  3200               	nop2
  4968                           
  4969                           ;app_ble.c: 189: if(ble_check_devid() == 0)
  4970  0594  319E  26B6  3184   	fcall	_ble_check_devid
  4971  0597  3A00               	xorlw	0
  4972  0598  1D03               	skipz
  4973  0599  2DAA               	goto	l5723
  4974                           
  4975                           ;app_ble.c: 190: {
  4976                           ;app_ble.c: 191: _delay((unsigned long)((40)*(16000000/4000.0)));
  4977  059A  30D0               	movlw	208
  4978  059B  0020               	movlb	0	; select bank0
  4979  059C  00CD               	movwf	??_ble_init
  4980  059D  30C9               	movlw	201
  4981  059E                     u6817:	
  4982  059E  0B89               	decfsz	9,f
  4983  059F  2D9E               	goto	u6817
  4984  05A0  0BCD               	decfsz	??_ble_init,f
  4985  05A1  2D9E               	goto	u6817
  4986  05A2  3200               	nop2
  4987                           
  4988                           ;app_ble.c: 192: ble_send_cmd("AT+ADV_MFR_SPC=" "30313234" "30313033" "\r\n");
  4989  05A3  3000               	movlw	low (STR_2| (0+32768))
  4990  05A4  0020               	movlb	0	; select bank0
  4991  05A5  00A7               	movwf	ble_send_cmd@cmd
  4992  05A6  3098               	movlw	high (STR_2| (0+32768))
  4993  05A7  00A8               	movwf	ble_send_cmd@cmd+1
  4994  05A8  25D6  3184         	fcall	_ble_send_cmd
  4995  05AA                     l5723:	
  4996                           
  4997                           ;app_ble.c: 193: }
  4998                           ;app_ble.c: 194: _delay((unsigned long)((40)*(16000000/4000.0)));
  4999  05AA  30D0               	movlw	208
  5000  05AB  0020               	movlb	0	; select bank0
  5001  05AC  00CD               	movwf	??_ble_init
  5002  05AD  30C9               	movlw	201
  5003  05AE                     u6827:	
  5004  05AE  0B89               	decfsz	9,f
  5005  05AF  2DAE               	goto	u6827
  5006  05B0  0BCD               	decfsz	??_ble_init,f
  5007  05B1  2DAE               	goto	u6827
  5008  05B2  3200               	nop2
  5009                           
  5010                           ;app_ble.c: 196: ble_send_cmd("AT+SET=1\r\n");
  5011  05B3  3066               	movlw	low (STR_3| (0+32768))
  5012  05B4  0020               	movlb	0	; select bank0
  5013  05B5  00A7               	movwf	ble_send_cmd@cmd
  5014  05B6  3098               	movlw	high (STR_3| (0+32768))
  5015  05B7  00A8               	movwf	ble_send_cmd@cmd+1
  5016  05B8  25D6  3184         	fcall	_ble_send_cmd
  5017                           
  5018                           ;app_ble.c: 197: _delay((unsigned long)((40)*(16000000/4000.0)));
  5019  05BA  30D0               	movlw	208
  5020  05BB  0020               	movlb	0	; select bank0
  5021  05BC  00CD               	movwf	??_ble_init
  5022  05BD  30C9               	movlw	201
  5023  05BE                     u6837:	
  5024  05BE  0B89               	decfsz	9,f
  5025  05BF  2DBE               	goto	u6837
  5026  05C0  0BCD               	decfsz	??_ble_init,f
  5027  05C1  2DBE               	goto	u6837
  5028  05C2  3200               	nop2
  5029                           
  5030                           ;app_ble.c: 199: ble_send_cmd("AT+MODE=DATA\r\n");
  5031  05C3  3057               	movlw	low (STR_4| (0+32768))
  5032  05C4  0020               	movlb	0	; select bank0
  5033  05C5  00A7               	movwf	ble_send_cmd@cmd
  5034  05C6  3098               	movlw	high (STR_4| (0+32768))
  5035  05C7  00A8               	movwf	ble_send_cmd@cmd+1
  5036  05C8  25D6  3184         	fcall	_ble_send_cmd
  5037                           
  5038                           ;app_ble.c: 200: _delay((unsigned long)((40)*(16000000/4000.0)));
  5039  05CA  30D0               	movlw	208
  5040  05CB  0020               	movlb	0	; select bank0
  5041  05CC  00CD               	movwf	??_ble_init
  5042  05CD  30C9               	movlw	201
  5043  05CE                     u6847:	
  5044  05CE  0B89               	decfsz	9,f
  5045  05CF  2DCE               	goto	u6847
  5046  05D0  0BCD               	decfsz	??_ble_init,f
  5047  05D1  2DCE               	goto	u6847
  5048  05D2  3200               	nop2
  5049                           
  5050                           ;app_ble.c: 201: LATCbits.LATC1 = 1;
  5051  05D3  0022               	movlb	2	; select bank2
  5052  05D4  148E               	bsf	14,1	;volatile
  5053  05D5  0008               	return
  5054  05D6                     __end_of_ble_init:	
  5055  05D6                     __ptext66:	
  5056 ;; *************** function _ble_send_cmd *****************
  5057 ;; Defined at:
  5058 ;;		line 44 in file "src/app_ble.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  cmd             2    7[BANK0 ] PTR const unsigned char 
  5061 ;;		 -> STR_4(15), STR_3(11), STR_2(34), STR_1(19), 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  ack             8   10[BANK0 ] unsigned char [8]
  5064 ;;  idx             1   21[BANK0 ] unsigned char 
  5065 ;;  rev             1   20[BANK0 ] unsigned char 
  5066 ;;  cnt             1   19[BANK0 ] unsigned char 
  5067 ;;  len             1   18[BANK0 ] unsigned char 
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1    wreg      unsigned char 
  5070 ;; Registers used:
  5071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5072 ;; Tracked objects:
  5073 ;;		On entry : 1F/0
  5074 ;;		On exit  : 1F/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5077 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5078 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5079 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5080 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5081 ;;Total ram usage:       15 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:   10
  5084 ;; This function calls:
  5085 ;;		_eusart_write
  5086 ;;		_strlen
  5087 ;; This function is called by:
  5088 ;;		_ble_check_devid
  5089 ;;		_ble_init
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           
  5094                           ;psect for function _ble_send_cmd
  5095  05D6                     _ble_send_cmd:	
  5096                           
  5097                           ;app_ble.c: 46: char ack[] = "AT+OK\r\n";
  5098                           
  5099                           ;incstack = 0
  5100                           ; Regs used in _ble_send_cmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5101  05D6  304F               	movlw	low ble_send_cmd@F8334
  5102  05D7  0086               	movwf	6
  5103  05D8  3001               	movlw	high ble_send_cmd@F8334
  5104  05D9  0087               	movwf	7
  5105  05DA  302A               	movlw	low ble_send_cmd@ack
  5106  05DB  0084               	movwf	4
  5107  05DC  3000               	movlw	high ble_send_cmd@ack
  5108  05DD  0085               	movwf	5
  5109  05DE  3008               	movlw	8
  5110  05DF  00A9               	movwf	??_ble_send_cmd
  5111  05E0                     u3310:	
  5112  05E0  0016               	moviw fsr1++
  5113  05E1  001A               	movwi fsr0++
  5114  05E2  0BA9               	decfsz	??_ble_send_cmd,f
  5115  05E3  2DE0               	goto	u3310
  5116                           
  5117                           ;app_ble.c: 47: uint8_t len = strlen(ack);
  5118  05E4  302A               	movlw	(low (ble_send_cmd@ack| 0))& (0+255)
  5119  05E5  319E  26FA  3184   	fcall	_strlen
  5120  05E8  0822               	movf	?_strlen,w
  5121  05E9  00B2               	movwf	ble_send_cmd@len
  5122                           
  5123                           ;app_ble.c: 48: uint8_t idx = 0;
  5124  05EA  01B5               	clrf	ble_send_cmd@idx
  5125                           
  5126                           ;app_ble.c: 49: uint8_t cnt = 0;
  5127  05EB  01B3               	clrf	ble_send_cmd@cnt
  5128  05EC  0023               	movlb	3	; select bank3
  5129  05ED  0819               	movf	25,w	;volatile
  5130  05EE                     l4343:	
  5131                           ;app_ble.c: 51: while(*cmd != '\0')
  5132                           
  5133  05EE  0020               	movlb	0	; select bank0
  5134  05EF  0827               	movf	ble_send_cmd@cmd,w
  5135  05F0  0084               	movwf	4
  5136  05F1  0828               	movf	ble_send_cmd@cmd+1,w
  5137  05F2  0085               	movwf	5
  5138  05F3  0012               	moviw fsr0++
  5139  05F4  1903               	btfsc	3,2
  5140  05F5  2E21               	goto	l4365
  5141                           
  5142                           ;app_ble.c: 52: {
  5143                           ;app_ble.c: 53: eusart_write(*cmd++);
  5144  05F6  0827               	movf	ble_send_cmd@cmd,w
  5145  05F7  0084               	movwf	4
  5146  05F8  0828               	movf	ble_send_cmd@cmd+1,w
  5147  05F9  0085               	movwf	5
  5148  05FA  0800               	movf	0,w	;code access
  5149  05FB  3191  212A  3184   	fcall	_eusart_write
  5150  05FE  0AA7               	incf	ble_send_cmd@cmd,f
  5151  05FF  1903               	skipnz
  5152  0600  0AA8               	incf	ble_send_cmd@cmd+1,f
  5153  0601  2DEE               	goto	l4343
  5154  0602                     l388:	
  5155                           
  5156                           ;app_ble.c: 57: {
  5157                           ;app_ble.c: 58: if(PIR1bits.RCIF)
  5158  0602  1E91               	btfss	17,5	;volatile
  5159  0603  2E17               	goto	l4357
  5160                           
  5161                           ;app_ble.c: 59: {
  5162                           ;app_ble.c: 60: if(RCSTAbits.OERR)
  5163  0604  0023               	movlb	3	; select bank3
  5164  0605  1C9D               	btfss	29,1	;volatile
  5165  0606  2E09               	goto	l4349
  5166                           
  5167                           ;app_ble.c: 61: {
  5168                           ;app_ble.c: 62: RCSTAbits.CREN = 0;
  5169  0607  121D               	bcf	29,4	;volatile
  5170                           
  5171                           ;app_ble.c: 63: RCSTAbits.CREN = 1;
  5172  0608  161D               	bsf	29,4	;volatile
  5173  0609                     l4349:	
  5174                           
  5175                           ;app_ble.c: 64: }
  5176                           ;app_ble.c: 65: rev = RCREG;
  5177  0609  0819               	movf	25,w	;volatile
  5178  060A  0020               	movlb	0	; select bank0
  5179  060B  00B4               	movwf	ble_send_cmd@rev
  5180                           
  5181                           ;app_ble.c: 66: if(rev == ack[idx])
  5182  060C  0835               	movf	ble_send_cmd@idx,w
  5183  060D  3E2A               	addlw	(low (ble_send_cmd@ack| 0))& (0+255)
  5184  060E  0086               	movwf	6
  5185  060F  0187               	clrf	7
  5186  0610  0801               	movf	1,w
  5187  0611  0634               	xorwf	ble_send_cmd@rev,w
  5188  0612  1D03               	skipz
  5189  0613  2E16               	goto	l4355
  5190                           
  5191                           ;app_ble.c: 67: {
  5192                           ;app_ble.c: 68: idx++;
  5193  0614  0AB5               	incf	ble_send_cmd@idx,f
  5194                           
  5195                           ;app_ble.c: 69: }
  5196  0615  2E17               	goto	l4357
  5197  0616                     l4355:	
  5198                           
  5199                           ;app_ble.c: 70: else
  5200                           ;app_ble.c: 71: {
  5201                           ;app_ble.c: 72: idx = 0;
  5202  0616  01B5               	clrf	ble_send_cmd@idx
  5203  0617                     l4357:	
  5204                           
  5205                           ;app_ble.c: 73: }
  5206                           ;app_ble.c: 74: }
  5207                           ;app_ble.c: 75: _delay((unsigned long)((250)*(16000000/4000000.0)));
  5208  0617  30C8               	movlw	200
  5209  0618                     u6867:	
  5210  0618  3200               	nop2
  5211  0619  0B89               	decfsz	9,f
  5212  061A  2E18               	goto	u6867
  5213                           
  5214                           ;app_ble.c: 76: cnt++;
  5215  061B  0020               	movlb	0	; select bank0
  5216  061C  30FB               	movlw	251
  5217  061D  0AB3               	incf	ble_send_cmd@cnt,f
  5218                           
  5219                           ;app_ble.c: 77: if(cnt > 250)
  5220  061E  0233               	subwf	ble_send_cmd@cnt,w
  5221  061F  1803               	btfsc	3,0
  5222  0620  0008               	return
  5223  0621                     l4365:	
  5224  0621  0832               	movf	ble_send_cmd@len,w
  5225  0622  0235               	subwf	ble_send_cmd@idx,w
  5226  0623  1803               	btfsc	3,0
  5227  0624  0008               	return
  5228  0625  2E02               	goto	l388
  5229  0626                     __end_of_ble_send_cmd:	
  5230  0626                     __ptext19:	
  5231 ;; *************** function _led_init *****************
  5232 ;; Defined at:
  5233 ;;		line 453 in file "src/app_led.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      void 
  5240 ;; Registers used:
  5241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 1F/0
  5244 ;;		On exit  : 1D/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5251 ;;Total ram usage:        0 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:   12
  5254 ;; This function calls:
  5255 ;;		_led_para_init
  5256 ;; This function is called by:
  5257 ;;		_main
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           
  5262                           ;psect for function _led_init
  5263  0626                     _led_init:	
  5264                           
  5265                           ;app_led.c: 455: led_para_init();
  5266                           
  5267                           ;incstack = 0
  5268                           ; Regs used in _led_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5269  0626  318C  2C46         	ljmp	l6287
  5270  0628                     __end_of_led_init:	
  5271  0628                     __ptext1:	
  5272 ;; *************** function _rtc_second_ready *****************
  5273 ;; Defined at:
  5274 ;;		line 100 in file "src/app_rtc.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;		None
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      unsigned char 
  5281 ;; Registers used:
  5282 ;;		wreg
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 1F/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5292 ;;Total ram usage:        0 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    9
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_main
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           
  5303                           ;psect for function _rtc_second_ready
  5304  0628                     _rtc_second_ready:	
  5305                           
  5306                           ;app_rtc.c: 102: if(rtc_status.fSec)
  5307                           
  5308                           ;incstack = 0
  5309                           ; Regs used in _rtc_second_ready: [wreg]
  5310  0628  0020               	movlb	0	; select bank0
  5311  0629  1C64               	btfss	_rtc_status,0
  5312  062A  3400               	retlw	0
  5313  062B  3001               	movlw	1
  5314                           
  5315                           ;app_rtc.c: 103: {
  5316                           ;app_rtc.c: 104: rtc_status.fSec = 0;
  5317  062C  1064               	bcf	_rtc_status,0
  5318                           
  5319                           ;app_rtc.c: 105: return 1;
  5320  062D  0008               	return
  5321  062E                     __end_of_rtc_second_ready:	
  5322                           ;app_rtc.c: 106: }
  5323                           ;app_rtc.c: 107: return 0;
  5324                           
  5325                           
  5326                           	psect	bssBANK0
  5327  0055                     __pbssBANK0:	
  5328  0055                     _m_current_time:	
  5329  0055                     	ds	7
  5330  005C                     _led_run_para:	
  5331  005C                     	ds	4
  5332  0060                     tmr2_isr_callback@cnt:	
  5333  0060                     	ds	1
  5334  0061                     led_find_device@toggle:	
  5335  0061                     	ds	1
  5336  0062                     _checksum:	
  5337  0062                     	ds	1
  5338  0063                     _index:	
  5339  0063                     	ds	1
  5340  0064                     _rtc_status:	
  5341  0064                     	ds	1
  5342  0065                     key_scan@repeat:	
  5343  0065                     	ds	1
  5344  0066                     key_scan@last_key:	
  5345  0066                     	ds	1
  5346  0067                     key_read@cont:	
  5347  0067                     	ds	1
  5348  0068                     key_read@trg:	
  5349  0068                     	ds	1
  5350  0069                     _tx_head:	
  5351  0069                     	ds	1
  5352  006A                     _tx_tail:	
  5353  006A                     	ds	1
  5354                           
  5355                           	psect	bssBANK1
  5356  00DA                     __pbssBANK1:	
  5357  00DA                     _current_bright:	
  5358  00DA                     	ds	10
  5359  00E4                     _target_bright:	
  5360  00E4                     	ds	10
  5361                           
  5362                           	psect	dataBANK2
  5363  0120                     __pdataBANK2:	
  5364  0120                     ble_check_devid@F8342:	
  5365  0120                     	ds	17
  5366  0131                     _MONTH_DAY:	
  5367  0131                     	ds	12
  5368  013D                     _led_load_duty:	
  5369  013D                     	ds	10
  5370  0147                     _led_state_cb:	
  5371  0147                     	ds	8
  5372  014F                     ble_send_cmd@F8334:	
  5373  014F                     	ds	8
  5374                           
  5375                           	psect	bssBANK3
  5376  01A0                     __pbssBANK3:	
  5377  01A0                     _rx_buf:	
  5378  01A0                     	ds	80
  5379                           
  5380                           	psect	bssBANK4
  5381  0220                     __pbssBANK4:	
  5382  0220                     _tx_buf:	
  5383  0220                     	ds	64
  5384                           
  5385                           	psect	inittext
  5386  1004                     init_ram:	
  5387  1004  00FE               	movwf	126
  5388  1005                     initloop:	
  5389  1005  0012               	moviw fsr0++
  5390  1006  001E               	movwi fsr1++
  5391  1007  3001               	movlw	1
  5392  1008  02FE               	subwf	126,f
  5393  1009  3000               	movlw	0
  5394  100A  3BFF               	subwfb	127,f
  5395  100B  087F               	movf	127,w
  5396  100C  047E               	iorwf	126,w
  5397  100D  1903               	btfsc	3,2
  5398  100E  3400               	retlw	0
  5399  100F  2805               	goto	initloop
  5400                           
  5401                           	psect	clrtext
  5402  1E0C                     clear_ram0:	
  5403                           ;	Called with FSR0 containing the base address, and
  5404                           ;	btemp/btemp+1 has the size to clear
  5405                           
  5406  1E0C  0064               	clrwdt	;clear the watchdog before getting into this loop
  5407  1E0D                     clrloop0:	
  5408  1E0D  3001               	movlw	1
  5409  1E0E  0180               	clrf	0	;clear RAM location pointed to by FSR
  5410  1E0F  3101               	addfsr 0,1
  5411  1E10  02FE               	subwf	126,f
  5412  1E11  3000               	movlw	0
  5413  1E12  3BFF               	subwfb	127,f
  5414  1E13  087F               	movf	127,w
  5415  1E14  047E               	iorwf	126,w
  5416  1E15  1903               	btfsc	3,2
  5417  1E16  3400               	retlw	0	;all done for this memory range, return
  5418  1E17  2E0D               	goto	clrloop0	;have we reached the end yet?
  5419                           
  5420                           	psect	cstackBANK2
  5421  015C                     __pcstackBANK2:	
  5422  015C                     led_second_cb@sec:	
  5423                           
  5424                           ; 1 bytes @ 0x0
  5425  015C                     	ds	1
  5426  015D                     led_second_cb@ct:	
  5427                           
  5428                           ; 2 bytes @ 0x1
  5429  015D                     	ds	2
  5430                           
  5431                           	psect	cstackBANK1
  5432  00A0                     __pcstackBANK1:	
  5433  00A0                     led_pro_process@index:	
  5434  00A0                     led_auto_process@val:	
  5435                           ; 10 bytes @ 0x0
  5436                           
  5437                           
  5438                           ; 30 bytes @ 0x0
  5439  00A0                     	ds	10
  5440  00AA                     led_pro_process@tmp:	
  5441                           
  5442                           ; 1 bytes @ 0xA
  5443  00AA                     	ds	1
  5444  00AB                     led_pro_process@t1:	
  5445                           
  5446                           ; 2 bytes @ 0xB
  5447  00AB                     	ds	2
  5448  00AD                     led_pro_process@t2:	
  5449                           
  5450                           ; 2 bytes @ 0xD
  5451  00AD                     	ds	2
  5452  00AF                     led_pro_process@dt:	
  5453                           
  5454                           ; 4 bytes @ 0xF
  5455  00AF                     	ds	4
  5456  00B3                     led_pro_process@flag:	
  5457                           
  5458                           ; 1 bytes @ 0x13
  5459  00B3                     	ds	1
  5460  00B4                     led_pro_process@duration:	
  5461                           
  5462                           ; 2 bytes @ 0x14
  5463  00B4                     	ds	2
  5464  00B6                     led_pro_process@p1:	
  5465                           
  5466                           ; 2 bytes @ 0x16
  5467  00B6                     	ds	2
  5468  00B8                     led_pro_process@p2:	
  5469                           
  5470                           ; 2 bytes @ 0x18
  5471  00B8                     	ds	2
  5472  00BA                     led_pro_process@start:	
  5473                           
  5474                           ; 2 bytes @ 0x1A
  5475  00BA                     	ds	2
  5476  00BC                     led_pro_process@end:	
  5477                           
  5478                           ; 2 bytes @ 0x1C
  5479  00BC                     	ds	2
  5480  00BE                     led_pro_process@point_count:	
  5481  00BE                     led_auto_process@tr:	
  5482                           ; 1 bytes @ 0x1E
  5483                           
  5484                           
  5485                           ; 12 bytes @ 0x1E
  5486  00BE                     	ds	1
  5487  00BF                     led_pro_process@et:	
  5488                           
  5489                           ; 2 bytes @ 0x1F
  5490  00BF                     	ds	2
  5491  00C1                     led_pro_process@sp:	
  5492                           
  5493                           ; 2 bytes @ 0x21
  5494  00C1                     	ds	2
  5495  00C3                     led_pro_process@ep:	
  5496                           
  5497                           ; 2 bytes @ 0x23
  5498  00C3                     	ds	2
  5499  00C5                     led_pro_process@j:	
  5500                           
  5501                           ; 1 bytes @ 0x25
  5502  00C5                     	ds	1
  5503  00C6                     led_pro_process@st:	
  5504                           
  5505                           ; 2 bytes @ 0x26
  5506  00C6                     	ds	2
  5507  00C8                     led_pro_process@i:	
  5508                           
  5509                           ; 1 bytes @ 0x28
  5510  00C8                     	ds	2
  5511  00CA                     led_auto_process@duration:	
  5512                           
  5513                           ; 2 bytes @ 0x2A
  5514  00CA                     	ds	2
  5515  00CC                     led_auto_process@j:	
  5516                           
  5517                           ; 1 bytes @ 0x2C
  5518  00CC                     	ds	1
  5519  00CD                     led_auto_process@dt:	
  5520                           
  5521                           ; 4 bytes @ 0x2D
  5522  00CD                     	ds	4
  5523  00D1                     led_auto_process@count:	
  5524                           
  5525                           ; 1 bytes @ 0x31
  5526  00D1                     	ds	1
  5527  00D2                     led_auto_process@et:	
  5528                           
  5529                           ; 2 bytes @ 0x32
  5530  00D2                     	ds	2
  5531  00D4                     led_auto_process@k:	
  5532                           
  5533                           ; 1 bytes @ 0x34
  5534  00D4                     	ds	1
  5535  00D5                     led_auto_process@st:	
  5536                           
  5537                           ; 2 bytes @ 0x35
  5538  00D5                     	ds	2
  5539  00D7                     led_auto_process@p:	
  5540                           
  5541                           ; 2 bytes @ 0x37
  5542  00D7                     	ds	2
  5543  00D9                     led_auto_process@i:	
  5544                           
  5545                           ; 1 bytes @ 0x39
  5546  00D9                     	ds	1
  5547                           
  5548                           	psect	cstackCOMMON
  5549  0070                     __pcstackCOMMON:	
  5550  0070                     ?_ble_decode:	
  5551  0070                     ?_led_set_mode:	
  5552                           ; 1 bytes @ 0x0
  5553                           
  5554  0070                     ?_led_set_power:	
  5555                           ; 1 bytes @ 0x0
  5556                           
  5557  0070                     ?_led_set_bright:	
  5558                           ; 1 bytes @ 0x0
  5559                           
  5560  0070                     ?_led_set_custom:	
  5561                           ; 1 bytes @ 0x0
  5562                           
  5563  0070                     ?_led_set_cycle:	
  5564                           ; 1 bytes @ 0x0
  5565                           
  5566  0070                     ?_led_set_preview:	
  5567                           ; 1 bytes @ 0x0
  5568                           
  5569  0070                     ?_led_start_preview:	
  5570                           ; 1 bytes @ 0x0
  5571                           
  5572  0070                     ?_led_stop_preview:	
  5573                           ; 1 bytes @ 0x0
  5574                           
  5575  0070                     ?_led_set_time:	
  5576                           ; 1 bytes @ 0x0
  5577                           
  5578  0070                     ?_led_start_flash:	
  5579                           ; 1 bytes @ 0x0
  5580                           
  5581  0070                     ?_led_set_pro:	
  5582                           ; 1 bytes @ 0x0
  5583                           
  5584  0070                     ?_led_turnoff:	
  5585                           ; 1 bytes @ 0x0
  5586                           
  5587  0070                     ?_led_indicate_off:	
  5588                           ; 1 bytes @ 0x0
  5589                           
  5590  0070                     ?_led_update_day_bright:	
  5591                           ; 1 bytes @ 0x0
  5592                           
  5593  0070                     ?_led_indicate_day:	
  5594                           ; 1 bytes @ 0x0
  5595                           
  5596  0070                     ?_led_update_night_bright:	
  5597                           ; 1 bytes @ 0x0
  5598                           
  5599  0070                     ?_led_indicate_night:	
  5600                           ; 1 bytes @ 0x0
  5601                           
  5602  0070                     ?_led_turnon_ramp:	
  5603                           ; 1 bytes @ 0x0
  5604                           
  5605  0070                     ?_led_turnoff_ramp:	
  5606                           ; 1 bytes @ 0x0
  5607                           
  5608  0070                     ?_led_indicate_ble:	
  5609                           ; 1 bytes @ 0x0
  5610                           
  5611  0070                     ?_led_prepare_to_save:	
  5612                           ; 1 bytes @ 0x0
  5613                           
  5614  0070                     ?_tmr0_isr:	
  5615                           ; 1 bytes @ 0x0
  5616                           
  5617  0070                     ?_tmr2_isr:	
  5618                           ; 1 bytes @ 0x0
  5619                           
  5620  0070                     ?_pwm1_init:	
  5621                           ; 1 bytes @ 0x0
  5622                           
  5623  0070                     ?_pwm1_load_duty:	
  5624                           ; 1 bytes @ 0x0
  5625                           
  5626  0070                     ?_pwm2_init:	
  5627                           ; 1 bytes @ 0x0
  5628                           
  5629  0070                     ?_pwm2_load_duty:	
  5630                           ; 1 bytes @ 0x0
  5631                           
  5632  0070                     ?_pwm3_init:	
  5633                           ; 1 bytes @ 0x0
  5634                           
  5635  0070                     ?_pwm3_load_duty:	
  5636                           ; 1 bytes @ 0x0
  5637                           
  5638  0070                     ?_pwm4_init:	
  5639                           ; 1 bytes @ 0x0
  5640                           
  5641  0070                     ?_pwm4_load_duty:	
  5642                           ; 1 bytes @ 0x0
  5643                           
  5644  0070                     ?_pwm5_init:	
  5645                           ; 1 bytes @ 0x0
  5646                           
  5647  0070                     ?_pwm5_load_duty:	
  5648                           ; 1 bytes @ 0x0
  5649                           
  5650  0070                     ?_eeprom_read:	
  5651                           ; 1 bytes @ 0x0
  5652                           
  5653  0070                     ?_eusart_write:	
  5654                           ; 1 bytes @ 0x0
  5655                           
  5656  0070                     ?_eusart_transmit_isr:	
  5657                           ; 1 bytes @ 0x0
  5658                           
  5659  0070                     ??_eusart_transmit_isr:	
  5660                           ; 1 bytes @ 0x0
  5661                           
  5662  0070                     ?_eusart_receive_isr:	
  5663                           ; 1 bytes @ 0x0
  5664                           
  5665  0070                     ?_key_read:	
  5666                           ; 1 bytes @ 0x0
  5667                           
  5668  0070                     ??_key_read:	
  5669                           ; 1 bytes @ 0x0
  5670                           
  5671  0070                     ?_key_scan:	
  5672                           ; 1 bytes @ 0x0
  5673                           
  5674  0070                     ?_rtc_init:	
  5675                           ; 1 bytes @ 0x0
  5676                           
  5677  0070                     ?_rtc_process:	
  5678                           ; 1 bytes @ 0x0
  5679                           
  5680  0070                     ?_rtc_second_ready:	
  5681                           ; 1 bytes @ 0x0
  5682                           
  5683  0070                     ?_rtc_set:	
  5684                           ; 1 bytes @ 0x0
  5685                           
  5686  0070                     ?_rtc_get_hour:	
  5687                           ; 1 bytes @ 0x0
  5688                           
  5689  0070                     ?_rtc_get_minute:	
  5690                           ; 1 bytes @ 0x0
  5691                           
  5692  0070                     ?_rtc_get_second:	
  5693                           ; 1 bytes @ 0x0
  5694                           
  5695  0070                     ?_ble_check_devid:	
  5696                           ; 1 bytes @ 0x0
  5697                           
  5698  0070                     ?_ble_transmit_start:	
  5699                           ; 1 bytes @ 0x0
  5700                           
  5701  0070                     ?_ble_transmit_stop:	
  5702                           ; 1 bytes @ 0x0
  5703                           
  5704  0070                     ?_ble_ready_to_receive:	
  5705                           ; 1 bytes @ 0x0
  5706                           
  5707  0070                     ?_ble_receive_start:	
  5708                           ; 1 bytes @ 0x0
  5709                           
  5710  0070                     ?_ble_receive_complete:	
  5711                           ; 1 bytes @ 0x0
  5712                           
  5713  0070                     ?_ble_receive_stop:	
  5714                           ; 1 bytes @ 0x0
  5715                           
  5716  0070                     ?_ble_process:	
  5717                           ; 1 bytes @ 0x0
  5718                           
  5719  0070                     ?_ble_init:	
  5720                           ; 1 bytes @ 0x0
  5721                           
  5722  0070                     ?_ble_send_data:	
  5723                           ; 1 bytes @ 0x0
  5724                           
  5725  0070                     ?_ble_ota_ack:	
  5726                           ; 1 bytes @ 0x0
  5727                           
  5728  0070                     ?_ble_receive:	
  5729                           ; 1 bytes @ 0x0
  5730                           
  5731  0070                     ?_led_para_default:	
  5732                           ; 1 bytes @ 0x0
  5733                           
  5734  0070                     ?_led_para_init:	
  5735                           ; 1 bytes @ 0x0
  5736                           
  5737  0070                     ?_led_init:	
  5738                           ; 1 bytes @ 0x0
  5739                           
  5740  0070                     ?_led_ramp:	
  5741                           ; 1 bytes @ 0x0
  5742                           
  5743  0070                     ?_led_process:	
  5744                           ; 1 bytes @ 0x0
  5745                           
  5746  0070                     ?_led_turnon_max:	
  5747                           ; 1 bytes @ 0x0
  5748                           
  5749  0070                     ?_led_update_day_status:	
  5750                           ; 1 bytes @ 0x0
  5751                           
  5752  0070                     ??_led_update_day_status:	
  5753                           ; 1 bytes @ 0x0
  5754                           
  5755  0070                     ?_led_update_night_status:	
  5756                           ; 1 bytes @ 0x0
  5757                           
  5758  0070                     ??_led_update_night_status:	
  5759                           ; 1 bytes @ 0x0
  5760                           
  5761  0070                     ?_led_state_off_short_press_cb:	
  5762                           ; 1 bytes @ 0x0
  5763                           
  5764  0070                     ?_led_state_off_long_press_cb:	
  5765                           ; 1 bytes @ 0x0
  5766                           
  5767  0070                     ?_led_state_off_cont_press_cb:	
  5768                           ; 1 bytes @ 0x0
  5769                           
  5770  0070                     ??_led_state_off_cont_press_cb:	
  5771                           ; 1 bytes @ 0x0
  5772                           
  5773  0070                     ?_led_state_off_release_cb:	
  5774                           ; 1 bytes @ 0x0
  5775                           
  5776  0070                     ??_led_state_off_release_cb:	
  5777                           ; 1 bytes @ 0x0
  5778                           
  5779  0070                     ?_led_state_day_short_press_cb:	
  5780                           ; 1 bytes @ 0x0
  5781                           
  5782  0070                     ?_led_state_day_long_press_cb:	
  5783                           ; 1 bytes @ 0x0
  5784                           
  5785  0070                     ?_led_state_day_cont_press_cb:	
  5786                           ; 1 bytes @ 0x0
  5787                           
  5788  0070                     ?_led_state_day_release_cb:	
  5789                           ; 1 bytes @ 0x0
  5790                           
  5791  0070                     ??_led_state_day_release_cb:	
  5792                           ; 1 bytes @ 0x0
  5793                           
  5794  0070                     ?_led_state_night_short_press_cb:	
  5795                           ; 1 bytes @ 0x0
  5796                           
  5797  0070                     ??_led_state_night_short_press_cb:	
  5798                           ; 1 bytes @ 0x0
  5799                           
  5800  0070                     ?_led_state_night_long_press_cb:	
  5801                           ; 1 bytes @ 0x0
  5802                           
  5803  0070                     ?_led_state_night_cont_press_cb:	
  5804                           ; 1 bytes @ 0x0
  5805                           
  5806  0070                     ?_led_state_night_release_cb:	
  5807                           ; 1 bytes @ 0x0
  5808                           
  5809  0070                     ??_led_state_night_release_cb:	
  5810                           ; 1 bytes @ 0x0
  5811                           
  5812  0070                     ?_led_state_ble_short_press_cb:	
  5813                           ; 1 bytes @ 0x0
  5814                           
  5815  0070                     ?_led_state_ble_long_press_cb:	
  5816                           ; 1 bytes @ 0x0
  5817                           
  5818  0070                     ??_led_state_ble_long_press_cb:	
  5819                           ; 1 bytes @ 0x0
  5820                           
  5821  0070                     ?_led_state_ble_cont_press_cb:	
  5822                           ; 1 bytes @ 0x0
  5823                           
  5824  0070                     ??_led_state_ble_cont_press_cb:	
  5825                           ; 1 bytes @ 0x0
  5826                           
  5827  0070                     ?_led_state_ble_release_cb:	
  5828                           ; 1 bytes @ 0x0
  5829                           
  5830  0070                     ??_led_state_ble_release_cb:	
  5831                           ; 1 bytes @ 0x0
  5832                           
  5833  0070                     ?_led_find_device:	
  5834                           ; 1 bytes @ 0x0
  5835                           
  5836  0070                     ?_led_preview:	
  5837                           ; 1 bytes @ 0x0
  5838                           
  5839  0070                     ?_led_save_para:	
  5840                           ; 1 bytes @ 0x0
  5841                           
  5842  0070                     ?_led_second_cb:	
  5843                           ; 1 bytes @ 0x0
  5844                           
  5845  0070                     ?_osc_init:	
  5846                           ; 1 bytes @ 0x0
  5847                           
  5848  0070                     ?_gpio_init:	
  5849                           ; 1 bytes @ 0x0
  5850                           
  5851  0070                     ?_tmr2_isr_callback:	
  5852                           ; 1 bytes @ 0x0
  5853                           
  5854  0070                     ?_app_init:	
  5855                           ; 1 bytes @ 0x0
  5856                           
  5857  0070                     ?_app_isr:	
  5858                           ; 1 bytes @ 0x0
  5859                           
  5860  0070                     ?_main:	
  5861                           ; 1 bytes @ 0x0
  5862                           
  5863  0070                     ?i1_increase:	
  5864                           ; 1 bytes @ 0x0
  5865                           
  5866  0070                     ?i1_decrease:	
  5867                           ; 1 bytes @ 0x0
  5868                           
  5869  0070                     ?i1_led_turnoff:	
  5870                           ; 1 bytes @ 0x0
  5871                           
  5872  0070                     ??i1_led_turnoff:	
  5873                           ; 1 bytes @ 0x0
  5874                           
  5875  0070                     ?i1_led_indicate_off:	
  5876                           ; 1 bytes @ 0x0
  5877                           
  5878  0070                     ??i1_led_indicate_off:	
  5879                           ; 1 bytes @ 0x0
  5880                           
  5881  0070                     ?i1_led_indicate_day:	
  5882                           ; 1 bytes @ 0x0
  5883                           
  5884  0070                     ??i1_led_indicate_day:	
  5885                           ; 1 bytes @ 0x0
  5886                           
  5887  0070                     ?i1_led_indicate_night:	
  5888                           ; 1 bytes @ 0x0
  5889                           
  5890  0070                     ??i1_led_indicate_night:	
  5891                           ; 1 bytes @ 0x0
  5892                           
  5893  0070                     ?i1_led_indicate_ble:	
  5894                           ; 1 bytes @ 0x0
  5895                           
  5896  0070                     ??i1_led_indicate_ble:	
  5897                           ; 1 bytes @ 0x0
  5898                           
  5899  0070                     ?i1_led_update_day_bright:	
  5900                           ; 1 bytes @ 0x0
  5901                           
  5902  0070                     ??i1_led_update_day_bright:	
  5903                           ; 1 bytes @ 0x0
  5904                           
  5905  0070                     ?i1_led_update_night_bright:	
  5906                           ; 1 bytes @ 0x0
  5907                           
  5908  0070                     ??i1_led_update_night_bright:	
  5909                           ; 1 bytes @ 0x0
  5910                           
  5911  0070                     ?i1_led_prepare_to_save:	
  5912                           ; 1 bytes @ 0x0
  5913                           
  5914  0070                     ??i1_led_prepare_to_save:	
  5915                           ; 1 bytes @ 0x0
  5916                           
  5917  0070                     ?___lwmod:	
  5918                           ; 1 bytes @ 0x0
  5919                           
  5920  0070                     key_read@dat:	
  5921                           ; 2 bytes @ 0x0
  5922                           
  5923  0070                     ble_receive@rcv:	
  5924                           ; 1 bytes @ 0x0
  5925                           
  5926  0070                     i1led_turnoff@i:	
  5927                           ; 1 bytes @ 0x0
  5928                           
  5929  0070                     pwm1_load_duty@value:	
  5930                           ; 1 bytes @ 0x0
  5931                           
  5932  0070                     pwm2_load_duty@value:	
  5933                           ; 2 bytes @ 0x0
  5934                           
  5935  0070                     pwm3_load_duty@value:	
  5936                           ; 2 bytes @ 0x0
  5937                           
  5938  0070                     pwm4_load_duty@value:	
  5939                           ; 2 bytes @ 0x0
  5940                           
  5941  0070                     pwm5_load_duty@value:	
  5942                           ; 2 bytes @ 0x0
  5943                           
  5944  0070                     ___lwmod@divisor:	
  5945                           ; 2 bytes @ 0x0
  5946                           
  5947  0070                     i1increase@psrc:	
  5948                           ; 2 bytes @ 0x0
  5949                           
  5950  0070                     i1decrease@psrc:	
  5951                           ; 2 bytes @ 0x0
  5952                           
  5953                           
  5954                           ; 2 bytes @ 0x0
  5955  0070                     	ds	1
  5956  0071                     ??_eusart_receive_isr:	
  5957  0071                     ??_ble_receive:	
  5958                           ; 1 bytes @ 0x1
  5959                           
  5960  0071                     ??_led_state_ble_short_press_cb:	
  5961                           ; 1 bytes @ 0x1
  5962                           
  5963  0071                     eusart_receive_isr@rcv:	
  5964                           ; 1 bytes @ 0x1
  5965                           
  5966                           
  5967                           ; 1 bytes @ 0x1
  5968  0071                     	ds	1
  5969  0072                     ??_pwm1_load_duty:	
  5970  0072                     ??_pwm2_load_duty:	
  5971                           ; 1 bytes @ 0x2
  5972                           
  5973  0072                     ??_pwm3_load_duty:	
  5974                           ; 1 bytes @ 0x2
  5975                           
  5976  0072                     ??_pwm4_load_duty:	
  5977                           ; 1 bytes @ 0x2
  5978                           
  5979  0072                     ??_pwm5_load_duty:	
  5980                           ; 1 bytes @ 0x2
  5981                           
  5982  0072                     ??_led_state_day_long_press_cb:	
  5983                           ; 1 bytes @ 0x2
  5984                           
  5985  0072                     ??_led_state_night_long_press_cb:	
  5986                           ; 1 bytes @ 0x2
  5987                           
  5988  0072                     i1increase@delt:	
  5989                           ; 1 bytes @ 0x2
  5990                           
  5991  0072                     i1decrease@delt:	
  5992                           ; 1 bytes @ 0x2
  5993                           
  5994  0072                     ___lwmod@dividend:	
  5995                           ; 1 bytes @ 0x2
  5996                           
  5997                           
  5998                           ; 2 bytes @ 0x2
  5999  0072                     	ds	1
  6000  0073                     i1increase@max:	
  6001  0073                     i1decrease@min:	
  6002                           ; 2 bytes @ 0x3
  6003                           
  6004                           
  6005                           ; 2 bytes @ 0x3
  6006  0073                     	ds	1
  6007  0074                     ??_led_ramp:	
  6008  0074                     ??___lwmod:	
  6009                           ; 1 bytes @ 0x4
  6010                           
  6011  0074                     ___lwmod@counter:	
  6012                           ; 1 bytes @ 0x4
  6013                           
  6014  0074                     i1led_update_day_bright@i:	
  6015                           ; 1 bytes @ 0x4
  6016                           
  6017  0074                     i1led_update_night_bright@i:	
  6018                           ; 1 bytes @ 0x4
  6019                           
  6020                           
  6021                           ; 1 bytes @ 0x4
  6022  0074                     	ds	1
  6023  0075                     ?_rtc_is_leap_year:	
  6024  0075                     ??_led_state_off_short_press_cb:	
  6025                           ; 1 bytes @ 0x5
  6026                           
  6027  0075                     ??_led_state_off_long_press_cb:	
  6028                           ; 1 bytes @ 0x5
  6029                           
  6030  0075                     ??_led_state_day_short_press_cb:	
  6031                           ; 1 bytes @ 0x5
  6032                           
  6033  0075                     ??i1_increase:	
  6034                           ; 1 bytes @ 0x5
  6035                           
  6036  0075                     ??i1_decrease:	
  6037                           ; 1 bytes @ 0x5
  6038                           
  6039  0075                     rtc_is_leap_year@year:	
  6040                           ; 1 bytes @ 0x5
  6041                           
  6042                           
  6043                           ; 2 bytes @ 0x5
  6044  0075                     	ds	2
  6045  0077                     ??_tmr0_isr:	
  6046  0077                     ??_rtc_is_leap_year:	
  6047                           ; 1 bytes @ 0x7
  6048                           
  6049  0077                     ??_rtc_process:	
  6050                           ; 1 bytes @ 0x7
  6051                           
  6052                           
  6053                           ; 1 bytes @ 0x7
  6054  0077                     	ds	2
  6055  0079                     ?_led_state_off_cb:	
  6056  0079                     ?_led_state_day_cb:	
  6057                           ; 1 bytes @ 0x9
  6058                           
  6059  0079                     ?_led_state_night_cb:	
  6060                           ; 1 bytes @ 0x9
  6061                           
  6062  0079                     ?_led_state_ble_cb:	
  6063                           ; 1 bytes @ 0x9
  6064                           
  6065  0079                     ??_led_state_day_cont_press_cb:	
  6066                           ; 1 bytes @ 0x9
  6067                           
  6068  0079                     ??_led_state_night_cont_press_cb:	
  6069                           ; 1 bytes @ 0x9
  6070                           
  6071  0079                     led_state_off_cb@key:	
  6072                           ; 1 bytes @ 0x9
  6073                           
  6074  0079                     led_state_day_cb@key:	
  6075                           ; 1 bytes @ 0x9
  6076                           
  6077  0079                     led_state_night_cb@key:	
  6078                           ; 1 bytes @ 0x9
  6079                           
  6080  0079                     led_state_ble_cb@key:	
  6081                           ; 1 bytes @ 0x9
  6082                           
  6083                           
  6084                           ; 1 bytes @ 0x9
  6085  0079                     	ds	1
  6086  007A                     led_ramp@i:	
  6087  007A                     led_state_off_cb@state:	
  6088                           ; 1 bytes @ 0xA
  6089                           
  6090  007A                     led_state_day_cb@state:	
  6091                           ; 1 bytes @ 0xA
  6092                           
  6093  007A                     led_state_night_cb@state:	
  6094                           ; 1 bytes @ 0xA
  6095                           
  6096  007A                     led_state_ble_cb@state:	
  6097                           ; 1 bytes @ 0xA
  6098                           
  6099                           
  6100                           ; 1 bytes @ 0xA
  6101  007A                     	ds	1
  6102  007B                     ??_led_state_off_cb:	
  6103  007B                     ??_led_state_day_cb:	
  6104                           ; 1 bytes @ 0xB
  6105                           
  6106  007B                     ??_led_state_night_cb:	
  6107                           ; 1 bytes @ 0xB
  6108                           
  6109  007B                     ??_led_state_ble_cb:	
  6110                           ; 1 bytes @ 0xB
  6111                           
  6112  007B                     ??_led_process:	
  6113                           ; 1 bytes @ 0xB
  6114                           
  6115  007B                     ?_led_touch_cb:	
  6116                           ; 1 bytes @ 0xB
  6117                           
  6118  007B                     led_touch_cb@key:	
  6119                           ; 1 bytes @ 0xB
  6120                           
  6121                           
  6122                           ; 1 bytes @ 0xB
  6123  007B                     	ds	1
  6124  007C                     led_touch_cb@state:	
  6125                           
  6126                           ; 1 bytes @ 0xC
  6127  007C                     	ds	1
  6128  007D                     ?_key_action:	
  6129  007D                     ??_led_touch_cb:	
  6130                           ; 1 bytes @ 0xD
  6131                           
  6132  007D                     key_action@state:	
  6133                           ; 1 bytes @ 0xD
  6134                           
  6135                           
  6136                           ; 1 bytes @ 0xD
  6137  007D                     	ds	1
  6138  007E                     ??_tmr2_isr:	
  6139  007E                     ??_key_action:	
  6140                           ; 1 bytes @ 0xE
  6141                           
  6142  007E                     ??_key_scan:	
  6143                           ; 1 bytes @ 0xE
  6144                           
  6145  007E                     ??_tmr2_isr_callback:	
  6146                           ; 1 bytes @ 0xE
  6147                           
  6148  007E                     ??_app_isr:	
  6149                           ; 1 bytes @ 0xE
  6150                           
  6151                           
  6152                           	psect	cstackBANK0
  6153  0020                     __pcstackBANK0:	
  6154                           ; 1 bytes @ 0xE
  6155                           
  6156  0020                     key_action@key:	
  6157                           
  6158                           ; 1 bytes @ 0x0
  6159  0020                     	ds	1
  6160  0021                     key_scan@key_value:	
  6161                           
  6162                           ; 1 bytes @ 0x1
  6163  0021                     	ds	1
  6164  0022                     ??_led_set_bright:	
  6165  0022                     ??_led_set_cycle:	
  6166                           ; 1 bytes @ 0x2
  6167                           
  6168  0022                     ??_led_set_preview:	
  6169                           ; 1 bytes @ 0x2
  6170                           
  6171  0022                     ??_led_start_preview:	
  6172                           ; 1 bytes @ 0x2
  6173                           
  6174  0022                     ??_led_stop_preview:	
  6175                           ; 1 bytes @ 0x2
  6176                           
  6177  0022                     ??_led_start_flash:	
  6178                           ; 1 bytes @ 0x2
  6179                           
  6180  0022                     ??_led_turnoff:	
  6181                           ; 1 bytes @ 0x2
  6182                           
  6183  0022                     ??_led_indicate_off:	
  6184                           ; 1 bytes @ 0x2
  6185                           
  6186  0022                     ??_led_update_day_bright:	
  6187                           ; 1 bytes @ 0x2
  6188                           
  6189  0022                     ??_led_indicate_day:	
  6190                           ; 1 bytes @ 0x2
  6191                           
  6192  0022                     ??_led_update_night_bright:	
  6193                           ; 1 bytes @ 0x2
  6194                           
  6195  0022                     ??_led_indicate_night:	
  6196                           ; 1 bytes @ 0x2
  6197                           
  6198  0022                     ??_led_turnon_ramp:	
  6199                           ; 1 bytes @ 0x2
  6200                           
  6201  0022                     ??_led_turnoff_ramp:	
  6202                           ; 1 bytes @ 0x2
  6203                           
  6204  0022                     ??_led_indicate_ble:	
  6205                           ; 1 bytes @ 0x2
  6206                           
  6207  0022                     ??_led_prepare_to_save:	
  6208                           ; 1 bytes @ 0x2
  6209                           
  6210  0022                     ?_tmr0_init:	
  6211                           ; 1 bytes @ 0x2
  6212                           
  6213  0022                     ?_tmr2_init:	
  6214                           ; 1 bytes @ 0x2
  6215                           
  6216  0022                     ??_pwm1_init:	
  6217                           ; 1 bytes @ 0x2
  6218                           
  6219  0022                     ??_pwm2_init:	
  6220                           ; 1 bytes @ 0x2
  6221                           
  6222  0022                     ??_pwm3_init:	
  6223                           ; 1 bytes @ 0x2
  6224                           
  6225  0022                     ??_pwm4_init:	
  6226                           ; 1 bytes @ 0x2
  6227                           
  6228  0022                     ??_pwm5_init:	
  6229                           ; 1 bytes @ 0x2
  6230                           
  6231  0022                     ?_eeprom_write:	
  6232                           ; 1 bytes @ 0x2
  6233                           
  6234  0022                     ??_eeprom_read:	
  6235                           ; 1 bytes @ 0x2
  6236                           
  6237  0022                     ?_eusart_init:	
  6238                           ; 1 bytes @ 0x2
  6239                           
  6240  0022                     ??_eusart_write:	
  6241                           ; 1 bytes @ 0x2
  6242                           
  6243  0022                     ?_key_init:	
  6244                           ; 1 bytes @ 0x2
  6245                           
  6246  0022                     ??_rtc_init:	
  6247                           ; 1 bytes @ 0x2
  6248                           
  6249  0022                     ??_rtc_second_ready:	
  6250                           ; 1 bytes @ 0x2
  6251                           
  6252  0022                     ??_rtc_set:	
  6253                           ; 1 bytes @ 0x2
  6254                           
  6255  0022                     ??_rtc_get_hour:	
  6256                           ; 1 bytes @ 0x2
  6257                           
  6258  0022                     ??_rtc_get_minute:	
  6259                           ; 1 bytes @ 0x2
  6260                           
  6261  0022                     ??_rtc_get_second:	
  6262                           ; 1 bytes @ 0x2
  6263                           
  6264  0022                     ?_increase:	
  6265                           ; 1 bytes @ 0x2
  6266                           
  6267  0022                     ?_decrease:	
  6268                           ; 1 bytes @ 0x2
  6269                           
  6270  0022                     ??_ble_transmit_start:	
  6271                           ; 1 bytes @ 0x2
  6272                           
  6273  0022                     ??_ble_transmit_stop:	
  6274                           ; 1 bytes @ 0x2
  6275                           
  6276  0022                     ??_ble_ready_to_receive:	
  6277                           ; 1 bytes @ 0x2
  6278                           
  6279  0022                     ??_ble_receive_start:	
  6280                           ; 1 bytes @ 0x2
  6281                           
  6282  0022                     ??_ble_receive_complete:	
  6283                           ; 1 bytes @ 0x2
  6284                           
  6285  0022                     ??_ble_receive_stop:	
  6286                           ; 1 bytes @ 0x2
  6287                           
  6288  0022                     ??_led_turnon_max:	
  6289                           ; 1 bytes @ 0x2
  6290                           
  6291  0022                     ??_led_preview:	
  6292                           ; 1 bytes @ 0x2
  6293                           
  6294  0022                     ??_osc_init:	
  6295                           ; 1 bytes @ 0x2
  6296                           
  6297  0022                     ??_gpio_init:	
  6298                           ; 1 bytes @ 0x2
  6299                           
  6300  0022                     ?___bmul:	
  6301                           ; 1 bytes @ 0x2
  6302                           
  6303  0022                     ?_strlen:	
  6304                           ; 1 bytes @ 0x2
  6305                           
  6306  0022                     ?_memset:	
  6307                           ; 2 bytes @ 0x2
  6308                           
  6309  0022                     ?___wmul:	
  6310                           ; 2 bytes @ 0x2
  6311                           
  6312  0022                     ?___awmod:	
  6313                           ; 2 bytes @ 0x2
  6314                           
  6315  0022                     ?___lwdiv:	
  6316                           ; 2 bytes @ 0x2
  6317                           
  6318  0022                     ?___lmul:	
  6319                           ; 2 bytes @ 0x2
  6320                           
  6321  0022                     eeprom_write@byte:	
  6322                           ; 4 bytes @ 0x2
  6323                           
  6324  0022                     eeprom_read@addr:	
  6325                           ; 1 bytes @ 0x2
  6326                           
  6327  0022                     eusart_write@byte:	
  6328                           ; 1 bytes @ 0x2
  6329                           
  6330  0022                     rtc_set@ptime:	
  6331                           ; 1 bytes @ 0x2
  6332                           
  6333  0022                     led_turnoff_ramp@i:	
  6334                           ; 1 bytes @ 0x2
  6335                           
  6336  0022                     led_turnon_max@i:	
  6337                           ; 1 bytes @ 0x2
  6338                           
  6339  0022                     led_turnoff@i:	
  6340                           ; 1 bytes @ 0x2
  6341                           
  6342  0022                     ___bmul@multiplicand:	
  6343                           ; 1 bytes @ 0x2
  6344                           
  6345  0022                     tmr0_init@cb:	
  6346                           ; 1 bytes @ 0x2
  6347                           
  6348  0022                     tmr2_init@cb:	
  6349                           ; 2 bytes @ 0x2
  6350                           
  6351  0022                     eusart_init@cb:	
  6352                           ; 2 bytes @ 0x2
  6353                           
  6354  0022                     key_init@cb:	
  6355                           ; 2 bytes @ 0x2
  6356                           
  6357  0022                     increase@psrc:	
  6358                           ; 2 bytes @ 0x2
  6359                           
  6360  0022                     decrease@psrc:	
  6361                           ; 2 bytes @ 0x2
  6362                           
  6363  0022                     ___wmul@multiplier:	
  6364                           ; 2 bytes @ 0x2
  6365                           
  6366  0022                     ___awmod@divisor:	
  6367                           ; 2 bytes @ 0x2
  6368                           
  6369  0022                     ___lwdiv@divisor:	
  6370                           ; 2 bytes @ 0x2
  6371                           
  6372  0022                     memset@p1:	
  6373                           ; 2 bytes @ 0x2
  6374                           
  6375  0022                     ___lmul@multiplier:	
  6376                           ; 2 bytes @ 0x2
  6377                           
  6378                           
  6379                           ; 4 bytes @ 0x2
  6380  0022                     	ds	1
  6381  0023                     ??_eeprom_write:	
  6382  0023                     ?_eeprom_read_buffer:	
  6383                           ; 1 bytes @ 0x3
  6384                           
  6385  0023                     ??_ble_ota_ack:	
  6386                           ; 1 bytes @ 0x3
  6387                           
  6388  0023                     ??_led_find_device:	
  6389                           ; 1 bytes @ 0x3
  6390                           
  6391  0023                     ??___bmul:	
  6392                           ; 1 bytes @ 0x3
  6393                           
  6394  0023                     eeprom_write@addr:	
  6395                           ; 1 bytes @ 0x3
  6396                           
  6397  0023                     rtc_set@i:	
  6398                           ; 1 bytes @ 0x3
  6399                           
  6400  0023                     ___bmul@product:	
  6401                           ; 1 bytes @ 0x3
  6402                           
  6403  0023                     eeprom_read_buffer@pbuf:	
  6404                           ; 1 bytes @ 0x3
  6405                           
  6406                           
  6407                           ; 2 bytes @ 0x3
  6408  0023                     	ds	1
  6409  0024                     ??_tmr0_init:	
  6410  0024                     ??_tmr2_init:	
  6411                           ; 1 bytes @ 0x4
  6412                           
  6413  0024                     ??_eusart_init:	
  6414                           ; 1 bytes @ 0x4
  6415                           
  6416  0024                     ??_key_init:	
  6417                           ; 1 bytes @ 0x4
  6418                           
  6419  0024                     ??_app_init:	
  6420                           ; 1 bytes @ 0x4
  6421                           
  6422  0024                     eeprom_write@state:	
  6423                           ; 1 bytes @ 0x4
  6424                           
  6425  0024                     increase@delt:	
  6426                           ; 1 bytes @ 0x4
  6427                           
  6428  0024                     decrease@delt:	
  6429                           ; 1 bytes @ 0x4
  6430                           
  6431  0024                     led_set_preview@pbuf:	
  6432                           ; 1 bytes @ 0x4
  6433                           
  6434  0024                     ___bmul@multiplier:	
  6435                           ; 1 bytes @ 0x4
  6436                           
  6437  0024                     ___wmul@multiplicand:	
  6438                           ; 1 bytes @ 0x4
  6439                           
  6440  0024                     ___awmod@dividend:	
  6441                           ; 2 bytes @ 0x4
  6442                           
  6443  0024                     ___lwdiv@dividend:	
  6444                           ; 2 bytes @ 0x4
  6445                           
  6446  0024                     memset@c:	
  6447                           ; 2 bytes @ 0x4
  6448                           
  6449                           
  6450                           ; 2 bytes @ 0x4
  6451  0024                     	ds	1
  6452  0025                     ??_strlen:	
  6453  0025                     ??_led_set_pro:	
  6454                           ; 1 bytes @ 0x5
  6455                           
  6456  0025                     ?_eeprom_write_buffer:	
  6457                           ; 1 bytes @ 0x5
  6458                           
  6459  0025                     ??_ble_send_data:	
  6460                           ; 1 bytes @ 0x5
  6461                           
  6462  0025                     eeprom_read_buffer@len:	
  6463                           ; 1 bytes @ 0x5
  6464                           
  6465  0025                     strlen@cp:	
  6466                           ; 1 bytes @ 0x5
  6467                           
  6468  0025                     eeprom_write_buffer@pbuf:	
  6469                           ; 1 bytes @ 0x5
  6470                           
  6471  0025                     increase@max:	
  6472                           ; 2 bytes @ 0x5
  6473                           
  6474  0025                     decrease@min:	
  6475                           ; 2 bytes @ 0x5
  6476                           
  6477  0025                     led_set_preview@val:	
  6478                           ; 2 bytes @ 0x5
  6479                           
  6480                           
  6481                           ; 2 bytes @ 0x5
  6482  0025                     	ds	1
  6483  0026                     ??_eeprom_read_buffer:	
  6484  0026                     ??___wmul:	
  6485                           ; 1 bytes @ 0x6
  6486                           
  6487  0026                     ??___awmod:	
  6488                           ; 1 bytes @ 0x6
  6489                           
  6490  0026                     ??___lwdiv:	
  6491                           ; 1 bytes @ 0x6
  6492                           
  6493  0026                     led_turnon_ramp@i:	
  6494                           ; 1 bytes @ 0x6
  6495                           
  6496  0026                     led_update_day_bright@i:	
  6497                           ; 1 bytes @ 0x6
  6498                           
  6499  0026                     led_update_night_bright@i:	
  6500                           ; 1 bytes @ 0x6
  6501                           
  6502  0026                     led_set_bright@pbuf:	
  6503                           ; 1 bytes @ 0x6
  6504                           
  6505  0026                     ___awmod@counter:	
  6506                           ; 1 bytes @ 0x6
  6507                           
  6508  0026                     strlen@s:	
  6509                           ; 1 bytes @ 0x6
  6510                           
  6511  0026                     ___wmul@product:	
  6512                           ; 1 bytes @ 0x6
  6513                           
  6514  0026                     ___lwdiv@quotient:	
  6515                           ; 2 bytes @ 0x6
  6516                           
  6517  0026                     memset@n:	
  6518                           ; 2 bytes @ 0x6
  6519                           
  6520  0026                     ___lmul@multiplicand:	
  6521                           ; 2 bytes @ 0x6
  6522                           
  6523                           
  6524                           ; 4 bytes @ 0x6
  6525  0026                     	ds	1
  6526  0027                     ??_led_set_mode:	
  6527  0027                     ??_led_set_power:	
  6528                           ; 1 bytes @ 0x7
  6529                           
  6530  0027                     ??_led_set_time:	
  6531                           ; 1 bytes @ 0x7
  6532                           
  6533  0027                     ??_increase:	
  6534                           ; 1 bytes @ 0x7
  6535                           
  6536  0027                     ??_decrease:	
  6537                           ; 1 bytes @ 0x7
  6538                           
  6539  0027                     ?_ble_send_cmd:	
  6540                           ; 1 bytes @ 0x7
  6541                           
  6542  0027                     eeprom_write_buffer@len:	
  6543                           ; 1 bytes @ 0x7
  6544                           
  6545  0027                     eeprom_read_buffer@addr:	
  6546                           ; 1 bytes @ 0x7
  6547                           
  6548  0027                     led_set_power@on:	
  6549                           ; 1 bytes @ 0x7
  6550                           
  6551  0027                     led_set_preview@i:	
  6552                           ; 1 bytes @ 0x7
  6553                           
  6554  0027                     led_set_time@ptime:	
  6555                           ; 1 bytes @ 0x7
  6556                           
  6557  0027                     ___awmod@sign:	
  6558                           ; 1 bytes @ 0x7
  6559                           
  6560  0027                     ble_send_cmd@cmd:	
  6561                           ; 1 bytes @ 0x7
  6562                           
  6563  0027                     led_set_bright@val:	
  6564                           ; 2 bytes @ 0x7
  6565                           
  6566                           
  6567                           ; 2 bytes @ 0x7
  6568  0027                     	ds	1
  6569  0028                     ??_memset:	
  6570  0028                     ??_eeprom_write_buffer:	
  6571                           ; 1 bytes @ 0x8
  6572                           
  6573  0028                     eeprom_write_buffer@addr:	
  6574                           ; 1 bytes @ 0x8
  6575                           
  6576  0028                     eeprom_read_buffer@i:	
  6577                           ; 1 bytes @ 0x8
  6578                           
  6579  0028                     led_set_mode@m:	
  6580                           ; 1 bytes @ 0x8
  6581                           
  6582  0028                     ___lwdiv@counter:	
  6583                           ; 1 bytes @ 0x8
  6584                           
  6585  0028                     memset@p:	
  6586                           ; 1 bytes @ 0x8
  6587                           
  6588                           
  6589                           ; 2 bytes @ 0x8
  6590  0028                     	ds	1
  6591  0029                     ??_led_set_custom:	
  6592  0029                     ??_ble_send_cmd:	
  6593                           ; 1 bytes @ 0x9
  6594                           
  6595  0029                     eeprom_write_buffer@i:	
  6596                           ; 1 bytes @ 0x9
  6597                           
  6598  0029                     ble_send_data@xor:	
  6599                           ; 1 bytes @ 0x9
  6600                           
  6601  0029                     led_set_bright@i:	
  6602                           ; 1 bytes @ 0x9
  6603                           
  6604                           
  6605                           ; 1 bytes @ 0x9
  6606  0029                     	ds	1
  6607  002A                     ??_led_para_default:	
  6608  002A                     ??_led_save_para:	
  6609                           ; 1 bytes @ 0xA
  6610                           
  6611  002A                     ??___lmul:	
  6612                           ; 1 bytes @ 0xA
  6613                           
  6614  002A                     ble_send_data@len:	
  6615                           ; 1 bytes @ 0xA
  6616                           
  6617  002A                     led_set_cycle@len:	
  6618                           ; 1 bytes @ 0xA
  6619                           
  6620  002A                     ___lmul@product:	
  6621                           ; 1 bytes @ 0xA
  6622                           
  6623  002A                     ble_send_cmd@ack:	
  6624                           ; 4 bytes @ 0xA
  6625                           
  6626                           
  6627                           ; 8 bytes @ 0xA
  6628  002A                     	ds	1
  6629  002B                     ?_led_increase:	
  6630  002B                     ?_led_decrease:	
  6631                           ; 1 bytes @ 0xB
  6632                           
  6633  002B                     ble_send_data@i:	
  6634                           ; 1 bytes @ 0xB
  6635                           
  6636  002B                     led_set_cycle@pbuf:	
  6637                           ; 1 bytes @ 0xB
  6638                           
  6639  002B                     led_increase@delt:	
  6640                           ; 1 bytes @ 0xB
  6641                           
  6642  002B                     led_decrease@delt:	
  6643                           ; 1 bytes @ 0xB
  6644                           
  6645                           
  6646                           ; 1 bytes @ 0xB
  6647  002B                     	ds	1
  6648  002C                     ??_led_increase:	
  6649  002C                     ??_led_decrease:	
  6650                           ; 1 bytes @ 0xC
  6651                           
  6652  002C                     led_set_cycle@i:	
  6653                           ; 1 bytes @ 0xC
  6654                           
  6655  002C                     ble_send_data@p:	
  6656                           ; 1 bytes @ 0xC
  6657                           
  6658                           
  6659                           ; 2 bytes @ 0xC
  6660  002C                     	ds	1
  6661  002D                     led_set_pro@len:	
  6662                           
  6663                           ; 1 bytes @ 0xD
  6664  002D                     	ds	1
  6665  002E                     ?___lldiv:	
  6666  002E                     led_set_pro@pbuf:	
  6667                           ; 4 bytes @ 0xE
  6668                           
  6669  002E                     ___lldiv@divisor:	
  6670                           ; 1 bytes @ 0xE
  6671                           
  6672                           
  6673                           ; 4 bytes @ 0xE
  6674  002E                     	ds	1
  6675  002F                     led_set_pro@i:	
  6676                           
  6677                           ; 1 bytes @ 0xF
  6678  002F                     	ds	1
  6679  0030                     led_increase@chn:	
  6680  0030                     led_decrease@chn:	
  6681                           ; 1 bytes @ 0x10
  6682                           
  6683                           
  6684                           ; 1 bytes @ 0x10
  6685  0030                     	ds	2
  6686  0032                     ble_send_cmd@len:	
  6687  0032                     led_para_default@i:	
  6688                           ; 1 bytes @ 0x12
  6689                           
  6690  0032                     ___lldiv@dividend:	
  6691                           ; 1 bytes @ 0x12
  6692                           
  6693                           
  6694                           ; 4 bytes @ 0x12
  6695  0032                     	ds	1
  6696  0033                     ble_send_cmd@cnt:	
  6697  0033                     led_para_default@j:	
  6698                           ; 1 bytes @ 0x13
  6699                           
  6700                           
  6701                           ; 1 bytes @ 0x13
  6702  0033                     	ds	1
  6703  0034                     ble_send_cmd@rev:	
  6704  0034                     led_para_default@i_1200:	
  6705                           ; 1 bytes @ 0x14
  6706                           
  6707                           
  6708                           ; 1 bytes @ 0x14
  6709  0034                     	ds	1
  6710  0035                     ble_send_cmd@idx:	
  6711  0035                     led_para_default@i_1207:	
  6712                           ; 1 bytes @ 0x15
  6713                           
  6714                           
  6715                           ; 1 bytes @ 0x15
  6716  0035                     	ds	1
  6717  0036                     ??_ble_check_devid:	
  6718  0036                     ??_led_para_init:	
  6719                           ; 1 bytes @ 0x16
  6720                           
  6721  0036                     ??___lldiv:	
  6722                           ; 1 bytes @ 0x16
  6723                           
  6724  0036                     led_set_custom@idx:	
  6725                           ; 1 bytes @ 0x16
  6726                           
  6727  0036                     ___lldiv@quotient:	
  6728                           ; 1 bytes @ 0x16
  6729                           
  6730                           
  6731                           ; 4 bytes @ 0x16
  6732  0036                     	ds	1
  6733  0037                     led_set_custom@i:	
  6734  0037                     ble_check_devid@dev:	
  6735                           ; 1 bytes @ 0x17
  6736                           
  6737                           
  6738                           ; 17 bytes @ 0x17
  6739  0037                     	ds	1
  6740  0038                     ??_ble_decode:	
  6741                           
  6742                           ; 1 bytes @ 0x18
  6743  0038                     	ds	2
  6744  003A                     ??_ble_process:	
  6745  003A                     ___lldiv@counter:	
  6746                           ; 1 bytes @ 0x1A
  6747                           
  6748                           
  6749                           ; 1 bytes @ 0x1A
  6750  003A                     	ds	1
  6751  003B                     ?_led_calc_bright:	
  6752  003B                     led_calc_bright@ebrt:	
  6753                           ; 2 bytes @ 0x1B
  6754                           
  6755                           
  6756                           ; 1 bytes @ 0x1B
  6757  003B                     	ds	1
  6758  003C                     led_calc_bright@duration:	
  6759                           
  6760                           ; 2 bytes @ 0x1C
  6761  003C                     	ds	2
  6762  003E                     led_para_init@j:	
  6763  003E                     led_calc_bright@dt:	
  6764                           ; 1 bytes @ 0x1E
  6765                           
  6766                           
  6767                           ; 4 bytes @ 0x1E
  6768  003E                     	ds	1
  6769  003F                     led_para_init@i:	
  6770                           
  6771                           ; 1 bytes @ 0x1F
  6772  003F                     	ds	1
  6773  0040                     ??_led_init:	
  6774                           
  6775                           ; 1 bytes @ 0x20
  6776  0040                     	ds	2
  6777  0042                     ??_led_calc_bright:	
  6778  0042                     led_calc_bright@result:	
  6779                           ; 1 bytes @ 0x22
  6780                           
  6781                           
  6782                           ; 2 bytes @ 0x22
  6783  0042                     	ds	2
  6784  0044                     led_calc_bright@vs:	
  6785                           
  6786                           ; 2 bytes @ 0x24
  6787  0044                     	ds	2
  6788  0046                     led_calc_bright@period:	
  6789                           
  6790                           ; 2 bytes @ 0x26
  6791  0046                     	ds	2
  6792  0048                     led_calc_bright@dbrt:	
  6793  0048                     ble_check_devid@cnt:	
  6794                           ; 1 bytes @ 0x28
  6795                           
  6796                           
  6797                           ; 2 bytes @ 0x28
  6798  0048                     	ds	1
  6799  0049                     led_calc_bright@sbrt:	
  6800                           
  6801                           ; 1 bytes @ 0x29
  6802  0049                     	ds	1
  6803  004A                     ?_led_auto_process:	
  6804  004A                     ?_led_pro_process:	
  6805                           ; 1 bytes @ 0x2A
  6806                           
  6807  004A                     ble_check_devid@len:	
  6808                           ; 1 bytes @ 0x2A
  6809                           
  6810  004A                     led_auto_process@ct:	
  6811                           ; 1 bytes @ 0x2A
  6812                           
  6813  004A                     led_pro_process@ct:	
  6814                           ; 2 bytes @ 0x2A
  6815                           
  6816                           
  6817                           ; 2 bytes @ 0x2A
  6818  004A                     	ds	1
  6819  004B                     ble_check_devid@rev:	
  6820                           
  6821                           ; 1 bytes @ 0x2B
  6822  004B                     	ds	1
  6823  004C                     ble_check_devid@idx:	
  6824  004C                     led_auto_process@sec:	
  6825                           ; 1 bytes @ 0x2C
  6826                           
  6827  004C                     led_pro_process@sec:	
  6828                           ; 1 bytes @ 0x2C
  6829                           
  6830                           
  6831                           ; 1 bytes @ 0x2C
  6832  004C                     	ds	1
  6833  004D                     ??_ble_init:	
  6834  004D                     ??_led_auto_process:	
  6835                           ; 1 bytes @ 0x2D
  6836                           
  6837  004D                     ??_led_pro_process:	
  6838                           ; 1 bytes @ 0x2D
  6839                           
  6840                           
  6841                           ; 1 bytes @ 0x2D
  6842  004D                     	ds	8
  6843  0055                     ??_led_second_cb:	
  6844  0055                     ??_main:	
  6845                           ; 1 bytes @ 0x35
  6846                           
  6847                           
  6848                           	psect	text2
  6849  07F5                     __ptext2:	
  6850 ;; *************** function _rtc_init *****************
  6851 ;; Defined at:
  6852 ;;		line 41 in file "src/app_rtc.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;		None
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;		None
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  1    wreg      void 
  6859 ;; Registers used:
  6860 ;;		status,2
  6861 ;; Tracked objects:
  6862 ;;		On entry : 1F/2
  6863 ;;		On exit  : 1F/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;Total ram usage:        0 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:    9
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_main
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           
  6881                           ;psect for function _rtc_init
  6882  07F5                     _rtc_init:	
  6883                           
  6884                           ;app_rtc.c: 43: m_current_time.year = 0;
  6885                           
  6886                           ;incstack = 0
  6887                           ; Regs used in _rtc_init: [status,2]
  6888  07F5  0020               	movlb	0	; select bank0
  6889  07F6  01D5               	clrf	_m_current_time
  6890                           
  6891                           ;app_rtc.c: 44: m_current_time.month = 1;
  6892  07F7  01D6               	clrf	_m_current_time+1
  6893  07F8  0AD6               	incf	_m_current_time+1,f
  6894                           
  6895                           ;app_rtc.c: 45: m_current_time.day = 1;
  6896  07F9  01D7               	clrf	_m_current_time+2
  6897  07FA  0AD7               	incf	_m_current_time+2,f
  6898                           
  6899                           ;app_rtc.c: 46: m_current_time.week = 0;
  6900  07FB  01D8               	clrf	_m_current_time+3
  6901                           
  6902                           ;app_rtc.c: 47: m_current_time.hour = 0;
  6903  07FC  01D9               	clrf	_m_current_time+4
  6904                           
  6905                           ;app_rtc.c: 48: m_current_time.minute = 0;
  6906  07FD  01DA               	clrf	_m_current_time+5
  6907                           
  6908                           ;app_rtc.c: 49: m_current_time.second = 0;
  6909  07FE  01DB               	clrf	_m_current_time+6
  6910  07FF  0008               	return
  6911  0800                     __end_of_rtc_init:	
  6912                           
  6913                           	psect	text3
  6914  14B7                     __ptext3:	
  6915 ;; *************** function _led_second_cb *****************
  6916 ;; Defined at:
  6917 ;;		line 1939 in file "src/app_led.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;		None
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;  ct              2    1[BANK2 ] unsigned int 
  6922 ;;  sec             1    0[BANK2 ] unsigned char 
  6923 ;; Return value:  Size  Location     Type
  6924 ;;                  1    wreg      void 
  6925 ;; Registers used:
  6926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6927 ;; Tracked objects:
  6928 ;;		On entry : 1F/0
  6929 ;;		On exit  : 1F/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6933 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  6934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6935 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  6936 ;;Total ram usage:        3 bytes
  6937 ;; Hardware stack levels used:    1
  6938 ;; Hardware stack levels required when called:   12
  6939 ;; This function calls:
  6940 ;;		___wmul
  6941 ;;		_led_auto_process
  6942 ;;		_led_find_device
  6943 ;;		_led_preview
  6944 ;;		_led_pro_process
  6945 ;;		_led_save_para
  6946 ;;		_rtc_get_hour
  6947 ;;		_rtc_get_minute
  6948 ;;		_rtc_get_second
  6949 ;; This function is called by:
  6950 ;;		_main
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           
  6955                           ;psect for function _led_second_cb
  6956  14B7                     _led_second_cb:	
  6957                           
  6958                           ;app_led.c: 1941: uint16_t ct = rtc_get_hour()*60u + rtc_get_minute();
  6959                           
  6960                           ;incstack = 0
  6961                           ; Regs used in _led_second_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6962  14B7  26EA  3194         	fcall	_rtc_get_hour
  6963  14B9  00A2               	movwf	___wmul@multiplier
  6964  14BA  303C               	movlw	60
  6965  14BB  01A3               	clrf	___wmul@multiplier+1
  6966  14BC  00A4               	movwf	___wmul@multiplicand
  6967  14BD  01A5               	clrf	___wmul@multiplicand+1
  6968  14BE  26BE  3194         	fcall	___wmul
  6969  14C0  0823               	movf	?___wmul+1,w
  6970  14C1  0022               	movlb	2	; select bank2
  6971  14C2  00DE               	movwf	(led_second_cb@ct+1)^(0+256)
  6972  14C3  0020               	movlb	0	; select bank0
  6973  14C4  0822               	movf	?___wmul,w
  6974  14C5  0022               	movlb	2	; select bank2
  6975  14C6  00DD               	movwf	led_second_cb@ct^(0+256)
  6976  14C7  26EC  3194         	fcall	_rtc_get_minute
  6977  14C9  0022               	movlb	2	; select bank2
  6978  14CA  07DD               	addwf	led_second_cb@ct^(0+256),f
  6979  14CB  1803               	skipnc
  6980  14CC  0ADE               	incf	(led_second_cb@ct+1)^(0+256),f
  6981                           
  6982                           ;app_led.c: 1942: uint8_t sec = rtc_get_second();
  6983  14CD  26EF  3194         	fcall	_rtc_get_second
  6984  14CF  0022               	movlb	2	; select bank2
  6985  14D0  00DC               	movwf	led_second_cb@sec^(0+256)
  6986                           
  6987                           ;app_led.c: 1943: if(led_run_para.mFind)
  6988  14D1  0020               	movlb	0	; select bank0
  6989  14D2  1C5C               	btfss	_led_run_para,0
  6990  14D3  2CD7               	goto	l6729
  6991                           
  6992                           ;app_led.c: 1944: {
  6993                           ;app_led.c: 1945: led_find_device();
  6994  14D4  26D3  3194         	fcall	_led_find_device
  6995                           
  6996                           ;app_led.c: 1946: }
  6997  14D6  2D0C               	goto	l6743
  6998  14D7                     l6729:	
  6999                           
  7000                           ;app_led.c: 1947: else
  7001                           ;app_led.c: 1948: {
  7002                           ;app_led.c: 1950: if(m_led_para.mState == 3)
  7003  14D7  318B  2389  3194   	fcall	PL14	;call to abstracted procedure
  7004  14DA  3A03               	xorlw	3
  7005  14DB  1D03               	skipz
  7006  14DC  2D0C               	goto	l6743
  7007                           
  7008                           ;app_led.c: 1951: {
  7009                           ;app_led.c: 1953: if(led_run_para.mPrev)
  7010  14DD  1CDC               	btfss	_led_run_para,1
  7011  14DE  2CE2               	goto	l6735
  7012                           
  7013                           ;app_led.c: 1954: {
  7014                           ;app_led.c: 1955: led_preview();
  7015  14DF  26E3  3194         	fcall	_led_preview
  7016                           
  7017                           ;app_led.c: 1956: }
  7018  14E1  2D0C               	goto	l6743
  7019  14E2                     l6735:	
  7020                           
  7021                           ;app_led.c: 1973: else if(m_led_para.ble_para.mMode == 1)
  7022  14E2  318E  26AD  3194   	fcall	PL10	;call to abstracted procedure
  7023  14E5  3A01               	xorlw	1
  7024  14E6  1D03               	skipz
  7025  14E7  2CF8               	goto	l6739
  7026                           
  7027                           ;app_led.c: 1974: {
  7028                           ;app_led.c: 1975: led_auto_process(ct, sec);
  7029  14E8  0022               	movlb	2	; select bank2
  7030  14E9  085E               	movf	(led_second_cb@ct+1)^(0+256),w
  7031  14EA  0020               	movlb	0	; select bank0
  7032  14EB  00CB               	movwf	led_auto_process@ct+1
  7033  14EC  0022               	movlb	2	; select bank2
  7034  14ED  085D               	movf	led_second_cb@ct^(0+256),w
  7035  14EE  0020               	movlb	0	; select bank0
  7036  14EF  00CA               	movwf	led_auto_process@ct
  7037  14F0  0022               	movlb	2	; select bank2
  7038  14F1  085C               	movf	led_second_cb@sec^(0+256),w
  7039  14F2  0020               	movlb	0	; select bank0
  7040  14F3  00CC               	movwf	led_auto_process@sec
  7041  14F4  3191  21BB  3194   	fcall	_led_auto_process
  7042                           
  7043                           ;app_led.c: 1976: }
  7044  14F7  2D0C               	goto	l6743
  7045  14F8                     l6739:	
  7046                           
  7047                           ;app_led.c: 1977: else if(m_led_para.ble_para.mMode == 2)
  7048  14F8  318E  26AD  3194   	fcall	PL10	;call to abstracted procedure
  7049  14FB  3A02               	xorlw	2
  7050  14FC  1D03               	skipz
  7051  14FD  2D0C               	goto	l6743
  7052                           
  7053                           ;app_led.c: 1978: {
  7054                           ;app_led.c: 1979: led_pro_process(ct, sec);
  7055  14FE  0022               	movlb	2	; select bank2
  7056  14FF  085E               	movf	(led_second_cb@ct+1)^(0+256),w
  7057  1500  0020               	movlb	0	; select bank0
  7058  1501  00CB               	movwf	led_pro_process@ct+1
  7059  1502  0022               	movlb	2	; select bank2
  7060  1503  085D               	movf	led_second_cb@ct^(0+256),w
  7061  1504  0020               	movlb	0	; select bank0
  7062  1505  00CA               	movwf	led_pro_process@ct
  7063  1506  0022               	movlb	2	; select bank2
  7064  1507  085C               	movf	led_second_cb@sec^(0+256),w
  7065  1508  0020               	movlb	0	; select bank0
  7066  1509  00CC               	movwf	led_pro_process@sec
  7067  150A  2510  3194         	fcall	_led_pro_process
  7068  150C                     l6743:	
  7069                           
  7070                           ;app_led.c: 1980: }
  7071                           ;app_led.c: 1983: }
  7072                           ;app_led.c: 1985: }
  7073                           ;app_led.c: 1987: if(led_run_para.mSave)
  7074  150C  0020               	movlb	0	; select bank0
  7075  150D  1D5C               	btfss	_led_run_para,2
  7076  150E  0008               	return
  7077                           
  7078                           ;app_led.c: 1988: {
  7079                           ;app_led.c: 1989: led_save_para();
  7080  150F  2F08               	ljmp	l6695
  7081  1510                     __end_of_led_second_cb:	
  7082  1510                     __ptext10:	
  7083 ;; *************** function _led_pro_process *****************
  7084 ;; Defined at:
  7085 ;;		line 594 in file "src/app_led.c"
  7086 ;; Parameters:    Size  Location     Type
  7087 ;;  ct              2   42[BANK0 ] unsigned int 
  7088 ;;  sec             1   44[BANK0 ] unsigned char 
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;  tmp             1   10[BANK1 ] unsigned char 
  7091 ;;  p2              2   24[BANK1 ] PTR struct .
  7092 ;;		 -> m_led_para.ble_para.pro_para.points(70), m_led_para.ble_para.pro_para(71), 
  7093 ;;  p1              2   22[BANK1 ] PTR struct .
  7094 ;;		 -> m_led_para.ble_para.pro_para.points(70), m_led_para.ble_para.pro_para(71), 
  7095 ;;  t2              2   13[BANK1 ] unsigned int 
  7096 ;;  t1              2   11[BANK1 ] unsigned int 
  7097 ;;  index          10    0[BANK1 ] unsigned char [10]
  7098 ;;  dt              4   15[BANK1 ] unsigned long 
  7099 ;;  st              2   38[BANK1 ] unsigned int 
  7100 ;;  ep              2   35[BANK1 ] PTR struct .
  7101 ;;		 -> m_led_para.ble_para.pro_para.points(70), m_led_para.ble_para.pro_para(71), 
  7102 ;;  sp              2   33[BANK1 ] PTR struct .
  7103 ;;		 -> m_led_para.ble_para.pro_para.points(70), m_led_para.ble_para.pro_para(71), 
  7104 ;;  et              2   31[BANK1 ] unsigned int 
  7105 ;;  end             2   28[BANK1 ] unsigned int 
  7106 ;;  start           2   26[BANK1 ] unsigned int 
  7107 ;;  duration        2   20[BANK1 ] unsigned int 
  7108 ;;  i               1   40[BANK1 ] unsigned char 
  7109 ;;  j               1   37[BANK1 ] unsigned char 
  7110 ;;  point_count     1   30[BANK1 ] unsigned char 
  7111 ;;  flag            1   19[BANK1 ] unsigned char 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1    wreg      void 
  7114 ;; Registers used:
  7115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7116 ;; Tracked objects:
  7117 ;;		On entry : 1F/0
  7118 ;;		On exit  : 1F/1
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7121 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7122 ;;      Locals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0
  7123 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7124 ;;      Totals:         0      11      41       0       0       0       0       0       0       0       0       0       
      +0       0
  7125 ;;Total ram usage:       52 bytes
  7126 ;; Hardware stack levels used:    1
  7127 ;; Hardware stack levels required when called:   11
  7128 ;; This function calls:
  7129 ;;		___wmul
  7130 ;;		_led_calc_bright
  7131 ;; This function is called by:
  7132 ;;		_led_second_cb
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           
  7137                           ;psect for function _led_pro_process
  7138  1510                     _led_pro_process:	
  7139                           
  7140                           ;app_led.c: 596: if(m_led_para.ble_para.pro_para.point_count < 4)
  7141                           
  7142                           ;incstack = 0
  7143                           ; Regs used in _led_pro_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7144  1510  318F  273E  3194   	fcall	PL116	;call to abstracted procedure
  7145                           
  7146                           ;app_led.c: 597: {
  7147                           ;app_led.c: 598: m_led_para.ble_para.pro_para.point_count = 4;
  7148  1513  1803               	skipnc
  7149  1514  2D17               	goto	L3
  7150  1515  3004               	movlw	4
  7151  1516  2D1E               	goto	L1
  7152  1517                     L3:	
  7153                           ;app_led.c: 600: else if(m_led_para.ble_para.pro_para.point_count > 10)
  7154                           
  7155                           ;app_led.c: 599: }
  7156                           
  7157  1517  300B               	movlw	11
  7158  1518  0201               	subwf	1,w
  7159                           
  7160                           ;app_led.c: 601: {
  7161                           ;app_led.c: 602: m_led_para.ble_para.pro_para.point_count = 10;
  7162  1519  27F1  3194         	fcall	PL152	;call to abstracted procedure
  7163  151B  1C03               	skipc
  7164  151C  2D21               	goto	L4
  7165  151D  300A               	movlw	10
  7166  151E                     L1:	
  7167  151E  0081               	movwf	1
  7168                           
  7169                           ;app_led.c: 603: }
  7170                           ;app_led.c: 604: uint8_t point_count = m_led_para.ble_para.pro_para.point_count;
  7171  151F  27F1  3194         	fcall	PL152	;call to abstracted procedure
  7172  1521                     L4:	
  7173  1521  0801               	movf	1,w
  7174  1522  0021               	movlb	1	; select bank1
  7175  1523  00BE               	movwf	led_pro_process@point_count^(0+128)
  7176                           
  7177                           ;app_led.c: 605: uint8_t i, j;
  7178                           ;app_led.c: 606: uint8_t index[10];
  7179                           ;app_led.c: 607: for(i = 0; i < 10; i++)
  7180  1524  01C8               	clrf	led_pro_process@i^(0+128)
  7181  1525                     l6547:	
  7182                           
  7183                           ;app_led.c: 608: {
  7184                           ;app_led.c: 609: index[i] = i;
  7185  1525  0848               	movf	led_pro_process@i^(0+128),w
  7186  1526  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  7187  1527  0086               	movwf	6
  7188  1528  0187               	clrf	7
  7189  1529  0848               	movf	led_pro_process@i^(0+128),w
  7190  152A  0081               	movwf	1
  7191  152B  300A               	movlw	10
  7192  152C  0AC8               	incf	led_pro_process@i^(0+128),f
  7193  152D  0248               	subwf	led_pro_process@i^(0+128),w
  7194  152E  1C03               	skipc
  7195  152F  2D25               	goto	l6547
  7196                           
  7197                           ;app_led.c: 610: }
  7198                           ;app_led.c: 611: for(i = point_count - 1; i > 0; i--)
  7199  1530  083E               	movf	led_pro_process@point_count^(0+128),w
  7200  1531  3EFF               	addlw	255
  7201  1532  00C8               	movwf	led_pro_process@i^(0+128)
  7202  1533  0848               	movf	led_pro_process@i^(0+128),w
  7203  1534  1903               	btfsc	3,2
  7204  1535  2DB2               	goto	l6583
  7205  1536                     l6557:	
  7206                           
  7207                           ;app_led.c: 612: {
  7208                           ;app_led.c: 613: for(j = 0; j < i; j++)
  7209  1536  01C5               	clrf	led_pro_process@j^(0+128)
  7210  1537                     l6577:	
  7211  1537  0848               	movf	led_pro_process@i^(0+128),w
  7212  1538  0245               	subwf	led_pro_process@j^(0+128),w
  7213  1539  1803               	btfsc	3,0
  7214  153A  2DB0               	goto	l6579
  7215                           
  7216                           ;app_led.c: 614: {
  7217                           ;app_led.c: 615: timer_bright_point_t *p1 = &m_led_para.ble_para.pro_para.points[index[j
      +                          ]];
  7218  153B  3023               	movlw	35
  7219  153C  00B7               	movwf	(led_pro_process@p1+1)^(0+128)
  7220  153D  30A9               	movlw	169
  7221  153E  00B6               	movwf	led_pro_process@p1^(0+128)
  7222  153F  0845               	movf	led_pro_process@j^(0+128),w
  7223  1540  27DB  3194         	fcall	PL66	;call to abstracted procedure
  7224  1542  27BB  3194         	fcall	PL44	;call to abstracted procedure
  7225  1544  26BE  3194         	fcall	___wmul
  7226  1546  2770  3194         	fcall	PL18	;call to abstracted procedure
  7227  1548  07B6               	addwf	led_pro_process@p1^(0+128),f
  7228  1549  0020               	movlb	0	; select bank0
  7229  154A  084E               	movf	??_led_pro_process+1,w
  7230  154B  0021               	movlb	1	; select bank1
  7231  154C  3DB7               	addwfc	(led_pro_process@p1+1)^(0+128),f
  7232                           
  7233                           ;app_led.c: 616: timer_bright_point_t *p2 = &m_led_para.ble_para.pro_para.points[index[j
      +                          +1]];
  7234  154D  3023               	movlw	35
  7235  154E  00B9               	movwf	(led_pro_process@p2+1)^(0+128)
  7236  154F  30A9               	movlw	169
  7237  1550  00B8               	movwf	led_pro_process@p2^(0+128)
  7238  1551  0845               	movf	led_pro_process@j^(0+128),w
  7239  1552  3E01               	addlw	1
  7240  1553  27DB  3194         	fcall	PL66	;call to abstracted procedure
  7241  1555  27BB  3194         	fcall	PL44	;call to abstracted procedure
  7242  1557  26BE  3194         	fcall	___wmul
  7243  1559  2770  3194         	fcall	PL18	;call to abstracted procedure
  7244  155B  07B8               	addwf	led_pro_process@p2^(0+128),f
  7245  155C  0020               	movlb	0	; select bank0
  7246  155D  084E               	movf	??_led_pro_process+1,w
  7247  155E  0021               	movlb	1	; select bank1
  7248  155F  3DB9               	addwfc	(led_pro_process@p2+1)^(0+128),f
  7249                           
  7250                           ;app_led.c: 617: uint16_t t1 = p1->hour*60u + p1->minuite;
  7251  1560  0836               	movf	led_pro_process@p1^(0+128),w
  7252  1561  0086               	movwf	6
  7253  1562  0837               	movf	(led_pro_process@p1+1)^(0+128),w
  7254  1563  0087               	movwf	7
  7255  1564  2753  3194         	fcall	PL8	;call to abstracted procedure
  7256  1566  26BE  3194         	fcall	___wmul
  7257  1568  0823               	movf	?___wmul+1,w
  7258  1569  0021               	movlb	1	; select bank1
  7259  156A  00AC               	movwf	(led_pro_process@t1+1)^(0+128)
  7260  156B  0020               	movlb	0	; select bank0
  7261  156C  0822               	movf	?___wmul,w
  7262  156D  0021               	movlb	1	; select bank1
  7263  156E  00AB               	movwf	led_pro_process@t1^(0+128)
  7264  156F  0836               	movf	led_pro_process@p1^(0+128),w
  7265  1570  0086               	movwf	6
  7266  1571  0837               	movf	(led_pro_process@p1+1)^(0+128),w
  7267  1572  0087               	movwf	7
  7268  1573  3141               	addfsr 1,1
  7269  1574  0801               	movf	1,w
  7270  1575  07AB               	addwf	led_pro_process@t1^(0+128),f
  7271  1576  1803               	skipnc
  7272  1577  0AAC               	incf	(led_pro_process@t1+1)^(0+128),f
  7273                           
  7274                           ;app_led.c: 618: uint16_t t2 = p2->hour*60u + p2->minuite;
  7275  1578  0838               	movf	led_pro_process@p2^(0+128),w
  7276  1579  0086               	movwf	6
  7277  157A  0839               	movf	(led_pro_process@p2+1)^(0+128),w
  7278  157B  0087               	movwf	7
  7279  157C  2753  3194         	fcall	PL8	;call to abstracted procedure
  7280  157E  26BE  3194         	fcall	___wmul
  7281  1580  0823               	movf	?___wmul+1,w
  7282  1581  0021               	movlb	1	; select bank1
  7283  1582  00AE               	movwf	(led_pro_process@t2+1)^(0+128)
  7284  1583  0020               	movlb	0	; select bank0
  7285  1584  0822               	movf	?___wmul,w
  7286  1585  0021               	movlb	1	; select bank1
  7287  1586  00AD               	movwf	led_pro_process@t2^(0+128)
  7288  1587  0838               	movf	led_pro_process@p2^(0+128),w
  7289  1588  0086               	movwf	6
  7290  1589  0839               	movf	(led_pro_process@p2+1)^(0+128),w
  7291  158A  0087               	movwf	7
  7292  158B  3141               	addfsr 1,1
  7293  158C  0801               	movf	1,w
  7294  158D  07AD               	addwf	led_pro_process@t2^(0+128),f
  7295  158E  1803               	skipnc
  7296  158F  0AAE               	incf	(led_pro_process@t2+1)^(0+128),f
  7297                           
  7298                           ;app_led.c: 619: if(t1 > t2)
  7299  1590  082C               	movf	(led_pro_process@t1+1)^(0+128),w
  7300  1591  022E               	subwf	(led_pro_process@t2+1)^(0+128),w
  7301  1592  1D03               	skipz
  7302  1593  2D96               	goto	u6485
  7303  1594  082B               	movf	led_pro_process@t1^(0+128),w
  7304  1595  022D               	subwf	led_pro_process@t2^(0+128),w
  7305  1596                     u6485:	
  7306  1596  1803               	skipnc
  7307  1597  2DAE               	goto	l6575
  7308                           
  7309                           ;app_led.c: 620: {
  7310                           ;app_led.c: 621: uint8_t tmp = index[j];
  7311  1598  0845               	movf	led_pro_process@j^(0+128),w
  7312  1599  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  7313  159A  0086               	movwf	6
  7314  159B  0187               	clrf	7
  7315  159C  0801               	movf	1,w
  7316  159D  00AA               	movwf	led_pro_process@tmp^(0+128)
  7317                           
  7318                           ;app_led.c: 622: index[j] = index[j+1];
  7319  159E  0845               	movf	led_pro_process@j^(0+128),w
  7320  159F  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  7321  15A0  0086               	movwf	6
  7322  15A1  0845               	movf	led_pro_process@j^(0+128),w
  7323  15A2  3E01               	addlw	1
  7324  15A3  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  7325  15A4  0084               	movwf	4
  7326  15A5  0185               	clrf	5
  7327  15A6  0800               	movf	0,w
  7328  15A7  0081               	movwf	1
  7329                           
  7330                           ;app_led.c: 623: index[j+1] = tmp;
  7331  15A8  0845               	movf	led_pro_process@j^(0+128),w
  7332  15A9  3E01               	addlw	1
  7333  15AA  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  7334  15AB  0086               	movwf	6
  7335  15AC  082A               	movf	led_pro_process@tmp^(0+128),w
  7336  15AD  0081               	movwf	1
  7337  15AE                     l6575:	
  7338  15AE  0AC5               	incf	led_pro_process@j^(0+128),f
  7339  15AF  2D37               	goto	l6577
  7340  15B0                     l6579:	
  7341  15B0  0BC8               	decfsz	led_pro_process@i^(0+128),f
  7342  15B1  2D36               	goto	l6557
  7343  15B2                     l6583:	
  7344                           
  7345                           ;app_led.c: 624: }
  7346                           ;app_led.c: 625: }
  7347                           ;app_led.c: 626: }
  7348                           ;app_led.c: 627: uint16_t start = index[point_count-1];
  7349  15B2  083E               	movf	led_pro_process@point_count^(0+128),w
  7350  15B3  3EFF               	addlw	255
  7351  15B4  27EA  3194         	fcall	PL112	;call to abstracted procedure
  7352                           
  7353                           ;app_led.c: 628: uint16_t end = index[0];
  7354  15B6  0820               	movf	led_pro_process@index^(0+128),w
  7355                           
  7356                           ;app_led.c: 629: timer_bright_point_t *sp = &m_led_para.ble_para.pro_para.points[start];
  7357  15B7  27A0  3194         	fcall	PL40	;call to abstracted procedure
  7358  15B9  26BE  3194         	fcall	___wmul
  7359  15BB  2770  3194         	fcall	PL18	;call to abstracted procedure
  7360                           
  7361                           ;app_led.c: 630: timer_bright_point_t *ep = &m_led_para.ble_para.pro_para.points[end];
  7362  15BD  2779  3194         	fcall	PL30	;call to abstracted procedure
  7363  15BF  26BE  3194         	fcall	___wmul
  7364  15C1  2770  3194         	fcall	PL18	;call to abstracted procedure
  7365                           
  7366                           ;app_led.c: 631: uint16_t st = sp->hour * 60u + sp->minuite;
  7367  15C3  27B1  3194         	fcall	PL42	;call to abstracted procedure
  7368  15C5  2753  3194         	fcall	PL8	;call to abstracted procedure
  7369  15C7  26BE  3194         	fcall	___wmul
  7370                           
  7371                           ;app_led.c: 632: uint16_t et = ep->hour * 60u + ep->minuite;
  7372  15C9  275B  3194         	fcall	PL16	;call to abstracted procedure
  7373  15CB  2753  3194         	fcall	PL8	;call to abstracted procedure
  7374  15CD  26BE  3194         	fcall	___wmul
  7375  15CF  27C1  3194         	fcall	PL48	;call to abstracted procedure
  7376  15D1  1803               	skipnc
  7377  15D2  0AC0               	incf	(led_pro_process@et+1)^(0+128),f
  7378                           
  7379                           ;app_led.c: 633: uint16_t duration = 1440u - st + et;
  7380  15D3  27E1  3194         	fcall	PL88	;call to abstracted procedure
  7381  15D5  30A0               	movlw	160
  7382  15D6  07B4               	addwf	led_pro_process@duration^(0+128),f
  7383  15D7  3005               	movlw	5
  7384  15D8  3DB5               	addwfc	(led_pro_process@duration+1)^(0+128),f
  7385                           
  7386                           ;app_led.c: 634: uint32_t dt;
  7387                           ;app_led.c: 635: bool flag = 0;
  7388  15D9  01B3               	clrf	led_pro_process@flag^(0+128)
  7389                           
  7390                           ;app_led.c: 636: if(ct >= st)
  7391  15DA  0847               	movf	(led_pro_process@st+1)^(0+128),w
  7392  15DB  0020               	movlb	0	; select bank0
  7393  15DC  024B               	subwf	led_pro_process@ct+1,w
  7394  15DD  1D03               	skipz
  7395  15DE  2DE1               	goto	u6515
  7396  15DF  27F6  3194         	fcall	PL160	;call to abstracted procedure
  7397  15E1                     u6515:	
  7398  15E1  1C03               	skipc
  7399  15E2  2DFA               	goto	l6617
  7400  15E3                     l6613:	
  7401                           
  7402                           ;app_led.c: 637: {
  7403                           ;app_led.c: 638: dt = (ct-st)*60u + sec;
  7404  15E3  0020               	movlb	0	; select bank0
  7405  15E4  27D0  3194         	fcall	PL62	;call to abstracted procedure
  7406  15E6  26BE  3194         	fcall	___wmul
  7407  15E8  278D  3194         	fcall	PL34	;call to abstracted procedure
  7408  15EA  26BE  3194         	fcall	___wmul
  7409  15EC  0822               	movf	?___wmul,w
  7410  15ED  074F               	addwf	??_led_pro_process+2,w
  7411  15EE  0021               	movlb	1	; select bank1
  7412  15EF  00AF               	movwf	led_pro_process@dt^(0+128)
  7413  15F0  0020               	movlb	0	; select bank0
  7414  15F1  0823               	movf	?___wmul+1,w
  7415  15F2  3D50               	addwfc	??_led_pro_process+3,w
  7416  15F3                     L2:	
  7417  15F3  0021               	movlb	1	; select bank1
  7418  15F4  00B0               	movwf	(led_pro_process@dt+1)^(0+128)
  7419  15F5  01B1               	clrf	(led_pro_process@dt+2)^(0+128)
  7420  15F6  01B2               	clrf	(led_pro_process@dt+3)^(0+128)
  7421                           
  7422                           ;app_led.c: 639: flag = 1;
  7423  15F7  01B3               	clrf	led_pro_process@flag^(0+128)
  7424  15F8  0AB3               	incf	led_pro_process@flag^(0+128),f
  7425                           
  7426                           ;app_led.c: 640: }
  7427  15F9  2E6C               	goto	l6657
  7428  15FA                     l6617:	
  7429                           
  7430                           ;app_led.c: 641: else if(ct < et)
  7431  15FA  0021               	movlb	1	; select bank1
  7432  15FB  0840               	movf	(led_pro_process@et+1)^(0+128),w
  7433  15FC  0020               	movlb	0	; select bank0
  7434  15FD  024B               	subwf	led_pro_process@ct+1,w
  7435  15FE  1D03               	skipz
  7436  15FF  2E02               	goto	u6525
  7437  1600  27FB  3194         	fcall	PL164	;call to abstracted procedure
  7438  1602                     u6525:	
  7439  1602  1803               	skipnc
  7440  1603  2E1A               	goto	l6623
  7441                           
  7442                           ;app_led.c: 642: {
  7443                           ;app_led.c: 643: dt = (1440u-st+ct)*60u + sec;
  7444  1604  27D0  3194         	fcall	PL62	;call to abstracted procedure
  7445  1606  26BE  3194         	fcall	___wmul
  7446  1608  278D  3194         	fcall	PL34	;call to abstracted procedure
  7447  160A  26BE  3194         	fcall	___wmul
  7448  160C  0822               	movf	?___wmul,w
  7449  160D  074F               	addwf	??_led_pro_process+2,w
  7450  160E  00D1               	movwf	??_led_pro_process+4
  7451  160F  0823               	movf	?___wmul+1,w
  7452  1610  3D50               	addwfc	??_led_pro_process+3,w
  7453  1611  00D2               	movwf	??_led_pro_process+5
  7454  1612  0851               	movf	??_led_pro_process+4,w
  7455  1613  3E80               	addlw	128
  7456  1614  0021               	movlb	1	; select bank1
  7457  1615  00AF               	movwf	led_pro_process@dt^(0+128)
  7458  1616  3051               	movlw	81
  7459  1617  0020               	movlb	0	; select bank0
  7460  1618  3D52               	addwfc	??_led_pro_process+5,w
  7461  1619  2DF3               	goto	L2
  7462  161A                     l6623:	
  7463                           
  7464                           ;app_led.c: 646: else
  7465                           ;app_led.c: 647: {
  7466                           ;app_led.c: 648: for(i = 0; i < point_count-1; i++)
  7467  161A  0021               	movlb	1	; select bank1
  7468  161B  01C8               	clrf	led_pro_process@i^(0+128)
  7469  161C                     l6655:	
  7470  161C  083E               	movf	led_pro_process@point_count^(0+128),w
  7471  161D  3EFF               	addlw	255
  7472  161E  0020               	movlb	0	; select bank0
  7473  161F  00CD               	movwf	??_led_pro_process
  7474  1620  30FF               	movlw	255
  7475  1621  1803               	skipnc
  7476  1622  3000               	movlw	0
  7477  1623  00CE               	movwf	??_led_pro_process+1
  7478  1624  3A80               	xorlw	128
  7479  1625  3C80               	sublw	128
  7480  1626  1D03               	skipz
  7481  1627  2E2B               	goto	u6555
  7482  1628  084D               	movf	??_led_pro_process,w
  7483  1629  0021               	movlb	1	; select bank1
  7484  162A  0248               	subwf	led_pro_process@i^(0+128),w
  7485  162B                     u6555:	
  7486  162B  1803               	btfsc	3,0
  7487  162C  2E6C               	goto	l6657
  7488                           
  7489                           ;app_led.c: 649: {
  7490                           ;app_led.c: 650: start = index[i];
  7491  162D  0021               	movlb	1	; select bank1
  7492  162E  0848               	movf	led_pro_process@i^(0+128),w
  7493  162F  27EA  3194         	fcall	PL112	;call to abstracted procedure
  7494                           
  7495                           ;app_led.c: 651: end = index[i+1];
  7496  1631  0848               	movf	led_pro_process@i^(0+128),w
  7497  1632  3E01               	addlw	1
  7498  1633  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  7499  1634  0086               	movwf	6
  7500  1635  0801               	movf	1,w
  7501                           
  7502                           ;app_led.c: 652: sp = &m_led_para.ble_para.pro_para.points[start];
  7503  1636  27A0  3194         	fcall	PL40	;call to abstracted procedure
  7504  1638  26BE  3194         	fcall	___wmul
  7505  163A  2770  3194         	fcall	PL18	;call to abstracted procedure
  7506                           
  7507                           ;app_led.c: 653: ep = &m_led_para.ble_para.pro_para.points[end];
  7508  163C  2779  3194         	fcall	PL30	;call to abstracted procedure
  7509  163E  26BE  3194         	fcall	___wmul
  7510  1640  2770  3194         	fcall	PL18	;call to abstracted procedure
  7511                           
  7512                           ;app_led.c: 654: st = sp->hour*60u + sp->minuite;
  7513  1642  27B1  3194         	fcall	PL42	;call to abstracted procedure
  7514  1644  2753  3194         	fcall	PL8	;call to abstracted procedure
  7515  1646  26BE  3194         	fcall	___wmul
  7516                           
  7517                           ;app_led.c: 655: et = ep->hour*60u + ep->minuite;
  7518  1648  275B  3194         	fcall	PL16	;call to abstracted procedure
  7519  164A  2753  3194         	fcall	PL8	;call to abstracted procedure
  7520  164C  26BE  3194         	fcall	___wmul
  7521  164E  27C1  3194         	fcall	PL48	;call to abstracted procedure
  7522  1650  1803               	skipnc
  7523  1651  0AC0               	incf	(led_pro_process@et+1)^(0+128),f
  7524                           
  7525                           ;app_led.c: 656: if(ct >= st && ct < et)
  7526  1652  0847               	movf	(led_pro_process@st+1)^(0+128),w
  7527  1653  0020               	movlb	0	; select bank0
  7528  1654  024B               	subwf	led_pro_process@ct+1,w
  7529  1655  1D03               	skipz
  7530  1656  2E59               	goto	u6535
  7531  1657  27F6  3194         	fcall	PL160	;call to abstracted procedure
  7532  1659                     u6535:	
  7533  1659  1C03               	skipc
  7534  165A  2E69               	goto	l6653
  7535  165B  0021               	movlb	1	; select bank1
  7536  165C  0840               	movf	(led_pro_process@et+1)^(0+128),w
  7537  165D  0020               	movlb	0	; select bank0
  7538  165E  024B               	subwf	led_pro_process@ct+1,w
  7539  165F  1D03               	skipz
  7540  1660  2E63               	goto	u6545
  7541  1661  27FB  3194         	fcall	PL164	;call to abstracted procedure
  7542  1663                     u6545:	
  7543  1663  1803               	skipnc
  7544  1664  2E69               	goto	l6653
  7545                           
  7546                           ;app_led.c: 657: {
  7547                           ;app_led.c: 658: duration = et - st;
  7548  1665  0021               	movlb	1	; select bank1
  7549  1666  27E1  3194         	fcall	PL88	;call to abstracted procedure
  7550  1668  2DE3               	goto	l6613
  7551  1669                     l6653:	
  7552  1669  0021               	movlb	1	; select bank1
  7553  166A  0AC8               	incf	led_pro_process@i^(0+128),f
  7554  166B  2E1C               	goto	l6655
  7555  166C                     l6657:	
  7556                           
  7557                           ;app_led.c: 662: }
  7558                           ;app_led.c: 663: }
  7559                           ;app_led.c: 664: }
  7560                           ;app_led.c: 665: if(flag)
  7561  166C  0021               	movlb	1	; select bank1
  7562  166D  0833               	movf	led_pro_process@flag^(0+128),w
  7563  166E  1903               	btfsc	3,2
  7564  166F  0008               	return
  7565                           
  7566                           ;app_led.c: 666: {
  7567                           ;app_led.c: 667: for(i = 0; i < 5; i++)
  7568  1670  01C8               	clrf	led_pro_process@i^(0+128)
  7569  1671                     l6665:	
  7570                           
  7571                           ;app_led.c: 668: {
  7572                           ;app_led.c: 669: target_bright[i] = led_calc_bright(sp->bright[i], ep->bright[i], durati
      +                          on, dt);
  7573  1671  0848               	movf	led_pro_process@i^(0+128),w
  7574  1672  0020               	movlb	0	; select bank0
  7575  1673  00CD               	movwf	??_led_pro_process
  7576  1674  01CE               	clrf	??_led_pro_process+1
  7577  1675  0021               	movlb	1	; select bank1
  7578  1676  0743               	addwf	led_pro_process@ep^(0+128),w
  7579  1677  0020               	movlb	0	; select bank0
  7580  1678  00CF               	movwf	??_led_pro_process+2
  7581  1679  084E               	movf	??_led_pro_process+1,w
  7582  167A  0021               	movlb	1	; select bank1
  7583  167B  3D44               	addwfc	(led_pro_process@ep+1)^(0+128),w
  7584  167C  0020               	movlb	0	; select bank0
  7585  167D  00D0               	movwf	??_led_pro_process+3
  7586  167E  084F               	movf	??_led_pro_process+2,w
  7587  167F  0086               	movwf	6
  7588  1680  0850               	movf	??_led_pro_process+3,w
  7589  1681  0087               	movwf	7
  7590  1682  3142               	addfsr 1,2
  7591  1683  0801               	movf	1,w
  7592  1684  00BB               	movwf	led_calc_bright@ebrt
  7593  1685  0021               	movlb	1	; select bank1
  7594  1686  0835               	movf	(led_pro_process@duration+1)^(0+128),w
  7595  1687  0020               	movlb	0	; select bank0
  7596  1688  00BD               	movwf	led_calc_bright@duration+1
  7597  1689  0021               	movlb	1	; select bank1
  7598  168A  0834               	movf	led_pro_process@duration^(0+128),w
  7599  168B  0020               	movlb	0	; select bank0
  7600  168C  00BC               	movwf	led_calc_bright@duration
  7601  168D  0021               	movlb	1	; select bank1
  7602  168E  0832               	movf	(led_pro_process@dt+3)^(0+128),w
  7603  168F  0020               	movlb	0	; select bank0
  7604  1690  00C1               	movwf	led_calc_bright@dt+3
  7605  1691  0021               	movlb	1	; select bank1
  7606  1692  0831               	movf	(led_pro_process@dt+2)^(0+128),w
  7607  1693  0020               	movlb	0	; select bank0
  7608  1694  00C0               	movwf	led_calc_bright@dt+2
  7609  1695  0021               	movlb	1	; select bank1
  7610  1696  0830               	movf	(led_pro_process@dt+1)^(0+128),w
  7611  1697  0020               	movlb	0	; select bank0
  7612  1698  00BF               	movwf	led_calc_bright@dt+1
  7613  1699  0021               	movlb	1	; select bank1
  7614  169A  082F               	movf	led_pro_process@dt^(0+128),w
  7615  169B  0020               	movlb	0	; select bank0
  7616  169C  00BE               	movwf	led_calc_bright@dt
  7617  169D  0021               	movlb	1	; select bank1
  7618  169E  0848               	movf	led_pro_process@i^(0+128),w
  7619  169F  0020               	movlb	0	; select bank0
  7620  16A0  00D1               	movwf	??_led_pro_process+4
  7621  16A1  01D2               	clrf	??_led_pro_process+5
  7622  16A2  0021               	movlb	1	; select bank1
  7623  16A3  0741               	addwf	led_pro_process@sp^(0+128),w
  7624  16A4  0020               	movlb	0	; select bank0
  7625  16A5  00D3               	movwf	??_led_pro_process+6
  7626  16A6  0852               	movf	??_led_pro_process+5,w
  7627  16A7  0021               	movlb	1	; select bank1
  7628  16A8  3D42               	addwfc	(led_pro_process@sp+1)^(0+128),w
  7629  16A9  0020               	movlb	0	; select bank0
  7630  16AA  00D4               	movwf	??_led_pro_process+7
  7631  16AB  0853               	movf	??_led_pro_process+6,w
  7632  16AC  0086               	movwf	6
  7633  16AD  0854               	movf	??_led_pro_process+7,w
  7634  16AE  0087               	movwf	7
  7635  16AF  3142               	addfsr 1,2
  7636  16B0  0801               	movf	1,w
  7637  16B1  3193  23C1  3194   	fcall	_led_calc_bright
  7638  16B4  0021               	movlb	1	; select bank1
  7639  16B5  3548               	lslf	led_pro_process@i^(0+128),w
  7640  16B6  3194  247D  3194   	fcall	PL60	;call to abstracted procedure
  7641  16B9  0AC8               	incf	led_pro_process@i^(0+128),f
  7642  16BA  0248               	subwf	led_pro_process@i^(0+128),w
  7643  16BB  1803               	btfsc	3,0
  7644  16BC  0008               	return
  7645  16BD  2E71               	goto	l6665
  7646  16BE                     __end_of_led_pro_process:	
  7647  16BE                     __ptext51:	
  7648 ;; *************** function ___wmul *****************
  7649 ;; Defined at:
  7650 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul16.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  multiplier      2    2[BANK0 ] unsigned int 
  7653 ;;  multiplicand    2    4[BANK0 ] unsigned int 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;  product         2    6[BANK0 ] unsigned int 
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  2    2[BANK0 ] unsigned int 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0
  7660 ;; Tracked objects:
  7661 ;;		On entry : 1F/0
  7662 ;;		On exit  : 1F/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7665 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7668 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7669 ;;Total ram usage:        6 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; Hardware stack levels required when called:    9
  7672 ;; This function calls:
  7673 ;;		Nothing
  7674 ;; This function is called by:
  7675 ;;		_ble_decode
  7676 ;;		_led_para_default
  7677 ;;		_led_para_init
  7678 ;;		_led_calc_bright
  7679 ;;		_led_auto_process
  7680 ;;		_led_pro_process
  7681 ;;		_led_second_cb
  7682 ;;		_led_set_custom
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           
  7687                           ;psect for function ___wmul
  7688  16BE                     ___wmul:	
  7689                           
  7690                           ;incstack = 0
  7691                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7692  16BE  01A6               	clrf	___wmul@product
  7693  16BF  01A7               	clrf	___wmul@product+1
  7694  16C0                     l5849:	
  7695  16C0  1C22               	btfss	___wmul@multiplier,0
  7696  16C1  2EC6               	goto	l5853
  7697  16C2  0824               	movf	___wmul@multiplicand,w
  7698  16C3  07A6               	addwf	___wmul@product,f
  7699  16C4  0825               	movf	___wmul@multiplicand+1,w
  7700  16C5  3DA7               	addwfc	___wmul@product+1,f
  7701  16C6                     l5853:	
  7702  16C6  35A4               	lslf	___wmul@multiplicand,f
  7703  16C7  0DA5               	rlf	___wmul@multiplicand+1,f
  7704  16C8  36A3               	lsrf	___wmul@multiplier+1,f
  7705  16C9  0CA2               	rrf	___wmul@multiplier,f
  7706  16CA  0822               	movf	___wmul@multiplier,w
  7707  16CB  0423               	iorwf	___wmul@multiplier+1,w
  7708  16CC  1D03               	btfss	3,2
  7709  16CD  2EC0               	goto	l5849
  7710  16CE  0827               	movf	___wmul@product+1,w
  7711  16CF  00A3               	movwf	?___wmul+1
  7712  16D0  0826               	movf	___wmul@product,w
  7713  16D1  00A2               	movwf	?___wmul
  7714  16D2  0008               	return
  7715  16D3                     __end_of___wmul:	
  7716  16D3                     __ptext12:	
  7717 ;; *************** function _led_find_device *****************
  7718 ;; Defined at:
  7719 ;;		line 1868 in file "src/app_led.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;		None
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;		None
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  1    wreg      void 
  7726 ;; Registers used:
  7727 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7728 ;; Tracked objects:
  7729 ;;		On entry : 1F/0
  7730 ;;		On exit  : 1F/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7737 ;;Total ram usage:        0 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:   10
  7740 ;; This function calls:
  7741 ;;		_led_turnoff
  7742 ;;		_led_turnon_max
  7743 ;; This function is called by:
  7744 ;;		_led_second_cb
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748                           
  7749                           ;psect for function _led_find_device
  7750  16D3                     _led_find_device:	
  7751                           
  7752                           ;app_led.c: 1870: static bool toggle = 0;
  7753                           ;app_led.c: 1871: if(toggle)
  7754                           
  7755                           ;incstack = 0
  7756                           ; Regs used in _led_find_device: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7757  16D3  0861               	movf	led_find_device@toggle,w
  7758  16D4  1903               	btfsc	3,2
  7759  16D5  2EE0               	goto	l879
  7760                           
  7761                           ;app_led.c: 1872: {
  7762                           ;app_led.c: 1873: toggle = 0;
  7763  16D6  01E1               	clrf	led_find_device@toggle
  7764                           
  7765                           ;app_led.c: 1874: led_turnoff();
  7766  16D7  318E  2637         	fcall	_led_turnoff
  7767                           
  7768                           ;app_led.c: 1875: if(led_run_para.flash_count > 0)
  7769  16D9  085D               	movf	_led_run_para+1,w
  7770  16DA  1D03               	btfss	3,2
  7771                           
  7772                           ;app_led.c: 1876: {
  7773                           ;app_led.c: 1877: led_run_para.flash_count--;
  7774  16DB  03DD               	decf	_led_run_para+1,f
  7775                           
  7776                           ;app_led.c: 1878: }
  7777                           ;app_led.c: 1879: if(led_run_para.flash_count == 0)
  7778  16DC  085D               	movf	_led_run_para+1,w
  7779  16DD  1903               	btfsc	3,2
  7780                           
  7781                           ;app_led.c: 1880: {
  7782                           ;app_led.c: 1881: led_run_para.mFind = 0;
  7783  16DE  105C               	bcf	_led_run_para,0
  7784  16DF  0008               	return
  7785  16E0                     l879:	
  7786                           
  7787                           ;app_led.c: 1884: else
  7788                           ;app_led.c: 1885: {
  7789                           ;app_led.c: 1886: toggle = 1;
  7790  16E0  01E1               	clrf	led_find_device@toggle
  7791  16E1  0AE1               	incf	led_find_device@toggle,f
  7792                           
  7793                           ;app_led.c: 1887: led_turnon_max();
  7794  16E2  2EF2               	ljmp	l6129
  7795  16E3                     __end_of_led_find_device:	
  7796  16E3                     __ptext11:	
  7797 ;; *************** function _led_preview *****************
  7798 ;; Defined at:
  7799 ;;		line 1905 in file "src/app_led.c"
  7800 ;; Parameters:    Size  Location     Type
  7801 ;;		None
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;		None
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  1    wreg      void 
  7806 ;; Registers used:
  7807 ;;		wreg, status,2, status,0
  7808 ;; Tracked objects:
  7809 ;;		On entry : 1F/0
  7810 ;;		On exit  : 1F/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;Total ram usage:        0 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; Hardware stack levels required when called:    9
  7820 ;; This function calls:
  7821 ;;		Nothing
  7822 ;; This function is called by:
  7823 ;;		_led_second_cb
  7824 ;; This function uses a non-reentrant model
  7825 ;;
  7826                           
  7827                           
  7828                           ;psect for function _led_preview
  7829  16E3                     _led_preview:	
  7830                           
  7831                           ;app_led.c: 1907: if(led_run_para.prev_count > 0)
  7832                           
  7833                           ;incstack = 0
  7834                           ; Regs used in _led_preview: [wreg+status,2+status,0]
  7835  16E3  085E               	movf	_led_run_para+2,w
  7836  16E4  1D03               	btfss	3,2
  7837                           
  7838                           ;app_led.c: 1908: {
  7839                           ;app_led.c: 1909: led_run_para.prev_count--;
  7840  16E5  03DE               	decf	_led_run_para+2,f
  7841                           
  7842                           ;app_led.c: 1910: }
  7843                           ;app_led.c: 1911: if(led_run_para.prev_count == 0)
  7844  16E6  085E               	movf	_led_run_para+2,w
  7845  16E7  1903               	btfsc	3,2
  7846                           
  7847                           ;app_led.c: 1912: {
  7848                           ;app_led.c: 1913: led_run_para.mPrev = 0;
  7849  16E8  10DC               	bcf	_led_run_para,1
  7850  16E9  0008               	return
  7851  16EA                     __end_of_led_preview:	
  7852  16EA                     __ptext6:	
  7853 ;; *************** function _rtc_get_hour *****************
  7854 ;; Defined at:
  7855 ;;		line 140 in file "src/app_rtc.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;		None
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;		None
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  1    wreg      unsigned char 
  7862 ;; Registers used:
  7863 ;;		wreg
  7864 ;; Tracked objects:
  7865 ;;		On entry : 1F/0
  7866 ;;		On exit  : 1F/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7873 ;;Total ram usage:        0 bytes
  7874 ;; Hardware stack levels used:    1
  7875 ;; Hardware stack levels required when called:    9
  7876 ;; This function calls:
  7877 ;;		Nothing
  7878 ;; This function is called by:
  7879 ;;		_led_second_cb
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           
  7884                           ;psect for function _rtc_get_hour
  7885  16EA                     _rtc_get_hour:	
  7886                           
  7887                           ;app_rtc.c: 142: return m_current_time.hour;
  7888                           
  7889                           ;incstack = 0
  7890                           ; Regs used in _rtc_get_hour: [wreg]
  7891  16EA  0859               	movf	_m_current_time+4,w
  7892  16EB  0008               	return
  7893  16EC                     __end_of_rtc_get_hour:	
  7894  16EC                     __ptext5:	
  7895 ;; *************** function _rtc_get_minute *****************
  7896 ;; Defined at:
  7897 ;;		line 145 in file "src/app_rtc.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;		None
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;		None
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  1    wreg      unsigned char 
  7904 ;; Registers used:
  7905 ;;		wreg
  7906 ;; Tracked objects:
  7907 ;;		On entry : 1F/2
  7908 ;;		On exit  : 1F/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7915 ;;Total ram usage:        0 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; Hardware stack levels required when called:    9
  7918 ;; This function calls:
  7919 ;;		Nothing
  7920 ;; This function is called by:
  7921 ;;		_led_second_cb
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           
  7926                           ;psect for function _rtc_get_minute
  7927  16EC                     _rtc_get_minute:	
  7928                           
  7929                           ;app_rtc.c: 147: return m_current_time.minute;
  7930                           
  7931                           ;incstack = 0
  7932                           ; Regs used in _rtc_get_minute: [wreg]
  7933  16EC  0020               	movlb	0	; select bank0
  7934  16ED  085A               	movf	_m_current_time+5,w
  7935  16EE  0008               	return
  7936  16EF                     __end_of_rtc_get_minute:	
  7937  16EF                     __ptext4:	
  7938 ;; *************** function _rtc_get_second *****************
  7939 ;; Defined at:
  7940 ;;		line 150 in file "src/app_rtc.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;		None
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;		None
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  1    wreg      unsigned char 
  7947 ;; Registers used:
  7948 ;;		wreg
  7949 ;; Tracked objects:
  7950 ;;		On entry : 1F/2
  7951 ;;		On exit  : 1F/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;Total ram usage:        0 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; Hardware stack levels required when called:    9
  7961 ;; This function calls:
  7962 ;;		Nothing
  7963 ;; This function is called by:
  7964 ;;		_led_second_cb
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           
  7969                           ;psect for function _rtc_get_second
  7970  16EF                     _rtc_get_second:	
  7971                           
  7972                           ;app_rtc.c: 152: return m_current_time.second;
  7973                           
  7974                           ;incstack = 0
  7975                           ; Regs used in _rtc_get_second: [wreg]
  7976  16EF  0020               	movlb	0	; select bank0
  7977  16F0  085B               	movf	_m_current_time+6,w
  7978  16F1  0008               	return
  7979  16F2                     __end_of_rtc_get_second:	
  7980  16F2                     __ptext13:	
  7981 ;; *************** function _led_turnon_max *****************
  7982 ;; Defined at:
  7983 ;;		line 691 in file "src/app_led.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;		None
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;  i               1    2[BANK0 ] unsigned char 
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  1    wreg      void 
  7990 ;; Registers used:
  7991 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7992 ;; Tracked objects:
  7993 ;;		On entry : 1F/0
  7994 ;;		On exit  : 1F/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8001 ;;Total ram usage:        1 bytes
  8002 ;; Hardware stack levels used:    1
  8003 ;; Hardware stack levels required when called:    9
  8004 ;; This function calls:
  8005 ;;		Nothing
  8006 ;; This function is called by:
  8007 ;;		_led_find_device
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           
  8012                           ;psect for function _led_turnon_max
  8013  16F2                     _led_turnon_max:	
  8014  16F2                     l6129:	
  8015                           ;incstack = 0
  8016                           ; Regs used in _led_turnon_max: [wreg+fsr1l+fsr1h+status,2+status,0]
  8017                           
  8018                           
  8019                           ;app_led.c: 693: for(uint8_t i = 0; i < 5; i++)
  8020  16F2  01A2               	clrf	led_turnon_max@i
  8021  16F3                     l6135:	
  8022                           
  8023                           ;app_led.c: 694: {
  8024                           ;app_led.c: 695: target_bright[i] = 1000;
  8025  16F3  3522               	lslf	led_turnon_max@i,w
  8026  16F4  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
  8027  16F5  0086               	movwf	6
  8028  16F6  30E8               	movlw	232
  8029  16F7  0187               	clrf	7
  8030  16F8  3FC0               	movwi [0]fsr1
  8031  16F9  3003               	movlw	3
  8032  16FA  3FC1               	movwi [1]fsr1
  8033                           
  8034                           ;app_led.c: 696: current_bright[i] = 1000;
  8035  16FB  3522               	lslf	led_turnon_max@i,w
  8036  16FC  3EDA               	addlw	(low (_current_bright| 0))& (0+255)
  8037  16FD  0086               	movwf	6
  8038  16FE  30E8               	movlw	232
  8039  16FF  3FC0               	movwi [0]fsr1
  8040  1700  3003               	movlw	3
  8041  1701  3FC1               	movwi [1]fsr1
  8042  1702  3005               	movlw	5
  8043  1703  0AA2               	incf	led_turnon_max@i,f
  8044  1704  0222               	subwf	led_turnon_max@i,w
  8045  1705  1803               	btfsc	3,0
  8046  1706  0008               	return
  8047  1707  2EF3               	goto	l6135
  8048  1708                     __end_of_led_turnon_max:	
  8049  1708                     __ptext7:	
  8050 ;; *************** function _led_save_para *****************
  8051 ;; Defined at:
  8052 ;;		line 1925 in file "src/app_led.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;		None
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;		None
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  1    wreg      void 
  8059 ;; Registers used:
  8060 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8061 ;; Tracked objects:
  8062 ;;		On entry : 1F/0
  8063 ;;		On exit  : 1F/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8070 ;;Total ram usage:        0 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; Hardware stack levels required when called:   11
  8073 ;; This function calls:
  8074 ;;		_eeprom_write_buffer
  8075 ;; This function is called by:
  8076 ;;		_led_second_cb
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           
  8081                           ;psect for function _led_save_para
  8082  1708                     _led_save_para:	
  8083  1708                     l6695:	
  8084                           ;incstack = 0
  8085                           ; Regs used in _led_save_para: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8086                           
  8087                           
  8088                           ;app_led.c: 1927: if(led_run_para.save_delay_count > 0)
  8089  1708  085F               	movf	_led_run_para+3,w
  8090  1709  1D03               	btfss	3,2
  8091                           
  8092                           ;app_led.c: 1928: {
  8093                           ;app_led.c: 1929: led_run_para.save_delay_count--;
  8094  170A  03DF               	decf	_led_run_para+3,f
  8095                           
  8096                           ;app_led.c: 1930: }
  8097                           ;app_led.c: 1931: if(led_run_para.save_delay_count == 0)
  8098  170B  085F               	movf	_led_run_para+3,w
  8099  170C  1D03               	btfss	3,2
  8100  170D  0008               	return
  8101                           
  8102                           ;app_led.c: 1932: {
  8103                           ;app_led.c: 1933: m_led_para.save_flag = 0x55;
  8104  170E  318F  2756  3194   	fcall	PL136	;call to abstracted procedure
  8105  1711  3FC0               	movwi [0]fsr1
  8106                           
  8107                           ;app_led.c: 1934: eeprom_write_buffer(0x10, (uint8_t *) &m_led_para, sizeof(m_led_para))
      +                          ;
  8108  1712  306D               	movlw	109
  8109  1713  00A5               	movwf	eeprom_write_buffer@pbuf
  8110  1714  3023               	movlw	35
  8111  1715  00A6               	movwf	eeprom_write_buffer@pbuf+1
  8112  1716  3083               	movlw	131
  8113  1717  00A7               	movwf	eeprom_write_buffer@len
  8114  1718  3010               	movlw	16
  8115  1719  271C               	fcall	_eeprom_write_buffer
  8116                           
  8117                           ;app_led.c: 1935: led_run_para.mSave = 0;
  8118  171A  115C               	bcf	_led_run_para,2
  8119  171B  0008               	return
  8120  171C                     __end_of_led_save_para:	
  8121  171C                     __ptext8:	
  8122 ;; *************** function _eeprom_write_buffer *****************
  8123 ;; Defined at:
  8124 ;;		line 35 in file "src/drv_eeprom.c"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;  addr            1    wreg     unsigned char 
  8127 ;;  pbuf            2    5[BANK0 ] PTR unsigned char 
  8128 ;;		 -> m_led_para(131), 
  8129 ;;  len             1    7[BANK0 ] unsigned char 
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;  addr            1    8[BANK0 ] unsigned char 
  8132 ;;  i               1    9[BANK0 ] unsigned char 
  8133 ;; Return value:  Size  Location     Type
  8134 ;;                  1    wreg      void 
  8135 ;; Registers used:
  8136 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8137 ;; Tracked objects:
  8138 ;;		On entry : 1F/0
  8139 ;;		On exit  : 1F/0
  8140 ;;		Unchanged: 0/0
  8141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8142 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8143 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8145 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8146 ;;Total ram usage:        5 bytes
  8147 ;; Hardware stack levels used:    1
  8148 ;; Hardware stack levels required when called:   10
  8149 ;; This function calls:
  8150 ;;		_eeprom_write
  8151 ;; This function is called by:
  8152 ;;		_led_save_para
  8153 ;; This function uses a non-reentrant model
  8154 ;;
  8155                           
  8156                           
  8157                           ;psect for function _eeprom_write_buffer
  8158  171C                     _eeprom_write_buffer:	
  8159                           
  8160                           ;incstack = 0
  8161                           ; Regs used in _eeprom_write_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8162                           ;eeprom_write_buffer@addr stored from wreg
  8163  171C  00A8               	movwf	eeprom_write_buffer@addr
  8164                           
  8165                           ;drv_eeprom.c: 37: for(uint8_t i = len; i > 0; i--)
  8166  171D  0827               	movf	eeprom_write_buffer@len,w
  8167  171E  00A9               	movwf	eeprom_write_buffer@i
  8168  171F                     l5917:	
  8169  171F  0829               	movf	eeprom_write_buffer@i,w
  8170  1720  1903               	btfsc	3,2
  8171  1721  0008               	return
  8172                           
  8173                           ;drv_eeprom.c: 38: {
  8174                           ;drv_eeprom.c: 39: eeprom_write(addr++, *pbuf++);
  8175  1722  0825               	movf	eeprom_write_buffer@pbuf,w
  8176  1723  0086               	movwf	6
  8177  1724  0826               	movf	eeprom_write_buffer@pbuf+1,w
  8178  1725  0087               	movwf	7
  8179  1726  0801               	movf	1,w
  8180  1727  00A2               	movwf	eeprom_write@byte
  8181  1728  0828               	movf	eeprom_write_buffer@addr,w
  8182  1729  2731  3194         	fcall	_eeprom_write
  8183  172B  0AA5               	incf	eeprom_write_buffer@pbuf,f
  8184  172C  1903               	skipnz
  8185  172D  0AA6               	incf	eeprom_write_buffer@pbuf+1,f
  8186  172E  0AA8               	incf	eeprom_write_buffer@addr,f
  8187  172F  03A9               	decf	eeprom_write_buffer@i,f
  8188  1730  2F1F               	goto	l5917
  8189  1731                     __end_of_eeprom_write_buffer:	
  8190  1731                     __ptext9:	
  8191 ;; *************** function _eeprom_write *****************
  8192 ;; Defined at:
  8193 ;;		line 5 in file "src/drv_eeprom.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;  addr            1    wreg     unsigned char 
  8196 ;;  byte            1    2[BANK0 ] unsigned char 
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;  addr            1    3[BANK0 ] unsigned char 
  8199 ;;  state           1    4[BANK0 ] unsigned char 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  1    wreg      void 
  8202 ;; Registers used:
  8203 ;;		wreg, status,2, status,0
  8204 ;; Tracked objects:
  8205 ;;		On entry : 1F/0
  8206 ;;		On exit  : 1F/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8209 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8210 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8212 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8213 ;;Total ram usage:        3 bytes
  8214 ;; Hardware stack levels used:    1
  8215 ;; Hardware stack levels required when called:    9
  8216 ;; This function calls:
  8217 ;;		Nothing
  8218 ;; This function is called by:
  8219 ;;		_eeprom_write_buffer
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           
  8224                           ;psect for function _eeprom_write
  8225  1731                     _eeprom_write:	
  8226                           
  8227                           ;incstack = 0
  8228                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  8229                           ;eeprom_write@addr stored from wreg
  8230  1731  00A3               	movwf	eeprom_write@addr
  8231                           
  8232                           ;drv_eeprom.c: 7: bool state = INTCONbits.GIE;
  8233  1732  3000               	movlw	0
  8234  1733  1B8B               	btfsc	11,7	;volatile
  8235  1734  3001               	movlw	1
  8236  1735  00A4               	movwf	eeprom_write@state
  8237                           
  8238                           ;drv_eeprom.c: 9: NVMADRH = 0x70;
  8239  1736  3070               	movlw	112
  8240  1737  0031               	movlb	17	; select bank17
  8241  1738  0092               	movwf	18	;volatile
  8242                           
  8243                           ;drv_eeprom.c: 10: NVMADRL = addr;
  8244  1739  0020               	movlb	0	; select bank0
  8245  173A  0823               	movf	eeprom_write@addr,w
  8246  173B  0031               	movlb	17	; select bank17
  8247  173C  0091               	movwf	17	;volatile
  8248                           
  8249                           ;drv_eeprom.c: 11: NVMDATL = byte;
  8250  173D  0020               	movlb	0	; select bank0
  8251  173E  0822               	movf	eeprom_write@byte,w
  8252  173F  0031               	movlb	17	; select bank17
  8253  1740  0093               	movwf	19	;volatile
  8254                           
  8255                           ;drv_eeprom.c: 12: NVMCON1bits.NVMREGS = 1;
  8256  1741  1715               	bsf	21,6	;volsfr
  8257                           
  8258                           ;drv_eeprom.c: 13: NVMCON1bits.WREN = 1;
  8259  1742  1515               	bsf	21,2	;volsfr
  8260                           
  8261                           ;drv_eeprom.c: 14: INTCONbits.GIE = 0;
  8262  1743  138B               	bcf	11,7	;volatile
  8263                           
  8264                           ;drv_eeprom.c: 15: NVMCON2 = 0x55;
  8265  1744  3055               	movlw	85
  8266  1745  0096               	movwf	22	;volsfr
  8267                           
  8268                           ;drv_eeprom.c: 16: NVMCON2 = 0xAA;
  8269  1746  30AA               	movlw	170
  8270  1747  0096               	movwf	22	;volsfr
  8271                           
  8272                           ;drv_eeprom.c: 17: NVMCON1bits.WR = 1;
  8273  1748  1495               	bsf	21,1	;volsfr
  8274  1749                     l133:	
  8275                           ;drv_eeprom.c: 18: while(NVMCON1bits.WR);
  8276                           
  8277  1749  1895               	btfsc	21,1	;volsfr
  8278  174A  2F49               	goto	l133
  8279                           
  8280                           ;drv_eeprom.c: 19: NVMCON1bits.WREN = 0;
  8281  174B  1115               	bcf	21,2	;volsfr
  8282                           
  8283                           ;drv_eeprom.c: 21: INTCONbits.GIE = state;
  8284  174C  0020               	movlb	0	; select bank0
  8285  174D  0C24               	rrf	eeprom_write@state,w
  8286  174E  1C03               	skipc
  8287  174F  138B               	bcf	11,7	;volatile
  8288  1750  1803               	skipnc
  8289  1751  178B               	bsf	11,7	;volatile
  8290  1752  0008               	return
  8291  1753                     __end_of_eeprom_write:	
  8292  1753                     PL8:	
  8293  1753  0801               	movf	1,w
  8294  1754  0020               	movlb	0	; select bank0
  8295  1755  00A2               	movwf	___wmul@multiplier
  8296  1756  303C               	movlw	60
  8297  1757  01A3               	clrf	___wmul@multiplier+1
  8298  1758  00A4               	movwf	___wmul@multiplicand
  8299  1759  01A5               	clrf	___wmul@multiplicand+1
  8300  175A  0008               	return
  8301  175B                     __end_ofPL8:	
  8302  175B                     PL16:	
  8303  175B  0823               	movf	?___wmul+1,w
  8304  175C  0021               	movlb	1	; select bank1
  8305  175D  00C7               	movwf	(led_pro_process@st+1)^(0+128)
  8306  175E  0020               	movlb	0	; select bank0
  8307  175F  0822               	movf	?___wmul,w
  8308  1760  0021               	movlb	1	; select bank1
  8309  1761  00C6               	movwf	led_pro_process@st^(0+128)
  8310  1762  0841               	movf	led_pro_process@sp^(0+128),w
  8311  1763  0086               	movwf	6
  8312  1764  0842               	movf	(led_pro_process@sp+1)^(0+128),w
  8313  1765  0087               	movwf	7
  8314  1766  3141               	addfsr 1,1
  8315  1767  0801               	movf	1,w
  8316  1768  07C6               	addwf	led_pro_process@st^(0+128),f
  8317  1769  1803               	skipnc
  8318  176A  0AC7               	incf	(led_pro_process@st+1)^(0+128),f
  8319  176B  0843               	movf	led_pro_process@ep^(0+128),w
  8320  176C  0086               	movwf	6
  8321  176D  0844               	movf	(led_pro_process@ep+1)^(0+128),w
  8322  176E  0087               	movwf	7
  8323  176F  0008               	return
  8324  1770                     __end_ofPL16:	
  8325  1770                     PL18:	
  8326  1770  0822               	movf	?___wmul,w
  8327  1771  3E01               	addlw	1
  8328  1772  00CD               	movwf	??_led_pro_process
  8329  1773  3000               	movlw	0
  8330  1774  3D23               	addwfc	?___wmul+1,w
  8331  1775  00CE               	movwf	??_led_pro_process+1
  8332  1776  084D               	movf	??_led_pro_process,w
  8333  1777  0021               	movlb	1	; select bank1
  8334  1778  0008               	return
  8335  1779                     __end_ofPL18:	
  8336  1779                     PL30:	
  8337  1779  07C1               	addwf	led_pro_process@sp^(0+128),f
  8338  177A  0020               	movlb	0	; select bank0
  8339  177B  084E               	movf	??_led_pro_process+1,w
  8340  177C  0021               	movlb	1	; select bank1
  8341  177D  3DC2               	addwfc	(led_pro_process@sp+1)^(0+128),f
  8342  177E  3023               	movlw	35
  8343  177F  00C4               	movwf	(led_pro_process@ep+1)^(0+128)
  8344  1780  30A9               	movlw	169
  8345  1781  00C3               	movwf	led_pro_process@ep^(0+128)
  8346  1782  083D               	movf	(led_pro_process@end+1)^(0+128),w
  8347  1783  0020               	movlb	0	; select bank0
  8348  1784  00A3               	movwf	___wmul@multiplier+1
  8349  1785  0021               	movlb	1	; select bank1
  8350  1786  083C               	movf	led_pro_process@end^(0+128),w
  8351  1787  0020               	movlb	0	; select bank0
  8352  1788  00A2               	movwf	___wmul@multiplier
  8353  1789  3007               	movlw	7
  8354  178A  00A4               	movwf	___wmul@multiplicand
  8355  178B  01A5               	clrf	___wmul@multiplicand+1
  8356  178C  0008               	return
  8357  178D                     __end_ofPL30:	
  8358  178D                     PL34:	
  8359  178D  084D               	movf	??_led_pro_process,w
  8360  178E  0722               	addwf	?___wmul,w
  8361  178F  00CF               	movwf	??_led_pro_process+2
  8362  1790  084E               	movf	??_led_pro_process+1,w
  8363  1791  3D23               	addwfc	?___wmul+1,w
  8364  1792  00D0               	movwf	??_led_pro_process+3
  8365  1793  0021               	movlb	1	; select bank1
  8366  1794  0847               	movf	(led_pro_process@st+1)^(0+128),w
  8367  1795  0020               	movlb	0	; select bank0
  8368  1796  00A3               	movwf	___wmul@multiplier+1
  8369  1797  0021               	movlb	1	; select bank1
  8370  1798  0846               	movf	led_pro_process@st^(0+128),w
  8371  1799  0020               	movlb	0	; select bank0
  8372  179A  00A2               	movwf	___wmul@multiplier
  8373  179B  30C4               	movlw	196
  8374  179C  00A4               	movwf	___wmul@multiplicand
  8375  179D  30FF               	movlw	255
  8376  179E  00A5               	movwf	___wmul@multiplicand+1
  8377  179F  0008               	return
  8378  17A0                     __end_ofPL34:	
  8379  17A0                     PL40:	
  8380  17A0  00BC               	movwf	led_pro_process@end^(0+128)
  8381  17A1  3023               	movlw	35
  8382  17A2  01BD               	clrf	(led_pro_process@end+1)^(0+128)
  8383  17A3  00C2               	movwf	(led_pro_process@sp+1)^(0+128)
  8384  17A4  30A9               	movlw	169
  8385  17A5  00C1               	movwf	led_pro_process@sp^(0+128)
  8386  17A6  083B               	movf	(led_pro_process@start+1)^(0+128),w
  8387  17A7  0020               	movlb	0	; select bank0
  8388  17A8  00A3               	movwf	___wmul@multiplier+1
  8389  17A9  0021               	movlb	1	; select bank1
  8390  17AA  083A               	movf	led_pro_process@start^(0+128),w
  8391  17AB  0020               	movlb	0	; select bank0
  8392  17AC  00A2               	movwf	___wmul@multiplier
  8393  17AD  3007               	movlw	7
  8394  17AE  00A4               	movwf	___wmul@multiplicand
  8395  17AF  01A5               	clrf	___wmul@multiplicand+1
  8396  17B0  0008               	return
  8397  17B1                     __end_ofPL40:	
  8398  17B1                     PL42:	
  8399  17B1  07C3               	addwf	led_pro_process@ep^(0+128),f
  8400  17B2  0020               	movlb	0	; select bank0
  8401  17B3  084E               	movf	??_led_pro_process+1,w
  8402  17B4  0021               	movlb	1	; select bank1
  8403  17B5  3DC4               	addwfc	(led_pro_process@ep+1)^(0+128),f
  8404  17B6  0841               	movf	led_pro_process@sp^(0+128),w
  8405  17B7  0086               	movwf	6
  8406  17B8  0842               	movf	(led_pro_process@sp+1)^(0+128),w
  8407  17B9  0087               	movwf	7
  8408  17BA  0008               	return
  8409  17BB                     __end_ofPL42:	
  8410  17BB                     PL44:	
  8411  17BB  00A2               	movwf	___wmul@multiplier
  8412  17BC  3007               	movlw	7
  8413  17BD  01A3               	clrf	___wmul@multiplier+1
  8414  17BE  00A4               	movwf	___wmul@multiplicand
  8415  17BF  01A5               	clrf	___wmul@multiplicand+1
  8416  17C0  0008               	return
  8417  17C1                     __end_ofPL44:	
  8418  17C1                     PL48:	
  8419  17C1  0823               	movf	?___wmul+1,w
  8420  17C2  0021               	movlb	1	; select bank1
  8421  17C3  00C0               	movwf	(led_pro_process@et+1)^(0+128)
  8422  17C4  0020               	movlb	0	; select bank0
  8423  17C5  0822               	movf	?___wmul,w
  8424  17C6  0021               	movlb	1	; select bank1
  8425  17C7  00BF               	movwf	led_pro_process@et^(0+128)
  8426  17C8  0843               	movf	led_pro_process@ep^(0+128),w
  8427  17C9  0086               	movwf	6
  8428  17CA  0844               	movf	(led_pro_process@ep+1)^(0+128),w
  8429  17CB  0087               	movwf	7
  8430  17CC  3141               	addfsr 1,1
  8431  17CD  0801               	movf	1,w
  8432  17CE  07BF               	addwf	led_pro_process@et^(0+128),f
  8433  17CF  0008               	return
  8434  17D0                     __end_ofPL48:	
  8435  17D0                     PL62:	
  8436  17D0  084C               	movf	led_pro_process@sec,w
  8437  17D1  00CD               	movwf	??_led_pro_process
  8438  17D2  01CE               	clrf	??_led_pro_process+1
  8439  17D3  084B               	movf	led_pro_process@ct+1,w
  8440  17D4  00A3               	movwf	___wmul@multiplier+1
  8441  17D5  084A               	movf	led_pro_process@ct,w
  8442  17D6  00A2               	movwf	___wmul@multiplier
  8443  17D7  303C               	movlw	60
  8444  17D8  00A4               	movwf	___wmul@multiplicand
  8445  17D9  01A5               	clrf	___wmul@multiplicand+1
  8446  17DA  0008               	return
  8447  17DB                     __end_ofPL62:	
  8448  17DB                     PL66:	
  8449  17DB  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  8450  17DC  0086               	movwf	6
  8451  17DD  0187               	clrf	7
  8452  17DE  0801               	movf	1,w
  8453  17DF  0020               	movlb	0	; select bank0
  8454  17E0  0008               	return
  8455  17E1                     __end_ofPL66:	
  8456  17E1                     PL88:	
  8457  17E1  0840               	movf	(led_pro_process@et+1)^(0+128),w
  8458  17E2  00B5               	movwf	(led_pro_process@duration+1)^(0+128)
  8459  17E3  083F               	movf	led_pro_process@et^(0+128),w
  8460  17E4  00B4               	movwf	led_pro_process@duration^(0+128)
  8461  17E5  0846               	movf	led_pro_process@st^(0+128),w
  8462  17E6  02B4               	subwf	led_pro_process@duration^(0+128),f
  8463  17E7  0847               	movf	(led_pro_process@st+1)^(0+128),w
  8464  17E8  3BB5               	subwfb	(led_pro_process@duration+1)^(0+128),f
  8465  17E9  0008               	return
  8466  17EA                     __end_ofPL88:	
  8467  17EA                     PL112:	
  8468  17EA  3EA0               	addlw	(low (led_pro_process@index| 0))& (0+255)
  8469  17EB  0086               	movwf	6
  8470  17EC  0187               	clrf	7
  8471  17ED  0801               	movf	1,w
  8472  17EE  00BA               	movwf	led_pro_process@start^(0+128)
  8473  17EF  01BB               	clrf	(led_pro_process@start+1)^(0+128)
  8474  17F0  0008               	return
  8475  17F1                     __end_ofPL112:	
  8476  17F1                     PL152:	
  8477  17F1  30A9               	movlw	169
  8478  17F2  0086               	movwf	6
  8479  17F3  3023               	movlw	35
  8480  17F4  0087               	movwf	7
  8481  17F5  0008               	return
  8482  17F6                     __end_ofPL152:	
  8483  17F6                     PL160:	
  8484  17F6  0021               	movlb	1	; select bank1
  8485  17F7  0846               	movf	led_pro_process@st^(0+128),w
  8486  17F8  0020               	movlb	0	; select bank0
  8487  17F9  024A               	subwf	led_pro_process@ct,w
  8488  17FA  0008               	return
  8489  17FB                     __end_ofPL160:	
  8490  17FB                     PL164:	
  8491  17FB  0021               	movlb	1	; select bank1
  8492  17FC  083F               	movf	led_pro_process@et^(0+128),w
  8493  17FD  0020               	movlb	0	; select bank0
  8494  17FE  024A               	subwf	led_pro_process@ct,w
  8495  17FF  0008               	return
  8496  1800                     __end_ofPL164:	
  8497                           
  8498                           	psect	text24
  8499  062E                     __ptext24:	
  8500 ;; *************** function _led_para_default *****************
  8501 ;; Defined at:
  8502 ;;		line 170 in file "src/app_led.c"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;		None
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;  j               1   19[BANK0 ] unsigned char 
  8507 ;;  i               1   21[BANK0 ] unsigned char 
  8508 ;;  i               1   20[BANK0 ] unsigned char 
  8509 ;;  i               1   18[BANK0 ] unsigned char 
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      void 
  8512 ;; Registers used:
  8513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8514 ;; Tracked objects:
  8515 ;;		On entry : 1F/0
  8516 ;;		On exit  : 1F/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8523 ;;Total ram usage:       12 bytes
  8524 ;; Hardware stack levels used:    1
  8525 ;; Hardware stack levels required when called:   10
  8526 ;; This function calls:
  8527 ;;		___wmul
  8528 ;;		_memset
  8529 ;; This function is called by:
  8530 ;;		_led_para_init
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           
  8535                           ;psect for function _led_para_default
  8536  062E                     _led_para_default:	
  8537                           
  8538                           ;app_led.c: 172: memset(&m_led_para, 0, sizeof(m_led_para));
  8539                           
  8540                           ;incstack = 0
  8541                           ; Regs used in _led_para_default: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8542  062E  306D               	movlw	109
  8543  062F  00A2               	movwf	memset@p1
  8544  0630  3023               	movlw	35
  8545  0631  00A3               	movwf	memset@p1+1
  8546  0632  3083               	movlw	131
  8547  0633  01A4               	clrf	memset@c
  8548  0634  01A5               	clrf	memset@c+1
  8549  0635  00A6               	movwf	memset@n
  8550  0636  01A7               	clrf	memset@n+1
  8551  0637  26FC  3186         	fcall	_memset
  8552                           
  8553                           ;app_led.c: 176: m_led_para.last_mode = 1;
  8554  0639  306D               	movlw	109
  8555  063A  0086               	movwf	6
  8556  063B  3023               	movlw	35
  8557  063C  0087               	movwf	7
  8558  063D  272F  3186         	fcall	PL146	;call to abstracted procedure
  8559                           
  8560                           ;app_led.c: 177: m_led_para.all_bright = 1000;
  8561  063F  272A               	fcall	PL90	;call to abstracted procedure
  8562  0640  318B  2391  3186   	fcall	PL32	;call to abstracted procedure
  8563  0643  082A               	movf	??_led_para_default,w
  8564  0644  3FC0               	movwi [0]fsr1
  8565  0645  082B               	movf	??_led_para_default+1,w
  8566  0646  3FC1               	movwi [1]fsr1
  8567                           
  8568                           ;app_led.c: 178: m_led_para.blue_bright = 1000;
  8569  0647  272A               	fcall	PL90	;call to abstracted procedure
  8570  0648  318E  26C1  3186   	fcall	PL22	;call to abstracted procedure
  8571  064B  082A               	movf	??_led_para_default,w
  8572  064C  3FC0               	movwi [0]fsr1
  8573  064D  082B               	movf	??_led_para_default+1,w
  8574  064E  3FC1               	movwi [1]fsr1
  8575                           
  8576                           ;app_led.c: 183: m_led_para.ble_para.auto_para.sunrise_start_hour = 7;
  8577  064F  3094               	movlw	148
  8578  0650  0086               	movwf	6
  8579  0651  3023               	movlw	35
  8580  0652  0087               	movwf	7
  8581  0653  3007               	movlw	7
  8582  0654  0081               	movwf	1
  8583                           
  8584                           ;app_led.c: 185: m_led_para.ble_para.auto_para.sunrise_end_hour = 8;
  8585  0655  3096               	movlw	150
  8586  0656  0086               	movwf	6
  8587  0657  3008               	movlw	8
  8588  0658  0081               	movwf	1
  8589                           
  8590                           ;app_led.c: 187: for(uint8_t i = 0; i < 5; i++)
  8591  0659  01B2               	clrf	led_para_default@i
  8592  065A                     l6049:	
  8593                           
  8594                           ;app_led.c: 188: {
  8595                           ;app_led.c: 189: m_led_para.ble_para.auto_para.day_bright[i] = 100;
  8596  065A  0832               	movf	led_para_default@i,w
  8597  065B  00AA               	movwf	??_led_para_default
  8598  065C  3098               	movlw	152
  8599  065D  2713  3186         	fcall	PL12	;call to abstracted procedure
  8600  065F  3005               	movlw	5
  8601  0660  0AB2               	incf	led_para_default@i,f
  8602  0661  0232               	subwf	led_para_default@i,w
  8603  0662  1C03               	skipc
  8604  0663  2E5A               	goto	l6049
  8605                           
  8606                           ;app_led.c: 190: }
  8607                           ;app_led.c: 191: m_led_para.ble_para.auto_para.sunset_start_hour = 17;
  8608  0664  309D               	movlw	157
  8609  0665  0086               	movwf	6
  8610  0666  3023               	movlw	35
  8611  0667  0087               	movwf	7
  8612  0668  3011               	movlw	17
  8613  0669  0081               	movwf	1
  8614                           
  8615                           ;app_led.c: 193: m_led_para.ble_para.auto_para.sunset_end_hour = 18;
  8616  066A  309F               	movlw	159
  8617  066B  0086               	movwf	6
  8618  066C  3012               	movlw	18
  8619  066D  0081               	movwf	1
  8620                           
  8621                           ;app_led.c: 195: m_led_para.ble_para.auto_para.night_bright[2] = 5;
  8622  066E  30A3               	movlw	163
  8623  066F  0086               	movwf	6
  8624  0670  3005               	movlw	5
  8625  0671  0081               	movwf	1
  8626                           
  8627                           ;app_led.c: 196: m_led_para.ble_para.auto_para.turnoff_enabled = 1;
  8628  0672  30A6               	movlw	166
  8629  0673  0086               	movwf	6
  8630  0674  3001               	movlw	1
  8631  0675  0081               	movwf	1
  8632                           
  8633                           ;app_led.c: 197: m_led_para.ble_para.auto_para.turnoff_hour = 22;
  8634  0676  30A7               	movlw	167
  8635  0677  0086               	movwf	6
  8636  0678  3016               	movlw	22
  8637  0679  0081               	movwf	1
  8638                           
  8639                           ;app_led.c: 200: m_led_para.ble_para.manual_para.mOn = 1;
  8640  067A  306D               	movlw	109
  8641  067B  0086               	movwf	6
  8642  067C  3147               	addfsr 1,7
  8643  067D  1401               	bsf	1,0
  8644                           
  8645                           ;app_led.c: 201: for(uint8_t i = 0; i < 5; i++)
  8646  067E  01B4               	clrf	led_para_default@i_1200
  8647  067F                     l6063:	
  8648                           
  8649                           ;app_led.c: 202: {
  8650                           ;app_led.c: 203: m_led_para.ble_para.manual_para.mBright[i] = 1000;
  8651  067F  30E8               	movlw	232
  8652  0680  00AA               	movwf	??_led_para_default
  8653  0681  3003               	movlw	3
  8654  0682  00AB               	movwf	??_led_para_default+1
  8655  0683  0834               	movf	led_para_default@i_1200,w
  8656  0684  00AC               	movwf	??_led_para_default+2
  8657  0685  3076               	movlw	118
  8658  0686  01AD               	clrf	??_led_para_default+3
  8659  0687  35AC               	lslf	??_led_para_default+2,f
  8660  0688  0DAD               	rlf	??_led_para_default+3,f
  8661  0689  00AE               	movwf	??_led_para_default+4
  8662  068A  3023               	movlw	35
  8663  068B  00AF               	movwf	??_led_para_default+5
  8664  068C  082C               	movf	??_led_para_default+2,w
  8665  068D  072E               	addwf	??_led_para_default+4,w
  8666  068E  0086               	movwf	6
  8667  068F  082D               	movf	??_led_para_default+3,w
  8668  0690  3D2F               	addwfc	??_led_para_default+5,w
  8669  0691  0087               	movwf	7
  8670  0692  082A               	movf	??_led_para_default,w
  8671  0693  3FC0               	movwi [0]fsr1
  8672  0694  082B               	movf	??_led_para_default+1,w
  8673  0695  3FC1               	movwi [1]fsr1
  8674                           
  8675                           ;app_led.c: 204: for(uint8_t j = 0; j < 4; j++)
  8676  0696  01B3               	clrf	led_para_default@j
  8677  0697                     l6071:	
  8678                           
  8679                           ;app_led.c: 205: {
  8680                           ;app_led.c: 206: m_led_para.ble_para.manual_para.mCustomBright[j][i] = 100;
  8681  0697  0834               	movf	led_para_default@i_1200,w
  8682  0698  00AA               	movwf	??_led_para_default
  8683  0699  01AB               	clrf	??_led_para_default+1
  8684  069A  0833               	movf	led_para_default@j,w
  8685  069B  2724               	fcall	PL86	;call to abstracted procedure
  8686  069C  3196  26BE  3186   	fcall	___wmul
  8687  069F  3080               	movlw	128
  8688  06A0  00AC               	movwf	??_led_para_default+2
  8689  06A1  3023               	movlw	35
  8690  06A2  00AD               	movwf	??_led_para_default+3
  8691  06A3  0822               	movf	?___wmul,w
  8692  06A4  072C               	addwf	??_led_para_default+2,w
  8693  06A5  00AE               	movwf	??_led_para_default+4
  8694  06A6  0823               	movf	?___wmul+1,w
  8695  06A7  3D2D               	addwfc	??_led_para_default+3,w
  8696  06A8  00AF               	movwf	??_led_para_default+5
  8697  06A9  082A               	movf	??_led_para_default,w
  8698  06AA  072E               	addwf	??_led_para_default+4,w
  8699  06AB  00B0               	movwf	??_led_para_default+6
  8700  06AC  082B               	movf	??_led_para_default+1,w
  8701  06AD  3D2F               	addwfc	??_led_para_default+5,w
  8702  06AE  00B1               	movwf	??_led_para_default+7
  8703  06AF  0830               	movf	??_led_para_default+6,w
  8704  06B0  0086               	movwf	6
  8705  06B1  0831               	movf	??_led_para_default+7,w
  8706  06B2  0087               	movwf	7
  8707  06B3  3064               	movlw	100
  8708  06B4  0081               	movwf	1
  8709  06B5  3004               	movlw	4
  8710  06B6  0AB3               	incf	led_para_default@j,f
  8711  06B7  0233               	subwf	led_para_default@j,w
  8712  06B8  1C03               	skipc
  8713  06B9  2E97               	goto	l6071
  8714  06BA  3005               	movlw	5
  8715  06BB  0AB4               	incf	led_para_default@i_1200,f
  8716  06BC  0234               	subwf	led_para_default@i_1200,w
  8717  06BD  1C03               	skipc
  8718  06BE  2E7F               	goto	l6063
  8719                           
  8720                           ;app_led.c: 207: }
  8721                           ;app_led.c: 208: }
  8722                           ;app_led.c: 210: m_led_para.ble_para.pro_para.point_count = 6;
  8723  06BF  30A9               	movlw	169
  8724  06C0  0086               	movwf	6
  8725  06C1  3023               	movlw	35
  8726  06C2  0087               	movwf	7
  8727  06C3  3006               	movlw	6
  8728  06C4  0081               	movwf	1
  8729                           
  8730                           ;app_led.c: 211: m_led_para.ble_para.pro_para.points[0].hour = 7;
  8731  06C5  30AA               	movlw	170
  8732  06C6  0086               	movwf	6
  8733  06C7  3007               	movlw	7
  8734  06C8  0081               	movwf	1
  8735                           
  8736                           ;app_led.c: 213: m_led_para.ble_para.pro_para.points[1].hour = 8;
  8737  06C9  30B1               	movlw	177
  8738  06CA  0086               	movwf	6
  8739  06CB  3008               	movlw	8
  8740  06CC  0081               	movwf	1
  8741                           
  8742                           ;app_led.c: 215: m_led_para.ble_para.pro_para.points[2].hour = 17;
  8743  06CD  30B8               	movlw	184
  8744  06CE  0086               	movwf	6
  8745  06CF  3011               	movlw	17
  8746  06D0  0081               	movwf	1
  8747                           
  8748                           ;app_led.c: 217: m_led_para.ble_para.pro_para.points[3].hour = 18;
  8749  06D1  30BF               	movlw	191
  8750  06D2  0086               	movwf	6
  8751  06D3  3012               	movlw	18
  8752  06D4  0081               	movwf	1
  8753                           
  8754                           ;app_led.c: 219: m_led_para.ble_para.pro_para.points[4].hour = 22;
  8755  06D5  30C6               	movlw	198
  8756  06D6  0086               	movwf	6
  8757  06D7  3016               	movlw	22
  8758  06D8  0081               	movwf	1
  8759                           
  8760                           ;app_led.c: 221: m_led_para.ble_para.pro_para.points[5].hour = 22;
  8761  06D9  30CD               	movlw	205
  8762  06DA  0086               	movwf	6
  8763  06DB  3016               	movlw	22
  8764  06DC  0081               	movwf	1
  8765                           
  8766                           ;app_led.c: 222: m_led_para.ble_para.pro_para.points[5].minuite = 30;
  8767  06DD  30CE               	movlw	206
  8768  06DE  0086               	movwf	6
  8769  06DF  301E               	movlw	30
  8770  06E0  0081               	movwf	1
  8771                           
  8772                           ;app_led.c: 223: for(uint8_t i = 0; i < 5; i++)
  8773  06E1  01B5               	clrf	led_para_default@i_1207
  8774  06E2                     l6089:	
  8775                           
  8776                           ;app_led.c: 224: {
  8777                           ;app_led.c: 226: m_led_para.ble_para.pro_para.points[1].bright[i] = 100;
  8778  06E2  0835               	movf	led_para_default@i_1207,w
  8779  06E3  00AA               	movwf	??_led_para_default
  8780  06E4  30B3               	movlw	179
  8781  06E5  2713  3186         	fcall	PL12	;call to abstracted procedure
  8782                           
  8783                           ;app_led.c: 227: m_led_para.ble_para.pro_para.points[2].bright[i] = 100;
  8784  06E7  0835               	movf	led_para_default@i_1207,w
  8785  06E8  00AA               	movwf	??_led_para_default
  8786  06E9  30BA               	movlw	186
  8787  06EA  2713  3186         	fcall	PL12	;call to abstracted procedure
  8788  06EC  3005               	movlw	5
  8789  06ED  0AB5               	incf	led_para_default@i_1207,f
  8790  06EE  0235               	subwf	led_para_default@i_1207,w
  8791  06EF  1C03               	skipc
  8792  06F0  2EE2               	goto	l6089
  8793                           
  8794                           ;app_led.c: 231: }
  8795                           ;app_led.c: 232: m_led_para.ble_para.pro_para.points[3].bright[2] = 5;
  8796  06F1  30C3               	movlw	195
  8797  06F2  0086               	movwf	6
  8798  06F3  3023               	movlw	35
  8799  06F4  0087               	movwf	7
  8800  06F5  3005               	movlw	5
  8801  06F6  0081               	movwf	1
  8802                           
  8803                           ;app_led.c: 233: m_led_para.ble_para.pro_para.points[4].bright[2] = 5;
  8804  06F7  30CA               	movlw	202
  8805  06F8  0086               	movwf	6
  8806  06F9  3005               	movlw	5
  8807  06FA  0081               	movwf	1
  8808  06FB  0008               	return
  8809  06FC                     __end_of_led_para_default:	
  8810  06FC                     __ptext25:	
  8811 ;; *************** function _memset *****************
  8812 ;; Defined at:
  8813 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\memset.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  p1              2    2[BANK0 ] PTR void 
  8816 ;;		 -> m_led_para(131), 
  8817 ;;  c               2    4[BANK0 ] int 
  8818 ;;  n               2    6[BANK0 ] unsigned int 
  8819 ;; Auto vars:     Size  Location     Type
  8820 ;;  p               2    8[BANK0 ] PTR unsigned char 
  8821 ;;		 -> m_led_para(131), 
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  2    2[BANK0 ] PTR void 
  8824 ;; Registers used:
  8825 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8826 ;; Tracked objects:
  8827 ;;		On entry : 1F/0
  8828 ;;		On exit  : 1F/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8831 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8832 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8835 ;;Total ram usage:        8 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; Hardware stack levels required when called:    9
  8838 ;; This function calls:
  8839 ;;		Nothing
  8840 ;; This function is called by:
  8841 ;;		_led_para_default
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           
  8846                           ;psect for function _memset
  8847  06FC                     _memset:	
  8848                           
  8849                           ;incstack = 0
  8850                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8851  06FC  0823               	movf	memset@p1+1,w
  8852  06FD  00A9               	movwf	memset@p+1
  8853  06FE  0822               	movf	memset@p1,w
  8854  06FF  00A8               	movwf	memset@p
  8855  0700                     l4079:	
  8856  0700  3001               	movlw	1
  8857  0701  02A6               	subwf	memset@n,f
  8858  0702  3000               	movlw	0
  8859  0703  3BA7               	subwfb	memset@n+1,f
  8860  0704  0F26               	incfsz	memset@n,w
  8861  0705  2F09               	goto	l4075
  8862  0706  0A27               	incf	memset@n+1,w
  8863  0707  1903               	btfsc	3,2
  8864  0708  0008               	return
  8865  0709                     l4075:	
  8866  0709  0828               	movf	memset@p,w
  8867  070A  0086               	movwf	6
  8868  070B  0829               	movf	memset@p+1,w
  8869  070C  0087               	movwf	7
  8870  070D  0824               	movf	memset@c,w
  8871  070E  0081               	movwf	1
  8872  070F  0AA8               	incf	memset@p,f
  8873  0710  1903               	skipnz
  8874  0711  0AA9               	incf	memset@p+1,f
  8875  0712  2F00               	goto	l4079
  8876  0713                     __end_of_memset:	
  8877  0713                     PL12:	
  8878  0713  01AB               	clrf	??_led_para_default+1
  8879  0714  00AC               	movwf	??_led_para_default+2
  8880  0715  3023               	movlw	35
  8881  0716  00AD               	movwf	??_led_para_default+3
  8882  0717  082A               	movf	??_led_para_default,w
  8883  0718  072C               	addwf	??_led_para_default+2,w
  8884  0719  00AE               	movwf	??_led_para_default+4
  8885  071A  082B               	movf	??_led_para_default+1,w
  8886  071B  3D2D               	addwfc	??_led_para_default+3,w
  8887  071C  00AF               	movwf	??_led_para_default+5
  8888  071D  082E               	movf	??_led_para_default+4,w
  8889  071E  0086               	movwf	6
  8890  071F  082F               	movf	??_led_para_default+5,w
  8891  0720  0087               	movwf	7
  8892  0721  3064               	movlw	100
  8893  0722  0081               	movwf	1
  8894  0723  0008               	return
  8895  0724                     __end_ofPL12:	
  8896  0724                     PL86:	
  8897  0724  00A2               	movwf	___wmul@multiplier
  8898  0725  3005               	movlw	5
  8899  0726  01A3               	clrf	___wmul@multiplier+1
  8900  0727  00A4               	movwf	___wmul@multiplicand
  8901  0728  01A5               	clrf	___wmul@multiplicand+1
  8902  0729  0008               	return
  8903  072A                     __end_ofPL86:	
  8904  072A                     PL90:	
  8905  072A  30E8               	movlw	232
  8906  072B  00AA               	movwf	??_led_para_default
  8907  072C  3003               	movlw	3
  8908  072D  00AB               	movwf	??_led_para_default+1
  8909  072E  0008               	return
  8910  072F                     __end_ofPL90:	
  8911  072F                     PL146:	
  8912  072F  3141               	addfsr 1,1
  8913  0730  0801               	movf	1,w
  8914  0731  39F3               	andlw	-13
  8915  0732  3804               	iorlw	4
  8916  0733  0081               	movwf	1
  8917  0734  0008               	return
  8918  0735                     __end_ofPL146:	
  8919                           
  8920                           	psect	text31
  8921  1010                     __ptext31:	
  8922 ;; *************** function _ble_process *****************
  8923 ;; Defined at:
  8924 ;;		line 167 in file "src/app_ble.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;		None
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;		None
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  1    wreg      void 
  8931 ;; Registers used:
  8932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;Total ram usage:        0 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; Hardware stack levels required when called:   12
  8945 ;; This function calls:
  8946 ;;		_ble_decode
  8947 ;;		_ble_ready_to_receive
  8948 ;;		_ble_receive_complete
  8949 ;;		_ble_receive_start
  8950 ;;		_ble_receive_stop
  8951 ;; This function is called by:
  8952 ;;		_main
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           
  8957                           ;psect for function _ble_process
  8958  1010                     _ble_process:	
  8959                           
  8960                           ;app_ble.c: 169: if(ble_ready_to_receive())
  8961                           
  8962                           ;incstack = 0
  8963                           ; Regs used in _ble_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8964  1010  201F  3190         	fcall	_ble_ready_to_receive
  8965  1012  3A00               	xorlw	0
  8966  1013  1903               	skipnz
  8967  1014  2817               	goto	l6711
  8968                           
  8969                           ;app_ble.c: 170: {
  8970                           ;app_ble.c: 171: ble_receive_start();
  8971  1015  202D  3190         	fcall	_ble_receive_start
  8972  1017                     l6711:	
  8973                           
  8974                           ;app_ble.c: 172: }
  8975                           ;app_ble.c: 173: if(ble_receive_complete())
  8976  1017  2026  3190         	fcall	_ble_receive_complete
  8977  1019  3A00               	xorlw	0
  8978  101A  1903               	skipnz
  8979  101B  0008               	return
  8980                           
  8981                           ;app_ble.c: 174: {
  8982                           ;app_ble.c: 175: ble_receive_stop();
  8983  101C  203C               	fcall	_ble_receive_stop
  8984                           
  8985                           ;app_ble.c: 176: ble_decode();
  8986  101D  3188  2839         	ljmp	l6189
  8987  101F                     __end_of_ble_process:	
  8988  101F                     __ptext35:	
  8989 ;; *************** function _ble_ready_to_receive *****************
  8990 ;; Defined at:
  8991 ;;		line 135 in file "src/app_ble.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;		None
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;		None
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  1    wreg      unsigned char 
  8998 ;; Registers used:
  8999 ;;		wreg
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 1D/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9009 ;;Total ram usage:        0 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:    9
  9012 ;; This function calls:
  9013 ;;		Nothing
  9014 ;; This function is called by:
  9015 ;;		_ble_process
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019                           
  9020                           ;psect for function _ble_ready_to_receive
  9021  101F                     _ble_ready_to_receive:	
  9022                           
  9023                           ;app_ble.c: 137: if((PORTAbits.RA2 == 0) && LATCbits.LATC1)
  9024                           
  9025                           ;incstack = 0
  9026                           ; Regs used in _ble_ready_to_receive: [wreg]
  9027  101F  0020               	movlb	0	; select bank0
  9028  1020  190C               	btfsc	12,2	;volatile
  9029  1021  3400               	retlw	0
  9030  1022  0022               	movlb	2	; select bank2
  9031  1023  188E               	btfsc	14,1	;volatile
  9032                           
  9033                           ;app_ble.c: 138: {
  9034                           ;app_ble.c: 139: return 1;
  9035  1024  3401               	retlw	1
  9036                           
  9037                           ;app_ble.c: 140: }
  9038                           ;app_ble.c: 141: return 0;
  9039  1025  3400               	retlw	0
  9040  1026                     __end_of_ble_ready_to_receive:	
  9041  1026                     __ptext34:	
  9042 ;; *************** function _ble_receive_complete *****************
  9043 ;; Defined at:
  9044 ;;		line 152 in file "src/app_ble.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;		None
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;		None
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  1    wreg      unsigned char 
  9051 ;; Registers used:
  9052 ;;		wreg
  9053 ;; Tracked objects:
  9054 ;;		On entry : 1D/0
  9055 ;;		On exit  : 1D/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9062 ;;Total ram usage:        0 bytes
  9063 ;; Hardware stack levels used:    1
  9064 ;; Hardware stack levels required when called:    9
  9065 ;; This function calls:
  9066 ;;		Nothing
  9067 ;; This function is called by:
  9068 ;;		_ble_process
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           
  9073                           ;psect for function _ble_receive_complete
  9074  1026                     _ble_receive_complete:	
  9075                           
  9076                           ;app_ble.c: 154: if(PORTAbits.RA2 && (LATCbits.LATC1 == 0))
  9077                           
  9078                           ;incstack = 0
  9079                           ; Regs used in _ble_receive_complete: [wreg]
  9080  1026  0020               	movlb	0	; select bank0
  9081  1027  1D0C               	btfss	12,2	;volatile
  9082  1028  3400               	retlw	0
  9083  1029  0022               	movlb	2	; select bank2
  9084  102A  1C8E               	btfss	14,1	;volatile
  9085                           
  9086                           ;app_ble.c: 155: {
  9087                           ;app_ble.c: 156: return 1;
  9088  102B  3401               	retlw	1
  9089                           
  9090                           ;app_ble.c: 157: }
  9091                           ;app_ble.c: 158: return 0;
  9092  102C  3400               	retlw	0
  9093  102D                     __end_of_ble_receive_complete:	
  9094  102D                     __ptext33:	
  9095 ;; *************** function _ble_receive_start *****************
  9096 ;; Defined at:
  9097 ;;		line 144 in file "src/app_ble.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;		None
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;		None
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  1    wreg      void 
  9104 ;; Registers used:
  9105 ;;		wreg, status,2
  9106 ;; Tracked objects:
  9107 ;;		On entry : 1D/0
  9108 ;;		On exit  : 1F/2
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9114 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9115 ;;Total ram usage:        1 bytes
  9116 ;; Hardware stack levels used:    1
  9117 ;; Hardware stack levels required when called:    9
  9118 ;; This function calls:
  9119 ;;		Nothing
  9120 ;; This function is called by:
  9121 ;;		_ble_process
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           
  9126                           ;psect for function _ble_receive_start
  9127  102D                     _ble_receive_start:	
  9128                           
  9129                           ;app_ble.c: 146: index = 0;
  9130                           
  9131                           ;incstack = 0
  9132                           ; Regs used in _ble_receive_start: [wreg+status,2]
  9133  102D  0020               	movlb	0	; select bank0
  9134  102E  3005               	movlw	5
  9135  102F  01E3               	clrf	_index
  9136                           
  9137                           ;app_ble.c: 147: checksum = 0;
  9138  1030  01E2               	clrf	_checksum
  9139                           
  9140                           ;app_ble.c: 148: _delay((unsigned long)((800)*(16000000/4000000.0)));
  9141  1031  0020               	movlb	0	; select bank0
  9142  1032  00A2               	movwf	??_ble_receive_start
  9143  1033  3026               	movlw	38
  9144  1034                     u6757:	
  9145  1034  0B89               	decfsz	9,f
  9146  1035  2834               	goto	u6757
  9147  1036  0BA2               	decfsz	??_ble_receive_start,f
  9148  1037  2834               	goto	u6757
  9149  1038  0000               	nop
  9150                           
  9151                           ;app_ble.c: 149: LATCbits.LATC1 = 0;
  9152  1039  0022               	movlb	2	; select bank2
  9153  103A  108E               	bcf	14,1	;volatile
  9154  103B  0008               	return
  9155  103C                     __end_of_ble_receive_start:	
  9156  103C                     __ptext32:	
  9157 ;; *************** function _ble_receive_stop *****************
  9158 ;; Defined at:
  9159 ;;		line 161 in file "src/app_ble.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  1    wreg      void 
  9166 ;; Registers used:
  9167 ;;		wreg
  9168 ;; Tracked objects:
  9169 ;;		On entry : 1D/0
  9170 ;;		On exit  : 1F/2
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9177 ;;Total ram usage:        0 bytes
  9178 ;; Hardware stack levels used:    1
  9179 ;; Hardware stack levels required when called:    9
  9180 ;; This function calls:
  9181 ;;		Nothing
  9182 ;; This function is called by:
  9183 ;;		_ble_process
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187                           
  9188                           ;psect for function _ble_receive_stop
  9189  103C                     _ble_receive_stop:	
  9190                           
  9191                           ;app_ble.c: 163: _delay((unsigned long)((100)*(16000000/4000000.0)));
  9192                           
  9193                           ;incstack = 0
  9194                           ; Regs used in _ble_receive_stop: [wreg]
  9195  103C  3085               	movlw	133
  9196  103D                     u6747:	
  9197  103D  0B89               	decfsz	9,f
  9198  103E  283D               	goto	u6747
  9199  103F  0000               	nop
  9200                           
  9201                           ;app_ble.c: 164: LATCbits.LATC1 = 1;
  9202  1040  0022               	movlb	2	; select bank2
  9203  1041  148E               	bsf	14,1	;volatile
  9204  1042  0008               	return
  9205  1043                     __end_of_ble_receive_stop:	
  9206                           
  9207                           	psect	text36
  9208  0839                     __ptext36:	
  9209 ;; *************** function _ble_decode *****************
  9210 ;; Defined at:
  9211 ;;		line 284 in file "src/app_ble.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;		None
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;		None
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  1    wreg      void 
  9218 ;; Registers used:
  9219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9220 ;; Tracked objects:
  9221 ;;		On entry : 1F/2
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9227 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9228 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;Total ram usage:        2 bytes
  9230 ;; Hardware stack levels used:    1
  9231 ;; Hardware stack levels required when called:   11
  9232 ;; This function calls:
  9233 ;;		___wmul
  9234 ;;		_ble_ota_ack
  9235 ;;		_ble_send_data
  9236 ;;		_led_decrease
  9237 ;;		_led_increase
  9238 ;;		_led_set_bright
  9239 ;;		_led_set_custom
  9240 ;;		_led_set_cycle
  9241 ;;		_led_set_mode
  9242 ;;		_led_set_power
  9243 ;;		_led_set_preview
  9244 ;;		_led_set_pro
  9245 ;;		_led_set_time
  9246 ;;		_led_start_flash
  9247 ;;		_led_start_preview
  9248 ;;		_led_stop_preview
  9249 ;; This function is called by:
  9250 ;;		_ble_process
  9251 ;; This function uses a non-reentrant model
  9252 ;;
  9253                           
  9254                           
  9255                           ;psect for function _ble_decode
  9256  0839                     _ble_decode:	
  9257  0839                     l6189:	
  9258                           ;incstack = 0
  9259                           ; Regs used in _ble_decode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9260                           
  9261                           
  9262                           ;app_ble.c: 286: if(rx_buf[0] != 0x68 || checksum != 0)
  9263  0839  3068               	movlw	104
  9264  083A  0023               	movlb	3	; select bank3
  9265  083B  0620               	xorwf	_rx_buf^(0+384),w
  9266  083C  1D03               	btfss	3,2
  9267  083D  0008               	return
  9268  083E  0020               	movlb	0	; select bank0
  9269  083F  0862               	movf	_checksum,w
  9270  0840  1D03               	btfss	3,2
  9271  0841  0008               	return
  9272  0842  2903               	goto	l6281
  9273  0843                     l6193:	
  9274                           
  9275                           ;app_ble.c: 295: if(index == 4)
  9276  0843  3004               	movlw	4
  9277  0844  0020               	movlb	0	; select bank0
  9278  0845  0663               	xorwf	_index,w
  9279  0846  1D03               	btfss	3,2
  9280  0847  0008               	return
  9281                           
  9282                           ;app_ble.c: 296: {
  9283                           ;app_ble.c: 297: if(led_set_mode(rx_buf[2]))
  9284  0848  0023               	movlb	3	; select bank3
  9285  0849  0822               	movf	(_rx_buf^(0+384)+2),w
  9286  084A  210F  3188         	fcall	_led_set_mode
  9287  084C                     L15:	
  9288  084C  3A00               	xorlw	0
  9289  084D  1903               	skipnz
  9290  084E  0008               	return
  9291  084F                     l6197:	
  9292                           
  9293                           ;app_ble.c: 298: {
  9294                           ;app_ble.c: 299: ble_send_data();
  9295  084F  3190  28B3         	ljmp	l5931
  9296  0851                     l6199:	
  9297                           
  9298                           ;app_ble.c: 304: if(index == 4)
  9299  0851  3004               	movlw	4
  9300  0852  0020               	movlb	0	; select bank0
  9301  0853  0663               	xorwf	_index,w
  9302  0854  1D03               	btfss	3,2
  9303  0855  0008               	return
  9304                           
  9305                           ;app_ble.c: 305: {
  9306                           ;app_ble.c: 306: if(led_set_power(rx_buf[2]))
  9307  0856  0023               	movlb	3	; select bank3
  9308  0857  0822               	movf	(_rx_buf^(0+384)+2),w
  9309  0858  23EE  3188         	fcall	_led_set_power
  9310  085A  284C               	goto	L15
  9311  085B                     l6205:	
  9312                           
  9313                           ;app_ble.c: 313: if(index == 3 + 2 * 5)
  9314  085B  300D               	movlw	13
  9315  085C  0020               	movlb	0	; select bank0
  9316  085D  0663               	xorwf	_index,w
  9317  085E  1D03               	btfss	3,2
  9318  085F  0008               	return
  9319                           
  9320                           ;app_ble.c: 314: {
  9321                           ;app_ble.c: 315: led_set_bright(&rx_buf[2]);
  9322  0860  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
  9323  0861  319E  2E6D         	ljmp	_led_set_bright
  9324  0863                     l6209:	
  9325                           
  9326                           ;app_ble.c: 319: if(index == 3)
  9327  0863  3003               	movlw	3
  9328  0864  0020               	movlb	0	; select bank0
  9329  0865  0663               	xorwf	_index,w
  9330  0866  1D03               	btfss	3,2
  9331  0867  0008               	return
  9332  0868  284F               	goto	l6197
  9333  0869                     l6213:	
  9334                           
  9335                           ;app_ble.c: 325: if(index == 4)
  9336  0869  3004               	movlw	4
  9337  086A  0020               	movlb	0	; select bank0
  9338  086B  0663               	xorwf	_index,w
  9339  086C  1D03               	btfss	3,2
  9340  086D  0008               	return
  9341                           
  9342                           ;app_ble.c: 326: {
  9343                           ;app_ble.c: 327: if(led_set_custom(rx_buf[2]))
  9344  086E  0023               	movlb	3	; select bank3
  9345  086F  0822               	movf	(_rx_buf^(0+384)+2),w
  9346  0870  2176  3188         	fcall	_led_set_custom
  9347  0872  284C               	goto	L15
  9348  0873                     l6219:	
  9349                           
  9350                           ;app_ble.c: 334: if(index == 2 * 5 + 14)
  9351  0873  3018               	movlw	24
  9352  0874  0020               	movlb	0	; select bank0
  9353  0875  0663               	xorwf	_index,w
  9354  0876  1D03               	btfss	3,2
  9355  0877  0008               	return
  9356                           
  9357                           ;app_ble.c: 335: {
  9358                           ;app_ble.c: 336: if(led_set_cycle(&rx_buf[2]))
  9359  0878  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
  9360  0879  21E6  3188         	fcall	_led_set_cycle
  9361  087B  284C               	goto	L15
  9362  087C                     l6225:	
  9363                           
  9364                           ;app_ble.c: 343: if(index == 5)
  9365  087C  3005               	movlw	5
  9366  087D  0020               	movlb	0	; select bank0
  9367  087E  0663               	xorwf	_index,w
  9368  087F  1D03               	btfss	3,2
  9369  0880  0008               	return
  9370                           
  9371                           ;app_ble.c: 344: {
  9372                           ;app_ble.c: 345: led_increase(rx_buf[2], rx_buf[3]);
  9373  0881  0023               	movlb	3	; select bank3
  9374  0882  0823               	movf	(_rx_buf^(0+384)+3),w
  9375  0883  0020               	movlb	0	; select bank0
  9376  0884  00AB               	movwf	led_increase@delt
  9377  0885  0023               	movlb	3	; select bank3
  9378  0886  0822               	movf	(_rx_buf^(0+384)+2),w
  9379  0887  318F  2F9B         	ljmp	_led_increase
  9380  0889                     l6229:	
  9381                           
  9382                           ;app_ble.c: 349: if(index == 5)
  9383  0889  3005               	movlw	5
  9384  088A  0020               	movlb	0	; select bank0
  9385  088B  0663               	xorwf	_index,w
  9386  088C  1D03               	btfss	3,2
  9387  088D  0008               	return
  9388                           
  9389                           ;app_ble.c: 350: {
  9390                           ;app_ble.c: 351: led_decrease(rx_buf[2], rx_buf[3]);
  9391  088E  0023               	movlb	3	; select bank3
  9392  088F  0823               	movf	(_rx_buf^(0+384)+3),w
  9393  0890  0020               	movlb	0	; select bank0
  9394  0891  00AB               	movwf	led_decrease@delt
  9395  0892  0023               	movlb	3	; select bank3
  9396  0893  0822               	movf	(_rx_buf^(0+384)+2),w
  9397  0894  3190  2843         	ljmp	_led_decrease
  9398  0896                     l6233:	
  9399                           
  9400                           ;app_ble.c: 355: if(index == 3 + 2 * 5)
  9401  0896  300D               	movlw	13
  9402  0897  0020               	movlb	0	; select bank0
  9403  0898  0663               	xorwf	_index,w
  9404  0899  1D03               	btfss	3,2
  9405  089A  0008               	return
  9406                           
  9407                           ;app_ble.c: 356: {
  9408                           ;app_ble.c: 357: if(led_set_preview(&rx_buf[2]))
  9409  089B  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
  9410  089C  3188  2003  3188   	fcall	_led_set_preview
  9411  089F  3A00               	xorlw	0
  9412  08A0  1903               	skipnz
  9413  08A1  0008               	return
  9414                           
  9415                           ;app_ble.c: 358: {
  9416                           ;app_ble.c: 359: led_start_preview();
  9417  08A2  2A11               	ljmp	l4625
  9418  08A3                     l6239:	
  9419                           
  9420                           ;app_ble.c: 364: if(index == 3)
  9421  08A3  3003               	movlw	3
  9422  08A4  0020               	movlb	0	; select bank0
  9423  08A5  0663               	xorwf	_index,w
  9424  08A6  1D03               	btfss	3,2
  9425  08A7  0008               	return
  9426                           
  9427                           ;app_ble.c: 365: {
  9428                           ;app_ble.c: 366: led_stop_preview();
  9429  08A8  2A15               	ljmp	l4629
  9430  08A9                     l6243:	
  9431                           
  9432                           ;app_ble.c: 370: if(index == 10)
  9433  08A9  300A               	movlw	10
  9434  08AA  0020               	movlb	0	; select bank0
  9435  08AB  0663               	xorwf	_index,w
  9436  08AC  1D03               	btfss	3,2
  9437  08AD  0008               	return
  9438                           
  9439                           ;app_ble.c: 371: {
  9440                           ;app_ble.c: 372: led_set_time(&rx_buf[2]);
  9441  08AE  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
  9442  08AF  2142  3188         	fcall	_led_set_time
  9443  08B1  284F               	goto	l6197
  9444  08B2                     l6249:	
  9445                           
  9446                           ;app_ble.c: 377: if(index == 3)
  9447  08B2  3003               	movlw	3
  9448  08B3  0020               	movlb	0	; select bank0
  9449  08B4  0663               	xorwf	_index,w
  9450  08B5  1D03               	btfss	3,2
  9451  08B6  0008               	return
  9452                           
  9453                           ;app_ble.c: 378: {
  9454                           ;app_ble.c: 379: led_start_flash();
  9455  08B7  2A0D               	ljmp	l4649
  9456  08B8                     l6253:	
  9457                           
  9458                           ;app_ble.c: 383: if(rx_buf[2] >= 4 && rx_buf[2] <= 10 && index == rx_buf[2]*(2+5)+4)
  9459  08B8  3004               	movlw	4
  9460  08B9  0222               	subwf	(_rx_buf^(0+384)+2),w
  9461  08BA  1C03               	skipc
  9462  08BB  0008               	return
  9463  08BC  300B               	movlw	11
  9464  08BD  0222               	subwf	(_rx_buf^(0+384)+2),w
  9465  08BE  1803               	skipnc
  9466  08BF  0008               	return
  9467  08C0  0822               	movf	(_rx_buf^(0+384)+2),w
  9468  08C1  0020               	movlb	0	; select bank0
  9469  08C2  3197  27BB  3188   	fcall	PL44	;call to abstracted procedure
  9470  08C5  3196  26BE  3188   	fcall	___wmul
  9471  08C8  0822               	movf	?___wmul,w
  9472  08C9  3E04               	addlw	4
  9473  08CA  00B8               	movwf	??_ble_decode
  9474  08CB  3000               	movlw	0
  9475  08CC  3D23               	addwfc	?___wmul+1,w
  9476  08CD  00B9               	movwf	??_ble_decode+1
  9477  08CE  0863               	movf	_index,w
  9478  08CF  0638               	xorwf	??_ble_decode,w
  9479  08D0  0439               	iorwf	??_ble_decode+1,w
  9480  08D1  1D03               	skipz
  9481  08D2  0008               	return
  9482                           
  9483                           ;app_ble.c: 384: {
  9484                           ;app_ble.c: 385: if(led_set_pro(&rx_buf[2]))
  9485  08D3  30A2               	movlw	(low ((_rx_buf| (0+256)+2)))& (0+255)
  9486  08D4  3191  218A  3188   	fcall	_led_set_pro
  9487  08D7  284C               	goto	L15
  9488  08D8                     l6263:	
  9489                           
  9490                           ;app_ble.c: 410: if(index == 5)
  9491  08D8  3005               	movlw	5
  9492  08D9  0020               	movlb	0	; select bank0
  9493  08DA  0663               	xorwf	_index,w
  9494  08DB  1D03               	btfss	3,2
  9495  08DC  0008               	return
  9496                           
  9497                           ;app_ble.c: 411: {
  9498                           ;app_ble.c: 412: INTCONbits.GIE = 0;
  9499  08DD  138B               	bcf	11,7	;volatile
  9500                           
  9501                           ;app_ble.c: 413: NVMADR = 8192 - 1;
  9502  08DE  301F               	movlw	31
  9503  08DF  0031               	movlb	17	; select bank17
  9504  08E0  0092               	movwf	18	;volatile
  9505  08E1  30FF               	movlw	255
  9506  08E2  0091               	movwf	17	;volatile
  9507                           
  9508                           ;app_ble.c: 414: NVMCON1 = 0x94;
  9509  08E3  3094               	movlw	148
  9510  08E4  0095               	movwf	21	;volsfr
  9511                           
  9512                           ;app_ble.c: 415: NVMCON2 = 0x55;
  9513  08E5  3055               	movlw	85
  9514  08E6  0096               	movwf	22	;volsfr
  9515                           
  9516                           ;app_ble.c: 416: NVMCON2 = 0xAA;
  9517  08E7  30AA               	movlw	170
  9518  08E8  0096               	movwf	22	;volsfr
  9519                           
  9520                           ;app_ble.c: 417: NVMCON1bits.WR = 1;
  9521  08E9  1495               	bsf	21,1	;volsfr
  9522                           
  9523                           ;app_ble.c: 418: __nop();
  9524  08EA  0000               	nop
  9525                           
  9526                           ;app_ble.c: 419: __nop();
  9527  08EB  0000               	nop
  9528  08EC                     l509:	
  9529                           ;app_ble.c: 420: while(NVMCON1bits.WR);
  9530                           
  9531  08EC  0031               	movlb	17	; select bank17
  9532  08ED  1895               	btfsc	21,1	;volsfr
  9533  08EE  28EC               	goto	l509
  9534                           
  9535                           ;app_ble.c: 421: NVMCON1bits.WREN = 0;
  9536  08EF  1115               	bcf	21,2	;volsfr
  9537                           
  9538                           ;app_ble.c: 422: INTCONbits.GIE = 1;
  9539  08F0  178B               	bsf	11,7	;volatile
  9540                           
  9541                           ;app_ble.c: 423: ble_ota_ack();
  9542  08F1  3190  20A1  3188   	fcall	_ble_ota_ack
  9543                           
  9544                           ;app_ble.c: 424: _delay((unsigned long)((96)*(16000000/4000.0)));
  9545  08F4  3002               	movlw	2
  9546  08F5  0020               	movlb	0	; select bank0
  9547  08F6  00B9               	movwf	??_ble_decode+1
  9548  08F7  30F3               	movlw	243
  9549  08F8  00B8               	movwf	??_ble_decode
  9550  08F9  30B0               	movlw	176
  9551  08FA                     u6767:	
  9552  08FA  0B89               	decfsz	9,f
  9553  08FB  28FA               	goto	u6767
  9554  08FC  0BB8               	decfsz	??_ble_decode,f
  9555  08FD  28FA               	goto	u6767
  9556  08FE  0BB9               	decfsz	??_ble_decode+1,f
  9557  08FF  28FA               	goto	u6767
  9558  0900  0000               	nop
  9559  0901  0001               	reset	;# 
  9560  0902  0008               	return
  9561  0903                     l6281:	
  9562  0903  0023               	movlb	3	; select bank3
  9563  0904  0821               	movf	(_rx_buf^(0+384)+1),w
  9564                           
  9565                           ; Switch size 1, requested type "space"
  9566                           ; Number of cases is 14, Range of values is 0 to 16
  9567                           ; switch strategies available:
  9568                           ; Name         Instructions Cycles
  9569                           ; direct_byte           40     6 (fixed)
  9570                           ; simple_byte           43    22 (average)
  9571                           ; jumptable            260     6 (fixed)
  9572                           ;	Chosen strategy is direct_byte
  9573  0905  0084               	movwf	4
  9574  0906  3011               	movlw	17
  9575  0907  0204               	subwf	4,w
  9576  0908  1803               	skipnc
  9577  0909  0008               	return
  9578  090A  3198               	movlp	high S6787
  9579  090B  3504               	lslf	4,w
  9580  090C  3E22               	addlw	low S6787
  9581  090D  0082               	movwf	2
  9582  090E                     l472:	
  9583  090E  0008               	return
  9584  090F                     __end_of_ble_decode:	
  9585  090F                     __ptext46:	
  9586 ;; *************** function _led_set_mode *****************
  9587 ;; Defined at:
  9588 ;;		line 1993 in file "src/app_led.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;  m               1    wreg     unsigned char 
  9591 ;; Auto vars:     Size  Location     Type
  9592 ;;  m               1    8[BANK0 ] unsigned char 
  9593 ;; Return value:  Size  Location     Type
  9594 ;;                  1    wreg      unsigned char 
  9595 ;; Registers used:
  9596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9597 ;; Tracked objects:
  9598 ;;		On entry : 1F/3
  9599 ;;		On exit  : 1F/0
  9600 ;;		Unchanged: 0/0
  9601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9604 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9605 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9606 ;;Total ram usage:        2 bytes
  9607 ;; Hardware stack levels used:    1
  9608 ;; Hardware stack levels required when called:   10
  9609 ;; This function calls:
  9610 ;;		_led_prepare_to_save
  9611 ;;		_led_turnoff_ramp
  9612 ;;		_led_turnon_ramp
  9613 ;; This function is called by:
  9614 ;;		_ble_decode
  9615 ;; This function uses a non-reentrant model
  9616 ;;
  9617                           
  9618                           
  9619                           ;psect for function _led_set_mode
  9620  090F                     _led_set_mode:	
  9621                           
  9622                           ;incstack = 0
  9623                           ; Regs used in _led_set_mode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9624                           ;led_set_mode@m stored from wreg
  9625  090F  0020               	movlb	0	; select bank0
  9626  0910  00A8               	movwf	led_set_mode@m
  9627                           
  9628                           ;app_led.c: 1995: if(led_run_para.mFind || led_run_para.mPrev)
  9629  0911  185C               	btfsc	_led_run_para,0
  9630  0912  3400               	retlw	0
  9631  0913  18DC               	btfsc	_led_run_para,1
  9632                           
  9633                           ;app_led.c: 1996: {
  9634                           ;app_led.c: 1997: return 0;
  9635  0914  3400               	retlw	0
  9636                           
  9637                           ;app_led.c: 1998: }
  9638                           ;app_led.c: 2003: m_led_para.ble_para.mMode = m;
  9639  0915  306D               	movlw	109
  9640  0916  0086               	movwf	6
  9641  0917  3023               	movlw	35
  9642  0918  0087               	movwf	7
  9643  0919  3146               	addfsr 1,6
  9644  091A  0801               	movf	1,w
  9645  091B  0628               	xorwf	led_set_mode@m,w
  9646  091C  39FC               	andlw	-4
  9647  091D  0628               	xorwf	led_set_mode@m,w
  9648  091E  0081               	movwf	1
  9649                           
  9650                           ;app_led.c: 2004: if(m != 1 && m != 2)
  9651  091F  0328               	decf	led_set_mode@m,w
  9652  0920  1903               	btfsc	3,2
  9653  0921  2932               	goto	l4459
  9654  0922  3002               	movlw	2
  9655  0923  0628               	xorwf	led_set_mode@m,w
  9656  0924  1903               	btfsc	3,2
  9657  0925  2932               	goto	l4459
  9658                           
  9659                           ;app_led.c: 2005: {
  9660                           ;app_led.c: 2006: if(m_led_para.ble_para.manual_para.mOn)
  9661  0926  2218  3188         	fcall	PL52	;call to abstracted procedure
  9662  0928  1C01               	btfss	1,0
  9663  0929  292E               	goto	l4457
  9664                           
  9665                           ;app_led.c: 2007: {
  9666                           ;app_led.c: 2016: led_turnon_ramp();
  9667  092A  318D  25F6  3188   	fcall	_led_turnon_ramp
  9668                           
  9669                           ;app_led.c: 2020: }
  9670  092D  2940               	goto	l4461
  9671  092E                     l4457:	
  9672                           
  9673                           ;app_led.c: 2021: else
  9674                           ;app_led.c: 2022: {
  9675                           ;app_led.c: 2023: led_turnoff_ramp();
  9676  092E  318E  2699  3188   	fcall	_led_turnoff_ramp
  9677  0931  2940               	goto	l4461
  9678  0932                     l4459:	
  9679                           
  9680                           ;app_led.c: 2027: else
  9681                           ;app_led.c: 2028: {
  9682                           ;app_led.c: 2029: m_led_para.last_mode = m;
  9683  0932  0828               	movf	led_set_mode@m,w
  9684  0933  00A7               	movwf	??_led_set_mode
  9685  0934  306D               	movlw	109
  9686  0935  0086               	movwf	6
  9687  0936  3023               	movlw	35
  9688  0937  0087               	movwf	7
  9689  0938  3141               	addfsr 1,1
  9690  0939  0DA7               	rlf	??_led_set_mode,f
  9691  093A  0DA7               	rlf	??_led_set_mode,f
  9692  093B  0801               	movf	1,w
  9693  093C  0627               	xorwf	??_led_set_mode,w
  9694  093D  39F3               	andlw	-13
  9695  093E  0627               	xorwf	??_led_set_mode,w
  9696  093F  0081               	movwf	1
  9697  0940                     l4461:	
  9698                           
  9699                           ;app_led.c: 2030: }
  9700                           ;app_led.c: 2032: led_prepare_to_save();
  9701  0940  2175               	fcall	_led_prepare_to_save
  9702                           
  9703                           ;app_led.c: 2033: return 1;
  9704  0941  3401               	retlw	1
  9705  0942                     __end_of_led_set_mode:	
  9706  0942                     __ptext40:	
  9707 ;; *************** function _led_set_time *****************
  9708 ;; Defined at:
  9709 ;;		line 2206 in file "src/app_led.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;  ptime           1    wreg     PTR const unsigned char 
  9712 ;;		 -> rx_buf(80), 
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;  ptime           1    7[BANK0 ] PTR const unsigned char 
  9715 ;;		 -> rx_buf(80), 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  1    wreg      void 
  9718 ;; Registers used:
  9719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9720 ;; Tracked objects:
  9721 ;;		On entry : 1F/0
  9722 ;;		On exit  : 1F/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9726 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9728 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9729 ;;Total ram usage:        1 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; Hardware stack levels required when called:   10
  9732 ;; This function calls:
  9733 ;;		_led_indicate_ble
  9734 ;;		_led_prepare_to_save
  9735 ;;		_led_turnoff_ramp
  9736 ;;		_led_turnon_ramp
  9737 ;;		_rtc_set
  9738 ;; This function is called by:
  9739 ;;		_ble_decode
  9740 ;; This function uses a non-reentrant model
  9741 ;;
  9742                           
  9743                           
  9744                           ;psect for function _led_set_time
  9745  0942                     _led_set_time:	
  9746                           
  9747                           ;incstack = 0
  9748                           ; Regs used in _led_set_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9749                           ;led_set_time@ptime stored from wreg
  9750  0942  00A7               	movwf	led_set_time@ptime
  9751                           
  9752                           ;app_led.c: 2208: rtc_set(ptime);
  9753  0943  2160               	fcall	_rtc_set
  9754                           
  9755                           ;app_led.c: 2210: if(m_led_para.ble_para.mMode == 0)
  9756  0944  318E  26AD  3188   	fcall	PL10	;call to abstracted procedure
  9757                           
  9758                           ;app_led.c: 2211: {
  9759                           ;app_led.c: 2212: if(m_led_para.ble_para.manual_para.mOn)
  9760  0947  318F  2751  3188   	fcall	PL124	;call to abstracted procedure
  9761  094A  1D03               	skipz
  9762  094B  2959               	goto	L16
  9763  094C  3147               	addfsr 1,7
  9764  094D  1C01               	btfss	1,0
  9765  094E  2953               	goto	l4641
  9766                           
  9767                           ;app_led.c: 2213: {
  9768                           ;app_led.c: 2214: led_turnon_ramp();
  9769  094F  318D  25F6  3188   	fcall	_led_turnon_ramp
  9770                           
  9771                           ;app_led.c: 2215: }
  9772  0952  2956               	goto	l4643
  9773  0953                     l4641:	
  9774                           
  9775                           ;app_led.c: 2216: else
  9776                           ;app_led.c: 2217: {
  9777                           ;app_led.c: 2218: led_turnoff_ramp();
  9778  0953  318E  2699  3188   	fcall	_led_turnoff_ramp
  9779  0956                     l4643:	
  9780                           
  9781                           ;app_led.c: 2219: }
  9782                           ;app_led.c: 2220: }
  9783                           ;app_led.c: 2221: m_led_para.mState = 3;
  9784  0956  318F  2751  3188   	fcall	PL124	;call to abstracted procedure
  9785  0959                     L16:	
  9786  0959  3003               	movlw	3
  9787  095A  3141               	addfsr 1,1
  9788  095B  0481               	iorwf	1,f
  9789                           
  9790                           ;app_led.c: 2222: led_indicate_ble();
  9791  095C  318E  26A4  3188   	fcall	_led_indicate_ble
  9792                           
  9793                           ;app_led.c: 2223: led_prepare_to_save();
  9794  095F  2BE0               	ljmp	PL142
  9795  0960                     __end_of_led_set_time:	
  9796  0960                     __ptext41:	
  9797 ;; *************** function _rtc_set *****************
  9798 ;; Defined at:
  9799 ;;		line 110 in file "src/app_rtc.c"
  9800 ;; Parameters:    Size  Location     Type
  9801 ;;  ptime           1    wreg     PTR const unsigned char 
  9802 ;;		 -> rx_buf(80), 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;  ptime           1    2[BANK0 ] PTR const unsigned char 
  9805 ;;		 -> rx_buf(80), 
  9806 ;;  i               1    3[BANK0 ] unsigned char 
  9807 ;; Return value:  Size  Location     Type
  9808 ;;                  1    wreg      void 
  9809 ;; Registers used:
  9810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9811 ;; Tracked objects:
  9812 ;;		On entry : 1F/0
  9813 ;;		On exit  : 1F/0
  9814 ;;		Unchanged: 0/0
  9815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9819 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;Total ram usage:        2 bytes
  9821 ;; Hardware stack levels used:    1
  9822 ;; Hardware stack levels required when called:    9
  9823 ;; This function calls:
  9824 ;;		Nothing
  9825 ;; This function is called by:
  9826 ;;		_led_set_time
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           
  9831                           ;psect for function _rtc_set
  9832  0960                     _rtc_set:	
  9833                           
  9834                           ;incstack = 0
  9835                           ; Regs used in _rtc_set: [wreg-fsr1h+status,2+status,0]
  9836                           ;rtc_set@ptime stored from wreg
  9837  0960  00A2               	movwf	rtc_set@ptime
  9838                           
  9839                           ;app_rtc.c: 112: (INTCONbits.GIE = 0);
  9840  0961  138B               	bcf	11,7	;volatile
  9841                           
  9842                           ;app_rtc.c: 113: for(uint8_t i = 0; i < 7; i++)
  9843  0962  01A3               	clrf	rtc_set@i
  9844  0963                     l4033:	
  9845                           
  9846                           ;app_rtc.c: 114: {
  9847                           ;app_rtc.c: 115: m_current_time.array[i] = *ptime++;
  9848  0963  0823               	movf	rtc_set@i,w
  9849  0964  3E55               	addlw	(low (_m_current_time| 0))& (0+255)
  9850  0965  0086               	movwf	6
  9851  0966  0187               	clrf	7
  9852  0967  0822               	movf	rtc_set@ptime,w
  9853  0968  0084               	movwf	4
  9854  0969  3001               	movlw	1	; select bank2/3
  9855  096A  0085               	movwf	5
  9856  096B  0800               	movf	0,w
  9857  096C  0081               	movwf	1
  9858  096D  3007               	movlw	7
  9859  096E  0AA2               	incf	rtc_set@ptime,f
  9860  096F  0AA3               	incf	rtc_set@i,f
  9861  0970  0223               	subwf	rtc_set@i,w
  9862  0971  1C03               	skipc
  9863  0972  2963               	goto	l4033
  9864                           
  9865                           ;app_rtc.c: 116: }
  9866                           ;app_rtc.c: 117: (INTCONbits.GIE = 1);
  9867  0973  178B               	bsf	11,7	;volatile
  9868  0974  0008               	return
  9869  0975                     __end_of_rtc_set:	
  9870  0975                     __ptext57:	
  9871 ;; *************** function _led_prepare_to_save *****************
  9872 ;; Defined at:
  9873 ;;		line 1919 in file "src/app_led.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;		None
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;		None
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  1    wreg      void 
  9880 ;; Registers used:
  9881 ;;		wreg
  9882 ;; Tracked objects:
  9883 ;;		On entry : 1D/2
  9884 ;;		On exit  : 1F/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;Total ram usage:        0 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:    9
  9894 ;; This function calls:
  9895 ;;		Nothing
  9896 ;; This function is called by:
  9897 ;;		_led_set_mode
  9898 ;;		_led_set_power
  9899 ;;		_led_set_bright
  9900 ;;		_led_set_custom
  9901 ;;		_led_set_cycle
  9902 ;;		_led_set_pro
  9903 ;;		_led_increase
  9904 ;;		_led_decrease
  9905 ;;		_led_set_time
  9906 ;; This function uses a non-reentrant model
  9907 ;;
  9908                           
  9909                           
  9910                           ;psect for function _led_prepare_to_save
  9911  0975                     _led_prepare_to_save:	
  9912                           
  9913                           ;app_led.c: 1921: led_run_para.mSave = 1;
  9914                           
  9915                           ;app_led.c: 1922: led_run_para.save_delay_count = 3;
  9916                           
  9917                           ;incstack = 0
  9918                           ; Regs used in _led_prepare_to_save: [wreg]
  9919  0975  2BE0               	ljmp	PL142	;call to abstracted procedure
  9920  0976                     __end_of_led_prepare_to_save:	
  9921  0976                     __ptext50:	
  9922 ;; *************** function _led_set_custom *****************
  9923 ;; Defined at:
  9924 ;;		line 2094 in file "src/app_led.c"
  9925 ;; Parameters:    Size  Location     Type
  9926 ;;  idx             1    wreg     unsigned char 
  9927 ;; Auto vars:     Size  Location     Type
  9928 ;;  idx             1   22[BANK0 ] unsigned char 
  9929 ;;  i               1   23[BANK0 ] unsigned char 
  9930 ;; Return value:  Size  Location     Type
  9931 ;;                  1    wreg      unsigned char 
  9932 ;; Registers used:
  9933 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9934 ;; Tracked objects:
  9935 ;;		On entry : 1F/3
  9936 ;;		On exit  : 1F/0
  9937 ;;		Unchanged: 0/0
  9938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9940 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9941 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9942 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;Total ram usage:       15 bytes
  9944 ;; Hardware stack levels used:    1
  9945 ;; Hardware stack levels required when called:   10
  9946 ;; This function calls:
  9947 ;;		___lwdiv
  9948 ;;		___wmul
  9949 ;;		_led_prepare_to_save
  9950 ;; This function is called by:
  9951 ;;		_ble_decode
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           
  9956                           ;psect for function _led_set_custom
  9957  0976                     _led_set_custom:	
  9958                           
  9959                           ;incstack = 0
  9960                           ; Regs used in _led_set_custom: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9961                           ;led_set_custom@idx stored from wreg
  9962  0976  0020               	movlb	0	; select bank0
  9963  0977  00B6               	movwf	led_set_custom@idx
  9964                           
  9965                           ;app_led.c: 2106: if(m_led_para.ble_para.manual_para.mOn && idx < 4)
  9966  0978  2218  3188         	fcall	PL52	;call to abstracted procedure
  9967  097A  1C01               	btfss	1,0
  9968  097B  3400               	retlw	0
  9969  097C  3004               	movlw	4
  9970  097D  0236               	subwf	led_set_custom@idx,w
  9971  097E  1803               	skipnc
  9972  097F  3400               	retlw	0
  9973                           
  9974                           ;app_led.c: 2107: {
  9975                           ;app_led.c: 2108: for(uint8_t i = 0; i < 5; i++)
  9976  0980  01B7               	clrf	led_set_custom@i
  9977  0981                     l5999:	
  9978                           
  9979                           ;app_led.c: 2109: {
  9980                           ;app_led.c: 2110: m_led_para.ble_para.manual_para.mCustomBright[idx][i] = m_led_para.ble
      +                          _para.manual_para.mBright[i]/10;
  9981  0981  300A               	movlw	10
  9982  0982  00A2               	movwf	___lwdiv@divisor
  9983  0983  01A3               	clrf	___lwdiv@divisor+1
  9984  0984  0837               	movf	led_set_custom@i,w
  9985  0985  00A9               	movwf	??_led_set_custom
  9986  0986  3076               	movlw	118
  9987  0987  01AA               	clrf	??_led_set_custom+1
  9988  0988  35A9               	lslf	??_led_set_custom,f
  9989  0989  0DAA               	rlf	??_led_set_custom+1,f
  9990  098A  00AB               	movwf	??_led_set_custom+2
  9991  098B  3023               	movlw	35
  9992  098C  00AC               	movwf	??_led_set_custom+3
  9993  098D  0829               	movf	??_led_set_custom,w
  9994  098E  072B               	addwf	??_led_set_custom+2,w
  9995  098F  0086               	movwf	6
  9996  0990  082A               	movf	??_led_set_custom+1,w
  9997  0991  3D2C               	addwfc	??_led_set_custom+3,w
  9998  0992  0087               	movwf	7
  9999  0993  3F40               	moviw [0]fsr1
 10000  0994  00A4               	movwf	___lwdiv@dividend
 10001  0995  3F41               	moviw [1]fsr1
 10002  0996  00A5               	movwf	___lwdiv@dividend+1
 10003  0997  21C1               	fcall	___lwdiv
 10004  0998  0822               	movf	?___lwdiv,w
 10005  0999  00AD               	movwf	??_led_set_custom+4
 10006  099A  0837               	movf	led_set_custom@i,w
 10007  099B  00AE               	movwf	??_led_set_custom+5
 10008  099C  01AF               	clrf	??_led_set_custom+6
 10009  099D  0836               	movf	led_set_custom@idx,w
 10010  099E  3187  2724  3188   	fcall	PL86	;call to abstracted procedure
 10011  09A1  3196  26BE  3188   	fcall	___wmul
 10012  09A4  3080               	movlw	128
 10013  09A5  00B0               	movwf	??_led_set_custom+7
 10014  09A6  3023               	movlw	35
 10015  09A7  00B1               	movwf	??_led_set_custom+8
 10016  09A8  0822               	movf	?___wmul,w
 10017  09A9  0730               	addwf	??_led_set_custom+7,w
 10018  09AA  00B2               	movwf	??_led_set_custom+9
 10019  09AB  0823               	movf	?___wmul+1,w
 10020  09AC  3D31               	addwfc	??_led_set_custom+8,w
 10021  09AD  00B3               	movwf	??_led_set_custom+10
 10022  09AE  082E               	movf	??_led_set_custom+5,w
 10023  09AF  0732               	addwf	??_led_set_custom+9,w
 10024  09B0  00B4               	movwf	??_led_set_custom+11
 10025  09B1  082F               	movf	??_led_set_custom+6,w
 10026  09B2  3D33               	addwfc	??_led_set_custom+10,w
 10027  09B3  00B5               	movwf	??_led_set_custom+12
 10028  09B4  0834               	movf	??_led_set_custom+11,w
 10029  09B5  0086               	movwf	6
 10030  09B6  0835               	movf	??_led_set_custom+12,w
 10031  09B7  0087               	movwf	7
 10032  09B8  082D               	movf	??_led_set_custom+4,w
 10033  09B9  0081               	movwf	1
 10034  09BA  3005               	movlw	5
 10035  09BB  0AB7               	incf	led_set_custom@i,f
 10036  09BC  0237               	subwf	led_set_custom@i,w
 10037  09BD  1C03               	skipc
 10038  09BE  2981               	goto	l5999
 10039                           
 10040                           ;app_led.c: 2111: }
 10041                           ;app_led.c: 2112: led_prepare_to_save();
 10042  09BF  2175               	fcall	_led_prepare_to_save
 10043                           
 10044                           ;app_led.c: 2113: return 1;
 10045  09C0  3401               	retlw	1
 10046  09C1                     __end_of_led_set_custom:	
 10047                           ;app_led.c: 2114: }
 10048                           ;app_led.c: 2115: return 0;
 10049                           
 10050  09C1                     __ptext52:	
 10051 ;; *************** function ___lwdiv *****************
 10052 ;; Defined at:
 10053 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 10054 ;; Parameters:    Size  Location     Type
 10055 ;;  divisor         2    2[BANK0 ] unsigned int 
 10056 ;;  dividend        2    4[BANK0 ] unsigned int 
 10057 ;; Auto vars:     Size  Location     Type
 10058 ;;  quotient        2    6[BANK0 ] unsigned int 
 10059 ;;  counter         1    8[BANK0 ] unsigned char 
 10060 ;; Return value:  Size  Location     Type
 10061 ;;                  2    2[BANK0 ] unsigned int 
 10062 ;; Registers used:
 10063 ;;		wreg, status,2, status,0
 10064 ;; Tracked objects:
 10065 ;;		On entry : 1F/0
 10066 ;;		On exit  : 1F/0
 10067 ;;		Unchanged: 0/0
 10068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10069 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10070 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10072 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10073 ;;Total ram usage:        7 bytes
 10074 ;; Hardware stack levels used:    1
 10075 ;; Hardware stack levels required when called:    9
 10076 ;; This function calls:
 10077 ;;		Nothing
 10078 ;; This function is called by:
 10079 ;;		_led_set_custom
 10080 ;; This function uses a non-reentrant model
 10081 ;;
 10082                           
 10083                           
 10084                           ;psect for function ___lwdiv
 10085  09C1                     ___lwdiv:	
 10086                           
 10087                           ;incstack = 0
 10088                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10089  09C1  01A6               	clrf	___lwdiv@quotient
 10090  09C2  01A7               	clrf	___lwdiv@quotient+1
 10091  09C3  0822               	movf	___lwdiv@divisor,w
 10092  09C4  0423               	iorwf	___lwdiv@divisor+1,w
 10093  09C5  1903               	btfsc	3,2
 10094  09C6  29E1               	goto	l4223
 10095  09C7  01A8               	clrf	___lwdiv@counter
 10096  09C8                     L17:	
 10097  09C8  0AA8               	incf	___lwdiv@counter,f
 10098  09C9  1BA3               	btfsc	___lwdiv@divisor+1,7
 10099  09CA  29CE               	goto	l4211
 10100  09CB  35A2               	lslf	___lwdiv@divisor,f
 10101  09CC  0DA3               	rlf	___lwdiv@divisor+1,f
 10102  09CD  29C8               	goto	L17
 10103  09CE                     l4211:	
 10104  09CE  35A6               	lslf	___lwdiv@quotient,f
 10105  09CF  0DA7               	rlf	___lwdiv@quotient+1,f
 10106  09D0  0823               	movf	___lwdiv@divisor+1,w
 10107  09D1  0225               	subwf	___lwdiv@dividend+1,w
 10108  09D2  1D03               	skipz
 10109  09D3  29D6               	goto	u3145
 10110  09D4  0822               	movf	___lwdiv@divisor,w
 10111  09D5  0224               	subwf	___lwdiv@dividend,w
 10112  09D6                     u3145:	
 10113  09D6  1C03               	skipc
 10114  09D7  29DD               	goto	l4219
 10115  09D8  0822               	movf	___lwdiv@divisor,w
 10116  09D9  02A4               	subwf	___lwdiv@dividend,f
 10117  09DA  0823               	movf	___lwdiv@divisor+1,w
 10118  09DB  3BA5               	subwfb	___lwdiv@dividend+1,f
 10119  09DC  1426               	bsf	___lwdiv@quotient,0
 10120  09DD                     l4219:	
 10121  09DD  36A3               	lsrf	___lwdiv@divisor+1,f
 10122  09DE  0CA2               	rrf	___lwdiv@divisor,f
 10123  09DF  0BA8               	decfsz	___lwdiv@counter,f
 10124  09E0  29CE               	goto	l4211
 10125  09E1                     l4223:	
 10126  09E1  0827               	movf	___lwdiv@quotient+1,w
 10127  09E2  00A3               	movwf	?___lwdiv+1
 10128  09E3  0826               	movf	___lwdiv@quotient,w
 10129  09E4  00A2               	movwf	?___lwdiv
 10130  09E5  0008               	return
 10131  09E6                     __end_of___lwdiv:	
 10132  09E6                     __ptext49:	
 10133 ;; *************** function _led_set_cycle *****************
 10134 ;; Defined at:
 10135 ;;		line 2118 in file "src/app_led.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;  pbuf            1    wreg     const PTR const unsigned
 10138 ;;		 -> rx_buf(80), 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  pbuf            1   11[BANK0 ] const PTR const unsigned
 10141 ;;		 -> rx_buf(80), 
 10142 ;;  i               1   12[BANK0 ] unsigned char 
 10143 ;;  len             1   10[BANK0 ] unsigned char 
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  1    wreg      unsigned char 
 10146 ;; Registers used:
 10147 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10148 ;; Tracked objects:
 10149 ;;		On entry : 1F/0
 10150 ;;		On exit  : 1F/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10154 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10155 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10156 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10157 ;;Total ram usage:       11 bytes
 10158 ;; Hardware stack levels used:    1
 10159 ;; Hardware stack levels required when called:   10
 10160 ;; This function calls:
 10161 ;;		_led_prepare_to_save
 10162 ;; This function is called by:
 10163 ;;		_ble_decode
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           
 10168                           ;psect for function _led_set_cycle
 10169  09E6                     _led_set_cycle:	
 10170                           
 10171                           ;incstack = 0
 10172                           ; Regs used in _led_set_cycle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10173                           ;led_set_cycle@pbuf stored from wreg
 10174  09E6  00AB               	movwf	led_set_cycle@pbuf
 10175                           
 10176                           ;app_led.c: 2124: uint8_t len = sizeof(m_led_para.ble_para.auto_para.array);
 10177  09E7  3015               	movlw	21
 10178  09E8  00AA               	movwf	led_set_cycle@len
 10179                           
 10180                           ;app_led.c: 2125: for(uint8_t i = 0; i < len; i++)
 10181  09E9  01AC               	clrf	led_set_cycle@i
 10182  09EA                     l4553:	
 10183  09EA  082A               	movf	led_set_cycle@len,w
 10184  09EB  022C               	subwf	led_set_cycle@i,w
 10185  09EC  1803               	btfsc	3,0
 10186  09ED  2A0B               	goto	l4555
 10187                           
 10188                           ;app_led.c: 2126: {
 10189                           ;app_led.c: 2127: m_led_para.ble_para.auto_para.array[i] = *(pbuf+i);
 10190  09EE  082C               	movf	led_set_cycle@i,w
 10191  09EF  072B               	addwf	led_set_cycle@pbuf,w
 10192  09F0  00A2               	movwf	??_led_set_cycle
 10193  09F1  0086               	movwf	6
 10194  09F2  3001               	movlw	1	; select bank2/3
 10195  09F3  0087               	movwf	7
 10196  09F4  0801               	movf	1,w
 10197  09F5  00A3               	movwf	??_led_set_cycle+1
 10198  09F6  082C               	movf	led_set_cycle@i,w
 10199  09F7  00A4               	movwf	??_led_set_cycle+2
 10200  09F8  3094               	movlw	148
 10201  09F9  01A5               	clrf	??_led_set_cycle+3
 10202  09FA  00A6               	movwf	??_led_set_cycle+4
 10203  09FB  3023               	movlw	35
 10204  09FC  00A7               	movwf	??_led_set_cycle+5
 10205  09FD  0824               	movf	??_led_set_cycle+2,w
 10206  09FE  0726               	addwf	??_led_set_cycle+4,w
 10207  09FF  00A8               	movwf	??_led_set_cycle+6
 10208  0A00  0825               	movf	??_led_set_cycle+3,w
 10209  0A01  3D27               	addwfc	??_led_set_cycle+5,w
 10210  0A02  00A9               	movwf	??_led_set_cycle+7
 10211  0A03  0828               	movf	??_led_set_cycle+6,w
 10212  0A04  0086               	movwf	6
 10213  0A05  0829               	movf	??_led_set_cycle+7,w
 10214  0A06  0087               	movwf	7
 10215  0A07  0823               	movf	??_led_set_cycle+1,w
 10216  0A08  0081               	movwf	1
 10217  0A09  0AAC               	incf	led_set_cycle@i,f
 10218  0A0A  29EA               	goto	l4553
 10219  0A0B                     l4555:	
 10220                           
 10221                           ;app_led.c: 2128: }
 10222                           ;app_led.c: 2129: led_prepare_to_save();
 10223  0A0B  2175               	fcall	_led_prepare_to_save
 10224                           
 10225                           ;app_led.c: 2130: return 1;
 10226  0A0C  3401               	retlw	1
 10227  0A0D                     __end_of_led_set_cycle:	
 10228  0A0D                     __ptext39:	
 10229 ;; *************** function _led_start_flash *****************
 10230 ;; Defined at:
 10231 ;;		line 1862 in file "src/app_led.c"
 10232 ;; Parameters:    Size  Location     Type
 10233 ;;		None
 10234 ;; Auto vars:     Size  Location     Type
 10235 ;;		None
 10236 ;; Return value:  Size  Location     Type
 10237 ;;                  1    wreg      void 
 10238 ;; Registers used:
 10239 ;;		wreg
 10240 ;; Tracked objects:
 10241 ;;		On entry : 1F/0
 10242 ;;		On exit  : 1F/0
 10243 ;;		Unchanged: 0/0
 10244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10249 ;;Total ram usage:        0 bytes
 10250 ;; Hardware stack levels used:    1
 10251 ;; Hardware stack levels required when called:    9
 10252 ;; This function calls:
 10253 ;;		Nothing
 10254 ;; This function is called by:
 10255 ;;		_ble_decode
 10256 ;; This function uses a non-reentrant model
 10257 ;;
 10258                           
 10259                           
 10260                           ;psect for function _led_start_flash
 10261  0A0D                     _led_start_flash:	
 10262  0A0D                     l4649:	
 10263                           ;incstack = 0
 10264                           ; Regs used in _led_start_flash: [wreg]
 10265                           
 10266  0A0D  3003               	movlw	3
 10267                           
 10268                           ;app_led.c: 1864: led_run_para.mFind = 1;
 10269  0A0E  145C               	bsf	_led_run_para,0
 10270                           
 10271                           ;app_led.c: 1865: led_run_para.flash_count = 3;
 10272  0A0F  00DD               	movwf	_led_run_para+1
 10273  0A10  0008               	return
 10274  0A11                     __end_of_led_start_flash:	
 10275  0A11                     __ptext38:	
 10276 ;; *************** function _led_start_preview *****************
 10277 ;; Defined at:
 10278 ;;		line 1893 in file "src/app_led.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;		None
 10281 ;; Auto vars:     Size  Location     Type
 10282 ;;		None
 10283 ;; Return value:  Size  Location     Type
 10284 ;;                  1    wreg      void 
 10285 ;; Registers used:
 10286 ;;		wreg
 10287 ;; Tracked objects:
 10288 ;;		On entry : 1F/0
 10289 ;;		On exit  : 1F/0
 10290 ;;		Unchanged: 0/0
 10291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10296 ;;Total ram usage:        0 bytes
 10297 ;; Hardware stack levels used:    1
 10298 ;; Hardware stack levels required when called:    9
 10299 ;; This function calls:
 10300 ;;		Nothing
 10301 ;; This function is called by:
 10302 ;;		_ble_decode
 10303 ;; This function uses a non-reentrant model
 10304 ;;
 10305                           
 10306                           
 10307                           ;psect for function _led_start_preview
 10308  0A11                     _led_start_preview:	
 10309  0A11                     l4625:	
 10310                           ;incstack = 0
 10311                           ; Regs used in _led_start_preview: [wreg]
 10312                           
 10313  0A11  3003               	movlw	3
 10314                           
 10315                           ;app_led.c: 1895: led_run_para.mPrev = 1;
 10316  0A12  14DC               	bsf	_led_run_para,1
 10317                           
 10318                           ;app_led.c: 1896: led_run_para.prev_count = 3;
 10319  0A13  00DE               	movwf	_led_run_para+2
 10320  0A14  0008               	return
 10321  0A15                     __end_of_led_start_preview:	
 10322  0A15                     __ptext37:	
 10323 ;; *************** function _led_stop_preview *****************
 10324 ;; Defined at:
 10325 ;;		line 1899 in file "src/app_led.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;		None
 10328 ;; Auto vars:     Size  Location     Type
 10329 ;;		None
 10330 ;; Return value:  Size  Location     Type
 10331 ;;                  1    wreg      void 
 10332 ;; Registers used:
 10333 ;;		status,2
 10334 ;; Tracked objects:
 10335 ;;		On entry : 1F/0
 10336 ;;		On exit  : 1F/0
 10337 ;;		Unchanged: 0/0
 10338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;Total ram usage:        0 bytes
 10344 ;; Hardware stack levels used:    1
 10345 ;; Hardware stack levels required when called:    9
 10346 ;; This function calls:
 10347 ;;		Nothing
 10348 ;; This function is called by:
 10349 ;;		_ble_decode
 10350 ;; This function uses a non-reentrant model
 10351 ;;
 10352                           
 10353                           
 10354                           ;psect for function _led_stop_preview
 10355  0A15                     _led_stop_preview:	
 10356  0A15                     l4629:	
 10357                           ;incstack = 0
 10358                           ; Regs used in _led_stop_preview: [status,2]
 10359                           
 10360                           
 10361                           ;app_led.c: 1901: led_run_para.mPrev = 0;
 10362  0A15  10DC               	bcf	_led_run_para,1
 10363                           
 10364                           ;app_led.c: 1902: led_run_para.prev_count = 0;
 10365  0A16  01DE               	clrf	_led_run_para+2
 10366  0A17  0008               	return
 10367  0A18                     __end_of_led_stop_preview:	
 10368  0A18                     PL52:	
 10369  0A18  306D               	movlw	109
 10370  0A19  0086               	movwf	6
 10371  0A1A  3023               	movlw	35
 10372  0A1B  0087               	movwf	7
 10373  0A1C  3147               	addfsr 1,7
 10374  0A1D  0008               	return
 10375  0A1E                     __end_ofPL52:	
 10376  0A1E                     __ptext104:	
 10377 ;; *************** function _led_state_night_short_press_cb *****************
 10378 ;; Defined at:
 10379 ;;		line 897 in file "src/app_led.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;		None
 10382 ;; Auto vars:     Size  Location     Type
 10383 ;;		None
 10384 ;; Return value:  Size  Location     Type
 10385 ;;                  1    wreg      void 
 10386 ;; Registers used:
 10387 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10388 ;; Tracked objects:
 10389 ;;		On entry : 1F/2
 10390 ;;		On exit  : 1F/0
 10391 ;;		Unchanged: 0/0
 10392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10397 ;;Total ram usage:        1 bytes
 10398 ;; Hardware stack levels used:    1
 10399 ;; Hardware stack levels required when called:    1
 10400 ;; This function calls:
 10401 ;;		i1_led_indicate_ble
 10402 ;;		i1_led_prepare_to_save
 10403 ;; This function is called by:
 10404 ;;		_led_state_night_cb
 10405 ;; This function uses a non-reentrant model
 10406 ;;
 10407                           
 10408                           
 10409                           ;psect for function _led_state_night_short_press_cb
 10410  0A1E                     _led_state_night_short_press_cb:	
 10411  0A1E                     i1l3845:	
 10412                           ;incstack = 0
 10413                           ; Regs used in _led_state_night_short_press_cb: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 10414                           
 10415                           
 10416                           ;app_led.c: 899: m_led_para.mState++;
 10417  0A1E  2389  3188         	fcall	PL14	;call to abstracted procedure
 10418  0A20  00F0               	movwf	??_led_state_night_short_press_cb
 10419  0A21  0AF0               	incf	??_led_state_night_short_press_cb,f
 10420  0A22  0801               	movf	1,w
 10421  0A23  0670               	xorwf	??_led_state_night_short_press_cb,w
 10422  0A24  39FC               	andlw	-4
 10423  0A25  0670               	xorwf	??_led_state_night_short_press_cb,w
 10424  0A26  0081               	movwf	1
 10425                           
 10426                           ;app_led.c: 900: if(m_led_para.last_mode == 2)
 10427  0A27  306D               	movlw	109
 10428  0A28  0086               	movwf	6
 10429  0A29  3023               	movlw	35
 10430  0A2A  0087               	movwf	7
 10431                           
 10432                           ;app_led.c: 901: {
 10433                           ;app_led.c: 902: m_led_para.ble_para.mMode = 2;
 10434  0A2B  23A3  3188         	fcall	PL76	;call to abstracted procedure
 10435  0A2D  3146               	addfsr 1,6
 10436  0A2E  1D03               	skipz
 10437  0A2F  2A34               	goto	L24
 10438  0A30  0801               	movf	1,w
 10439  0A31  39FC               	andlw	-4
 10440  0A32  3802               	iorlw	2
 10441  0A33  2A37               	goto	L23
 10442  0A34                     L24:	
 10443                           ;app_led.c: 904: else
 10444                           ;app_led.c: 905: {
 10445                           ;app_led.c: 906: m_led_para.ble_para.mMode = 1;
 10446                           
 10447                           ;app_led.c: 903: }
 10448                           
 10449  0A34  0801               	movf	1,w
 10450  0A35  39FC               	andlw	-4
 10451  0A36  3801               	iorlw	1
 10452  0A37                     L23:	
 10453  0A37  0081               	movwf	1
 10454                           
 10455                           ;app_led.c: 907: }
 10456                           ;app_led.c: 908: led_indicate_ble();
 10457  0A38  223C  3188         	fcall	i1_led_indicate_ble
 10458                           
 10459                           ;app_led.c: 909: led_prepare_to_save();
 10460  0A3A  2358               	fcall	i1_led_prepare_to_save
 10461  0A3B  0008               	return
 10462  0A3C                     __end_of_led_state_night_short_press_cb:	
 10463  0A3C                     __ptext105:	
 10464 ;; *************** function i1_led_indicate_ble *****************
 10465 ;; Defined at:
 10466 ;;		line 731 in file "src/app_led.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;		None
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;		None
 10471 ;; Return value:  Size  Location     Type
 10472 ;;                  1    wreg      void 
 10473 ;; Registers used:
 10474 ;;		None
 10475 ;; Tracked objects:
 10476 ;;		On entry : 1F/2
 10477 ;;		On exit  : 1F/2
 10478 ;;		Unchanged: 0/0
 10479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10484 ;;Total ram usage:        0 bytes
 10485 ;; Hardware stack levels used:    1
 10486 ;; This function calls:
 10487 ;;		Nothing
 10488 ;; This function is called by:
 10489 ;;		_led_state_night_short_press_cb
 10490 ;; This function uses a non-reentrant model
 10491 ;;
 10492                           
 10493                           
 10494                           ;psect for function i1_led_indicate_ble
 10495  0A3C                     i1_led_indicate_ble:	
 10496                           
 10497                           ;app_led.c: 733: (LATBbits.LATB6 = 1);
 10498                           
 10499                           ;incstack = 0
 10500                           ; Regs used in i1_led_indicate_ble: []
 10501                           
 10502                           ;app_led.c: 734: (LATAbits.LATA1 = 0);
 10503                           
 10504                           ;app_led.c: 735: (LATBbits.LATB7 = 1);
 10505  0A3C  2BEA               	ljmp	PL162	;call to abstracted procedure
 10506  0A3D                     __end_ofi1_led_indicate_ble:	
 10507  0A3D                     __ptext97:	
 10508 ;; *************** function _led_state_day_cb *****************
 10509 ;; Defined at:
 10510 ;;		line 871 in file "src/app_led.c"
 10511 ;; Parameters:    Size  Location     Type
 10512 ;;  key             1    9[COMMON] unsigned char 
 10513 ;;  state           1   10[COMMON] enum E8242
 10514 ;; Auto vars:     Size  Location     Type
 10515 ;;		None
 10516 ;; Return value:  Size  Location     Type
 10517 ;;                  1    wreg      void 
 10518 ;; Registers used:
 10519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10520 ;; Tracked objects:
 10521 ;;		On entry : 1F/2
 10522 ;;		On exit  : 1D/0
 10523 ;;		Unchanged: 0/0
 10524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10529 ;;Total ram usage:        2 bytes
 10530 ;; Hardware stack levels used:    1
 10531 ;; Hardware stack levels required when called:    2
 10532 ;; This function calls:
 10533 ;;		_led_state_day_cont_press_cb
 10534 ;;		_led_state_day_long_press_cb
 10535 ;;		_led_state_day_release_cb
 10536 ;;		_led_state_day_short_press_cb
 10537 ;; This function is called by:
 10538 ;;		_led_touch_cb
 10539 ;; This function uses a non-reentrant model
 10540 ;;
 10541                           
 10542                           
 10543                           ;psect for function _led_state_day_cb
 10544  0A3D                     _led_state_day_cb:	
 10545                           
 10546                           ;app_led.c: 873: if(key == 0x01)
 10547                           
 10548                           ;incstack = 0
 10549                           ; Regs used in _led_state_day_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10550  0A3D  0B79               	decfsz	led_state_day_cb@key,w
 10551  0A3E  0008               	return
 10552                           
 10553                           ;app_led.c: 888: break;
 10554  0A3F  087A               	movf	led_state_day_cb@state,w
 10555                           
 10556                           ; Switch size 1, requested type "space"
 10557                           ; Number of cases is 4, Range of values is 0 to 3
 10558                           ; switch strategies available:
 10559                           ; Name         Instructions Cycles
 10560                           ; simple_byte           13     7 (average)
 10561                           ; direct_byte           14     6 (fixed)
 10562                           ; jumptable            260     6 (fixed)
 10563                           ;	Chosen strategy is simple_byte
 10564  0A40  3A00               	xorlw	0	; case 0
 10565  0A41  1903               	skipnz
 10566  0A42  2A4D               	goto	i1l3895
 10567  0A43  3A01               	xorlw	1	; case 1
 10568  0A44  1903               	skipnz
 10569  0A45  2A4E               	goto	i1l3897
 10570  0A46  3A03               	xorlw	3	; case 2
 10571  0A47  1903               	skipnz
 10572  0A48  2A4F               	goto	i1l3899
 10573  0A49  3A01               	xorlw	1	; case 3
 10574  0A4A  1903               	skipnz
 10575  0A4B  2A50               	goto	i1l3901
 10576  0A4C  2A51               	goto	i1l818
 10577  0A4D                     i1l3895:	
 10578                           
 10579                           ;app_led.c: 878: led_state_day_short_press_cb();
 10580  0A4D  2AB6               	ljmp	i1l3825
 10581  0A4E                     i1l3897:	
 10582                           ;app_led.c: 879: break;
 10583                           
 10584                           
 10585                           ;app_led.c: 881: led_state_day_long_press_cb();
 10586  0A4E  2B5C               	ljmp	i1l3727
 10587  0A4F                     i1l3899:	
 10588                           ;app_led.c: 882: break;
 10589                           
 10590                           
 10591                           ;app_led.c: 884: led_state_day_cont_press_cb();
 10592  0A4F  2A62               	ljmp	i1l3835
 10593  0A50                     i1l3901:	
 10594                           ;app_led.c: 885: break;
 10595                           
 10596                           
 10597                           ;app_led.c: 887: led_state_day_release_cb();
 10598  0A50  2B7C               	ljmp	i1l3843
 10599  0A51                     i1l818:	
 10600  0A51  0008               	return
 10601  0A52                     __end_of_led_state_day_cb:	
 10602  0A52                     __ptext109:	
 10603 ;; *************** function _led_state_night_cont_press_cb *****************
 10604 ;; Defined at:
 10605 ;;		line 917 in file "src/app_led.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;		None
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;		None
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  1    wreg      void 
 10612 ;; Registers used:
 10613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10614 ;; Tracked objects:
 10615 ;;		On entry : 1F/2
 10616 ;;		On exit  : 1D/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10623 ;;Total ram usage:        0 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; Hardware stack levels required when called:    1
 10626 ;; This function calls:
 10627 ;;		i1_decrease
 10628 ;;		i1_increase
 10629 ;;		i1_led_update_night_bright
 10630 ;; This function is called by:
 10631 ;;		_led_state_night_cb
 10632 ;; This function uses a non-reentrant model
 10633 ;;
 10634                           
 10635                           
 10636                           ;psect for function _led_state_night_cont_press_cb
 10637  0A52                     _led_state_night_cont_press_cb:	
 10638  0A52                     i1l3857:	
 10639                           ;incstack = 0
 10640                           ; Regs used in _led_state_night_cont_press_cb: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10641                           
 10642                           
 10643                           ;app_led.c: 919: if(led_run_para.mNr)
 10644  0A52  0020               	movlb	0	; select bank0
 10645  0A53  1E5C               	btfss	_led_run_para,4
 10646  0A54  2A5B               	goto	i1l3861
 10647                           
 10648                           ;app_led.c: 920: {
 10649                           ;app_led.c: 921: increase(&m_led_para.blue_bright, 10, 1000);
 10650  0A55  3071               	movlw	113
 10651  0A56  23AD  3188         	fcall	PL80	;call to abstracted procedure
 10652  0A58  2294  3188         	fcall	i1_increase
 10653                           
 10654                           ;app_led.c: 922: }
 10655  0A5A  2A60               	goto	i1l3863
 10656  0A5B                     i1l3861:	
 10657                           
 10658                           ;app_led.c: 923: else
 10659                           ;app_led.c: 924: {
 10660                           ;app_led.c: 925: decrease(&m_led_para.blue_bright, 10, 10);
 10661  0A5B  3071               	movlw	113
 10662  0A5C  23BD  3188         	fcall	PL100	;call to abstracted procedure
 10663  0A5E  2272  3188         	fcall	i1_decrease
 10664  0A60                     i1l3863:	
 10665                           
 10666                           ;app_led.c: 926: }
 10667                           ;app_led.c: 927: led_update_night_bright();
 10668  0A60  22C6               	fcall	i1_led_update_night_bright
 10669  0A61  0008               	return
 10670  0A62                     __end_of_led_state_night_cont_press_cb:	
 10671  0A62                     __ptext116:	
 10672 ;; *************** function _led_state_day_cont_press_cb *****************
 10673 ;; Defined at:
 10674 ;;		line 853 in file "src/app_led.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;		None
 10677 ;; Auto vars:     Size  Location     Type
 10678 ;;		None
 10679 ;; Return value:  Size  Location     Type
 10680 ;;                  1    wreg      void 
 10681 ;; Registers used:
 10682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10683 ;; Tracked objects:
 10684 ;;		On entry : 1F/2
 10685 ;;		On exit  : 1D/0
 10686 ;;		Unchanged: 0/0
 10687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10692 ;;Total ram usage:        0 bytes
 10693 ;; Hardware stack levels used:    1
 10694 ;; Hardware stack levels required when called:    1
 10695 ;; This function calls:
 10696 ;;		i1_decrease
 10697 ;;		i1_increase
 10698 ;;		i1_led_update_day_bright
 10699 ;; This function is called by:
 10700 ;;		_led_state_day_cb
 10701 ;; This function uses a non-reentrant model
 10702 ;;
 10703                           
 10704                           
 10705                           ;psect for function _led_state_day_cont_press_cb
 10706  0A62                     _led_state_day_cont_press_cb:	
 10707  0A62                     i1l3835:	
 10708                           ;incstack = 0
 10709                           ; Regs used in _led_state_day_cont_press_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10710                           
 10711                           
 10712                           ;app_led.c: 855: if(led_run_para.mDr)
 10713  0A62  0020               	movlb	0	; select bank0
 10714  0A63  1DDC               	btfss	_led_run_para,3
 10715  0A64  2A6B               	goto	i1l3839
 10716                           
 10717                           ;app_led.c: 856: {
 10718                           ;app_led.c: 857: increase(&m_led_para.all_bright, 10, 1000);
 10719  0A65  306F               	movlw	111
 10720  0A66  23AD  3188         	fcall	PL80	;call to abstracted procedure
 10721  0A68  2294  3188         	fcall	i1_increase
 10722                           
 10723                           ;app_led.c: 858: }
 10724  0A6A  2A70               	goto	i1l3841
 10725  0A6B                     i1l3839:	
 10726                           
 10727                           ;app_led.c: 859: else
 10728                           ;app_led.c: 860: {
 10729                           ;app_led.c: 861: decrease(&m_led_para.all_bright, 10, 10);
 10730  0A6B  306F               	movlw	111
 10731  0A6C  23BD  3188         	fcall	PL100	;call to abstracted procedure
 10732  0A6E  2272  3188         	fcall	i1_decrease
 10733  0A70                     i1l3841:	
 10734                           
 10735                           ;app_led.c: 862: }
 10736                           ;app_led.c: 863: led_update_day_bright();
 10737  0A70  2335               	fcall	i1_led_update_day_bright
 10738  0A71  0008               	return
 10739  0A72                     __end_of_led_state_day_cont_press_cb:	
 10740  0A72                     __ptext119:	
 10741 ;; *************** function i1_decrease *****************
 10742 ;; Defined at:
 10743 ;;		line 15 in file "src/app_util.c"
 10744 ;; Parameters:    Size  Location     Type
 10745 ;;  psrc            2    0[COMMON] const PTR unsigned int 
 10746 ;;		 -> m_led_para.ble_para.manual_para.mBright(10), m_led_para.ble_para.manual_para(32), m_led_para(131), 
 10747 ;;  delt            1    2[COMMON] const unsigned char 
 10748 ;;  min             2    3[COMMON] const unsigned int 
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;		None
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  1    wreg      void 
 10753 ;; Registers used:
 10754 ;;		wreg, fsr1l, fsr1h
 10755 ;; Tracked objects:
 10756 ;;		On entry : 1F/0
 10757 ;;		On exit  : 1F/0
 10758 ;;		Unchanged: 1F/0
 10759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10760 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10762 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;Total ram usage:        9 bytes
 10765 ;; Hardware stack levels used:    1
 10766 ;; This function calls:
 10767 ;;		Nothing
 10768 ;; This function is called by:
 10769 ;;		_led_state_day_cont_press_cb
 10770 ;;		_led_state_night_cont_press_cb
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           
 10775                           ;psect for function i1_decrease
 10776  0A72                     i1_decrease:	
 10777                           
 10778                           ;app_util.c: 17: if((*psrc) > min + delt)
 10779                           
 10780                           ;incstack = 0
 10781                           ; Regs used in i1_decrease: [wregfsr1]
 10782  0A72  0870               	movf	i1decrease@psrc,w
 10783  0A73  0086               	movwf	6
 10784  0A74  0871               	movf	i1decrease@psrc+1,w
 10785  0A75  0087               	movwf	7
 10786  0A76  3F40               	moviw [0]fsr1
 10787  0A77  00F5               	movwf	??i1_decrease
 10788  0A78  3F41               	moviw [1]fsr1
 10789  0A79  00F6               	movwf	??i1_decrease+1
 10790  0A7A  0872               	movf	i1decrease@delt,w
 10791  0A7B  0773               	addwf	i1decrease@min,w
 10792  0A7C  00F7               	movwf	??i1_decrease+2
 10793  0A7D  0874               	movf	i1decrease@min+1,w
 10794  0A7E  1803               	skipnc
 10795  0A7F  0A74               	incf	i1decrease@min+1,w
 10796  0A80  00F8               	movwf	??i1_decrease+3
 10797  0A81  0876               	movf	??i1_decrease+1,w
 10798  0A82  0278               	subwf	??i1_decrease+3,w
 10799  0A83  1D03               	skipz
 10800  0A84  2A87               	goto	u274_25
 10801  0A85  0875               	movf	??i1_decrease,w
 10802  0A86  0277               	subwf	??i1_decrease+2,w
 10803  0A87                     u274_25:	
 10804                           
 10805                           ;app_util.c: 18: {
 10806                           ;app_util.c: 19: (*psrc) -= delt;
 10807  0A87  0870               	movf	i1decrease@psrc,w
 10808  0A88  0086               	movwf	6
 10809  0A89  0871               	movf	i1decrease@psrc+1,w
 10810  0A8A  0087               	movwf	7
 10811  0A8B  1803               	skipnc
 10812  0A8C  2A8F               	goto	L26
 10813  0A8D  0872               	movf	i1decrease@delt,w
 10814                           
 10815                           ;app_util.c: 20: }
 10816  0A8E  2BC5               	ljmp	PL114	;call to abstracted procedure
 10817  0A8F                     L26:	
 10818                           ;app_util.c: 21: else
 10819                           ;app_util.c: 22: {
 10820                           ;app_util.c: 23: (*psrc) = min;
 10821                           
 10822  0A8F  0873               	movf	i1decrease@min,w
 10823  0A90  3FC0               	movwi [0]fsr1
 10824  0A91  0874               	movf	i1decrease@min+1,w
 10825  0A92  3FC1               	movwi [1]fsr1
 10826  0A93  0008               	return
 10827  0A94                     __end_ofi1_decrease:	
 10828  0A94                     __ptext118:	
 10829 ;; *************** function i1_increase *****************
 10830 ;; Defined at:
 10831 ;;		line 3 in file "src/app_util.c"
 10832 ;; Parameters:    Size  Location     Type
 10833 ;;  psrc            2    0[COMMON] const PTR unsigned int 
 10834 ;;		 -> m_led_para.ble_para.manual_para.mBright(10), m_led_para.ble_para.manual_para(32), m_led_para(131), 
 10835 ;;  delt            1    2[COMMON] const unsigned char 
 10836 ;;  max             2    3[COMMON] const unsigned int 
 10837 ;; Auto vars:     Size  Location     Type
 10838 ;;		None
 10839 ;; Return value:  Size  Location     Type
 10840 ;;                  1    wreg      void 
 10841 ;; Registers used:
 10842 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10843 ;; Tracked objects:
 10844 ;;		On entry : 1F/0
 10845 ;;		On exit  : 1F/0
 10846 ;;		Unchanged: 1F/0
 10847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10848 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10850 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10851 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10852 ;;Total ram usage:        9 bytes
 10853 ;; Hardware stack levels used:    1
 10854 ;; This function calls:
 10855 ;;		Nothing
 10856 ;; This function is called by:
 10857 ;;		_led_state_day_cont_press_cb
 10858 ;;		_led_state_night_cont_press_cb
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           
 10863                           ;psect for function i1_increase
 10864  0A94                     i1_increase:	
 10865                           
 10866                           ;app_util.c: 5: if((*psrc) + delt < max)
 10867                           
 10868                           ;incstack = 0
 10869                           ; Regs used in i1_increase: [wreg+fsr1l+fsr1h+status,2+status,0]
 10870  0A94  0870               	movf	i1increase@psrc,w
 10871  0A95  0086               	movwf	6
 10872  0A96  0871               	movf	i1increase@psrc+1,w
 10873  0A97  0087               	movwf	7
 10874  0A98  3F40               	moviw [0]fsr1
 10875  0A99  00F5               	movwf	??i1_increase
 10876  0A9A  3F41               	moviw [1]fsr1
 10877  0A9B  00F6               	movwf	??i1_increase+1
 10878  0A9C  0872               	movf	i1increase@delt,w
 10879  0A9D  0775               	addwf	??i1_increase,w
 10880  0A9E  00F7               	movwf	??i1_increase+2
 10881  0A9F  0876               	movf	??i1_increase+1,w
 10882  0AA0  1803               	skipnc
 10883  0AA1  0A76               	incf	??i1_increase+1,w
 10884  0AA2  00F8               	movwf	??i1_increase+3
 10885  0AA3  0874               	movf	i1increase@max+1,w
 10886  0AA4  0278               	subwf	??i1_increase+3,w
 10887  0AA5  1D03               	skipz
 10888  0AA6  2AA9               	goto	u273_25
 10889  0AA7  0873               	movf	i1increase@max,w
 10890  0AA8  0277               	subwf	??i1_increase+2,w
 10891  0AA9                     u273_25:	
 10892                           
 10893                           ;app_util.c: 6: {
 10894                           ;app_util.c: 7: (*psrc) += delt;
 10895  0AA9  0870               	movf	i1increase@psrc,w
 10896  0AAA  0086               	movwf	6
 10897  0AAB  0871               	movf	i1increase@psrc+1,w
 10898  0AAC  0087               	movwf	7
 10899  0AAD  1803               	skipnc
 10900  0AAE  2AB1               	goto	L25
 10901  0AAF  0872               	movf	i1increase@delt,w
 10902                           
 10903                           ;app_util.c: 8: }
 10904  0AB0  2BCB               	ljmp	PL126	;call to abstracted procedure
 10905  0AB1                     L25:	
 10906                           ;app_util.c: 9: else
 10907                           ;app_util.c: 10: {
 10908                           ;app_util.c: 11: (*psrc) = max;
 10909                           
 10910  0AB1  0873               	movf	i1increase@max,w
 10911  0AB2  3FC0               	movwi [0]fsr1
 10912  0AB3  0874               	movf	i1increase@max+1,w
 10913  0AB4  3FC1               	movwi [1]fsr1
 10914  0AB5  0008               	return
 10915  0AB6                     __end_ofi1_increase:	
 10916  0AB6                     __ptext110:	
 10917 ;; *************** function _led_state_day_short_press_cb *****************
 10918 ;; Defined at:
 10919 ;;		line 840 in file "src/app_led.c"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;		None
 10922 ;; Auto vars:     Size  Location     Type
 10923 ;;		None
 10924 ;; Return value:  Size  Location     Type
 10925 ;;                  1    wreg      void 
 10926 ;; Registers used:
 10927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10928 ;; Tracked objects:
 10929 ;;		On entry : 1F/2
 10930 ;;		On exit  : 1F/0
 10931 ;;		Unchanged: 0/0
 10932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10937 ;;Total ram usage:        1 bytes
 10938 ;; Hardware stack levels used:    1
 10939 ;; Hardware stack levels required when called:    1
 10940 ;; This function calls:
 10941 ;;		i1_led_indicate_night
 10942 ;;		i1_led_prepare_to_save
 10943 ;;		i1_led_update_night_bright
 10944 ;; This function is called by:
 10945 ;;		_led_state_day_cb
 10946 ;; This function uses a non-reentrant model
 10947 ;;
 10948                           
 10949                           
 10950                           ;psect for function _led_state_day_short_press_cb
 10951  0AB6                     _led_state_day_short_press_cb:	
 10952  0AB6                     i1l3825:	
 10953                           ;incstack = 0
 10954                           ; Regs used in _led_state_day_short_press_cb: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 10955                           
 10956                           
 10957                           ;app_led.c: 842: m_led_para.mState++;
 10958  0AB6  2389  3188         	fcall	PL14	;call to abstracted procedure
 10959  0AB8  00F5               	movwf	??_led_state_day_short_press_cb
 10960  0AB9  0AF5               	incf	??_led_state_day_short_press_cb,f
 10961  0ABA  0801               	movf	1,w
 10962  0ABB  0675               	xorwf	??_led_state_day_short_press_cb,w
 10963  0ABC  39FC               	andlw	-4
 10964  0ABD  0675               	xorwf	??_led_state_day_short_press_cb,w
 10965  0ABE  0081               	movwf	1
 10966                           
 10967                           ;app_led.c: 843: led_update_night_bright();
 10968  0ABF  22C6  3188         	fcall	i1_led_update_night_bright
 10969                           
 10970                           ;app_led.c: 844: led_indicate_night();
 10971  0AC1  22C5  3188         	fcall	i1_led_indicate_night
 10972                           
 10973                           ;app_led.c: 845: led_prepare_to_save();
 10974  0AC3  2358               	fcall	i1_led_prepare_to_save
 10975  0AC4  0008               	return
 10976  0AC5                     __end_of_led_state_day_short_press_cb:	
 10977  0AC5                     __ptext112:	
 10978 ;; *************** function i1_led_indicate_night *****************
 10979 ;; Defined at:
 10980 ;;		line 724 in file "src/app_led.c"
 10981 ;; Parameters:    Size  Location     Type
 10982 ;;		None
 10983 ;; Auto vars:     Size  Location     Type
 10984 ;;		None
 10985 ;; Return value:  Size  Location     Type
 10986 ;;                  1    wreg      void 
 10987 ;; Registers used:
 10988 ;;		None
 10989 ;; Tracked objects:
 10990 ;;		On entry : 1D/2
 10991 ;;		On exit  : 1F/2
 10992 ;;		Unchanged: 0/0
 10993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10998 ;;Total ram usage:        0 bytes
 10999 ;; Hardware stack levels used:    1
 11000 ;; This function calls:
 11001 ;;		Nothing
 11002 ;; This function is called by:
 11003 ;;		_led_state_day_short_press_cb
 11004 ;; This function uses a non-reentrant model
 11005 ;;
 11006                           
 11007                           
 11008                           ;psect for function i1_led_indicate_night
 11009  0AC5                     i1_led_indicate_night:	
 11010                           
 11011                           ;app_led.c: 726: (LATBbits.LATB6 = 1);
 11012                           
 11013                           ;incstack = 0
 11014                           ; Regs used in i1_led_indicate_night: []
 11015                           
 11016                           ;app_led.c: 727: (LATAbits.LATA1 = 1);
 11017                           
 11018                           ;app_led.c: 728: (LATBbits.LATB7 = 0);
 11019  0AC5  2BD5               	ljmp	PL134	;call to abstracted procedure
 11020  0AC6                     __end_ofi1_led_indicate_night:	
 11021  0AC6                     __ptext111:	
 11022 ;; *************** function i1_led_update_night_bright *****************
 11023 ;; Defined at:
 11024 ;;		line 760 in file "src/app_led.c"
 11025 ;; Parameters:    Size  Location     Type
 11026 ;;		None
 11027 ;; Auto vars:     Size  Location     Type
 11028 ;;  led_update_n    1    4[COMMON] unsigned char 
 11029 ;; Return value:  Size  Location     Type
 11030 ;;                  1    wreg      void 
 11031 ;; Registers used:
 11032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11033 ;; Tracked objects:
 11034 ;;		On entry : 1D/0
 11035 ;;		On exit  : 1D/0
 11036 ;;		Unchanged: 1D/0
 11037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11040 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11041 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11042 ;;Total ram usage:        5 bytes
 11043 ;; Hardware stack levels used:    1
 11044 ;; This function calls:
 11045 ;;		Nothing
 11046 ;; This function is called by:
 11047 ;;		_led_state_day_short_press_cb
 11048 ;;		_led_state_night_cont_press_cb
 11049 ;; This function uses a non-reentrant model
 11050 ;;
 11051                           
 11052                           
 11053                           ;psect for function i1_led_update_night_bright
 11054  0AC6                     i1_led_update_night_bright:	
 11055                           
 11056                           ;app_led.c: 762: for(uint8_t i = 0; i < 5; i++)
 11057                           
 11058                           ;incstack = 0
 11059                           ; Regs used in i1_led_update_night_bright: [wreg-fsr1h+status,2+status,0]
 11060  0AC6  01F4               	clrf	i1led_update_night_bright@i
 11061  0AC7                     i1l3793:	
 11062                           
 11063                           ;app_led.c: 763: {
 11064                           ;app_led.c: 764: if(i == 2)
 11065  0AC7  3002               	movlw	2
 11066  0AC8  0674               	xorwf	i1led_update_night_bright@i,w
 11067  0AC9  1D03               	btfss	3,2
 11068  0ACA  2AE0               	goto	i1l3797
 11069                           
 11070                           ;app_led.c: 765: {
 11071                           ;app_led.c: 766: current_bright[i] = m_led_para.blue_bright;
 11072  0ACB  318E  26C1  3188   	fcall	PL22	;call to abstracted procedure
 11073  0ACE  3574               	lslf	i1led_update_night_bright@i,w
 11074  0ACF  3EDA               	addlw	(low (_current_bright| 0))& (0+255)
 11075                           
 11076                           ;app_led.c: 767: target_bright[i] = m_led_para.blue_bright;
 11077  0AD0  237E  3188         	fcall	PL4	;call to abstracted procedure
 11078  0AD2  3144               	addfsr 1,4
 11079  0AD3  3574               	lslf	i1led_update_night_bright@i,w
 11080  0AD4  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 11081                           
 11082                           ;app_led.c: 768: m_led_para.ble_para.manual_para.mBright[i] = m_led_para.blue_bright;
 11083  0AD5  237E  3188         	fcall	PL4	;call to abstracted procedure
 11084  0AD7  3144               	addfsr 1,4
 11085  0AD8  2397  3188         	fcall	PL58	;call to abstracted procedure
 11086  0ADA  0084               	movwf	4
 11087  0ADB  0871               	movf	??i1_led_update_night_bright+1,w
 11088  0ADC  3D73               	addwfc	??i1_led_update_night_bright+3,w
 11089  0ADD  23B7  3188         	fcall	PL94	;call to abstracted procedure
 11090                           
 11091                           ;app_led.c: 769: }
 11092  0ADF  2AEF               	goto	i1l3799
 11093  0AE0                     i1l3797:	
 11094                           
 11095                           ;app_led.c: 770: else
 11096                           ;app_led.c: 771: {
 11097                           ;app_led.c: 772: current_bright[i] = 0;
 11098  0AE0  3574               	lslf	i1led_update_night_bright@i,w
 11099  0AE1  3EDA               	addlw	(low (_current_bright| 0))& (0+255)
 11100  0AE2  318F  2713  3188   	fcall	PL72	;call to abstracted procedure
 11101                           
 11102                           ;app_led.c: 773: target_bright[i] = 0;
 11103  0AE5  3574               	lslf	i1led_update_night_bright@i,w
 11104  0AE6  23DA  3188         	fcall	PL138	;call to abstracted procedure
 11105                           
 11106                           ;app_led.c: 774: m_led_para.ble_para.manual_para.mBright[i] = 0;
 11107  0AE8  2397  3188         	fcall	PL58	;call to abstracted procedure
 11108  0AEA  0086               	movwf	6
 11109  0AEB  0871               	movf	??i1_led_update_night_bright+1,w
 11110  0AEC  3D73               	addwfc	??i1_led_update_night_bright+3,w
 11111  0AED  23E5  3188         	fcall	PL158	;call to abstracted procedure
 11112  0AEF                     i1l3799:	
 11113  0AEF  3005               	movlw	5
 11114  0AF0  0AF4               	incf	i1led_update_night_bright@i,f
 11115  0AF1  0274               	subwf	i1led_update_night_bright@i,w
 11116  0AF2  1803               	btfsc	3,0
 11117  0AF3  0008               	return
 11118  0AF4  2AC7               	goto	i1l3793
 11119  0AF5                     __end_ofi1_led_update_night_bright:	
 11120  0AF5                     __ptext98:	
 11121 ;; *************** function _led_state_off_cb *****************
 11122 ;; Defined at:
 11123 ;;		line 814 in file "src/app_led.c"
 11124 ;; Parameters:    Size  Location     Type
 11125 ;;  key             1    9[COMMON] unsigned char 
 11126 ;;  state           1   10[COMMON] enum E8242
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;		None
 11129 ;; Return value:  Size  Location     Type
 11130 ;;                  1    wreg      void 
 11131 ;; Registers used:
 11132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11133 ;; Tracked objects:
 11134 ;;		On entry : 1F/2
 11135 ;;		On exit  : 1D/0
 11136 ;;		Unchanged: 0/0
 11137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11141 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11142 ;;Total ram usage:        2 bytes
 11143 ;; Hardware stack levels used:    1
 11144 ;; Hardware stack levels required when called:    2
 11145 ;; This function calls:
 11146 ;;		_led_state_off_cont_press_cb
 11147 ;;		_led_state_off_long_press_cb
 11148 ;;		_led_state_off_release_cb
 11149 ;;		_led_state_off_short_press_cb
 11150 ;; This function is called by:
 11151 ;;		_led_touch_cb
 11152 ;; This function uses a non-reentrant model
 11153 ;;
 11154                           
 11155                           
 11156                           ;psect for function _led_state_off_cb
 11157  0AF5                     _led_state_off_cb:	
 11158                           
 11159                           ;app_led.c: 816: if(key == 0x01)
 11160                           
 11161                           ;incstack = 0
 11162                           ; Regs used in _led_state_off_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11163  0AF5  0B79               	decfsz	led_state_off_cb@key,w
 11164  0AF6  0008               	return
 11165                           
 11166                           ;app_led.c: 831: break;
 11167  0AF7  087A               	movf	led_state_off_cb@state,w
 11168                           
 11169                           ; Switch size 1, requested type "space"
 11170                           ; Number of cases is 4, Range of values is 0 to 3
 11171                           ; switch strategies available:
 11172                           ; Name         Instructions Cycles
 11173                           ; simple_byte           13     7 (average)
 11174                           ; direct_byte           14     6 (fixed)
 11175                           ; jumptable            260     6 (fixed)
 11176                           ;	Chosen strategy is simple_byte
 11177  0AF8  3A00               	xorlw	0	; case 0
 11178  0AF9  1903               	skipnz
 11179  0AFA  2B05               	goto	i1l3879
 11180  0AFB  3A01               	xorlw	1	; case 1
 11181  0AFC  1903               	skipnz
 11182  0AFD  2B06               	goto	i1l3881
 11183  0AFE  3A03               	xorlw	3	; case 2
 11184  0AFF  1903               	skipnz
 11185  0B00  2B07               	goto	i1l3883
 11186  0B01  3A01               	xorlw	1	; case 3
 11187  0B02  1903               	skipnz
 11188  0B03  2B08               	goto	i1l3885
 11189  0B04  2B09               	goto	i1l793
 11190  0B05                     i1l3879:	
 11191                           
 11192                           ;app_led.c: 821: led_state_off_short_press_cb();
 11193  0B05  2B0A               	ljmp	i1l3807
 11194  0B06                     i1l3881:	
 11195                           ;app_led.c: 822: break;
 11196                           
 11197                           
 11198                           ;app_led.c: 824: led_state_off_long_press_cb();
 11199  0B06  2B1A               	ljmp	i1l3815
 11200  0B07                     i1l3883:	
 11201                           ;app_led.c: 825: break;
 11202                           
 11203                           
 11204                           ;app_led.c: 827: led_state_off_cont_press_cb();
 11205  0B07  2B59               	ljmp	i1l779
 11206  0B08                     i1l3885:	
 11207                           ;app_led.c: 828: break;
 11208                           
 11209                           
 11210                           ;app_led.c: 830: led_state_off_release_cb();
 11211  0B08  2B5A               	ljmp	i1l782
 11212  0B09                     i1l793:	
 11213  0B09  0008               	return
 11214  0B0A                     __end_of_led_state_off_cb:	
 11215  0B0A                     __ptext99:	
 11216 ;; *************** function _led_state_off_short_press_cb *****************
 11217 ;; Defined at:
 11218 ;;		line 793 in file "src/app_led.c"
 11219 ;; Parameters:    Size  Location     Type
 11220 ;;		None
 11221 ;; Auto vars:     Size  Location     Type
 11222 ;;		None
 11223 ;; Return value:  Size  Location     Type
 11224 ;;                  1    wreg      void 
 11225 ;; Registers used:
 11226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11227 ;; Tracked objects:
 11228 ;;		On entry : 1F/2
 11229 ;;		On exit  : 1F/0
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11234 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11236 ;;Total ram usage:        1 bytes
 11237 ;; Hardware stack levels used:    1
 11238 ;; Hardware stack levels required when called:    1
 11239 ;; This function calls:
 11240 ;;		i1_led_indicate_day
 11241 ;;		i1_led_prepare_to_save
 11242 ;;		i1_led_update_day_bright
 11243 ;; This function is called by:
 11244 ;;		_led_state_off_cb
 11245 ;; This function uses a non-reentrant model
 11246 ;;
 11247                           
 11248                           
 11249                           ;psect for function _led_state_off_short_press_cb
 11250  0B0A                     _led_state_off_short_press_cb:	
 11251  0B0A                     i1l3807:	
 11252                           ;incstack = 0
 11253                           ; Regs used in _led_state_off_short_press_cb: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 11254                           
 11255                           
 11256                           ;app_led.c: 795: m_led_para.mState++;
 11257  0B0A  2389  3188         	fcall	PL14	;call to abstracted procedure
 11258  0B0C  00F5               	movwf	??_led_state_off_short_press_cb
 11259  0B0D  0AF5               	incf	??_led_state_off_short_press_cb,f
 11260  0B0E  0801               	movf	1,w
 11261  0B0F  0675               	xorwf	??_led_state_off_short_press_cb,w
 11262  0B10  39FC               	andlw	-4
 11263  0B11  0675               	xorwf	??_led_state_off_short_press_cb,w
 11264  0B12  0081               	movwf	1
 11265                           
 11266                           ;app_led.c: 796: led_update_day_bright();
 11267  0B13  2335  3188         	fcall	i1_led_update_day_bright
 11268                           
 11269                           ;app_led.c: 797: led_indicate_day();
 11270  0B15  2319  3188         	fcall	i1_led_indicate_day
 11271                           
 11272                           ;app_led.c: 798: led_prepare_to_save();
 11273  0B17  2358               	fcall	i1_led_prepare_to_save
 11274  0B18  0008               	return
 11275  0B19                     __end_of_led_state_off_short_press_cb:	
 11276  0B19                     __ptext102:	
 11277 ;; *************** function i1_led_indicate_day *****************
 11278 ;; Defined at:
 11279 ;;		line 717 in file "src/app_led.c"
 11280 ;; Parameters:    Size  Location     Type
 11281 ;;		None
 11282 ;; Auto vars:     Size  Location     Type
 11283 ;;		None
 11284 ;; Return value:  Size  Location     Type
 11285 ;;                  1    wreg      void 
 11286 ;; Registers used:
 11287 ;;		None
 11288 ;; Tracked objects:
 11289 ;;		On entry : 1D/2
 11290 ;;		On exit  : 1F/2
 11291 ;;		Unchanged: 0/0
 11292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11297 ;;Total ram usage:        0 bytes
 11298 ;; Hardware stack levels used:    1
 11299 ;; This function calls:
 11300 ;;		Nothing
 11301 ;; This function is called by:
 11302 ;;		_led_state_off_short_press_cb
 11303 ;;		_led_state_off_long_press_cb
 11304 ;; This function uses a non-reentrant model
 11305 ;;
 11306                           
 11307                           
 11308                           ;psect for function i1_led_indicate_day
 11309  0B19                     i1_led_indicate_day:	
 11310                           
 11311                           ;app_led.c: 719: (LATBbits.LATB6 = 0);
 11312                           
 11313                           ;incstack = 0
 11314                           ; Regs used in i1_led_indicate_day: []
 11315                           
 11316                           ;app_led.c: 720: (LATAbits.LATA1 = 0);
 11317                           
 11318                           ;app_led.c: 721: (LATBbits.LATB7 = 0);
 11319  0B19  2BD0               	ljmp	PL132	;call to abstracted procedure
 11320  0B1A                     __end_ofi1_led_indicate_day:	
 11321  0B1A                     __ptext101:	
 11322 ;; *************** function _led_state_off_long_press_cb *****************
 11323 ;; Defined at:
 11324 ;;		line 801 in file "src/app_led.c"
 11325 ;; Parameters:    Size  Location     Type
 11326 ;;		None
 11327 ;; Auto vars:     Size  Location     Type
 11328 ;;		None
 11329 ;; Return value:  Size  Location     Type
 11330 ;;                  1    wreg      void 
 11331 ;; Registers used:
 11332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11333 ;; Tracked objects:
 11334 ;;		On entry : 1F/2
 11335 ;;		On exit  : 1F/0
 11336 ;;		Unchanged: 0/0
 11337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11342 ;;Total ram usage:        2 bytes
 11343 ;; Hardware stack levels used:    1
 11344 ;; Hardware stack levels required when called:    1
 11345 ;; This function calls:
 11346 ;;		i1_led_indicate_day
 11347 ;;		i1_led_update_day_bright
 11348 ;; This function is called by:
 11349 ;;		_led_state_off_cb
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           
 11354                           ;psect for function _led_state_off_long_press_cb
 11355  0B1A                     _led_state_off_long_press_cb:	
 11356  0B1A                     i1l3815:	
 11357                           ;incstack = 0
 11358                           ; Regs used in _led_state_off_long_press_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11359                           
 11360                           
 11361                           ;app_led.c: 803: m_led_para.mState++;
 11362  0B1A  2389  3188         	fcall	PL14	;call to abstracted procedure
 11363  0B1C  00F5               	movwf	??_led_state_off_long_press_cb
 11364  0B1D  0AF5               	incf	??_led_state_off_long_press_cb,f
 11365  0B1E  0801               	movf	1,w
 11366  0B1F  0675               	xorwf	??_led_state_off_long_press_cb,w
 11367  0B20  39FC               	andlw	-4
 11368  0B21  0675               	xorwf	??_led_state_off_long_press_cb,w
 11369  0B22  0081               	movwf	1
 11370                           
 11371                           ;app_led.c: 804: m_led_para.all_bright = 10;
 11372  0B23  300A               	movlw	10
 11373  0B24  00F5               	movwf	??_led_state_off_long_press_cb
 11374  0B25  306D               	movlw	109
 11375  0B26  01F6               	clrf	??_led_state_off_long_press_cb+1
 11376  0B27  0086               	movwf	6
 11377  0B28  3023               	movlw	35
 11378  0B29  0087               	movwf	7
 11379  0B2A  3142               	addfsr 1,2
 11380  0B2B  0875               	movf	??_led_state_off_long_press_cb,w
 11381  0B2C  3FC0               	movwi [0]fsr1
 11382  0B2D  0876               	movf	??_led_state_off_long_press_cb+1,w
 11383  0B2E  3FC1               	movwi [1]fsr1
 11384                           
 11385                           ;app_led.c: 805: led_update_day_bright();
 11386  0B2F  2335  3188         	fcall	i1_led_update_day_bright
 11387                           
 11388                           ;app_led.c: 806: led_indicate_day();
 11389  0B31  2319               	fcall	i1_led_indicate_day
 11390                           
 11391                           ;app_led.c: 807: led_run_para.mDr = 1;
 11392  0B32  0020               	movlb	0	; select bank0
 11393  0B33  15DC               	bsf	_led_run_para,3
 11394  0B34  0008               	return
 11395  0B35                     __end_of_led_state_off_long_press_cb:	
 11396  0B35                     __ptext117:	
 11397 ;; *************** function i1_led_update_day_bright *****************
 11398 ;; Defined at:
 11399 ;;		line 738 in file "src/app_led.c"
 11400 ;; Parameters:    Size  Location     Type
 11401 ;;		None
 11402 ;; Auto vars:     Size  Location     Type
 11403 ;;  led_update_d    1    4[COMMON] unsigned char 
 11404 ;; Return value:  Size  Location     Type
 11405 ;;                  1    wreg      void 
 11406 ;; Registers used:
 11407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11408 ;; Tracked objects:
 11409 ;;		On entry : 1D/2
 11410 ;;		On exit  : 1D/0
 11411 ;;		Unchanged: 1D/0
 11412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11415 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11416 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11417 ;;Total ram usage:        5 bytes
 11418 ;; Hardware stack levels used:    1
 11419 ;; This function calls:
 11420 ;;		Nothing
 11421 ;; This function is called by:
 11422 ;;		_led_state_off_short_press_cb
 11423 ;;		_led_state_off_long_press_cb
 11424 ;;		_led_state_day_cont_press_cb
 11425 ;; This function uses a non-reentrant model
 11426 ;;
 11427                           
 11428                           
 11429                           ;psect for function i1_led_update_day_bright
 11430  0B35                     i1_led_update_day_bright:	
 11431                           
 11432                           ;app_led.c: 740: for(uint8_t i = 0; i < 5; i++)
 11433                           
 11434                           ;incstack = 0
 11435                           ; Regs used in i1_led_update_day_bright: [wreg-fsr1h+status,2+status,0]
 11436  0B35  01F4               	clrf	i1led_update_day_bright@i
 11437  0B36                     i1l3781:	
 11438                           
 11439                           ;app_led.c: 741: {
 11440                           ;app_led.c: 742: current_bright[i] = m_led_para.all_bright;
 11441  0B36  2391  3188         	fcall	PL32	;call to abstracted procedure
 11442  0B38  3574               	lslf	i1led_update_day_bright@i,w
 11443  0B39  3EDA               	addlw	(low (_current_bright| 0))& (0+255)
 11444                           
 11445                           ;app_led.c: 743: target_bright[i] = m_led_para.all_bright;
 11446  0B3A  237E  3188         	fcall	PL4	;call to abstracted procedure
 11447  0B3C  3142               	addfsr 1,2
 11448  0B3D  3574               	lslf	i1led_update_day_bright@i,w
 11449  0B3E  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 11450                           
 11451                           ;app_led.c: 744: m_led_para.ble_para.manual_para.mBright[i] = m_led_para.all_bright;
 11452  0B3F  237E  3188         	fcall	PL4	;call to abstracted procedure
 11453  0B41  3142               	addfsr 1,2
 11454  0B42  0874               	movf	i1led_update_day_bright@i,w
 11455  0B43  00F0               	movwf	??i1_led_update_day_bright
 11456  0B44  3076               	movlw	118
 11457  0B45  01F1               	clrf	??i1_led_update_day_bright+1
 11458  0B46  35F0               	lslf	??i1_led_update_day_bright,f
 11459  0B47  0DF1               	rlf	??i1_led_update_day_bright+1,f
 11460  0B48  00F2               	movwf	??i1_led_update_day_bright+2
 11461  0B49  3023               	movlw	35
 11462  0B4A  00F3               	movwf	??i1_led_update_day_bright+3
 11463  0B4B  0870               	movf	??i1_led_update_day_bright,w
 11464  0B4C  0772               	addwf	??i1_led_update_day_bright+2,w
 11465  0B4D  0084               	movwf	4
 11466  0B4E  0871               	movf	??i1_led_update_day_bright+1,w
 11467  0B4F  3D73               	addwfc	??i1_led_update_day_bright+3,w
 11468  0B50  23B7  3188         	fcall	PL94	;call to abstracted procedure
 11469  0B52  3005               	movlw	5
 11470  0B53  0AF4               	incf	i1led_update_day_bright@i,f
 11471  0B54  0274               	subwf	i1led_update_day_bright@i,w
 11472  0B55  1803               	btfsc	3,0
 11473  0B56  0008               	return
 11474  0B57  2B36               	goto	i1l3781
 11475  0B58                     __end_ofi1_led_update_day_bright:	
 11476  0B58                     __ptext122:	
 11477 ;; *************** function i1_led_prepare_to_save *****************
 11478 ;; Defined at:
 11479 ;;		line 1919 in file "src/app_led.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;		None
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;		None
 11484 ;; Return value:  Size  Location     Type
 11485 ;;                  1    wreg      void 
 11486 ;; Registers used:
 11487 ;;		wreg
 11488 ;; Tracked objects:
 11489 ;;		On entry : 1F/2
 11490 ;;		On exit  : 1F/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11497 ;;Total ram usage:        0 bytes
 11498 ;; Hardware stack levels used:    1
 11499 ;; This function calls:
 11500 ;;		Nothing
 11501 ;; This function is called by:
 11502 ;;		_led_state_off_short_press_cb
 11503 ;;		_led_state_day_short_press_cb
 11504 ;;		_led_state_day_release_cb
 11505 ;;		_led_state_night_short_press_cb
 11506 ;;		_led_state_night_release_cb
 11507 ;;		_led_state_ble_short_press_cb
 11508 ;; This function uses a non-reentrant model
 11509 ;;
 11510                           
 11511                           
 11512                           ;psect for function i1_led_prepare_to_save
 11513  0B58                     i1_led_prepare_to_save:	
 11514                           
 11515                           ;app_led.c: 1921: led_run_para.mSave = 1;
 11516                           
 11517                           ;incstack = 0
 11518                           ; Regs used in i1_led_prepare_to_save: [wreg]
 11519                           
 11520                           ;app_led.c: 1922: led_run_para.save_delay_count = 3;
 11521  0B58  2BE0               	ljmp	PL142	;call to abstracted procedure
 11522  0B59                     __end_ofi1_led_prepare_to_save:	
 11523  0B59                     __ptext103:	
 11524 ;; *************** function _led_state_off_cont_press_cb *****************
 11525 ;; Defined at:
 11526 ;;		line 810 in file "src/app_led.c"
 11527 ;; Parameters:    Size  Location     Type
 11528 ;;		None
 11529 ;; Auto vars:     Size  Location     Type
 11530 ;;		None
 11531 ;; Return value:  Size  Location     Type
 11532 ;;                  1    wreg      void 
 11533 ;; Registers used:
 11534 ;;		None
 11535 ;; Tracked objects:
 11536 ;;		On entry : 1F/2
 11537 ;;		On exit  : 1F/2
 11538 ;;		Unchanged: 1F/0
 11539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11544 ;;Total ram usage:        0 bytes
 11545 ;; Hardware stack levels used:    1
 11546 ;; This function calls:
 11547 ;;		Nothing
 11548 ;; This function is called by:
 11549 ;;		_led_state_off_cb
 11550 ;; This function uses a non-reentrant model
 11551 ;;
 11552                           
 11553                           
 11554                           ;psect for function _led_state_off_cont_press_cb
 11555  0B59                     _led_state_off_cont_press_cb:	
 11556  0B59                     i1l779:	
 11557                           ;incstack = 0
 11558                           ; Regs used in _led_state_off_cont_press_cb: []
 11559                           
 11560  0B59  0008               	return
 11561  0B5A                     __end_of_led_state_off_cont_press_cb:	
 11562  0B5A                     __ptext100:	
 11563 ;; *************** function _led_state_off_release_cb *****************
 11564 ;; Defined at:
 11565 ;;		line 812 in file "src/app_led.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;		None
 11568 ;; Auto vars:     Size  Location     Type
 11569 ;;		None
 11570 ;; Return value:  Size  Location     Type
 11571 ;;                  1    wreg      void 
 11572 ;; Registers used:
 11573 ;;		None
 11574 ;; Tracked objects:
 11575 ;;		On entry : 1F/2
 11576 ;;		On exit  : 1F/2
 11577 ;;		Unchanged: 1F/0
 11578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11583 ;;Total ram usage:        0 bytes
 11584 ;; Hardware stack levels used:    1
 11585 ;; This function calls:
 11586 ;;		Nothing
 11587 ;; This function is called by:
 11588 ;;		_led_state_off_cb
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           
 11592                           
 11593                           ;psect for function _led_state_off_release_cb
 11594  0B5A                     _led_state_off_release_cb:	
 11595  0B5A                     i1l782:	
 11596                           ;incstack = 0
 11597                           ; Regs used in _led_state_off_release_cb: []
 11598                           
 11599  0B5A  0008               	return
 11600  0B5B                     __end_of_led_state_off_release_cb:	
 11601  0B5B                     __ptext114:	
 11602 ;; *************** function _led_state_day_long_press_cb *****************
 11603 ;; Defined at:
 11604 ;;		line 848 in file "src/app_led.c"
 11605 ;; Parameters:    Size  Location     Type
 11606 ;;		None
 11607 ;; Auto vars:     Size  Location     Type
 11608 ;;		None
 11609 ;; Return value:  Size  Location     Type
 11610 ;;                  1    wreg      void 
 11611 ;; Registers used:
 11612 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11613 ;; Tracked objects:
 11614 ;;		On entry : 1F/2
 11615 ;;		On exit  : 1D/0
 11616 ;;		Unchanged: 0/0
 11617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11622 ;;Total ram usage:        0 bytes
 11623 ;; Hardware stack levels used:    1
 11624 ;; Hardware stack levels required when called:    1
 11625 ;; This function calls:
 11626 ;;		_led_update_day_status
 11627 ;; This function is called by:
 11628 ;;		_led_state_day_cb
 11629 ;; This function uses a non-reentrant model
 11630 ;;
 11631                           
 11632                           
 11633                           ;psect for function _led_state_day_long_press_cb
 11634  0B5B                     _led_state_day_long_press_cb:	
 11635                           
 11636                           ;app_led.c: 850: led_update_day_status();
 11637                           
 11638                           ;incstack = 0
 11639                           ; Regs used in _led_state_day_long_press_cb: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 11640  0B5B  2B5C               	ljmp	i1l3727
 11641  0B5C                     __end_of_led_state_day_long_press_cb:	
 11642  0B5C                     __ptext115:	
 11643 ;; *************** function _led_update_day_status *****************
 11644 ;; Defined at:
 11645 ;;		line 748 in file "src/app_led.c"
 11646 ;; Parameters:    Size  Location     Type
 11647 ;;		None
 11648 ;; Auto vars:     Size  Location     Type
 11649 ;;		None
 11650 ;; Return value:  Size  Location     Type
 11651 ;;                  1    wreg      void 
 11652 ;; Registers used:
 11653 ;;		wreg, fsr1l, fsr1h
 11654 ;; Tracked objects:
 11655 ;;		On entry : 1F/2
 11656 ;;		On exit  : 1D/0
 11657 ;;		Unchanged: 0/0
 11658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11661 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11663 ;;Total ram usage:        2 bytes
 11664 ;; Hardware stack levels used:    1
 11665 ;; This function calls:
 11666 ;;		Nothing
 11667 ;; This function is called by:
 11668 ;;		_led_state_day_long_press_cb
 11669 ;; This function uses a non-reentrant model
 11670 ;;
 11671                           
 11672                           
 11673                           ;psect for function _led_update_day_status
 11674  0B5C                     _led_update_day_status:	
 11675  0B5C                     i1l3727:	
 11676                           ;incstack = 0
 11677                           ; Regs used in _led_update_day_status: [wregfsr1]
 11678                           
 11679                           
 11680                           ;app_led.c: 750: if(m_led_para.all_bright > 1000 - 200)
 11681  0B5C  2391  3188         	fcall	PL32	;call to abstracted procedure
 11682  0B5E  3F40               	moviw [0]fsr1
 11683  0B5F  00F0               	movwf	??_led_update_day_status
 11684  0B60  3F41               	moviw [1]fsr1
 11685  0B61  00F1               	movwf	??_led_update_day_status+1
 11686  0B62  3003               	movlw	3
 11687  0B63  0271               	subwf	??_led_update_day_status+1,w
 11688  0B64  3021               	movlw	33
 11689  0B65  1903               	skipnz
 11690  0B66  0270               	subwf	??_led_update_day_status,w
 11691  0B67  1C03               	skipc
 11692  0B68  2B6C               	goto	i1l3731
 11693                           
 11694                           ;app_led.c: 751: {
 11695                           ;app_led.c: 752: led_run_para.mDr = 0;
 11696  0B69  0020               	movlb	0	; select bank0
 11697  0B6A  11DC               	bcf	_led_run_para,3
 11698                           
 11699                           ;app_led.c: 753: }
 11700  0B6B  0008               	return
 11701  0B6C                     i1l3731:	
 11702                           
 11703                           ;app_led.c: 754: else if(m_led_para.all_bright < 200)
 11704  0B6C  2391  3188         	fcall	PL32	;call to abstracted procedure
 11705  0B6E  3F40               	moviw [0]fsr1
 11706  0B6F  00F0               	movwf	??_led_update_day_status
 11707  0B70  3F41               	moviw [1]fsr1
 11708  0B71  00F1               	movwf	??_led_update_day_status+1
 11709  0B72  3000               	movlw	0
 11710  0B73  0271               	subwf	??_led_update_day_status+1,w
 11711  0B74  30C8               	movlw	200
 11712  0B75  1903               	skipnz
 11713  0B76  0270               	subwf	??_led_update_day_status,w
 11714  0B77  1803               	skipnc
 11715  0B78  0008               	return
 11716                           
 11717                           ;app_led.c: 755: {
 11718                           ;app_led.c: 756: led_run_para.mDr = 1;
 11719  0B79  0020               	movlb	0	; select bank0
 11720  0B7A  15DC               	bsf	_led_run_para,3
 11721  0B7B  0008               	return
 11722  0B7C                     __end_of_led_update_day_status:	
 11723  0B7C                     __ptext113:	
 11724 ;; *************** function _led_state_day_release_cb *****************
 11725 ;; Defined at:
 11726 ;;		line 866 in file "src/app_led.c"
 11727 ;; Parameters:    Size  Location     Type
 11728 ;;		None
 11729 ;; Auto vars:     Size  Location     Type
 11730 ;;		None
 11731 ;; Return value:  Size  Location     Type
 11732 ;;                  1    wreg      void 
 11733 ;; Registers used:
 11734 ;;		wreg, status,2, status,0, pclath, cstack
 11735 ;; Tracked objects:
 11736 ;;		On entry : 1F/2
 11737 ;;		On exit  : 1F/0
 11738 ;;		Unchanged: 0/0
 11739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11744 ;;Total ram usage:        0 bytes
 11745 ;; Hardware stack levels used:    1
 11746 ;; Hardware stack levels required when called:    1
 11747 ;; This function calls:
 11748 ;;		i1_led_prepare_to_save
 11749 ;; This function is called by:
 11750 ;;		_led_state_day_cb
 11751 ;; This function uses a non-reentrant model
 11752 ;;
 11753                           
 11754                           
 11755                           ;psect for function _led_state_day_release_cb
 11756  0B7C                     _led_state_day_release_cb:	
 11757  0B7C                     i1l3843:	
 11758                           ;incstack = 0
 11759                           ; Regs used in _led_state_day_release_cb: [wreg+status,2+status,0+pclath+cstack]
 11760                           
 11761                           
 11762                           ;app_led.c: 868: led_prepare_to_save();
 11763  0B7C  2358               	fcall	i1_led_prepare_to_save
 11764  0B7D  0008               	return
 11765  0B7E                     __end_of_led_state_day_release_cb:	
 11766  0B7E                     PL4:	
 11767  0B7E  0084               	movwf	4
 11768  0B7F  0185               	clrf	5
 11769  0B80  3F40               	moviw [0]fsr1
 11770  0B81  3F80               	movwi [0]fsr0
 11771  0B82  3F41               	moviw [1]fsr1
 11772  0B83  3F81               	movwi [1]fsr0
 11773  0B84  306D               	movlw	109
 11774  0B85  0086               	movwf	6
 11775  0B86  3023               	movlw	35
 11776  0B87  0087               	movwf	7
 11777  0B88  0008               	return
 11778  0B89                     __end_ofPL4:	
 11779  0B89                     PL14:	
 11780  0B89  306D               	movlw	109
 11781  0B8A  0086               	movwf	6
 11782  0B8B  3023               	movlw	35
 11783  0B8C  0087               	movwf	7
 11784  0B8D  3141               	addfsr 1,1
 11785  0B8E  0801               	movf	1,w
 11786  0B8F  3903               	andlw	3
 11787  0B90  0008               	return
 11788  0B91                     __end_ofPL14:	
 11789  0B91                     PL32:	
 11790  0B91  306D               	movlw	109
 11791  0B92  0086               	movwf	6
 11792  0B93  3023               	movlw	35
 11793  0B94  0087               	movwf	7
 11794  0B95  3142               	addfsr 1,2
 11795  0B96  0008               	return
 11796  0B97                     __end_ofPL32:	
 11797  0B97                     PL58:	
 11798  0B97  0874               	movf	i1led_update_night_bright@i,w
 11799  0B98  00F0               	movwf	??i1_led_update_night_bright
 11800  0B99  3076               	movlw	118
 11801  0B9A  01F1               	clrf	??i1_led_update_night_bright+1
 11802  0B9B  35F0               	lslf	??i1_led_update_night_bright,f
 11803  0B9C  0DF1               	rlf	??i1_led_update_night_bright+1,f
 11804  0B9D  00F2               	movwf	??i1_led_update_night_bright+2
 11805  0B9E  3023               	movlw	35
 11806  0B9F  00F3               	movwf	??i1_led_update_night_bright+3
 11807  0BA0  0870               	movf	??i1_led_update_night_bright,w
 11808  0BA1  0772               	addwf	??i1_led_update_night_bright+2,w
 11809  0BA2  0008               	return
 11810  0BA3                     __end_ofPL58:	
 11811  0BA3                     PL76:	
 11812  0BA3  3141               	addfsr 1,1
 11813  0BA4  0C01               	rrf	1,w
 11814  0BA5  0C89               	rrf	9,f
 11815  0BA6  3903               	andlw	3
 11816  0BA7  3A02               	xorlw	2
 11817  0BA8  306D               	movlw	109
 11818  0BA9  0086               	movwf	6
 11819  0BAA  3023               	movlw	35
 11820  0BAB  0087               	movwf	7
 11821  0BAC  0008               	return
 11822  0BAD                     __end_ofPL76:	
 11823  0BAD                     PL80:	
 11824  0BAD  00F0               	movwf	i1increase@psrc
 11825  0BAE  3023               	movlw	35
 11826  0BAF  00F1               	movwf	i1increase@psrc+1
 11827  0BB0  300A               	movlw	10
 11828  0BB1  00F2               	movwf	i1increase@delt
 11829  0BB2  30E8               	movlw	232
 11830  0BB3  00F3               	movwf	i1increase@max
 11831  0BB4  3003               	movlw	3
 11832  0BB5  00F4               	movwf	i1increase@max+1
 11833  0BB6  0008               	return
 11834  0BB7                     __end_ofPL80:	
 11835  0BB7                     PL94:	
 11836  0BB7  0085               	movwf	5
 11837  0BB8  3F40               	moviw [0]fsr1
 11838  0BB9  3F80               	movwi [0]fsr0
 11839  0BBA  3F41               	moviw [1]fsr1
 11840  0BBB  3F81               	movwi [1]fsr0
 11841  0BBC  0008               	return
 11842  0BBD                     __end_ofPL94:	
 11843  0BBD                     PL100:	
 11844  0BBD  00F0               	movwf	i1decrease@psrc
 11845  0BBE  3023               	movlw	35
 11846  0BBF  00F1               	movwf	i1decrease@psrc+1
 11847  0BC0  300A               	movlw	10
 11848  0BC1  00F2               	movwf	i1decrease@delt
 11849  0BC2  00F3               	movwf	i1decrease@min
 11850  0BC3  01F4               	clrf	i1decrease@min+1
 11851  0BC4  0008               	return
 11852  0BC5                     __end_ofPL100:	
 11853  0BC5                     PL114:	
 11854  0BC5  0281               	subwf	1,f
 11855  0BC6  3141               	addfsr 1,1
 11856  0BC7  1C03               	skipc
 11857  0BC8  0381               	decf	1,f
 11858  0BC9  317F               	addfsr 1,-1
 11859  0BCA  0008               	return
 11860  0BCB                     __end_ofPL114:	
 11861  0BCB                     PL126:	
 11862  0BCB  0781               	addwf	1,f
 11863  0BCC  3141               	addfsr 1,1
 11864  0BCD  1803               	skipnc
 11865  0BCE  0A81               	incf	1,f
 11866  0BCF  0008               	return
 11867  0BD0                     __end_ofPL126:	
 11868  0BD0                     PL132:	
 11869  0BD0  0022               	movlb	2	; select bank2
 11870  0BD1  130D               	bcf	13,6	;volatile
 11871  0BD2  108C               	bcf	12,1	;volatile
 11872  0BD3  138D               	bcf	13,7	;volatile
 11873  0BD4  0008               	return
 11874  0BD5                     __end_ofPL132:	
 11875  0BD5                     PL134:	
 11876  0BD5  0022               	movlb	2	; select bank2
 11877  0BD6  170D               	bsf	13,6	;volatile
 11878  0BD7  148C               	bsf	12,1	;volatile
 11879  0BD8  138D               	bcf	13,7	;volatile
 11880  0BD9  0008               	return
 11881  0BDA                     __end_ofPL134:	
 11882  0BDA                     PL138:	
 11883  0BDA  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 11884  0BDB  0086               	movwf	6
 11885  0BDC  3000               	movlw	0
 11886  0BDD  3FC0               	movwi [0]fsr1
 11887  0BDE  3FC1               	movwi [1]fsr1
 11888  0BDF  0008               	return
 11889  0BE0                     __end_ofPL138:	
 11890  0BE0                     PL142:	
 11891  0BE0  0020               	movlb	0	; select bank0
 11892  0BE1  3003               	movlw	3
 11893  0BE2  155C               	bsf	_led_run_para,2
 11894  0BE3  00DF               	movwf	_led_run_para+3
 11895  0BE4  0008               	return
 11896  0BE5                     __end_ofPL142:	
 11897  0BE5                     PL158:	
 11898  0BE5  0087               	movwf	7
 11899  0BE6  3000               	movlw	0
 11900  0BE7  3FC0               	movwi [0]fsr1
 11901  0BE8  3FC1               	movwi [1]fsr1
 11902  0BE9  0008               	return
 11903  0BEA                     __end_ofPL158:	
 11904  0BEA                     PL162:	
 11905  0BEA  170D               	bsf	13,6	;volatile
 11906  0BEB  108C               	bcf	12,1	;volatile
 11907  0BEC  178D               	bsf	13,7	;volatile
 11908  0BED  0008               	return
 11909  0BEE                     __end_ofPL162:	
 11910  0BEE                     __ptext45:	
 11911 ;; *************** function _led_set_power *****************
 11912 ;; Defined at:
 11913 ;;		line 2036 in file "src/app_led.c"
 11914 ;; Parameters:    Size  Location     Type
 11915 ;;  on              1    wreg     unsigned char 
 11916 ;; Auto vars:     Size  Location     Type
 11917 ;;  on              1    7[BANK0 ] unsigned char 
 11918 ;; Return value:  Size  Location     Type
 11919 ;;                  1    wreg      unsigned char 
 11920 ;; Registers used:
 11921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11922 ;; Tracked objects:
 11923 ;;		On entry : 1F/3
 11924 ;;		On exit  : 1F/0
 11925 ;;		Unchanged: 0/0
 11926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11930 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11931 ;;Total ram usage:        1 bytes
 11932 ;; Hardware stack levels used:    1
 11933 ;; Hardware stack levels required when called:   10
 11934 ;; This function calls:
 11935 ;;		_led_prepare_to_save
 11936 ;;		_led_turnoff_ramp
 11937 ;;		_led_turnon_ramp
 11938 ;; This function is called by:
 11939 ;;		_ble_decode
 11940 ;; This function uses a non-reentrant model
 11941 ;;
 11942                           
 11943                           
 11944                           ;psect for function _led_set_power
 11945  0BEE                     _led_set_power:	
 11946                           
 11947                           ;incstack = 0
 11948                           ; Regs used in _led_set_power: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11949                           ;led_set_power@on stored from wreg
 11950  0BEE  0020               	movlb	0	; select bank0
 11951  0BEF  00A7               	movwf	led_set_power@on
 11952                           
 11953                           ;app_led.c: 2038: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0)
 11954  0BF0  1C5C               	btfss	_led_run_para,0
 11955  0BF1  18DC               	btfsc	_led_run_para,1
 11956  0BF2  3400               	retlw	0
 11957  0BF3  318E  26AD  3188   	fcall	PL10	;call to abstracted procedure
 11958  0BF6  1D03               	btfss	3,2
 11959                           
 11960                           ;app_led.c: 2039: {
 11961                           ;app_led.c: 2040: return 0;
 11962  0BF7  3400               	retlw	0
 11963                           
 11964                           ;app_led.c: 2041: }
 11965                           ;app_led.c: 2046: m_led_para.ble_para.manual_para.mOn = on;
 11966  0BF8  2218  3188         	fcall	PL52	;call to abstracted procedure
 11967  0BFA  0C27               	rrf	led_set_power@on,w
 11968  0BFB  1C03               	skipc
 11969  0BFC  1001               	bcf	1,0
 11970  0BFD  1803               	skipnc
 11971  0BFE  1401               	bsf	1,0
 11972                           
 11973                           ;app_led.c: 2047: if(on)
 11974  0BFF  0827               	movf	led_set_power@on,w
 11975  0C00  1903               	btfsc	3,2
 11976  0C01  2C06               	goto	l4483
 11977                           
 11978                           ;app_led.c: 2048: {
 11979                           ;app_led.c: 2057: led_turnon_ramp();
 11980  0C02  318D  25F6  3188   	fcall	_led_turnon_ramp
 11981                           
 11982                           ;app_led.c: 2061: }
 11983  0C05  2C09               	goto	l4485
 11984  0C06                     l4483:	
 11985                           
 11986                           ;app_led.c: 2062: else
 11987                           ;app_led.c: 2063: {
 11988                           ;app_led.c: 2064: led_turnoff_ramp();
 11989  0C06  318E  2699  3188   	fcall	_led_turnoff_ramp
 11990  0C09                     l4485:	
 11991                           
 11992                           ;app_led.c: 2065: }
 11993                           ;app_led.c: 2066: led_prepare_to_save();
 11994  0C09  2175               	fcall	_led_prepare_to_save
 11995                           
 11996                           ;app_led.c: 2067: return 1;
 11997  0C0A  3401               	retlw	1
 11998  0C0B                     __end_of_led_set_power:	
 11999                           
 12000                           	psect	swtext1
 12001  1822                     __pswtext1:	
 12002  1822                     S6787:	
 12003  1822  3188  28D8         	ljmp	l6263
 12004  1824  3189  290E         	ljmp	l472
 12005  1826  3188  2843         	ljmp	l6193
 12006  1828  3188  2851         	ljmp	l6199
 12007  182A  3188  285B         	ljmp	l6205
 12008  182C  3188  2863         	ljmp	l6209
 12009  182E  3188  2869         	ljmp	l6213
 12010  1830  3188  2873         	ljmp	l6219
 12011  1832  3188  287C         	ljmp	l6225
 12012  1834  3188  2889         	ljmp	l6229
 12013  1836  3189  290E         	ljmp	l472
 12014  1838  3188  2896         	ljmp	l6233
 12015  183A  3188  28A3         	ljmp	l6239
 12016  183C  3189  290E         	ljmp	l472
 12017  183E  3188  28A9         	ljmp	l6243
 12018  1840  3188  28B2         	ljmp	l6249
 12019  1842  3188  28B8         	ljmp	l6253
 12020                           
 12021                           	psect	text43
 12022  118A                     __ptext43:	
 12023 ;; *************** function _led_set_pro *****************
 12024 ;; Defined at:
 12025 ;;		line 2133 in file "src/app_led.c"
 12026 ;; Parameters:    Size  Location     Type
 12027 ;;  pbuf            1    wreg     const PTR const unsigned
 12028 ;;		 -> rx_buf(80), 
 12029 ;; Auto vars:     Size  Location     Type
 12030 ;;  pbuf            1   14[BANK0 ] const PTR const unsigned
 12031 ;;		 -> rx_buf(80), 
 12032 ;;  i               1   15[BANK0 ] unsigned char 
 12033 ;;  len             1   13[BANK0 ] unsigned char 
 12034 ;; Return value:  Size  Location     Type
 12035 ;;                  1    wreg      unsigned char 
 12036 ;; Registers used:
 12037 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12038 ;; Tracked objects:
 12039 ;;		On entry : 1F/0
 12040 ;;		On exit  : 1F/0
 12041 ;;		Unchanged: 0/0
 12042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12044 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12045 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12046 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12047 ;;Total ram usage:       11 bytes
 12048 ;; Hardware stack levels used:    1
 12049 ;; Hardware stack levels required when called:   10
 12050 ;; This function calls:
 12051 ;;		___bmul
 12052 ;;		_led_prepare_to_save
 12053 ;; This function is called by:
 12054 ;;		_ble_decode
 12055 ;; This function uses a non-reentrant model
 12056 ;;
 12057                           
 12058                           
 12059                           ;psect for function _led_set_pro
 12060  118A                     _led_set_pro:	
 12061                           
 12062                           ;incstack = 0
 12063                           ; Regs used in _led_set_pro: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12064                           ;led_set_pro@pbuf stored from wreg
 12065  118A  00AE               	movwf	led_set_pro@pbuf
 12066                           
 12067                           ;app_led.c: 2139: uint8_t len = (*pbuf)*(2+5)+1;
 12068  118B  3007               	movlw	7
 12069  118C  00A2               	movwf	___bmul@multiplicand
 12070  118D  082E               	movf	led_set_pro@pbuf,w
 12071  118E  0086               	movwf	6
 12072  118F  3001               	movlw	1	; select bank2/3
 12073  1190  0087               	movwf	7
 12074  1191  0801               	movf	1,w
 12075  1192  2356  3191         	fcall	___bmul
 12076  1194  3E01               	addlw	1
 12077  1195  00AD               	movwf	led_set_pro@len
 12078                           
 12079                           ;app_led.c: 2140: for(uint8_t i = 0; i < len; i++)
 12080  1196  01AF               	clrf	led_set_pro@i
 12081  1197                     l6023:	
 12082  1197  082D               	movf	led_set_pro@len,w
 12083  1198  022F               	subwf	led_set_pro@i,w
 12084  1199  1803               	btfsc	3,0
 12085  119A  29B8               	goto	l6025
 12086                           
 12087                           ;app_led.c: 2141: {
 12088                           ;app_led.c: 2142: m_led_para.ble_para.pro_para.array[i] = *(pbuf+i);
 12089  119B  082F               	movf	led_set_pro@i,w
 12090  119C  072E               	addwf	led_set_pro@pbuf,w
 12091  119D  00A5               	movwf	??_led_set_pro
 12092  119E  0086               	movwf	6
 12093  119F  3001               	movlw	1	; select bank2/3
 12094  11A0  0087               	movwf	7
 12095  11A1  0801               	movf	1,w
 12096  11A2  00A6               	movwf	??_led_set_pro+1
 12097  11A3  082F               	movf	led_set_pro@i,w
 12098  11A4  00A7               	movwf	??_led_set_pro+2
 12099  11A5  30A9               	movlw	169
 12100  11A6  01A8               	clrf	??_led_set_pro+3
 12101  11A7  00A9               	movwf	??_led_set_pro+4
 12102  11A8  3023               	movlw	35
 12103  11A9  00AA               	movwf	??_led_set_pro+5
 12104  11AA  0827               	movf	??_led_set_pro+2,w
 12105  11AB  0729               	addwf	??_led_set_pro+4,w
 12106  11AC  00AB               	movwf	??_led_set_pro+6
 12107  11AD  0828               	movf	??_led_set_pro+3,w
 12108  11AE  3D2A               	addwfc	??_led_set_pro+5,w
 12109  11AF  00AC               	movwf	??_led_set_pro+7
 12110  11B0  082B               	movf	??_led_set_pro+6,w
 12111  11B1  0086               	movwf	6
 12112  11B2  082C               	movf	??_led_set_pro+7,w
 12113  11B3  0087               	movwf	7
 12114  11B4  0826               	movf	??_led_set_pro+1,w
 12115  11B5  0081               	movwf	1
 12116  11B6  0AAF               	incf	led_set_pro@i,f
 12117  11B7  2997               	goto	l6023
 12118  11B8                     l6025:	
 12119                           
 12120                           ;app_led.c: 2143: }
 12121                           ;app_led.c: 2144: led_prepare_to_save();
 12122  11B8  3189  2175         	fcall	_led_prepare_to_save
 12123                           
 12124                           ;app_led.c: 2145: return 1;
 12125  11BA  3401               	retlw	1
 12126  11BB                     __end_of_led_set_pro:	
 12127  11BB                     __ptext14:	
 12128 ;; *************** function _led_auto_process *****************
 12129 ;; Defined at:
 12130 ;;		line 513 in file "src/app_led.c"
 12131 ;; Parameters:    Size  Location     Type
 12132 ;;  ct              2   42[BANK0 ] unsigned int 
 12133 ;;  sec             1   44[BANK0 ] unsigned char 
 12134 ;; Auto vars:     Size  Location     Type
 12135 ;;  val            30    0[BANK1 ] unsigned char [5][6]
 12136 ;;  tr             12   30[BANK1 ] unsigned int [6]
 12137 ;;  dt              4   45[BANK1 ] unsigned long 
 12138 ;;  p               2   55[BANK1 ] PTR struct .
 12139 ;;		 -> m_led_para.ble_para.auto_para(21), m_led_para.ble_para(125), 
 12140 ;;  st              2   53[BANK1 ] unsigned int 
 12141 ;;  et              2   50[BANK1 ] unsigned int 
 12142 ;;  duration        2   42[BANK1 ] unsigned int 
 12143 ;;  i               1   57[BANK1 ] unsigned char 
 12144 ;;  k               1   52[BANK1 ] unsigned char 
 12145 ;;  count           1   49[BANK1 ] unsigned char 
 12146 ;;  j               1   44[BANK1 ] unsigned char 
 12147 ;; Return value:  Size  Location     Type
 12148 ;;                  1    wreg      void 
 12149 ;; Registers used:
 12150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12151 ;; Tracked objects:
 12152 ;;		On entry : 1F/0
 12153 ;;		On exit  : 1F/1
 12154 ;;		Unchanged: 0/0
 12155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12156 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12157 ;;      Locals:         0       0      58       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12159 ;;      Totals:         0       7      58       0       0       0       0       0       0       0       0       0       
      +0       0
 12160 ;;Total ram usage:       65 bytes
 12161 ;; Hardware stack levels used:    1
 12162 ;; Hardware stack levels required when called:   11
 12163 ;; This function calls:
 12164 ;;		___awmod
 12165 ;;		___bmul
 12166 ;;		___lmul
 12167 ;;		___wmul
 12168 ;;		_led_calc_bright
 12169 ;; This function is called by:
 12170 ;;		_led_second_cb
 12171 ;; This function uses a non-reentrant model
 12172 ;;
 12173                           
 12174                           
 12175                           ;psect for function _led_auto_process
 12176  11BB                     _led_auto_process:	
 12177                           
 12178                           ;app_led.c: 515: uint8_t i, j, k;
 12179                           ;app_led.c: 516: uint16_t st;
 12180                           ;app_led.c: 517: uint16_t et;
 12181                           ;app_led.c: 518: uint16_t duration;
 12182                           ;app_led.c: 519: uint32_t dt;
 12183                           ;app_led.c: 520: uint8_t count = 4;
 12184                           
 12185                           ;incstack = 0
 12186                           ; Regs used in _led_auto_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12187  11BB  3004               	movlw	4
 12188  11BC  0021               	movlb	1	; select bank1
 12189  11BD  00D1               	movwf	led_auto_process@count^(0+128)
 12190                           
 12191                           ;app_led.c: 521: auto_para_t *p = &m_led_para.ble_para.auto_para;
 12192  11BE  3023               	movlw	35
 12193  11BF  00D8               	movwf	(led_auto_process@p+1)^(0+128)
 12194  11C0  3073               	movlw	115
 12195  11C1  00D7               	movwf	led_auto_process@p^(0+128)
 12196  11C2  3021               	movlw	33
 12197  11C3  07D7               	addwf	led_auto_process@p^(0+128),f
 12198  11C4  1803               	skipnc
 12199  11C5  0AD8               	incf	(led_auto_process@p+1)^(0+128),f
 12200                           
 12201                           ;app_led.c: 522: uint16_t tr[6];
 12202                           ;app_led.c: 523: tr[0] = p->sunrise_start_hour * 60u + p->sunrise_start_minute;
 12203  11C6  0857               	movf	led_auto_process@p^(0+128),w
 12204  11C7  0086               	movwf	6
 12205  11C8  0858               	movf	(led_auto_process@p+1)^(0+128),w
 12206  11C9  0087               	movwf	7
 12207  11CA  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
 12208  11CD  3196  26BE  3191   	fcall	___wmul
 12209  11D0  0823               	movf	?___wmul+1,w
 12210  11D1  0021               	movlb	1	; select bank1
 12211  11D2  00BF               	movwf	(led_auto_process@tr+1)^(0+128)
 12212  11D3  0020               	movlb	0	; select bank0
 12213  11D4  0822               	movf	?___wmul,w
 12214  11D5  0021               	movlb	1	; select bank1
 12215  11D6  00BE               	movwf	led_auto_process@tr^(0+128)
 12216  11D7  0857               	movf	led_auto_process@p^(0+128),w
 12217  11D8  0086               	movwf	6
 12218  11D9  0858               	movf	(led_auto_process@p+1)^(0+128),w
 12219  11DA  0087               	movwf	7
 12220  11DB  3141               	addfsr 1,1
 12221  11DC  0801               	movf	1,w
 12222  11DD  07BE               	addwf	led_auto_process@tr^(0+128),f
 12223  11DE  1803               	skipnc
 12224  11DF  0ABF               	incf	(led_auto_process@tr+1)^(0+128),f
 12225                           
 12226                           ;app_led.c: 524: tr[1] = p->sunrise_end_hour * 60u + p->sunrise_end_minute;
 12227  11E0  0857               	movf	led_auto_process@p^(0+128),w
 12228  11E1  0086               	movwf	6
 12229  11E2  0858               	movf	(led_auto_process@p+1)^(0+128),w
 12230  11E3  0087               	movwf	7
 12231  11E4  3143               	addfsr 1,3
 12232  11E5  245F               	fcall	PL24	;call to abstracted procedure
 12233  11E6  3142               	addfsr 1,2
 12234  11E7  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
 12235  11EA  3196  26BE  3191   	fcall	___wmul
 12236  11ED  084D               	movf	??_led_auto_process,w
 12237  11EE  0722               	addwf	?___wmul,w
 12238  11EF  0021               	movlb	1	; select bank1
 12239  11F0  00C0               	movwf	(led_auto_process@tr^(0+128)+2)
 12240  11F1  0020               	movlb	0	; select bank0
 12241  11F2  084E               	movf	??_led_auto_process+1,w
 12242  11F3  3D23               	addwfc	?___wmul+1,w
 12243  11F4  0021               	movlb	1	; select bank1
 12244  11F5  00C1               	movwf	((led_auto_process@tr+1)^(0+128)+2)
 12245                           
 12246                           ;app_led.c: 525: tr[2] = p->sunset_start_hour * 60u + p->sunset_start_minute;
 12247  11F6  0857               	movf	led_auto_process@p^(0+128),w
 12248  11F7  0086               	movwf	6
 12249  11F8  0858               	movf	(led_auto_process@p+1)^(0+128),w
 12250  11F9  0087               	movwf	7
 12251  11FA  314A               	addfsr 1,10
 12252  11FB  245F               	fcall	PL24	;call to abstracted procedure
 12253  11FC  3149               	addfsr 1,9
 12254  11FD  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
 12255  1200  3196  26BE  3191   	fcall	___wmul
 12256  1203  084D               	movf	??_led_auto_process,w
 12257  1204  0722               	addwf	?___wmul,w
 12258  1205  0021               	movlb	1	; select bank1
 12259  1206  00C2               	movwf	(led_auto_process@tr^(0+128)+4)
 12260  1207  0020               	movlb	0	; select bank0
 12261  1208  084E               	movf	??_led_auto_process+1,w
 12262  1209  3D23               	addwfc	?___wmul+1,w
 12263  120A  0021               	movlb	1	; select bank1
 12264  120B  00C3               	movwf	((led_auto_process@tr+1)^(0+128)+4)
 12265                           
 12266                           ;app_led.c: 526: tr[3] = p->sunset_end_hour * 60u + p->sunset_end_minute;
 12267  120C  0857               	movf	led_auto_process@p^(0+128),w
 12268  120D  0086               	movwf	6
 12269  120E  0858               	movf	(led_auto_process@p+1)^(0+128),w
 12270  120F  0087               	movwf	7
 12271  1210  314C               	addfsr 1,12
 12272  1211  245F               	fcall	PL24	;call to abstracted procedure
 12273  1212  314B               	addfsr 1,11
 12274  1213  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
 12275  1216  3196  26BE  3191   	fcall	___wmul
 12276  1219  084D               	movf	??_led_auto_process,w
 12277  121A  0722               	addwf	?___wmul,w
 12278  121B  0021               	movlb	1	; select bank1
 12279  121C  00C4               	movwf	(led_auto_process@tr^(0+128)+6)
 12280  121D  0020               	movlb	0	; select bank0
 12281  121E  084E               	movf	??_led_auto_process+1,w
 12282  121F  3D23               	addwfc	?___wmul+1,w
 12283  1220  0021               	movlb	1	; select bank1
 12284  1221  00C5               	movwf	((led_auto_process@tr+1)^(0+128)+6)
 12285                           
 12286                           ;app_led.c: 527: tr[4] = p->turnoff_hour * 60u + p->turnoff_minute;
 12287  1222  0857               	movf	led_auto_process@p^(0+128),w
 12288  1223  0086               	movwf	6
 12289  1224  0858               	movf	(led_auto_process@p+1)^(0+128),w
 12290  1225  0087               	movwf	7
 12291  1226  3154               	addfsr 1,20
 12292  1227  245F               	fcall	PL24	;call to abstracted procedure
 12293  1228  3153               	addfsr 1,19
 12294  1229  3197  2753  3191   	fcall	PL8	;call to abstracted procedure
 12295  122C  3196  26BE  3191   	fcall	___wmul
 12296  122F  084D               	movf	??_led_auto_process,w
 12297  1230  0722               	addwf	?___wmul,w
 12298  1231  0021               	movlb	1	; select bank1
 12299  1232  00C6               	movwf	(led_auto_process@tr^(0+128)+8)
 12300  1233  0020               	movlb	0	; select bank0
 12301  1234  084E               	movf	??_led_auto_process+1,w
 12302  1235  3D23               	addwfc	?___wmul+1,w
 12303  1236  0021               	movlb	1	; select bank1
 12304  1237  00C7               	movwf	((led_auto_process@tr+1)^(0+128)+8)
 12305                           
 12306                           ;app_led.c: 528: tr[5] = tr[4];
 12307  1238  00C9               	movwf	((led_auto_process@tr+1)^(0+128)+10)
 12308  1239  0846               	movf	(led_auto_process@tr^(0+128)+8),w
 12309  123A  00C8               	movwf	(led_auto_process@tr^(0+128)+10)
 12310                           
 12311                           ;app_led.c: 529: uint8_t val[6][5];
 12312                           ;app_led.c: 530: for(i = 0; i < 5; i++)
 12313  123B  01D9               	clrf	led_auto_process@i^(0+128)
 12314                           
 12315                           ;app_led.c: 531: {
 12316                           ;app_led.c: 532: if(p->turnoff_enabled)
 12317  123C  249A  3191         	fcall	PL110	;call to abstracted procedure
 12318  123E                     L7:	
 12319  123E  1903               	btfsc	3,2
 12320  123F  2A46               	goto	l6469
 12321                           
 12322                           ;app_led.c: 533: {
 12323                           ;app_led.c: 534: val[0][i] = 0;
 12324  1240  0859               	movf	led_auto_process@i^(0+128),w
 12325  1241  3EA0               	addlw	(low (led_auto_process@val| 0))& (0+255)
 12326  1242  0086               	movwf	6
 12327  1243  0187               	clrf	7
 12328  1244  0181               	clrf	1
 12329                           
 12330                           ;app_led.c: 535: }
 12331  1245  2A4C               	goto	l671
 12332  1246                     l6469:	
 12333                           
 12334                           ;app_led.c: 536: else
 12335                           ;app_led.c: 537: {
 12336                           ;app_led.c: 538: val[0][i] = p->night_bright[i];
 12337  1246  0859               	movf	led_auto_process@i^(0+128),w
 12338  1247  244A  3191         	fcall	PL2	;call to abstracted procedure
 12339  1249  310D               	addfsr 0,13
 12340  124A  0800               	movf	0,w
 12341  124B  0081               	movwf	1
 12342  124C                     l671:	
 12343                           
 12344                           ;app_led.c: 539: }
 12345                           ;app_led.c: 540: val[1][i] = p->day_bright[i];
 12346  124C  0021               	movlb	1	; select bank1
 12347  124D  0859               	movf	led_auto_process@i^(0+128),w
 12348  124E  3E05               	addlw	5
 12349  124F  244A  3191         	fcall	PL2	;call to abstracted procedure
 12350                           
 12351                           ;app_led.c: 541: val[2][i] = p->day_bright[i];
 12352  1251  24A1  3191         	fcall	PL128	;call to abstracted procedure
 12353  1253  3E0A               	addlw	10
 12354  1254  244A  3191         	fcall	PL2	;call to abstracted procedure
 12355                           
 12356                           ;app_led.c: 542: val[3][i] = p->night_bright[i];
 12357  1256  24A1  3191         	fcall	PL128	;call to abstracted procedure
 12358  1258  3E0F               	addlw	15
 12359  1259  244A  3191         	fcall	PL2	;call to abstracted procedure
 12360                           
 12361                           ;app_led.c: 543: val[4][i] = p->night_bright[i];
 12362  125B  24A7  3191         	fcall	PL144	;call to abstracted procedure
 12363  125D  3E14               	addlw	20
 12364  125E  244A  3191         	fcall	PL2	;call to abstracted procedure
 12365                           
 12366                           ;app_led.c: 544: val[5][i] = 0;
 12367  1260  24A7  3191         	fcall	PL144	;call to abstracted procedure
 12368  1262  3E19               	addlw	25
 12369  1263  3EA0               	addlw	(low (led_auto_process@val| 0))& (0+255)
 12370  1264  0086               	movwf	6
 12371  1265  3005               	movlw	5
 12372  1266  0187               	clrf	7
 12373  1267  0181               	clrf	1
 12374  1268  0AD9               	incf	led_auto_process@i^(0+128),f
 12375  1269  0259               	subwf	led_auto_process@i^(0+128),w
 12376                           
 12377                           ;app_led.c: 545: }
 12378                           ;app_led.c: 546: if(p->turnoff_enabled)
 12379  126A  249A  3191         	fcall	PL110	;call to abstracted procedure
 12380  126C  1C03               	skipc
 12381  126D  2A3E               	goto	L7
 12382  126E  1903               	btfsc	3,2
 12383  126F  2A72               	goto	l6481
 12384                           
 12385                           ;app_led.c: 547: {
 12386                           ;app_led.c: 548: count = 6;
 12387  1270  3006               	movlw	6
 12388  1271  00D1               	movwf	led_auto_process@count^(0+128)
 12389  1272                     l6481:	
 12390                           
 12391                           ;app_led.c: 549: }
 12392                           ;app_led.c: 550: for(i = 0; i < count; i++)
 12393  1272  01D9               	clrf	led_auto_process@i^(0+128)
 12394  1273                     l6529:	
 12395  1273  0851               	movf	led_auto_process@count^(0+128),w
 12396  1274  0259               	subwf	led_auto_process@i^(0+128),w
 12397  1275  1803               	btfsc	3,0
 12398  1276  0008               	return
 12399                           
 12400                           ;app_led.c: 551: {
 12401                           ;app_led.c: 552: j = (i + 1) % count;
 12402  1277  0859               	movf	led_auto_process@i^(0+128),w
 12403  1278  0020               	movlb	0	; select bank0
 12404  1279  00A4               	movwf	___awmod@dividend
 12405  127A  01A5               	clrf	___awmod@dividend+1
 12406  127B  0AA4               	incf	___awmod@dividend,f
 12407  127C  1903               	skipnz
 12408  127D  0AA5               	incf	___awmod@dividend+1,f
 12409  127E  0021               	movlb	1	; select bank1
 12410  127F  0851               	movf	led_auto_process@count^(0+128),w
 12411  1280  0020               	movlb	0	; select bank0
 12412  1281  00A2               	movwf	___awmod@divisor
 12413  1282  01A3               	clrf	___awmod@divisor+1
 12414  1283  2363  3191         	fcall	___awmod
 12415  1285  0822               	movf	?___awmod,w
 12416  1286  0021               	movlb	1	; select bank1
 12417  1287  00CC               	movwf	led_auto_process@j^(0+128)
 12418                           
 12419                           ;app_led.c: 553: st = tr[i];
 12420  1288  3559               	lslf	led_auto_process@i^(0+128),w
 12421  1289  3EBE               	addlw	(low (led_auto_process@tr| 0))& (0+255)
 12422  128A  0086               	movwf	6
 12423  128B  0187               	clrf	7
 12424  128C  3F40               	moviw [0]fsr1
 12425  128D  00D5               	movwf	led_auto_process@st^(0+128)
 12426  128E  3F41               	moviw [1]fsr1
 12427  128F  00D6               	movwf	(led_auto_process@st+1)^(0+128)
 12428                           
 12429                           ;app_led.c: 554: et = tr[j];
 12430  1290  354C               	lslf	led_auto_process@j^(0+128),w
 12431  1291  3EBE               	addlw	(low (led_auto_process@tr| 0))& (0+255)
 12432  1292  0086               	movwf	6
 12433  1293  3F40               	moviw [0]fsr1
 12434  1294  00D2               	movwf	led_auto_process@et^(0+128)
 12435  1295  3F41               	moviw [1]fsr1
 12436  1296  00D3               	movwf	(led_auto_process@et+1)^(0+128)
 12437                           
 12438                           ;app_led.c: 555: if(et >= st)
 12439  1297  0856               	movf	(led_auto_process@st+1)^(0+128),w
 12440  1298  0253               	subwf	(led_auto_process@et+1)^(0+128),w
 12441  1299  1D03               	skipz
 12442  129A  2A9D               	goto	u6365
 12443  129B  0855               	movf	led_auto_process@st^(0+128),w
 12444  129C  0252               	subwf	led_auto_process@et^(0+128),w
 12445  129D                     u6365:	
 12446                           
 12447                           ;app_led.c: 556: {
 12448                           ;app_led.c: 557: if(ct >= st && ct < et)
 12449  129D  0856               	movf	(led_auto_process@st+1)^(0+128),w
 12450  129E  1C03               	skipc
 12451  129F  2ABE               	goto	L8
 12452  12A0  0020               	movlb	0	; select bank0
 12453  12A1  024B               	subwf	led_auto_process@ct+1,w
 12454  12A2  1D03               	skipz
 12455  12A3  2AA6               	goto	u6375
 12456  12A4  24AD  3191         	fcall	PL148	;call to abstracted procedure
 12457  12A6                     u6375:	
 12458  12A6  1C03               	skipc
 12459  12A7  2B53               	goto	l6527
 12460  12A8  0021               	movlb	1	; select bank1
 12461  12A9  0853               	movf	(led_auto_process@et+1)^(0+128),w
 12462  12AA  0020               	movlb	0	; select bank0
 12463  12AB  024B               	subwf	led_auto_process@ct+1,w
 12464  12AC  1D03               	skipz
 12465  12AD  2AB0               	goto	u6385
 12466  12AE  24B2  3191         	fcall	PL156	;call to abstracted procedure
 12467  12B0                     u6385:	
 12468  12B0  1803               	skipnc
 12469  12B1  2B53               	goto	l6527
 12470                           
 12471                           ;app_led.c: 558: {
 12472                           ;app_led.c: 559: duration = et - st;
 12473  12B2  2487  3191         	fcall	PL74	;call to abstracted procedure
 12474  12B4                     l6497:	
 12475                           
 12476                           ;app_led.c: 560: dt = (ct - st) * 60ul + sec;
 12477  12B4  0021               	movlb	1	; select bank1
 12478  12B5  0855               	movf	led_auto_process@st^(0+128),w
 12479  12B6  0020               	movlb	0	; select bank0
 12480  12B7  024A               	subwf	led_auto_process@ct,w
 12481  12B8  00A2               	movwf	___lmul@multiplier
 12482  12B9  0021               	movlb	1	; select bank1
 12483  12BA  0856               	movf	(led_auto_process@st+1)^(0+128),w
 12484  12BB  0020               	movlb	0	; select bank0
 12485  12BC  3B4B               	subwfb	led_auto_process@ct+1,w
 12486  12BD  2AEE               	goto	L6
 12487  12BE                     L8:	
 12488                           ;app_led.c: 567: else
 12489                           ;app_led.c: 568: {
 12490                           ;app_led.c: 569: if(ct >= st || ct < et)
 12491                           
 12492                           ;app_led.c: 561: }
 12493                           
 12494  12BE  0020               	movlb	0	; select bank0
 12495  12BF  024B               	subwf	led_auto_process@ct+1,w
 12496  12C0  1D03               	skipz
 12497  12C1  2AC4               	goto	u6395
 12498  12C2  24AD  3191         	fcall	PL148	;call to abstracted procedure
 12499  12C4                     u6395:	
 12500  12C4  1803               	skipnc
 12501  12C5  2AD0               	goto	l6505
 12502  12C6  0021               	movlb	1	; select bank1
 12503  12C7  0853               	movf	(led_auto_process@et+1)^(0+128),w
 12504  12C8  0020               	movlb	0	; select bank0
 12505  12C9  024B               	subwf	led_auto_process@ct+1,w
 12506  12CA  1D03               	skipz
 12507  12CB  2ACE               	goto	u6405
 12508  12CC  24B2  3191         	fcall	PL156	;call to abstracted procedure
 12509  12CE                     u6405:	
 12510  12CE  1803               	skipnc
 12511  12CF  2B53               	goto	l6527
 12512  12D0                     l6505:	
 12513                           
 12514                           ;app_led.c: 570: {
 12515                           ;app_led.c: 571: duration = 1440u - st + et;
 12516  12D0  2487  3191         	fcall	PL74	;call to abstracted procedure
 12517  12D2  30A0               	movlw	160
 12518  12D3  07CA               	addwf	led_auto_process@duration^(0+128),f
 12519  12D4  3005               	movlw	5
 12520  12D5  3DCB               	addwfc	(led_auto_process@duration+1)^(0+128),f
 12521                           
 12522                           ;app_led.c: 572: if(ct >= st)
 12523  12D6  0856               	movf	(led_auto_process@st+1)^(0+128),w
 12524  12D7  0020               	movlb	0	; select bank0
 12525  12D8  024B               	subwf	led_auto_process@ct+1,w
 12526  12D9  1D03               	skipz
 12527  12DA  2ADD               	goto	u6415
 12528  12DB  24AD  3191         	fcall	PL148	;call to abstracted procedure
 12529  12DD                     u6415:	
 12530  12DD  1803               	btfsc	3,0
 12531  12DE  2AB4               	goto	l6497
 12532                           
 12533                           ;app_led.c: 576: else
 12534                           ;app_led.c: 577: {
 12535                           ;app_led.c: 578: dt = (1440u - st + ct) * 60ul + sec;
 12536  12DF  0021               	movlb	1	; select bank1
 12537  12E0  0855               	movf	led_auto_process@st^(0+128),w
 12538  12E1  0020               	movlb	0	; select bank0
 12539  12E2  024A               	subwf	led_auto_process@ct,w
 12540  12E3  00CD               	movwf	??_led_auto_process
 12541  12E4  0021               	movlb	1	; select bank1
 12542  12E5  0856               	movf	(led_auto_process@st+1)^(0+128),w
 12543  12E6  0020               	movlb	0	; select bank0
 12544  12E7  3B4B               	subwfb	led_auto_process@ct+1,w
 12545  12E8  00CE               	movwf	??_led_auto_process+1
 12546  12E9  084D               	movf	??_led_auto_process,w
 12547  12EA  3EA0               	addlw	160
 12548  12EB  00A2               	movwf	___lmul@multiplier
 12549  12EC  3005               	movlw	5
 12550  12ED  3D4E               	addwfc	??_led_auto_process+1,w
 12551  12EE                     L6:	
 12552  12EE  00A3               	movwf	___lmul@multiplier+1
 12553  12EF  303C               	movlw	60
 12554  12F0  01A4               	clrf	___lmul@multiplier+2
 12555  12F1  01A5               	clrf	___lmul@multiplier+3
 12556  12F2  00A6               	movwf	___lmul@multiplicand
 12557  12F3  01A7               	clrf	___lmul@multiplicand+1
 12558  12F4  01A8               	clrf	___lmul@multiplicand+2
 12559  12F5  01A9               	clrf	___lmul@multiplicand+3
 12560  12F6  239C  3191         	fcall	___lmul
 12561  12F8  0825               	movf	?___lmul+3,w
 12562  12F9  0021               	movlb	1	; select bank1
 12563  12FA  00D0               	movwf	(led_auto_process@dt+3)^(0+128)
 12564  12FB  0020               	movlb	0	; select bank0
 12565  12FC  0824               	movf	?___lmul+2,w
 12566  12FD  0021               	movlb	1	; select bank1
 12567  12FE  00CF               	movwf	(led_auto_process@dt+2)^(0+128)
 12568  12FF  0020               	movlb	0	; select bank0
 12569  1300  0823               	movf	?___lmul+1,w
 12570  1301  0021               	movlb	1	; select bank1
 12571  1302  00CE               	movwf	(led_auto_process@dt+1)^(0+128)
 12572  1303  0020               	movlb	0	; select bank0
 12573  1304  0822               	movf	?___lmul,w
 12574  1305  0021               	movlb	1	; select bank1
 12575  1306  00CD               	movwf	led_auto_process@dt^(0+128)
 12576  1307  0020               	movlb	0	; select bank0
 12577  1308  084C               	movf	led_auto_process@sec,w
 12578  1309  0021               	movlb	1	; select bank1
 12579  130A  07CD               	addwf	led_auto_process@dt^(0+128),f
 12580  130B  3001               	movlw	1
 12581  130C  1803               	skipnc
 12582  130D  07CE               	addwf	(led_auto_process@dt+1)^(0+128),f
 12583  130E  1803               	skipnc
 12584  130F  07CF               	addwf	(led_auto_process@dt+2)^(0+128),f
 12585  1310  1803               	skipnc
 12586  1311  07D0               	addwf	(led_auto_process@dt+3)^(0+128),f
 12587                           
 12588                           ;app_led.c: 584: }
 12589                           ;app_led.c: 585: }
 12590                           ;app_led.c: 586: for(k = 0; k < 5; k++)
 12591  1312  01D4               	clrf	led_auto_process@k^(0+128)
 12592  1313                     l6521:	
 12593                           
 12594                           ;app_led.c: 587: {
 12595                           ;app_led.c: 588: target_bright[k] = led_calc_bright(val[i][k], val[j][k], duration, dt )
      +                          ;
 12596  1313  3005               	movlw	5
 12597  1314  0020               	movlb	0	; select bank0
 12598  1315  00A2               	movwf	___bmul@multiplicand
 12599  1316  0021               	movlb	1	; select bank1
 12600  1317  084C               	movf	led_auto_process@j^(0+128),w
 12601  1318  2356  3191         	fcall	___bmul
 12602  131A  3EA0               	addlw	(low (led_auto_process@val| 0))& (0+255)
 12603  131B  0021               	movlb	1	; select bank1
 12604  131C  0754               	addwf	led_auto_process@k^(0+128),w
 12605  131D  0020               	movlb	0	; select bank0
 12606  131E  00CD               	movwf	??_led_auto_process
 12607  131F  0086               	movwf	6
 12608  1320  0187               	clrf	7
 12609  1321  0801               	movf	1,w
 12610  1322  00BB               	movwf	led_calc_bright@ebrt
 12611  1323  0021               	movlb	1	; select bank1
 12612  1324  084B               	movf	(led_auto_process@duration+1)^(0+128),w
 12613  1325  0020               	movlb	0	; select bank0
 12614  1326  00BD               	movwf	led_calc_bright@duration+1
 12615  1327  0021               	movlb	1	; select bank1
 12616  1328  084A               	movf	led_auto_process@duration^(0+128),w
 12617  1329  0020               	movlb	0	; select bank0
 12618  132A  00BC               	movwf	led_calc_bright@duration
 12619  132B  0021               	movlb	1	; select bank1
 12620  132C  0850               	movf	(led_auto_process@dt+3)^(0+128),w
 12621  132D  0020               	movlb	0	; select bank0
 12622  132E  00C1               	movwf	led_calc_bright@dt+3
 12623  132F  0021               	movlb	1	; select bank1
 12624  1330  084F               	movf	(led_auto_process@dt+2)^(0+128),w
 12625  1331  0020               	movlb	0	; select bank0
 12626  1332  00C0               	movwf	led_calc_bright@dt+2
 12627  1333  0021               	movlb	1	; select bank1
 12628  1334  084E               	movf	(led_auto_process@dt+1)^(0+128),w
 12629  1335  0020               	movlb	0	; select bank0
 12630  1336  00BF               	movwf	led_calc_bright@dt+1
 12631  1337  0021               	movlb	1	; select bank1
 12632  1338  084D               	movf	led_auto_process@dt^(0+128),w
 12633  1339  0020               	movlb	0	; select bank0
 12634  133A  00BE               	movwf	led_calc_bright@dt
 12635  133B  3005               	movlw	5
 12636  133C  00A2               	movwf	___bmul@multiplicand
 12637  133D  0021               	movlb	1	; select bank1
 12638  133E  0859               	movf	led_auto_process@i^(0+128),w
 12639  133F  2356  3191         	fcall	___bmul
 12640  1341  3EA0               	addlw	(low (led_auto_process@val| 0))& (0+255)
 12641  1342  0021               	movlb	1	; select bank1
 12642  1343  0754               	addwf	led_auto_process@k^(0+128),w
 12643  1344  0020               	movlb	0	; select bank0
 12644  1345  00CE               	movwf	??_led_auto_process+1
 12645  1346  0086               	movwf	6
 12646  1347  0187               	clrf	7
 12647  1348  0801               	movf	1,w
 12648  1349  23C1  3191         	fcall	_led_calc_bright
 12649  134B  0021               	movlb	1	; select bank1
 12650  134C  3554               	lslf	led_auto_process@k^(0+128),w
 12651  134D  247D  3191         	fcall	PL60	;call to abstracted procedure
 12652  134F  0AD4               	incf	led_auto_process@k^(0+128),f
 12653  1350  0254               	subwf	led_auto_process@k^(0+128),w
 12654  1351  1C03               	skipc
 12655  1352  2B13               	goto	l6521
 12656  1353                     l6527:	
 12657  1353  0021               	movlb	1	; select bank1
 12658  1354  0AD9               	incf	led_auto_process@i^(0+128),f
 12659  1355  2A73               	goto	l6529
 12660  1356                     __end_of_led_auto_process:	
 12661  1356                     __ptext60:	
 12662 ;; *************** function ___bmul *****************
 12663 ;; Defined at:
 12664 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul8.c"
 12665 ;; Parameters:    Size  Location     Type
 12666 ;;  multiplier      1    wreg     unsigned char 
 12667 ;;  multiplicand    1    2[BANK0 ] unsigned char 
 12668 ;; Auto vars:     Size  Location     Type
 12669 ;;  multiplier      1    4[BANK0 ] unsigned char 
 12670 ;;  product         1    3[BANK0 ] unsigned char 
 12671 ;; Return value:  Size  Location     Type
 12672 ;;                  1    wreg      unsigned char 
 12673 ;; Registers used:
 12674 ;;		wreg, status,2, status,0
 12675 ;; Tracked objects:
 12676 ;;		On entry : 1E/1
 12677 ;;		On exit  : 1F/0
 12678 ;;		Unchanged: 0/0
 12679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12680 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12681 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12683 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12684 ;;Total ram usage:        3 bytes
 12685 ;; Hardware stack levels used:    1
 12686 ;; Hardware stack levels required when called:    9
 12687 ;; This function calls:
 12688 ;;		Nothing
 12689 ;; This function is called by:
 12690 ;;		_ble_send_data
 12691 ;;		_led_auto_process
 12692 ;;		_led_set_pro
 12693 ;; This function uses a non-reentrant model
 12694 ;;
 12695                           
 12696                           
 12697                           ;psect for function ___bmul
 12698  1356                     ___bmul:	
 12699                           
 12700                           ;incstack = 0
 12701                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12702                           ;___bmul@multiplier stored from wreg
 12703  1356  0020               	movlb	0	; select bank0
 12704  1357  00A4               	movwf	___bmul@multiplier
 12705  1358  01A3               	clrf	___bmul@product
 12706  1359                     l5877:	
 12707  1359  0822               	movf	___bmul@multiplicand,w
 12708  135A  1824               	btfsc	___bmul@multiplier,0
 12709  135B  07A3               	addwf	___bmul@product,f
 12710  135C  35A2               	lslf	___bmul@multiplicand,f
 12711  135D  36A4               	lsrf	___bmul@multiplier,f
 12712  135E  0824               	movf	___bmul@multiplier,w
 12713  135F  1D03               	btfss	3,2
 12714  1360  2B59               	goto	l5877
 12715  1361  0823               	movf	___bmul@product,w
 12716  1362  0008               	return
 12717  1363                     __end_of___bmul:	
 12718  1363                     __ptext18:	
 12719 ;; *************** function ___awmod *****************
 12720 ;; Defined at:
 12721 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\awmod.c"
 12722 ;; Parameters:    Size  Location     Type
 12723 ;;  divisor         2    2[BANK0 ] int 
 12724 ;;  dividend        2    4[BANK0 ] int 
 12725 ;; Auto vars:     Size  Location     Type
 12726 ;;  sign            1    7[BANK0 ] unsigned char 
 12727 ;;  counter         1    6[BANK0 ] unsigned char 
 12728 ;; Return value:  Size  Location     Type
 12729 ;;                  2    2[BANK0 ] int 
 12730 ;; Registers used:
 12731 ;;		wreg, status,2, status,0
 12732 ;; Tracked objects:
 12733 ;;		On entry : 1F/0
 12734 ;;		On exit  : 1F/0
 12735 ;;		Unchanged: 0/0
 12736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12738 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12740 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12741 ;;Total ram usage:        6 bytes
 12742 ;; Hardware stack levels used:    1
 12743 ;; Hardware stack levels required when called:    9
 12744 ;; This function calls:
 12745 ;;		Nothing
 12746 ;; This function is called by:
 12747 ;;		_led_auto_process
 12748 ;; This function uses a non-reentrant model
 12749 ;;
 12750                           
 12751                           
 12752                           ;psect for function ___awmod
 12753  1363                     ___awmod:	
 12754                           
 12755                           ;incstack = 0
 12756                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12757  1363  01A7               	clrf	___awmod@sign
 12758  1364  1FA5               	btfss	___awmod@dividend+1,7
 12759  1365  2B6D               	goto	l6149
 12760  1366  09A4               	comf	___awmod@dividend,f
 12761  1367  09A5               	comf	___awmod@dividend+1,f
 12762  1368  0AA4               	incf	___awmod@dividend,f
 12763  1369  1903               	skipnz
 12764  136A  0AA5               	incf	___awmod@dividend+1,f
 12765  136B  01A7               	clrf	___awmod@sign
 12766  136C  0AA7               	incf	___awmod@sign,f
 12767  136D                     l6149:	
 12768  136D  1FA3               	btfss	___awmod@divisor+1,7
 12769  136E  2B74               	goto	l6153
 12770  136F  09A2               	comf	___awmod@divisor,f
 12771  1370  09A3               	comf	___awmod@divisor+1,f
 12772  1371  0AA2               	incf	___awmod@divisor,f
 12773  1372  1903               	skipnz
 12774  1373  0AA3               	incf	___awmod@divisor+1,f
 12775  1374                     l6153:	
 12776  1374  0822               	movf	___awmod@divisor,w
 12777  1375  0423               	iorwf	___awmod@divisor+1,w
 12778  1376  1903               	btfsc	3,2
 12779  1377  2B8F               	goto	l6169
 12780  1378  01A6               	clrf	___awmod@counter
 12781  1379                     L10:	
 12782  1379  0AA6               	incf	___awmod@counter,f
 12783  137A  1BA3               	btfsc	___awmod@divisor+1,7
 12784  137B  2B7F               	goto	l6161
 12785  137C  35A2               	lslf	___awmod@divisor,f
 12786  137D  0DA3               	rlf	___awmod@divisor+1,f
 12787  137E  2B79               	goto	L10
 12788  137F                     l6161:	
 12789  137F  0823               	movf	___awmod@divisor+1,w
 12790  1380  0225               	subwf	___awmod@dividend+1,w
 12791  1381  1D03               	skipz
 12792  1382  2B85               	goto	u5715
 12793  1383  0822               	movf	___awmod@divisor,w
 12794  1384  0224               	subwf	___awmod@dividend,w
 12795  1385                     u5715:	
 12796  1385  1C03               	skipc
 12797  1386  2B8B               	goto	l6165
 12798  1387  0822               	movf	___awmod@divisor,w
 12799  1388  02A4               	subwf	___awmod@dividend,f
 12800  1389  0823               	movf	___awmod@divisor+1,w
 12801  138A  3BA5               	subwfb	___awmod@dividend+1,f
 12802  138B                     l6165:	
 12803  138B  36A3               	lsrf	___awmod@divisor+1,f
 12804  138C  0CA2               	rrf	___awmod@divisor,f
 12805  138D  0BA6               	decfsz	___awmod@counter,f
 12806  138E  2B7F               	goto	l6161
 12807  138F                     l6169:	
 12808  138F  0827               	movf	___awmod@sign,w
 12809  1390  1903               	btfsc	3,2
 12810  1391  2B97               	goto	l6173
 12811  1392  09A4               	comf	___awmod@dividend,f
 12812  1393  09A5               	comf	___awmod@dividend+1,f
 12813  1394  0AA4               	incf	___awmod@dividend,f
 12814  1395  1903               	skipnz
 12815  1396  0AA5               	incf	___awmod@dividend+1,f
 12816  1397                     l6173:	
 12817  1397  0825               	movf	___awmod@dividend+1,w
 12818  1398  00A3               	movwf	?___awmod+1
 12819  1399  0824               	movf	___awmod@dividend,w
 12820  139A  00A2               	movwf	?___awmod
 12821  139B  0008               	return
 12822  139C                     __end_of___awmod:	
 12823  139C                     __ptext16:	
 12824 ;; *************** function ___lmul *****************
 12825 ;; Defined at:
 12826 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul32.c"
 12827 ;; Parameters:    Size  Location     Type
 12828 ;;  multiplier      4    2[BANK0 ] unsigned long 
 12829 ;;  multiplicand    4    6[BANK0 ] unsigned long 
 12830 ;; Auto vars:     Size  Location     Type
 12831 ;;  product         4   10[BANK0 ] unsigned long 
 12832 ;; Return value:  Size  Location     Type
 12833 ;;                  4    2[BANK0 ] unsigned long 
 12834 ;; Registers used:
 12835 ;;		wreg, status,2, status,0
 12836 ;; Tracked objects:
 12837 ;;		On entry : 1F/0
 12838 ;;		On exit  : 1F/0
 12839 ;;		Unchanged: 0/0
 12840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12841 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12842 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12844 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12845 ;;Total ram usage:       12 bytes
 12846 ;; Hardware stack levels used:    1
 12847 ;; Hardware stack levels required when called:    9
 12848 ;; This function calls:
 12849 ;;		Nothing
 12850 ;; This function is called by:
 12851 ;;		_led_calc_bright
 12852 ;;		_led_auto_process
 12853 ;; This function uses a non-reentrant model
 12854 ;;
 12855                           
 12856                           
 12857                           ;psect for function ___lmul
 12858  139C                     ___lmul:	
 12859                           
 12860                           ;incstack = 0
 12861                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 12862  139C  01AA               	clrf	___lmul@product
 12863  139D  01AB               	clrf	___lmul@product+1
 12864  139E  01AC               	clrf	___lmul@product+2
 12865  139F  01AD               	clrf	___lmul@product+3
 12866  13A0                     l1236:	
 12867  13A0  1C22               	btfss	___lmul@multiplier,0
 12868  13A1  2BAA               	goto	l5867
 12869  13A2  0826               	movf	___lmul@multiplicand,w
 12870  13A3  07AA               	addwf	___lmul@product,f
 12871  13A4  0827               	movf	___lmul@multiplicand+1,w
 12872  13A5  3DAB               	addwfc	___lmul@product+1,f
 12873  13A6  0828               	movf	___lmul@multiplicand+2,w
 12874  13A7  3DAC               	addwfc	___lmul@product+2,f
 12875  13A8  0829               	movf	___lmul@multiplicand+3,w
 12876  13A9  3DAD               	addwfc	___lmul@product+3,f
 12877  13AA                     l5867:	
 12878  13AA  35A6               	lslf	___lmul@multiplicand,f
 12879  13AB  0DA7               	rlf	___lmul@multiplicand+1,f
 12880  13AC  0DA8               	rlf	___lmul@multiplicand+2,f
 12881  13AD  0DA9               	rlf	___lmul@multiplicand+3,f
 12882  13AE  36A5               	lsrf	___lmul@multiplier+3,f
 12883  13AF  0CA4               	rrf	___lmul@multiplier+2,f
 12884  13B0  0CA3               	rrf	___lmul@multiplier+1,f
 12885  13B1  0CA2               	rrf	___lmul@multiplier,f
 12886  13B2  0825               	movf	___lmul@multiplier+3,w
 12887  13B3  0424               	iorwf	___lmul@multiplier+2,w
 12888  13B4  0423               	iorwf	___lmul@multiplier+1,w
 12889  13B5  0422               	iorwf	___lmul@multiplier,w
 12890  13B6  1D03               	skipz
 12891  13B7  2BA0               	goto	l1236
 12892  13B8  082D               	movf	___lmul@product+3,w
 12893  13B9  00A5               	movwf	?___lmul+3
 12894  13BA  082C               	movf	___lmul@product+2,w
 12895  13BB  00A4               	movwf	?___lmul+2
 12896  13BC  082B               	movf	___lmul@product+1,w
 12897  13BD  00A3               	movwf	?___lmul+1
 12898  13BE  082A               	movf	___lmul@product,w
 12899  13BF  00A2               	movwf	?___lmul
 12900  13C0  0008               	return
 12901  13C1                     __end_of___lmul:	
 12902  13C1                     __ptext15:	
 12903 ;; *************** function _led_calc_bright *****************
 12904 ;; Defined at:
 12905 ;;		line 458 in file "src/app_led.c"
 12906 ;; Parameters:    Size  Location     Type
 12907 ;;  sbrt            1    wreg     unsigned char 
 12908 ;;  ebrt            1   27[BANK0 ] unsigned char 
 12909 ;;  duration        2   28[BANK0 ] unsigned int 
 12910 ;;  dt              4   30[BANK0 ] unsigned long 
 12911 ;; Auto vars:     Size  Location     Type
 12912 ;;  sbrt            1   41[BANK0 ] unsigned char 
 12913 ;;  period          2   38[BANK0 ] unsigned int 
 12914 ;;  vs              2   36[BANK0 ] unsigned int 
 12915 ;;  result          2   34[BANK0 ] unsigned int 
 12916 ;;  dbrt            1   40[BANK0 ] unsigned char 
 12917 ;; Return value:  Size  Location     Type
 12918 ;;                  2   27[BANK0 ] unsigned int 
 12919 ;; Registers used:
 12920 ;;		wreg, status,2, status,0, pclath, cstack
 12921 ;; Tracked objects:
 12922 ;;		On entry : 1F/0
 12923 ;;		On exit  : 1F/0
 12924 ;;		Unchanged: 0/0
 12925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12926 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12927 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12929 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12930 ;;Total ram usage:       15 bytes
 12931 ;; Hardware stack levels used:    1
 12932 ;; Hardware stack levels required when called:   10
 12933 ;; This function calls:
 12934 ;;		___lldiv
 12935 ;;		___lmul
 12936 ;;		___wmul
 12937 ;; This function is called by:
 12938 ;;		_led_auto_process
 12939 ;;		_led_pro_process
 12940 ;; This function uses a non-reentrant model
 12941 ;;
 12942                           
 12943                           
 12944                           ;psect for function _led_calc_bright
 12945  13C1                     _led_calc_bright:	
 12946                           
 12947                           ;incstack = 0
 12948                           ; Regs used in _led_calc_bright: [wreg+status,2+status,0+pclath+cstack]
 12949                           ;led_calc_bright@sbrt stored from wreg
 12950  13C1  00C9               	movwf	led_calc_bright@sbrt
 12951                           
 12952                           ;app_led.c: 460: uint8_t dbrt;
 12953                           ;app_led.c: 461: uint16_t result;
 12954                           ;app_led.c: 462: uint16_t vs = sbrt*10u;
 12955  13C2  00A2               	movwf	___wmul@multiplier
 12956  13C3  300A               	movlw	10
 12957  13C4  01A3               	clrf	___wmul@multiplier+1
 12958  13C5  00A4               	movwf	___wmul@multiplicand
 12959  13C6  01A5               	clrf	___wmul@multiplicand+1
 12960  13C7  3196  26BE  3191   	fcall	___wmul
 12961  13CA  0823               	movf	?___wmul+1,w
 12962  13CB  00C5               	movwf	led_calc_bright@vs+1
 12963  13CC  0822               	movf	?___wmul,w
 12964  13CD  00C4               	movwf	led_calc_bright@vs
 12965                           
 12966                           ;app_led.c: 463: uint16_t period = duration*6u;
 12967  13CE  083D               	movf	led_calc_bright@duration+1,w
 12968  13CF  00A3               	movwf	___wmul@multiplier+1
 12969  13D0  083C               	movf	led_calc_bright@duration,w
 12970  13D1  00A2               	movwf	___wmul@multiplier
 12971  13D2  3006               	movlw	6
 12972  13D3  00A4               	movwf	___wmul@multiplicand
 12973  13D4  01A5               	clrf	___wmul@multiplicand+1
 12974  13D5  3196  26BE  3191   	fcall	___wmul
 12975  13D8  0823               	movf	?___wmul+1,w
 12976  13D9  00C7               	movwf	led_calc_bright@period+1
 12977  13DA  0822               	movf	?___wmul,w
 12978  13DB  00C6               	movwf	led_calc_bright@period
 12979                           
 12980                           ;app_led.c: 464: if(sbrt <= ebrt)
 12981  13DC  0849               	movf	led_calc_bright@sbrt,w
 12982  13DD  023B               	subwf	led_calc_bright@ebrt,w
 12983  13DE  1C03               	skipc
 12984  13DF  2BF4               	goto	l6119
 12985                           
 12986                           ;app_led.c: 465: {
 12987                           ;app_led.c: 466: dbrt = ebrt - sbrt;
 12988  13E0  0849               	movf	led_calc_bright@sbrt,w
 12989  13E1  023B               	subwf	led_calc_bright@ebrt,w
 12990  13E2  00C8               	movwf	led_calc_bright@dbrt
 12991                           
 12992                           ;app_led.c: 467: result = vs + dbrt*dt/period;
 12993  13E3  2469  3191         	fcall	PL28	;call to abstracted procedure
 12994  13E5  239C  3191         	fcall	___lmul
 12995  13E7  2491  3191         	fcall	PL92	;call to abstracted procedure
 12996  13E9  240B  3191         	fcall	___lldiv
 12997  13EB  082F               	movf	?___lldiv+1,w
 12998  13EC  00C3               	movwf	led_calc_bright@result+1
 12999  13ED  082E               	movf	?___lldiv,w
 13000  13EE  00C2               	movwf	led_calc_bright@result
 13001  13EF  0844               	movf	led_calc_bright@vs,w
 13002  13F0  07C2               	addwf	led_calc_bright@result,f
 13003  13F1  0845               	movf	led_calc_bright@vs+1,w
 13004  13F2  3DC3               	addwfc	led_calc_bright@result+1,f
 13005                           
 13006                           ;app_led.c: 468: }
 13007  13F3  2C06               	goto	l6125
 13008  13F4                     l6119:	
 13009                           
 13010                           ;app_led.c: 469: else
 13011                           ;app_led.c: 470: {
 13012                           ;app_led.c: 471: dbrt = sbrt - ebrt;
 13013  13F4  083B               	movf	led_calc_bright@ebrt,w
 13014  13F5  0249               	subwf	led_calc_bright@sbrt,w
 13015  13F6  00C8               	movwf	led_calc_bright@dbrt
 13016                           
 13017                           ;app_led.c: 472: result = vs - dbrt*dt/period;
 13018  13F7  0845               	movf	led_calc_bright@vs+1,w
 13019  13F8  00C3               	movwf	led_calc_bright@result+1
 13020  13F9  0844               	movf	led_calc_bright@vs,w
 13021  13FA  00C2               	movwf	led_calc_bright@result
 13022  13FB  2469  3191         	fcall	PL28	;call to abstracted procedure
 13023  13FD  239C  3191         	fcall	___lmul
 13024  13FF  2491  3191         	fcall	PL92	;call to abstracted procedure
 13025  1401  240B               	fcall	___lldiv
 13026  1402  082E               	movf	?___lldiv,w
 13027  1403  02C2               	subwf	led_calc_bright@result,f
 13028  1404  082F               	movf	?___lldiv+1,w
 13029  1405  3BC3               	subwfb	led_calc_bright@result+1,f
 13030  1406                     l6125:	
 13031                           
 13032                           ;app_led.c: 473: }
 13033                           ;app_led.c: 474: return result;
 13034  1406  0843               	movf	led_calc_bright@result+1,w
 13035  1407  00BC               	movwf	?_led_calc_bright+1
 13036  1408  0842               	movf	led_calc_bright@result,w
 13037  1409  00BB               	movwf	?_led_calc_bright
 13038  140A  0008               	return
 13039  140B                     __end_of_led_calc_bright:	
 13040  140B                     __ptext17:	
 13041 ;; *************** function ___lldiv *****************
 13042 ;; Defined at:
 13043 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lldiv.c"
 13044 ;; Parameters:    Size  Location     Type
 13045 ;;  divisor         4   14[BANK0 ] unsigned long 
 13046 ;;  dividend        4   18[BANK0 ] unsigned long 
 13047 ;; Auto vars:     Size  Location     Type
 13048 ;;  quotient        4   22[BANK0 ] unsigned long 
 13049 ;;  counter         1   26[BANK0 ] unsigned char 
 13050 ;; Return value:  Size  Location     Type
 13051 ;;                  4   14[BANK0 ] unsigned long 
 13052 ;; Registers used:
 13053 ;;		wreg, status,2, status,0
 13054 ;; Tracked objects:
 13055 ;;		On entry : 1F/0
 13056 ;;		On exit  : 1F/0
 13057 ;;		Unchanged: 0/0
 13058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13059 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13060 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13062 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13063 ;;Total ram usage:       13 bytes
 13064 ;; Hardware stack levels used:    1
 13065 ;; Hardware stack levels required when called:    9
 13066 ;; This function calls:
 13067 ;;		Nothing
 13068 ;; This function is called by:
 13069 ;;		_led_calc_bright
 13070 ;; This function uses a non-reentrant model
 13071 ;;
 13072                           
 13073                           
 13074                           ;psect for function ___lldiv
 13075  140B                     ___lldiv:	
 13076                           
 13077                           ;incstack = 0
 13078                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 13079  140B  01B6               	clrf	___lldiv@quotient
 13080  140C  01B7               	clrf	___lldiv@quotient+1
 13081  140D  01B8               	clrf	___lldiv@quotient+2
 13082  140E  01B9               	clrf	___lldiv@quotient+3
 13083  140F  0831               	movf	___lldiv@divisor+3,w
 13084  1410  0430               	iorwf	___lldiv@divisor+2,w
 13085  1411  042F               	iorwf	___lldiv@divisor+1,w
 13086  1412  042E               	iorwf	___lldiv@divisor,w
 13087  1413  1903               	skipnz
 13088  1414  2C41               	goto	l5911
 13089  1415  01BA               	clrf	___lldiv@counter
 13090  1416                     L9:	
 13091  1416  0ABA               	incf	___lldiv@counter,f
 13092  1417  1BB1               	btfsc	___lldiv@divisor+3,7
 13093  1418  2C1E               	goto	l5899
 13094  1419  35AE               	lslf	___lldiv@divisor,f
 13095  141A  0DAF               	rlf	___lldiv@divisor+1,f
 13096  141B  0DB0               	rlf	___lldiv@divisor+2,f
 13097  141C  0DB1               	rlf	___lldiv@divisor+3,f
 13098  141D  2C16               	goto	L9
 13099  141E                     l5899:	
 13100  141E  35B6               	lslf	___lldiv@quotient,f
 13101  141F  0DB7               	rlf	___lldiv@quotient+1,f
 13102  1420  0DB8               	rlf	___lldiv@quotient+2,f
 13103  1421  0DB9               	rlf	___lldiv@quotient+3,f
 13104  1422  0831               	movf	___lldiv@divisor+3,w
 13105  1423  0235               	subwf	___lldiv@dividend+3,w
 13106  1424  1D03               	skipz
 13107  1425  2C30               	goto	u5465
 13108  1426  0830               	movf	___lldiv@divisor+2,w
 13109  1427  0234               	subwf	___lldiv@dividend+2,w
 13110  1428  1D03               	skipz
 13111  1429  2C30               	goto	u5465
 13112  142A  082F               	movf	___lldiv@divisor+1,w
 13113  142B  0233               	subwf	___lldiv@dividend+1,w
 13114  142C  1D03               	skipz
 13115  142D  2C30               	goto	u5465
 13116  142E  082E               	movf	___lldiv@divisor,w
 13117  142F  0232               	subwf	___lldiv@dividend,w
 13118  1430                     u5465:	
 13119  1430  1C03               	skipc
 13120  1431  2C3B               	goto	l5907
 13121  1432  082E               	movf	___lldiv@divisor,w
 13122  1433  02B2               	subwf	___lldiv@dividend,f
 13123  1434  082F               	movf	___lldiv@divisor+1,w
 13124  1435  3BB3               	subwfb	___lldiv@dividend+1,f
 13125  1436  0830               	movf	___lldiv@divisor+2,w
 13126  1437  3BB4               	subwfb	___lldiv@dividend+2,f
 13127  1438  0831               	movf	___lldiv@divisor+3,w
 13128  1439  3BB5               	subwfb	___lldiv@dividend+3,f
 13129  143A  1436               	bsf	___lldiv@quotient,0
 13130  143B                     l5907:	
 13131  143B  36B1               	lsrf	___lldiv@divisor+3,f
 13132  143C  0CB0               	rrf	___lldiv@divisor+2,f
 13133  143D  0CAF               	rrf	___lldiv@divisor+1,f
 13134  143E  0CAE               	rrf	___lldiv@divisor,f
 13135  143F  0BBA               	decfsz	___lldiv@counter,f
 13136  1440  2C1E               	goto	l5899
 13137  1441                     l5911:	
 13138  1441  0839               	movf	___lldiv@quotient+3,w
 13139  1442  00B1               	movwf	?___lldiv+3
 13140  1443  0838               	movf	___lldiv@quotient+2,w
 13141  1444  00B0               	movwf	?___lldiv+2
 13142  1445  0837               	movf	___lldiv@quotient+1,w
 13143  1446  00AF               	movwf	?___lldiv+1
 13144  1447  0836               	movf	___lldiv@quotient,w
 13145  1448  00AE               	movwf	?___lldiv
 13146  1449  0008               	return
 13147  144A                     __end_of___lldiv:	
 13148  144A                     PL2:	
 13149  144A  3EA0               	addlw	(low (led_auto_process@val| 0))& (0+255)
 13150  144B  0086               	movwf	6
 13151  144C  0187               	clrf	7
 13152  144D  0859               	movf	led_auto_process@i^(0+128),w
 13153  144E  0020               	movlb	0	; select bank0
 13154  144F  00CD               	movwf	??_led_auto_process
 13155  1450  01CE               	clrf	??_led_auto_process+1
 13156  1451  0021               	movlb	1	; select bank1
 13157  1452  0757               	addwf	led_auto_process@p^(0+128),w
 13158  1453  0020               	movlb	0	; select bank0
 13159  1454  00CF               	movwf	??_led_auto_process+2
 13160  1455  084E               	movf	??_led_auto_process+1,w
 13161  1456  0021               	movlb	1	; select bank1
 13162  1457  3D58               	addwfc	(led_auto_process@p+1)^(0+128),w
 13163  1458  0020               	movlb	0	; select bank0
 13164  1459  00D0               	movwf	??_led_auto_process+3
 13165  145A  084F               	movf	??_led_auto_process+2,w
 13166  145B  0084               	movwf	4
 13167  145C  0850               	movf	??_led_auto_process+3,w
 13168  145D  0085               	movwf	5
 13169  145E  0008               	return
 13170  145F                     __end_ofPL2:	
 13171  145F                     PL24:	
 13172  145F  0801               	movf	1,w
 13173  1460  0020               	movlb	0	; select bank0
 13174  1461  00CD               	movwf	??_led_auto_process
 13175  1462  01CE               	clrf	??_led_auto_process+1
 13176  1463  0021               	movlb	1	; select bank1
 13177  1464  0857               	movf	led_auto_process@p^(0+128),w
 13178  1465  0086               	movwf	6
 13179  1466  0858               	movf	(led_auto_process@p+1)^(0+128),w
 13180  1467  0087               	movwf	7
 13181  1468  0008               	return
 13182  1469                     __end_ofPL24:	
 13183  1469                     PL28:	
 13184  1469  0846               	movf	led_calc_bright@period,w
 13185  146A  00AE               	movwf	___lldiv@divisor
 13186  146B  0847               	movf	led_calc_bright@period+1,w
 13187  146C  00AF               	movwf	___lldiv@divisor+1
 13188  146D  01B0               	clrf	___lldiv@divisor+2
 13189  146E  01B1               	clrf	___lldiv@divisor+3
 13190  146F  0848               	movf	led_calc_bright@dbrt,w
 13191  1470  00A2               	movwf	___lmul@multiplier
 13192  1471  01A3               	clrf	___lmul@multiplier+1
 13193  1472  01A4               	clrf	___lmul@multiplier+2
 13194  1473  01A5               	clrf	___lmul@multiplier+3
 13195  1474  0841               	movf	led_calc_bright@dt+3,w
 13196  1475  00A9               	movwf	___lmul@multiplicand+3
 13197  1476  0840               	movf	led_calc_bright@dt+2,w
 13198  1477  00A8               	movwf	___lmul@multiplicand+2
 13199  1478  083F               	movf	led_calc_bright@dt+1,w
 13200  1479  00A7               	movwf	___lmul@multiplicand+1
 13201  147A  083E               	movf	led_calc_bright@dt,w
 13202  147B  00A6               	movwf	___lmul@multiplicand
 13203  147C  0008               	return
 13204  147D                     __end_ofPL28:	
 13205  147D                     PL60:	
 13206  147D  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 13207  147E  0086               	movwf	6
 13208  147F  0187               	clrf	7
 13209  1480  0020               	movlb	0	; select bank0
 13210  1481  083B               	movf	?_led_calc_bright,w
 13211  1482  3FC0               	movwi [0]fsr1
 13212  1483  083C               	movf	?_led_calc_bright+1,w
 13213  1484  3FC1               	movwi [1]fsr1
 13214  1485  0021               	movlb	1	; select bank1
 13215  1486  3405               	retlw	5
 13216  1487                     __end_ofPL60:	
 13217  1487                     PL74:	
 13218  1487  0021               	movlb	1	; select bank1
 13219  1488  0853               	movf	(led_auto_process@et+1)^(0+128),w
 13220  1489  00CB               	movwf	(led_auto_process@duration+1)^(0+128)
 13221  148A  0852               	movf	led_auto_process@et^(0+128),w
 13222  148B  00CA               	movwf	led_auto_process@duration^(0+128)
 13223  148C  0855               	movf	led_auto_process@st^(0+128),w
 13224  148D  02CA               	subwf	led_auto_process@duration^(0+128),f
 13225  148E  0856               	movf	(led_auto_process@st+1)^(0+128),w
 13226  148F  3BCB               	subwfb	(led_auto_process@duration+1)^(0+128),f
 13227  1490  0008               	return
 13228  1491                     __end_ofPL74:	
 13229  1491                     PL92:	
 13230  1491  0825               	movf	?___lmul+3,w
 13231  1492  00B5               	movwf	___lldiv@dividend+3
 13232  1493  0824               	movf	?___lmul+2,w
 13233  1494  00B4               	movwf	___lldiv@dividend+2
 13234  1495  0823               	movf	?___lmul+1,w
 13235  1496  00B3               	movwf	___lldiv@dividend+1
 13236  1497  0822               	movf	?___lmul,w
 13237  1498  00B2               	movwf	___lldiv@dividend
 13238  1499  0008               	return
 13239  149A                     __end_ofPL92:	
 13240  149A                     PL110:	
 13241  149A  0857               	movf	led_auto_process@p^(0+128),w
 13242  149B  0086               	movwf	6
 13243  149C  0858               	movf	(led_auto_process@p+1)^(0+128),w
 13244  149D  0087               	movwf	7
 13245  149E  3152               	addfsr 1,18
 13246  149F  0801               	movf	1,w
 13247  14A0  0008               	return
 13248  14A1                     __end_ofPL110:	
 13249  14A1                     PL128:	
 13250  14A1  3104               	addfsr 0,4
 13251  14A2  0800               	movf	0,w
 13252  14A3  0081               	movwf	1
 13253  14A4  0021               	movlb	1	; select bank1
 13254  14A5  0859               	movf	led_auto_process@i^(0+128),w
 13255  14A6  0008               	return
 13256  14A7                     __end_ofPL128:	
 13257  14A7                     PL144:	
 13258  14A7  310D               	addfsr 0,13
 13259  14A8  0800               	movf	0,w
 13260  14A9  0081               	movwf	1
 13261  14AA  0021               	movlb	1	; select bank1
 13262  14AB  0859               	movf	led_auto_process@i^(0+128),w
 13263  14AC  0008               	return
 13264  14AD                     __end_ofPL144:	
 13265  14AD                     PL148:	
 13266  14AD  0021               	movlb	1	; select bank1
 13267  14AE  0855               	movf	led_auto_process@st^(0+128),w
 13268  14AF  0020               	movlb	0	; select bank0
 13269  14B0  024A               	subwf	led_auto_process@ct,w
 13270  14B1  0008               	return
 13271  14B2                     __end_ofPL148:	
 13272  14B2                     PL156:	
 13273  14B2  0021               	movlb	1	; select bank1
 13274  14B3  0852               	movf	led_auto_process@et^(0+128),w
 13275  14B4  0020               	movlb	0	; select bank0
 13276  14B5  024A               	subwf	led_auto_process@ct,w
 13277  14B6  0008               	return
 13278  14B7                     __end_ofPL156:	
 13279                           
 13280                           	psect	text44
 13281  0803                     __ptext44:	
 13282 ;; *************** function _led_set_preview *****************
 13283 ;; Defined at:
 13284 ;;		line 2184 in file "src/app_led.c"
 13285 ;; Parameters:    Size  Location     Type
 13286 ;;  pbuf            1    wreg     const PTR const unsigned
 13287 ;;		 -> rx_buf(80), 
 13288 ;; Auto vars:     Size  Location     Type
 13289 ;;  pbuf            1    4[BANK0 ] const PTR const unsigned
 13290 ;;		 -> rx_buf(80), 
 13291 ;;  val             2    5[BANK0 ] unsigned int 
 13292 ;;  i               1    7[BANK0 ] unsigned char 
 13293 ;; Return value:  Size  Location     Type
 13294 ;;                  1    wreg      unsigned char 
 13295 ;; Registers used:
 13296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 13297 ;; Tracked objects:
 13298 ;;		On entry : 1F/0
 13299 ;;		On exit  : 1F/0
 13300 ;;		Unchanged: 0/0
 13301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13303 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13304 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13305 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13306 ;;Total ram usage:        6 bytes
 13307 ;; Hardware stack levels used:    1
 13308 ;; Hardware stack levels required when called:    9
 13309 ;; This function calls:
 13310 ;;		Nothing
 13311 ;; This function is called by:
 13312 ;;		_ble_decode
 13313 ;; This function uses a non-reentrant model
 13314 ;;
 13315                           
 13316                           
 13317                           ;psect for function _led_set_preview
 13318  0803                     _led_set_preview:	
 13319                           
 13320                           ;incstack = 0
 13321                           ; Regs used in _led_set_preview: [wreg-fsr1h+status,2+status,0]
 13322                           ;led_set_preview@pbuf stored from wreg
 13323  0803  00A4               	movwf	led_set_preview@pbuf
 13324                           
 13325                           ;app_led.c: 2186: if(led_run_para.mFind || m_led_para.ble_para.mMode == 0)
 13326  0804  185C               	btfsc	_led_run_para,0
 13327  0805  3400               	retlw	0
 13328  0806  318E  26AD  3188   	fcall	PL10	;call to abstracted procedure
 13329  0809  1903               	btfsc	3,2
 13330                           
 13331                           ;app_led.c: 2187: {
 13332                           ;app_led.c: 2188: return 0;
 13333  080A  3400               	retlw	0
 13334                           
 13335                           ;app_led.c: 2189: }
 13336                           ;app_led.c: 2194: for(uint8_t i = 0; i < 5; i++)
 13337  080B  01A7               	clrf	led_set_preview@i
 13338  080C                     l4611:	
 13339                           
 13340                           ;app_led.c: 2195: {
 13341                           ;app_led.c: 2196: uint16_t val = (*(pbuf + 2 * i)) << 8 | (*(pbuf + 2 * i + 1));
 13342  080C  3527               	lslf	led_set_preview@i,w
 13343  080D  0724               	addwf	led_set_preview@pbuf,w
 13344  080E  00A2               	movwf	??_led_set_preview
 13345  080F  0A22               	incf	??_led_set_preview,w
 13346  0810  0086               	movwf	6
 13347  0811  3001               	movlw	1	; select bank2/3
 13348  0812  0087               	movwf	7
 13349  0813  3527               	lslf	led_set_preview@i,w
 13350  0814  0724               	addwf	led_set_preview@pbuf,w
 13351  0815  00A3               	movwf	??_led_set_preview+1
 13352  0816  0084               	movwf	4
 13353  0817  3001               	movlw	1	; select bank2/3
 13354  0818  0085               	movwf	5
 13355  0819  0800               	movf	0,w
 13356  081A  00A6               	movwf	led_set_preview@val+1
 13357  081B  0801               	movf	1,w
 13358  081C  00A5               	movwf	led_set_preview@val
 13359                           
 13360                           ;app_led.c: 2197: if(val <= 1000)
 13361  081D  3003               	movlw	3
 13362  081E  0226               	subwf	led_set_preview@val+1,w
 13363  081F  30E9               	movlw	233
 13364  0820  1903               	skipnz
 13365  0821  0225               	subwf	led_set_preview@val,w
 13366  0822  1803               	skipnc
 13367  0823  2833               	goto	l4617
 13368                           
 13369                           ;app_led.c: 2198: {
 13370                           ;app_led.c: 2199: target_bright[i] = val;
 13371  0824  3527               	lslf	led_set_preview@i,w
 13372  0825  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 13373  0826  0086               	movwf	6
 13374  0827  0187               	clrf	7
 13375  0828  0825               	movf	led_set_preview@val,w
 13376  0829  3FC0               	movwi [0]fsr1
 13377  082A  0826               	movf	led_set_preview@val+1,w
 13378  082B  3FC1               	movwi [1]fsr1
 13379                           
 13380                           ;app_led.c: 2200: current_bright[i] = val;
 13381  082C  3527               	lslf	led_set_preview@i,w
 13382  082D  3EDA               	addlw	(low (_current_bright| 0))& (0+255)
 13383  082E  0086               	movwf	6
 13384  082F  0825               	movf	led_set_preview@val,w
 13385  0830  3FC0               	movwi [0]fsr1
 13386  0831  0826               	movf	led_set_preview@val+1,w
 13387  0832  3FC1               	movwi [1]fsr1
 13388  0833                     l4617:	
 13389  0833  3005               	movlw	5
 13390  0834  0AA7               	incf	led_set_preview@i,f
 13391  0835  0227               	subwf	led_set_preview@i,w
 13392  0836  1803               	btfsc	3,0
 13393                           
 13394                           ;app_led.c: 2201: }
 13395                           ;app_led.c: 2202: }
 13396                           ;app_led.c: 2203: return 1;
 13397  0837  3401               	retlw	1
 13398  0838  280C               	goto	l4611
 13399  0839                     __end_of_led_set_preview:	
 13400                           
 13401                           	psect	text53
 13402  1E6D                     __ptext53:	
 13403 ;; *************** function _led_set_bright *****************
 13404 ;; Defined at:
 13405 ;;		line 2070 in file "src/app_led.c"
 13406 ;; Parameters:    Size  Location     Type
 13407 ;;  pbuf            1    wreg     const PTR const unsigned
 13408 ;;		 -> rx_buf(80), 
 13409 ;; Auto vars:     Size  Location     Type
 13410 ;;  pbuf            1    6[BANK0 ] const PTR const unsigned
 13411 ;;		 -> rx_buf(80), 
 13412 ;;  val             2    7[BANK0 ] unsigned int 
 13413 ;;  i               1    9[BANK0 ] unsigned char 
 13414 ;; Return value:  Size  Location     Type
 13415 ;;                  1    wreg      unsigned char 
 13416 ;; Registers used:
 13417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13418 ;; Tracked objects:
 13419 ;;		On entry : 1F/0
 13420 ;;		On exit  : 1F/0
 13421 ;;		Unchanged: 0/0
 13422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13424 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13425 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13426 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13427 ;;Total ram usage:        8 bytes
 13428 ;; Hardware stack levels used:    1
 13429 ;; Hardware stack levels required when called:   10
 13430 ;; This function calls:
 13431 ;;		_led_prepare_to_save
 13432 ;; This function is called by:
 13433 ;;		_ble_decode
 13434 ;; This function uses a non-reentrant model
 13435 ;;
 13436                           
 13437                           
 13438                           ;psect for function _led_set_bright
 13439  1E6D                     _led_set_bright:	
 13440                           
 13441                           ;incstack = 0
 13442                           ; Regs used in _led_set_bright: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13443                           ;led_set_bright@pbuf stored from wreg
 13444  1E6D  00A6               	movwf	led_set_bright@pbuf
 13445                           
 13446                           ;app_led.c: 2072: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0 || m_led_para.ble_para.manual_para.mOn == 0)
 13447  1E6E  1C5C               	btfss	_led_run_para,0
 13448  1E6F  18DC               	btfsc	_led_run_para,1
 13449  1E70  0008               	return
 13450  1E71  318E  26AD  319E   	fcall	PL10	;call to abstracted procedure
 13451  1E74  1D03               	skipz
 13452  1E75  0008               	return
 13453  1E76  318A  2218  319E   	fcall	PL52	;call to abstracted procedure
 13454  1E79  1C01               	btfss	1,0
 13455  1E7A  0008               	return
 13456                           
 13457                           ;app_led.c: 2075: }
 13458                           ;app_led.c: 2081: for(uint8_t i = 0; i < 5; i++)
 13459  1E7B  01A9               	clrf	led_set_bright@i
 13460  1E7C                     l4505:	
 13461                           
 13462                           ;app_led.c: 2082: {
 13463                           ;app_led.c: 2083: uint16_t val = (*(pbuf + 2 * i)) << 8 | (*(pbuf + 2 * i + 1));
 13464  1E7C  3529               	lslf	led_set_bright@i,w
 13465  1E7D  0726               	addwf	led_set_bright@pbuf,w
 13466  1E7E  00A2               	movwf	??_led_set_bright
 13467  1E7F  0A22               	incf	??_led_set_bright,w
 13468  1E80  0086               	movwf	6
 13469  1E81  3001               	movlw	1	; select bank2/3
 13470  1E82  0087               	movwf	7
 13471  1E83  3529               	lslf	led_set_bright@i,w
 13472  1E84  0726               	addwf	led_set_bright@pbuf,w
 13473  1E85  00A3               	movwf	??_led_set_bright+1
 13474  1E86  0084               	movwf	4
 13475  1E87  3001               	movlw	1	; select bank2/3
 13476  1E88  0085               	movwf	5
 13477  1E89  0800               	movf	0,w
 13478  1E8A  00A8               	movwf	led_set_bright@val+1
 13479  1E8B  0801               	movf	1,w
 13480  1E8C  00A7               	movwf	led_set_bright@val
 13481                           
 13482                           ;app_led.c: 2084: if(val <= 1000)
 13483  1E8D  3003               	movlw	3
 13484  1E8E  0228               	subwf	led_set_bright@val+1,w
 13485  1E8F  30E9               	movlw	233
 13486  1E90  1903               	skipnz
 13487  1E91  0227               	subwf	led_set_bright@val,w
 13488  1E92  1803               	skipnc
 13489  1E93  2EAF               	goto	l4511
 13490                           
 13491                           ;app_led.c: 2085: {
 13492                           ;app_led.c: 2086: m_led_para.ble_para.manual_para.mBright[i] = val;
 13493  1E94  0829               	movf	led_set_bright@i,w
 13494  1E95  00A2               	movwf	??_led_set_bright
 13495  1E96  3076               	movlw	118
 13496  1E97  01A3               	clrf	??_led_set_bright+1
 13497  1E98  35A2               	lslf	??_led_set_bright,f
 13498  1E99  0DA3               	rlf	??_led_set_bright+1,f
 13499  1E9A  00A4               	movwf	??_led_set_bright+2
 13500  1E9B  3023               	movlw	35
 13501  1E9C  00A5               	movwf	??_led_set_bright+3
 13502  1E9D  0822               	movf	??_led_set_bright,w
 13503  1E9E  0724               	addwf	??_led_set_bright+2,w
 13504  1E9F  0086               	movwf	6
 13505  1EA0  0823               	movf	??_led_set_bright+1,w
 13506  1EA1  3D25               	addwfc	??_led_set_bright+3,w
 13507  1EA2  0087               	movwf	7
 13508  1EA3  0827               	movf	led_set_bright@val,w
 13509  1EA4  3FC0               	movwi [0]fsr1
 13510  1EA5  0828               	movf	led_set_bright@val+1,w
 13511  1EA6  3FC1               	movwi [1]fsr1
 13512                           
 13513                           ;app_led.c: 2087: target_bright[i] = val;
 13514  1EA7  3529               	lslf	led_set_bright@i,w
 13515  1EA8  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 13516  1EA9  0086               	movwf	6
 13517  1EAA  0187               	clrf	7
 13518  1EAB  0827               	movf	led_set_bright@val,w
 13519  1EAC  3FC0               	movwi [0]fsr1
 13520  1EAD  0828               	movf	led_set_bright@val+1,w
 13521  1EAE  3FC1               	movwi [1]fsr1
 13522  1EAF                     l4511:	
 13523  1EAF  3005               	movlw	5
 13524  1EB0  0AA9               	incf	led_set_bright@i,f
 13525  1EB1  0229               	subwf	led_set_bright@i,w
 13526  1EB2  1C03               	skipc
 13527  1EB3  2E7C               	goto	l4505
 13528                           
 13529                           ;app_led.c: 2088: }
 13530                           ;app_led.c: 2089: }
 13531                           ;app_led.c: 2090: led_prepare_to_save();
 13532  1EB4  318B  2BE0         	ljmp	PL142
 13533  1EB6                     __end_of_led_set_bright:	
 13534                           
 13535                           	psect	text56
 13536  1043                     __ptext56:	
 13537 ;; *************** function _led_decrease *****************
 13538 ;; Defined at:
 13539 ;;		line 2166 in file "src/app_led.c"
 13540 ;; Parameters:    Size  Location     Type
 13541 ;;  chn             1    wreg     unsigned char 
 13542 ;;  delt            1   11[BANK0 ] unsigned char 
 13543 ;; Auto vars:     Size  Location     Type
 13544 ;;  chn             1   16[BANK0 ] unsigned char 
 13545 ;; Return value:  Size  Location     Type
 13546 ;;                  1    wreg      unsigned char 
 13547 ;; Registers used:
 13548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13549 ;; Tracked objects:
 13550 ;;		On entry : 1F/3
 13551 ;;		On exit  : 1F/0
 13552 ;;		Unchanged: 0/0
 13553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13554 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13555 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13556 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13557 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13558 ;;Total ram usage:        6 bytes
 13559 ;; Hardware stack levels used:    1
 13560 ;; Hardware stack levels required when called:   10
 13561 ;; This function calls:
 13562 ;;		_decrease
 13563 ;;		_led_prepare_to_save
 13564 ;; This function is called by:
 13565 ;;		_ble_decode
 13566 ;; This function uses a non-reentrant model
 13567 ;;
 13568                           
 13569                           
 13570                           ;psect for function _led_decrease
 13571  1043                     _led_decrease:	
 13572                           
 13573                           ;incstack = 0
 13574                           ; Regs used in _led_decrease: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13575                           ;led_decrease@chn stored from wreg
 13576  1043  0020               	movlb	0	; select bank0
 13577  1044  00B0               	movwf	led_decrease@chn
 13578                           
 13579                           ;app_led.c: 2168: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0 || m_led_para.ble_para.manual_para.mOn == 0 || chn >= 5)
 13580  1045  1C5C               	btfss	_led_run_para,0
 13581  1046  18DC               	btfsc	_led_run_para,1
 13582  1047  0008               	return
 13583  1048  318E  26AD  3190   	fcall	PL10	;call to abstracted procedure
 13584  104B  1D03               	skipz
 13585  104C  0008               	return
 13586  104D  318A  2218  3190   	fcall	PL52	;call to abstracted procedure
 13587  1050  1C01               	btfss	1,0
 13588  1051  0008               	return
 13589  1052  3005               	movlw	5
 13590  1053  0230               	subwf	led_decrease@chn,w
 13591  1054  1803               	btfsc	3,0
 13592  1055  0008               	return
 13593                           
 13594                           ;app_led.c: 2171: }
 13595                           ;app_led.c: 2178: decrease(&m_led_para.ble_para.manual_para.mBright[chn], delt, 0);
 13596  1056  3076               	movlw	118
 13597  1057  00A2               	movwf	decrease@psrc
 13598  1058  3023               	movlw	35
 13599  1059  00A3               	movwf	decrease@psrc+1
 13600  105A  0830               	movf	led_decrease@chn,w
 13601  105B  00AC               	movwf	??_led_decrease
 13602  105C  01AD               	clrf	??_led_decrease+1
 13603  105D  35AC               	lslf	??_led_decrease,f
 13604  105E  0DAD               	rlf	??_led_decrease+1,f
 13605  105F  082C               	movf	??_led_decrease,w
 13606  1060  07A2               	addwf	decrease@psrc,f
 13607  1061  082D               	movf	??_led_decrease+1,w
 13608  1062  3DA3               	addwfc	decrease@psrc+1,f
 13609  1063  082B               	movf	led_decrease@delt,w
 13610  1064  00A4               	movwf	decrease@delt
 13611  1065  01A5               	clrf	decrease@min
 13612  1066  01A6               	clrf	decrease@min+1
 13613  1067  207E               	fcall	_decrease
 13614                           
 13615                           ;app_led.c: 2179: target_bright[chn] = m_led_para.ble_para.manual_para.mBright[chn];
 13616  1068  0830               	movf	led_decrease@chn,w
 13617  1069  00AC               	movwf	??_led_decrease
 13618  106A  3076               	movlw	118
 13619  106B  01AD               	clrf	??_led_decrease+1
 13620  106C  35AC               	lslf	??_led_decrease,f
 13621  106D  0DAD               	rlf	??_led_decrease+1,f
 13622  106E  00AE               	movwf	??_led_decrease+2
 13623  106F  3023               	movlw	35
 13624  1070  00AF               	movwf	??_led_decrease+3
 13625  1071  082C               	movf	??_led_decrease,w
 13626  1072  072E               	addwf	??_led_decrease+2,w
 13627  1073  0086               	movwf	6
 13628  1074  082D               	movf	??_led_decrease+1,w
 13629  1075  3D2F               	addwfc	??_led_decrease+3,w
 13630  1076  0087               	movwf	7
 13631  1077  3530               	lslf	led_decrease@chn,w
 13632  1078  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 13633  1079  0084               	movwf	4
 13634  107A  318F  27FA         	fcall	PL6	;call to abstracted procedure
 13635                           
 13636                           ;app_led.c: 2180: led_prepare_to_save();
 13637  107C  318B  2BE0         	ljmp	PL142
 13638  107E                     __end_of_led_decrease:	
 13639  107E                     __ptext58:	
 13640 ;; *************** function _decrease *****************
 13641 ;; Defined at:
 13642 ;;		line 15 in file "src/app_util.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;  psrc            2    2[BANK0 ] const PTR unsigned int 
 13645 ;;		 -> m_led_para.ble_para.manual_para.mBright(10), m_led_para.ble_para.manual_para(32), m_led_para(131), 
 13646 ;;  delt            1    4[BANK0 ] const unsigned char 
 13647 ;;  min             2    5[BANK0 ] const unsigned int 
 13648 ;; Auto vars:     Size  Location     Type
 13649 ;;		None
 13650 ;; Return value:  Size  Location     Type
 13651 ;;                  1    wreg      void 
 13652 ;; Registers used:
 13653 ;;		wreg, fsr1l, fsr1h
 13654 ;; Tracked objects:
 13655 ;;		On entry : 1F/0
 13656 ;;		On exit  : 1F/0
 13657 ;;		Unchanged: 0/0
 13658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13659 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13661 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13662 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13663 ;;Total ram usage:        9 bytes
 13664 ;; Hardware stack levels used:    1
 13665 ;; Hardware stack levels required when called:    9
 13666 ;; This function calls:
 13667 ;;		Nothing
 13668 ;; This function is called by:
 13669 ;;		_led_decrease
 13670 ;; This function uses a non-reentrant model
 13671 ;;
 13672                           
 13673                           
 13674                           ;psect for function _decrease
 13675  107E                     _decrease:	
 13676                           
 13677                           ;app_util.c: 17: if((*psrc) > min + delt)
 13678                           
 13679                           ;incstack = 0
 13680                           ; Regs used in _decrease: [wregfsr1]
 13681  107E  0822               	movf	decrease@psrc,w
 13682  107F  0086               	movwf	6
 13683  1080  0823               	movf	decrease@psrc+1,w
 13684  1081  0087               	movwf	7
 13685  1082  3F40               	moviw [0]fsr1
 13686  1083  00A7               	movwf	??_decrease
 13687  1084  3F41               	moviw [1]fsr1
 13688  1085  00A8               	movwf	??_decrease+1
 13689  1086  0824               	movf	decrease@delt,w
 13690  1087  0725               	addwf	decrease@min,w
 13691  1088  00A9               	movwf	??_decrease+2
 13692  1089  0826               	movf	decrease@min+1,w
 13693  108A  1803               	skipnc
 13694  108B  0A26               	incf	decrease@min+1,w
 13695  108C  00AA               	movwf	??_decrease+3
 13696  108D  0828               	movf	??_decrease+1,w
 13697  108E  022A               	subwf	??_decrease+3,w
 13698  108F  1D03               	skipz
 13699  1090  2893               	goto	u2935
 13700  1091  0827               	movf	??_decrease,w
 13701  1092  0229               	subwf	??_decrease+2,w
 13702  1093                     u2935:	
 13703                           
 13704                           ;app_util.c: 18: {
 13705                           ;app_util.c: 19: (*psrc) -= delt;
 13706  1093  0822               	movf	decrease@psrc,w
 13707  1094  0086               	movwf	6
 13708  1095  0823               	movf	decrease@psrc+1,w
 13709  1096  0087               	movwf	7
 13710  1097  1803               	skipnc
 13711  1098  289C               	goto	L19
 13712  1099  0824               	movf	decrease@delt,w
 13713                           
 13714                           ;app_util.c: 20: }
 13715  109A  318B  2BC5         	ljmp	PL114	;call to abstracted procedure
 13716  109C                     L19:	
 13717                           ;app_util.c: 21: else
 13718                           ;app_util.c: 22: {
 13719                           ;app_util.c: 23: (*psrc) = min;
 13720                           
 13721  109C  0825               	movf	decrease@min,w
 13722  109D  3FC0               	movwi [0]fsr1
 13723  109E  0826               	movf	decrease@min+1,w
 13724  109F  3FC1               	movwi [1]fsr1
 13725  10A0  0008               	return
 13726  10A1                     __end_of_decrease:	
 13727                           
 13728                           	psect	text61
 13729  10A1                     __ptext61:	
 13730 ;; *************** function _ble_ota_ack *****************
 13731 ;; Defined at:
 13732 ;;		line 262 in file "src/app_ble.c"
 13733 ;; Parameters:    Size  Location     Type
 13734 ;;		None
 13735 ;; Auto vars:     Size  Location     Type
 13736 ;;		None
 13737 ;; Return value:  Size  Location     Type
 13738 ;;                  1    wreg      void 
 13739 ;; Registers used:
 13740 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13741 ;; Tracked objects:
 13742 ;;		On entry : 1F/11
 13743 ;;		On exit  : 1F/2
 13744 ;;		Unchanged: 0/0
 13745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13750 ;;Total ram usage:        0 bytes
 13751 ;; Hardware stack levels used:    1
 13752 ;; Hardware stack levels required when called:   10
 13753 ;; This function calls:
 13754 ;;		_ble_transmit_start
 13755 ;;		_ble_transmit_stop
 13756 ;;		_eusart_write
 13757 ;; This function is called by:
 13758 ;;		_ble_decode
 13759 ;; This function uses a non-reentrant model
 13760 ;;
 13761                           
 13762                           
 13763                           ;psect for function _ble_ota_ack
 13764  10A1                     _ble_ota_ack:	
 13765                           
 13766                           ;app_ble.c: 264: ble_transmit_start();
 13767                           
 13768                           ;incstack = 0
 13769                           ; Regs used in _ble_ota_ack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13770  10A1  214D  3190         	fcall	_ble_transmit_start
 13771                           
 13772                           ;app_ble.c: 265: eusart_write(0x68);
 13773  10A3  3068               	movlw	104
 13774  10A4  212A  3190         	fcall	_eusart_write
 13775                           
 13776                           ;app_ble.c: 266: eusart_write(0x00);
 13777  10A6  3000               	movlw	0
 13778  10A7  212A  3190         	fcall	_eusart_write
 13779                           
 13780                           ;app_ble.c: 267: eusart_write(0x00);
 13781  10A9  3000               	movlw	0
 13782  10AA  212A  3190         	fcall	_eusart_write
 13783                           
 13784                           ;app_ble.c: 268: eusart_write(0x00);
 13785  10AC  3000               	movlw	0
 13786  10AD  212A  3190         	fcall	_eusart_write
 13787                           
 13788                           ;app_ble.c: 269: eusart_write(0x68);
 13789  10AF  3068               	movlw	104
 13790  10B0  212A  3190         	fcall	_eusart_write
 13791                           
 13792                           ;app_ble.c: 270: ble_transmit_stop();
 13793  10B2  2959               	ljmp	l414
 13794  10B3                     __end_of_ble_ota_ack:	
 13795  10B3                     __ptext59:	
 13796 ;; *************** function _ble_send_data *****************
 13797 ;; Defined at:
 13798 ;;		line 204 in file "src/app_ble.c"
 13799 ;; Parameters:    Size  Location     Type
 13800 ;;		None
 13801 ;; Auto vars:     Size  Location     Type
 13802 ;;  p               2   12[BANK0 ] PTR struct .
 13803 ;;		 -> m_led_para.ble_para(125), m_led_para(131), 
 13804 ;;  i               1   11[BANK0 ] unsigned char 
 13805 ;;  len             1   10[BANK0 ] unsigned char 
 13806 ;;  xor             1    9[BANK0 ] unsigned char 
 13807 ;; Return value:  Size  Location     Type
 13808 ;;                  1    wreg      void 
 13809 ;; Registers used:
 13810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13811 ;; Tracked objects:
 13812 ;;		On entry : 1D/0
 13813 ;;		On exit  : 1F/2
 13814 ;;		Unchanged: 0/0
 13815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13817 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13818 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13819 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13820 ;;Total ram usage:        9 bytes
 13821 ;; Hardware stack levels used:    1
 13822 ;; Hardware stack levels required when called:   10
 13823 ;; This function calls:
 13824 ;;		___bmul
 13825 ;;		_ble_transmit_start
 13826 ;;		_ble_transmit_stop
 13827 ;;		_eusart_write
 13828 ;; This function is called by:
 13829 ;;		_ble_decode
 13830 ;; This function uses a non-reentrant model
 13831 ;;
 13832                           
 13833                           
 13834                           ;psect for function _ble_send_data
 13835  10B3                     _ble_send_data:	
 13836  10B3                     l5931:	
 13837                           ;incstack = 0
 13838                           ; Regs used in _ble_send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13839                           
 13840                           
 13841                           ;app_ble.c: 206: uint8_t i;
 13842                           ;app_ble.c: 207: uint8_t len;
 13843                           ;app_ble.c: 208: uint8_t xor = 0;
 13844  10B3  0020               	movlb	0	; select bank0
 13845  10B4  3023               	movlw	35
 13846  10B5  01A9               	clrf	ble_send_data@xor
 13847                           
 13848                           ;app_ble.c: 209: ble_para_t *p = &m_led_para.ble_para;
 13849  10B6  00AD               	movwf	ble_send_data@p+1
 13850  10B7  3073               	movlw	115
 13851  10B8  00AC               	movwf	ble_send_data@p
 13852                           
 13853                           ;app_ble.c: 210: ble_transmit_start();
 13854  10B9  214D  3190         	fcall	_ble_transmit_start
 13855                           
 13856                           ;app_ble.c: 211: xor ^= eusart_write(0x68);
 13857  10BB  3068               	movlw	104
 13858  10BC  212A  3190         	fcall	_eusart_write
 13859  10BE  06A9               	xorwf	ble_send_data@xor,f
 13860                           
 13861                           ;app_ble.c: 212: xor ^= eusart_write(0x05);
 13862  10BF  3005               	movlw	5
 13863  10C0  212A  3190         	fcall	_eusart_write
 13864  10C2  06A9               	xorwf	ble_send_data@xor,f
 13865                           
 13866                           ;app_ble.c: 213: xor ^= eusart_write(p->mMode);
 13867  10C3  2177  3190         	fcall	PL84	;call to abstracted procedure
 13868  10C5  212A  3190         	fcall	_eusart_write
 13869  10C7  06A9               	xorwf	ble_send_data@xor,f
 13870                           
 13871                           ;app_ble.c: 214: if(p->mMode == 1)
 13872  10C8  2177  3190         	fcall	PL84	;call to abstracted procedure
 13873  10CA  3A01               	xorlw	1
 13874  10CB  1D03               	skipz
 13875  10CC  28DE               	goto	l5955
 13876                           
 13877                           ;app_ble.c: 215: {
 13878                           ;app_ble.c: 216: len = sizeof(p->auto_para.array);
 13879  10CD  3015               	movlw	21
 13880  10CE  00AA               	movwf	ble_send_data@len
 13881                           
 13882                           ;app_ble.c: 217: for(i = 0; i < len; i++)
 13883  10CF  01AB               	clrf	ble_send_data@i
 13884  10D0                     l5953:	
 13885  10D0  082A               	movf	ble_send_data@len,w
 13886  10D1  022B               	subwf	ble_send_data@i,w
 13887  10D2  1803               	btfsc	3,0
 13888  10D3  2926               	goto	l5985
 13889                           
 13890                           ;app_ble.c: 218: {
 13891                           ;app_ble.c: 219: xor ^= eusart_write(p->auto_para.array[i]);
 13892  10D4  2163  3190         	fcall	PL46	;call to abstracted procedure
 13893  10D6  3E21               	addlw	33
 13894  10D7  2184  3190         	fcall	PL140	;call to abstracted procedure
 13895  10D9  212A  3190         	fcall	_eusart_write
 13896  10DB  06A9               	xorwf	ble_send_data@xor,f
 13897  10DC  0AAB               	incf	ble_send_data@i,f
 13898  10DD  28D0               	goto	l5953
 13899  10DE                     l5955:	
 13900                           
 13901                           ;app_ble.c: 228: else if(p->mMode == 2)
 13902  10DE  2177  3190         	fcall	PL84	;call to abstracted procedure
 13903  10E0  3A02               	xorlw	2
 13904  10E1  1D03               	skipz
 13905  10E2  2913               	goto	l5975
 13906                           
 13907                           ;app_ble.c: 229: {
 13908                           ;app_ble.c: 230: if(p->pro_para.point_count < 4)
 13909  10E3  082C               	movf	ble_send_data@p,w
 13910  10E4  217E  3190         	fcall	PL108	;call to abstracted procedure
 13911  10E6  3004               	movlw	4
 13912  10E7  0201               	subwf	1,w
 13913                           
 13914                           ;app_ble.c: 231: {
 13915                           ;app_ble.c: 232: p->pro_para.point_count = 4;
 13916  10E8  082C               	movf	ble_send_data@p,w
 13917  10E9  1803               	skipnc
 13918  10EA  28EF               	goto	L21
 13919  10EB  216D  3190         	fcall	PL82	;call to abstracted procedure
 13920  10ED  3004               	movlw	4
 13921  10EE  28F9               	goto	L20
 13922  10EF                     L21:	
 13923                           ;app_ble.c: 234: else if(p->pro_para.point_count > 10)
 13924                           
 13925                           ;app_ble.c: 233: }
 13926                           
 13927  10EF  217E  3190         	fcall	PL108	;call to abstracted procedure
 13928  10F1  300B               	movlw	11
 13929  10F2  0201               	subwf	1,w
 13930  10F3  1C03               	skipc
 13931  10F4  28FA               	goto	l5965
 13932                           
 13933                           ;app_ble.c: 235: {
 13934                           ;app_ble.c: 236: p->pro_para.point_count = 10;
 13935  10F5  082C               	movf	ble_send_data@p,w
 13936  10F6  216D  3190         	fcall	PL82	;call to abstracted procedure
 13937  10F8  300A               	movlw	10
 13938  10F9                     L20:	
 13939  10F9  0081               	movwf	1
 13940  10FA                     l5965:	
 13941                           
 13942                           ;app_ble.c: 237: }
 13943                           ;app_ble.c: 238: len = p->pro_para.point_count*(2+5)+1;
 13944  10FA  3007               	movlw	7
 13945  10FB  00A2               	movwf	___bmul@multiplicand
 13946  10FC  082C               	movf	ble_send_data@p,w
 13947  10FD  217E               	fcall	PL108	;call to abstracted procedure
 13948  10FE  0801               	movf	1,w
 13949  10FF  3193  2356  3190   	fcall	___bmul
 13950  1102  3E01               	addlw	1
 13951  1103  00AA               	movwf	ble_send_data@len
 13952                           
 13953                           ;app_ble.c: 239: for(i = 0; i < len; i++)
 13954  1104  01AB               	clrf	ble_send_data@i
 13955  1105                     l5973:	
 13956  1105  082A               	movf	ble_send_data@len,w
 13957  1106  022B               	subwf	ble_send_data@i,w
 13958  1107  1803               	btfsc	3,0
 13959  1108  2926               	goto	l5985
 13960                           
 13961                           ;app_ble.c: 240: {
 13962                           ;app_ble.c: 241: xor ^= eusart_write(p->pro_para.array[i]);
 13963  1109  2163  3190         	fcall	PL46	;call to abstracted procedure
 13964  110B  3E36               	addlw	54
 13965  110C  2184  3190         	fcall	PL140	;call to abstracted procedure
 13966  110E  212A  3190         	fcall	_eusart_write
 13967  1110  06A9               	xorwf	ble_send_data@xor,f
 13968  1111  0AAB               	incf	ble_send_data@i,f
 13969  1112  2905               	goto	l5973
 13970  1113                     l5975:	
 13971                           
 13972                           ;app_ble.c: 250: else
 13973                           ;app_ble.c: 251: {
 13974                           ;app_ble.c: 252: len = sizeof(p->manual_para.array);
 13975  1113  3020               	movlw	32
 13976  1114  00AA               	movwf	ble_send_data@len
 13977                           
 13978                           ;app_ble.c: 253: for(i = 0; i < len; i++)
 13979  1115  01AB               	clrf	ble_send_data@i
 13980  1116                     l5983:	
 13981  1116  082A               	movf	ble_send_data@len,w
 13982  1117  022B               	subwf	ble_send_data@i,w
 13983  1118  1803               	btfsc	3,0
 13984  1119  2926               	goto	l5985
 13985                           
 13986                           ;app_ble.c: 254: {
 13987                           ;app_ble.c: 255: xor ^= eusart_write(p->manual_para.array[i]);
 13988  111A  2163  3190         	fcall	PL46	;call to abstracted procedure
 13989  111C  0086               	movwf	6
 13990  111D  0828               	movf	??_ble_send_data+3,w
 13991  111E  0087               	movwf	7
 13992  111F  3141               	addfsr 1,1
 13993  1120  0801               	movf	1,w
 13994  1121  212A  3190         	fcall	_eusart_write
 13995  1123  06A9               	xorwf	ble_send_data@xor,f
 13996  1124  0AAB               	incf	ble_send_data@i,f
 13997  1125  2916               	goto	l5983
 13998  1126                     l5985:	
 13999                           
 14000                           ;app_ble.c: 256: }
 14001                           ;app_ble.c: 257: }
 14002                           ;app_ble.c: 258: eusart_write(xor);
 14003  1126  0829               	movf	ble_send_data@xor,w
 14004  1127  212A  3190         	fcall	_eusart_write
 14005                           
 14006                           ;app_ble.c: 259: ble_transmit_stop();
 14007  1129  2959               	ljmp	l414
 14008  112A                     __end_of_ble_send_data:	
 14009  112A                     __ptext68:	
 14010 ;; *************** function _eusart_write *****************
 14011 ;; Defined at:
 14012 ;;		line 30 in file "src/drv_eusart.c"
 14013 ;; Parameters:    Size  Location     Type
 14014 ;;  byte            1    wreg     unsigned char 
 14015 ;; Auto vars:     Size  Location     Type
 14016 ;;  byte            1    2[BANK0 ] unsigned char 
 14017 ;; Return value:  Size  Location     Type
 14018 ;;                  1    wreg      unsigned char 
 14019 ;; Registers used:
 14020 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14021 ;; Tracked objects:
 14022 ;;		On entry : 0/0
 14023 ;;		On exit  : 1F/0
 14024 ;;		Unchanged: 0/0
 14025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14027 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14029 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14030 ;;Total ram usage:        1 bytes
 14031 ;; Hardware stack levels used:    1
 14032 ;; Hardware stack levels required when called:    9
 14033 ;; This function calls:
 14034 ;;		Nothing
 14035 ;; This function is called by:
 14036 ;;		_ble_send_cmd
 14037 ;;		_ble_send_data
 14038 ;;		_ble_ota_ack
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042                           
 14043                           ;psect for function _eusart_write
 14044  112A                     _eusart_write:	
 14045                           
 14046                           ;incstack = 0
 14047                           ; Regs used in _eusart_write: [wreg+fsr1l+fsr1h+status,2+status,0]
 14048                           ;eusart_write@byte stored from wreg
 14049  112A  0020               	movlb	0	; select bank0
 14050  112B  00A2               	movwf	eusart_write@byte
 14051  112C                     l3987:	
 14052                           ;drv_eusart.c: 32: while(0 == tx_remain);
 14053                           
 14054  112C  0022               	movlb	2	; select bank2
 14055  112D  085B               	movf	_tx_remain^(0+256),w
 14056  112E  1903               	btfsc	3,2
 14057  112F  292C               	goto	l3987
 14058                           
 14059                           ;drv_eusart.c: 34: if(!PIE1bits.TXIE)
 14060  1130  0021               	movlb	1	; select bank1
 14061  1131  1A11               	btfsc	17,4	;volatile
 14062  1132  2938               	goto	l186
 14063                           
 14064                           ;drv_eusart.c: 35: {
 14065                           ;drv_eusart.c: 36: TXREG = byte;
 14066  1133  0020               	movlb	0	; select bank0
 14067  1134  0822               	movf	eusart_write@byte,w
 14068  1135  0023               	movlb	3	; select bank3
 14069  1136  009A               	movwf	26	;volatile
 14070                           
 14071                           ;drv_eusart.c: 37: }
 14072  1137  2948               	goto	l4001
 14073  1138                     l186:	
 14074                           
 14075                           ;drv_eusart.c: 38: else
 14076                           ;drv_eusart.c: 39: {
 14077                           ;drv_eusart.c: 40: PIE1bits.TXIE = 0;
 14078  1138  1211               	bcf	17,4	;volatile
 14079                           
 14080                           ;drv_eusart.c: 41: tx_buf[tx_head++] = byte;
 14081  1139  0020               	movlb	0	; select bank0
 14082  113A  0869               	movf	_tx_head,w
 14083  113B  3E20               	addlw	(low (_tx_buf| (0+512)))& (0+255)
 14084  113C  0086               	movwf	6
 14085  113D  3002               	movlw	2	; select bank4/5
 14086  113E  0087               	movwf	7
 14087  113F  0822               	movf	eusart_write@byte,w
 14088  1140  0081               	movwf	1
 14089  1141  3040               	movlw	64
 14090  1142  0AE9               	incf	_tx_head,f
 14091                           
 14092                           ;drv_eusart.c: 42: if(sizeof( tx_buf) <= tx_head)
 14093  1143  0269               	subwf	_tx_head,w
 14094  1144  1803               	btfsc	3,0
 14095                           
 14096                           ;drv_eusart.c: 43: {
 14097                           ;drv_eusart.c: 44: tx_head = 0;
 14098  1145  01E9               	clrf	_tx_head
 14099                           
 14100                           ;drv_eusart.c: 45: }
 14101                           ;drv_eusart.c: 46: tx_remain--;
 14102  1146  0022               	movlb	2	; select bank2
 14103  1147  03DB               	decf	_tx_remain^(0+256),f
 14104  1148                     l4001:	
 14105                           
 14106                           ;drv_eusart.c: 47: }
 14107                           ;drv_eusart.c: 48: PIE1bits.TXIE = 1;
 14108  1148  0021               	movlb	1	; select bank1
 14109  1149  1611               	bsf	17,4	;volatile
 14110                           
 14111                           ;drv_eusart.c: 49: return byte;
 14112  114A  0020               	movlb	0	; select bank0
 14113  114B  0822               	movf	eusart_write@byte,w
 14114  114C  0008               	return
 14115  114D                     __end_of_eusart_write:	
 14116  114D                     __ptext63:	
 14117 ;; *************** function _ble_transmit_start *****************
 14118 ;; Defined at:
 14119 ;;		line 122 in file "src/app_ble.c"
 14120 ;; Parameters:    Size  Location     Type
 14121 ;;		None
 14122 ;; Auto vars:     Size  Location     Type
 14123 ;;		None
 14124 ;; Return value:  Size  Location     Type
 14125 ;;                  1    wreg      void 
 14126 ;; Registers used:
 14127 ;;		wreg
 14128 ;; Tracked objects:
 14129 ;;		On entry : E/0
 14130 ;;		On exit  : 0/0
 14131 ;;		Unchanged: 0/0
 14132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14135 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14137 ;;Total ram usage:        1 bytes
 14138 ;; Hardware stack levels used:    1
 14139 ;; Hardware stack levels required when called:    9
 14140 ;; This function calls:
 14141 ;;		Nothing
 14142 ;; This function is called by:
 14143 ;;		_ble_send_data
 14144 ;;		_ble_ota_ack
 14145 ;; This function uses a non-reentrant model
 14146 ;;
 14147                           
 14148                           
 14149                           ;psect for function _ble_transmit_start
 14150  114D                     _ble_transmit_start:	
 14151                           
 14152                           ;app_ble.c: 124: LATCbits.LATC1 = 0;
 14153                           
 14154                           ;incstack = 0
 14155                           ; Regs used in _ble_transmit_start: [wreg]
 14156  114D  0022               	movlb	2	; select bank2
 14157  114E  108E               	bcf	14,1	;volatile
 14158                           
 14159                           ;app_ble.c: 125: _delay((unsigned long)((800)*(16000000/4000000.0)));
 14160  114F  3005               	movlw	5
 14161  1150  0020               	movlb	0	; select bank0
 14162  1151  00A2               	movwf	??_ble_transmit_start
 14163  1152  3026               	movlw	38
 14164  1153                     u6787:	
 14165  1153  0B89               	decfsz	9,f
 14166  1154  2953               	goto	u6787
 14167  1155  0BA2               	decfsz	??_ble_transmit_start,f
 14168  1156  2953               	goto	u6787
 14169  1157  0000               	nop
 14170  1158  0008               	return
 14171  1159                     __end_of_ble_transmit_start:	
 14172  1159                     __ptext62:	
 14173 ;; *************** function _ble_transmit_stop *****************
 14174 ;; Defined at:
 14175 ;;		line 128 in file "src/app_ble.c"
 14176 ;; Parameters:    Size  Location     Type
 14177 ;;		None
 14178 ;; Auto vars:     Size  Location     Type
 14179 ;;		None
 14180 ;; Return value:  Size  Location     Type
 14181 ;;                  1    wreg      void 
 14182 ;; Registers used:
 14183 ;;		wreg
 14184 ;; Tracked objects:
 14185 ;;		On entry : 1F/0
 14186 ;;		On exit  : 1F/2
 14187 ;;		Unchanged: 0/0
 14188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14193 ;;Total ram usage:        0 bytes
 14194 ;; Hardware stack levels used:    1
 14195 ;; Hardware stack levels required when called:    9
 14196 ;; This function calls:
 14197 ;;		Nothing
 14198 ;; This function is called by:
 14199 ;;		_ble_send_data
 14200 ;;		_ble_ota_ack
 14201 ;; This function uses a non-reentrant model
 14202 ;;
 14203                           
 14204                           
 14205                           ;psect for function _ble_transmit_stop
 14206  1159                     _ble_transmit_stop:	
 14207  1159                     l414:	
 14208                           ;app_ble.c: 130: while(!TXSTAbits.TRMT);
 14209                           
 14210                           ;incstack = 0
 14211                           ; Regs used in _ble_transmit_stop: [wreg]
 14212                           
 14213  1159  0023               	movlb	3	; select bank3
 14214  115A  1C9E               	btfss	30,1	;volatile
 14215  115B  2959               	goto	l414
 14216                           
 14217                           ;app_ble.c: 131: _delay((unsigned long)((200)*(16000000/4000000.0)));
 14218  115C  30A0               	movlw	160
 14219  115D                     u6777:	
 14220  115D  3200               	nop2
 14221  115E  0B89               	decfsz	9,f
 14222  115F  295D               	goto	u6777
 14223                           
 14224                           ;app_ble.c: 132: LATCbits.LATC1 = 1;
 14225  1160  0022               	movlb	2	; select bank2
 14226  1161  148E               	bsf	14,1	;volatile
 14227  1162  0008               	return
 14228  1163                     __end_of_ble_transmit_stop:	
 14229  1163                     PL46:	
 14230  1163  082B               	movf	ble_send_data@i,w
 14231  1164  00A5               	movwf	??_ble_send_data
 14232  1165  01A6               	clrf	??_ble_send_data+1
 14233  1166  072C               	addwf	ble_send_data@p,w
 14234  1167  00A7               	movwf	??_ble_send_data+2
 14235  1168  0826               	movf	??_ble_send_data+1,w
 14236  1169  3D2D               	addwfc	ble_send_data@p+1,w
 14237  116A  00A8               	movwf	??_ble_send_data+3
 14238  116B  0827               	movf	??_ble_send_data+2,w
 14239  116C  0008               	return
 14240  116D                     __end_ofPL46:	
 14241  116D                     PL82:	
 14242  116D  3E36               	addlw	54
 14243  116E  00A5               	movwf	??_ble_send_data
 14244  116F  3000               	movlw	0
 14245  1170  3D2D               	addwfc	ble_send_data@p+1,w
 14246  1171  00A6               	movwf	??_ble_send_data+1
 14247  1172  0825               	movf	??_ble_send_data,w
 14248  1173  0086               	movwf	6
 14249  1174  0826               	movf	??_ble_send_data+1,w
 14250  1175  0087               	movwf	7
 14251  1176  0008               	return
 14252  1177                     __end_ofPL82:	
 14253  1177                     PL84:	
 14254  1177  082C               	movf	ble_send_data@p,w
 14255  1178  0086               	movwf	6
 14256  1179  082D               	movf	ble_send_data@p+1,w
 14257  117A  0087               	movwf	7
 14258  117B  0801               	movf	1,w
 14259  117C  3903               	andlw	3
 14260  117D  0008               	return
 14261  117E                     __end_ofPL84:	
 14262  117E                     PL108:	
 14263  117E  3E36               	addlw	54
 14264  117F  0086               	movwf	6
 14265  1180  3000               	movlw	0
 14266  1181  3D2D               	addwfc	ble_send_data@p+1,w
 14267  1182  0087               	movwf	7
 14268  1183  0008               	return
 14269  1184                     __end_ofPL108:	
 14270  1184                     PL140:	
 14271  1184  0086               	movwf	6
 14272  1185  3000               	movlw	0
 14273  1186  3D28               	addwfc	??_ble_send_data+3,w
 14274  1187  0087               	movwf	7
 14275  1188  0801               	movf	1,w
 14276  1189  0008               	return
 14277  118A                     __end_ofPL140:	
 14278                           
 14279                           	psect	text65
 14280  1EB6                     __ptext65:	
 14281 ;; *************** function _ble_check_devid *****************
 14282 ;; Defined at:
 14283 ;;		line 85 in file "src/app_ble.c"
 14284 ;; Parameters:    Size  Location     Type
 14285 ;;		None
 14286 ;; Auto vars:     Size  Location     Type
 14287 ;;  dev            17   23[BANK0 ] unsigned char [17]
 14288 ;;  cnt             2   40[BANK0 ] unsigned int 
 14289 ;;  idx             1   44[BANK0 ] unsigned char 
 14290 ;;  rev             1   43[BANK0 ] unsigned char 
 14291 ;;  len             1   42[BANK0 ] unsigned char 
 14292 ;; Return value:  Size  Location     Type
 14293 ;;                  1    wreg      unsigned char 
 14294 ;; Registers used:
 14295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14296 ;; Tracked objects:
 14297 ;;		On entry : 0/2
 14298 ;;		On exit  : 1F/0
 14299 ;;		Unchanged: 0/0
 14300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14302 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14303 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14304 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14305 ;;Total ram usage:       23 bytes
 14306 ;; Hardware stack levels used:    1
 14307 ;; Hardware stack levels required when called:   11
 14308 ;; This function calls:
 14309 ;;		_ble_send_cmd
 14310 ;;		_strlen
 14311 ;; This function is called by:
 14312 ;;		_ble_init
 14313 ;; This function uses a non-reentrant model
 14314 ;;
 14315                           
 14316                           
 14317                           ;psect for function _ble_check_devid
 14318  1EB6                     _ble_check_devid:	
 14319                           
 14320                           ;app_ble.c: 87: char dev[] = "30313234" "30313033";
 14321                           
 14322                           ;incstack = 0
 14323                           ; Regs used in _ble_check_devid: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14324  1EB6  3020               	movlw	low ble_check_devid@F8342
 14325  1EB7  0086               	movwf	6
 14326  1EB8  3001               	movlw	high ble_check_devid@F8342
 14327  1EB9  0087               	movwf	7
 14328  1EBA  3037               	movlw	low ble_check_devid@dev
 14329  1EBB  0084               	movwf	4
 14330  1EBC  3000               	movlw	high ble_check_devid@dev
 14331  1EBD  0085               	movwf	5
 14332  1EBE  3011               	movlw	17
 14333  1EBF  0020               	movlb	0	; select bank0
 14334  1EC0  00B6               	movwf	??_ble_check_devid
 14335  1EC1                     u4070:	
 14336  1EC1  0016               	moviw fsr1++
 14337  1EC2  001A               	movwi fsr0++
 14338  1EC3  0BB6               	decfsz	??_ble_check_devid,f
 14339  1EC4  2EC1               	goto	u4070
 14340                           
 14341                           ;app_ble.c: 88: uint8_t len = strlen(dev);
 14342  1EC5  3037               	movlw	(low (ble_check_devid@dev| 0))& (0+255)
 14343  1EC6  26FA               	fcall	_strlen
 14344  1EC7  0822               	movf	?_strlen,w
 14345  1EC8  00CA               	movwf	ble_check_devid@len
 14346  1EC9  3044               	movlw	low (STR_1| (0+32768))
 14347                           
 14348                           ;app_ble.c: 89: uint8_t idx = 0;
 14349  1ECA  01CC               	clrf	ble_check_devid@idx
 14350                           
 14351                           ;app_ble.c: 90: uint16_t cnt = 0;
 14352  1ECB  01C8               	clrf	ble_check_devid@cnt
 14353  1ECC  01C9               	clrf	ble_check_devid@cnt+1
 14354                           
 14355                           ;app_ble.c: 91: uint8_t rev;
 14356                           ;app_ble.c: 92: ble_send_cmd("AT+ADV_MFR_SPC=?\r\n");
 14357  1ECD  00A7               	movwf	ble_send_cmd@cmd
 14358  1ECE  3098               	movlw	high (STR_1| (0+32768))
 14359  1ECF  00A8               	movwf	ble_send_cmd@cmd+1
 14360  1ED0  3185  25D6  319E   	fcall	_ble_send_cmd
 14361  1ED3                     l5015:	
 14362                           ;app_ble.c: 93: while(idx < len)
 14363                           
 14364  1ED3  084A               	movf	ble_check_devid@len,w
 14365  1ED4  024C               	subwf	ble_check_devid@idx,w
 14366  1ED5  1803               	btfsc	3,0
 14367  1ED6  3401               	retlw	1
 14368                           
 14369                           ;app_ble.c: 94: {
 14370                           ;app_ble.c: 95: if(PIR1bits.RCIF)
 14371  1ED7  1E91               	btfss	17,5	;volatile
 14372  1ED8  2EEA               	goto	l5005
 14373                           
 14374                           ;app_ble.c: 96: {
 14375                           ;app_ble.c: 97: if(RC1STAbits.OERR)
 14376  1ED9  0023               	movlb	3	; select bank3
 14377  1EDA  1C9D               	btfss	29,1	;volatile
 14378  1EDB  2EDE               	goto	l4995
 14379                           
 14380                           ;app_ble.c: 98: {
 14381                           ;app_ble.c: 99: RC1STAbits.CREN = 0;
 14382  1EDC  121D               	bcf	29,4	;volatile
 14383                           
 14384                           ;app_ble.c: 100: RC1STAbits.CREN = 1;
 14385  1EDD  161D               	bsf	29,4	;volatile
 14386  1EDE                     l4995:	
 14387                           
 14388                           ;app_ble.c: 101: }
 14389                           ;app_ble.c: 102: rev = RCREG;
 14390  1EDE  0819               	movf	25,w	;volatile
 14391  1EDF  0020               	movlb	0	; select bank0
 14392  1EE0  00CB               	movwf	ble_check_devid@rev
 14393                           
 14394                           ;app_ble.c: 103: if(rev == dev[idx])
 14395  1EE1  084C               	movf	ble_check_devid@idx,w
 14396  1EE2  3E37               	addlw	(low (ble_check_devid@dev| 0))& (0+255)
 14397  1EE3  0086               	movwf	6
 14398  1EE4  0187               	clrf	7
 14399  1EE5  0801               	movf	1,w
 14400  1EE6  064B               	xorwf	ble_check_devid@rev,w
 14401  1EE7  1D03               	skipz
 14402  1EE8  3400               	retlw	0
 14403                           
 14404                           ;app_ble.c: 104: {
 14405                           ;app_ble.c: 105: idx++;
 14406  1EE9  0ACC               	incf	ble_check_devid@idx,f
 14407  1EEA                     l5005:	
 14408                           ;app_ble.c: 107: else
 14409                           ;app_ble.c: 108: {
 14410                           ;app_ble.c: 109: return 0;
 14411                           
 14412                           ;app_ble.c: 106: }
 14413                           
 14414                           
 14415                           ;app_ble.c: 110: }
 14416                           ;app_ble.c: 111: }
 14417                           ;app_ble.c: 112: _delay((unsigned long)((100)*(16000000/4000000.0)));
 14418  1EEA  3085               	movlw	133
 14419  1EEB                     u6857:	
 14420  1EEB  0B89               	decfsz	9,f
 14421  1EEC  2EEB               	goto	u6857
 14422  1EED  0000               	nop
 14423                           
 14424                           ;app_ble.c: 113: cnt++;
 14425  1EEE  0020               	movlb	0	; select bank0
 14426  1EEF  0AC8               	incf	ble_check_devid@cnt,f
 14427  1EF0  1903               	skipnz
 14428  1EF1  0AC9               	incf	ble_check_devid@cnt+1,f
 14429                           
 14430                           ;app_ble.c: 114: if(cnt > 1000)
 14431  1EF2  3003               	movlw	3
 14432  1EF3  0249               	subwf	ble_check_devid@cnt+1,w
 14433  1EF4  30E9               	movlw	233
 14434  1EF5  1903               	skipnz
 14435  1EF6  0248               	subwf	ble_check_devid@cnt,w
 14436  1EF7  1803               	btfsc	3,0
 14437  1EF8  3400               	retlw	0
 14438  1EF9  2ED3               	goto	l5015
 14439  1EFA                     __end_of_ble_check_devid:	
 14440                           ;app_ble.c: 117: }
 14441                           ;app_ble.c: 118: }
 14442                           ;app_ble.c: 119: return 1;
 14443                           
 14444  1EFA                     __ptext67:	
 14445 ;; *************** function _strlen *****************
 14446 ;; Defined at:
 14447 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\strlen.c"
 14448 ;; Parameters:    Size  Location     Type
 14449 ;;  s               1    wreg     PTR const unsigned char 
 14450 ;;		 -> ble_check_devid@dev(17), ble_send_cmd@ack(8), 
 14451 ;; Auto vars:     Size  Location     Type
 14452 ;;  s               1    6[BANK0 ] PTR const unsigned char 
 14453 ;;		 -> ble_check_devid@dev(17), ble_send_cmd@ack(8), 
 14454 ;;  cp              1    5[BANK0 ] PTR const unsigned char 
 14455 ;;		 -> ble_check_devid@dev(17), ble_send_cmd@ack(8), 
 14456 ;; Return value:  Size  Location     Type
 14457 ;;                  2    2[BANK0 ] unsigned int 
 14458 ;; Registers used:
 14459 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14460 ;; Tracked objects:
 14461 ;;		On entry : 1F/0
 14462 ;;		On exit  : 1F/0
 14463 ;;		Unchanged: 0/0
 14464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14465 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14466 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14468 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14469 ;;Total ram usage:        5 bytes
 14470 ;; Hardware stack levels used:    1
 14471 ;; Hardware stack levels required when called:    9
 14472 ;; This function calls:
 14473 ;;		Nothing
 14474 ;; This function is called by:
 14475 ;;		_ble_send_cmd
 14476 ;;		_ble_check_devid
 14477 ;; This function uses a non-reentrant model
 14478 ;;
 14479                           
 14480                           
 14481                           ;psect for function _strlen
 14482  1EFA                     _strlen:	
 14483                           
 14484                           ;incstack = 0
 14485                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 14486                           ;strlen@s stored from wreg
 14487  1EFA  00A6               	movwf	strlen@s
 14488  1EFB  00A5               	movwf	strlen@cp
 14489  1EFC                     l4057:	
 14490  1EFC  0825               	movf	strlen@cp,w
 14491  1EFD  0086               	movwf	6
 14492  1EFE  0187               	clrf	7
 14493  1EFF  0801               	movf	1,w
 14494  1F00  1903               	btfsc	3,2
 14495  1F01  2F04               	goto	l4059
 14496  1F02  0AA5               	incf	strlen@cp,f
 14497  1F03  2EFC               	goto	l4057
 14498  1F04                     l4059:	
 14499  1F04  0826               	movf	strlen@s,w
 14500  1F05  0225               	subwf	strlen@cp,w
 14501  1F06  00A2               	movwf	?_strlen
 14502  1F07  01A3               	clrf	?_strlen+1
 14503  1F08  1BA2               	btfsc	?_strlen,7
 14504  1F09  03A3               	decf	?_strlen+1,f
 14505  1F0A  0008               	return
 14506  1F0B                     __end_of_strlen:	
 14507                           
 14508                           	psect	text78
 14509  1DED                     __ptext78:	
 14510 ;; *************** function _key_init *****************
 14511 ;; Defined at:
 14512 ;;		line 5 in file "src/app_key.c"
 14513 ;; Parameters:    Size  Location     Type
 14514 ;;  cb              2    2[BANK0 ] PTR FTN(unsigned char ,e
 14515 ;;		 -> led_touch_cb(1), 
 14516 ;; Auto vars:     Size  Location     Type
 14517 ;;		None
 14518 ;; Return value:  Size  Location     Type
 14519 ;;                  1    wreg      void 
 14520 ;; Registers used:
 14521 ;;		wreg
 14522 ;; Tracked objects:
 14523 ;;		On entry : B1F/0
 14524 ;;		On exit  : B1F/2
 14525 ;;		Unchanged: B00/0
 14526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14527 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14530 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14531 ;;Total ram usage:        2 bytes
 14532 ;; Hardware stack levels used:    1
 14533 ;; Hardware stack levels required when called:    9
 14534 ;; This function calls:
 14535 ;;		Nothing
 14536 ;; This function is called by:
 14537 ;;		_app_init
 14538 ;; This function uses a non-reentrant model
 14539 ;;
 14540                           
 14541                           
 14542                           ;psect for function _key_init
 14543  1DED                     _key_init:	
 14544                           
 14545                           ;app_key.c: 7: key_func = cb;
 14546                           
 14547                           ;incstack = 0
 14548                           ; Regs used in _key_init: [wreg]
 14549  1DED  0823               	movf	key_init@cb+1,w
 14550  1DEE  0022               	movlb	2	; select bank2
 14551  1DEF  00D8               	movwf	(_key_func+1)^(0+256)
 14552  1DF0  0020               	movlb	0	; select bank0
 14553  1DF1  0822               	movf	key_init@cb,w
 14554  1DF2  0022               	movlb	2	; select bank2
 14555  1DF3  00D7               	movwf	_key_func^(0+256)
 14556  1DF4  0008               	return
 14557  1DF5                     __end_of_key_init:	
 14558                           
 14559                           	psect	intentry
 14560  0404                     __pintentry:	
 14561 ;; *************** function _app_isr *****************
 14562 ;; Defined at:
 14563 ;;		line 129 in file "src/app_main.c"
 14564 ;; Parameters:    Size  Location     Type
 14565 ;;		None
 14566 ;; Auto vars:     Size  Location     Type
 14567 ;;		None
 14568 ;; Return value:  Size  Location     Type
 14569 ;;                  1    wreg      void 
 14570 ;; Registers used:
 14571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14572 ;; Tracked objects:
 14573 ;;		On entry : 0/0
 14574 ;;		On exit  : 0/0
 14575 ;;		Unchanged: 0/0
 14576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14581 ;;Total ram usage:        0 bytes
 14582 ;; Hardware stack levels used:    1
 14583 ;; Hardware stack levels required when called:    8
 14584 ;; This function calls:
 14585 ;;		_eusart_receive_isr
 14586 ;;		_eusart_transmit_isr
 14587 ;;		_tmr0_isr
 14588 ;;		_tmr2_isr
 14589 ;; This function is called by:
 14590 ;;		Interrupt level 1
 14591 ;; This function uses a non-reentrant model
 14592 ;;
 14593                           
 14594  0404                     _app_isr:	
 14595                           
 14596                           ;incstack = 0
 14597  0404  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14598                           
 14599                           ; Regs used in _app_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14600  0405  3184               	pagesel	$
 14601                           
 14602                           ;app_main.c: 131: if(PIE1bits.RCIE && PIR1bits.RCIF)
 14603  0406  0021               	movlb	1	; select bank1
 14604  0407  1E91               	btfss	17,5	;volatile
 14605  0408  2C10               	goto	i1l1127
 14606  0409  0020               	movlb	0	; select bank0
 14607  040A  1E91               	btfss	17,5	;volatile
 14608  040B  2C10               	goto	i1l1127
 14609                           
 14610                           ;app_main.c: 132: {
 14611                           ;app_main.c: 133: eusart_receive_isr();
 14612  040C  319E  263D  3184   	fcall	_eusart_receive_isr
 14613                           
 14614                           ;app_main.c: 134: }
 14615  040F  2C2C               	goto	i1l1134
 14616  0410                     i1l1127:	
 14617                           
 14618                           ;app_main.c: 135: else if(PIE0bits.TMR0IE && PIR0bits.TMR0IF)
 14619  0410  0021               	movlb	1	; select bank1
 14620  0411  1E90               	btfss	16,5	;volatile
 14621  0412  2C1A               	goto	i1l1129
 14622  0413  0020               	movlb	0	; select bank0
 14623  0414  1E90               	btfss	16,5	;volatile
 14624  0415  2C1A               	goto	i1l1129
 14625                           
 14626                           ;app_main.c: 136: {
 14627                           ;app_main.c: 137: tmr0_isr();
 14628  0416  319D  25F5  3184   	fcall	_tmr0_isr
 14629                           
 14630                           ;app_main.c: 138: }
 14631  0419  2C2C               	goto	i1l1134
 14632  041A                     i1l1129:	
 14633                           
 14634                           ;app_main.c: 139: else if(PIE1bits.TMR2IE && PIR1bits.TMR2IF)
 14635  041A  0021               	movlb	1	; select bank1
 14636  041B  1C91               	btfss	17,1	;volatile
 14637  041C  2C24               	goto	i1l1131
 14638  041D  0020               	movlb	0	; select bank0
 14639  041E  1C91               	btfss	17,1	;volatile
 14640  041F  2C24               	goto	i1l1131
 14641                           
 14642                           ;app_main.c: 140: {
 14643                           ;app_main.c: 141: tmr2_isr();
 14644  0420  319E  2600  3184   	fcall	_tmr2_isr
 14645                           
 14646                           ;app_main.c: 142: }
 14647  0423  2C2C               	goto	i1l1134
 14648  0424                     i1l1131:	
 14649                           
 14650                           ;app_main.c: 143: else if(PIE1bits.TXIE && PIR1bits.TXIF)
 14651  0424  0021               	movlb	1	; select bank1
 14652  0425  1E11               	btfss	17,4	;volatile
 14653  0426  2C2C               	goto	i1l1134
 14654  0427  0020               	movlb	0	; select bank0
 14655  0428  1E11               	btfss	17,4	;volatile
 14656  0429  2C2C               	goto	i1l1134
 14657                           
 14658                           ;app_main.c: 144: {
 14659                           ;app_main.c: 145: eusart_transmit_isr();
 14660  042A  319E  2653         	fcall	_eusart_transmit_isr
 14661  042C                     i1l1134:	
 14662  042C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14663  042D  0009               	retfie
 14664  042E                     __end_of_app_isr:	
 14665                           
 14666                           	psect	text82
 14667  1E00                     __ptext82:	
 14668 ;; *************** function _tmr2_isr *****************
 14669 ;; Defined at:
 14670 ;;		line 58 in file "src/drv_tmr.c"
 14671 ;; Parameters:    Size  Location     Type
 14672 ;;		None
 14673 ;; Auto vars:     Size  Location     Type
 14674 ;;		None
 14675 ;; Return value:  Size  Location     Type
 14676 ;;                  1    wreg      void 
 14677 ;; Registers used:
 14678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14679 ;; Tracked objects:
 14680 ;;		On entry : 1F/0
 14681 ;;		On exit  : 0/0
 14682 ;;		Unchanged: 0/0
 14683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14688 ;;Total ram usage:        0 bytes
 14689 ;; Hardware stack levels used:    1
 14690 ;; Hardware stack levels required when called:    7
 14691 ;; This function calls:
 14692 ;;		Absolute function
 14693 ;;		_tmr2_isr_callback
 14694 ;; This function is called by:
 14695 ;;		_app_isr
 14696 ;; This function uses a non-reentrant model
 14697 ;;
 14698                           
 14699                           
 14700                           ;psect for function _tmr2_isr
 14701  1E00                     _tmr2_isr:	
 14702                           
 14703                           ;drv_tmr.c: 60: PIR1bits.TMR2IF = 0;
 14704                           
 14705                           ;incstack = 0
 14706                           ; Regs used in _tmr2_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14707  1E00  1091               	bcf	17,1	;volatile
 14708                           
 14709                           ;drv_tmr.c: 61: if(tmr2_isr_cb != (0))
 14710  1E01  0021               	movlb	1	; select bank1
 14711  1E02  086E               	movf	_tmr2_isr_cb^(0+128),w
 14712  1E03  046F               	iorwf	(_tmr2_isr_cb+1)^(0+128),w
 14713  1E04  1903               	btfsc	3,2
 14714  1E05  0008               	return
 14715                           
 14716                           ;drv_tmr.c: 62: {
 14717                           ;drv_tmr.c: 63: tmr2_isr_cb();
 14718  1E06  086F               	movf	(_tmr2_isr_cb+1)^(0+128),w
 14719  1E07  008A               	movwf	10
 14720  1E08  086E               	movf	_tmr2_isr_cb^(0+128),w
 14721  1E09  000A               	callw
 14722  1E0A  319E               	pagesel	$
 14723  1E0B  0008               	return
 14724  1E0C                     __end_of_tmr2_isr:	
 14725                           
 14726                           	psect	text83
 14727  1F0B                     __ptext83:	
 14728 ;; *************** function _tmr2_isr_callback *****************
 14729 ;; Defined at:
 14730 ;;		line 92 in file "src/app_main.c"
 14731 ;; Parameters:    Size  Location     Type
 14732 ;;		None
 14733 ;; Auto vars:     Size  Location     Type
 14734 ;;		None
 14735 ;; Return value:  Size  Location     Type
 14736 ;;                  1    wreg      void 
 14737 ;; Registers used:
 14738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14739 ;; Tracked objects:
 14740 ;;		On entry : 1F/1
 14741 ;;		On exit  : 10/0
 14742 ;;		Unchanged: 0/0
 14743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14748 ;;Total ram usage:        0 bytes
 14749 ;; Hardware stack levels used:    1
 14750 ;; Hardware stack levels required when called:    6
 14751 ;; This function calls:
 14752 ;;		_key_scan
 14753 ;;		_led_process
 14754 ;; This function is called by:
 14755 ;;		_app_init
 14756 ;;		_tmr2_isr
 14757 ;; This function uses a non-reentrant model
 14758 ;;
 14759                           
 14760                           
 14761                           ;psect for function _tmr2_isr_callback
 14762  1F0B                     _tmr2_isr_callback:	
 14763                           
 14764                           ;app_main.c: 94: static uint8_t cnt = 0;
 14765                           ;app_main.c: 96: cnt++;
 14766                           
 14767                           ;incstack = 0
 14768                           ; Regs used in _tmr2_isr_callback: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14769  1F0B  0020               	movlb	0	; select bank0
 14770  1F0C  0AE0               	incf	tmr2_isr_callback@cnt,f
 14771                           
 14772                           ;app_main.c: 97: if((cnt&0x03) == 0)
 14773  1F0D  0860               	movf	tmr2_isr_callback@cnt,w
 14774  1F0E  3903               	andlw	3
 14775  1F0F  1D03               	btfss	3,2
 14776  1F10  0008               	return
 14777                           
 14778                           ;app_main.c: 98: {
 14779                           ;app_main.c: 100: if((cnt&0x0F) == 0)
 14780  1F11  0860               	movf	tmr2_isr_callback@cnt,w
 14781  1F12  390F               	andlw	15
 14782  1F13  1D03               	btfss	3,2
 14783  1F14  2F17               	goto	i1l1118
 14784                           
 14785                           ;app_main.c: 101: {
 14786                           ;app_main.c: 102: key_scan();
 14787  1F15  2718  319F         	fcall	_key_scan
 14788  1F17                     i1l1118:	
 14789                           
 14790                           ;app_main.c: 103: }
 14791                           ;app_main.c: 105: led_process();
 14792  1F17  2F6B               	ljmp	i1l4107
 14793  1F18                     __end_of_tmr2_isr_callback:	
 14794  1F18                     __ptext91:	
 14795 ;; *************** function _key_scan *****************
 14796 ;; Defined at:
 14797 ;;		line 28 in file "src/app_key.c"
 14798 ;; Parameters:    Size  Location     Type
 14799 ;;		None
 14800 ;; Auto vars:     Size  Location     Type
 14801 ;;  key_value       1    1[BANK0 ] unsigned char 
 14802 ;; Return value:  Size  Location     Type
 14803 ;;                  1    wreg      void 
 14804 ;; Registers used:
 14805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14806 ;; Tracked objects:
 14807 ;;		On entry : 1F/0
 14808 ;;		On exit  : 1F/0
 14809 ;;		Unchanged: 0/0
 14810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14812 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14814 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14815 ;;Total ram usage:        1 bytes
 14816 ;; Hardware stack levels used:    1
 14817 ;; Hardware stack levels required when called:    5
 14818 ;; This function calls:
 14819 ;;		_key_action
 14820 ;;		_key_read
 14821 ;; This function is called by:
 14822 ;;		_tmr2_isr_callback
 14823 ;; This function uses a non-reentrant model
 14824 ;;
 14825                           
 14826                           
 14827                           ;psect for function _key_scan
 14828  1F18                     _key_scan:	
 14829                           
 14830                           ;app_key.c: 30: static key_value_t last_key = 0x00;
 14831                           ;app_key.c: 31: static uint8_t repeat = 0;
 14832                           ;app_key.c: 32: key_value_t key_value = key_read();
 14833                           
 14834                           ;incstack = 0
 14835                           ; Regs used in _key_scan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14836  1F18  275E  319F         	fcall	_key_read
 14837  1F1A  00A1               	movwf	key_scan@key_value
 14838                           
 14839                           ;app_key.c: 33: if(key_value != 0x00)
 14840  1F1B  0821               	movf	key_scan@key_value,w
 14841  1F1C  1903               	btfsc	3,2
 14842  1F1D  2F39               	goto	i1l4299
 14843                           
 14844                           ;app_key.c: 34: {
 14845                           ;app_key.c: 35: if(key_value == last_key)
 14846  1F1E  0821               	movf	key_scan@key_value,w
 14847  1F1F  0666               	xorwf	key_scan@last_key,w
 14848  1F20  1D03               	skipz
 14849  1F21  2F46               	goto	i1l4297
 14850  1F22  3020               	movlw	32
 14851                           
 14852                           ;app_key.c: 36: {
 14853                           ;app_key.c: 37: repeat++;
 14854  1F23  0AE5               	incf	key_scan@repeat,f
 14855                           
 14856                           ;app_key.c: 38: if(repeat == 32)
 14857  1F24  0665               	xorwf	key_scan@repeat,w
 14858  1F25  1D03               	btfss	3,2
 14859  1F26  2F2D               	goto	i1l4291
 14860                           
 14861                           ;app_key.c: 39: {
 14862                           ;app_key.c: 40: key_action(key_value, KEY_STATE_LONG_PRESS);
 14863  1F27  01FD               	clrf	key_action@state
 14864  1F28  0AFD               	incf	key_action@state,f
 14865  1F29  0821               	movf	key_scan@key_value,w
 14866  1F2A  274C  319F         	fcall	_key_action
 14867                           
 14868                           ;app_key.c: 41: }
 14869  1F2C  2F48               	goto	i1l4309
 14870  1F2D                     i1l4291:	
 14871                           
 14872                           ;app_key.c: 42: else if(repeat >= 32 + 1)
 14873  1F2D  3021               	movlw	33
 14874  1F2E  0265               	subwf	key_scan@repeat,w
 14875  1F2F  1C03               	skipc
 14876  1F30  2F48               	goto	i1l4309
 14877                           
 14878                           ;app_key.c: 43: {
 14879                           ;app_key.c: 44: repeat = 32;
 14880  1F31  3020               	movlw	32
 14881  1F32  00E5               	movwf	key_scan@repeat
 14882                           
 14883                           ;app_key.c: 45: key_action(key_value, KEY_STATE_CONT_PRESS);
 14884  1F33  3002               	movlw	2
 14885  1F34  00FD               	movwf	key_action@state
 14886  1F35  0821               	movf	key_scan@key_value,w
 14887  1F36  274C  319F         	fcall	_key_action
 14888  1F38  2F48               	goto	i1l4309
 14889  1F39                     i1l4299:	
 14890                           ;app_key.c: 51: }
 14891                           ;app_key.c: 52: }
 14892                           
 14893                           
 14894                           ;app_key.c: 53: else
 14895                           ;app_key.c: 54: {
 14896                           ;app_key.c: 55: if(last_key != 0x00)
 14897  1F39  0866               	movf	key_scan@last_key,w
 14898  1F3A  1903               	btfsc	3,2
 14899  1F3B  2F46               	goto	i1l4297
 14900                           
 14901                           ;app_key.c: 56: {
 14902                           ;app_key.c: 57: if(repeat >= 32)
 14903  1F3C  3020               	movlw	32
 14904  1F3D  0265               	subwf	key_scan@repeat,w
 14905  1F3E  1C03               	skipc
 14906  1F3F  2F43               	goto	i1l4305
 14907                           
 14908                           ;app_key.c: 58: {
 14909                           ;app_key.c: 59: key_action(last_key, KEY_STATE_RELEASE);
 14910  1F40  3003               	movlw	3
 14911  1F41  00FD               	movwf	key_action@state
 14912  1F42  2F44               	goto	L22
 14913  1F43                     i1l4305:	
 14914                           ;app_key.c: 60: }
 14915                           
 14916                           
 14917                           ;app_key.c: 61: else
 14918                           ;app_key.c: 62: {
 14919                           ;app_key.c: 63: key_action(last_key, KEY_STATE_SHORT_PRESS);
 14920  1F43  01FD               	clrf	key_action@state
 14921  1F44                     L22:	
 14922  1F44  0866               	movf	key_scan@last_key,w
 14923  1F45  274C               	fcall	_key_action
 14924  1F46                     i1l4297:	
 14925                           
 14926                           ;app_key.c: 48: else
 14927                           ;app_key.c: 49: {
 14928                           ;app_key.c: 50: repeat = 0;
 14929  1F46  0020               	movlb	0	; select bank0
 14930  1F47  01E5               	clrf	key_scan@repeat
 14931  1F48                     i1l4309:	
 14932                           
 14933                           ;app_key.c: 67: }
 14934                           ;app_key.c: 68: last_key = key_value;
 14935  1F48  0020               	movlb	0	; select bank0
 14936  1F49  0821               	movf	key_scan@key_value,w
 14937  1F4A  00E6               	movwf	key_scan@last_key
 14938  1F4B  0008               	return
 14939  1F4C                     __end_of_key_scan:	
 14940  1F4C                     __ptext93:	
 14941 ;; *************** function _key_action *****************
 14942 ;; Defined at:
 14943 ;;		line 20 in file "src/app_key.c"
 14944 ;; Parameters:    Size  Location     Type
 14945 ;;  key             1    wreg     unsigned char 
 14946 ;;  state           1   13[COMMON] enum E8166
 14947 ;; Auto vars:     Size  Location     Type
 14948 ;;  key             1    0[BANK0 ] unsigned char 
 14949 ;; Return value:  Size  Location     Type
 14950 ;;                  1    wreg      void 
 14951 ;; Registers used:
 14952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14953 ;; Tracked objects:
 14954 ;;		On entry : 1F/0
 14955 ;;		On exit  : 0/0
 14956 ;;		Unchanged: 0/0
 14957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14958 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14959 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14961 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14962 ;;Total ram usage:        2 bytes
 14963 ;; Hardware stack levels used:    1
 14964 ;; Hardware stack levels required when called:    4
 14965 ;; This function calls:
 14966 ;;		Absolute function
 14967 ;;		_led_touch_cb
 14968 ;; This function is called by:
 14969 ;;		_key_scan
 14970 ;; This function uses a non-reentrant model
 14971 ;;
 14972                           
 14973                           
 14974                           ;psect for function _key_action
 14975  1F4C                     _key_action:	
 14976                           
 14977                           ;incstack = 0
 14978                           ; Regs used in _key_action: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14979                           ;key_action@key stored from wreg
 14980  1F4C  00A0               	movwf	key_action@key
 14981                           
 14982                           ;app_key.c: 22: if(key_func != (0))
 14983  1F4D  0022               	movlb	2	; select bank2
 14984  1F4E  0857               	movf	_key_func^(0+256),w
 14985  1F4F  0458               	iorwf	(_key_func+1)^(0+256),w
 14986  1F50  1903               	btfsc	3,2
 14987  1F51  0008               	return
 14988                           
 14989                           ;app_key.c: 23: {
 14990                           ;app_key.c: 24: key_func(key, state);
 14991  1F52  0020               	movlb	0	; select bank0
 14992  1F53  0820               	movf	key_action@key,w
 14993  1F54  00FB               	movwf	led_touch_cb@key
 14994  1F55  087D               	movf	key_action@state,w
 14995  1F56  00FC               	movwf	led_touch_cb@state
 14996  1F57  0022               	movlb	2	; select bank2
 14997  1F58  0858               	movf	(_key_func+1)^(0+256),w
 14998  1F59  008A               	movwf	10
 14999  1F5A  0857               	movf	_key_func^(0+256),w
 15000  1F5B  000A               	callw
 15001  1F5C  319F               	pagesel	$
 15002  1F5D  0008               	return
 15003  1F5E                     __end_of_key_action:	
 15004  1F5E                     __ptext92:	
 15005 ;; *************** function _key_read *****************
 15006 ;; Defined at:
 15007 ;;		line 10 in file "src/app_key.c"
 15008 ;; Parameters:    Size  Location     Type
 15009 ;;		None
 15010 ;; Auto vars:     Size  Location     Type
 15011 ;;  dat             1    0[COMMON] unsigned char 
 15012 ;; Return value:  Size  Location     Type
 15013 ;;                  1    wreg      unsigned char 
 15014 ;; Registers used:
 15015 ;;		wreg, status,2, status,0
 15016 ;; Tracked objects:
 15017 ;;		On entry : 1F/0
 15018 ;;		On exit  : 1F/0
 15019 ;;		Unchanged: 0/0
 15020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15024 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15025 ;;Total ram usage:        1 bytes
 15026 ;; Hardware stack levels used:    1
 15027 ;; This function calls:
 15028 ;;		Nothing
 15029 ;; This function is called by:
 15030 ;;		_key_scan
 15031 ;; This function uses a non-reentrant model
 15032 ;;
 15033                           
 15034                           
 15035                           ;psect for function _key_read
 15036  1F5E                     _key_read:	
 15037                           
 15038                           ;app_key.c: 12: static uint8_t trg;
 15039                           ;app_key.c: 13: static uint8_t cont;
 15040                           ;app_key.c: 14: uint8_t dat = (PORTC^0xFF) & 0x01;
 15041                           
 15042                           ;incstack = 0
 15043                           ; Regs used in _key_read: [wreg+status,2+status,0]
 15044  1F5E  090E               	comf	14,w	;volatile
 15045  1F5F  00F0               	movwf	key_read@dat
 15046  1F60  3001               	movlw	1
 15047  1F61  05F0               	andwf	key_read@dat,f
 15048                           
 15049                           ;app_key.c: 15: trg = dat & (dat ^ cont);
 15050  1F62  0870               	movf	key_read@dat,w
 15051  1F63  0667               	xorwf	key_read@cont,w
 15052  1F64  00E8               	movwf	key_read@trg
 15053  1F65  0870               	movf	key_read@dat,w
 15054  1F66  05E8               	andwf	key_read@trg,f
 15055                           
 15056                           ;app_key.c: 16: cont = dat;
 15057  1F67  00E7               	movwf	key_read@cont
 15058                           
 15059                           ;app_key.c: 17: return( trg ^ cont);
 15060  1F68  0668               	xorwf	key_read@trg,w
 15061  1F69  0008               	return
 15062  1F6A                     __end_of_key_read:	
 15063  1F6A                     __ptext84:	
 15064 ;; *************** function _led_process *****************
 15065 ;; Defined at:
 15066 ;;		line 497 in file "src/app_led.c"
 15067 ;; Parameters:    Size  Location     Type
 15068 ;;		None
 15069 ;; Auto vars:     Size  Location     Type
 15070 ;;		None
 15071 ;; Return value:  Size  Location     Type
 15072 ;;                  1    wreg      void 
 15073 ;; Registers used:
 15074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15075 ;; Tracked objects:
 15076 ;;		On entry : 1F/0
 15077 ;;		On exit  : 14/4
 15078 ;;		Unchanged: 0/0
 15079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15084 ;;Total ram usage:        0 bytes
 15085 ;; Hardware stack levels used:    1
 15086 ;; Hardware stack levels required when called:    2
 15087 ;; This function calls:
 15088 ;;		_led_ramp
 15089 ;; This function is called by:
 15090 ;;		_tmr2_isr_callback
 15091 ;; This function uses a non-reentrant model
 15092 ;;
 15093                           
 15094                           
 15095                           ;psect for function _led_process
 15096  1F6A                     _led_process:	
 15097                           
 15098                           ;app_led.c: 507: led_ramp();
 15099                           
 15100                           ;incstack = 0
 15101                           ; Regs used in _led_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15102  1F6A  2F6B               	ljmp	i1l4107
 15103  1F6B                     __end_of_led_process:	
 15104  1F6B                     __ptext85:	
 15105 ;; *************** function _led_ramp *****************
 15106 ;; Defined at:
 15107 ;;		line 477 in file "src/app_led.c"
 15108 ;; Parameters:    Size  Location     Type
 15109 ;;		None
 15110 ;; Auto vars:     Size  Location     Type
 15111 ;;  i               1   10[COMMON] unsigned char 
 15112 ;; Return value:  Size  Location     Type
 15113 ;;                  1    wreg      void 
 15114 ;; Registers used:
 15115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15116 ;; Tracked objects:
 15117 ;;		On entry : 1F/0
 15118 ;;		On exit  : 14/4
 15119 ;;		Unchanged: 0/0
 15120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15123 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15124 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15125 ;;Total ram usage:        7 bytes
 15126 ;; Hardware stack levels used:    1
 15127 ;; Hardware stack levels required when called:    1
 15128 ;; This function calls:
 15129 ;;		_pwm1_load_duty
 15130 ;;		_pwm2_load_duty
 15131 ;;		_pwm3_load_duty
 15132 ;;		_pwm4_load_duty
 15133 ;;		_pwm5_load_duty
 15134 ;; This function is called by:
 15135 ;;		_led_process
 15136 ;; This function uses a non-reentrant model
 15137 ;;
 15138                           
 15139                           
 15140                           ;psect for function _led_ramp
 15141  1F6B                     _led_ramp:	
 15142  1F6B                     i1l4107:	
 15143                           ;incstack = 0
 15144                           ; Regs used in _led_ramp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15145                           
 15146                           
 15147                           ;app_led.c: 479: for(uint8_t i = 0; i < 5; i++)
 15148  1F6B  01FA               	clrf	led_ramp@i
 15149  1F6C                     i1l4113:	
 15150                           
 15151                           ;app_led.c: 480: {
 15152                           ;app_led.c: 481: if(current_bright[i] + 4 < target_bright[i])
 15153  1F6C  357A               	lslf	led_ramp@i,w
 15154  1F6D  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 15155  1F6E  27BE  319F         	fcall	PL102	;call to abstracted procedure
 15156  1F70  3EDA               	addlw	(low (_current_bright| 0))& (0+255)
 15157  1F71  27AC  319F         	fcall	PL36	;call to abstracted procedure
 15158  1F73  1803               	skipnc
 15159  1F74  2F7C               	goto	i1l4117
 15160                           
 15161                           ;app_led.c: 482: {
 15162                           ;app_led.c: 483: current_bright[i] += 4;
 15163  1F75  27C6  319F         	fcall	PL130	;call to abstracted procedure
 15164  1F77  0781               	addwf	1,f
 15165  1F78  3141               	addfsr 1,1
 15166  1F79  1803               	skipnc
 15167  1F7A  0A81               	incf	1,f
 15168                           
 15169                           ;app_led.c: 484: }
 15170  1F7B  2F97               	goto	i1l4123
 15171  1F7C                     i1l4117:	
 15172                           
 15173                           ;app_led.c: 485: else if(current_bright[i] > target_bright[i] + 4)
 15174  1F7C  357A               	lslf	led_ramp@i,w
 15175  1F7D  3EDA               	addlw	(low (_current_bright| 0))& (0+255)
 15176  1F7E  27BE  319F         	fcall	PL102	;call to abstracted procedure
 15177  1F80  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 15178  1F81  27AC  319F         	fcall	PL36	;call to abstracted procedure
 15179  1F83  1803               	skipnc
 15180  1F84  2F8D               	goto	i1l4121
 15181                           
 15182                           ;app_led.c: 486: {
 15183                           ;app_led.c: 487: current_bright[i] -= 4;
 15184  1F85  27C6  319F         	fcall	PL130	;call to abstracted procedure
 15185  1F87  0281               	subwf	1,f
 15186  1F88  3000               	movlw	0
 15187  1F89  3141               	addfsr 1,1
 15188  1F8A  3B81               	subwfb	1,f
 15189  1F8B  317F               	addfsr 1,-1
 15190                           
 15191                           ;app_led.c: 488: }
 15192  1F8C  2F97               	goto	i1l4123
 15193  1F8D                     i1l4121:	
 15194                           
 15195                           ;app_led.c: 489: else
 15196                           ;app_led.c: 490: {
 15197                           ;app_led.c: 491: current_bright[i] = target_bright[i];
 15198  1F8D  357A               	lslf	led_ramp@i,w
 15199  1F8E  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 15200  1F8F  0086               	movwf	6
 15201  1F90  0187               	clrf	7
 15202  1F91  357A               	lslf	led_ramp@i,w
 15203  1F92  3EDA               	addlw	(low (_current_bright| 0))& (0+255)
 15204  1F93  0084               	movwf	4
 15205  1F94  318F  27FA  319F   	fcall	PL6	;call to abstracted procedure
 15206  1F97                     i1l4123:	
 15207                           
 15208                           ;app_led.c: 492: }
 15209                           ;app_led.c: 493: led_load_duty[i](current_bright[i]);
 15210  1F97  357A               	lslf	led_ramp@i,w
 15211  1F98  3EDA               	addlw	(low (_current_bright| 0))& (0+255)
 15212  1F99  0086               	movwf	6
 15213  1F9A  0187               	clrf	7
 15214  1F9B  3F40               	moviw [0]fsr1
 15215  1F9C  00F0               	movwf	pwm5_load_duty@value
 15216  1F9D  3F41               	moviw [1]fsr1
 15217  1F9E  00F1               	movwf	pwm5_load_duty@value+1
 15218  1F9F  357A               	lslf	led_ramp@i,w
 15219  1FA0  3E3D               	addlw	(low (_led_load_duty| (0+256)))& (0+255)
 15220  1FA1  27DB               	fcall	PL154	;call to abstracted procedure
 15221  1FA2  008A               	movwf	10
 15222  1FA3  3F40               	moviw [0]fsr1
 15223  1FA4  000A               	callw
 15224  1FA5  3005               	movlw	5
 15225  1FA6  319F               	pagesel	$
 15226  1FA7  0AFA               	incf	led_ramp@i,f
 15227  1FA8  027A               	subwf	led_ramp@i,w
 15228  1FA9  1803               	btfsc	3,0
 15229  1FAA  0008               	return
 15230  1FAB  2F6C               	goto	i1l4113
 15231  1FAC                     __end_of_led_ramp:	
 15232  1FAC                     PL36:	
 15233  1FAC  0086               	movwf	6
 15234  1FAD  3F40               	moviw [0]fsr1
 15235  1FAE  00F6               	movwf	??_led_ramp+2
 15236  1FAF  3F41               	moviw [1]fsr1
 15237  1FB0  00F7               	movwf	??_led_ramp+3
 15238  1FB1  0876               	movf	??_led_ramp+2,w
 15239  1FB2  3E04               	addlw	4
 15240  1FB3  00F8               	movwf	??_led_ramp+4
 15241  1FB4  3000               	movlw	0
 15242  1FB5  3D77               	addwfc	??_led_ramp+3,w
 15243  1FB6  00F9               	movwf	??_led_ramp+5
 15244  1FB7  0875               	movf	??_led_ramp+1,w
 15245  1FB8  0279               	subwf	??_led_ramp+5,w
 15246  1FB9  1D03               	skipz
 15247  1FBA  0008               	return
 15248  1FBB  0874               	movf	??_led_ramp,w
 15249  1FBC  0278               	subwf	??_led_ramp+4,w
 15250  1FBD  0008               	return
 15251  1FBE                     __end_ofPL36:	
 15252  1FBE                     PL102:	
 15253  1FBE  0086               	movwf	6
 15254  1FBF  0187               	clrf	7
 15255  1FC0  3F40               	moviw [0]fsr1
 15256  1FC1  00F4               	movwf	??_led_ramp
 15257  1FC2  3F41               	moviw [1]fsr1
 15258  1FC3  00F5               	movwf	??_led_ramp+1
 15259  1FC4  357A               	lslf	led_ramp@i,w
 15260  1FC5  0008               	return
 15261  1FC6                     __end_ofPL102:	
 15262  1FC6                     PL130:	
 15263  1FC6  357A               	lslf	led_ramp@i,w
 15264  1FC7  3EDA               	addlw	(low (_current_bright| 0))& (0+255)
 15265  1FC8  0086               	movwf	6
 15266  1FC9  3004               	movlw	4
 15267  1FCA  0187               	clrf	7
 15268  1FCB  0008               	return
 15269  1FCC                     __end_ofPL130:	
 15270  1FCC                     __ptext94:	
 15271 ;; *************** function _led_touch_cb *****************
 15272 ;; Defined at:
 15273 ;;		line 997 in file "src/app_led.c"
 15274 ;; Parameters:    Size  Location     Type
 15275 ;;  key             1   11[COMMON] unsigned char 
 15276 ;;  state           1   12[COMMON] enum E8242
 15277 ;; Auto vars:     Size  Location     Type
 15278 ;;		None
 15279 ;; Return value:  Size  Location     Type
 15280 ;;                  1    wreg      void 
 15281 ;; Registers used:
 15282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15283 ;; Tracked objects:
 15284 ;;		On entry : 1F/2
 15285 ;;		On exit  : 1D/0
 15286 ;;		Unchanged: 0/0
 15287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15292 ;;Total ram usage:        2 bytes
 15293 ;; Hardware stack levels used:    1
 15294 ;; Hardware stack levels required when called:    3
 15295 ;; This function calls:
 15296 ;;		_led_state_ble_cb
 15297 ;;		_led_state_day_cb
 15298 ;;		_led_state_night_cb
 15299 ;;		_led_state_off_cb
 15300 ;; This function is called by:
 15301 ;;		_app_init
 15302 ;;		_key_action
 15303 ;; This function uses a non-reentrant model
 15304 ;;
 15305                           
 15306                           
 15307                           ;psect for function _led_touch_cb
 15308  1FCC                     _led_touch_cb:	
 15309                           
 15310                           ;app_led.c: 999: led_state_cb[m_led_para.mState](key, state);
 15311                           
 15312                           ;incstack = 0
 15313                           ; Regs used in _led_touch_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15314  1FCC  087B               	movf	led_touch_cb@key,w
 15315  1FCD  00F9               	movwf	led_state_ble_cb@key
 15316  1FCE  087C               	movf	led_touch_cb@state,w
 15317  1FCF  00FA               	movwf	led_state_ble_cb@state
 15318  1FD0  318B  2389  319F   	fcall	PL14	;call to abstracted procedure
 15319  1FD3  0709               	addwf	9,w
 15320  1FD4  3E47               	addlw	(low (_led_state_cb| (0+256)))& (0+255)
 15321  1FD5  27DB               	fcall	PL154	;call to abstracted procedure
 15322  1FD6  008A               	movwf	10
 15323  1FD7  3F40               	moviw [0]fsr1
 15324  1FD8  000A               	callw
 15325  1FD9  319F               	pagesel	$
 15326  1FDA  0008               	return
 15327  1FDB                     __end_of_led_touch_cb:	
 15328  1FDB                     PL154:	
 15329  1FDB  0086               	movwf	6
 15330  1FDC  3001               	movlw	1	; select bank2/3
 15331  1FDD  0087               	movwf	7
 15332  1FDE  3F41               	moviw [1]fsr1
 15333  1FDF  0008               	return
 15334  1FE0                     __end_ofPL154:	
 15335                           
 15336                           	psect	text86
 15337  1DE7                     __ptext86:	
 15338 ;; *************** function _pwm4_load_duty *****************
 15339 ;; Defined at:
 15340 ;;		line 84 in file "src/drv_pwm.c"
 15341 ;; Parameters:    Size  Location     Type
 15342 ;;  value           2    0[COMMON] unsigned int 
 15343 ;; Auto vars:     Size  Location     Type
 15344 ;;		None
 15345 ;; Return value:  Size  Location     Type
 15346 ;;                  1    wreg      void 
 15347 ;; Registers used:
 15348 ;;		wreg
 15349 ;; Tracked objects:
 15350 ;;		On entry : 10/0
 15351 ;;		On exit  : 1F/6
 15352 ;;		Unchanged: 0/0
 15353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15357 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15358 ;;Total ram usage:        2 bytes
 15359 ;; Hardware stack levels used:    1
 15360 ;; This function calls:
 15361 ;;		Nothing
 15362 ;; This function is called by:
 15363 ;;		_led_ramp
 15364 ;; This function uses a non-reentrant model
 15365 ;;
 15366                           
 15367                           
 15368                           ;psect for function _pwm4_load_duty
 15369  1DE7                     _pwm4_load_duty:	
 15370                           
 15371                           ;drv_pwm.c: 87: CCPR4H = value >> 8;
 15372                           
 15373                           ;incstack = 0
 15374                           ; Regs used in _pwm4_load_duty: [wreg]
 15375  1DE7  0871               	movf	pwm4_load_duty@value+1,w
 15376  1DE8  0026               	movlb	6	; select bank6
 15377  1DE9  0096               	movwf	22	;volatile
 15378                           
 15379                           ;drv_pwm.c: 88: CCPR4L = value;
 15380  1DEA  0870               	movf	pwm4_load_duty@value,w
 15381  1DEB  0095               	movwf	21	;volatile
 15382  1DEC  0008               	return
 15383  1DED                     __end_of_pwm4_load_duty:	
 15384                           
 15385                           	psect	text87
 15386  1DE1                     __ptext87:	
 15387 ;; *************** function _pwm3_load_duty *****************
 15388 ;; Defined at:
 15389 ;;		line 62 in file "src/drv_pwm.c"
 15390 ;; Parameters:    Size  Location     Type
 15391 ;;  value           2    0[COMMON] unsigned int 
 15392 ;; Auto vars:     Size  Location     Type
 15393 ;;		None
 15394 ;; Return value:  Size  Location     Type
 15395 ;;                  1    wreg      void 
 15396 ;; Registers used:
 15397 ;;		wreg
 15398 ;; Tracked objects:
 15399 ;;		On entry : 10/0
 15400 ;;		On exit  : 1F/6
 15401 ;;		Unchanged: 0/0
 15402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15407 ;;Total ram usage:        2 bytes
 15408 ;; Hardware stack levels used:    1
 15409 ;; This function calls:
 15410 ;;		Nothing
 15411 ;; This function is called by:
 15412 ;;		_led_ramp
 15413 ;; This function uses a non-reentrant model
 15414 ;;
 15415                           
 15416                           
 15417                           ;psect for function _pwm3_load_duty
 15418  1DE1                     _pwm3_load_duty:	
 15419                           
 15420                           ;drv_pwm.c: 65: CCPR3H = value >> 8;
 15421                           
 15422                           ;incstack = 0
 15423                           ; Regs used in _pwm3_load_duty: [wreg]
 15424  1DE1  0871               	movf	pwm3_load_duty@value+1,w
 15425  1DE2  0026               	movlb	6	; select bank6
 15426  1DE3  0092               	movwf	18	;volatile
 15427                           
 15428                           ;drv_pwm.c: 66: CCPR3L = value;
 15429  1DE4  0870               	movf	pwm3_load_duty@value,w
 15430  1DE5  0091               	movwf	17	;volatile
 15431  1DE6  0008               	return
 15432  1DE7                     __end_of_pwm3_load_duty:	
 15433                           
 15434                           	psect	text88
 15435  1DDB                     __ptext88:	
 15436 ;; *************** function _pwm2_load_duty *****************
 15437 ;; Defined at:
 15438 ;;		line 40 in file "src/drv_pwm.c"
 15439 ;; Parameters:    Size  Location     Type
 15440 ;;  value           2    0[COMMON] unsigned int 
 15441 ;; Auto vars:     Size  Location     Type
 15442 ;;		None
 15443 ;; Return value:  Size  Location     Type
 15444 ;;                  1    wreg      void 
 15445 ;; Registers used:
 15446 ;;		wreg
 15447 ;; Tracked objects:
 15448 ;;		On entry : 10/0
 15449 ;;		On exit  : 1F/5
 15450 ;;		Unchanged: 0/0
 15451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15455 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15456 ;;Total ram usage:        2 bytes
 15457 ;; Hardware stack levels used:    1
 15458 ;; This function calls:
 15459 ;;		Nothing
 15460 ;; This function is called by:
 15461 ;;		_led_ramp
 15462 ;; This function uses a non-reentrant model
 15463 ;;
 15464                           
 15465                           
 15466                           ;psect for function _pwm2_load_duty
 15467  1DDB                     _pwm2_load_duty:	
 15468                           
 15469                           ;drv_pwm.c: 43: CCPR2H = value >> 8;
 15470                           
 15471                           ;incstack = 0
 15472                           ; Regs used in _pwm2_load_duty: [wreg]
 15473  1DDB  0871               	movf	pwm2_load_duty@value+1,w
 15474  1DDC  0025               	movlb	5	; select bank5
 15475  1DDD  0096               	movwf	22	;volatile
 15476                           
 15477                           ;drv_pwm.c: 44: CCPR2L = value;
 15478  1DDE  0870               	movf	pwm2_load_duty@value,w
 15479  1DDF  0095               	movwf	21	;volatile
 15480  1DE0  0008               	return
 15481  1DE1                     __end_of_pwm2_load_duty:	
 15482                           
 15483                           	psect	text89
 15484  1DD5                     __ptext89:	
 15485 ;; *************** function _pwm1_load_duty *****************
 15486 ;; Defined at:
 15487 ;;		line 18 in file "src/drv_pwm.c"
 15488 ;; Parameters:    Size  Location     Type
 15489 ;;  value           2    0[COMMON] unsigned int 
 15490 ;; Auto vars:     Size  Location     Type
 15491 ;;		None
 15492 ;; Return value:  Size  Location     Type
 15493 ;;                  1    wreg      void 
 15494 ;; Registers used:
 15495 ;;		wreg
 15496 ;; Tracked objects:
 15497 ;;		On entry : 10/0
 15498 ;;		On exit  : 1F/5
 15499 ;;		Unchanged: 0/0
 15500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15505 ;;Total ram usage:        2 bytes
 15506 ;; Hardware stack levels used:    1
 15507 ;; This function calls:
 15508 ;;		Nothing
 15509 ;; This function is called by:
 15510 ;;		_led_ramp
 15511 ;; This function uses a non-reentrant model
 15512 ;;
 15513                           
 15514                           
 15515                           ;psect for function _pwm1_load_duty
 15516  1DD5                     _pwm1_load_duty:	
 15517                           
 15518                           ;drv_pwm.c: 21: CCPR1H = value>>8;
 15519                           
 15520                           ;incstack = 0
 15521                           ; Regs used in _pwm1_load_duty: [wreg]
 15522  1DD5  0871               	movf	pwm1_load_duty@value+1,w
 15523  1DD6  0025               	movlb	5	; select bank5
 15524  1DD7  0092               	movwf	18	;volatile
 15525                           
 15526                           ;drv_pwm.c: 22: CCPR1L = value;
 15527  1DD8  0870               	movf	pwm1_load_duty@value,w
 15528  1DD9  0091               	movwf	17	;volatile
 15529  1DDA  0008               	return
 15530  1DDB                     __end_of_pwm1_load_duty:	
 15531                           
 15532                           	psect	text90
 15533  1E2A                     __ptext90:	
 15534 ;; *************** function _pwm5_load_duty *****************
 15535 ;; Defined at:
 15536 ;;		line 99 in file "src/drv_pwm.c"
 15537 ;; Parameters:    Size  Location     Type
 15538 ;;  value           2    0[COMMON] unsigned int 
 15539 ;; Auto vars:     Size  Location     Type
 15540 ;;		None
 15541 ;; Return value:  Size  Location     Type
 15542 ;;                  1    wreg      void 
 15543 ;; Registers used:
 15544 ;;		wreg, status,2, status,0
 15545 ;; Tracked objects:
 15546 ;;		On entry : 10/0
 15547 ;;		On exit  : 1F/C
 15548 ;;		Unchanged: 0/0
 15549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15553 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15554 ;;Total ram usage:        4 bytes
 15555 ;; Hardware stack levels used:    1
 15556 ;; This function calls:
 15557 ;;		Nothing
 15558 ;; This function is called by:
 15559 ;;		_led_ramp
 15560 ;; This function uses a non-reentrant model
 15561 ;;
 15562                           
 15563                           
 15564                           ;psect for function _pwm5_load_duty
 15565  1E2A                     _pwm5_load_duty:	
 15566                           
 15567                           ;drv_pwm.c: 102: PWM5DCH = value >> 2;
 15568                           
 15569                           ;incstack = 0
 15570                           ; Regs used in _pwm5_load_duty: [wreg+status,2+status,0]
 15571  1E2A  0871               	movf	pwm5_load_duty@value+1,w
 15572  1E2B  00F3               	movwf	??_pwm5_load_duty+1
 15573  1E2C  0870               	movf	pwm5_load_duty@value,w
 15574  1E2D  00F2               	movwf	??_pwm5_load_duty
 15575  1E2E  36F3               	lsrf	??_pwm5_load_duty+1,f
 15576  1E2F  0CF2               	rrf	??_pwm5_load_duty,f
 15577  1E30  36F3               	lsrf	??_pwm5_load_duty+1,f
 15578  1E31  0CF2               	rrf	??_pwm5_load_duty,f
 15579  1E32  0872               	movf	??_pwm5_load_duty,w
 15580  1E33  002C               	movlb	12	; select bank12
 15581  1E34  0098               	movwf	24	;volatile
 15582                           
 15583                           ;drv_pwm.c: 103: PWM5DCL = value << 6;
 15584  1E35  0870               	movf	pwm5_load_duty@value,w
 15585  1E36  00F2               	movwf	??_pwm5_load_duty
 15586  1E37  0CF2               	rrf	??_pwm5_load_duty,f
 15587  1E38  0CF2               	rrf	??_pwm5_load_duty,f
 15588  1E39  0C72               	rrf	??_pwm5_load_duty,w
 15589  1E3A  39C0               	andlw	192
 15590  1E3B  0097               	movwf	23	;volatile
 15591  1E3C  0008               	return
 15592  1E3D                     __end_of_pwm5_load_duty:	
 15593                           
 15594                           	psect	text96
 15595  0C0B                     __ptext96:	
 15596 ;; *************** function _led_state_night_cb *****************
 15597 ;; Defined at:
 15598 ;;		line 935 in file "src/app_led.c"
 15599 ;; Parameters:    Size  Location     Type
 15600 ;;  key             1    9[COMMON] unsigned char 
 15601 ;;  state           1   10[COMMON] enum E8242
 15602 ;; Auto vars:     Size  Location     Type
 15603 ;;		None
 15604 ;; Return value:  Size  Location     Type
 15605 ;;                  1    wreg      void 
 15606 ;; Registers used:
 15607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15608 ;; Tracked objects:
 15609 ;;		On entry : 1F/2
 15610 ;;		On exit  : 1D/0
 15611 ;;		Unchanged: 0/0
 15612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15616 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15617 ;;Total ram usage:        2 bytes
 15618 ;; Hardware stack levels used:    1
 15619 ;; Hardware stack levels required when called:    2
 15620 ;; This function calls:
 15621 ;;		_led_state_night_cont_press_cb
 15622 ;;		_led_state_night_long_press_cb
 15623 ;;		_led_state_night_release_cb
 15624 ;;		_led_state_night_short_press_cb
 15625 ;; This function is called by:
 15626 ;;		_led_touch_cb
 15627 ;; This function uses a non-reentrant model
 15628 ;;
 15629                           
 15630                           
 15631                           ;psect for function _led_state_night_cb
 15632  0C0B                     _led_state_night_cb:	
 15633                           
 15634                           ;app_led.c: 937: if(key == 0x01)
 15635                           
 15636                           ;incstack = 0
 15637                           ; Regs used in _led_state_night_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15638  0C0B  0B79               	decfsz	led_state_night_cb@key,w
 15639  0C0C  0008               	return
 15640  0C0D  087A               	movf	led_state_night_cb@state,w
 15641                           
 15642                           ; Switch size 1, requested type "space"
 15643                           ; Number of cases is 4, Range of values is 0 to 3
 15644                           ; switch strategies available:
 15645                           ; Name         Instructions Cycles
 15646                           ; simple_byte           13     7 (average)
 15647                           ; direct_byte           14     6 (fixed)
 15648                           ; jumptable            260     6 (fixed)
 15649                           ;	Chosen strategy is simple_byte
 15650  0C0E  3A00               	xorlw	0	; case 0
 15651  0C0F  1903               	skipnz
 15652  0C10  2C1B               	goto	i1l3911
 15653  0C11  3A01               	xorlw	1	; case 1
 15654  0C12  1903               	skipnz
 15655  0C13  2C1D               	goto	i1l3913
 15656  0C14  3A03               	xorlw	3	; case 2
 15657  0C15  1903               	skipnz
 15658  0C16  2C1E               	goto	i1l3915
 15659  0C17  3A01               	xorlw	1	; case 3
 15660  0C18  1903               	skipnz
 15661  0C19  2C20               	goto	i1l3917
 15662  0C1A  2C21               	goto	i1l845
 15663  0C1B                     i1l3911:	
 15664                           
 15665                           ;app_led.c: 942: led_state_night_short_press_cb();
 15666  0C1B  318A  2A1E         	ljmp	i1l3845
 15667  0C1D                     i1l3913:	
 15668                           ;app_led.c: 943: break;
 15669                           
 15670                           
 15671                           ;app_led.c: 945: led_state_night_long_press_cb();
 15672  0C1D  2C23               	ljmp	i1l3735
 15673  0C1E                     i1l3915:	
 15674                           ;app_led.c: 946: break;
 15675                           
 15676                           
 15677                           ;app_led.c: 948: led_state_night_cont_press_cb();
 15678  0C1E  318A  2A52         	ljmp	i1l3857
 15679  0C20                     i1l3917:	
 15680                           ;app_led.c: 949: break;
 15681                           
 15682                           
 15683                           ;app_led.c: 951: led_state_night_release_cb();
 15684  0C20  2C43               	ljmp	i1l3865
 15685  0C21                     i1l845:	
 15686  0C21  0008               	return
 15687  0C22                     __end_of_led_state_night_cb:	
 15688  0C22                     __ptext107:	
 15689 ;; *************** function _led_state_night_long_press_cb *****************
 15690 ;; Defined at:
 15691 ;;		line 912 in file "src/app_led.c"
 15692 ;; Parameters:    Size  Location     Type
 15693 ;;		None
 15694 ;; Auto vars:     Size  Location     Type
 15695 ;;		None
 15696 ;; Return value:  Size  Location     Type
 15697 ;;                  1    wreg      void 
 15698 ;; Registers used:
 15699 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15700 ;; Tracked objects:
 15701 ;;		On entry : 1F/2
 15702 ;;		On exit  : 1D/0
 15703 ;;		Unchanged: 0/0
 15704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15709 ;;Total ram usage:        0 bytes
 15710 ;; Hardware stack levels used:    1
 15711 ;; Hardware stack levels required when called:    1
 15712 ;; This function calls:
 15713 ;;		_led_update_night_status
 15714 ;; This function is called by:
 15715 ;;		_led_state_night_cb
 15716 ;; This function uses a non-reentrant model
 15717 ;;
 15718                           
 15719                           
 15720                           ;psect for function _led_state_night_long_press_cb
 15721  0C22                     _led_state_night_long_press_cb:	
 15722                           
 15723                           ;app_led.c: 914: led_update_night_status();
 15724                           
 15725                           ;incstack = 0
 15726                           ; Regs used in _led_state_night_long_press_cb: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
 15727  0C22  2C23               	ljmp	i1l3735
 15728  0C23                     __end_of_led_state_night_long_press_cb:	
 15729  0C23                     __ptext108:	
 15730 ;; *************** function _led_update_night_status *****************
 15731 ;; Defined at:
 15732 ;;		line 779 in file "src/app_led.c"
 15733 ;; Parameters:    Size  Location     Type
 15734 ;;		None
 15735 ;; Auto vars:     Size  Location     Type
 15736 ;;		None
 15737 ;; Return value:  Size  Location     Type
 15738 ;;                  1    wreg      void 
 15739 ;; Registers used:
 15740 ;;		wreg, fsr1l, fsr1h
 15741 ;; Tracked objects:
 15742 ;;		On entry : 1F/2
 15743 ;;		On exit  : 1D/0
 15744 ;;		Unchanged: 0/0
 15745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15748 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15749 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15750 ;;Total ram usage:        2 bytes
 15751 ;; Hardware stack levels used:    1
 15752 ;; This function calls:
 15753 ;;		Nothing
 15754 ;; This function is called by:
 15755 ;;		_led_state_night_long_press_cb
 15756 ;; This function uses a non-reentrant model
 15757 ;;
 15758                           
 15759                           
 15760                           ;psect for function _led_update_night_status
 15761  0C23                     _led_update_night_status:	
 15762  0C23                     i1l3735:	
 15763                           ;incstack = 0
 15764                           ; Regs used in _led_update_night_status: [wregfsr1]
 15765                           
 15766                           
 15767                           ;app_led.c: 781: if(m_led_para.blue_bright > 1000 - 200)
 15768  0C23  26C1  318C         	fcall	PL22	;call to abstracted procedure
 15769  0C25  3F40               	moviw [0]fsr1
 15770  0C26  00F0               	movwf	??_led_update_night_status
 15771  0C27  3F41               	moviw [1]fsr1
 15772  0C28  00F1               	movwf	??_led_update_night_status+1
 15773  0C29  3003               	movlw	3
 15774  0C2A  0271               	subwf	??_led_update_night_status+1,w
 15775  0C2B  3021               	movlw	33
 15776  0C2C  1903               	skipnz
 15777  0C2D  0270               	subwf	??_led_update_night_status,w
 15778  0C2E  1C03               	skipc
 15779  0C2F  2C33               	goto	i1l3739
 15780                           
 15781                           ;app_led.c: 782: {
 15782                           ;app_led.c: 783: led_run_para.mNr = 0;
 15783  0C30  0020               	movlb	0	; select bank0
 15784  0C31  125C               	bcf	_led_run_para,4
 15785                           
 15786                           ;app_led.c: 784: }
 15787  0C32  0008               	return
 15788  0C33                     i1l3739:	
 15789                           
 15790                           ;app_led.c: 785: else if(m_led_para.blue_bright < 200)
 15791  0C33  26C1  318C         	fcall	PL22	;call to abstracted procedure
 15792  0C35  3F40               	moviw [0]fsr1
 15793  0C36  00F0               	movwf	??_led_update_night_status
 15794  0C37  3F41               	moviw [1]fsr1
 15795  0C38  00F1               	movwf	??_led_update_night_status+1
 15796  0C39  3000               	movlw	0
 15797  0C3A  0271               	subwf	??_led_update_night_status+1,w
 15798  0C3B  30C8               	movlw	200
 15799  0C3C  1903               	skipnz
 15800  0C3D  0270               	subwf	??_led_update_night_status,w
 15801  0C3E  1803               	skipnc
 15802  0C3F  0008               	return
 15803                           
 15804                           ;app_led.c: 786: {
 15805                           ;app_led.c: 787: led_run_para.mNr = 1;
 15806  0C40  0020               	movlb	0	; select bank0
 15807  0C41  165C               	bsf	_led_run_para,4
 15808  0C42  0008               	return
 15809  0C43                     __end_of_led_update_night_status:	
 15810  0C43                     __ptext106:	
 15811 ;; *************** function _led_state_night_release_cb *****************
 15812 ;; Defined at:
 15813 ;;		line 930 in file "src/app_led.c"
 15814 ;; Parameters:    Size  Location     Type
 15815 ;;		None
 15816 ;; Auto vars:     Size  Location     Type
 15817 ;;		None
 15818 ;; Return value:  Size  Location     Type
 15819 ;;                  1    wreg      void 
 15820 ;; Registers used:
 15821 ;;		wreg, status,2, status,0, pclath, cstack
 15822 ;; Tracked objects:
 15823 ;;		On entry : 1F/2
 15824 ;;		On exit  : 1F/0
 15825 ;;		Unchanged: 0/0
 15826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15831 ;;Total ram usage:        0 bytes
 15832 ;; Hardware stack levels used:    1
 15833 ;; Hardware stack levels required when called:    1
 15834 ;; This function calls:
 15835 ;;		i1_led_prepare_to_save
 15836 ;; This function is called by:
 15837 ;;		_led_state_night_cb
 15838 ;; This function uses a non-reentrant model
 15839 ;;
 15840                           
 15841                           
 15842                           ;psect for function _led_state_night_release_cb
 15843  0C43                     _led_state_night_release_cb:	
 15844  0C43                     i1l3865:	
 15845                           ;incstack = 0
 15846                           ; Regs used in _led_state_night_release_cb: [wreg+status,2+status,0+pclath+cstack]
 15847                           
 15848                           
 15849                           ;app_led.c: 932: led_prepare_to_save();
 15850  0C43  318B  2358         	fcall	i1_led_prepare_to_save
 15851  0C45  0008               	return
 15852  0C46                     __end_of_led_state_night_release_cb:	
 15853  0C46                     __ptext20:	
 15854 ;; *************** function _led_para_init *****************
 15855 ;; Defined at:
 15856 ;;		line 236 in file "src/app_led.c"
 15857 ;; Parameters:    Size  Location     Type
 15858 ;;		None
 15859 ;; Auto vars:     Size  Location     Type
 15860 ;;  i               1   31[BANK0 ] unsigned char 
 15861 ;;  j               1   30[BANK0 ] unsigned char 
 15862 ;; Return value:  Size  Location     Type
 15863 ;;                  1    wreg      void 
 15864 ;; Registers used:
 15865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15866 ;; Tracked objects:
 15867 ;;		On entry : 1F/0
 15868 ;;		On exit  : 1D/0
 15869 ;;		Unchanged: 0/0
 15870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15872 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15873 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15874 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15875 ;;Total ram usage:       10 bytes
 15876 ;; Hardware stack levels used:    1
 15877 ;; Hardware stack levels required when called:   11
 15878 ;; This function calls:
 15879 ;;		___wmul
 15880 ;;		_eeprom_read_buffer
 15881 ;;		_led_indicate_ble
 15882 ;;		_led_indicate_day
 15883 ;;		_led_indicate_night
 15884 ;;		_led_indicate_off
 15885 ;;		_led_para_default
 15886 ;;		_led_turnoff
 15887 ;;		_led_turnoff_ramp
 15888 ;;		_led_turnon_ramp
 15889 ;;		_led_update_day_bright
 15890 ;;		_led_update_night_bright
 15891 ;; This function is called by:
 15892 ;;		_led_init
 15893 ;; This function uses a non-reentrant model
 15894 ;;
 15895                           
 15896                           
 15897                           ;psect for function _led_para_init
 15898  0C46                     _led_para_init:	
 15899  0C46                     l6287:	
 15900                           ;incstack = 0
 15901                           ; Regs used in _led_para_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15902                           
 15903                           
 15904                           ;app_led.c: 238: uint8_t i, j;
 15905                           ;app_led.c: 239: eeprom_read_buffer(0x10, (uint8_t *) & m_led_para, sizeof(m_led_para));
 15906  0C46  306D               	movlw	109
 15907  0C47  00A3               	movwf	eeprom_read_buffer@pbuf
 15908  0C48  3023               	movlw	35
 15909  0C49  00A4               	movwf	eeprom_read_buffer@pbuf+1
 15910  0C4A  3083               	movlw	131
 15911  0C4B  00A5               	movwf	eeprom_read_buffer@len
 15912  0C4C  3010               	movlw	16
 15913  0C4D  2611  318C         	fcall	_eeprom_read_buffer
 15914                           
 15915                           ;app_led.c: 240: if(m_led_para.save_flag != 0x55)
 15916  0C4F  2756  318C         	fcall	PL136	;call to abstracted procedure
 15917  0C51  0601               	xorwf	1,w
 15918  0C52  1903               	btfsc	3,2
 15919  0C53  2C57               	goto	l6293
 15920                           
 15921                           ;app_led.c: 241: {
 15922                           ;app_led.c: 242: led_para_default();
 15923  0C54  3186  262E  318C   	fcall	_led_para_default
 15924  0C57                     l6293:	
 15925                           
 15926                           ;app_led.c: 243: }
 15927                           ;app_led.c: 247: if(m_led_para.last_mode != 1 && m_led_para.last_mode != 2)
 15928  0C57  306D               	movlw	109
 15929  0C58  0086               	movwf	6
 15930  0C59  3023               	movlw	35
 15931  0C5A  0087               	movwf	7
 15932  0C5B  3141               	addfsr 1,1
 15933  0C5C  0C01               	rrf	1,w
 15934  0C5D  0C89               	rrf	9,f
 15935  0C5E  3903               	andlw	3
 15936  0C5F  3A01               	xorlw	1
 15937  0C60  2751  318C         	fcall	PL124	;call to abstracted procedure
 15938  0C62  1903               	skipnz
 15939  0C63  2C6E               	goto	L11
 15940                           
 15941                           ;app_led.c: 248: {
 15942                           ;app_led.c: 249: m_led_para.last_mode = 1;
 15943  0C64  318B  23A3  318C   	fcall	PL76	;call to abstracted procedure
 15944  0C67  1903               	skipnz
 15945  0C68  2C6E               	goto	L11
 15946  0C69  3187  272F  318C   	fcall	PL146	;call to abstracted procedure
 15947                           
 15948                           ;app_led.c: 250: }
 15949                           ;app_led.c: 251: if(m_led_para.all_bright > 1000)
 15950  0C6C  2751  318C         	fcall	PL124	;call to abstracted procedure
 15951  0C6E                     L11:	
 15952  0C6E  3142               	addfsr 1,2
 15953  0C6F  2728  318C         	fcall	PL98	;call to abstracted procedure
 15954  0C71  1903               	skipnz
 15955  0C72  0236               	subwf	??_led_para_init,w
 15956  0C73  1C03               	skipc
 15957  0C74  2C7A               	goto	l600
 15958                           
 15959                           ;app_led.c: 252: {
 15960                           ;app_led.c: 253: m_led_para.all_bright = 1000;
 15961  0C75  2723               	fcall	PL96	;call to abstracted procedure
 15962  0C76  318B  2391  318C   	fcall	PL32	;call to abstracted procedure
 15963  0C79  274C               	fcall	PL122	;call to abstracted procedure
 15964  0C7A                     l600:	
 15965                           
 15966                           ;app_led.c: 254: }
 15967                           ;app_led.c: 255: if(m_led_para.all_bright < 10)
 15968  0C7A  318B  2391  318C   	fcall	PL32	;call to abstracted procedure
 15969  0C7D  272F  318C         	fcall	PL104	;call to abstracted procedure
 15970  0C7F  1903               	skipnz
 15971  0C80  0236               	subwf	??_led_para_init,w
 15972  0C81  1803               	skipnc
 15973  0C82  2C88               	goto	l601
 15974                           
 15975                           ;app_led.c: 256: {
 15976                           ;app_led.c: 257: m_led_para.all_bright = 10;
 15977  0C83  2736  318C         	fcall	PL106	;call to abstracted procedure
 15978  0C85  3142               	addfsr 1,2
 15979  0C86  274C  318C         	fcall	PL122	;call to abstracted procedure
 15980  0C88                     l601:	
 15981                           
 15982                           ;app_led.c: 258: }
 15983                           ;app_led.c: 259: if(m_led_para.blue_bright > 1000)
 15984  0C88  26C1  318C         	fcall	PL22	;call to abstracted procedure
 15985  0C8A  2728  318C         	fcall	PL98	;call to abstracted procedure
 15986  0C8C  1903               	skipnz
 15987  0C8D  0236               	subwf	??_led_para_init,w
 15988  0C8E  1C03               	skipc
 15989  0C8F  2C96               	goto	l602
 15990                           
 15991                           ;app_led.c: 260: {
 15992                           ;app_led.c: 261: m_led_para.blue_bright = 1000;
 15993  0C90  2723  318C         	fcall	PL96	;call to abstracted procedure
 15994  0C92  26C1  318C         	fcall	PL22	;call to abstracted procedure
 15995  0C94  274C  318C         	fcall	PL122	;call to abstracted procedure
 15996  0C96                     l602:	
 15997                           
 15998                           ;app_led.c: 262: }
 15999                           ;app_led.c: 263: if(m_led_para.blue_bright < 10)
 16000  0C96  26C1  318C         	fcall	PL22	;call to abstracted procedure
 16001  0C98  272F  318C         	fcall	PL104	;call to abstracted procedure
 16002  0C9A  1903               	skipnz
 16003  0C9B  0236               	subwf	??_led_para_init,w
 16004  0C9C  1803               	skipnc
 16005  0C9D  2CA3               	goto	l6309
 16006                           
 16007                           ;app_led.c: 264: {
 16008                           ;app_led.c: 265: m_led_para.blue_bright = 10;
 16009  0C9E  2736  318C         	fcall	PL106	;call to abstracted procedure
 16010  0CA0  3144               	addfsr 1,4
 16011  0CA1  274C  318C         	fcall	PL122	;call to abstracted procedure
 16012  0CA3                     l6309:	
 16013                           
 16014                           ;app_led.c: 266: }
 16015                           ;app_led.c: 269: if(m_led_para.ble_para.mMode > 2)
 16016  0CA3  26AD  318C         	fcall	PL10	;call to abstracted procedure
 16017  0CA5  3A03               	xorlw	3
 16018  0CA6  1D03               	skipz
 16019  0CA7  2CAF               	goto	l6313
 16020                           
 16021                           ;app_led.c: 270: {
 16022                           ;app_led.c: 271: m_led_para.ble_para.mMode = 0;
 16023  0CA8  306D               	movlw	109
 16024  0CA9  0086               	movwf	6
 16025  0CAA  3023               	movlw	35
 16026  0CAB  0087               	movwf	7
 16027  0CAC  30FC               	movlw	-4
 16028  0CAD  3146               	addfsr 1,6
 16029  0CAE  0581               	andwf	1,f
 16030  0CAF                     l6313:	
 16031                           
 16032                           ;app_led.c: 272: }
 16033                           ;app_led.c: 275: for(i = 0; i < 5; i++)
 16034  0CAF  01BF               	clrf	led_para_init@i
 16035  0CB0                     l6319:	
 16036                           
 16037                           ;app_led.c: 276: {
 16038                           ;app_led.c: 277: if(m_led_para.ble_para.manual_para.mBright[i] > 1000)
 16039  0CB0  083F               	movf	led_para_init@i,w
 16040  0CB1  00B6               	movwf	??_led_para_init
 16041  0CB2  3076               	movlw	118
 16042  0CB3  01B7               	clrf	??_led_para_init+1
 16043  0CB4  35B6               	lslf	??_led_para_init,f
 16044  0CB5  0DB7               	rlf	??_led_para_init+1,f
 16045  0CB6  00B8               	movwf	??_led_para_init+2
 16046  0CB7  26E7  318C         	fcall	PL54	;call to abstracted procedure
 16047  0CB9  3F40               	moviw [0]fsr1
 16048  0CBA  00BA               	movwf	??_led_para_init+4
 16049  0CBB  3F41               	moviw [1]fsr1
 16050  0CBC  00BB               	movwf	??_led_para_init+5
 16051  0CBD  3003               	movlw	3
 16052  0CBE  023B               	subwf	??_led_para_init+5,w
 16053  0CBF  30E9               	movlw	233
 16054  0CC0  1903               	skipnz
 16055  0CC1  023A               	subwf	??_led_para_init+4,w
 16056  0CC2  1C03               	skipc
 16057  0CC3  2CD9               	goto	l6323
 16058                           
 16059                           ;app_led.c: 278: {
 16060                           ;app_led.c: 279: m_led_para.ble_para.manual_para.mBright[i] = 1000;
 16061  0CC4  30E8               	movlw	232
 16062  0CC5  00B6               	movwf	??_led_para_init
 16063  0CC6  3003               	movlw	3
 16064  0CC7  00B7               	movwf	??_led_para_init+1
 16065  0CC8  083F               	movf	led_para_init@i,w
 16066  0CC9  00B8               	movwf	??_led_para_init+2
 16067  0CCA  3076               	movlw	118
 16068  0CCB  01B9               	clrf	??_led_para_init+3
 16069  0CCC  35B8               	lslf	??_led_para_init+2,f
 16070  0CCD  0DB9               	rlf	??_led_para_init+3,f
 16071  0CCE  00BA               	movwf	??_led_para_init+4
 16072  0CCF  3023               	movlw	35
 16073  0CD0  00BB               	movwf	??_led_para_init+5
 16074  0CD1  0838               	movf	??_led_para_init+2,w
 16075  0CD2  073A               	addwf	??_led_para_init+4,w
 16076  0CD3  0086               	movwf	6
 16077  0CD4  0839               	movf	??_led_para_init+3,w
 16078  0CD5  3D3B               	addwfc	??_led_para_init+5,w
 16079  0CD6  0087               	movwf	7
 16080  0CD7  274C  318C         	fcall	PL122	;call to abstracted procedure
 16081  0CD9                     l6323:	
 16082                           
 16083                           ;app_led.c: 280: }
 16084                           ;app_led.c: 281: for(j = 0; j < 4; j++)
 16085  0CD9  01BE               	clrf	led_para_init@j
 16086  0CDA                     l6329:	
 16087                           
 16088                           ;app_led.c: 282: {
 16089                           ;app_led.c: 283: if(m_led_para.ble_para.manual_para.mCustomBright[j][i] > 100)
 16090  0CDA  2719               	fcall	PL78	;call to abstracted procedure
 16091  0CDB  3196  26BE  318C   	fcall	___wmul
 16092  0CDE  3080               	movlw	128
 16093  0CDF  26B5  318C         	fcall	PL20	;call to abstracted procedure
 16094  0CE1  2745  318C         	fcall	PL120	;call to abstracted procedure
 16095  0CE3  1C03               	skipc
 16096  0CE4  2CEE               	goto	l6333
 16097                           
 16098                           ;app_led.c: 284: {
 16099                           ;app_led.c: 285: m_led_para.ble_para.manual_para.mCustomBright[j][i] = 100;
 16100  0CE5  2719               	fcall	PL78	;call to abstracted procedure
 16101  0CE6  3196  26BE  318C   	fcall	___wmul
 16102  0CE9  3080               	movlw	128
 16103  0CEA  26B5  318C         	fcall	PL20	;call to abstracted procedure
 16104  0CEC  26FC  318C         	fcall	PL64	;call to abstracted procedure
 16105  0CEE                     l6333:	
 16106  0CEE  3004               	movlw	4
 16107  0CEF  0ABE               	incf	led_para_init@j,f
 16108  0CF0  023E               	subwf	led_para_init@j,w
 16109  0CF1  1C03               	skipc
 16110  0CF2  2CDA               	goto	l6329
 16111  0CF3  3005               	movlw	5
 16112  0CF4  0ABF               	incf	led_para_init@i,f
 16113  0CF5  023F               	subwf	led_para_init@i,w
 16114  0CF6  1C03               	skipc
 16115  0CF7  2CB0               	goto	l6319
 16116                           
 16117                           ;app_led.c: 286: }
 16118                           ;app_led.c: 287: }
 16119                           ;app_led.c: 288: }
 16120                           ;app_led.c: 291: if(m_led_para.ble_para.auto_para.sunrise_start_hour > 23)
 16121  0CF8  3094               	movlw	148
 16122  0CF9  2707  318C         	fcall	PL68	;call to abstracted procedure
 16123  0CFB  1C03               	skipc
 16124  0CFC  2D00               	goto	l611
 16125                           
 16126                           ;app_led.c: 292: {
 16127                           ;app_led.c: 293: m_led_para.ble_para.auto_para.sunrise_start_hour = 0;
 16128  0CFD  3094               	movlw	148
 16129  0CFE  0086               	movwf	6
 16130  0CFF  0181               	clrf	1
 16131  0D00                     l611:	
 16132                           
 16133                           ;app_led.c: 294: }
 16134                           ;app_led.c: 295: if(m_led_para.ble_para.auto_para.sunrise_start_minute > 59)
 16135  0D00  3095               	movlw	149
 16136  0D01  270D  318C         	fcall	PL70	;call to abstracted procedure
 16137  0D03  1C03               	skipc
 16138  0D04  2D08               	goto	l612
 16139                           
 16140                           ;app_led.c: 296: {
 16141                           ;app_led.c: 297: m_led_para.ble_para.auto_para.sunrise_start_minute = 0;
 16142  0D05  3095               	movlw	149
 16143  0D06  0086               	movwf	6
 16144  0D07  0181               	clrf	1
 16145  0D08                     l612:	
 16146                           
 16147                           ;app_led.c: 298: }
 16148                           ;app_led.c: 299: if(m_led_para.ble_para.auto_para.sunrise_end_hour > 23)
 16149  0D08  3096               	movlw	150
 16150  0D09  2707  318C         	fcall	PL68	;call to abstracted procedure
 16151  0D0B  1C03               	skipc
 16152  0D0C  2D10               	goto	l613
 16153                           
 16154                           ;app_led.c: 300: {
 16155                           ;app_led.c: 301: m_led_para.ble_para.auto_para.sunrise_end_hour = 0;
 16156  0D0D  3096               	movlw	150
 16157  0D0E  0086               	movwf	6
 16158  0D0F  0181               	clrf	1
 16159  0D10                     l613:	
 16160                           
 16161                           ;app_led.c: 302: }
 16162                           ;app_led.c: 303: if(m_led_para.ble_para.auto_para.sunrise_end_minute > 59)
 16163  0D10  3097               	movlw	151
 16164  0D11  270D  318C         	fcall	PL70	;call to abstracted procedure
 16165  0D13  1C03               	skipc
 16166  0D14  2D18               	goto	l614
 16167                           
 16168                           ;app_led.c: 304: {
 16169                           ;app_led.c: 305: m_led_para.ble_para.auto_para.sunrise_end_minute = 0;
 16170  0D15  3097               	movlw	151
 16171  0D16  0086               	movwf	6
 16172  0D17  0181               	clrf	1
 16173  0D18                     l614:	
 16174                           
 16175                           ;app_led.c: 306: }
 16176                           ;app_led.c: 307: if(m_led_para.ble_para.auto_para.sunset_start_hour > 23)
 16177  0D18  309D               	movlw	157
 16178  0D19  2707  318C         	fcall	PL68	;call to abstracted procedure
 16179  0D1B  1C03               	skipc
 16180  0D1C  2D20               	goto	l615
 16181                           
 16182                           ;app_led.c: 308: {
 16183                           ;app_led.c: 309: m_led_para.ble_para.auto_para.sunset_start_hour = 0;
 16184  0D1D  309D               	movlw	157
 16185  0D1E  0086               	movwf	6
 16186  0D1F  0181               	clrf	1
 16187  0D20                     l615:	
 16188                           
 16189                           ;app_led.c: 310: }
 16190                           ;app_led.c: 311: if(m_led_para.ble_para.auto_para.sunset_start_minute > 59)
 16191  0D20  309E               	movlw	158
 16192  0D21  270D  318C         	fcall	PL70	;call to abstracted procedure
 16193  0D23  1C03               	skipc
 16194  0D24  2D28               	goto	l616
 16195                           
 16196                           ;app_led.c: 312: {
 16197                           ;app_led.c: 313: m_led_para.ble_para.auto_para.sunset_start_minute = 0;
 16198  0D25  309E               	movlw	158
 16199  0D26  0086               	movwf	6
 16200  0D27  0181               	clrf	1
 16201  0D28                     l616:	
 16202                           
 16203                           ;app_led.c: 314: }
 16204                           ;app_led.c: 315: if(m_led_para.ble_para.auto_para.sunset_end_hour > 23)
 16205  0D28  309F               	movlw	159
 16206  0D29  2707  318C         	fcall	PL68	;call to abstracted procedure
 16207  0D2B  1C03               	skipc
 16208  0D2C  2D30               	goto	l617
 16209                           
 16210                           ;app_led.c: 316: {
 16211                           ;app_led.c: 317: m_led_para.ble_para.auto_para.sunset_end_hour = 0;
 16212  0D2D  309F               	movlw	159
 16213  0D2E  0086               	movwf	6
 16214  0D2F  0181               	clrf	1
 16215  0D30                     l617:	
 16216                           
 16217                           ;app_led.c: 318: }
 16218                           ;app_led.c: 319: if(m_led_para.ble_para.auto_para.sunset_end_minute > 59)
 16219  0D30  30A0               	movlw	160
 16220  0D31  270D  318C         	fcall	PL70	;call to abstracted procedure
 16221  0D33  1C03               	skipc
 16222  0D34  2D38               	goto	l618
 16223                           
 16224                           ;app_led.c: 320: {
 16225                           ;app_led.c: 321: m_led_para.ble_para.auto_para.sunset_end_minute = 0;
 16226  0D35  30A0               	movlw	160
 16227  0D36  0086               	movwf	6
 16228  0D37  0181               	clrf	1
 16229  0D38                     l618:	
 16230                           
 16231                           ;app_led.c: 322: }
 16232                           ;app_led.c: 323: if(m_led_para.ble_para.auto_para.turnoff_hour > 23)
 16233  0D38  30A7               	movlw	167
 16234  0D39  2707  318C         	fcall	PL68	;call to abstracted procedure
 16235  0D3B  1C03               	skipc
 16236  0D3C  2D40               	goto	l619
 16237                           
 16238                           ;app_led.c: 324: {
 16239                           ;app_led.c: 325: m_led_para.ble_para.auto_para.turnoff_hour = 0;
 16240  0D3D  30A7               	movlw	167
 16241  0D3E  0086               	movwf	6
 16242  0D3F  0181               	clrf	1
 16243  0D40                     l619:	
 16244                           
 16245                           ;app_led.c: 326: }
 16246                           ;app_led.c: 327: if(m_led_para.ble_para.auto_para.turnoff_minute > 59)
 16247  0D40  30A8               	movlw	168
 16248  0D41  270D  318C         	fcall	PL70	;call to abstracted procedure
 16249  0D43  1C03               	skipc
 16250  0D44  2D48               	goto	l6363
 16251                           
 16252                           ;app_led.c: 328: {
 16253                           ;app_led.c: 329: m_led_para.ble_para.auto_para.turnoff_minute = 0;
 16254  0D45  30A8               	movlw	168
 16255  0D46  0086               	movwf	6
 16256  0D47  0181               	clrf	1
 16257  0D48                     l6363:	
 16258                           
 16259                           ;app_led.c: 330: }
 16260                           ;app_led.c: 331: for(i = 0; i < 5; i++)
 16261  0D48  01BF               	clrf	led_para_init@i
 16262  0D49                     l6369:	
 16263                           
 16264                           ;app_led.c: 332: {
 16265                           ;app_led.c: 333: if(m_led_para.ble_para.auto_para.day_bright[i] > 100)
 16266  0D49  083F               	movf	led_para_init@i,w
 16267  0D4A  00B6               	movwf	??_led_para_init
 16268  0D4B  3098               	movlw	152
 16269  0D4C  01B7               	clrf	??_led_para_init+1
 16270  0D4D  00B8               	movwf	??_led_para_init+2
 16271  0D4E  26E7  318C         	fcall	PL54	;call to abstracted procedure
 16272  0D50  3065               	movlw	101
 16273  0D51  0201               	subwf	1,w
 16274                           
 16275                           ;app_led.c: 334: {
 16276                           ;app_led.c: 335: m_led_para.ble_para.auto_para.day_bright[i] = 100;
 16277  0D52  083F               	movf	led_para_init@i,w
 16278  0D53  00B6               	movwf	??_led_para_init
 16279  0D54  1C03               	skipc
 16280  0D55  2D5D               	goto	L12
 16281  0D56  3098               	movlw	152
 16282  0D57  01B7               	clrf	??_led_para_init+1
 16283  0D58  00B8               	movwf	??_led_para_init+2
 16284  0D59  26D8  318C         	fcall	PL50	;call to abstracted procedure
 16285                           
 16286                           ;app_led.c: 336: }
 16287                           ;app_led.c: 337: if(m_led_para.ble_para.auto_para.night_bright[i] > 100)
 16288  0D5B  083F               	movf	led_para_init@i,w
 16289  0D5C  00B6               	movwf	??_led_para_init
 16290  0D5D                     L12:	
 16291  0D5D  30A1               	movlw	161
 16292  0D5E  01B7               	clrf	??_led_para_init+1
 16293  0D5F  00B8               	movwf	??_led_para_init+2
 16294  0D60  26E7  318C         	fcall	PL54	;call to abstracted procedure
 16295  0D62  3065               	movlw	101
 16296  0D63  0201               	subwf	1,w
 16297  0D64  1C03               	skipc
 16298  0D65  2D6D               	goto	l6375
 16299                           
 16300                           ;app_led.c: 338: {
 16301                           ;app_led.c: 339: m_led_para.ble_para.auto_para.night_bright[i] = 100;
 16302  0D66  083F               	movf	led_para_init@i,w
 16303  0D67  00B6               	movwf	??_led_para_init
 16304  0D68  30A1               	movlw	161
 16305  0D69  01B7               	clrf	??_led_para_init+1
 16306  0D6A  00B8               	movwf	??_led_para_init+2
 16307  0D6B  26D8  318C         	fcall	PL50	;call to abstracted procedure
 16308  0D6D                     l6375:	
 16309  0D6D  3005               	movlw	5
 16310  0D6E  0ABF               	incf	led_para_init@i,f
 16311  0D6F  023F               	subwf	led_para_init@i,w
 16312  0D70  1C03               	skipc
 16313  0D71  2D49               	goto	l6369
 16314                           
 16315                           ;app_led.c: 340: }
 16316                           ;app_led.c: 341: }
 16317                           ;app_led.c: 344: if(m_led_para.ble_para.pro_para.point_count < 4 || m_led_para.ble_para.
      +                          pro_para.point_count > 10)
 16318  0D72  273E  318C         	fcall	PL116	;call to abstracted procedure
 16319  0D74  30A9               	movlw	169
 16320  0D75  0086               	movwf	6
 16321  0D76  1C03               	skipc
 16322  0D77  2D7E               	goto	L13
 16323  0D78  300B               	movlw	11
 16324  0D79  0201               	subwf	1,w
 16325  0D7A  1C03               	skipc
 16326  0D7B  2D80               	goto	l6385
 16327                           
 16328                           ;app_led.c: 345: {
 16329                           ;app_led.c: 346: m_led_para.ble_para.pro_para.point_count = 6;
 16330  0D7C  30A9               	movlw	169
 16331  0D7D  0086               	movwf	6
 16332  0D7E                     L13:	
 16333  0D7E  3006               	movlw	6
 16334  0D7F  0081               	movwf	1
 16335  0D80                     l6385:	
 16336                           
 16337                           ;app_led.c: 347: }
 16338                           ;app_led.c: 348: for(i = 0; i < 10; i++)
 16339  0D80  01BF               	clrf	led_para_init@i
 16340  0D81                     l6391:	
 16341                           
 16342                           ;app_led.c: 349: {
 16343                           ;app_led.c: 350: if(m_led_para.ble_para.pro_para.points[i].hour > 23)
 16344  0D81  26D1               	fcall	PL38	;call to abstracted procedure
 16345  0D82  3196  26BE  318C   	fcall	___wmul
 16346  0D85  30AA               	movlw	170
 16347  0D86  26C7  318C         	fcall	PL26	;call to abstracted procedure
 16348  0D88  3018               	movlw	24
 16349  0D89  0201               	subwf	1,w
 16350                           
 16351                           ;app_led.c: 351: {
 16352                           ;app_led.c: 352: m_led_para.ble_para.pro_para.points[i].hour = 0;
 16353  0D8A  26D1  318C         	fcall	PL38	;call to abstracted procedure
 16354  0D8C  1C03               	skipc
 16355  0D8D  2D96               	goto	L14
 16356  0D8E  3196  26BE  318C   	fcall	___wmul
 16357  0D91  30AA               	movlw	170
 16358  0D92  26C7  318C         	fcall	PL26	;call to abstracted procedure
 16359  0D94  0181               	clrf	1
 16360                           
 16361                           ;app_led.c: 353: }
 16362                           ;app_led.c: 354: if(m_led_para.ble_para.pro_para.points[i].minuite > 59)
 16363  0D95  26D1               	fcall	PL38	;call to abstracted procedure
 16364  0D96                     L14:	
 16365  0D96  3196  26BE  318C   	fcall	___wmul
 16366  0D99  30AB               	movlw	171
 16367  0D9A  26C7  318C         	fcall	PL26	;call to abstracted procedure
 16368  0D9C  303C               	movlw	60
 16369  0D9D  0201               	subwf	1,w
 16370  0D9E  1C03               	skipc
 16371  0D9F  2DA8               	goto	l6397
 16372                           
 16373                           ;app_led.c: 355: {
 16374                           ;app_led.c: 356: m_led_para.ble_para.pro_para.points[i].hour = 0;
 16375  0DA0  26D1               	fcall	PL38	;call to abstracted procedure
 16376  0DA1  3196  26BE  318C   	fcall	___wmul
 16377  0DA4  30AA               	movlw	170
 16378  0DA5  26C7  318C         	fcall	PL26	;call to abstracted procedure
 16379  0DA7  0181               	clrf	1
 16380  0DA8                     l6397:	
 16381                           
 16382                           ;app_led.c: 357: }
 16383                           ;app_led.c: 358: for(j = 0; j < 5; j++)
 16384  0DA8  01BE               	clrf	led_para_init@j
 16385  0DA9                     l6403:	
 16386                           
 16387                           ;app_led.c: 359: {
 16388                           ;app_led.c: 360: if(m_led_para.ble_para.pro_para.points[i].bright[j] > 100)
 16389  0DA9  083E               	movf	led_para_init@j,w
 16390  0DAA  00B6               	movwf	??_led_para_init
 16391  0DAB  01B7               	clrf	??_led_para_init+1
 16392  0DAC  26D1               	fcall	PL38	;call to abstracted procedure
 16393  0DAD  3196  26BE  318C   	fcall	___wmul
 16394  0DB0  30AC               	movlw	172
 16395  0DB1  26B5  318C         	fcall	PL20	;call to abstracted procedure
 16396  0DB3  2745  318C         	fcall	PL120	;call to abstracted procedure
 16397  0DB5  1C03               	skipc
 16398  0DB6  2DC3               	goto	l6407
 16399                           
 16400                           ;app_led.c: 361: {
 16401                           ;app_led.c: 362: m_led_para.ble_para.pro_para.points[i].bright[j] = 100;
 16402  0DB7  083E               	movf	led_para_init@j,w
 16403  0DB8  00B6               	movwf	??_led_para_init
 16404  0DB9  01B7               	clrf	??_led_para_init+1
 16405  0DBA  26D1               	fcall	PL38	;call to abstracted procedure
 16406  0DBB  3196  26BE  318C   	fcall	___wmul
 16407  0DBE  30AC               	movlw	172
 16408  0DBF  26B5  318C         	fcall	PL20	;call to abstracted procedure
 16409  0DC1  26FC  318C         	fcall	PL64	;call to abstracted procedure
 16410  0DC3                     l6407:	
 16411  0DC3  3005               	movlw	5
 16412  0DC4  0ABE               	incf	led_para_init@j,f
 16413  0DC5  023E               	subwf	led_para_init@j,w
 16414  0DC6  1C03               	skipc
 16415  0DC7  2DA9               	goto	l6403
 16416  0DC8  300A               	movlw	10
 16417  0DC9  0ABF               	incf	led_para_init@i,f
 16418  0DCA  023F               	subwf	led_para_init@i,w
 16419  0DCB  1803               	btfsc	3,0
 16420  0DCC  2DE6               	goto	l6439
 16421  0DCD  2D81               	goto	l6391
 16422  0DCE                     l6415:	
 16423                           
 16424                           ;app_led.c: 399: led_turnoff();
 16425  0DCE  2637  318C         	fcall	_led_turnoff
 16426                           
 16427                           ;app_led.c: 400: led_indicate_off();
 16428  0DD0  2EAB               	ljmp	l4747
 16429  0DD1                     l6419:	
 16430                           ;app_led.c: 401: break;
 16431                           
 16432                           
 16433                           ;app_led.c: 403: led_update_day_bright();
 16434  0DD1  2644               	fcall	_led_update_day_bright
 16435                           
 16436                           ;app_led.c: 404: led_indicate_day();
 16437  0DD2  318B  2BD0         	ljmp	PL132
 16438  0DD4                     l6423:	
 16439                           ;app_led.c: 405: break;
 16440                           
 16441                           
 16442                           ;app_led.c: 407: led_update_night_bright();
 16443  0DD4  266B               	fcall	_led_update_night_bright
 16444                           
 16445                           ;app_led.c: 408: led_indicate_night();
 16446  0DD5  318B  2BD5         	ljmp	PL134
 16447  0DD7                     l6427:	
 16448                           ;app_led.c: 409: break;
 16449                           
 16450                           
 16451                           ;app_led.c: 411: if(m_led_para.ble_para.mMode == 0)
 16452  0DD7  26AD  318C         	fcall	PL10	;call to abstracted procedure
 16453  0DD9  1D03               	skipz
 16454  0DDA  2DE5               	goto	l6435
 16455                           
 16456                           ;app_led.c: 412: {
 16457                           ;app_led.c: 413: if(m_led_para.ble_para.manual_para.mOn)
 16458  0DDB  318A  2218  318C   	fcall	PL52	;call to abstracted procedure
 16459  0DDE  1C01               	btfss	1,0
 16460  0DDF  2DE3               	goto	l6433
 16461                           
 16462                           ;app_led.c: 414: {
 16463                           ;app_led.c: 415: led_turnon_ramp();
 16464  0DE0  25F6  318C         	fcall	_led_turnon_ramp
 16465                           
 16466                           ;app_led.c: 416: }
 16467  0DE2  2DE5               	goto	l6435
 16468  0DE3                     l6433:	
 16469                           
 16470                           ;app_led.c: 417: else
 16471                           ;app_led.c: 418: {
 16472                           ;app_led.c: 419: led_turnoff_ramp();
 16473  0DE3  2699  318C         	fcall	_led_turnoff_ramp
 16474  0DE5                     l6435:	
 16475                           
 16476                           ;app_led.c: 420: }
 16477                           ;app_led.c: 421: }
 16478                           ;app_led.c: 422: led_indicate_ble();
 16479  0DE5  2EA4               	ljmp	l4105
 16480  0DE6                     l6439:	
 16481                           ;app_led.c: 423: break;
 16482                           
 16483  0DE6  318B  2389  318C   	fcall	PL14	;call to abstracted procedure
 16484                           
 16485                           ; Switch size 1, requested type "space"
 16486                           ; Number of cases is 4, Range of values is 0 to 3
 16487                           ; switch strategies available:
 16488                           ; Name         Instructions Cycles
 16489                           ; simple_byte           13     7 (average)
 16490                           ; direct_byte           14     6 (fixed)
 16491                           ; jumptable            260     6 (fixed)
 16492                           ;	Chosen strategy is simple_byte
 16493  0DE9  1903               	skipnz
 16494  0DEA  2DCE               	goto	l6415
 16495  0DEB  3A01               	xorlw	1	; case 1
 16496  0DEC  1903               	skipnz
 16497  0DED  2DD1               	goto	l6419
 16498  0DEE  3A03               	xorlw	3	; case 2
 16499  0DEF  1903               	skipnz
 16500  0DF0  2DD4               	goto	l6423
 16501  0DF1  3A01               	xorlw	1	; case 3
 16502  0DF2  1903               	skipnz
 16503  0DF3  2DD7               	goto	l6427
 16504  0DF4  2DF5               	goto	l645
 16505  0DF5                     l645:	
 16506  0DF5  0008               	return
 16507  0DF6                     __end_of_led_para_init:	
 16508  0DF6                     __ptext47:	
 16509 ;; *************** function _led_turnon_ramp *****************
 16510 ;; Defined at:
 16511 ;;		line 675 in file "src/app_led.c"
 16512 ;; Parameters:    Size  Location     Type
 16513 ;;		None
 16514 ;; Auto vars:     Size  Location     Type
 16515 ;;  i               1    6[BANK0 ] unsigned char 
 16516 ;; Return value:  Size  Location     Type
 16517 ;;                  1    wreg      void 
 16518 ;; Registers used:
 16519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 16520 ;; Tracked objects:
 16521 ;;		On entry : 1F/0
 16522 ;;		On exit  : 1F/0
 16523 ;;		Unchanged: 0/0
 16524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16526 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16527 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16528 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16529 ;;Total ram usage:        5 bytes
 16530 ;; Hardware stack levels used:    1
 16531 ;; Hardware stack levels required when called:    9
 16532 ;; This function calls:
 16533 ;;		Nothing
 16534 ;; This function is called by:
 16535 ;;		_led_para_init
 16536 ;;		_led_set_mode
 16537 ;;		_led_set_power
 16538 ;;		_led_set_time
 16539 ;; This function uses a non-reentrant model
 16540 ;;
 16541                           
 16542                           
 16543                           ;psect for function _led_turnon_ramp
 16544  0DF6                     _led_turnon_ramp:	
 16545                           
 16546                           ;app_led.c: 677: for(uint8_t i = 0; i < 5; i++)
 16547                           
 16548                           ;incstack = 0
 16549                           ; Regs used in _led_turnon_ramp: [wreg-fsr1h+status,2+status,0]
 16550  0DF6  01A6               	clrf	led_turnon_ramp@i
 16551  0DF7                     l4087:	
 16552                           
 16553                           ;app_led.c: 678: {
 16554                           ;app_led.c: 679: target_bright[i] = m_led_para.ble_para.manual_para.mBright[i];
 16555  0DF7  0826               	movf	led_turnon_ramp@i,w
 16556  0DF8  00A2               	movwf	??_led_turnon_ramp
 16557  0DF9  3076               	movlw	118
 16558  0DFA  01A3               	clrf	??_led_turnon_ramp+1
 16559  0DFB  35A2               	lslf	??_led_turnon_ramp,f
 16560  0DFC  0DA3               	rlf	??_led_turnon_ramp+1,f
 16561  0DFD  00A4               	movwf	??_led_turnon_ramp+2
 16562  0DFE  3023               	movlw	35
 16563  0DFF  00A5               	movwf	??_led_turnon_ramp+3
 16564  0E00  0822               	movf	??_led_turnon_ramp,w
 16565  0E01  0724               	addwf	??_led_turnon_ramp+2,w
 16566  0E02  0086               	movwf	6
 16567  0E03  0823               	movf	??_led_turnon_ramp+1,w
 16568  0E04  3D25               	addwfc	??_led_turnon_ramp+3,w
 16569  0E05  0087               	movwf	7
 16570  0E06  3526               	lslf	led_turnon_ramp@i,w
 16571  0E07  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 16572  0E08  0084               	movwf	4
 16573  0E09  27FA  318C         	fcall	PL6	;call to abstracted procedure
 16574  0E0B  3005               	movlw	5
 16575  0E0C  0AA6               	incf	led_turnon_ramp@i,f
 16576  0E0D  0226               	subwf	led_turnon_ramp@i,w
 16577  0E0E  1803               	btfsc	3,0
 16578  0E0F  0008               	return
 16579  0E10  2DF7               	goto	l4087
 16580  0E11                     __end_of_led_turnon_ramp:	
 16581  0E11                     __ptext29:	
 16582 ;; *************** function _eeprom_read_buffer *****************
 16583 ;; Defined at:
 16584 ;;		line 43 in file "src/drv_eeprom.c"
 16585 ;; Parameters:    Size  Location     Type
 16586 ;;  addr            1    wreg     unsigned char 
 16587 ;;  pbuf            2    3[BANK0 ] PTR unsigned char 
 16588 ;;		 -> m_led_para(131), 
 16589 ;;  len             1    5[BANK0 ] unsigned char 
 16590 ;; Auto vars:     Size  Location     Type
 16591 ;;  addr            1    7[BANK0 ] unsigned char 
 16592 ;;  i               1    8[BANK0 ] unsigned char 
 16593 ;; Return value:  Size  Location     Type
 16594 ;;                  1    wreg      void 
 16595 ;; Registers used:
 16596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16597 ;; Tracked objects:
 16598 ;;		On entry : 1F/0
 16599 ;;		On exit  : 1F/0
 16600 ;;		Unchanged: 0/0
 16601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16602 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16603 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16604 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16605 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16606 ;;Total ram usage:        6 bytes
 16607 ;; Hardware stack levels used:    1
 16608 ;; Hardware stack levels required when called:   10
 16609 ;; This function calls:
 16610 ;;		_eeprom_read
 16611 ;; This function is called by:
 16612 ;;		_led_para_init
 16613 ;; This function uses a non-reentrant model
 16614 ;;
 16615                           
 16616                           
 16617                           ;psect for function _eeprom_read_buffer
 16618  0E11                     _eeprom_read_buffer:	
 16619                           
 16620                           ;incstack = 0
 16621                           ; Regs used in _eeprom_read_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16622                           ;eeprom_read_buffer@addr stored from wreg
 16623  0E11  00A7               	movwf	eeprom_read_buffer@addr
 16624                           
 16625                           ;drv_eeprom.c: 45: for(uint8_t i = len; i > 0; i--)
 16626  0E12  0825               	movf	eeprom_read_buffer@len,w
 16627  0E13  00A8               	movwf	eeprom_read_buffer@i
 16628  0E14                     l4265:	
 16629  0E14  0828               	movf	eeprom_read_buffer@i,w
 16630  0E15  1903               	btfsc	3,2
 16631  0E16  0008               	return
 16632                           
 16633                           ;drv_eeprom.c: 46: {
 16634                           ;drv_eeprom.c: 47: *pbuf++ = eeprom_read(addr++);
 16635  0E17  0827               	movf	eeprom_read_buffer@addr,w
 16636  0E18  2628  318C         	fcall	_eeprom_read
 16637  0E1A  0020               	movlb	0	; select bank0
 16638  0E1B  00A6               	movwf	??_eeprom_read_buffer
 16639  0E1C  0823               	movf	eeprom_read_buffer@pbuf,w
 16640  0E1D  0086               	movwf	6
 16641  0E1E  0824               	movf	eeprom_read_buffer@pbuf+1,w
 16642  0E1F  0087               	movwf	7
 16643  0E20  0826               	movf	??_eeprom_read_buffer,w
 16644  0E21  0081               	movwf	1
 16645  0E22  0AA7               	incf	eeprom_read_buffer@addr,f
 16646  0E23  0AA3               	incf	eeprom_read_buffer@pbuf,f
 16647  0E24  1903               	skipnz
 16648  0E25  0AA4               	incf	eeprom_read_buffer@pbuf+1,f
 16649  0E26  03A8               	decf	eeprom_read_buffer@i,f
 16650  0E27  2E14               	goto	l4265
 16651  0E28                     __end_of_eeprom_read_buffer:	
 16652  0E28                     __ptext30:	
 16653 ;; *************** function _eeprom_read *****************
 16654 ;; Defined at:
 16655 ;;		line 24 in file "src/drv_eeprom.c"
 16656 ;; Parameters:    Size  Location     Type
 16657 ;;  addr            1    wreg     unsigned char 
 16658 ;; Auto vars:     Size  Location     Type
 16659 ;;  addr            1    2[BANK0 ] unsigned char 
 16660 ;; Return value:  Size  Location     Type
 16661 ;;                  1    wreg      unsigned char 
 16662 ;; Registers used:
 16663 ;;		wreg
 16664 ;; Tracked objects:
 16665 ;;		On entry : 1F/0
 16666 ;;		On exit  : 1F/11
 16667 ;;		Unchanged: 0/0
 16668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16672 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16673 ;;Total ram usage:        1 bytes
 16674 ;; Hardware stack levels used:    1
 16675 ;; Hardware stack levels required when called:    9
 16676 ;; This function calls:
 16677 ;;		Nothing
 16678 ;; This function is called by:
 16679 ;;		_eeprom_read_buffer
 16680 ;; This function uses a non-reentrant model
 16681 ;;
 16682                           
 16683                           
 16684                           ;psect for function _eeprom_read
 16685  0E28                     _eeprom_read:	
 16686                           
 16687                           ;incstack = 0
 16688                           ; Regs used in _eeprom_read: [wreg]
 16689                           ;eeprom_read@addr stored from wreg
 16690  0E28  00A2               	movwf	eeprom_read@addr
 16691                           
 16692                           ;drv_eeprom.c: 26: NVMADRH = 0x70;
 16693  0E29  3070               	movlw	112
 16694  0E2A  0031               	movlb	17	; select bank17
 16695  0E2B  0092               	movwf	18	;volatile
 16696                           
 16697                           ;drv_eeprom.c: 27: NVMADRL = addr;
 16698  0E2C  0020               	movlb	0	; select bank0
 16699  0E2D  0822               	movf	eeprom_read@addr,w
 16700  0E2E  0031               	movlb	17	; select bank17
 16701  0E2F  0091               	movwf	17	;volatile
 16702                           
 16703                           ;drv_eeprom.c: 28: NVMCON1bits.NVMREGS = 1;
 16704  0E30  1715               	bsf	21,6	;volsfr
 16705                           
 16706                           ;drv_eeprom.c: 29: NVMCON1bits.RD = 1;
 16707  0E31  1415               	bsf	21,0	;volsfr
 16708                           
 16709                           ;drv_eeprom.c: 30: __nop();
 16710  0E32  0000               	nop
 16711                           
 16712                           ;drv_eeprom.c: 31: __nop();
 16713  0E33  0000               	nop
 16714                           
 16715                           ;drv_eeprom.c: 32: return (NVMDATL);
 16716  0E34  0031               	movlb	17	; select bank17
 16717  0E35  0813               	movf	19,w	;volatile
 16718  0E36  0008               	return
 16719  0E37                     __end_of_eeprom_read:	
 16720  0E37                     __ptext23:	
 16721 ;; *************** function _led_turnoff *****************
 16722 ;; Defined at:
 16723 ;;		line 700 in file "src/app_led.c"
 16724 ;; Parameters:    Size  Location     Type
 16725 ;;		None
 16726 ;; Auto vars:     Size  Location     Type
 16727 ;;  i               1    2[BANK0 ] unsigned char 
 16728 ;; Return value:  Size  Location     Type
 16729 ;;                  1    wreg      void 
 16730 ;; Registers used:
 16731 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16732 ;; Tracked objects:
 16733 ;;		On entry : 1F/0
 16734 ;;		On exit  : 1F/0
 16735 ;;		Unchanged: 0/0
 16736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16740 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16741 ;;Total ram usage:        1 bytes
 16742 ;; Hardware stack levels used:    1
 16743 ;; Hardware stack levels required when called:    9
 16744 ;; This function calls:
 16745 ;;		Nothing
 16746 ;; This function is called by:
 16747 ;;		_led_para_init
 16748 ;;		_led_find_device
 16749 ;; This function uses a non-reentrant model
 16750 ;;
 16751                           
 16752                           
 16753                           ;psect for function _led_turnoff
 16754  0E37                     _led_turnoff:	
 16755                           
 16756                           ;app_led.c: 702: for(uint8_t i = 0; i < 5; i++)
 16757                           
 16758                           ;incstack = 0
 16759                           ; Regs used in _led_turnoff: [wreg+fsr1l+fsr1h+status,2+status,0]
 16760  0E37  01A2               	clrf	led_turnoff@i
 16761  0E38                     l6103:	
 16762                           
 16763                           ;app_led.c: 703: {
 16764                           ;app_led.c: 704: target_bright[i] = 0;
 16765  0E38  3522               	lslf	led_turnoff@i,w
 16766  0E39  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 16767  0E3A  2713  318C         	fcall	PL72	;call to abstracted procedure
 16768                           
 16769                           ;app_led.c: 705: current_bright[i] = 0;
 16770  0E3C  3522               	lslf	led_turnoff@i,w
 16771  0E3D  2791  318C         	fcall	PL118	;call to abstracted procedure
 16772  0E3F  0AA2               	incf	led_turnoff@i,f
 16773  0E40  0222               	subwf	led_turnoff@i,w
 16774  0E41  1803               	btfsc	3,0
 16775  0E42  0008               	return
 16776  0E43  2E38               	goto	l6103
 16777  0E44                     __end_of_led_turnoff:	
 16778  0E44                     __ptext22:	
 16779 ;; *************** function _led_update_day_bright *****************
 16780 ;; Defined at:
 16781 ;;		line 738 in file "src/app_led.c"
 16782 ;; Parameters:    Size  Location     Type
 16783 ;;		None
 16784 ;; Auto vars:     Size  Location     Type
 16785 ;;  i               1    6[BANK0 ] unsigned char 
 16786 ;; Return value:  Size  Location     Type
 16787 ;;                  1    wreg      void 
 16788 ;; Registers used:
 16789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 16790 ;; Tracked objects:
 16791 ;;		On entry : 1F/0
 16792 ;;		On exit  : 1F/0
 16793 ;;		Unchanged: 0/0
 16794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16796 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16797 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16798 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16799 ;;Total ram usage:        5 bytes
 16800 ;; Hardware stack levels used:    1
 16801 ;; Hardware stack levels required when called:    9
 16802 ;; This function calls:
 16803 ;;		Nothing
 16804 ;; This function is called by:
 16805 ;;		_led_para_init
 16806 ;; This function uses a non-reentrant model
 16807 ;;
 16808                           
 16809                           
 16810                           ;psect for function _led_update_day_bright
 16811  0E44                     _led_update_day_bright:	
 16812                           
 16813                           ;app_led.c: 740: for(uint8_t i = 0; i < 5; i++)
 16814                           
 16815                           ;incstack = 0
 16816                           ; Regs used in _led_update_day_bright: [wreg-fsr1h+status,2+status,0]
 16817  0E44  01A6               	clrf	led_update_day_bright@i
 16818  0E45                     l4755:	
 16819                           
 16820                           ;app_led.c: 741: {
 16821                           ;app_led.c: 742: current_bright[i] = m_led_para.all_bright;
 16822  0E45  318B  2391  318C   	fcall	PL32	;call to abstracted procedure
 16823  0E48  3526               	lslf	led_update_day_bright@i,w
 16824  0E49  3EDA               	addlw	(low (_current_bright| 0))& (0+255)
 16825                           
 16826                           ;app_led.c: 743: target_bright[i] = m_led_para.all_bright;
 16827  0E4A  318B  237E  318C   	fcall	PL4	;call to abstracted procedure
 16828  0E4D  3142               	addfsr 1,2
 16829  0E4E  3526               	lslf	led_update_day_bright@i,w
 16830  0E4F  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 16831                           
 16832                           ;app_led.c: 744: m_led_para.ble_para.manual_para.mBright[i] = m_led_para.all_bright;
 16833  0E50  318B  237E  318C   	fcall	PL4	;call to abstracted procedure
 16834  0E53  3142               	addfsr 1,2
 16835  0E54  0826               	movf	led_update_day_bright@i,w
 16836  0E55  00A2               	movwf	??_led_update_day_bright
 16837  0E56  3076               	movlw	118
 16838  0E57  01A3               	clrf	??_led_update_day_bright+1
 16839  0E58  35A2               	lslf	??_led_update_day_bright,f
 16840  0E59  0DA3               	rlf	??_led_update_day_bright+1,f
 16841  0E5A  00A4               	movwf	??_led_update_day_bright+2
 16842  0E5B  3023               	movlw	35
 16843  0E5C  00A5               	movwf	??_led_update_day_bright+3
 16844  0E5D  0822               	movf	??_led_update_day_bright,w
 16845  0E5E  0724               	addwf	??_led_update_day_bright+2,w
 16846  0E5F  0084               	movwf	4
 16847  0E60  0823               	movf	??_led_update_day_bright+1,w
 16848  0E61  3D25               	addwfc	??_led_update_day_bright+3,w
 16849  0E62  318B  23B7  318C   	fcall	PL94	;call to abstracted procedure
 16850  0E65  3005               	movlw	5
 16851  0E66  0AA6               	incf	led_update_day_bright@i,f
 16852  0E67  0226               	subwf	led_update_day_bright@i,w
 16853  0E68  1803               	btfsc	3,0
 16854  0E69  0008               	return
 16855  0E6A  2E45               	goto	l4755
 16856  0E6B                     __end_of_led_update_day_bright:	
 16857  0E6B                     __ptext21:	
 16858 ;; *************** function _led_update_night_bright *****************
 16859 ;; Defined at:
 16860 ;;		line 760 in file "src/app_led.c"
 16861 ;; Parameters:    Size  Location     Type
 16862 ;;		None
 16863 ;; Auto vars:     Size  Location     Type
 16864 ;;  i               1    6[BANK0 ] unsigned char 
 16865 ;; Return value:  Size  Location     Type
 16866 ;;                  1    wreg      void 
 16867 ;; Registers used:
 16868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 16869 ;; Tracked objects:
 16870 ;;		On entry : 1F/0
 16871 ;;		On exit  : 1F/0
 16872 ;;		Unchanged: 0/0
 16873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16876 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16877 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16878 ;;Total ram usage:        5 bytes
 16879 ;; Hardware stack levels used:    1
 16880 ;; Hardware stack levels required when called:    9
 16881 ;; This function calls:
 16882 ;;		Nothing
 16883 ;; This function is called by:
 16884 ;;		_led_para_init
 16885 ;; This function uses a non-reentrant model
 16886 ;;
 16887                           
 16888                           
 16889                           ;psect for function _led_update_night_bright
 16890  0E6B                     _led_update_night_bright:	
 16891                           
 16892                           ;app_led.c: 762: for(uint8_t i = 0; i < 5; i++)
 16893                           
 16894                           ;incstack = 0
 16895                           ; Regs used in _led_update_night_bright: [wreg-fsr1h+status,2+status,0]
 16896  0E6B  01A6               	clrf	led_update_night_bright@i
 16897  0E6C                     l4769:	
 16898                           
 16899                           ;app_led.c: 763: {
 16900                           ;app_led.c: 764: if(i == 2)
 16901  0E6C  3002               	movlw	2
 16902  0E6D  0626               	xorwf	led_update_night_bright@i,w
 16903  0E6E  1D03               	btfss	3,2
 16904  0E6F  2E85               	goto	l4773
 16905                           
 16906                           ;app_led.c: 765: {
 16907                           ;app_led.c: 766: current_bright[i] = m_led_para.blue_bright;
 16908  0E70  26C1               	fcall	PL22	;call to abstracted procedure
 16909  0E71  3526               	lslf	led_update_night_bright@i,w
 16910  0E72  3EDA               	addlw	(low (_current_bright| 0))& (0+255)
 16911                           
 16912                           ;app_led.c: 767: target_bright[i] = m_led_para.blue_bright;
 16913  0E73  318B  237E  318C   	fcall	PL4	;call to abstracted procedure
 16914  0E76  3144               	addfsr 1,4
 16915  0E77  3526               	lslf	led_update_night_bright@i,w
 16916  0E78  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 16917                           
 16918                           ;app_led.c: 768: m_led_para.ble_para.manual_para.mBright[i] = m_led_para.blue_bright;
 16919  0E79  318B  237E  318C   	fcall	PL4	;call to abstracted procedure
 16920  0E7C  3144               	addfsr 1,4
 16921  0E7D  26F0               	fcall	PL56	;call to abstracted procedure
 16922  0E7E  0084               	movwf	4
 16923  0E7F  0823               	movf	??_led_update_night_bright+1,w
 16924  0E80  3D25               	addwfc	??_led_update_night_bright+3,w
 16925  0E81  318B  23B7  318C   	fcall	PL94	;call to abstracted procedure
 16926                           
 16927                           ;app_led.c: 769: }
 16928  0E84  2E93               	goto	l4775
 16929  0E85                     l4773:	
 16930                           
 16931                           ;app_led.c: 770: else
 16932                           ;app_led.c: 771: {
 16933                           ;app_led.c: 772: current_bright[i] = 0;
 16934  0E85  3526               	lslf	led_update_night_bright@i,w
 16935  0E86  3EDA               	addlw	(low (_current_bright| 0))& (0+255)
 16936  0E87  2713               	fcall	PL72	;call to abstracted procedure
 16937                           
 16938                           ;app_led.c: 773: target_bright[i] = 0;
 16939  0E88  3526               	lslf	led_update_night_bright@i,w
 16940  0E89  318B  23DA  318C   	fcall	PL138	;call to abstracted procedure
 16941                           
 16942                           ;app_led.c: 774: m_led_para.ble_para.manual_para.mBright[i] = 0;
 16943  0E8C  26F0               	fcall	PL56	;call to abstracted procedure
 16944  0E8D  0086               	movwf	6
 16945  0E8E  0823               	movf	??_led_update_night_bright+1,w
 16946  0E8F  3D25               	addwfc	??_led_update_night_bright+3,w
 16947  0E90  318B  23E5  318C   	fcall	PL158	;call to abstracted procedure
 16948  0E93                     l4775:	
 16949  0E93  3005               	movlw	5
 16950  0E94  0AA6               	incf	led_update_night_bright@i,f
 16951  0E95  0226               	subwf	led_update_night_bright@i,w
 16952  0E96  1803               	btfsc	3,0
 16953  0E97  0008               	return
 16954  0E98  2E6C               	goto	l4769
 16955  0E99                     __end_of_led_update_night_bright:	
 16956  0E99                     __ptext48:	
 16957 ;; *************** function _led_turnoff_ramp *****************
 16958 ;; Defined at:
 16959 ;;		line 683 in file "src/app_led.c"
 16960 ;; Parameters:    Size  Location     Type
 16961 ;;		None
 16962 ;; Auto vars:     Size  Location     Type
 16963 ;;  i               1    2[BANK0 ] unsigned char 
 16964 ;; Return value:  Size  Location     Type
 16965 ;;                  1    wreg      void 
 16966 ;; Registers used:
 16967 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16968 ;; Tracked objects:
 16969 ;;		On entry : 1F/0
 16970 ;;		On exit  : 1F/0
 16971 ;;		Unchanged: 0/0
 16972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16976 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16977 ;;Total ram usage:        1 bytes
 16978 ;; Hardware stack levels used:    1
 16979 ;; Hardware stack levels required when called:    9
 16980 ;; This function calls:
 16981 ;;		Nothing
 16982 ;; This function is called by:
 16983 ;;		_led_para_init
 16984 ;;		_led_set_mode
 16985 ;;		_led_set_power
 16986 ;;		_led_set_time
 16987 ;; This function uses a non-reentrant model
 16988 ;;
 16989                           
 16990                           
 16991                           ;psect for function _led_turnoff_ramp
 16992  0E99                     _led_turnoff_ramp:	
 16993                           
 16994                           ;app_led.c: 685: for(uint8_t i = 0; i < 5; i++)
 16995                           
 16996                           ;incstack = 0
 16997                           ; Regs used in _led_turnoff_ramp: [wreg+fsr1l+fsr1h+status,2+status,0]
 16998  0E99  01A2               	clrf	led_turnoff_ramp@i
 16999  0E9A                     l4099:	
 17000                           
 17001                           ;app_led.c: 686: {
 17002                           ;app_led.c: 687: target_bright[i] = 0;
 17003  0E9A  3522               	lslf	led_turnoff_ramp@i,w
 17004  0E9B  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 17005  0E9C  2713  318C         	fcall	PL72	;call to abstracted procedure
 17006  0E9E  3005               	movlw	5
 17007  0E9F  0AA2               	incf	led_turnoff_ramp@i,f
 17008  0EA0  0222               	subwf	led_turnoff_ramp@i,w
 17009  0EA1  1803               	btfsc	3,0
 17010  0EA2  0008               	return
 17011  0EA3  2E9A               	goto	l4099
 17012  0EA4                     __end_of_led_turnoff_ramp:	
 17013  0EA4                     __ptext42:	
 17014 ;; *************** function _led_indicate_ble *****************
 17015 ;; Defined at:
 17016 ;;		line 731 in file "src/app_led.c"
 17017 ;; Parameters:    Size  Location     Type
 17018 ;;		None
 17019 ;; Auto vars:     Size  Location     Type
 17020 ;;		None
 17021 ;; Return value:  Size  Location     Type
 17022 ;;                  1    wreg      void 
 17023 ;; Registers used:
 17024 ;;		None
 17025 ;; Tracked objects:
 17026 ;;		On entry : 1F/0
 17027 ;;		On exit  : 1F/2
 17028 ;;		Unchanged: 0/0
 17029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17034 ;;Total ram usage:        0 bytes
 17035 ;; Hardware stack levels used:    1
 17036 ;; Hardware stack levels required when called:    9
 17037 ;; This function calls:
 17038 ;;		Nothing
 17039 ;; This function is called by:
 17040 ;;		_led_para_init
 17041 ;;		_led_set_time
 17042 ;; This function uses a non-reentrant model
 17043 ;;
 17044                           
 17045                           
 17046                           ;psect for function _led_indicate_ble
 17047  0EA4                     _led_indicate_ble:	
 17048  0EA4                     l4105:	
 17049                           ;incstack = 0
 17050                           ; Regs used in _led_indicate_ble: []
 17051                           
 17052                           
 17053                           ;app_led.c: 733: (LATBbits.LATB6 = 1);
 17054  0EA4  0022               	movlb	2	; select bank2
 17055                           
 17056                           ;app_led.c: 734: (LATAbits.LATA1 = 0);
 17057                           
 17058                           ;app_led.c: 735: (LATBbits.LATB7 = 1);
 17059  0EA5  318B  2BEA         	ljmp	PL162	;call to abstracted procedure
 17060  0EA7                     __end_of_led_indicate_ble:	
 17061  0EA7                     __ptext28:	
 17062 ;; *************** function _led_indicate_day *****************
 17063 ;; Defined at:
 17064 ;;		line 717 in file "src/app_led.c"
 17065 ;; Parameters:    Size  Location     Type
 17066 ;;		None
 17067 ;; Auto vars:     Size  Location     Type
 17068 ;;		None
 17069 ;; Return value:  Size  Location     Type
 17070 ;;                  1    wreg      void 
 17071 ;; Registers used:
 17072 ;;		None
 17073 ;; Tracked objects:
 17074 ;;		On entry : 1F/0
 17075 ;;		On exit  : 1F/2
 17076 ;;		Unchanged: 0/0
 17077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17082 ;;Total ram usage:        0 bytes
 17083 ;; Hardware stack levels used:    1
 17084 ;; Hardware stack levels required when called:    9
 17085 ;; This function calls:
 17086 ;;		Nothing
 17087 ;; This function is called by:
 17088 ;;		_led_para_init
 17089 ;; This function uses a non-reentrant model
 17090 ;;
 17091                           
 17092                           
 17093                           ;psect for function _led_indicate_day
 17094  0EA7                     _led_indicate_day:	
 17095                           
 17096                           ;app_led.c: 719: (LATBbits.LATB6 = 0);
 17097                           
 17098                           ;app_led.c: 720: (LATAbits.LATA1 = 0);
 17099                           
 17100                           ;app_led.c: 721: (LATBbits.LATB7 = 0);
 17101                           
 17102                           ;incstack = 0
 17103                           ; Regs used in _led_indicate_day: []
 17104  0EA7  318B  2BD0         	ljmp	PL132	;call to abstracted procedure
 17105  0EA9                     __end_of_led_indicate_day:	
 17106  0EA9                     __ptext27:	
 17107 ;; *************** function _led_indicate_night *****************
 17108 ;; Defined at:
 17109 ;;		line 724 in file "src/app_led.c"
 17110 ;; Parameters:    Size  Location     Type
 17111 ;;		None
 17112 ;; Auto vars:     Size  Location     Type
 17113 ;;		None
 17114 ;; Return value:  Size  Location     Type
 17115 ;;                  1    wreg      void 
 17116 ;; Registers used:
 17117 ;;		None
 17118 ;; Tracked objects:
 17119 ;;		On entry : 1F/0
 17120 ;;		On exit  : 1F/2
 17121 ;;		Unchanged: 0/0
 17122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17127 ;;Total ram usage:        0 bytes
 17128 ;; Hardware stack levels used:    1
 17129 ;; Hardware stack levels required when called:    9
 17130 ;; This function calls:
 17131 ;;		Nothing
 17132 ;; This function is called by:
 17133 ;;		_led_para_init
 17134 ;; This function uses a non-reentrant model
 17135 ;;
 17136                           
 17137                           
 17138                           ;psect for function _led_indicate_night
 17139  0EA9                     _led_indicate_night:	
 17140                           
 17141                           ;app_led.c: 726: (LATBbits.LATB6 = 1);
 17142                           
 17143                           ;app_led.c: 727: (LATAbits.LATA1 = 1);
 17144                           
 17145                           ;app_led.c: 728: (LATBbits.LATB7 = 0);
 17146                           
 17147                           ;incstack = 0
 17148                           ; Regs used in _led_indicate_night: []
 17149  0EA9  318B  2BD5         	ljmp	PL134	;call to abstracted procedure
 17150  0EAB                     __end_of_led_indicate_night:	
 17151  0EAB                     __ptext26:	
 17152 ;; *************** function _led_indicate_off *****************
 17153 ;; Defined at:
 17154 ;;		line 710 in file "src/app_led.c"
 17155 ;; Parameters:    Size  Location     Type
 17156 ;;		None
 17157 ;; Auto vars:     Size  Location     Type
 17158 ;;		None
 17159 ;; Return value:  Size  Location     Type
 17160 ;;                  1    wreg      void 
 17161 ;; Registers used:
 17162 ;;		None
 17163 ;; Tracked objects:
 17164 ;;		On entry : 1F/0
 17165 ;;		On exit  : 1F/2
 17166 ;;		Unchanged: 0/0
 17167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17172 ;;Total ram usage:        0 bytes
 17173 ;; Hardware stack levels used:    1
 17174 ;; Hardware stack levels required when called:    9
 17175 ;; This function calls:
 17176 ;;		Nothing
 17177 ;; This function is called by:
 17178 ;;		_led_para_init
 17179 ;; This function uses a non-reentrant model
 17180 ;;
 17181                           
 17182                           
 17183                           ;psect for function _led_indicate_off
 17184  0EAB                     _led_indicate_off:	
 17185  0EAB                     l4747:	
 17186                           ;incstack = 0
 17187                           ; Regs used in _led_indicate_off: []
 17188                           
 17189                           
 17190                           ;app_led.c: 712: (LATBbits.LATB6 = 0);
 17191  0EAB  0022               	movlb	2	; select bank2
 17192                           
 17193                           ;app_led.c: 713: (LATAbits.LATA1 = 1);
 17194                           
 17195                           ;app_led.c: 714: (LATBbits.LATB7 = 1);
 17196  0EAC  2F97               	ljmp	PL150	;call to abstracted procedure
 17197  0EAD                     __end_of_led_indicate_off:	
 17198  0EAD                     PL10:	
 17199  0EAD  306D               	movlw	109
 17200  0EAE  0086               	movwf	6
 17201  0EAF  3023               	movlw	35
 17202  0EB0  0087               	movwf	7
 17203  0EB1  3146               	addfsr 1,6
 17204  0EB2  0801               	movf	1,w
 17205  0EB3  3903               	andlw	3
 17206  0EB4  0008               	return
 17207  0EB5                     __end_ofPL10:	
 17208  0EB5                     PL20:	
 17209  0EB5  00B8               	movwf	??_led_para_init+2
 17210  0EB6  3023               	movlw	35
 17211  0EB7  00B9               	movwf	??_led_para_init+3
 17212  0EB8  0822               	movf	?___wmul,w
 17213  0EB9  0738               	addwf	??_led_para_init+2,w
 17214  0EBA  00BA               	movwf	??_led_para_init+4
 17215  0EBB  0823               	movf	?___wmul+1,w
 17216  0EBC  3D39               	addwfc	??_led_para_init+3,w
 17217  0EBD  00BB               	movwf	??_led_para_init+5
 17218  0EBE  0836               	movf	??_led_para_init,w
 17219  0EBF  073A               	addwf	??_led_para_init+4,w
 17220  0EC0  0008               	return
 17221  0EC1                     __end_ofPL20:	
 17222  0EC1                     PL22:	
 17223  0EC1  306D               	movlw	109
 17224  0EC2  0086               	movwf	6
 17225  0EC3  3023               	movlw	35
 17226  0EC4  0087               	movwf	7
 17227  0EC5  3144               	addfsr 1,4
 17228  0EC6  0008               	return
 17229  0EC7                     __end_ofPL22:	
 17230  0EC7                     PL26:	
 17231  0EC7  00B6               	movwf	??_led_para_init
 17232  0EC8  3023               	movlw	35
 17233  0EC9  00B7               	movwf	??_led_para_init+1
 17234  0ECA  0822               	movf	?___wmul,w
 17235  0ECB  0736               	addwf	??_led_para_init,w
 17236  0ECC  0086               	movwf	6
 17237  0ECD  0823               	movf	?___wmul+1,w
 17238  0ECE  3D37               	addwfc	??_led_para_init+1,w
 17239  0ECF  0087               	movwf	7
 17240  0ED0  0008               	return
 17241  0ED1                     __end_ofPL26:	
 17242  0ED1                     PL38:	
 17243  0ED1  083F               	movf	led_para_init@i,w
 17244  0ED2  00A2               	movwf	___wmul@multiplier
 17245  0ED3  3007               	movlw	7
 17246  0ED4  01A3               	clrf	___wmul@multiplier+1
 17247  0ED5  00A4               	movwf	___wmul@multiplicand
 17248  0ED6  01A5               	clrf	___wmul@multiplicand+1
 17249  0ED7  0008               	return
 17250  0ED8                     __end_ofPL38:	
 17251  0ED8                     PL50:	
 17252  0ED8  3023               	movlw	35
 17253  0ED9  00B9               	movwf	??_led_para_init+3
 17254  0EDA  0836               	movf	??_led_para_init,w
 17255  0EDB  0738               	addwf	??_led_para_init+2,w
 17256  0EDC  00BA               	movwf	??_led_para_init+4
 17257  0EDD  0837               	movf	??_led_para_init+1,w
 17258  0EDE  3D39               	addwfc	??_led_para_init+3,w
 17259  0EDF  00BB               	movwf	??_led_para_init+5
 17260  0EE0  083A               	movf	??_led_para_init+4,w
 17261  0EE1  0086               	movwf	6
 17262  0EE2  083B               	movf	??_led_para_init+5,w
 17263  0EE3  0087               	movwf	7
 17264  0EE4  3064               	movlw	100
 17265  0EE5  0081               	movwf	1
 17266  0EE6  0008               	return
 17267  0EE7                     __end_ofPL50:	
 17268  0EE7                     PL54:	
 17269  0EE7  3023               	movlw	35
 17270  0EE8  00B9               	movwf	??_led_para_init+3
 17271  0EE9  0836               	movf	??_led_para_init,w
 17272  0EEA  0738               	addwf	??_led_para_init+2,w
 17273  0EEB  0086               	movwf	6
 17274  0EEC  0837               	movf	??_led_para_init+1,w
 17275  0EED  3D39               	addwfc	??_led_para_init+3,w
 17276  0EEE  0087               	movwf	7
 17277  0EEF  0008               	return
 17278  0EF0                     __end_ofPL54:	
 17279  0EF0                     PL56:	
 17280  0EF0  0826               	movf	led_update_night_bright@i,w
 17281  0EF1  00A2               	movwf	??_led_update_night_bright
 17282  0EF2  3076               	movlw	118
 17283  0EF3  01A3               	clrf	??_led_update_night_bright+1
 17284  0EF4  35A2               	lslf	??_led_update_night_bright,f
 17285  0EF5  0DA3               	rlf	??_led_update_night_bright+1,f
 17286  0EF6  00A4               	movwf	??_led_update_night_bright+2
 17287  0EF7  3023               	movlw	35
 17288  0EF8  00A5               	movwf	??_led_update_night_bright+3
 17289  0EF9  0822               	movf	??_led_update_night_bright,w
 17290  0EFA  0724               	addwf	??_led_update_night_bright+2,w
 17291  0EFB  0008               	return
 17292  0EFC                     __end_ofPL56:	
 17293  0EFC                     PL64:	
 17294  0EFC  00BC               	movwf	??_led_para_init+6
 17295  0EFD  0837               	movf	??_led_para_init+1,w
 17296  0EFE  3D3B               	addwfc	??_led_para_init+5,w
 17297  0EFF  00BD               	movwf	??_led_para_init+7
 17298  0F00  083C               	movf	??_led_para_init+6,w
 17299  0F01  0086               	movwf	6
 17300  0F02  083D               	movf	??_led_para_init+7,w
 17301  0F03  0087               	movwf	7
 17302  0F04  3064               	movlw	100
 17303  0F05  0081               	movwf	1
 17304  0F06  0008               	return
 17305  0F07                     __end_ofPL64:	
 17306  0F07                     PL68:	
 17307  0F07  0086               	movwf	6
 17308  0F08  3023               	movlw	35
 17309  0F09  0087               	movwf	7
 17310  0F0A  3018               	movlw	24
 17311  0F0B  0201               	subwf	1,w
 17312  0F0C  0008               	return
 17313  0F0D                     __end_ofPL68:	
 17314  0F0D                     PL70:	
 17315  0F0D  0086               	movwf	6
 17316  0F0E  3023               	movlw	35
 17317  0F0F  0087               	movwf	7
 17318  0F10  303C               	movlw	60
 17319  0F11  0201               	subwf	1,w
 17320  0F12  0008               	return
 17321  0F13                     __end_ofPL70:	
 17322  0F13                     PL72:	
 17323  0F13  0086               	movwf	6
 17324  0F14  3000               	movlw	0
 17325  0F15  0187               	clrf	7
 17326  0F16  3FC0               	movwi [0]fsr1
 17327  0F17  3FC1               	movwi [1]fsr1
 17328  0F18  0008               	return
 17329  0F19                     __end_ofPL72:	
 17330  0F19                     PL78:	
 17331  0F19  083F               	movf	led_para_init@i,w
 17332  0F1A  00B6               	movwf	??_led_para_init
 17333  0F1B  01B7               	clrf	??_led_para_init+1
 17334  0F1C  083E               	movf	led_para_init@j,w
 17335  0F1D  00A2               	movwf	___wmul@multiplier
 17336  0F1E  3005               	movlw	5
 17337  0F1F  01A3               	clrf	___wmul@multiplier+1
 17338  0F20  00A4               	movwf	___wmul@multiplicand
 17339  0F21  01A5               	clrf	___wmul@multiplicand+1
 17340  0F22  0008               	return
 17341  0F23                     __end_ofPL78:	
 17342  0F23                     PL96:	
 17343  0F23  30E8               	movlw	232
 17344  0F24  00B6               	movwf	??_led_para_init
 17345  0F25  3003               	movlw	3
 17346  0F26  00B7               	movwf	??_led_para_init+1
 17347  0F27  0008               	return
 17348  0F28                     __end_ofPL96:	
 17349  0F28                     PL98:	
 17350  0F28  3F40               	moviw [0]fsr1
 17351  0F29  00B6               	movwf	??_led_para_init
 17352  0F2A  3F41               	moviw [1]fsr1
 17353  0F2B  00B7               	movwf	??_led_para_init+1
 17354  0F2C  3003               	movlw	3
 17355  0F2D  0237               	subwf	??_led_para_init+1,w
 17356  0F2E  34E9               	retlw	233
 17357  0F2F                     __end_ofPL98:	
 17358  0F2F                     PL104:	
 17359  0F2F  3F40               	moviw [0]fsr1
 17360  0F30  00B6               	movwf	??_led_para_init
 17361  0F31  3F41               	moviw [1]fsr1
 17362  0F32  00B7               	movwf	??_led_para_init+1
 17363  0F33  3000               	movlw	0
 17364  0F34  0237               	subwf	??_led_para_init+1,w
 17365  0F35  340A               	retlw	10
 17366  0F36                     __end_ofPL104:	
 17367  0F36                     PL106:	
 17368  0F36  300A               	movlw	10
 17369  0F37  00B6               	movwf	??_led_para_init
 17370  0F38  306D               	movlw	109
 17371  0F39  01B7               	clrf	??_led_para_init+1
 17372  0F3A  0086               	movwf	6
 17373  0F3B  3023               	movlw	35
 17374  0F3C  0087               	movwf	7
 17375  0F3D  0008               	return
 17376  0F3E                     __end_ofPL106:	
 17377  0F3E                     PL116:	
 17378  0F3E  30A9               	movlw	169
 17379  0F3F  0086               	movwf	6
 17380  0F40  3023               	movlw	35
 17381  0F41  0087               	movwf	7
 17382  0F42  3004               	movlw	4
 17383  0F43  0201               	subwf	1,w
 17384  0F44  0008               	return
 17385  0F45                     __end_ofPL116:	
 17386  0F45                     PL120:	
 17387  0F45  0086               	movwf	6
 17388  0F46  0837               	movf	??_led_para_init+1,w
 17389  0F47  3D3B               	addwfc	??_led_para_init+5,w
 17390  0F48  0087               	movwf	7
 17391  0F49  3065               	movlw	101
 17392  0F4A  0201               	subwf	1,w
 17393  0F4B  0008               	return
 17394  0F4C                     __end_ofPL120:	
 17395  0F4C                     PL122:	
 17396  0F4C  0836               	movf	??_led_para_init,w
 17397  0F4D  3FC0               	movwi [0]fsr1
 17398  0F4E  0837               	movf	??_led_para_init+1,w
 17399  0F4F  3FC1               	movwi [1]fsr1
 17400  0F50  0008               	return
 17401  0F51                     __end_ofPL122:	
 17402  0F51                     PL124:	
 17403  0F51  306D               	movlw	109
 17404  0F52  0086               	movwf	6
 17405  0F53  3023               	movlw	35
 17406  0F54  0087               	movwf	7
 17407  0F55  0008               	return
 17408  0F56                     __end_ofPL124:	
 17409  0F56                     PL136:	
 17410  0F56  306D               	movlw	109
 17411  0F57  0086               	movwf	6
 17412  0F58  3023               	movlw	35
 17413  0F59  0087               	movwf	7
 17414  0F5A  3455               	retlw	85
 17415  0F5B                     __end_ofPL136:	
 17416  0F5B                     __ptext95:	
 17417 ;; *************** function _led_state_ble_cb *****************
 17418 ;; Defined at:
 17419 ;;		line 974 in file "src/app_led.c"
 17420 ;; Parameters:    Size  Location     Type
 17421 ;;  key             1    9[COMMON] unsigned char 
 17422 ;;  state           1   10[COMMON] enum E8242
 17423 ;; Auto vars:     Size  Location     Type
 17424 ;;		None
 17425 ;; Return value:  Size  Location     Type
 17426 ;;                  1    wreg      void 
 17427 ;; Registers used:
 17428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17429 ;; Tracked objects:
 17430 ;;		On entry : 1F/2
 17431 ;;		On exit  : 1D/0
 17432 ;;		Unchanged: 0/0
 17433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17438 ;;Total ram usage:        2 bytes
 17439 ;; Hardware stack levels used:    1
 17440 ;; Hardware stack levels required when called:    2
 17441 ;; This function calls:
 17442 ;;		_led_state_ble_cont_press_cb
 17443 ;;		_led_state_ble_long_press_cb
 17444 ;;		_led_state_ble_release_cb
 17445 ;;		_led_state_ble_short_press_cb
 17446 ;; This function is called by:
 17447 ;;		_led_touch_cb
 17448 ;; This function uses a non-reentrant model
 17449 ;;
 17450                           
 17451                           
 17452                           ;psect for function _led_state_ble_cb
 17453  0F5B                     _led_state_ble_cb:	
 17454                           
 17455                           ;app_led.c: 976: if(key == 0x01)
 17456                           
 17457                           ;incstack = 0
 17458                           ; Regs used in _led_state_ble_cb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17459  0F5B  0B79               	decfsz	led_state_ble_cb@key,w
 17460  0F5C  0008               	return
 17461  0F5D  087A               	movf	led_state_ble_cb@state,w
 17462                           
 17463                           ; Switch size 1, requested type "space"
 17464                           ; Number of cases is 4, Range of values is 0 to 3
 17465                           ; switch strategies available:
 17466                           ; Name         Instructions Cycles
 17467                           ; simple_byte           13     7 (average)
 17468                           ; direct_byte           14     6 (fixed)
 17469                           ; jumptable            260     6 (fixed)
 17470                           ;	Chosen strategy is simple_byte
 17471  0F5E  3A00               	xorlw	0	; case 0
 17472  0F5F  1903               	skipnz
 17473  0F60  2F6B               	goto	i1l3927
 17474  0F61  3A01               	xorlw	1	; case 1
 17475  0F62  1903               	skipnz
 17476  0F63  2F6C               	goto	i1l3929
 17477  0F64  3A03               	xorlw	3	; case 2
 17478  0F65  1903               	skipnz
 17479  0F66  2F6D               	goto	i1l3931
 17480  0F67  3A01               	xorlw	1	; case 3
 17481  0F68  1903               	skipnz
 17482  0F69  2F6E               	goto	i1l3933
 17483  0F6A  2F6F               	goto	i1l868
 17484  0F6B                     i1l3927:	
 17485                           
 17486                           ;app_led.c: 981: led_state_ble_short_press_cb();
 17487  0F6B  2F73               	ljmp	i1l3867
 17488  0F6C                     i1l3929:	
 17489                           ;app_led.c: 982: break;
 17490                           
 17491                           
 17492                           ;app_led.c: 984: led_state_ble_long_press_cb();
 17493  0F6C  2F71               	ljmp	i1l851
 17494  0F6D                     i1l3931:	
 17495                           ;app_led.c: 985: break;
 17496                           
 17497                           
 17498                           ;app_led.c: 987: led_state_ble_cont_press_cb();
 17499  0F6D  2F70               	ljmp	i1l854
 17500  0F6E                     i1l3933:	
 17501                           ;app_led.c: 988: break;
 17502                           
 17503                           
 17504                           ;app_led.c: 990: led_state_ble_release_cb();
 17505  0F6E  2F72               	ljmp	i1l857
 17506  0F6F                     i1l868:	
 17507  0F6F  0008               	return
 17508  0F70                     __end_of_led_state_ble_cb:	
 17509  0F70                     __ptext126:	
 17510 ;; *************** function _led_state_ble_cont_press_cb *****************
 17511 ;; Defined at:
 17512 ;;		line 970 in file "src/app_led.c"
 17513 ;; Parameters:    Size  Location     Type
 17514 ;;		None
 17515 ;; Auto vars:     Size  Location     Type
 17516 ;;		None
 17517 ;; Return value:  Size  Location     Type
 17518 ;;                  1    wreg      void 
 17519 ;; Registers used:
 17520 ;;		None
 17521 ;; Tracked objects:
 17522 ;;		On entry : 1F/2
 17523 ;;		On exit  : 1F/2
 17524 ;;		Unchanged: 1F/0
 17525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17530 ;;Total ram usage:        0 bytes
 17531 ;; Hardware stack levels used:    1
 17532 ;; This function calls:
 17533 ;;		Nothing
 17534 ;; This function is called by:
 17535 ;;		_led_state_ble_cb
 17536 ;; This function uses a non-reentrant model
 17537 ;;
 17538                           
 17539                           
 17540                           ;psect for function _led_state_ble_cont_press_cb
 17541  0F70                     _led_state_ble_cont_press_cb:	
 17542  0F70                     i1l854:	
 17543                           ;incstack = 0
 17544                           ; Regs used in _led_state_ble_cont_press_cb: []
 17545                           
 17546  0F70  0008               	return
 17547  0F71                     __end_of_led_state_ble_cont_press_cb:	
 17548  0F71                     __ptext125:	
 17549 ;; *************** function _led_state_ble_long_press_cb *****************
 17550 ;; Defined at:
 17551 ;;		line 968 in file "src/app_led.c"
 17552 ;; Parameters:    Size  Location     Type
 17553 ;;		None
 17554 ;; Auto vars:     Size  Location     Type
 17555 ;;		None
 17556 ;; Return value:  Size  Location     Type
 17557 ;;                  1    wreg      void 
 17558 ;; Registers used:
 17559 ;;		None
 17560 ;; Tracked objects:
 17561 ;;		On entry : 1F/2
 17562 ;;		On exit  : 1F/2
 17563 ;;		Unchanged: 1F/0
 17564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17569 ;;Total ram usage:        0 bytes
 17570 ;; Hardware stack levels used:    1
 17571 ;; This function calls:
 17572 ;;		Nothing
 17573 ;; This function is called by:
 17574 ;;		_led_state_ble_cb
 17575 ;; This function uses a non-reentrant model
 17576 ;;
 17577                           
 17578                           
 17579                           ;psect for function _led_state_ble_long_press_cb
 17580  0F71                     _led_state_ble_long_press_cb:	
 17581  0F71                     i1l851:	
 17582                           ;incstack = 0
 17583                           ; Regs used in _led_state_ble_long_press_cb: []
 17584                           
 17585  0F71  0008               	return
 17586  0F72                     __end_of_led_state_ble_long_press_cb:	
 17587  0F72                     __ptext124:	
 17588 ;; *************** function _led_state_ble_release_cb *****************
 17589 ;; Defined at:
 17590 ;;		line 972 in file "src/app_led.c"
 17591 ;; Parameters:    Size  Location     Type
 17592 ;;		None
 17593 ;; Auto vars:     Size  Location     Type
 17594 ;;		None
 17595 ;; Return value:  Size  Location     Type
 17596 ;;                  1    wreg      void 
 17597 ;; Registers used:
 17598 ;;		None
 17599 ;; Tracked objects:
 17600 ;;		On entry : 1F/2
 17601 ;;		On exit  : 1F/2
 17602 ;;		Unchanged: 1F/0
 17603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17608 ;;Total ram usage:        0 bytes
 17609 ;; Hardware stack levels used:    1
 17610 ;; This function calls:
 17611 ;;		Nothing
 17612 ;; This function is called by:
 17613 ;;		_led_state_ble_cb
 17614 ;; This function uses a non-reentrant model
 17615 ;;
 17616                           
 17617                           
 17618                           ;psect for function _led_state_ble_release_cb
 17619  0F72                     _led_state_ble_release_cb:	
 17620  0F72                     i1l857:	
 17621                           ;incstack = 0
 17622                           ; Regs used in _led_state_ble_release_cb: []
 17623                           
 17624  0F72  0008               	return
 17625  0F73                     __end_of_led_state_ble_release_cb:	
 17626  0F73                     __ptext120:	
 17627 ;; *************** function _led_state_ble_short_press_cb *****************
 17628 ;; Defined at:
 17629 ;;		line 960 in file "src/app_led.c"
 17630 ;; Parameters:    Size  Location     Type
 17631 ;;		None
 17632 ;; Auto vars:     Size  Location     Type
 17633 ;;		None
 17634 ;; Return value:  Size  Location     Type
 17635 ;;                  1    wreg      void 
 17636 ;; Registers used:
 17637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17638 ;; Tracked objects:
 17639 ;;		On entry : 1F/2
 17640 ;;		On exit  : 1F/0
 17641 ;;		Unchanged: 0/0
 17642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17645 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17646 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17647 ;;Total ram usage:        1 bytes
 17648 ;; Hardware stack levels used:    1
 17649 ;; Hardware stack levels required when called:    1
 17650 ;; This function calls:
 17651 ;;		i1_led_indicate_off
 17652 ;;		i1_led_prepare_to_save
 17653 ;;		i1_led_turnoff
 17654 ;; This function is called by:
 17655 ;;		_led_state_ble_cb
 17656 ;; This function uses a non-reentrant model
 17657 ;;
 17658                           
 17659                           
 17660                           ;psect for function _led_state_ble_short_press_cb
 17661  0F73                     _led_state_ble_short_press_cb:	
 17662  0F73                     i1l3867:	
 17663                           ;incstack = 0
 17664                           ; Regs used in _led_state_ble_short_press_cb: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 17665                           
 17666                           
 17667                           ;app_led.c: 962: m_led_para.mState++;
 17668  0F73  318B  2389  318C   	fcall	PL14	;call to abstracted procedure
 17669  0F76  00F1               	movwf	??_led_state_ble_short_press_cb
 17670  0F77  0AF1               	incf	??_led_state_ble_short_press_cb,f
 17671  0F78  0801               	movf	1,w
 17672  0F79  0671               	xorwf	??_led_state_ble_short_press_cb,w
 17673  0F7A  39FC               	andlw	-4
 17674  0F7B  0671               	xorwf	??_led_state_ble_short_press_cb,w
 17675  0F7C  0081               	movwf	1
 17676                           
 17677                           ;app_led.c: 963: led_turnoff();
 17678  0F7D  2784  318C         	fcall	i1_led_turnoff
 17679                           
 17680                           ;app_led.c: 964: led_indicate_off();
 17681  0F7F  2783               	fcall	i1_led_indicate_off
 17682                           
 17683                           ;app_led.c: 965: led_prepare_to_save();
 17684  0F80  318B  2358         	fcall	i1_led_prepare_to_save
 17685  0F82  0008               	return
 17686  0F83                     __end_of_led_state_ble_short_press_cb:	
 17687  0F83                     __ptext123:	
 17688 ;; *************** function i1_led_indicate_off *****************
 17689 ;; Defined at:
 17690 ;;		line 710 in file "src/app_led.c"
 17691 ;; Parameters:    Size  Location     Type
 17692 ;;		None
 17693 ;; Auto vars:     Size  Location     Type
 17694 ;;		None
 17695 ;; Return value:  Size  Location     Type
 17696 ;;                  1    wreg      void 
 17697 ;; Registers used:
 17698 ;;		None
 17699 ;; Tracked objects:
 17700 ;;		On entry : 1F/2
 17701 ;;		On exit  : 1F/2
 17702 ;;		Unchanged: 0/0
 17703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17708 ;;Total ram usage:        0 bytes
 17709 ;; Hardware stack levels used:    1
 17710 ;; This function calls:
 17711 ;;		Nothing
 17712 ;; This function is called by:
 17713 ;;		_led_state_ble_short_press_cb
 17714 ;; This function uses a non-reentrant model
 17715 ;;
 17716                           
 17717                           
 17718                           ;psect for function i1_led_indicate_off
 17719  0F83                     i1_led_indicate_off:	
 17720                           
 17721                           ;app_led.c: 712: (LATBbits.LATB6 = 0);
 17722                           
 17723                           ;incstack = 0
 17724                           ; Regs used in i1_led_indicate_off: []
 17725                           
 17726                           ;app_led.c: 713: (LATAbits.LATA1 = 1);
 17727                           
 17728                           ;app_led.c: 714: (LATBbits.LATB7 = 1);
 17729  0F83  2F97               	ljmp	PL150	;call to abstracted procedure
 17730  0F84                     __end_ofi1_led_indicate_off:	
 17731  0F84                     __ptext121:	
 17732 ;; *************** function i1_led_turnoff *****************
 17733 ;; Defined at:
 17734 ;;		line 700 in file "src/app_led.c"
 17735 ;; Parameters:    Size  Location     Type
 17736 ;;		None
 17737 ;; Auto vars:     Size  Location     Type
 17738 ;;  led_turnoff     1    0[COMMON] unsigned char 
 17739 ;; Return value:  Size  Location     Type
 17740 ;;                  1    wreg      void 
 17741 ;; Registers used:
 17742 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17743 ;; Tracked objects:
 17744 ;;		On entry : 1F/2
 17745 ;;		On exit  : 1F/2
 17746 ;;		Unchanged: 1F/0
 17747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17751 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17752 ;;Total ram usage:        1 bytes
 17753 ;; Hardware stack levels used:    1
 17754 ;; This function calls:
 17755 ;;		Nothing
 17756 ;; This function is called by:
 17757 ;;		_led_state_ble_short_press_cb
 17758 ;; This function uses a non-reentrant model
 17759 ;;
 17760                           
 17761                           
 17762                           ;psect for function i1_led_turnoff
 17763  0F84                     i1_led_turnoff:	
 17764                           
 17765                           ;app_led.c: 702: for(uint8_t i = 0; i < 5; i++)
 17766                           
 17767                           ;incstack = 0
 17768                           ; Regs used in i1_led_turnoff: [wreg+fsr1l+fsr1h+status,2+status,0]
 17769  0F84  01F0               	clrf	i1led_turnoff@i
 17770  0F85                     i1l3761:	
 17771                           
 17772                           ;app_led.c: 703: {
 17773                           ;app_led.c: 704: target_bright[i] = 0;
 17774  0F85  3570               	lslf	i1led_turnoff@i,w
 17775  0F86  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 17776  0F87  2713  318C         	fcall	PL72	;call to abstracted procedure
 17777                           
 17778                           ;app_led.c: 705: current_bright[i] = 0;
 17779  0F89  3570               	lslf	i1led_turnoff@i,w
 17780  0F8A  2791  318C         	fcall	PL118	;call to abstracted procedure
 17781  0F8C  0AF0               	incf	i1led_turnoff@i,f
 17782  0F8D  0270               	subwf	i1led_turnoff@i,w
 17783  0F8E  1803               	btfsc	3,0
 17784  0F8F  0008               	return
 17785  0F90  2F85               	goto	i1l3761
 17786  0F91                     __end_ofi1_led_turnoff:	
 17787  0F91                     PL118:	
 17788  0F91  3EDA               	addlw	(low (_current_bright| 0))& (0+255)
 17789  0F92  0086               	movwf	6
 17790  0F93  3000               	movlw	0
 17791  0F94  3FC0               	movwi [0]fsr1
 17792  0F95  3FC1               	movwi [1]fsr1
 17793  0F96  3405               	retlw	5
 17794  0F97                     __end_ofPL118:	
 17795  0F97                     PL150:	
 17796  0F97  130D               	bcf	13,6	;volatile
 17797  0F98  148C               	bsf	12,1	;volatile
 17798  0F99  178D               	bsf	13,7	;volatile
 17799  0F9A  0008               	return
 17800  0F9B                     __end_ofPL150:	
 17801  0F9B                     __ptext54:	
 17802 ;; *************** function _led_increase *****************
 17803 ;; Defined at:
 17804 ;;		line 2148 in file "src/app_led.c"
 17805 ;; Parameters:    Size  Location     Type
 17806 ;;  chn             1    wreg     unsigned char 
 17807 ;;  delt            1   11[BANK0 ] unsigned char 
 17808 ;; Auto vars:     Size  Location     Type
 17809 ;;  chn             1   16[BANK0 ] unsigned char 
 17810 ;; Return value:  Size  Location     Type
 17811 ;;                  1    wreg      unsigned char 
 17812 ;; Registers used:
 17813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17814 ;; Tracked objects:
 17815 ;;		On entry : 1F/3
 17816 ;;		On exit  : 1F/0
 17817 ;;		Unchanged: 0/0
 17818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17819 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17820 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17821 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17822 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17823 ;;Total ram usage:        6 bytes
 17824 ;; Hardware stack levels used:    1
 17825 ;; Hardware stack levels required when called:   10
 17826 ;; This function calls:
 17827 ;;		_increase
 17828 ;;		_led_prepare_to_save
 17829 ;; This function is called by:
 17830 ;;		_ble_decode
 17831 ;; This function uses a non-reentrant model
 17832 ;;
 17833                           
 17834                           
 17835                           ;psect for function _led_increase
 17836  0F9B                     _led_increase:	
 17837                           
 17838                           ;incstack = 0
 17839                           ; Regs used in _led_increase: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17840                           ;led_increase@chn stored from wreg
 17841  0F9B  0020               	movlb	0	; select bank0
 17842  0F9C  00B0               	movwf	led_increase@chn
 17843                           
 17844                           ;app_led.c: 2150: if(led_run_para.mFind || led_run_para.mPrev || m_led_para.ble_para.mMo
      +                          de != 0 || m_led_para.ble_para.manual_para.mOn == 0 || chn >= 5)
 17845  0F9D  1C5C               	btfss	_led_run_para,0
 17846  0F9E  18DC               	btfsc	_led_run_para,1
 17847  0F9F  0008               	return
 17848  0FA0  26AD  318C         	fcall	PL10	;call to abstracted procedure
 17849  0FA2  1D03               	skipz
 17850  0FA3  0008               	return
 17851  0FA4  318A  2218  318C   	fcall	PL52	;call to abstracted procedure
 17852  0FA7  1C01               	btfss	1,0
 17853  0FA8  0008               	return
 17854  0FA9  3005               	movlw	5
 17855  0FAA  0230               	subwf	led_increase@chn,w
 17856  0FAB  1803               	btfsc	3,0
 17857  0FAC  0008               	return
 17858                           
 17859                           ;app_led.c: 2153: }
 17860                           ;app_led.c: 2160: increase(&m_led_para.ble_para.manual_para.mBright[chn], delt, 1000 );
 17861  0FAD  3076               	movlw	118
 17862  0FAE  00A2               	movwf	increase@psrc
 17863  0FAF  3023               	movlw	35
 17864  0FB0  00A3               	movwf	increase@psrc+1
 17865  0FB1  0830               	movf	led_increase@chn,w
 17866  0FB2  00AC               	movwf	??_led_increase
 17867  0FB3  01AD               	clrf	??_led_increase+1
 17868  0FB4  35AC               	lslf	??_led_increase,f
 17869  0FB5  0DAD               	rlf	??_led_increase+1,f
 17870  0FB6  082C               	movf	??_led_increase,w
 17871  0FB7  07A2               	addwf	increase@psrc,f
 17872  0FB8  082D               	movf	??_led_increase+1,w
 17873  0FB9  3DA3               	addwfc	increase@psrc+1,f
 17874  0FBA  082B               	movf	led_increase@delt,w
 17875  0FBB  00A4               	movwf	increase@delt
 17876  0FBC  30E8               	movlw	232
 17877  0FBD  00A5               	movwf	increase@max
 17878  0FBE  3003               	movlw	3
 17879  0FBF  00A6               	movwf	increase@max+1
 17880  0FC0  27D7  318C         	fcall	_increase
 17881                           
 17882                           ;app_led.c: 2161: target_bright[chn] = m_led_para.ble_para.manual_para.mBright[chn];
 17883  0FC2  0830               	movf	led_increase@chn,w
 17884  0FC3  00AC               	movwf	??_led_increase
 17885  0FC4  3076               	movlw	118
 17886  0FC5  01AD               	clrf	??_led_increase+1
 17887  0FC6  35AC               	lslf	??_led_increase,f
 17888  0FC7  0DAD               	rlf	??_led_increase+1,f
 17889  0FC8  00AE               	movwf	??_led_increase+2
 17890  0FC9  3023               	movlw	35
 17891  0FCA  00AF               	movwf	??_led_increase+3
 17892  0FCB  082C               	movf	??_led_increase,w
 17893  0FCC  072E               	addwf	??_led_increase+2,w
 17894  0FCD  0086               	movwf	6
 17895  0FCE  082D               	movf	??_led_increase+1,w
 17896  0FCF  3D2F               	addwfc	??_led_increase+3,w
 17897  0FD0  0087               	movwf	7
 17898  0FD1  3530               	lslf	led_increase@chn,w
 17899  0FD2  3EE4               	addlw	(low (_target_bright| 0))& (0+255)
 17900  0FD3  0084               	movwf	4
 17901  0FD4  27FA               	fcall	PL6	;call to abstracted procedure
 17902                           
 17903                           ;app_led.c: 2162: led_prepare_to_save();
 17904  0FD5  318B  2BE0         	ljmp	PL142
 17905  0FD7                     __end_of_led_increase:	
 17906  0FD7                     __ptext55:	
 17907 ;; *************** function _increase *****************
 17908 ;; Defined at:
 17909 ;;		line 3 in file "src/app_util.c"
 17910 ;; Parameters:    Size  Location     Type
 17911 ;;  psrc            2    2[BANK0 ] const PTR unsigned int 
 17912 ;;		 -> m_led_para.ble_para.manual_para.mBright(10), m_led_para.ble_para.manual_para(32), m_led_para(131), 
 17913 ;;  delt            1    4[BANK0 ] const unsigned char 
 17914 ;;  max             2    5[BANK0 ] const unsigned int 
 17915 ;; Auto vars:     Size  Location     Type
 17916 ;;		None
 17917 ;; Return value:  Size  Location     Type
 17918 ;;                  1    wreg      void 
 17919 ;; Registers used:
 17920 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17921 ;; Tracked objects:
 17922 ;;		On entry : 1F/0
 17923 ;;		On exit  : 1F/0
 17924 ;;		Unchanged: 0/0
 17925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17926 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17928 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17929 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17930 ;;Total ram usage:        9 bytes
 17931 ;; Hardware stack levels used:    1
 17932 ;; Hardware stack levels required when called:    9
 17933 ;; This function calls:
 17934 ;;		Nothing
 17935 ;; This function is called by:
 17936 ;;		_led_increase
 17937 ;; This function uses a non-reentrant model
 17938 ;;
 17939                           
 17940                           
 17941                           ;psect for function _increase
 17942  0FD7                     _increase:	
 17943                           
 17944                           ;app_util.c: 5: if((*psrc) + delt < max)
 17945                           
 17946                           ;incstack = 0
 17947                           ; Regs used in _increase: [wreg+fsr1l+fsr1h+status,2+status,0]
 17948  0FD7  0822               	movf	increase@psrc,w
 17949  0FD8  0086               	movwf	6
 17950  0FD9  0823               	movf	increase@psrc+1,w
 17951  0FDA  0087               	movwf	7
 17952  0FDB  3F40               	moviw [0]fsr1
 17953  0FDC  00A7               	movwf	??_increase
 17954  0FDD  3F41               	moviw [1]fsr1
 17955  0FDE  00A8               	movwf	??_increase+1
 17956  0FDF  0824               	movf	increase@delt,w
 17957  0FE0  0727               	addwf	??_increase,w
 17958  0FE1  00A9               	movwf	??_increase+2
 17959  0FE2  0828               	movf	??_increase+1,w
 17960  0FE3  1803               	skipnc
 17961  0FE4  0A28               	incf	??_increase+1,w
 17962  0FE5  00AA               	movwf	??_increase+3
 17963  0FE6  0826               	movf	increase@max+1,w
 17964  0FE7  022A               	subwf	??_increase+3,w
 17965  0FE8  1D03               	skipz
 17966  0FE9  2FEC               	goto	u2925
 17967  0FEA  0825               	movf	increase@max,w
 17968  0FEB  0229               	subwf	??_increase+2,w
 17969  0FEC                     u2925:	
 17970                           
 17971                           ;app_util.c: 6: {
 17972                           ;app_util.c: 7: (*psrc) += delt;
 17973  0FEC  0822               	movf	increase@psrc,w
 17974  0FED  0086               	movwf	6
 17975  0FEE  0823               	movf	increase@psrc+1,w
 17976  0FEF  0087               	movwf	7
 17977  0FF0  1803               	skipnc
 17978  0FF1  2FF5               	goto	L18
 17979  0FF2  0824               	movf	increase@delt,w
 17980                           
 17981                           ;app_util.c: 8: }
 17982  0FF3  318B  2BCB         	ljmp	PL126	;call to abstracted procedure
 17983  0FF5                     L18:	
 17984                           ;app_util.c: 9: else
 17985                           ;app_util.c: 10: {
 17986                           ;app_util.c: 11: (*psrc) = max;
 17987                           
 17988  0FF5  0825               	movf	increase@max,w
 17989  0FF6  3FC0               	movwi [0]fsr1
 17990  0FF7  0826               	movf	increase@max+1,w
 17991  0FF8  3FC1               	movwi [1]fsr1
 17992  0FF9  0008               	return
 17993  0FFA                     __end_of_increase:	
 17994  0FFA                     PL6:	
 17995  0FFA  0185               	clrf	5
 17996  0FFB  3F40               	moviw [0]fsr1
 17997  0FFC  3F80               	movwi [0]fsr0
 17998  0FFD  3F41               	moviw [1]fsr1
 17999  0FFE  3F81               	movwi [1]fsr0
 18000  0FFF  0008               	return
 18001  1000                     __end_ofPL6:	
 18002                           
 18003                           	psect	text127
 18004  1DF5                     __ptext127:	
 18005 ;; *************** function _tmr0_isr *****************
 18006 ;; Defined at:
 18007 ;;		line 29 in file "src/drv_tmr.c"
 18008 ;; Parameters:    Size  Location     Type
 18009 ;;		None
 18010 ;; Auto vars:     Size  Location     Type
 18011 ;;		None
 18012 ;; Return value:  Size  Location     Type
 18013 ;;                  1    wreg      void 
 18014 ;; Registers used:
 18015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18016 ;; Tracked objects:
 18017 ;;		On entry : 1F/0
 18018 ;;		On exit  : 0/0
 18019 ;;		Unchanged: 0/0
 18020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18025 ;;Total ram usage:        0 bytes
 18026 ;; Hardware stack levels used:    1
 18027 ;; Hardware stack levels required when called:    3
 18028 ;; This function calls:
 18029 ;;		Absolute function
 18030 ;;		_rtc_process
 18031 ;; This function is called by:
 18032 ;;		_app_isr
 18033 ;; This function uses a non-reentrant model
 18034 ;;
 18035                           
 18036                           
 18037                           ;psect for function _tmr0_isr
 18038  1DF5                     _tmr0_isr:	
 18039                           
 18040                           ;drv_tmr.c: 31: PIR0bits.TMR0IF = 0;
 18041                           
 18042                           ;incstack = 0
 18043                           ; Regs used in _tmr0_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18044  1DF5  1290               	bcf	16,5	;volatile
 18045                           
 18046                           ;drv_tmr.c: 32: if(tmr0_isr_cb != (0))
 18047  1DF6  086B               	movf	_tmr0_isr_cb,w
 18048  1DF7  046C               	iorwf	_tmr0_isr_cb+1,w
 18049  1DF8  1903               	btfsc	3,2
 18050  1DF9  0008               	return
 18051                           
 18052                           ;drv_tmr.c: 33: {
 18053                           ;drv_tmr.c: 34: tmr0_isr_cb();
 18054  1DFA  086C               	movf	_tmr0_isr_cb+1,w
 18055  1DFB  008A               	movwf	10
 18056  1DFC  086B               	movf	_tmr0_isr_cb,w
 18057  1DFD  000A               	callw
 18058  1DFE  319D               	pagesel	$
 18059  1DFF  0008               	return
 18060  1E00                     __end_of_tmr0_isr:	
 18061                           
 18062                           	psect	text128
 18063  0735                     __ptext128:	
 18064 ;; *************** function _rtc_process *****************
 18065 ;; Defined at:
 18066 ;;		line 52 in file "src/app_rtc.c"
 18067 ;; Parameters:    Size  Location     Type
 18068 ;;		None
 18069 ;; Auto vars:     Size  Location     Type
 18070 ;;		None
 18071 ;; Return value:  Size  Location     Type
 18072 ;;                  1    wreg      void 
 18073 ;; Registers used:
 18074 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18075 ;; Tracked objects:
 18076 ;;		On entry : 1F/0
 18077 ;;		On exit  : 1F/0
 18078 ;;		Unchanged: 0/0
 18079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18084 ;;Total ram usage:        0 bytes
 18085 ;; Hardware stack levels used:    1
 18086 ;; Hardware stack levels required when called:    2
 18087 ;; This function calls:
 18088 ;;		_rtc_is_leap_year
 18089 ;; This function is called by:
 18090 ;;		_app_init
 18091 ;;		_tmr0_isr
 18092 ;; This function uses a non-reentrant model
 18093 ;;
 18094                           
 18095                           
 18096                           ;psect for function _rtc_process
 18097  0735                     _rtc_process:	
 18098  0735  303C               	movlw	60
 18099                           
 18100                           ;app_rtc.c: 54: m_current_time.second++;
 18101                           
 18102                           ;incstack = 0
 18103                           ; Regs used in _rtc_process: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18104  0736  0ADB               	incf	_m_current_time+6,f
 18105                           
 18106                           ;app_rtc.c: 55: if(m_current_time.second >= 60)
 18107  0737  025B               	subwf	_m_current_time+6,w
 18108  0738  1C03               	skipc
 18109  0739  2F7B               	goto	i1l4967
 18110  073A  303C               	movlw	60
 18111                           
 18112                           ;app_rtc.c: 56: {
 18113                           ;app_rtc.c: 57: m_current_time.second = 0;
 18114  073B  01DB               	clrf	_m_current_time+6
 18115                           
 18116                           ;app_rtc.c: 58: m_current_time.minute++;
 18117  073C  0ADA               	incf	_m_current_time+5,f
 18118                           
 18119                           ;app_rtc.c: 59: if(m_current_time.minute >= 60)
 18120  073D  025A               	subwf	_m_current_time+5,w
 18121  073E  1C03               	skipc
 18122  073F  2F7B               	goto	i1l4967
 18123  0740  3018               	movlw	24
 18124                           
 18125                           ;app_rtc.c: 60: {
 18126                           ;app_rtc.c: 61: m_current_time.minute = 0;
 18127  0741  01DA               	clrf	_m_current_time+5
 18128                           
 18129                           ;app_rtc.c: 62: m_current_time.hour++;
 18130  0742  0AD9               	incf	_m_current_time+4,f
 18131                           
 18132                           ;app_rtc.c: 63: if(m_current_time.hour >= 24)
 18133  0743  0259               	subwf	_m_current_time+4,w
 18134  0744  1C03               	skipc
 18135  0745  2F7B               	goto	i1l4967
 18136  0746  3007               	movlw	7
 18137                           
 18138                           ;app_rtc.c: 64: {
 18139                           ;app_rtc.c: 65: m_current_time.hour = 0;
 18140  0747  01D9               	clrf	_m_current_time+4
 18141                           
 18142                           ;app_rtc.c: 66: m_current_time.day++;
 18143  0748  0AD7               	incf	_m_current_time+2,f
 18144                           
 18145                           ;app_rtc.c: 67: m_current_time.week++;
 18146  0749  0AD8               	incf	_m_current_time+3,f
 18147                           
 18148                           ;app_rtc.c: 68: if(m_current_time.week > 6)
 18149  074A  0258               	subwf	_m_current_time+3,w
 18150  074B  1803               	btfsc	3,0
 18151                           
 18152                           ;app_rtc.c: 69: {
 18153                           ;app_rtc.c: 70: m_current_time.week = 0;
 18154  074C  01D8               	clrf	_m_current_time+3
 18155                           
 18156                           ;app_rtc.c: 71: }
 18157                           ;app_rtc.c: 72: if(rtc_is_leap_year(m_current_time.year + 2000))
 18158  074D  0855               	movf	_m_current_time,w
 18159  074E  00F5               	movwf	rtc_is_leap_year@year
 18160  074F  30D0               	movlw	208
 18161  0750  01F6               	clrf	rtc_is_leap_year@year+1
 18162  0751  07F5               	addwf	rtc_is_leap_year@year,f
 18163  0752  3007               	movlw	7
 18164  0753  3DF6               	addwfc	rtc_is_leap_year@year+1,f
 18165  0754  277D  3187         	fcall	_rtc_is_leap_year
 18166  0756  3A00               	xorlw	0
 18167  0757  1903               	skipnz
 18168  0758  2F5B               	goto	i1l4951
 18169                           
 18170                           ;app_rtc.c: 73: {
 18171                           ;app_rtc.c: 74: MONTH_DAY[1] = 29;
 18172  0759  301D               	movlw	29
 18173  075A  2F5C               	goto	L27
 18174  075B                     i1l4951:	
 18175                           ;app_rtc.c: 75: }
 18176                           
 18177                           
 18178                           ;app_rtc.c: 76: else
 18179                           ;app_rtc.c: 77: {
 18180                           ;app_rtc.c: 78: MONTH_DAY[1] = 28;
 18181  075B  301C               	movlw	28
 18182  075C                     L27:	
 18183  075C  0022               	movlb	2	; select bank2
 18184  075D  00B2               	movwf	(_MONTH_DAY^(0+256)+1)
 18185                           
 18186                           ;app_rtc.c: 79: }
 18187                           ;app_rtc.c: 80: if(m_current_time.month > 12 || m_current_time.month == 0)
 18188  075E  300D               	movlw	13
 18189  075F  0020               	movlb	0	; select bank0
 18190  0760  0256               	subwf	_m_current_time+1,w
 18191  0761  1803               	skipnc
 18192  0762  2F66               	goto	i1l266
 18193  0763  0856               	movf	_m_current_time+1,w
 18194  0764  1D03               	btfss	3,2
 18195  0765  2F68               	goto	i1l4955
 18196  0766                     i1l266:	
 18197                           
 18198                           ;app_rtc.c: 81: {
 18199                           ;app_rtc.c: 82: m_current_time.month = 1;
 18200  0766  01D6               	clrf	_m_current_time+1
 18201  0767  0AD6               	incf	_m_current_time+1,f
 18202  0768                     i1l4955:	
 18203                           
 18204                           ;app_rtc.c: 83: }
 18205                           ;app_rtc.c: 84: if(m_current_time.day > MONTH_DAY[m_current_time.month - 1])
 18206  0768  0856               	movf	_m_current_time+1,w
 18207  0769  3E30               	addlw	(low ((_MONTH_DAY| (0+256)+255)))& (0+255)
 18208  076A  0086               	movwf	6
 18209  076B  3001               	movlw	1	; select bank2/3
 18210  076C  0087               	movwf	7
 18211  076D  0857               	movf	_m_current_time+2,w
 18212  076E  0201               	subwf	1,w
 18213  076F  1803               	skipnc
 18214  0770  2F7B               	goto	i1l4967
 18215  0771  300D               	movlw	13
 18216                           
 18217                           ;app_rtc.c: 85: {
 18218                           ;app_rtc.c: 86: m_current_time.day = 1;
 18219  0772  01D7               	clrf	_m_current_time+2
 18220  0773  0AD7               	incf	_m_current_time+2,f
 18221                           
 18222                           ;app_rtc.c: 87: m_current_time.month++;
 18223  0774  0AD6               	incf	_m_current_time+1,f
 18224                           
 18225                           ;app_rtc.c: 88: if(m_current_time.month > 12)
 18226  0775  0256               	subwf	_m_current_time+1,w
 18227  0776  1C03               	skipc
 18228  0777  2F7B               	goto	i1l4967
 18229                           
 18230                           ;app_rtc.c: 89: {
 18231                           ;app_rtc.c: 90: m_current_time.month = 1;
 18232  0778  01D6               	clrf	_m_current_time+1
 18233  0779  0AD6               	incf	_m_current_time+1,f
 18234                           
 18235                           ;app_rtc.c: 91: m_current_time.year++;
 18236  077A  0AD5               	incf	_m_current_time,f
 18237  077B                     i1l4967:	
 18238                           
 18239                           ;app_rtc.c: 92: }
 18240                           ;app_rtc.c: 93: }
 18241                           ;app_rtc.c: 94: }
 18242                           ;app_rtc.c: 95: }
 18243                           ;app_rtc.c: 96: }
 18244                           ;app_rtc.c: 97: rtc_status.fSec = 1;
 18245  077B  1464               	bsf	_rtc_status,0
 18246  077C  0008               	return
 18247  077D                     __end_of_rtc_process:	
 18248  077D                     __ptext129:	
 18249 ;; *************** function _rtc_is_leap_year *****************
 18250 ;; Defined at:
 18251 ;;		line 22 in file "src/app_rtc.c"
 18252 ;; Parameters:    Size  Location     Type
 18253 ;;  year            2    5[COMMON] unsigned int 
 18254 ;; Auto vars:     Size  Location     Type
 18255 ;;		None
 18256 ;; Return value:  Size  Location     Type
 18257 ;;                  1    wreg      unsigned char 
 18258 ;; Registers used:
 18259 ;;		wreg, status,2, status,0, pclath, cstack
 18260 ;; Tracked objects:
 18261 ;;		On entry : 1F/0
 18262 ;;		On exit  : 0/0
 18263 ;;		Unchanged: 0/0
 18264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18269 ;;Total ram usage:        2 bytes
 18270 ;; Hardware stack levels used:    1
 18271 ;; Hardware stack levels required when called:    1
 18272 ;; This function calls:
 18273 ;;		___lwmod
 18274 ;; This function is called by:
 18275 ;;		_rtc_process
 18276 ;; This function uses a non-reentrant model
 18277 ;;
 18278                           
 18279                           
 18280                           ;psect for function _rtc_is_leap_year
 18281  077D                     _rtc_is_leap_year:	
 18282                           
 18283                           ;app_rtc.c: 24: if((year & 0x03) == 0)
 18284                           
 18285                           ;incstack = 0
 18286                           ; Regs used in _rtc_is_leap_year: [wreg+status,2+status,0+pclath+cstack]
 18287  077D  0875               	movf	rtc_is_leap_year@year,w
 18288  077E  3903               	andlw	3
 18289  077F  1D03               	btfss	3,2
 18290  0780  3400               	retlw	0
 18291                           
 18292                           ;app_rtc.c: 25: {
 18293                           ;app_rtc.c: 26: if(year % 100 == 0)
 18294  0781  3064               	movlw	100
 18295  0782  00F0               	movwf	___lwmod@divisor
 18296  0783  01F1               	clrf	___lwmod@divisor+1
 18297  0784  27B9  3187         	fcall	PL166	;call to abstracted procedure
 18298  0786  2799  3187         	fcall	___lwmod
 18299  0788  0870               	movf	?___lwmod,w
 18300  0789  0471               	iorwf	?___lwmod+1,w
 18301  078A  1D03               	btfss	3,2
 18302  078B  3401               	retlw	1
 18303                           
 18304                           ;app_rtc.c: 27: {
 18305                           ;app_rtc.c: 28: if(year % 400 == 0)
 18306  078C  3090               	movlw	144
 18307  078D  00F0               	movwf	___lwmod@divisor
 18308  078E  3001               	movlw	1
 18309  078F  00F1               	movwf	___lwmod@divisor+1
 18310  0790  27B9  3187         	fcall	PL166	;call to abstracted procedure
 18311  0792  2799  3187         	fcall	___lwmod
 18312  0794  0870               	movf	?___lwmod,w
 18313  0795  0471               	iorwf	?___lwmod+1,w
 18314  0796  1903               	btfsc	3,2
 18315                           
 18316                           ;app_rtc.c: 29: {
 18317                           ;app_rtc.c: 30: return 1;
 18318  0797  3401               	retlw	1
 18319                           
 18320                           ;app_rtc.c: 36: }
 18321                           ;app_rtc.c: 37: }
 18322                           ;app_rtc.c: 38: return 0;
 18323  0798  3400               	retlw	0
 18324  0799                     __end_of_rtc_is_leap_year:	
 18325  0799                     __ptext130:	
 18326 ;; *************** function ___lwmod *****************
 18327 ;; Defined at:
 18328 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwmod.c"
 18329 ;; Parameters:    Size  Location     Type
 18330 ;;  divisor         2    0[COMMON] unsigned int 
 18331 ;;  dividend        2    2[COMMON] unsigned int 
 18332 ;; Auto vars:     Size  Location     Type
 18333 ;;  counter         1    4[COMMON] unsigned char 
 18334 ;; Return value:  Size  Location     Type
 18335 ;;                  2    0[COMMON] unsigned int 
 18336 ;; Registers used:
 18337 ;;		wreg, status,2, status,0
 18338 ;; Tracked objects:
 18339 ;;		On entry : 0/0
 18340 ;;		On exit  : 0/0
 18341 ;;		Unchanged: 0/0
 18342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18343 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18346 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18347 ;;Total ram usage:        5 bytes
 18348 ;; Hardware stack levels used:    1
 18349 ;; This function calls:
 18350 ;;		Nothing
 18351 ;; This function is called by:
 18352 ;;		_rtc_is_leap_year
 18353 ;; This function uses a non-reentrant model
 18354 ;;
 18355                           
 18356                           
 18357                           ;psect for function ___lwmod
 18358  0799                     ___lwmod:	
 18359                           
 18360                           ;incstack = 0
 18361                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 18362  0799  0870               	movf	___lwmod@divisor,w
 18363  079A  0471               	iorwf	___lwmod@divisor+1,w
 18364  079B  1903               	btfsc	3,2
 18365  079C  2FB4               	goto	i1l4243
 18366  079D  01F4               	clrf	___lwmod@counter
 18367  079E                     L28:	
 18368  079E  0AF4               	incf	___lwmod@counter,f
 18369  079F  1BF1               	btfsc	___lwmod@divisor+1,7
 18370  07A0  2FA4               	goto	i1l4235
 18371  07A1  35F0               	lslf	___lwmod@divisor,f
 18372  07A2  0DF1               	rlf	___lwmod@divisor+1,f
 18373  07A3  2F9E               	goto	L28
 18374  07A4                     i1l4235:	
 18375  07A4  0871               	movf	___lwmod@divisor+1,w
 18376  07A5  0273               	subwf	___lwmod@dividend+1,w
 18377  07A6  1D03               	skipz
 18378  07A7  2FAA               	goto	u318_25
 18379  07A8  0870               	movf	___lwmod@divisor,w
 18380  07A9  0272               	subwf	___lwmod@dividend,w
 18381  07AA                     u318_25:	
 18382  07AA  1C03               	skipc
 18383  07AB  2FB0               	goto	i1l4239
 18384  07AC  0870               	movf	___lwmod@divisor,w
 18385  07AD  02F2               	subwf	___lwmod@dividend,f
 18386  07AE  0871               	movf	___lwmod@divisor+1,w
 18387  07AF  3BF3               	subwfb	___lwmod@dividend+1,f
 18388  07B0                     i1l4239:	
 18389  07B0  36F1               	lsrf	___lwmod@divisor+1,f
 18390  07B1  0CF0               	rrf	___lwmod@divisor,f
 18391  07B2  0BF4               	decfsz	___lwmod@counter,f
 18392  07B3  2FA4               	goto	i1l4235
 18393  07B4                     i1l4243:	
 18394  07B4  0873               	movf	___lwmod@dividend+1,w
 18395  07B5  00F1               	movwf	?___lwmod+1
 18396  07B6  0872               	movf	___lwmod@dividend,w
 18397  07B7  00F0               	movwf	?___lwmod
 18398  07B8  0008               	return
 18399  07B9                     __end_of___lwmod:	
 18400  07B9                     PL166:	
 18401  07B9  0876               	movf	rtc_is_leap_year@year+1,w
 18402  07BA  00F3               	movwf	___lwmod@dividend+1
 18403  07BB  0875               	movf	rtc_is_leap_year@year,w
 18404  07BC  00F2               	movwf	___lwmod@dividend
 18405  07BD  0008               	return
 18406  07BE                     __end_ofPL166:	
 18407                           
 18408                           	psect	text131
 18409  1E53                     __ptext131:	
 18410 ;; *************** function _eusart_transmit_isr *****************
 18411 ;; Defined at:
 18412 ;;		line 52 in file "src/drv_eusart.c"
 18413 ;; Parameters:    Size  Location     Type
 18414 ;;		None
 18415 ;; Auto vars:     Size  Location     Type
 18416 ;;		None
 18417 ;; Return value:  Size  Location     Type
 18418 ;;                  1    wreg      void 
 18419 ;; Registers used:
 18420 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18421 ;; Tracked objects:
 18422 ;;		On entry : 1F/0
 18423 ;;		On exit  : 1C/0
 18424 ;;		Unchanged: 0/0
 18425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18430 ;;Total ram usage:        0 bytes
 18431 ;; Hardware stack levels used:    1
 18432 ;; This function calls:
 18433 ;;		Nothing
 18434 ;; This function is called by:
 18435 ;;		_app_isr
 18436 ;; This function uses a non-reentrant model
 18437 ;;
 18438                           
 18439                           
 18440                           ;psect for function _eusart_transmit_isr
 18441  1E53                     _eusart_transmit_isr:	
 18442                           
 18443                           ;drv_eusart.c: 54: if(sizeof(tx_buf) > tx_remain)
 18444                           
 18445                           ;incstack = 0
 18446                           ; Regs used in _eusart_transmit_isr: [wreg+fsr1l+fsr1h+status,2+status,0]
 18447  1E53  3040               	movlw	64
 18448  1E54  0022               	movlb	2	; select bank2
 18449  1E55  025B               	subwf	_tx_remain^(0+256),w
 18450  1E56  1803               	skipnc
 18451  1E57  2E6A               	goto	i1l192
 18452                           
 18453                           ;drv_eusart.c: 55: {
 18454                           ;drv_eusart.c: 56: TXREG = tx_buf[tx_tail++];
 18455  1E58  0020               	movlb	0	; select bank0
 18456  1E59  086A               	movf	_tx_tail,w
 18457  1E5A  3E20               	addlw	(low (_tx_buf| (0+512)))& (0+255)
 18458  1E5B  0086               	movwf	6
 18459  1E5C  3002               	movlw	2	; select bank4/5
 18460  1E5D  0087               	movwf	7
 18461  1E5E  0801               	movf	1,w
 18462  1E5F  0023               	movlb	3	; select bank3
 18463  1E60  009A               	movwf	26	;volatile
 18464  1E61  0020               	movlb	0	; select bank0
 18465  1E62  3040               	movlw	64
 18466  1E63  0AEA               	incf	_tx_tail,f
 18467                           
 18468                           ;drv_eusart.c: 57: if(sizeof(tx_buf) <= tx_tail)
 18469  1E64  026A               	subwf	_tx_tail,w
 18470  1E65  1803               	btfsc	3,0
 18471                           
 18472                           ;drv_eusart.c: 58: {
 18473                           ;drv_eusart.c: 59: tx_tail = 0;
 18474  1E66  01EA               	clrf	_tx_tail
 18475                           
 18476                           ;drv_eusart.c: 60: }
 18477                           ;drv_eusart.c: 61: tx_remain++;
 18478  1E67  0022               	movlb	2	; select bank2
 18479  1E68  0ADB               	incf	_tx_remain^(0+256),f
 18480                           
 18481                           ;drv_eusart.c: 62: }
 18482  1E69  0008               	return
 18483  1E6A                     i1l192:	
 18484                           
 18485                           ;drv_eusart.c: 63: else
 18486                           ;drv_eusart.c: 64: {
 18487                           ;drv_eusart.c: 65: PIE1bits.TXIE = 0;
 18488  1E6A  0021               	movlb	1	; select bank1
 18489  1E6B  1211               	bcf	17,4	;volatile
 18490  1E6C  0008               	return
 18491  1E6D                     __end_of_eusart_transmit_isr:	
 18492                           
 18493                           	psect	text132
 18494  1E3D                     __ptext132:	
 18495 ;; *************** function _eusart_receive_isr *****************
 18496 ;; Defined at:
 18497 ;;		line 69 in file "src/drv_eusart.c"
 18498 ;; Parameters:    Size  Location     Type
 18499 ;;		None
 18500 ;; Auto vars:     Size  Location     Type
 18501 ;;  rcv             1    1[COMMON] unsigned char 
 18502 ;; Return value:  Size  Location     Type
 18503 ;;                  1    wreg      void 
 18504 ;; Registers used:
 18505 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18506 ;; Tracked objects:
 18507 ;;		On entry : 1F/0
 18508 ;;		On exit  : 0/0
 18509 ;;		Unchanged: 0/0
 18510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18514 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18515 ;;Total ram usage:        1 bytes
 18516 ;; Hardware stack levels used:    1
 18517 ;; Hardware stack levels required when called:    1
 18518 ;; This function calls:
 18519 ;;		Absolute function
 18520 ;;		_ble_receive
 18521 ;; This function is called by:
 18522 ;;		_app_isr
 18523 ;; This function uses a non-reentrant model
 18524 ;;
 18525                           
 18526                           
 18527                           ;psect for function _eusart_receive_isr
 18528  1E3D                     _eusart_receive_isr:	
 18529                           
 18530                           ;drv_eusart.c: 71: if(RC1STAbits.FERR || RC1STAbits.OERR)
 18531                           
 18532                           ;incstack = 0
 18533                           ; Regs used in _eusart_receive_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18534  1E3D  0023               	movlb	3	; select bank3
 18535  1E3E  191D               	btfsc	29,2	;volatile
 18536  1E3F  2E42               	goto	i1l200
 18537  1E40  1C9D               	btfss	29,1	;volatile
 18538  1E41  2E44               	goto	i1l5677
 18539  1E42                     i1l200:	
 18540                           
 18541                           ;drv_eusart.c: 72: {
 18542                           ;drv_eusart.c: 73: RC1STAbits.SPEN = 0;
 18543  1E42  139D               	bcf	29,7	;volatile
 18544                           
 18545                           ;drv_eusart.c: 74: RC1STAbits.SPEN = 1;
 18546  1E43  179D               	bsf	29,7	;volatile
 18547  1E44                     i1l5677:	
 18548                           
 18549                           ;drv_eusart.c: 75: }
 18550                           ;drv_eusart.c: 76: uint8_t rcv = RCREG;
 18551  1E44  0819               	movf	25,w	;volatile
 18552  1E45  00F1               	movwf	eusart_receive_isr@rcv
 18553                           
 18554                           ;drv_eusart.c: 77: if(eusart_rcv_cb != (0))
 18555  1E46  0022               	movlb	2	; select bank2
 18556  1E47  0859               	movf	_eusart_rcv_cb^(0+256),w
 18557  1E48  045A               	iorwf	(_eusart_rcv_cb+1)^(0+256),w
 18558  1E49  1903               	btfsc	3,2
 18559  1E4A  0008               	return
 18560                           
 18561                           ;drv_eusart.c: 78: {
 18562                           ;drv_eusart.c: 79: eusart_rcv_cb(rcv);
 18563  1E4B  0871               	movf	eusart_receive_isr@rcv,w
 18564  1E4C  00F0               	movwf	ble_receive@rcv
 18565  1E4D  085A               	movf	(_eusart_rcv_cb+1)^(0+256),w
 18566  1E4E  008A               	movwf	10
 18567  1E4F  0859               	movf	_eusart_rcv_cb^(0+256),w
 18568  1E50  000A               	callw
 18569  1E51  319E               	pagesel	$
 18570  1E52  0008               	return
 18571  1E53                     __end_of_eusart_receive_isr:	
 18572                           
 18573                           	psect	text133
 18574  1E18                     __ptext133:	
 18575 ;; *************** function _ble_receive *****************
 18576 ;; Defined at:
 18577 ;;		line 273 in file "src/app_ble.c"
 18578 ;; Parameters:    Size  Location     Type
 18579 ;;  rcv             1    0[COMMON] unsigned char 
 18580 ;; Auto vars:     Size  Location     Type
 18581 ;;		None
 18582 ;; Return value:  Size  Location     Type
 18583 ;;                  1    wreg      void 
 18584 ;; Registers used:
 18585 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18586 ;; Tracked objects:
 18587 ;;		On entry : 1F/2
 18588 ;;		On exit  : 1F/0
 18589 ;;		Unchanged: 0/0
 18590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18591 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18595 ;;Total ram usage:        1 bytes
 18596 ;; Hardware stack levels used:    1
 18597 ;; This function calls:
 18598 ;;		Nothing
 18599 ;; This function is called by:
 18600 ;;		_app_init
 18601 ;;		_eusart_receive_isr
 18602 ;; This function uses a non-reentrant model
 18603 ;;
 18604                           
 18605                           
 18606                           ;psect for function _ble_receive
 18607  1E18                     _ble_receive:	
 18608                           
 18609                           ;app_ble.c: 275: rx_buf[index++] = rcv;
 18610                           
 18611                           ;incstack = 0
 18612                           ; Regs used in _ble_receive: [wreg+fsr1l+fsr1h+status,2+status,0]
 18613  1E18  0020               	movlb	0	; select bank0
 18614  1E19  0863               	movf	_index,w
 18615  1E1A  3EA0               	addlw	(low (_rx_buf| (0+256)))& (0+255)
 18616  1E1B  0086               	movwf	6
 18617  1E1C  3001               	movlw	1	; select bank3/4
 18618  1E1D  0087               	movwf	7
 18619  1E1E  0870               	movf	ble_receive@rcv,w
 18620  1E1F  0081               	movwf	1
 18621  1E20  0AE3               	incf	_index,f
 18622                           
 18623                           ;app_ble.c: 276: checksum ^= rcv;
 18624  1E21  0870               	movf	ble_receive@rcv,w
 18625  1E22  06E2               	xorwf	_checksum,f
 18626                           
 18627                           ;app_ble.c: 277: if(index >= sizeof(rx_buf))
 18628  1E23  3050               	movlw	80
 18629  1E24  0263               	subwf	_index,w
 18630  1E25  1C03               	skipc
 18631  1E26  0008               	return
 18632                           
 18633                           ;app_ble.c: 278: {
 18634                           ;app_ble.c: 279: index = 0;
 18635  1E27  01E3               	clrf	_index
 18636                           
 18637                           ;app_ble.c: 280: checksum = 0;
 18638  1E28  01E2               	clrf	_checksum
 18639  1E29  0008               	return
 18640  1E2A                     __end_of_ble_receive:	
 18641  007E                     btemp	set	126	;btemp
 18642  007E                     int$flags	set	126
 18643  007E                     wtemp0	set	126


Data Sizes:
    Strings     79
    Constant    0
    Data        55
    BSS         186
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      77
    BANK1            80     58      80
    BANK2            80      3      63
    BANK3            80      0      80
    BANK4            80      0      64
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           77      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 17
		 -> ble_check_devid@dev(BANK0[17]), ble_send_cmd@ack(BANK0[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 17
		 -> ble_check_devid@dev(BANK0[17]), ble_send_cmd@ack(BANK0[8]), 

    memset@p1	PTR void  size(2) Largest target is 131
		 -> m_led_para(BIGRAM[131]), 

    memset@p	PTR unsigned char  size(2) Largest target is 131
		 -> m_led_para(BIGRAM[131]), 

    led_set_time@ptime	PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_set_preview@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_set_pro@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_set_cycle@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_set_bright@pbuf	const PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    led_pro_process@ep	PTR struct . size(2) Largest target is 71
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_pro_process@sp	PTR struct . size(2) Largest target is 71
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_pro_process@p2	PTR struct . size(2) Largest target is 71
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_pro_process@p1	PTR struct . size(2) Largest target is 71
		 -> m_led_para.ble_para.pro_para.points(UNKNOWN), m_led_para.ble_para.pro_para(UNKNOWN), 

    led_auto_process@p	PTR struct . size(2) Largest target is 125
		 -> m_led_para.ble_para.auto_para(UNKNOWN), m_led_para.ble_para(UNKNOWN), 

    sp__memset	PTR void  size(2) Largest target is 131
		 -> m_led_para(BIGRAM[131]), 

    led_load_duty	PTR FTN(unsigned int ,)void [5] size(2) Largest target is 1
		 -> pwm5_load_duty(), pwm4_load_duty(), pwm3_load_duty(), pwm2_load_duty(), 
		 -> pwm1_load_duty(), 

    led_state_cb	PTR FTN(unsigned char ,enum E8242,)void [4] size(2) Largest target is 1
		 -> led_state_ble_cb(), led_state_night_cb(), led_state_day_cb(), led_state_off_cb(), 

    ble_send_data@p	PTR struct . size(2) Largest target is 131
		 -> m_led_para.ble_para(UNKNOWN), m_led_para(BIGRAM[131]), 

    ble_send_cmd@cmd	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_4(CODE[15]), STR_3(CODE[11]), STR_2(CODE[34]), STR_1(CODE[19]), 

    decrease@psrc	const PTR unsigned int  size(2) Largest target is 131
		 -> m_led_para.ble_para.manual_para.mBright(UNKNOWN), m_led_para.ble_para.manual_para(UNKNOWN), m_led_para(BIGRAM[131]), 

    increase@psrc	const PTR unsigned int  size(2) Largest target is 131
		 -> m_led_para.ble_para.manual_para.mBright(UNKNOWN), m_led_para.ble_para.manual_para(UNKNOWN), m_led_para(BIGRAM[131]), 

    rtc_set@ptime	PTR const unsigned char  size(1) Largest target is 80
		 -> rx_buf(BANK3[80]), 

    key_init@cb	PTR FTN(unsigned char ,enum E8166,)void  size(2) Largest target is 1
		 -> led_touch_cb(), 

    key_func	PTR FTN(unsigned char ,enum E8166,)void  size(2) Largest target is 1
		 -> led_touch_cb(), Absolute function(), 

    eusart_init@cb	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> ble_receive(), 

    eusart_rcv_cb	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> ble_receive(), Absolute function(), 

    eeprom_read_buffer@pbuf	PTR unsigned char  size(2) Largest target is 131
		 -> m_led_para(BIGRAM[131]), 

    eeprom_write_buffer@pbuf	PTR unsigned char  size(2) Largest target is 131
		 -> m_led_para(BIGRAM[131]), 

    tmr2_init@cb	PTR FTN()void  size(2) Largest target is 1
		 -> tmr2_isr_callback(), 

    tmr2_isr_cb	PTR FTN()void  size(2) Largest target is 1
		 -> tmr2_isr_callback(), Absolute function(), 

    tmr0_init@cb	PTR FTN()void  size(2) Largest target is 1
		 -> rtc_process(), 

    tmr0_isr_cb	PTR FTN()void  size(2) Largest target is 1
		 -> rtc_process(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _app_isr in COMMON

    _led_process->_led_ramp
    _led_ramp->_pwm5_load_duty
    _key_scan->_key_action
    _key_action->_led_touch_cb
    _led_touch_cb->_led_state_ble_cb
    _led_touch_cb->_led_state_day_cb
    _led_touch_cb->_led_state_night_cb
    _led_touch_cb->_led_state_off_cb
    _led_state_off_short_press_cb->i1_led_update_day_bright
    _led_state_off_long_press_cb->i1_led_update_day_bright
    _led_state_night_long_press_cb->_led_update_night_status
    _led_state_night_cont_press_cb->i1_decrease
    _led_state_night_cont_press_cb->i1_increase
    _led_state_day_short_press_cb->i1_led_update_night_bright
    _led_state_day_long_press_cb->_led_update_day_status
    _led_state_day_cont_press_cb->i1_decrease
    _led_state_day_cont_press_cb->i1_increase
    _led_state_ble_short_press_cb->i1_led_turnoff
    _rtc_process->_rtc_is_leap_year
    _rtc_is_leap_year->___lwmod
    _eusart_receive_isr->_ble_receive

Critical Paths under _main in BANK0

    _led_second_cb->_led_pro_process
    _led_save_para->_eeprom_write_buffer
    _eeprom_write_buffer->_eeprom_write
    _led_pro_process->_led_calc_bright
    _led_find_device->_led_turnoff
    _led_find_device->_led_turnon_max
    _led_auto_process->_led_calc_bright
    _led_calc_bright->___lldiv
    ___lldiv->___lmul
    _led_init->_led_para_init
    _led_para_init->_led_para_default
    _led_para_default->_memset
    _eeprom_read_buffer->_eeprom_read
    _ble_process->_ble_decode
    _ble_decode->_led_set_custom
    _led_set_time->_led_turnon_ramp
    _led_set_pro->___bmul
    _led_set_power->_led_turnon_ramp
    _led_set_mode->_led_turnon_ramp
    _led_set_custom->___lwdiv
    _led_increase->_increase
    _led_decrease->_decrease
    _ble_send_data->___bmul
    _ble_ota_ack->_ble_transmit_start
    _ble_ota_ack->_eusart_write
    _ble_init->_ble_check_devid
    _ble_check_devid->_ble_send_cmd
    _ble_send_cmd->_strlen
    _app_init->_eusart_init
    _app_init->_key_init
    _app_init->_tmr0_init
    _app_init->_tmr2_init

Critical Paths under _app_isr in BANK0

    _tmr2_isr_callback->_key_scan
    _key_scan->_key_action

Critical Paths under _main in BANK1

    _led_second_cb->_led_auto_process

Critical Paths under _app_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_led_second_cb

Critical Paths under _app_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _app_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _app_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _app_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _app_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _app_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _app_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _app_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _app_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _app_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _app_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   78949
                           _app_init
                           _ble_init
                        _ble_process
                           _led_init
                      _led_second_cb
                           _rtc_init
                   _rtc_second_ready
 ---------------------------------------------------------------------------------
 (1) _rtc_second_ready                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rtc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_second_cb                                        3     3      0   44464
                                              0 BANK2      3     3      0
                             ___wmul
                   _led_auto_process
                    _led_find_device
                        _led_preview
                    _led_pro_process
                      _led_save_para
                       _rtc_get_hour
                     _rtc_get_minute
                     _rtc_get_second
 ---------------------------------------------------------------------------------
 (2) _rtc_get_second                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_get_minute                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_get_hour                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _led_save_para                                        0     0      0     494
                _eeprom_write_buffer
 ---------------------------------------------------------------------------------
 (3) _eeprom_write_buffer                                  5     2      3     494
                                              5 BANK0      5     2      3
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         3     2      1     173
                                              2 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _led_pro_process                                     52    49      3   17668
                                             42 BANK0     11     8      3
                                              0 BANK1     41    41      0
                             ___wmul
                    _led_calc_bright
 ---------------------------------------------------------------------------------
 (2) _led_preview                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _led_find_device                                      0     0      0     260
                        _led_turnoff
                     _led_turnon_max
 ---------------------------------------------------------------------------------
 (3) _led_turnon_max                                       1     1      0     130
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _led_auto_process                                    65    62      3   19739
                                             42 BANK0      7     4      3
                                              0 BANK1     58    58      0
                            ___awmod
                             ___bmul
                             ___lmul
                             ___wmul
                    _led_calc_bright
 ---------------------------------------------------------------------------------
 (3) _led_calc_bright                                     15     8      7    8638
                                             27 BANK0     15     8      7
                             ___bmul (ARG)
                            ___lldiv
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     906
                                              2 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     549
                                             14 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     618
                                              2 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _led_init                                             0     0      0   14848
                      _led_para_init
 ---------------------------------------------------------------------------------
 (2) _led_para_init                                       10    10      0   14848
                                             22 BANK0     10    10      0
                             ___wmul
                 _eeprom_read_buffer
                   _led_indicate_ble
                   _led_indicate_day
                 _led_indicate_night
                   _led_indicate_off
                   _led_para_default
                        _led_turnoff
                   _led_turnoff_ramp
                    _led_turnon_ramp
              _led_update_day_bright
            _led_update_night_bright
 ---------------------------------------------------------------------------------
 (3) _led_update_night_bright                              5     5      0     200
                                              2 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _led_update_day_bright                                5     5      0     112
                                              2 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _led_turnoff                                          1     1      0     130
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _led_para_default                                    12    12      0    6916
                                             10 BANK0     12    12      0
                             ___wmul
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     288
                                              2 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _led_indicate_off                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_indicate_night                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_indicate_day                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _eeprom_read_buffer                                   6     3      3     264
                                              3 BANK0      6     3      3
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          1     1      0      22
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ble_process                                          0     0      0   17616
                         _ble_decode
               _ble_ready_to_receive
               _ble_receive_complete
                  _ble_receive_start
                   _ble_receive_stop
 ---------------------------------------------------------------------------------
 (2) _ble_receive_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ble_receive_start                                    1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ble_receive_complete                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ble_ready_to_receive                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ble_decode                                           2     2      0   17616
                                             24 BANK0      2     2      0
                             ___wmul
                        _ble_ota_ack
                      _ble_send_data
                       _led_decrease
                       _led_increase
                     _led_set_bright
                     _led_set_custom
                      _led_set_cycle
                       _led_set_mode
                      _led_set_power
                    _led_set_preview
                        _led_set_pro
                       _led_set_time
                    _led_start_flash
                  _led_start_preview
                   _led_stop_preview
 ---------------------------------------------------------------------------------
 (3) _led_stop_preview                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_start_preview                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_start_flash                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_set_time                                         1     1      0     331
                                              7 BANK0      1     1      0
                   _led_indicate_ble
                _led_prepare_to_save
                   _led_turnoff_ramp
                    _led_turnon_ramp
                            _rtc_set
 ---------------------------------------------------------------------------------
 (4) _rtc_set                                              2     2      0     121
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _led_indicate_ble                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_set_pro                                         11    11      0     588
                                              5 BANK0     11    11      0
                             ___bmul
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (3) _led_set_preview                                      6     6      0     275
                                              2 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) _led_set_power                                        1     1      0     202
                                              7 BANK0      1     1      0
                _led_prepare_to_save
                   _led_turnoff_ramp
                    _led_turnon_ramp
 ---------------------------------------------------------------------------------
 (3) _led_set_mode                                         2     2      0     246
                                              7 BANK0      2     2      0
                _led_prepare_to_save
                   _led_turnoff_ramp
                    _led_turnon_ramp
 ---------------------------------------------------------------------------------
 (3) _led_turnon_ramp                                      5     5      0      90
                                              2 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _led_turnoff_ramp                                     1     1      0      68
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _led_set_cycle                                       11    11      0     143
                                              2 BANK0     11    11      0
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (3) _led_set_custom                                      15    15      0    6652
                                              9 BANK0     15    15      0
                            ___lwdiv
                             ___wmul
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    6170
                                              2 BANK0      6     2      4
                       _rtc_get_hour (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              2 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _led_set_bright                                       8     8      0     275
                                              2 BANK0      8     8      0
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (3) _led_increase                                         6     5      1     770
                                             11 BANK0      6     5      1
                           _increase
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (4) _increase                                             9     4      5     596
                                              2 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (3) _led_decrease                                         6     5      1     770
                                             11 BANK0      6     5      1
                           _decrease
                _led_prepare_to_save
 ---------------------------------------------------------------------------------
 (4) _led_prepare_to_save                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _decrease                                             9     4      5     596
                                              2 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (3) _ble_send_data                                        9     9      0    1128
                                              5 BANK0      9     9      0
                             ___bmul
                 _ble_transmit_start
                  _ble_transmit_stop
                       _eusart_write
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     360
                                              2 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _ble_ota_ack                                          0     0      0      66
                 _ble_transmit_start
                  _ble_transmit_stop
                       _eusart_write
 ---------------------------------------------------------------------------------
 (4) _ble_transmit_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ble_transmit_start                                   1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ble_init                                             2     2      0    1677
                                             45 BANK0      2     2      0
                    _ble_check_devid
                       _ble_send_cmd
 ---------------------------------------------------------------------------------
 (2) _ble_check_devid                                     23    23      0     995
                                             22 BANK0     23    23      0
                       _ble_send_cmd
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ble_send_cmd                                        15    13      2     682
                                              7 BANK0     15    13      2
                       _eusart_write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     2      3     150
                                              2 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (4) _eusart_write                                         1     1      0      66
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0     344
                        _eusart_init
                          _gpio_init
                           _key_init
                           _osc_init
                          _pwm1_init
                          _pwm2_init
                          _pwm3_init
                          _pwm4_init
                          _pwm5_init
                          _tmr0_init
                          _tmr2_init
 ---------------------------------------------------------------------------------
 (2) _tmr2_init                                            2     0      2      86
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            2     0      2      86
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _pwm5_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm4_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm3_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _osc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _key_init                                             2     0      2      86
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_init                                          2     0      2      86
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _app_isr                                              0     0      0    4147
                 _eusart_receive_isr
                _eusart_transmit_isr
                           _tmr0_isr
                           _tmr2_isr
 ---------------------------------------------------------------------------------
 (6) _tmr2_isr                                             0     0      0    3470
                   Absolute function *
                  _tmr2_isr_callback *
 ---------------------------------------------------------------------------------
 (7) _tmr2_isr_callback                                    0     0      0    3470
                           _key_scan
                        _led_process
 ---------------------------------------------------------------------------------
 (8) _led_process                                          0     0      0     533
                           _led_ramp
 ---------------------------------------------------------------------------------
 (9) _led_ramp                                             7     7      0     533
                                              4 COMMON     7     7      0
                     _pwm1_load_duty *
                     _pwm2_load_duty *
                     _pwm3_load_duty *
                     _pwm4_load_duty *
                     _pwm5_load_duty *
 ---------------------------------------------------------------------------------
 (10) _pwm5_load_duty                                      4     2      2      87
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _pwm4_load_duty                                      2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _pwm3_load_duty                                      2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _pwm2_load_duty                                      2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _pwm1_load_duty                                      2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _key_scan                                             1     1      0    2937
                                              1 BANK0      1     1      0
                         _key_action
                           _key_read
 ---------------------------------------------------------------------------------
 (9) _key_read                                             1     1      0      68
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _key_action                                           2     1      1    2758
                                             13 COMMON     1     0      1
                                              0 BANK0      1     1      0
                   Absolute function *
                       _led_touch_cb *
 ---------------------------------------------------------------------------------
 (10) _led_touch_cb                                        2     0      2    2458
                                             11 COMMON     2     0      2
                   _led_state_ble_cb *
                   _led_state_day_cb *
                 _led_state_night_cb *
                   _led_state_off_cb *
 ---------------------------------------------------------------------------------
 (11) _led_state_off_cb                                    2     0      2     268
                                              9 COMMON     2     0      2
        _led_state_off_cont_press_cb
        _led_state_off_long_press_cb
           _led_state_off_release_cb
       _led_state_off_short_press_cb
 ---------------------------------------------------------------------------------
 (12) _led_state_off_short_press_cb                        1     1      0     112
                                              5 COMMON     1     1      0
                 i1_led_indicate_day
              i1_led_prepare_to_save
            i1_led_update_day_bright
 ---------------------------------------------------------------------------------
 (12) _led_state_off_release_cb                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_off_long_press_cb                         2     2      0     112
                                              5 COMMON     2     2      0
                 i1_led_indicate_day
            i1_led_update_day_bright
 ---------------------------------------------------------------------------------
 (13) i1_led_indicate_day                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_off_cont_press_cb                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _led_state_night_cb                                  2     0      2     864
                                              9 COMMON     2     0      2
      _led_state_night_cont_press_cb
      _led_state_night_long_press_cb
         _led_state_night_release_cb
     _led_state_night_short_press_cb
 ---------------------------------------------------------------------------------
 (12) _led_state_night_short_press_cb                      1     1      0       0
                                              0 COMMON     1     1      0
                 i1_led_indicate_ble
              i1_led_prepare_to_save
 ---------------------------------------------------------------------------------
 (13) i1_led_indicate_ble                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_night_release_cb                          0     0      0       0
              i1_led_prepare_to_save
 ---------------------------------------------------------------------------------
 (12) _led_state_night_long_press_cb                       0     0      0       0
            _led_update_night_status
 ---------------------------------------------------------------------------------
 (13) _led_update_night_status                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _led_state_night_cont_press_cb                       0     0      0     820
                         i1_decrease
                         i1_increase
          i1_led_update_night_bright
 ---------------------------------------------------------------------------------
 (11) _led_state_day_cb                                    2     0      2     976
                                              9 COMMON     2     0      2
        _led_state_day_cont_press_cb
        _led_state_day_long_press_cb
           _led_state_day_release_cb
       _led_state_day_short_press_cb
 ---------------------------------------------------------------------------------
 (12) _led_state_day_short_press_cb                        1     1      0     200
                                              5 COMMON     1     1      0
               i1_led_indicate_night
              i1_led_prepare_to_save
          i1_led_update_night_bright
 ---------------------------------------------------------------------------------
 (13) i1_led_update_night_bright                           5     5      0     200
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (13) i1_led_indicate_night                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_day_release_cb                            0     0      0       0
              i1_led_prepare_to_save
 ---------------------------------------------------------------------------------
 (12) _led_state_day_long_press_cb                         0     0      0       0
              _led_update_day_status
 ---------------------------------------------------------------------------------
 (13) _led_update_day_status                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _led_state_day_cont_press_cb                         0     0      0     732
                         i1_decrease
                         i1_increase
            i1_led_update_day_bright
 ---------------------------------------------------------------------------------
 (13) i1_led_update_day_bright                             5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (13) i1_increase                                          9     4      5     310
                                              0 COMMON     9     4      5
 ---------------------------------------------------------------------------------
 (13) i1_decrease                                          9     4      5     310
                                              0 COMMON     9     4      5
 ---------------------------------------------------------------------------------
 (11) _led_state_ble_cb                                    2     0      2     220
                                              9 COMMON     2     0      2
        _led_state_ble_cont_press_cb
        _led_state_ble_long_press_cb
           _led_state_ble_release_cb
       _led_state_ble_short_press_cb
 ---------------------------------------------------------------------------------
 (12) _led_state_ble_short_press_cb                        1     1      0      90
                                              1 COMMON     1     1      0
                 i1_led_indicate_off
              i1_led_prepare_to_save
                      i1_led_turnoff
 ---------------------------------------------------------------------------------
 (13) i1_led_turnoff                                       1     1      0      90
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_led_prepare_to_save                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_led_indicate_off                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_ble_release_cb                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_ble_long_press_cb                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _led_state_ble_cont_press_cb                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _tmr0_isr                                             0     0      0     567
                   Absolute function *
                        _rtc_process *
 ---------------------------------------------------------------------------------
 (7) _rtc_process                                          0     0      0     567
                   _rtc_is_leap_year
 ---------------------------------------------------------------------------------
 (8) _rtc_is_leap_year                                     2     0      2     567
                                              5 COMMON     2     0      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     415
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (6) _eusart_transmit_isr                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _eusart_receive_isr                                   1     1      0     110
                                              1 COMMON     1     1      0
                   Absolute function *
                        _ble_receive *
 ---------------------------------------------------------------------------------
 (7) _ble_receive                                          1     0      1      87
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _eusart_init
     _gpio_init
     _key_init
     _osc_init
     _pwm1_init
     _pwm2_init
     _pwm3_init
     _pwm4_init
     _pwm5_init
     _tmr0_init
     _tmr2_init
   _ble_init
     _ble_check_devid
       _ble_send_cmd
         _eusart_write
         _strlen
       _strlen
     _ble_send_cmd
       _eusart_write
       _strlen
   _ble_process
     _ble_decode
       ___wmul
         _rtc_get_hour (ARG)
       _ble_ota_ack
         _ble_transmit_start
         _ble_transmit_stop
         _eusart_write
       _ble_send_data
         ___bmul
         _ble_transmit_start
         _ble_transmit_stop
         _eusart_write
       _led_decrease
         _decrease
         _led_prepare_to_save
       _led_increase
         _increase
         _led_prepare_to_save
       _led_set_bright
         _led_prepare_to_save
       _led_set_custom
         ___lwdiv
         ___wmul
           _rtc_get_hour (ARG)
         _led_prepare_to_save
       _led_set_cycle
         _led_prepare_to_save
       _led_set_mode
         _led_prepare_to_save
         _led_turnoff_ramp
         _led_turnon_ramp
       _led_set_power
         _led_prepare_to_save
         _led_turnoff_ramp
         _led_turnon_ramp
       _led_set_preview
       _led_set_pro
         ___bmul
         _led_prepare_to_save
       _led_set_time
         _led_indicate_ble
         _led_prepare_to_save
         _led_turnoff_ramp
         _led_turnon_ramp
         _rtc_set
       _led_start_flash
       _led_start_preview
       _led_stop_preview
     _ble_ready_to_receive
     _ble_receive_complete
     _ble_receive_start
     _ble_receive_stop
   _led_init
     _led_para_init
       ___wmul
         _rtc_get_hour (ARG)
       _eeprom_read_buffer
         _eeprom_read
       _led_indicate_ble
       _led_indicate_day
       _led_indicate_night
       _led_indicate_off
       _led_para_default
         ___wmul
           _rtc_get_hour (ARG)
         _memset
       _led_turnoff
       _led_turnoff_ramp
       _led_turnon_ramp
       _led_update_day_bright
       _led_update_night_bright
   _led_second_cb
     ___wmul
       _rtc_get_hour (ARG)
     _led_auto_process
       ___awmod
       ___bmul
       ___lmul
       ___wmul
         _rtc_get_hour (ARG)
       _led_calc_bright
         ___bmul (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___wmul (ARG)
           _rtc_get_hour (ARG)
     _led_find_device
       _led_turnoff
       _led_turnon_max
     _led_preview
     _led_pro_process
       ___wmul
         _rtc_get_hour (ARG)
       _led_calc_bright
         ___bmul (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___wmul (ARG)
           _rtc_get_hour (ARG)
     _led_save_para
       _eeprom_write_buffer
         _eeprom_write
     _rtc_get_hour
     _rtc_get_minute
     _rtc_get_second
   _rtc_init
   _rtc_second_ready

 _app_isr (ROOT)
   _eusart_receive_isr
     Absolute function(Fake) *
     _ble_receive *
   _eusart_transmit_isr
   _tmr0_isr
     Absolute function(Fake) *
     _rtc_process *
       _rtc_is_leap_year
         ___lwmod
   _tmr2_isr
     Absolute function(Fake) *
     _tmr2_isr_callback *
       _key_scan
         _key_action
           Absolute function(Fake) *
           _led_touch_cb *
             _led_state_ble_cb *
               _led_state_ble_cont_press_cb
               _led_state_ble_long_press_cb
               _led_state_ble_release_cb
               _led_state_ble_short_press_cb
                 i1_led_indicate_off
                 i1_led_prepare_to_save
                 i1_led_turnoff
             _led_state_day_cb *
               _led_state_day_cont_press_cb
                 i1_decrease
                 i1_increase
                 i1_led_update_day_bright
               _led_state_day_long_press_cb
                 _led_update_day_status
               _led_state_day_release_cb
                 i1_led_prepare_to_save
               _led_state_day_short_press_cb
                 i1_led_indicate_night
                 i1_led_prepare_to_save
                 i1_led_update_night_bright
             _led_state_night_cb *
               _led_state_night_cont_press_cb
                 i1_decrease
                 i1_increase
                 i1_led_update_night_bright
               _led_state_night_long_press_cb
                 _led_update_night_status
               _led_state_night_release_cb
                 i1_led_prepare_to_save
               _led_state_night_short_press_cb
                 i1_led_indicate_ble
                 i1_led_prepare_to_save
             _led_state_off_cb *
               _led_state_off_cont_press_cb
               _led_state_off_long_press_cb
                 i1_led_indicate_day
                 i1_led_update_day_bright
               _led_state_off_release_cb
               _led_state_off_short_press_cb
                 i1_led_indicate_day
                 i1_led_prepare_to_save
                 i1_led_update_day_bright
         _key_read
       _led_process
         _led_ramp
           _pwm1_load_duty *
           _pwm2_load_duty *
           _pwm3_load_duty *
           _pwm4_load_duty *
           _pwm5_load_duty *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     35      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3A      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      3      3F       9       78.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     17A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              4D      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     17A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Aug 08 16:36:41 2018

          __end_ofi1_led_prepare_to_save 0B59                      ?_eusart_receive_isr 0070  
                          ?_led_decrease 002B                                        pc 0002  
                         ___bmul@product 0023                                       PL2 144A  
                                     PL4 0B7E                                       PL6 0FFA  
                                     PL8 1753                            _led_second_cb 14B7  
                    ___wmul@multiplicand 0024                            eusart_init@cb 0022  
                __size_of_pwm3_load_duty 0006                     ?_eeprom_write_buffer 0025  
                          _led_save_para 1708                                      PL10 0EAD  
                                    PL20 0EB5                                      PL12 0713  
                                    PL30 1779                                      PL22 0EC1  
                                    PL14 0B89                                      PL40 17A0  
                                    PL32 0B91                                      PL24 145F  
                                    PL16 175B                                      PL50 0ED8  
                                    PL42 17B1                                      PL34 178D  
                                    PL26 0EC7                                      PL18 1770  
                                    PL60 147D                                      PL52 0A18  
                                    PL44 17BB                                      PL36 1FAC  
                                    PL28 1469                                      PL70 0F0D  
                                    PL62 17D0                                      PL54 0EE7  
                                    PL46 1163                                      PL38 0ED1  
                                    PL80 0BAD                                      PL72 0F13  
                                    PL64 0EFC                                      PL56 0EF0  
                                    PL48 17C1                                      PL90 072A  
                                    PL82 116D                                      PL74 1487  
                                    PL66 17DB                                      PL58 0B97  
                                    PL92 1491                                      PL84 1177  
                                    PL76 0BA3                                      PL68 0F07  
                                    PL94 0BB7                                      PL86 0724  
                                    PL78 0F19                                      PL96 0F23  
                                    PL88 17E1                                      PL98 0F28  
              __end_of_ble_transmit_stop 1163                                      l133 1749  
                                    l414 1159                                      l600 0C7A  
                                    l601 0C88                                      l186 1138  
                                    l602 0C96                                      l611 0D00  
                                    l612 0D08                                      l509 08EC  
                                    l613 0D10                                      l614 0D18  
                                    l615 0D20                                      l472 090E  
                                    l616 0D28                               i1_decrease 0A72  
                                    l617 0D30                                      l618 0D38  
                                    l619 0D40                                      l388 0602  
                                    l645 0DF5                                      l671 124C  
                           ?_led_set_pro 0070                                      l879 16E0  
                          _led_set_cycle 09E6                                      _PR2 001E  
                      led_set_bright@val 0027                   led_para_default@i_1200 0034  
                           ?_led_preview 0070                   led_para_default@i_1207 0035  
                           ?_led_process 0070                   eeprom_write_buffer@len 0027  
                          _led_set_power 0BEE                            ?_led_increase 002B  
                           ___awmod@sign 0027                        ??_led_turnon_ramp 0022  
                                    wreg 0009                             ?_led_turnoff 0070  
                __size_of_pwm4_load_duty 0006     __size_of_led_state_off_long_press_cb 001B  
                                   S6787 1822                     ??_eusart_receive_isr 0071  
                                   PL100 0BBD                                     PL110 149A  
                                   PL102 1FBE                                     PL120 0F45  
                                   PL112 17EA                                     PL104 0F2F  
                                   PL130 1FC6                                     PL122 0F4C  
                                   PL114 0BC5                                     PL106 0F36  
                                   PL140 1184                                     PL132 0BD0  
                                   PL124 0F51                                     PL116 0F3E  
                                   PL108 117E                                     PL150 0F97  
                                   PL142 0BE0                                     PL134 0BD5  
                                   PL126 0BCB                                     PL118 0F91  
                                   PL160 17F6                                     PL152 17F1  
                                   PL144 14A7                                     PL136 0F56  
                                   PL128 14A1                                     PL162 0BEA  
                                   PL154 1FDB                                     PL146 072F  
                                   PL138 0BDA                                     PL164 17FB  
                                   PL156 14B2                                     PL148 14AD  
                                   PL166 07B9                                     PL158 0BE5  
                           rtc_set@ptime 0022                               i1_increase 0A94  
                                   l1139 0484                                     l1236 13A0  
                                   l4001 1148                                     l4105 0EA4  
                                   l4033 0963                                     l4211 09CE  
                                   l5005 1EEA                                     l5015 1ED3  
                                   l4223 09E1                                     l4057 1EFC  
                                   l4059 1F04                                     l4219 09DD  
                                   l4075 0709                 led_update_night_bright@i 0026  
                                   l4343 05EE                                     l4511 1EAF  
                                   l4087 0DF7                                     l6023 1197  
                                   l4079 0700                                     l6103 0E38  
                                   l4505 1E7C                                     l6025 11B8  
                                   l4265 0E14                                     l4355 0616  
                                   l4099 0E9A                                     l4611 080C  
                                   l4349 0609                                     l4357 0617  
                                   l4365 0621                                     l4461 0940  
                                   l6213 0869                                     l6205 085B  
                                   l6125 1406                                     l6071 0697  
                                   l6063 067F                                     l6119 13F4  
                                   l6135 16F3                                     l4553 09EA  
                                   l4457 092E                                     l4617 0833  
                                   l4641 0953                                     l4625 0A11  
                                   l6233 0896                                     l6225 087C  
                                   l6209 0863                                     l6049 065A  
                                   l6313 0CAF                                     l6161 137F  
                                   l6153 1374                                     l6129 16F2  
                                   l4555 0A0B                                     l4459 0932  
                                   l4483 0C06                                     l4643 0956  
                                   l6243 08A9                                     l6219 0873  
                                   l6403 0DA9                                     l6323 0CD9  
                                   l4485 0C09                                     l4629 0A15  
                                   l6253 08B8                                     l6229 0889  
                                   l6333 0CEE                                     l6309 0CA3  
                                   l6173 1397                                     l6165 138B  
                                   l6149 136D                                     l6263 08D8  
                                   l6239 08A3                                     l6423 0DD4  
                                   l6415 0DCE                                     l6407 0DC3  
                                   l6319 0CB0                                     l4649 0A0D  
                                   l6249 08B2                                     l6193 0843  
                                   l6281 0903                                     l6089 06E2  
                                   l6433 0DE3                                     l6329 0CDA  
                                   l6169 138F                                     l6521 1313  
                                   l6505 12D0                                     l5723 05AA  
                                   l4747 0EAB                                     l4755 0E45  
                                   l6435 0DE5                                     l6427 0DD7  
                                   l6419 0DD1                                     l6363 0D48  
                                   l6197 084F                                     l6189 0839  
                                   l4773 0E85                                     l6293 0C57  
                                   l6613 15E3                                     l6199 0851  
                                   l6711 1017                                     l4775 0E93  
                                   l6439 0DE6                                     l6391 0D81  
                                   l6375 0D6D                                     l6287 0C46  
                                   l5911 1441                                     l6527 1353  
                                   l6623 161A                                     l4769 0E6C  
                                   l6385 0D80                                     l6369 0D49  
                                   l6529 1273                                     l6481 1272  
                                   l6617 15FA                        ?_led_turnoff_ramp 0070  
                                   l3987 112C                                     l5931 10B3  
                                   l5907 143B                                     l6547 1525  
                          ?_led_set_mode 0070                                     l5853 16C6  
                                   l6397 0DA8                                     l6469 1246  
                                   l6653 1669                                     l6557 1536  
                                   l5917 171F                                     l6655 161C  
                                   l6575 15AE                                     l6583 15B2  
                                   l6735 14E2                                     l6743 150C  
                                   l5953 10D0                                     l5849 16C0  
                                   l6497 12B4                                     l6665 1671  
                                   l6657 166C                                     l6577 1537  
                                   l6729 14D7                                     l4995 1EDE  
                                   l5955 10DE                                     l5867 13AA  
                                   l6579 15B0                                     l6739 14F8  
                                   l5877 1359                                     l5973 1105  
                                   l5965 10FA                                     l5983 1116  
                                   l5975 1113                                     l6695 1708  
                                   l5985 1126                                     l5899 141E  
                                   l5999 0981                                     STR_1 1844  
                                   STR_2 1800                                     STR_3 1866  
                                   STR_4 1857                           _led_set_bright 1E6D  
                          ?_led_set_time 0070                        led_set_cycle@pbuf 002B  
                                   _LATA 010C                                     _LATB 010D  
                                   _LATC 010E                                     u3310 05E0  
                                   u3145 09D6                                     u4070 1EC1  
                                   u2925 0FEC                                     u2935 1093  
                                   u6405 12CE                                     u6415 12DD  
                                   u5465 1430                                     u5715 1385  
                                   u6515 15E1                                     u6365 129D  
                                   u6525 1602                                     u6375 12A6  
                                   u6535 1659                                     u6385 12B0  
                                   u6545 1663                                     u6395 12C4  
                                   u6555 162B                                     u6485 1596  
                                   u6807 058D                                     u6817 059E  
                                   u6827 05AE                                     u6747 103D  
                                   u6837 05BE                                     u6757 1034  
                                   u6847 05CE                                     u6767 08FA  
                                   u6857 1EEB                                     u6777 115D  
                                   u6867 0618                                     u6787 1153  
                                   u6797 0580                                     _TMR2 001D  
                                   _WPUA 020C                                     _WPUB 020D  
                                   _WPUC 020E                       led_set_bright@pbuf 0026  
                         ??_eeprom_write 0023                           _led_set_custom 0976  
                eeprom_write_buffer@addr 0028                  __size_of_pwm5_load_duty 0013  
                eeprom_write_buffer@pbuf 0025                       ??_led_turnoff_ramp 0022  
                                   _main 0478                                     fsr0h 0005  
                                   fsr1h 0007                                     indf0 0000  
                                   fsr0l 0004                                     indf1 0001  
                                   fsr1l 0006                                     btemp 007E  
                          ?_led_touch_cb 007B               led_pro_process@point_count 00BE  
   __size_of_led_state_day_cont_press_cb 0010                                     start 042E  
                   __end_of_ble_send_cmd 0626                           ?_led_para_init 0070  
                      ___bmul@multiplier 0024                       i1_led_indicate_ble 0A3C  
                     i1_led_indicate_day 0B19                       i1_led_indicate_off 0F83  
                         ??_led_decrease 002C             __size_of_eusart_transmit_isr 001A  
                         ?_led_second_cb 0070                      pwm5_load_duty@value 0070  
                  ??_eeprom_write_buffer 0028                           ?_led_save_para 0070  
                      led_set_custom@idx 0036                      ?i1_led_indicate_ble 0070  
                    ?i1_led_indicate_day 0070                      ?i1_led_indicate_off 0070  
              __size_of_rtc_second_ready 0006                           ?_led_set_cycle 0070  
                                  ?_main 0070                          __end_of___awmod 139C  
                        __end_of___lldiv 144A                                    _T2CON 001F  
                         ?_led_set_power 0070                           ??_led_increase 002C  
                        __end_of___lwdiv 09E6                                    i1l200 1E42  
                                  i1l192 1E6A                          __end_of___lwmod 07B9  
                                  i1l266 0766                                    i1l818 0A51  
                                  i1l851 0F71                                    i1l845 0C21  
                                  i1l854 0F70                                    i1l782 0B5A  
                                  i1l857 0F72                                    i1l793 0B09  
                                  i1l779 0B59                                    i1l868 0F6F  
                                  _RCREG 0199               i1led_update_night_bright@i 0074  
                                  _OSCEN 091D                                    _TMR0H 0016  
                                  _TMR0L 0015                                    _PORTC 000E  
                        _ble_check_devid 1EB6                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
                                  _TXREG 019A               __end_of_led_state_night_cb 0C22  
                    ___lmul@multiplicand 0026                          __end_of_app_isr 042E  
       ??_led_state_night_short_press_cb 0070          ?_led_state_night_short_press_cb 0070  
               i1led_update_day_bright@i 0074                   __end_of_led_set_bright 1EB6  
           __end_ofi1_led_indicate_night 0AC6                          _led_set_preview 0803  
                                  _index 0063                   __end_of_led_set_custom 09C1  
                         ??_led_set_mode 0027                           ??_led_set_time 0027  
                           ?_eusart_init 0022              __size_of_eeprom_read_buffer 0017  
                                  pclath 000A                     ??i1_led_indicate_ble 0070  
                   ??i1_led_indicate_day 0070                     ??i1_led_indicate_off 0070  
             __size_of_tmr2_isr_callback 000D                          __end_of_rtc_set 0975  
               __end_of_led_indicate_ble 0EA7                 __end_of_led_indicate_day 0EA9  
                         ??_led_touch_cb 007D                 __end_of_led_indicate_off 0EAD  
                                  status 0003                         ??_rtc_get_minute 0022  
                       ??_rtc_get_second 0022                                    wtemp0 007E  
                   __size_of_ble_receive 0012                         _rtc_is_leap_year 077D  
                  __end_of_ble_send_data 112A                     __size_of_ble_ota_ack 0012  
                           __end_ofPL100 0BC5                             __end_ofPL110 14A1  
                           __end_ofPL102 1FC6                             __end_ofPL120 0F4C  
                           __end_ofPL112 17F1                             __end_ofPL104 0F36  
                           __end_ofPL130 1FCC                             __end_ofPL122 0F51  
                           __end_ofPL114 0BCB                             __end_ofPL106 0F3E  
                           __end_ofPL140 118A                             __end_ofPL132 0BD5  
                           __end_ofPL124 0F56                             __end_ofPL116 0F45  
                           __end_ofPL108 1184                             __end_ofPL150 0F9B  
                           __end_ofPL142 0BE5                             __end_ofPL134 0BDA  
                           __end_ofPL126 0BD0                             __end_ofPL118 0F97  
                           __end_ofPL160 17FB                             __end_ofPL152 17F6  
                           __end_ofPL144 14AD                             __end_ofPL136 0F5B  
                           __end_ofPL128 14A7                             __end_ofPL162 0BEE  
                           __end_ofPL154 1FE0                             __end_ofPL146 0735  
                           __end_ofPL138 0BE0                             __end_ofPL164 1800  
                           __end_ofPL156 14B7                             __end_ofPL148 14B2  
                           __end_ofPL166 07BE                             __end_ofPL158 0BEA  
                   __size_of_ble_process 000F                        led_set_time@ptime 0027  
                       ?_led_find_device 0070                          __initialization 0430  
                     ble_check_devid@dev 0037                  i1_led_update_day_bright 0B35  
                     ble_check_devid@cnt 0048                       ble_check_devid@idx 004C  
                     ble_check_devid@len 004A                       ble_check_devid@rev 004B  
                         _led_turnon_max 16F2                 __end_of_led_auto_process 1356  
                           __end_of_main 0491               ?i1_led_update_night_bright 0070  
              __size_of_led_state_ble_cb 0015                __size_of_led_state_day_cb 0015  
                        _led_pro_process 1510                __size_of_led_state_off_cb 0015  
        ??_led_state_night_long_press_cb 0072                           _m_current_time 0055  
      __size_of_led_state_day_release_cb 0002                ?_led_state_day_release_cb 0070  
                                 ??_main 0055               __size_of_ble_transmit_stop 000A  
                            ?i1_decrease 0070                        ?_ble_receive_stop 0070  
                           led_set_pro@i 002F                              increase@max 0025  
                     ??_ble_receive_stop 0022         __end_of_led_state_off_release_cb 0B5B  
                        ?_led_set_bright 0070                          ?_led_set_custom 0070  
                                 _CCPR1H 0292                                   _CCPR2H 0296  
                                 _CCPR3H 0312                                   _CCPR1L 0291  
                                 _CCPR4H 0316                                   _CCPR2L 0295  
                                 _CCPR3L 0311                                   _CCPR4L 0315  
                            ?i1_increase 0070                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                                 _T0CON0 0017                                   _T0CON1 0018  
                                 _RC1STA 019D                           _pwm1_load_duty 1DD5  
                                 i1l1131 0424                                   i1l1118 1F17  
                                 i1l1134 042C                                   i1l1127 0410  
                                 i1l1129 041A                                   _ODCONA 028C  
                                 _ODCONB 028D                                   _ODCONC 028E  
                                 i1l4121 1F8D                                   i1l4113 1F6C  
                                 i1l4123 1F97                                   i1l4107 1F6B  
                                 i1l4117 1F7C                                   i1l4305 1F43  
                                 i1l4235 07A4                                   i1l4243 07B4  
                                 i1l4309 1F48                                   i1l4239 07B0  
                                 i1l3731 0B6C                                   i1l4291 1F2D  
                                 i1l3901 0A50                                   i1l3727 0B5C  
                                 i1l3735 0C23                                   i1l3815 0B1A  
                                 i1l3807 0B0A                                   i1l3911 0C1B  
                                 i1l3761 0F85                                   i1l3841 0A70  
                                 i1l3825 0AB6                                   i1l3913 0C1D  
                                 i1l4297 1F46                                   i1l3835 0A62  
                                 i1l3843 0B7C                                   i1l3739 0C33  
                                 i1l3915 0C1E                                   i1l3931 0F6D  
                                 i1l4299 1F39                                   i1l3781 0B36  
                                 i1l3861 0A5B                                   i1l3845 0A1E  
                                 i1l3917 0C20                                   i1l3933 0F6E  
                                 i1l3839 0A6B                                   i1l3863 0A60  
                                 i1l3927 0F6B                                   i1l3793 0AC7  
                                 i1l3857 0A52                                   i1l3865 0C43  
                                 i1l3881 0B06                                   i1l3929 0F6C  
                                 i1l3867 0F73                                   i1l3883 0B07  
                                 i1l3797 0AE0                                   i1l3885 0B08  
                                 i1l4951 075B                                   i1l3799 0AEF  
                                 i1l3879 0B05                                   i1l3895 0A4D  
                                 i1l3897 0A4E                                   i1l4955 0768  
                                 i1l3899 0A4F                                   i1l5677 1E44  
                                 i1l4967 077B                          led_second_cb@ct 015D  
                                 u318_25 07AA                                   u273_25 0AA9  
                                 u274_25 0A87                                   _OSCFRQ 091F  
                        _led_start_flash 0A0D                                   _NVMADR 0891  
                                 _TX1STA 019E                          ??_led_para_init 0036  
                       __end_of_decrease 10A1                         __end_of_ble_init 05D6  
                 __end_of_led_turnon_max 1708                           _pwm2_load_duty 1DDB  
                    eeprom_read_buffer@i 0028                         __end_of_app_init 04BC  
                   __size_of_eeprom_read 000F                             led_turnoff@i 0022  
                        ??_led_second_cb 0055                                   ___bmul 1356  
                       __end_of_led_init 0628                         __end_of_led_ramp 1FAC  
                                 ___lmul 139C                   __size_ofi1_led_turnoff 000D  
  __end_of_led_state_night_cont_press_cb 0A62   __size_of_led_state_night_cont_press_cb 0010  
          _led_state_night_cont_press_cb 0A52                              key_read@dat 0070  
                                 ___wmul 16BE                          ??_led_save_para 002A  
                              ??___awmod 0026                              key_read@trg 0068  
                              ??___lldiv 0036        __end_ofi1_led_update_night_bright 0AF5  
               __end_of_led_para_default 06FC                                ??___lwdiv 0026  
                              ??___lwmod 0074                         __end_of_increase 0FFA  
                __end_of_ble_check_devid 1EFA                          ??_led_set_cycle 0022  
                       __end_of_key_init 1DF5                         __end_of_key_read 1F6A  
                       __end_of_key_scan 1F4C                           _pwm3_load_duty 1DE1  
                                 _memset 06FC                          ??_led_set_power 0027  
                        ___awmod@divisor 0022                     __end_of_eeprom_write 1753  
                        ___awmod@counter 0026                                   _rx_buf 01A0  
                              ??_app_isr 007E                                   _tx_buf 0220  
                      led_para_default@i 0032                        led_para_default@j 0033  
                __end_of_led_set_preview 0839                                   _strlen 1EFA  
                          ?_eusart_write 0070                         __end_of_tmr0_isr 1E00  
                       __end_of_tmr2_isr 1E0C                         __end_of_osc_init 0527  
    __end_of_led_state_ble_long_press_cb 0F72              _led_state_ble_long_press_cb 0F71  
                         _pwm4_load_duty 1DE7                     __size_of_led_set_pro 0031  
                       __end_of_rtc_init 0800                     __size_of_led_preview 0007  
                   __size_of_led_process 0001                                ??_rtc_set 0022  
                 __end_of_pwm1_load_duty 1DDB                        ble_send_cmd@F8334 014F  
                   __end_of_led_decrease 107E                     __size_of_led_turnoff 000D  
                    led_calc_bright@dbrt 0048                      led_calc_bright@ebrt 003B  
                    led_calc_bright@sbrt 0049                    __size_of_ble_send_cmd 0050  
                         _pwm5_load_duty 1E2A               __end_of_led_indicate_night 0EAB  
                           ?_rtc_process 0070                  __end_of__initialization 0475  
                        eeprom_read@addr 0022                   __end_of_pwm2_load_duty 1DE1  
                       led_turnon_ramp@i 0026                          led_set_bright@i 0029  
              ??i1_led_update_day_bright 0070     __end_of_led_state_ble_short_press_cb 0F83  
  __size_of_led_state_ble_short_press_cb 0010             _led_state_ble_short_press_cb 0F73  
              __size_of_led_stop_preview 0003                  __end_of_led_pro_process 16BE  
                   __end_of_led_increase 0FD7                      __size_ofi1_decrease 0022  
                        ?_led_turnon_max 0070                      ___bmul@multiplicand 0022  
           ?_led_state_ble_cont_press_cb 0070                         eusart_write@byte 0022  
                         __pcstackCOMMON 0070                  led_pro_process@duration 00B4  
                  led_state_off_cb@state 007A                          led_set_custom@i 0037  
                 __end_of_pwm3_load_duty 1DE7                             __pidataBANK2 07BE  
           __end_of_ble_ready_to_receive 1026                          _led_turnon_ramp 0DF6  
                   i1_led_indicate_night 0AC5                           i1led_turnoff@i 0070  
                  _led_update_day_bright 0E44                     __end_of_led_set_mode 0942  
                   __end_of_led_set_time 0960             __end_of_ble_receive_complete 102D  
                    __size_ofi1_increase 0022                          led_set_pro@pbuf 002E  
                             __end_ofPL2 145F                               __end_ofPL4 0B89  
                             __end_ofPL6 1000                               __end_ofPL8 175B  
                       _rtc_second_ready 0628         __size_of_led_update_night_bright 002E  
                  _led_update_day_status 0B5C                           ??_eusart_write 0022  
                 __end_of_pwm4_load_duty 1DED                          led_set_power@on 0027  
                   __end_of_led_touch_cb 1FDB         __size_of_led_update_night_status 0020  
            __end_of_led_prepare_to_save 0976                             _ble_send_cmd 05D6  
                __end_of_led_start_flash 0A11                       led_set_preview@val 0025  
                      eeprom_write@state 0024                            i1_led_turnoff 0F84  
                        ?_pwm1_load_duty 0070                   __end_of_pwm5_load_duty 1E3D  
                    _eusart_transmit_isr 1E53              __size_of_ble_transmit_start 000C  
                      _ble_receive_start 102D                        led_calc_bright@dt 003E  
                      led_calc_bright@vs 0044                               __pbssBANK0 0055  
                             __pbssBANK1 00DA                               __pbssBANK3 01A0  
                             __pbssBANK4 0220                               _ble_decode 0839  
                          led_set_mode@m 0028                       ?_ble_receive_start 0070  
                   __size_of_eusart_init 001D                       __size_of_gpio_init 0044  
                        ?_pwm2_load_duty 0070                             increase@delt 0024  
                           increase@psrc 0022      __end_of_led_state_off_long_press_cb 0B35  
            _led_state_off_long_press_cb 0B1A            ?_led_state_ble_short_press_cb 0070  
                             __pmaintext 0478                      ??_ble_receive_start 0022  
      __size_of_led_state_off_release_cb 0001                                  ?___bmul 0022  
               _led_state_ble_release_cb 0F72                ?_led_state_off_release_cb 0070  
                  ?i1_led_indicate_night 0070                                  ?___lmul 0022  
          ??_led_state_ble_cont_press_cb 0070                     ?_eusart_transmit_isr 0070  
                        ?_pwm3_load_duty 0070                                  ?___wmul 0022  
              __size_of_led_turnoff_ramp 000B                         _led_state_ble_cb 0F5B  
                       _led_state_day_cb 0A3D                               __pintentry 0404  
                     __size_of_pwm1_init 000A                       __size_of_pwm2_init 0009  
                     __size_of_tmr0_init 000F                       __size_of_pwm3_init 000B  
                     __size_of_pwm4_init 000B                       __size_of_tmr2_init 0011  
                                _CCP1CON 0293                                  _CCP2CON 0297  
                  i1_led_prepare_to_save 0B58                                  _CCP3CON 0313  
                       led_decrease@delt 002B                       __size_of_pwm5_init 000A  
                                _CCP4CON 0317                         ?_ble_check_devid 0070  
                       _led_state_off_cb 0AF5                                  ?_memset 0022  
                         ___lmul@product 002A      __end_of_led_state_day_cont_press_cb 0A72  
            _led_state_day_cont_press_cb 0A62           ?_led_state_night_cont_press_cb 0070  
               __size_of_led_calc_bright 004A                                  ?_strlen 0022  
               __end_of_rtc_is_leap_year 0799                         ?_led_set_preview 0070  
                        ?_pwm4_load_duty 0070                     tmr2_isr_callback@cnt 0060  
                       led_second_cb@sec 015C                                ?_decrease 0022  
                                _SP1BRGH 019C                                  _SP1BRGL 019B  
                              ?_ble_init 0070                              tmr0_init@cb 0022  
                                _OSCCON1 0919                                  _OSCCON3 091B  
                         ?i1_led_turnoff 0070                                  _NVMADRH 0892  
                                _NVMADRL 0891                                  _OSCTUNE 091E  
                                _NVMDATL 0893                                  _NVMCON1 0895  
                                _NVMCON2 0896                                  _PWM5DCH 0618  
                                _PWM5DCL 0617             ?_led_state_off_cont_press_cb 0070  
              __end_of_ble_receive_start 103C                                  _PWM5CON 0619  
                                _PPSLOCK 0E0F                                ?_app_init 0070  
                            tmr2_init@cb 0022                          ?_pwm5_load_duty 0070  
                  led_state_night_cb@key 0079              __size_of_eusart_receive_isr 0016  
                             _m_led_para 236D                            _eusart_rcv_cb 0159  
                              ?_led_init 0070                                ?_led_ramp 0070  
                          i1decrease@min 0073                                ?_increase 0022  
                 led_update_day_bright@i 0026                                ?_key_init 0022  
                              ?_key_read 0070                                ?_key_scan 0070  
                  led_find_device@toggle 0061                        ?_led_indicate_ble 0070  
                      ?_led_indicate_day 0070             ?_led_state_day_long_press_cb 0070  
                      ?_led_indicate_off 0070                       _led_state_night_cb 0C0B  
                __end_of_led_turnon_ramp 0E11                         ?_led_pro_process 004A  
                              ?_tmr0_isr 0070                                ?_tmr2_isr 0070  
                     ??_led_indicate_ble 0022                       ??_led_indicate_day 0022  
                     ??_led_indicate_off 0022                                ?_osc_init 0070  
            __end_of_eeprom_write_buffer 1731                           i1increase@delt 0072  
                      key_scan@key_value 0021                           i1increase@psrc 0070  
                  ??_eusart_transmit_isr 0070                   ?_led_update_day_bright 0070  
                  __size_of_eeprom_write 0022                               _key_action 1F4C  
                              ?_rtc_init 0070                          __size_of___bmul 000D  
                    ?_led_state_night_cb 0079              ??i1_led_update_night_bright 0070  
                        __size_of___lmul 0025                        ?_led_auto_process 004A  
                                ___awmod 1363                                  ___lldiv 140B  
                        __size_of___wmul 0015                                  ___lwdiv 09C1  
                                ___lwmod 0799                             key_read@cont 0067  
                 ?_led_update_day_status 0070                       ??_led_auto_process 004D  
                        __size_of_memset 0017                                  __ptext1 0628  
                                __ptext2 07F5                                  __ptext3 14B7  
                                __ptext4 16EF                                  __ptext5 16EC  
                                __ptext6 16EA                                  __ptext7 1708  
                                __ptext8 171C                                  __ptext9 1731  
                                _app_isr 0404                        __end_of_gpio_init 051D  
                           ??i1_decrease 0075                         ??_led_set_bright 0022  
                        __size_of_strlen 0011                    __size_of_led_decrease 003B  
                       ??_led_set_custom 0029                                _T2CONbits 001F  
                       ___awmod@dividend 0024                               ??_decrease 0027  
                             ??_ble_init 004D                     rtc_is_leap_year@year 0075  
   __size_of_led_state_ble_cont_press_cb 0001               __end_of_eeprom_read_buffer 0E28  
                       ?_led_start_flash 0070                                  _rtc_set 0960  
                   ??_led_state_night_cb 007B                               ??_app_init 0024  
                                _tx_head 0069                             ??i1_increase 0075  
                                clrloop0 1E0D                                  _tx_tail 006A  
          ??_led_state_off_cont_press_cb 0070                            ??_ble_receive 0071  
                             ??_led_init 0040                     end_of_initialization 0475  
                             ??_led_ramp 0074                     _ble_ready_to_receive 101F  
                      __end_of_pwm1_init 0531                            ??_ble_ota_ack 0023  
               led_auto_process@duration 00CA                        __end_of_pwm2_init 053A  
                      __end_of_tmr0_init 0569                    __size_of_led_increase 003C  
                      __end_of_pwm3_init 0545                        __end_of_pwm4_init 0550  
                      __end_of_tmr2_init 057A                        __end_of_pwm5_init 055A  
                            ?_ble_decode 0070                               ??_increase 0027  
                   _ble_receive_complete 1026                            ??_ble_process 003A  
            __size_ofi1_led_indicate_ble 0001              __size_ofi1_led_indicate_day 0001  
                                init_ram 1004              __size_ofi1_led_indicate_off 0001  
                                memset@c 0024                                  memset@n 0026  
                                memset@p 0028                               ??_key_init 0024  
                             ??_key_read 0070                               ??_key_scan 007E  
                           _eeprom_write 1731                                  initloop 1005  
                   __end_of_eusart_write 114D                __size_of_ble_receive_stop 0007  
                      led_pro_process@p1 00B6                        led_pro_process@p2 00B8  
                      led_pro_process@t1 00AB                        led_pro_process@t2 00AD  
                      led_pro_process@ct 004A                        led_pro_process@ep 00C3  
                      led_pro_process@dt 00AF                        led_pro_process@et 00BF  
                       _led_stop_preview 0A15                        led_pro_process@sp 00C1  
                      led_pro_process@st 00C6                     __size_of_rtc_process 0048  
                        ___lldiv@divisor 002E                               ??_tmr0_isr 0077  
          ??_led_state_day_long_press_cb 0072                    __size_of_led_set_mode 0033  
                             ??_tmr2_isr 007E                       __end_ofi1_decrease 0A94  
                  __size_of_led_set_time 001E                          ___lldiv@counter 003A  
                             ??_osc_init 0022                                _MONTH_DAY 0131  
                 ??i1_led_indicate_night 0070                            ?_rtc_get_hour 0070  
   __end_of_led_state_off_short_press_cb 0B19    __size_of_led_state_off_short_press_cb 000F  
           _led_state_off_short_press_cb 0B0A                          led_touch_cb@key 007B  
                              _RCSTAbits 019D                               ??_rtc_init 0022  
                 ?i1_led_prepare_to_save 0070                             _led_decrease 1043  
                  __size_of_led_touch_cb 000F                        led_turnoff_ramp@i 0022  
                      ?_led_para_default 0070           ??_led_state_ble_short_press_cb 0071  
                _led_update_night_bright 0E6B                                  strlen@s 0026  
               __size_of_led_find_device 0010                       __end_ofi1_increase 0AB6  
                              _PORTAbits 000C                       ??_led_para_default 002A  
                _led_update_night_status 0C23                          ??i1_led_turnoff 0070  
                             _rtc_status 0064                   __size_of_ble_send_data 0077  
                           _led_increase 0F9B                  led_state_night_cb@state 007A  
             __size_of_ble_receive_start 000F                i1_led_update_night_bright 0AC6  
                      ??_led_calc_bright 0042                     eeprom_write_buffer@i 0029  
   __end_of_led_state_day_short_press_cb 0AC5    __size_of_led_state_day_short_press_cb 000F  
           _led_state_day_short_press_cb 0AB6                    ?_ble_ready_to_receive 0070  
                           _led_set_mode 090F                             _led_set_time 0942  
                              _RXPPSbits 0E24                    ?_ble_receive_complete 0070  
                       ??_led_turnon_max 0022                     ble_check_devid@F8342 0120  
               __end_of_rtc_second_ready 062E             ??_led_state_night_release_cb 0070  
                           _led_state_cb 0147                            ??_eeprom_read 0022  
                       led_set_cycle@len 002A                                _TXSTAbits 019E  
                           _led_run_para 005C                             _led_touch_cb 1FCC  
                       ?_led_turnon_ramp 0070                    __end_of_led_para_init 0DF6  
                    __end_of_ble_receive 1E2A                           ??_rtc_get_hour 0022  
                    __end_of_ble_ota_ack 10B3                           led_para_init@i 003F  
                         led_para_init@j 003E                      __end_of_ble_process 101F  
   __size_of_led_state_off_cont_press_cb 0001                              ?_key_action 007D  
                       _led_turnoff_ramp 0E99                 _led_state_day_release_cb 0B7C  
          ?_led_state_off_short_press_cb 0070                       _led_indicate_night 0EA9  
                  __end_of_led_second_cb 1510                           __end_of___bmul 1363  
                __size_of_rtc_get_minute 0003                  __size_of_rtc_get_second 0003  
                         __end_of___lmul 13C1                           __end_of___wmul 16D3  
                  __end_of_led_save_para 171C                    __end_of_led_set_cycle 0A0D  
                    __size_of_ble_decode 00D6                            ??_led_set_pro 0025  
                         __end_of_memset 0713                    __end_of_led_set_power 0C0B  
                          ??_led_preview 0022                            ??_led_process 007B  
   __size_of_led_state_day_long_press_cb 0001                         ??_pwm1_load_duty 0072  
                    ?_led_indicate_night 0070                           __end_of_strlen 1F0B  
                            __end_ofPL10 0EB5                              __end_ofPL20 0EC1  
                            __end_ofPL12 0724                              __end_ofPL30 178D  
                            __end_ofPL22 0EC7                              __end_ofPL14 0B91  
                            __end_ofPL40 17B1                              __end_ofPL32 0B97  
                            __end_ofPL24 1469                              __end_ofPL16 1770  
                            __end_ofPL50 0EE7                              __end_ofPL42 17BB  
                            __end_ofPL34 17A0                              __end_ofPL26 0ED1  
                            __end_ofPL18 1779                              __end_ofPL60 1487  
                            __end_ofPL52 0A1E                              __end_ofPL44 17C1  
                            __end_ofPL36 1FBE                              __end_ofPL28 147D  
                            __end_ofPL70 0F13                              __end_ofPL62 17DB  
                            __end_ofPL54 0EF0                              __end_ofPL46 116D  
                            __end_ofPL38 0ED8                              __end_ofPL80 0BB7  
                            __end_ofPL72 0F19                              __end_ofPL64 0F07  
                            __end_ofPL56 0EFC                              __end_ofPL48 17D0  
                            __end_ofPL90 072F                              __end_ofPL82 1177  
                            __end_ofPL74 1491                              __end_ofPL66 17E1  
                            __end_ofPL58 0BA3                              __end_ofPL92 149A  
                            __end_ofPL84 117E                              __end_ofPL76 0BAD  
                            __end_ofPL68 0F0D                              __end_ofPL94 0BBD  
                            __end_ofPL86 072A                              __end_ofPL78 0F23  
                            __end_ofPL96 0F28                              __end_ofPL88 17EA  
                            __end_ofPL98 0F2F                      start_initialization 0430  
                          ??_led_turnoff 0022      __size_of_led_state_night_release_cb 0003  
                 eeprom_read_buffer@addr 0027                   eeprom_read_buffer@pbuf 0023  
                       ??_pwm2_load_duty 0072                 __end_of_led_state_ble_cb 0F70  
                       led_set_preview@i 0027                 __end_of_led_state_day_cb 0A52  
               __end_of_led_state_off_cb 0B0A            ?_led_state_day_short_press_cb 0070  
             ??_led_state_ble_release_cb 0070                     ??_led_indicate_night 0022  
                       ??_pwm3_load_duty 0072                            _ble_send_data 10B3  
                             key_init@cb 0022                      led_set_preview@pbuf 0024  
              ??_led_update_night_bright 0022                                 ??___bmul 0023  
                               ??___lmul 002A                                 ??___wmul 0026  
                    __end_of_eeprom_read 0E37                              _CCPTMRSbits 029F  
                       ??_pwm4_load_duty 0072                              __pdataBANK2 0120  
              ??_led_update_night_status 0070                                 ??_memset 0028  
                               ??_strlen 0025                           _current_bright 00DA  
                      ?_rtc_is_leap_year 0075                         ??_pwm5_load_duty 0072  
                        led_turnon_max@i 0022                              __pbssBIGRAM 236D  
                         led_set_cycle@i 002C                                ___latbits 0002  
                       ble_send_data@len 002A               __end_of_ble_transmit_start 1159  
                          __pcstackBANK0 0020                            __pcstackBANK1 00A0  
                          __pcstackBANK2 015C                         ble_send_data@xor 0029  
                     ??_rtc_is_leap_year 0077                        ??_led_find_device 0023  
                 ??_ble_ready_to_receive 0022                      __end_of_led_set_pro 11BB  
                      __size_of_decrease 0023                           led_set_pro@len 002D  
                      __size_of_ble_init 005C                            ??_eusart_init 0024  
                    __end_of_led_preview 16EA                      __end_of_led_process 1F6B  
                 ??_ble_receive_complete 0022                    __size_of_eusart_write 0023  
                    __size_of_key_action 0012                 ?i1_led_update_day_bright 0070  
                            _ble_receive 1E18             __size_of_led_prepare_to_save 0001  
                       eeprom_write@addr 0023                        __size_of_app_init 002B  
                            _ble_ota_ack 10A1          ??_led_state_night_cont_press_cb 0079  
                    __end_of_led_turnoff 0E44                         eeprom_write@byte 0022  
                            _ble_process 1010                        __size_of_led_init 0002  
                      __size_of_led_ramp 0041                           ?_ble_send_data 0070  
                       _ble_receive_stop 103C                                __pnvBANK0 006B  
                              __pnvBANK1 00EE                                __pnvBANK2 0157  
                   led_pro_process@index 00A0                  ??_led_update_day_bright 0022  
                      __size_of_increase 0023                     led_pro_process@start 00BA  
                      __size_of_key_init 0008                        __size_of_key_read 000C  
                      __size_of_key_scan 0034                         ___lwdiv@dividend 0024  
                ??_led_update_day_status 0070                        __size_of_tmr0_isr 000B  
                        led_decrease@chn 0030                        __size_of_tmr2_isr 000C  
                              __ptext100 0B5A                                __ptext101 0B1A  
                              __ptext110 0AB6                                __ptext102 0B19  
                              __ptext111 0AC6                                __ptext103 0B59  
                              __ptext120 0F73                                __ptext112 0AC5  
                              __ptext104 0A1E                                __ptext121 0F84  
                              __ptext113 0B7C                                __ptext105 0A3C  
                              __ptext130 0799                                __ptext122 0B58  
                              __ptext114 0B5B                                __ptext106 0C43  
                      __size_of_osc_init 000A                                __ptext131 1E53  
                              __ptext123 0F83                                __ptext115 0B5C  
                              __ptext107 0C22                                __ptext132 1E3D  
                              __ptext124 0F72                                __ptext116 0A62  
                              __ptext108 0C23                                __ptext133 1E18  
                              __ptext125 0F71                                __ptext117 0B35  
                              __ptext109 0A52                                __ptext126 0F70  
                              __ptext118 0A94                                __ptext127 1DF5  
                              __ptext119 0A72                                __ptext128 0735  
                              __ptext129 077D                                 ?___awmod 0022  
                               ?___lldiv 002E                                 ?___lwdiv 0022  
                               ?___lwmod 0070                           key_scan@repeat 0065  
                      __size_of_rtc_init 000B                             decrease@delt 0024  
              __size_of_led_indicate_ble 0003                             decrease@psrc 0022  
              __size_of_led_indicate_day 0002                __size_of_led_indicate_off 0002  
                              __pswtext1 1822                                 ?_app_isr 0070  
                          _target_bright 00E4           ??_led_state_off_short_press_cb 0075  
                               _BAUD1CON 019F                             _eusart_write 112A  
               __end_of_led_stop_preview 0A18               __end_of_eusart_receive_isr 1E53  
                       key_scan@last_key 0066                 __size_of_ble_check_devid 0044  
                   __end_of_rtc_get_hour 16EC                                _gpio_init 04D9  
                          i1increase@max 0073          __end_of_led_update_night_bright 0E99  
                               ?_rtc_set 0070                __size_of_led_auto_process 019B  
                       ___lwdiv@quotient 0026    __end_of_led_state_night_long_press_cb 0C23  
 __size_of_led_state_night_long_press_cb 0001            _led_state_night_long_press_cb 0C22  
               __size_of_led_set_preview 0036          __end_of_led_update_night_status 0C43  
                           ??_ble_decode 0038       __end_of_led_state_night_release_cb 0C46  
             _led_state_night_release_cb 0C43                           ___wmul@product 0026  
                               _LATAbits 010C                                 _LATBbits 010D  
                               _LATCbits 010E              __end_of_eusart_transmit_isr 1E6D  
                              clear_ram0 1E0C                                _pwm1_init 0527  
                            _eeprom_read 0E28                 _led_state_off_release_cb 0B5A  
                              _tmr0_init 055A                                _pwm2_init 0531  
                               _PIE0bits 0090                                 _PIE1bits 0091  
     __size_ofi1_led_update_night_bright 002F                                _pwm3_init 053A  
                    __end_of_eusart_init 04D9                                _tmr2_init 0569  
                              _pwm4_init 0545                                _pwm5_init 0550  
    __end_of_led_state_ble_cont_press_cb 0F71              _led_state_ble_cont_press_cb 0F70  
                     _eeprom_read_buffer 0E11                  ??i1_led_prepare_to_save 0070  
                       led_pro_process@i 00C8                         led_pro_process@j 00C5  
         ??_led_state_day_short_press_cb 0075                      led_state_ble_cb@key 0079  
                               _PIR0bits 0010                                 _PIR1bits 0011  
                    led_auto_process@sec 004C                      led_auto_process@val 00A0  
                          key_action@key 0020                           _rtc_get_minute 16EC  
                         _rtc_get_second 16EF                      led_state_day_cb@key 0079  
                    ?_eeprom_read_buffer 0023                      pwm1_load_duty@value 0070  
               __size_of_led_pro_process 01AE                          _led_calc_bright 13C1  
                      _led_start_preview 0A11             __size_of_eeprom_write_buffer 0015  
                      ___wmul@multiplier 0022                              _led_set_pro 118A  
                     __end_of_ble_decode 090F                           i1decrease@delt 0072  
                     ?_led_start_preview 0070                              _led_preview 16E3  
                            _led_process 1F6A                           i1decrease@psrc 0070  
           ?_led_state_ble_long_press_cb 0070                                _tx_remain 015B  
        __end_ofi1_led_update_day_bright 0B58                               ?_gpio_init 0070  
                            _led_turnoff 0E37                                led_ramp@i 007A  
            __size_of_led_state_night_cb 0017                      ??_led_start_preview 0022  
               __end_of_led_turnoff_ramp 0EA4                        ___lmul@multiplier 0022  
             __end_ofi1_led_indicate_ble 0A3D               __end_ofi1_led_indicate_day 0B1A  
             __end_ofi1_led_indicate_off 0F84                __size_of_led_para_default 00CE  
                   ??_eeprom_read_buffer 0026         __end_of_led_state_ble_release_cb 0F73  
                          ??_rtc_process 0077                          ??_ble_send_data 0025  
                  eeprom_read_buffer@len 0025               ??_led_state_day_release_cb 0070  
                      ?_rtc_second_ready 0070                 __size_of_led_start_flash 0004  
                             ?_pwm1_init 0070                               ?_tmr0_init 0022  
                             ?_pwm2_init 0070                               ?_pwm3_init 0070  
                             ?_tmr2_init 0022                               ?_pwm4_init 0070  
                             ?_pwm5_init 0070                       ??_rtc_second_ready 0022  
                 __end_of_rtc_get_minute 16EF                   __end_of_rtc_get_second 16F2  
                           ??_key_action 007E   __end_of_led_state_night_short_press_cb 0A3C  
__size_of_led_state_night_short_press_cb 001E           _led_state_night_short_press_cb 0A1E  
          __size_ofi1_led_indicate_night 0001                __end_of_led_start_preview 0A15  
                       __size_of___awmod 0039                         __size_of___lldiv 003F  
                        ble_send_cmd@ack 002A                         __size_of___lwdiv 0025  
                        ble_send_cmd@cmd 0027                         __size_of___lwmod 0020  
                        ble_send_cmd@cnt 0033                          ble_send_cmd@idx 0035  
                        ble_send_cmd@len 0032                          ble_send_cmd@rev 0034  
                    led_state_off_cb@key 0079                         __size_of_app_isr 002A  
                          ?_ble_send_cmd 0027                      led_pro_process@flag 00B3  
                             _T0CON0bits 0017                      pwm2_load_duty@value 0070  
                               _decrease 107E                                 _checksum 0062  
                               _ble_init 057A      __end_of_led_state_off_cont_press_cb 0B5A  
            _led_state_off_cont_press_cb 0B59                    __end_ofi1_led_turnoff 0F91  
                        ___lwdiv@divisor 0022                          ___lwdiv@counter 0028  
                               __ptext10 1510                                 __ptext11 16E3  
                               __ptext20 0C46                                 __ptext12 16D3  
                               __ptext21 0E6B                                 __ptext13 16F2  
                               __ptext30 0E28                                 __ptext22 0E44  
                               __ptext14 11BB                                 __ptext31 1010  
                               __ptext23 0E37                                 __ptext15 13C1  
                               __ptext40 0942                                 __ptext32 103C  
                               __ptext24 062E                                 __ptext16 139C  
                               __ptext41 0960                                 __ptext33 102D  
                               __ptext25 06FC                                 __ptext17 140B  
                               __ptext50 0976                                 __ptext42 0EA4  
                               __ptext34 1026                                 __ptext26 0EAB  
                               __ptext18 1363                                 __ptext51 16BE  
                               __ptext43 118A                                 __ptext35 101F  
                               __ptext27 0EA9                                 __ptext19 0626  
                               __ptext60 1356                                 __ptext52 09C1  
                               __ptext44 0803                                 __ptext36 0839  
                               __ptext28 0EA7                                 __ptext61 10A1  
                               __ptext53 1E6D                                 __ptext45 0BEE  
                               __ptext37 0A15                                 __ptext29 0E11  
                               __ptext70 0569                                 __ptext62 1159  
                               __ptext54 0F9B                                 __ptext46 090F  
                               __ptext38 0A11                                 __ptext71 055A  
                               __ptext63 114D                                 __ptext55 0FD7  
                               __ptext47 0DF6                                 __ptext39 0A0D  
                               __ptext80 04BC                                 __ptext72 0550  
                               __ptext64 057A                                 __ptext56 1043  
                               __ptext48 0E99                                 __ptext73 0545  
                               __ptext65 1EB6                                 __ptext57 0975  
                               __ptext49 09E6                                 __ptext90 1E2A  
                               __ptext82 1E00                                 __ptext74 053A  
                               __ptext66 05D6                                 __ptext58 107E  
                               __ptext91 1F18                                 __ptext83 1F0B  
                               __ptext75 0531                                 __ptext67 1EFA  
                               __ptext59 10B3            ??_led_state_ble_long_press_cb 0070  
                               __ptext92 1F5E                                 __ptext84 1F6A  
                               __ptext76 0527                                 __ptext68 112A  
                               __ptext93 1F4C                                 __ptext85 1F6B  
                               __ptext77 051D                                 __ptext69 0491  
                               __ptext94 1FCC                                 __ptext86 1DE7  
                               __ptext78 1DED                                 __ptext95 0F5B  
                               __ptext87 1DE1                                 __ptext79 04D9  
                               __ptext96 0C0B                                 __ptext88 1DDB  
                               __ptext97 0A3D                                 __ptext89 1DD5  
                               __ptext98 0AF5                                 __ptext99 0B0A  
                               _app_init 0491                         __size_of_rtc_set 0015  
                            decrease@min 0025                              _eusart_init 04BC  
                               _led_init 0626                                 _led_ramp 1F6B  
                      ?_led_state_ble_cb 0079                        ?_led_state_day_cb 0079  
                     __end_of_key_action 1F5E                  __size_of_led_set_bright 0049  
                      ??_ble_check_devid 0036                        ?_led_state_off_cb 0079  
                               _increase 0FD7                  __size_of_led_set_custom 004B  
    __end_of_led_state_day_long_press_cb 0B5C              _led_state_day_long_press_cb 0B5B  
                     ??_led_state_ble_cb 007B                                 _key_func 0157  
                               _key_init 1DED                                 _key_read 1F5E  
         ?_led_state_night_long_press_cb 0070                                 _key_scan 1F18  
                     ??_led_state_day_cb 007B                            __size_of_main 0019  
                     ??_led_state_off_cb 007B                        ??_led_set_preview 0022  
                               _tmr0_isr 1DF5                                 _tmr2_isr 1E00  
                         ble_receive@rcv 0070                                 _osc_init 051D  
                    __end_of_rtc_process 077D                  __end_of_led_calc_bright 140B  
                             _RC1STAbits 019D                       led_auto_process@ct 004A  
                     led_auto_process@dt 00CD                       led_auto_process@et 00D2  
                     led_auto_process@st 00D5                       led_auto_process@tr 00BE  
                             _RB4PPSbits 0E9C                          ?_rtc_get_minute 0070  
                        ?_rtc_get_second 0070             ?_led_state_off_long_press_cb 0070  
                             _RC3PPSbits 0EA3                                 _rtc_init 07F5  
                             _RC4PPSbits 0EA4                                 int$flags 007E  
                             _RC5PPSbits 0EA5                        led_touch_cb@state 007C  
                             _RC6PPSbits 0EA6                          _led_find_device 16D3  
                             _RC7PPSbits 0EA7                 __size_of_led_turnon_ramp 001B  
                    _led_prepare_to_save 0975                         _led_indicate_ble 0EA4  
                       _led_indicate_day 0EA7                         _led_indicate_off 0EAB  
                  __size_of_rtc_get_hour 0002             ?_led_state_day_cont_press_cb 0070  
               __end_of_ble_receive_stop 1043                           ??_ble_send_cmd 0029  
                             _INTCONbits 000B                              _NVMCON1bits 0895  
                      ??_led_pro_process 004D                              ??_gpio_init 0022  
                 __size_of_led_para_init 01B0                              _tmr0_isr_cb 006B  
                       _led_auto_process 11BB                                 memset@p1 0022  
                            _tmr2_isr_cb 00EE                           ble_send_data@i 002B  
                         ble_send_data@p 002C                             ?_ble_receive 0070  
                               intlevel1 0000                     ?_led_prepare_to_save 0070  
                    pwm3_load_duty@value 0070                             ?_ble_ota_ack 0070  
                 __size_of_led_second_cb 0059                       led_pro_process@end 00BC  
                     led_pro_process@sec 004C                       led_pro_process@tmp 00AA  
                       ___lwmod@dividend 0072                             ?_ble_process 0070  
                 __size_of_led_save_para 0014                         ___lldiv@dividend 0032  
              __size_of_rtc_is_leap_year 001C                    led_state_ble_cb@state 007A  
                            ??_pwm1_init 0022                  led_calc_bright@duration 003C  
                 __size_of_led_set_cycle 0027                              ??_tmr0_init 0024  
                            ??_pwm2_init 0022                       _ble_transmit_start 114D  
                      _tmr2_isr_callback 1F0B                              ??_pwm3_init 0022  
            __size_of_led_indicate_night 0002                              ??_tmr2_init 0024  
                            ??_pwm4_init 0022                              _PPSLOCKbits 0E0F  
                            ??_pwm5_init 0022                   __size_of_led_set_power 001D  
                  led_auto_process@count 00D1     __size_of_led_state_ble_long_press_cb 0001  
         __size_of_led_update_day_bright 0027                       ?_tmr2_isr_callback 0070  
                      led_auto_process@i 00D9                        led_auto_process@j 00CC  
                      led_auto_process@k 00D4                        led_auto_process@p 00D7  
          __end_of_led_update_day_bright 0E6B                             _rtc_get_hour 16EA  
                __size_of_led_turnon_max 0016                        ??_led_start_flash 0022  
       __size_ofi1_led_update_day_bright 0023                                 rtc_set@i 0023  
                    ?_ble_transmit_start 0070               __size_of_led_start_preview 0004  
         __size_of_led_update_day_status 0020            ??_led_state_off_long_press_cb 0075  
          __end_of_led_update_day_status 0B7C        __size_of_led_state_ble_release_cb 0001  
                    ??_tmr2_isr_callback 007E                ?_led_state_ble_release_cb 0070  
                          __pstringtext1 1800                            __pstringtext2 1844  
                          __pstringtext3 1857                            __pstringtext4 1866  
                          __pstringtext5 0000                         ___lldiv@quotient 0036  
                        ___lwmod@divisor 0070                        ?_led_stop_preview 0070  
                               strlen@cp 0025                        _ble_transmit_stop 1159  
                        ___lwmod@counter 0074            ??_led_state_day_cont_press_cb 0079  
                        key_action@state 007D                       ??_led_stop_preview 0022  
                     ?_ble_transmit_stop 0070               ??_led_state_off_release_cb 0070  
                   ??_ble_transmit_start 0022                    led_state_day_cb@state 007A  
                       _led_para_default 062E                    ??_led_prepare_to_save 0022  
          __size_of_ble_ready_to_receive 0007                    eusart_receive_isr@rcv 0071  
                __size_of_pwm1_load_duty 0006         __end_of_led_state_day_release_cb 0B7E  
          __size_of_ble_receive_complete 0007              ?_led_state_night_release_cb 0070  
                            _rtc_process 0735                    led_calc_bright@period 0046  
              __end_of_tmr2_isr_callback 1F18                      _eeprom_write_buffer 171C  
                            _PWMTMRSbits 061F                            ?_eeprom_write 0022  
                  led_calc_bright@result 0042                      ??_ble_transmit_stop 0022  
                       led_increase@delt 002B                       _eusart_receive_isr 1E3D  
                           ?_eeprom_read 0070                 ?_led_update_night_bright 0070  
                __end_of_led_find_device 16E3                          led_increase@chn 0030  
                          _led_load_duty 013D                      pwm4_load_duty@value 0070  
                          _led_para_init 0C46                  __size_of_pwm2_load_duty 0006  
               ?_led_update_night_status 0070                         ?_led_calc_bright 003B  
         __size_ofi1_led_prepare_to_save 0001  
